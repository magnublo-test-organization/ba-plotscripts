<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 12:45:41.922" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.506" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:45:42.515" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:45:43.728" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:45:42.505" endtime="20201029 12:45:43.729"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.732" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:45:43.731" endtime="20201029 12:45:43.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.504" endtime="20201029 12:45:43.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:43.736" endtime="20201029 12:45:43.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.734" endtime="20201029 12:45:43.963"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.977" endtime="20201029 12:45:44.001"></status>
</kw>
<msg timestamp="20201029 12:45:44.001" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:43.975" endtime="20201029 12:45:44.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.004" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.002" endtime="20201029 12:45:44.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.007" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:44.005" endtime="20201029 12:45:44.007"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:43.972" endtime="20201029 12:45:44.008"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:43.969" endtime="20201029 12:45:44.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.968" endtime="20201029 12:45:44.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:44.013" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:44.012" endtime="20201029 12:45:44.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.010" endtime="20201029 12:45:44.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.967" endtime="20201029 12:45:44.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.967" endtime="20201029 12:45:44.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.015" endtime="20201029 12:45:44.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.965" endtime="20201029 12:45:44.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.018" endtime="20201029 12:45:44.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.964" endtime="20201029 12:45:44.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.502" endtime="20201029 12:45:44.020"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:44.026" endtime="20201029 12:45:44.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.025" endtime="20201029 12:45:44.046"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.061" endtime="20201029 12:45:44.077"></status>
</kw>
<msg timestamp="20201029 12:45:44.077" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.059" endtime="20201029 12:45:44.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.080" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.078" endtime="20201029 12:45:44.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.083" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:44.081" endtime="20201029 12:45:44.083"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:44.057" endtime="20201029 12:45:44.084"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:44.054" endtime="20201029 12:45:44.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.052" endtime="20201029 12:45:44.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:44.088" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:44.088" endtime="20201029 12:45:44.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.086" endtime="20201029 12:45:44.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.051" endtime="20201029 12:45:44.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.050" endtime="20201029 12:45:44.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.090" endtime="20201029 12:45:44.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.048" endtime="20201029 12:45:44.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.047" endtime="20201029 12:45:44.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.023" endtime="20201029 12:45:44.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.099" endtime="20201029 12:45:44.116"></status>
</kw>
<msg timestamp="20201029 12:45:44.116" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.098" endtime="20201029 12:45:44.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.118" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.117" endtime="20201029 12:45:44.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.119" endtime="20201029 12:45:44.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.095" endtime="20201029 12:45:44.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.094" endtime="20201029 12:45:44.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.126" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:45:44.125" endtime="20201029 12:45:44.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.128" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 12:45:44.127" endtime="20201029 12:45:44.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.123" endtime="20201029 12:45:44.129"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:44.020" endtime="20201029 12:45:44.129" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:45:42.047" endtime="20201029 12:45:44.132"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.188" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:45:44.200" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:45:45.382" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:45:44.187" endtime="20201029 12:45:45.384"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.392" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:45:45.387" endtime="20201029 12:45:45.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.185" endtime="20201029 12:45:45.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:45.406" endtime="20201029 12:45:45.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.398" endtime="20201029 12:45:45.656"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.668" endtime="20201029 12:45:45.685"></status>
</kw>
<msg timestamp="20201029 12:45:45.686" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['T! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.667" endtime="20201029 12:45:45.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.688" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['T! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.687" endtime="20201029 12:45:45.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.692" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:45.689" endtime="20201029 12:45:45.693"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:45.664" endtime="20201029 12:45:45.693"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:45.662" endtime="20201029 12:45:45.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.661" endtime="20201029 12:45:45.694"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:45.698" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:45.697" endtime="20201029 12:45:45.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.695" endtime="20201029 12:45:45.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.660" endtime="20201029 12:45:45.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.659" endtime="20201029 12:45:45.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.700" endtime="20201029 12:45:45.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.658" endtime="20201029 12:45:45.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.703" endtime="20201029 12:45:45.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.657" endtime="20201029 12:45:45.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.183" endtime="20201029 12:45:45.705"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:45.711" endtime="20201029 12:45:45.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.710" endtime="20201029 12:45:45.734"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.754" endtime="20201029 12:45:45.775"></status>
</kw>
<msg timestamp="20201029 12:45:45.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.752" endtime="20201029 12:45:45.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.778" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.777" endtime="20201029 12:45:45.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.781" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:45.779" endtime="20201029 12:45:45.781"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:45.749" endtime="20201029 12:45:45.782"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:45.745" endtime="20201029 12:45:45.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.743" endtime="20201029 12:45:45.783"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:45.788" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:45.786" endtime="20201029 12:45:45.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.784" endtime="20201029 12:45:45.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.742" endtime="20201029 12:45:45.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.739" endtime="20201029 12:45:45.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.789" endtime="20201029 12:45:45.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.737" endtime="20201029 12:45:45.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.735" endtime="20201029 12:45:45.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.708" endtime="20201029 12:45:45.792"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.800" endtime="20201029 12:45:45.813"></status>
</kw>
<msg timestamp="20201029 12:45:45.814" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.799" endtime="20201029 12:45:45.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.816" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.815" endtime="20201029 12:45:45.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.817" endtime="20201029 12:45:45.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.796" endtime="20201029 12:45:45.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.795" endtime="20201029 12:45:45.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.826" endtime="20201029 12:45:46.118"></status>
</kw>
<msg timestamp="20201029 12:45:46.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078467597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078468069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.824" endtime="20201029 12:45:46.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078467597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078468069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.122" endtime="20201029 12:45:46.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.130" endtime="20201029 12:45:46.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.822" endtime="20201029 12:45:46.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.820" endtime="20201029 12:45:46.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:46.137" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999998748243e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}...</msg>
<status status="PASS" starttime="20201029 12:45:46.134" endtime="20201029 12:45:46.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:46.142" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:45:46.138" endtime="20201029 12:45:46.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.146" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:46.145" endtime="20201029 12:45:46.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.149" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999869561e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201029 12:45:46.147" endtime="20201029 12:45:46.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.143" endtime="20201029 12:45:46.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.794" endtime="20201029 12:45:46.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.793" endtime="20201029 12:45:46.150"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.158" endtime="20201029 12:45:46.176"></status>
</kw>
<msg timestamp="20201029 12:45:46.177" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.156" endtime="20201029 12:45:46.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.179" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.178" endtime="20201029 12:45:46.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.180" endtime="20201029 12:45:46.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.154" endtime="20201029 12:45:46.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.152" endtime="20201029 12:45:46.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.189" endtime="20201029 12:45:46.510"></status>
</kw>
<msg timestamp="20201029 12:45:46.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078994458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078994931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.188" endtime="20201029 12:45:46.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078994458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078994931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.515" endtime="20201029 12:45:46.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.525" endtime="20201029 12:45:46.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.185" endtime="20201029 12:45:46.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.184" endtime="20201029 12:45:46.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:46.533" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201029 12:45:46.528" endtime="20201029 12:45:46.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:46.538" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999869561e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 12:45:46.534" endtime="20201029 12:45:46.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.542" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:46.541" endtime="20201029 12:45:46.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.544" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999869561e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07]</msg>
<status status="PASS" starttime="20201029 12:45:46.543" endtime="20201029 12:45:46.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.539" endtime="20201029 12:45:46.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.151" endtime="20201029 12:45:46.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.150" endtime="20201029 12:45:46.546"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.554" endtime="20201029 12:45:46.567"></status>
</kw>
<msg timestamp="20201029 12:45:46.568" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.552" endtime="20201029 12:45:46.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.570" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.569" endtime="20201029 12:45:46.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.571" endtime="20201029 12:45:46.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.550" endtime="20201029 12:45:46.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.548" endtime="20201029 12:45:46.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.581" endtime="20201029 12:45:46.890"></status>
</kw>
<msg timestamp="20201029 12:45:46.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.430762042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.430762514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.580" endtime="20201029 12:45:46.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.430762042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.430762514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.895" endtime="20201029 12:45:46.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.905" endtime="20201029 12:45:46.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.576" endtime="20201029 12:45:46.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.574" endtime="20201029 12:45:46.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:46.912" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 12:45:46.908" endtime="20201029 12:45:46.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:46.917" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07,...</msg>
<status status="PASS" starttime="20201029 12:45:46.913" endtime="20201029 12:45:46.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.922" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:46.920" endtime="20201029 12:45:46.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.925" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:45:46.923" endtime="20201029 12:45:46.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.918" endtime="20201029 12:45:46.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.547" endtime="20201029 12:45:46.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.546" endtime="20201029 12:45:46.926"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.934" endtime="20201029 12:45:46.949"></status>
</kw>
<msg timestamp="20201029 12:45:46.949" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.932" endtime="20201029 12:45:46.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.952" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.950" endtime="20201029 12:45:46.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.953" endtime="20201029 12:45:46.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.930" endtime="20201029 12:45:46.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.928" endtime="20201029 12:45:46.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.962" endtime="20201029 12:45:47.262"></status>
</kw>
<msg timestamp="20201029 12:45:47.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.812631097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.812631569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.960" endtime="20201029 12:45:47.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.812631097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.812631569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.268" endtime="20201029 12:45:47.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.278" endtime="20201029 12:45:47.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.958" endtime="20201029 12:45:47.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.956" endtime="20201029 12:45:47.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:47.285" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999999453227e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999999453227e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:45:47.281" endtime="20201029 12:45:47.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:47.291" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:45:47.286" endtime="20201029 12:45:47.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.295" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:47.294" endtime="20201029 12:45:47.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.298" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:45:47.297" endtime="20201029 12:45:47.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.292" endtime="20201029 12:45:47.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.927" endtime="20201029 12:45:47.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.926" endtime="20201029 12:45:47.300"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.308" endtime="20201029 12:45:47.325"></status>
</kw>
<msg timestamp="20201029 12:45:47.326" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.306" endtime="20201029 12:45:47.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.328" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.327" endtime="20201029 12:45:47.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.329" endtime="20201029 12:45:47.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.304" endtime="20201029 12:45:47.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.302" endtime="20201029 12:45:47.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.339" endtime="20201029 12:45:47.644"></status>
</kw>
<msg timestamp="20201029 12:45:47.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.185398236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.185398708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.337" endtime="20201029 12:45:47.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.185398236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.185398708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.649" endtime="20201029 12:45:47.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.659" endtime="20201029 12:45:47.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.335" endtime="20201029 12:45:47.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.333" endtime="20201029 12:45:47.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:47.675" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 12:45:47.663" endtime="20201029 12:45:47.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:47.680" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:45:47.676" endtime="20201029 12:45:47.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.684" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:47.683" endtime="20201029 12:45:47.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.687" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:45:47.686" endtime="20201029 12:45:47.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.681" endtime="20201029 12:45:47.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.300" endtime="20201029 12:45:47.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.300" endtime="20201029 12:45:47.689"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.698" endtime="20201029 12:45:47.714"></status>
</kw>
<msg timestamp="20201029 12:45:47.715" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.696" endtime="20201029 12:45:47.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.721" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.718" endtime="20201029 12:45:47.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.723" endtime="20201029 12:45:47.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.693" endtime="20201029 12:45:47.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.691" endtime="20201029 12:45:47.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.743" endtime="20201029 12:45:48.053"></status>
</kw>
<msg timestamp="20201029 12:45:48.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.552210556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.552211028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.740" endtime="20201029 12:45:48.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.552210556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.552211028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.058" endtime="20201029 12:45:48.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.068" endtime="20201029 12:45:48.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.734" endtime="20201029 12:45:48.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.730" endtime="20201029 12:45:48.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:48.076" level="INFO">${RESULT} = [{'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 12:45:48.072" endtime="20201029 12:45:48.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:48.083" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07,...</msg>
<status status="PASS" starttime="20201029 12:45:48.077" endtime="20201029 12:45:48.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.087" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:48.086" endtime="20201029 12:45:48.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.090" level="INFO">VALUE: [4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:45:48.088" endtime="20201029 12:45:48.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.084" endtime="20201029 12:45:48.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.689" endtime="20201029 12:45:48.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.689" endtime="20201029 12:45:48.091"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.099" endtime="20201029 12:45:48.115"></status>
</kw>
<msg timestamp="20201029 12:45:48.115" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.098" endtime="20201029 12:45:48.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.118" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.116" endtime="20201029 12:45:48.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.119" endtime="20201029 12:45:48.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.095" endtime="20201029 12:45:48.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.093" endtime="20201029 12:45:48.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.128" endtime="20201029 12:45:48.434"></status>
</kw>
<msg timestamp="20201029 12:45:48.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.930009833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.930010306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.126" endtime="20201029 12:45:48.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.930009833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.930010306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.441" endtime="20201029 12:45:48.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.453" endtime="20201029 12:45:48.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.124" endtime="20201029 12:45:48.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.122" endtime="20201029 12:45:48.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:48.462" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7200000019564925e-07},...</msg>
<status status="PASS" starttime="20201029 12:45:48.457" endtime="20201029 12:45:48.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:48.468" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:45:48.464" endtime="20201029 12:45:48.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.473" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:48.472" endtime="20201029 12:45:48.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.475" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:45:48.474" endtime="20201029 12:45:48.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.469" endtime="20201029 12:45:48.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.092" endtime="20201029 12:45:48.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.092" endtime="20201029 12:45:48.477"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.485" endtime="20201029 12:45:48.501"></status>
</kw>
<msg timestamp="20201029 12:45:48.502" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.483" endtime="20201029 12:45:48.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.504" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.503" endtime="20201029 12:45:48.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.505" endtime="20201029 12:45:48.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.480" endtime="20201029 12:45:48.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.479" endtime="20201029 12:45:48.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.515" endtime="20201029 12:45:48.832"></status>
</kw>
<msg timestamp="20201029 12:45:48.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.321980597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.321981069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.513" endtime="20201029 12:45:48.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.321980597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.321981069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.837" endtime="20201029 12:45:48.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.848" endtime="20201029 12:45:48.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.510" endtime="20201029 12:45:48.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.508" endtime="20201029 12:45:48.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:48.855" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 12:45:48.851" endtime="20201029 12:45:48.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:48.860" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:45:48.856" endtime="20201029 12:45:48.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.864" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:48.863" endtime="20201029 12:45:48.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.867" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:45:48.866" endtime="20201029 12:45:48.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.861" endtime="20201029 12:45:48.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.478" endtime="20201029 12:45:48.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.477" endtime="20201029 12:45:48.869"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.878" endtime="20201029 12:45:48.894"></status>
</kw>
<msg timestamp="20201029 12:45:48.894" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.876" endtime="20201029 12:45:48.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.897" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.895" endtime="20201029 12:45:48.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.898" endtime="20201029 12:45:48.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.873" endtime="20201029 12:45:48.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.871" endtime="20201029 12:45:48.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.907" endtime="20201029 12:45:49.217"></status>
</kw>
<msg timestamp="20201029 12:45:49.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.698847167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.698847639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.906" endtime="20201029 12:45:49.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.698847167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.698847639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.238" endtime="20201029 12:45:49.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.266" endtime="20201029 12:45:49.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.903" endtime="20201029 12:45:49.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.901" endtime="20201029 12:45:49.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:49.280" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:49.273" endtime="20201029 12:45:49.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:49.292" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 12:45:49.283" endtime="20201029 12:45:49.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.301" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:49.299" endtime="20201029 12:45:49.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.306" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:45:49.303" endtime="20201029 12:45:49.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.294" endtime="20201029 12:45:49.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.869" endtime="20201029 12:45:49.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.869" endtime="20201029 12:45:49.310"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.326" endtime="20201029 12:45:49.340"></status>
</kw>
<msg timestamp="20201029 12:45:49.341" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.324" endtime="20201029 12:45:49.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.343" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.342" endtime="20201029 12:45:49.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.344" endtime="20201029 12:45:49.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.319" endtime="20201029 12:45:49.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.315" endtime="20201029 12:45:49.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.353" endtime="20201029 12:45:49.663"></status>
</kw>
<msg timestamp="20201029 12:45:49.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.081661319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.081661792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.352" endtime="20201029 12:45:49.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.081661319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.081661792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.669" endtime="20201029 12:45:49.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.679" endtime="20201029 12:45:49.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.349" endtime="20201029 12:45:49.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.347" endtime="20201029 12:45:49.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:49.686" level="INFO">${RESULT} = [{'diff': 4.729999996122558e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000041769385e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201029 12:45:49.682" endtime="20201029 12:45:49.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:49.691" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07,...</msg>
<status status="PASS" starttime="20201029 12:45:49.687" endtime="20201029 12:45:49.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.696" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:49.695" endtime="20201029 12:45:49.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.698" level="INFO">VALUE: [4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:45:49.697" endtime="20201029 12:45:49.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.692" endtime="20201029 12:45:49.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.311" endtime="20201029 12:45:49.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.310" endtime="20201029 12:45:49.700"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.707" endtime="20201029 12:45:49.724"></status>
</kw>
<msg timestamp="20201029 12:45:49.724" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.706" endtime="20201029 12:45:49.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.727" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.725" endtime="20201029 12:45:49.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.728" endtime="20201029 12:45:49.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.703" endtime="20201029 12:45:49.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.702" endtime="20201029 12:45:49.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.738" endtime="20201029 12:45:50.062"></status>
</kw>
<msg timestamp="20201029 12:45:50.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.517015153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.517015625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.736" endtime="20201029 12:45:50.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.517015153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.517015625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.075" endtime="20201029 12:45:50.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.099" endtime="20201029 12:45:50.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.733" endtime="20201029 12:45:50.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.731" endtime="20201029 12:45:50.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:50.114" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201029 12:45:50.106" endtime="20201029 12:45:50.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:50.126" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 12:45:50.117" endtime="20201029 12:45:50.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.135" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:50.133" endtime="20201029 12:45:50.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.137" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07]</msg>
<status status="PASS" starttime="20201029 12:45:50.136" endtime="20201029 12:45:50.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.128" endtime="20201029 12:45:50.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.700" endtime="20201029 12:45:50.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.700" endtime="20201029 12:45:50.139"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.151" endtime="20201029 12:45:50.170"></status>
</kw>
<msg timestamp="20201029 12:45:50.170" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.149" endtime="20201029 12:45:50.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.174" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.172" endtime="20201029 12:45:50.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.176" endtime="20201029 12:45:50.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.144" endtime="20201029 12:45:50.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.142" endtime="20201029 12:45:50.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.187" endtime="20201029 12:45:50.506"></status>
</kw>
<msg timestamp="20201029 12:45:50.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.888855361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.888855833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.185" endtime="20201029 12:45:50.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.888855361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.888855833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.512" endtime="20201029 12:45:50.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.523" endtime="20201029 12:45:50.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.182" endtime="20201029 12:45:50.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.179" endtime="20201029 12:45:50.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:50.530" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:45:50.526" endtime="20201029 12:45:50.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:50.535" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:45:50.531" endtime="20201029 12:45:50.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.539" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:50.538" endtime="20201029 12:45:50.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.542" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:45:50.540" endtime="20201029 12:45:50.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.536" endtime="20201029 12:45:50.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.140" endtime="20201029 12:45:50.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.139" endtime="20201029 12:45:50.544"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.551" endtime="20201029 12:45:50.566"></status>
</kw>
<msg timestamp="20201029 12:45:50.567" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.550" endtime="20201029 12:45:50.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.569" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.568" endtime="20201029 12:45:50.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.570" endtime="20201029 12:45:50.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.547" endtime="20201029 12:45:50.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.546" endtime="20201029 12:45:50.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.579" endtime="20201029 12:45:50.912"></status>
</kw>
<msg timestamp="20201029 12:45:50.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.325124667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.325125139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.578" endtime="20201029 12:45:50.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.325124667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.325125139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.924" endtime="20201029 12:45:50.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.945" endtime="20201029 12:45:50.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.575" endtime="20201029 12:45:50.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.573" endtime="20201029 12:45:50.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:50.954" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07...</msg>
<status status="PASS" starttime="20201029 12:45:50.950" endtime="20201029 12:45:50.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:50.959" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:45:50.955" endtime="20201029 12:45:50.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.963" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:50.962" endtime="20201029 12:45:50.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.966" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:45:50.964" endtime="20201029 12:45:50.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.959" endtime="20201029 12:45:50.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.544" endtime="20201029 12:45:50.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.544" endtime="20201029 12:45:50.967"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.975" endtime="20201029 12:45:50.994"></status>
</kw>
<msg timestamp="20201029 12:45:50.994" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.974" endtime="20201029 12:45:50.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.997" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.995" endtime="20201029 12:45:50.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.998" endtime="20201029 12:45:51.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.971" endtime="20201029 12:45:51.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.969" endtime="20201029 12:45:51.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.008" endtime="20201029 12:45:51.322"></status>
</kw>
<msg timestamp="20201029 12:45:51.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.711157708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.711158181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.006" endtime="20201029 12:45:51.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.711157708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.711158181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.327" endtime="20201029 12:45:51.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.337" endtime="20201029 12:45:51.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.003" endtime="20201029 12:45:51.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.001" endtime="20201029 12:45:51.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:51.344" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 12:45:51.340" endtime="20201029 12:45:51.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:51.349" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:45:51.345" endtime="20201029 12:45:51.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.353" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:51.352" endtime="20201029 12:45:51.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.356" level="INFO">VALUE: [4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:45:51.354" endtime="20201029 12:45:51.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.350" endtime="20201029 12:45:51.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.968" endtime="20201029 12:45:51.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.968" endtime="20201029 12:45:51.357"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.365" endtime="20201029 12:45:51.381"></status>
</kw>
<msg timestamp="20201029 12:45:51.382" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.363" endtime="20201029 12:45:51.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.384" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.383" endtime="20201029 12:45:51.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.385" endtime="20201029 12:45:51.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.361" endtime="20201029 12:45:51.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.359" endtime="20201029 12:45:51.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.395" endtime="20201029 12:45:51.718"></status>
</kw>
<msg timestamp="20201029 12:45:51.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.126403472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.126403944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.393" endtime="20201029 12:45:51.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.126403472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.126403944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.729" endtime="20201029 12:45:51.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.751" endtime="20201029 12:45:51.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.390" endtime="20201029 12:45:51.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.389" endtime="20201029 12:45:51.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:51.759" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 12:45:51.755" endtime="20201029 12:45:51.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:51.767" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:45:51.760" endtime="20201029 12:45:51.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.771" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:51.770" endtime="20201029 12:45:51.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.773" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:45:51.772" endtime="20201029 12:45:51.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.767" endtime="20201029 12:45:51.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.358" endtime="20201029 12:45:51.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.358" endtime="20201029 12:45:51.775"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.783" endtime="20201029 12:45:51.797"></status>
</kw>
<msg timestamp="20201029 12:45:51.797" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.781" endtime="20201029 12:45:51.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.800" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.798" endtime="20201029 12:45:51.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.801" endtime="20201029 12:45:51.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.779" endtime="20201029 12:45:51.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.777" endtime="20201029 12:45:51.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.810" endtime="20201029 12:45:52.119"></status>
</kw>
<msg timestamp="20201029 12:45:52.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.505070806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.505071278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.809" endtime="20201029 12:45:52.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.505070806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.505071278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:52.124" endtime="20201029 12:45:52.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.134" endtime="20201029 12:45:52.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.806" endtime="20201029 12:45:52.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.804" endtime="20201029 12:45:52.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:52.142" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201029 12:45:52.138" endtime="20201029 12:45:52.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:52.146" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:45:52.143" endtime="20201029 12:45:52.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.151" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:52.150" endtime="20201029 12:45:52.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.154" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:45:52.152" endtime="20201029 12:45:52.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.147" endtime="20201029 12:45:52.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.776" endtime="20201029 12:45:52.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.775" endtime="20201029 12:45:52.155"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.164" endtime="20201029 12:45:52.180"></status>
</kw>
<msg timestamp="20201029 12:45:52.180" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.162" endtime="20201029 12:45:52.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.183" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.181" endtime="20201029 12:45:52.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.184" endtime="20201029 12:45:52.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.159" endtime="20201029 12:45:52.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.157" endtime="20201029 12:45:52.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.194" endtime="20201029 12:45:52.532"></status>
</kw>
<msg timestamp="20201029 12:45:52.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.912139306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.912139778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:52.192" endtime="20201029 12:45:52.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.912139306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.912139778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:52.544" endtime="20201029 12:45:52.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.566" endtime="20201029 12:45:52.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.189" endtime="20201029 12:45:52.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.188" endtime="20201029 12:45:52.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:52.573" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201029 12:45:52.569" endtime="20201029 12:45:52.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:52.578" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:45:52.574" endtime="20201029 12:45:52.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.583" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:52.582" endtime="20201029 12:45:52.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.589" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:45:52.584" endtime="20201029 12:45:52.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.579" endtime="20201029 12:45:52.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.156" endtime="20201029 12:45:52.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.156" endtime="20201029 12:45:52.591"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.605" endtime="20201029 12:45:52.621"></status>
</kw>
<msg timestamp="20201029 12:45:52.622" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.602" endtime="20201029 12:45:52.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.624" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.623" endtime="20201029 12:45:52.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.625" endtime="20201029 12:45:52.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.599" endtime="20201029 12:45:52.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.597" endtime="20201029 12:45:52.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.635" endtime="20201029 12:45:52.954"></status>
</kw>
<msg timestamp="20201029 12:45:52.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.283970944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.283971417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:52.633" endtime="20201029 12:45:52.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.283970944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.283971417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:52.959" endtime="20201029 12:45:52.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.969" endtime="20201029 12:45:52.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.631" endtime="20201029 12:45:52.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.629" endtime="20201029 12:45:52.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:52.976" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:52.973" endtime="20201029 12:45:52.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:52.982" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 12:45:52.978" endtime="20201029 12:45:52.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.987" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:52.986" endtime="20201029 12:45:52.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.989" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:45:52.988" endtime="20201029 12:45:52.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.983" endtime="20201029 12:45:52.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.593" endtime="20201029 12:45:52.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.592" endtime="20201029 12:45:52.991"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.999" endtime="20201029 12:45:53.013"></status>
</kw>
<msg timestamp="20201029 12:45:53.014" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.997" endtime="20201029 12:45:53.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.016" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.015" endtime="20201029 12:45:53.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.018" endtime="20201029 12:45:53.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.995" endtime="20201029 12:45:53.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.993" endtime="20201029 12:45:53.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.028" endtime="20201029 12:45:53.349"></status>
</kw>
<msg timestamp="20201029 12:45:53.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.716108264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.716108736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:53.026" endtime="20201029 12:45:53.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.716108264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.716108736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:53.354" endtime="20201029 12:45:53.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.364" endtime="20201029 12:45:53.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.023" endtime="20201029 12:45:53.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.021" endtime="20201029 12:45:53.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:53.372" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:53.368" endtime="20201029 12:45:53.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:53.376" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 12:45:53.373" endtime="20201029 12:45:53.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.381" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:53.380" endtime="20201029 12:45:53.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.384" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:45:53.382" endtime="20201029 12:45:53.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.377" endtime="20201029 12:45:53.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.992" endtime="20201029 12:45:53.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.991" endtime="20201029 12:45:53.385"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.394" endtime="20201029 12:45:53.410"></status>
</kw>
<msg timestamp="20201029 12:45:53.411" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.393" endtime="20201029 12:45:53.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.414" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.412" endtime="20201029 12:45:53.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.415" endtime="20201029 12:45:53.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.390" endtime="20201029 12:45:53.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.387" endtime="20201029 12:45:53.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.425" endtime="20201029 12:45:53.732"></status>
</kw>
<msg timestamp="20201029 12:45:53.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.098019486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.098019958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:53.423" endtime="20201029 12:45:53.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.098019486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.098019958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:53.737" endtime="20201029 12:45:53.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.747" endtime="20201029 12:45:53.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.420" endtime="20201029 12:45:53.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.418" endtime="20201029 12:45:53.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:53.755" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999991681666e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201029 12:45:53.751" endtime="20201029 12:45:53.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:53.760" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07,...</msg>
<status status="PASS" starttime="20201029 12:45:53.756" endtime="20201029 12:45:53.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.765" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:53.764" endtime="20201029 12:45:53.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.767" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:45:53.766" endtime="20201029 12:45:53.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.761" endtime="20201029 12:45:53.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.386" endtime="20201029 12:45:53.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.385" endtime="20201029 12:45:53.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.793" endtime="20201029 12:45:53.769"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:45.706" endtime="20201029 12:45:53.770" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:53.777" endtime="20201029 12:45:53.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.775" endtime="20201029 12:45:53.797"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.811" endtime="20201029 12:45:53.828"></status>
</kw>
<msg timestamp="20201029 12:45:53.829" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.809" endtime="20201029 12:45:53.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.831" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.830" endtime="20201029 12:45:53.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.834" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:53.832" endtime="20201029 12:45:53.835"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:53.806" endtime="20201029 12:45:53.835"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:53.804" endtime="20201029 12:45:53.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.803" endtime="20201029 12:45:53.836"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:53.841" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:53.841" endtime="20201029 12:45:53.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.837" endtime="20201029 12:45:53.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.802" endtime="20201029 12:45:53.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.801" endtime="20201029 12:45:53.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.843" endtime="20201029 12:45:53.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.799" endtime="20201029 12:45:53.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.798" endtime="20201029 12:45:53.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.774" endtime="20201029 12:45:53.846"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.855" endtime="20201029 12:45:53.873"></status>
</kw>
<msg timestamp="20201029 12:45:53.873" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.853" endtime="20201029 12:45:53.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.876" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.874" endtime="20201029 12:45:53.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.877" endtime="20201029 12:45:53.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.850" endtime="20201029 12:45:53.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.849" endtime="20201029 12:45:53.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.886" endtime="20201029 12:45:54.174"></status>
</kw>
<msg timestamp="20201029 12:45:54.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071921833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071927264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:53.885" endtime="20201029 12:45:54.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071921833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071927264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:54.186" endtime="20201029 12:45:54.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.196" endtime="20201029 12:45:54.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.882" endtime="20201029 12:45:54.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.880" endtime="20201029 12:45:54.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:54.203" level="INFO">${RESULT} = [{'diff': 5.431000000000186e-06}, {'diff': 5.430000000000712e-06}, {'diff': 5.4589999999993255e-06}, {'diff': 5.485999999998992e-06}, {'diff': 5.417000000007555e-06}, {'diff': 5.416999999993677e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:45:54.200" endtime="20201029 12:45:54.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:54.208" level="INFO">${OVERHEAD} = {'diff': [5.431000000000186e-06, 5.430000000000712e-06, 5.4589999999993255e-06, 5.485999999998992e-06, 5.417000000007555e-06, 5.416999999993677e-06, 5.444000000007221e-06, 5.443999999993343e-06, 5.403...</msg>
<status status="PASS" starttime="20201029 12:45:54.204" endtime="20201029 12:45:54.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.213" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:54.211" endtime="20201029 12:45:54.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.215" level="INFO">VALUE: [5.431000000000186e-06, 5.430000000000712e-06, 5.4589999999993255e-06, 5.485999999998992e-06, 5.417000000007555e-06, 5.416999999993677e-06, 5.444000000007221e-06, 5.443999999993343e-06, 5.403000000001046e-06, 5.443999999993343e-06, 5.443999999993343e-06, 5.431000000000186e-06, 5.388999999994537e-06, 5.444000000007221e-06, 5.457999999999852e-06, 5.4450000000066945e-06, 5.416999999993677e-06, 5.417000000007555e-06, 5.471999999992483e-06, 5.4450000000066945e-06, 5.417000000007555e-06, 5.444999999992817e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.416999999993677e-06, 5.430000000000712e-06, 5.444999999992817e-06, 5.375000000001906e-06, 5.417000000007555e-06, 5.431000000000186e-06, 5.4589999999993255e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.361000000009275e-06, 5.443999999993343e-06, 5.375000000001906e-06, 5.4450000000066945e-06, 5.416999999993677e-06, 5.444999999992817e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.4450000000066945e-06, 5.444000000007221e-06, 5.444000000007221e-06, 5.444999999992817e-06, 5.431000000000186e-06, 5.431000000000186e-06]</msg>
<status status="PASS" starttime="20201029 12:45:54.214" endtime="20201029 12:45:54.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.209" endtime="20201029 12:45:54.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.847" endtime="20201029 12:45:54.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.847" endtime="20201029 12:45:54.217"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.224" endtime="20201029 12:45:54.241"></status>
</kw>
<msg timestamp="20201029 12:45:54.241" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:54.223" endtime="20201029 12:45:54.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.244" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:54.242" endtime="20201029 12:45:54.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.245" endtime="20201029 12:45:54.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.220" endtime="20201029 12:45:54.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.219" endtime="20201029 12:45:54.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.254" endtime="20201029 12:45:54.561"></status>
</kw>
<msg timestamp="20201029 12:45:54.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072372417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072377792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:54.252" endtime="20201029 12:45:54.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072372417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072377792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:54.566" endtime="20201029 12:45:54.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.576" endtime="20201029 12:45:54.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.250" endtime="20201029 12:45:54.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.248" endtime="20201029 12:45:54.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:54.584" level="INFO">${RESULT} = [{'diff': 5.375000000001906e-06}, {'diff': 5.4450000000066945e-06}, {'diff': 5.416999999993677e-06}, {'diff': 5.444999999992817e-06}, {'diff': 5.430000000000712e-06}, {'diff': 5.431000000000186e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:45:54.580" endtime="20201029 12:45:54.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:54.589" level="INFO">${OVERHEAD} = {'diff': [5.375000000001906e-06, 5.4450000000066945e-06, 5.416999999993677e-06, 5.444999999992817e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.445...</msg>
<status status="PASS" starttime="20201029 12:45:54.585" endtime="20201029 12:45:54.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.593" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:54.592" endtime="20201029 12:45:54.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.596" level="INFO">VALUE: [5.375000000001906e-06, 5.4450000000066945e-06, 5.416999999993677e-06, 5.444999999992817e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.4450000000066945e-06, 5.444000000007221e-06, 5.444000000007221e-06, 5.444999999992817e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.403000000014924e-06, 5.458999999985448e-06, 5.431000000000186e-06, 5.499999999991623e-06, 5.444999999992817e-06, 5.4299999999729565e-06, 5.417000000007555e-06, 5.3749999999741505e-06, 5.444000000021099e-06, 5.47300000003359e-06, 5.4299999999729565e-06, 5.416000000035837e-06, 5.3609999999815194e-06, 5.4439999999655875e-06, 5.4299999999729565e-06, 5.4299999999729565e-06, 5.431000000000186e-06, 5.389000000022293e-06, 5.417000000007555e-06, 5.444999999992817e-06, 5.417000000007555e-06, 5.4159999999803254e-06, 5.4299999999729565e-06, 5.444999999992817e-06, 5.403000000014924e-06, 5.485999999998992e-06, 5.514000000039765e-06, 5.431000000000186e-06, 5.416000000035837e-06, 5.3749999999741505e-06, 5.430000000028468e-06, 5.4579999999582185e-06, 5.444000000021099e-06, 5.4719999999508495e-06, 5.417000000007555e-06, 5.4299999999729565e-06, 5.45800000001373e-06, 5.4159999999803254e-06, 5.45800000001373e-06, 5.458999999985448e-06, 5.416000000035837e-06, 5.458999999985448e-06, 5.403000000014924e-06, 5.444000000021099e-06, 5.431000000000186e-06, 5.430000000028468e-06, 5.444000000021099e-06, 5.430000000028468e-06, 5.48699999997071e-06, 5.431000000000186e-06]</msg>
<status status="PASS" starttime="20201029 12:45:54.595" endtime="20201029 12:45:54.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.590" endtime="20201029 12:45:54.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.217" endtime="20201029 12:45:54.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.217" endtime="20201029 12:45:54.597"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.605" endtime="20201029 12:45:54.621"></status>
</kw>
<msg timestamp="20201029 12:45:54.621" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:54.604" endtime="20201029 12:45:54.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.623" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:54.622" endtime="20201029 12:45:54.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.625" endtime="20201029 12:45:54.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.601" endtime="20201029 12:45:54.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.599" endtime="20201029 12:45:54.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.634" endtime="20201029 12:45:54.963"></status>
</kw>
<msg timestamp="20201029 12:45:54.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.429169875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.429175333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:54.633" endtime="20201029 12:45:54.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.429169875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.429175333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:54.968" endtime="20201029 12:45:54.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.978" endtime="20201029 12:45:54.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.629" endtime="20201029 12:45:54.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.628" endtime="20201029 12:45:54.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:54.985" level="INFO">${RESULT} = [{'diff': 5.45800000001373e-06}, {'diff': 5.4159999999803254e-06}, {'diff': 5.45800000001373e-06}, {'diff': 5.458999999985448e-06}, {'diff': 5.416000000035837e-06}, {'diff': 5.458999999985448e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:54.982" endtime="20201029 12:45:54.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:54.990" level="INFO">${OVERHEAD} = {'diff': [5.45800000001373e-06, 5.4159999999803254e-06, 5.45800000001373e-06, 5.458999999985448e-06, 5.416000000035837e-06, 5.458999999985448e-06, 5.403000000014924e-06, 5.444000000021099e-06, 5.43100...</msg>
<status status="PASS" starttime="20201029 12:45:54.986" endtime="20201029 12:45:54.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.996" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:54.993" endtime="20201029 12:45:54.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.999" level="INFO">VALUE: [5.45800000001373e-06, 5.4159999999803254e-06, 5.45800000001373e-06, 5.458999999985448e-06, 5.416000000035837e-06, 5.458999999985448e-06, 5.403000000014924e-06, 5.444000000021099e-06, 5.431000000000186e-06, 5.430000000028468e-06, 5.444000000021099e-06, 5.430000000028468e-06, 5.48699999997071e-06, 5.431000000000186e-06, 5.4029999999594125e-06, 5.417000000007555e-06, 5.403000000070435e-06, 5.444000000021099e-06, 5.444000000021099e-06, 5.4299999999729565e-06, 5.416000000035837e-06, 5.417000000007555e-06, 5.444000000021099e-06, 5.403000000070435e-06, 5.472000000006361e-06, 5.415999999924814e-06, 5.3749999999741505e-06, 5.431000000055697e-06, 5.416000000035837e-06, 5.4299999999729565e-06, 5.431000000055697e-06, 5.499999999991623e-06, 5.417000000007555e-06, 5.444999999992817e-06, 5.417000000007555e-06, 5.430000000083979e-06, 5.4299999999729565e-06, 5.444999999992817e-06, 5.444000000021099e-06, 5.4579999999582185e-06, 5.444999999992817e-06, 5.4579999999582185e-06, 5.444999999992817e-06, 5.4579999999582185e-06, 5.4029999999594125e-06, 5.387999999939552e-06, 5.444999999992817e-06, 5.389000000022293e-06, 5.444999999992817e-06, 5.444000000021099e-06, 5.444000000021099e-06, 5.430000000083979e-06, 5.444000000021099e-06, 5.443999999910076e-06, 5.444000000021099e-06, 5.444999999992817e-06, 5.471999999895338e-06, 5.444000000021099e-06, 5.444000000021099e-06, 5.417000000007555e-06, 5.444000000021099e-06, 5.430000000083979e-06, 5.4309999999446745e-06, 5.416000000035837e-06]</msg>
<status status="PASS" starttime="20201029 12:45:54.998" endtime="20201029 12:45:55.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.991" endtime="20201029 12:45:55.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.598" endtime="20201029 12:45:55.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.598" endtime="20201029 12:45:55.001"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.008" endtime="20201029 12:45:55.023"></status>
</kw>
<msg timestamp="20201029 12:45:55.024" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.007" endtime="20201029 12:45:55.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.026" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.025" endtime="20201029 12:45:55.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.027" endtime="20201029 12:45:55.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.004" endtime="20201029 12:45:55.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.003" endtime="20201029 12:45:55.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.036" endtime="20201029 12:45:55.335"></status>
</kw>
<msg timestamp="20201029 12:45:55.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.800076514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.800081958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.035" endtime="20201029 12:45:55.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.800076514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.800081958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.340" endtime="20201029 12:45:55.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.350" endtime="20201029 12:45:55.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.032" endtime="20201029 12:45:55.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.030" endtime="20201029 12:45:55.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:55.357" level="INFO">${RESULT} = [{'diff': 5.444000000021099e-06}, {'diff': 5.430000000083979e-06}, {'diff': 5.444000000021099e-06}, {'diff': 5.443999999910076e-06}, {'diff': 5.444000000021099e-06}, {'diff': 5.444999999992817e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:55.353" endtime="20201029 12:45:55.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:55.362" level="INFO">${OVERHEAD} = {'diff': [5.444000000021099e-06, 5.430000000083979e-06, 5.444000000021099e-06, 5.443999999910076e-06, 5.444000000021099e-06, 5.444999999992817e-06, 5.471999999895338e-06, 5.444000000021099e-06, 5.4440...</msg>
<status status="PASS" starttime="20201029 12:45:55.358" endtime="20201029 12:45:55.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.367" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:55.366" endtime="20201029 12:45:55.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.369" level="INFO">VALUE: [5.444000000021099e-06, 5.430000000083979e-06, 5.444000000021099e-06, 5.443999999910076e-06, 5.444000000021099e-06, 5.444999999992817e-06, 5.471999999895338e-06, 5.444000000021099e-06, 5.444000000021099e-06, 5.417000000007555e-06, 5.444000000021099e-06, 5.430000000083979e-06, 5.4309999999446745e-06, 5.416000000035837e-06, 5.4309999999446745e-06, 5.4999999998806e-06, 5.443999999910076e-06, 5.444999999992817e-06, 5.360999999926008e-06, 5.403000000070435e-06, 5.416000000035837e-06, 5.459000000040959e-06, 5.430000000083979e-06, 5.416999999896532e-06, 5.443999999910076e-06, 5.4579999999582185e-06, 5.444999999992817e-06, 5.402000000209739e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.40299999984839e-06, 5.4309999999446745e-06, 5.40299999984839e-06, 5.443999999910076e-06, 5.430000000083979e-06, 5.430000000083979e-06, 5.444999999992817e-06, 5.471999999784316e-06, 5.430000000083979e-06, 5.472000000006361e-06, 5.4579999999582185e-06, 5.416000000035837e-06, 5.416999999896532e-06, 5.4309999999446745e-06, 5.472000000006361e-06, 5.401999999987694e-06, 5.416000000035837e-06, 5.430000000083979e-06, 5.416999999896532e-06, 5.458999999818914e-06, 5.429999999861934e-06, 5.443999999910076e-06, 5.417000000118577e-06, 5.431000000166719e-06, 5.430000000083979e-06, 5.444000000132121e-06, 5.430000000083979e-06, 5.459000000040959e-06, 5.415999999813792e-06, 5.3479999999606065e-06, 5.416000000035837e-06, 5.4309999999446745e-06, 5.416999999896532e-06, 5.416999999896532e-06]</msg>
<status status="PASS" starttime="20201029 12:45:55.368" endtime="20201029 12:45:55.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.363" endtime="20201029 12:45:55.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.001" endtime="20201029 12:45:55.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.001" endtime="20201029 12:45:55.371"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.379" endtime="20201029 12:45:55.399"></status>
</kw>
<msg timestamp="20201029 12:45:55.400" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.377" endtime="20201029 12:45:55.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.402" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.401" endtime="20201029 12:45:55.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.404" endtime="20201029 12:45:55.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.374" endtime="20201029 12:45:55.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.373" endtime="20201029 12:45:55.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.413" endtime="20201029 12:45:55.734"></status>
</kw>
<msg timestamp="20201029 12:45:55.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.192065528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.192070958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.411" endtime="20201029 12:45:55.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.192065528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.192070958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.739" endtime="20201029 12:45:55.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.750" endtime="20201029 12:45:55.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.408" endtime="20201029 12:45:55.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.407" endtime="20201029 12:45:55.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:55.757" level="INFO">${RESULT} = [{'diff': 5.429999999861934e-06}, {'diff': 5.443999999910076e-06}, {'diff': 5.417000000118577e-06}, {'diff': 5.431000000166719e-06}, {'diff': 5.430000000083979e-06}, {'diff': 5.444000000132121e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:55.753" endtime="20201029 12:45:55.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:55.762" level="INFO">${OVERHEAD} = {'diff': [5.429999999861934e-06, 5.443999999910076e-06, 5.417000000118577e-06, 5.431000000166719e-06, 5.430000000083979e-06, 5.444000000132121e-06, 5.430000000083979e-06, 5.459000000040959e-06, 5.4159...</msg>
<status status="PASS" starttime="20201029 12:45:55.758" endtime="20201029 12:45:55.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.766" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:55.765" endtime="20201029 12:45:55.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.769" level="INFO">VALUE: [5.429999999861934e-06, 5.443999999910076e-06, 5.417000000118577e-06, 5.431000000166719e-06, 5.430000000083979e-06, 5.444000000132121e-06, 5.430000000083979e-06, 5.459000000040959e-06, 5.415999999813792e-06, 5.3479999999606065e-06, 5.416000000035837e-06, 5.4309999999446745e-06, 5.416999999896532e-06, 5.416999999896532e-06, 5.403000000070435e-06, 5.444999999992817e-06, 5.444999999992817e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.458000000180263e-06, 5.444999999992817e-06, 5.458000000180263e-06, 5.4309999999446745e-06, 5.4579999999582185e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.444999999992817e-06, 5.429999999861934e-06, 5.459000000040959e-06, 5.431000000166719e-06, 5.416000000035837e-06, 5.514000000150787e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.444999999992817e-06, 5.3330000000517686e-06, 5.443999999910076e-06, 5.444999999992817e-06, 5.416999999896532e-06, 5.4309999999446745e-06, 5.430000000083979e-06, 5.472000000006361e-06, 5.417000000118577e-06, 5.443999999910076e-06, 5.4309999999446745e-06, 5.444999999992817e-06, 5.416000000035837e-06, 5.416000000035837e-06, 5.4999999998806e-06, 5.416000000035837e-06, 5.430000000083979e-06, 5.3749999999741505e-06, 5.514000000150787e-06, 5.444999999992817e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.417000000118577e-06, 5.430000000083979e-06, 5.514000000150787e-06, 5.389000000022293e-06, 5.4579999999582185e-06, 5.4579999999582185e-06]</msg>
<status status="PASS" starttime="20201029 12:45:55.767" endtime="20201029 12:45:55.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.763" endtime="20201029 12:45:55.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.371" endtime="20201029 12:45:55.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.371" endtime="20201029 12:45:55.770"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.779" endtime="20201029 12:45:55.797"></status>
</kw>
<msg timestamp="20201029 12:45:55.797" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.777" endtime="20201029 12:45:55.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.800" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.798" endtime="20201029 12:45:55.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.801" endtime="20201029 12:45:55.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.774" endtime="20201029 12:45:55.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.773" endtime="20201029 12:45:55.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.810" endtime="20201029 12:45:56.110"></status>
</kw>
<msg timestamp="20201029 12:45:56.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.554786333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.554791833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.808" endtime="20201029 12:45:56.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.554786333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.554791833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.116" endtime="20201029 12:45:56.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.126" endtime="20201029 12:45:56.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.806" endtime="20201029 12:45:56.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.804" endtime="20201029 12:45:56.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:56.133" level="INFO">${RESULT} = [{'diff': 5.4999999998806e-06}, {'diff': 5.416000000035837e-06}, {'diff': 5.430000000083979e-06}, {'diff': 5.3749999999741505e-06}, {'diff': 5.514000000150787e-06}, {'diff': 5.444999999992817e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:56.130" endtime="20201029 12:45:56.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:56.139" level="INFO">${OVERHEAD} = {'diff': [5.4999999998806e-06, 5.416000000035837e-06, 5.430000000083979e-06, 5.3749999999741505e-06, 5.514000000150787e-06, 5.444999999992817e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.417...</msg>
<status status="PASS" starttime="20201029 12:45:56.134" endtime="20201029 12:45:56.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.143" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:56.142" endtime="20201029 12:45:56.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.146" level="INFO">VALUE: [5.4999999998806e-06, 5.416000000035837e-06, 5.430000000083979e-06, 5.3749999999741505e-06, 5.514000000150787e-06, 5.444999999992817e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.417000000118577e-06, 5.430000000083979e-06, 5.514000000150787e-06, 5.389000000022293e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.4309999999446745e-06, 5.444999999992817e-06, 5.389000000022293e-06, 5.403000000070435e-06, 5.444000000132121e-06, 5.430000000083979e-06, 5.431000000166719e-06, 5.415999999813792e-06, 5.443999999910076e-06, 5.527999999976885e-06, 5.487000000137243e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.403000000070435e-06, 5.444000000132121e-06, 5.444999999992817e-06, 5.444000000132121e-06, 5.444999999992817e-06, 5.429999999861934e-06, 5.417000000118577e-06, 5.443999999910076e-06, 5.444999999992817e-06, 5.416000000035837e-06, 5.443999999910076e-06, 5.417000000118577e-06, 5.444999999992817e-06, 5.486000000054503e-06, 5.472000000006361e-06, 5.417000000118577e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.444999999992817e-06, 5.472000000006361e-06, 5.444999999992817e-06, 5.389000000022293e-06, 5.4309999999446745e-06, 5.403000000070435e-06, 5.416000000035837e-06, 5.444000000132121e-06, 5.443999999910076e-06, 5.416000000035837e-06, 5.443999999910076e-06, 5.431000000166719e-06, 5.429999999861934e-06, 5.443999999910076e-06, 5.4309999999446745e-06, 5.430000000083979e-06, 5.444000000132121e-06, 5.459000000040959e-06]</msg>
<status status="PASS" starttime="20201029 12:45:56.145" endtime="20201029 12:45:56.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.140" endtime="20201029 12:45:56.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.771" endtime="20201029 12:45:56.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.771" endtime="20201029 12:45:56.148"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.156" endtime="20201029 12:45:56.173"></status>
</kw>
<msg timestamp="20201029 12:45:56.174" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.154" endtime="20201029 12:45:56.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.176" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.175" endtime="20201029 12:45:56.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.177" endtime="20201029 12:45:56.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.151" endtime="20201029 12:45:56.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.150" endtime="20201029 12:45:56.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.186" endtime="20201029 12:45:56.494"></status>
</kw>
<msg timestamp="20201029 12:45:56.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.946714847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.946720278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.185" endtime="20201029 12:45:56.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.946714847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.946720278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.500" endtime="20201029 12:45:56.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.509" endtime="20201029 12:45:56.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.182" endtime="20201029 12:45:56.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.180" endtime="20201029 12:45:56.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:56.516" level="INFO">${RESULT} = [{'diff': 5.4309999999446745e-06}, {'diff': 5.403000000070435e-06}, {'diff': 5.416000000035837e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.443999999910076e-06}, {'diff': 5.416000000035837e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:45:56.513" endtime="20201029 12:45:56.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:56.522" level="INFO">${OVERHEAD} = {'diff': [5.4309999999446745e-06, 5.403000000070435e-06, 5.416000000035837e-06, 5.444000000132121e-06, 5.443999999910076e-06, 5.416000000035837e-06, 5.443999999910076e-06, 5.431000000166719e-06, 5.429...</msg>
<status status="PASS" starttime="20201029 12:45:56.517" endtime="20201029 12:45:56.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.526" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:56.525" endtime="20201029 12:45:56.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.528" level="INFO">VALUE: [5.4309999999446745e-06, 5.403000000070435e-06, 5.416000000035837e-06, 5.444000000132121e-06, 5.443999999910076e-06, 5.416000000035837e-06, 5.443999999910076e-06, 5.431000000166719e-06, 5.429999999861934e-06, 5.443999999910076e-06, 5.4309999999446745e-06, 5.430000000083979e-06, 5.444000000132121e-06, 5.459000000040959e-06, 5.417000000118577e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.417000000118577e-06, 5.375000000196195e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.45899999959687e-06, 5.430000000306023e-06, 5.4579999999582185e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.444999999770772e-06, 5.416000000035837e-06, 5.4309999999446745e-06, 5.40299999984839e-06, 5.444999999770772e-06, 5.4309999999446745e-06, 5.416000000035837e-06, 5.389000000022293e-06, 5.430000000306023e-06, 5.387999999939552e-06, 5.416000000035837e-06, 5.403000000292479e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.389000000022293e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.444999999770772e-06, 5.389000000022293e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.443999999688032e-06, 5.443999999688032e-06, 5.416000000035837e-06, 5.444999999770772e-06, 5.486000000054503e-06, 5.445000000214861e-06, 5.4579999999582185e-06, 5.444999999770772e-06, 5.416000000035837e-06, 5.4579999999582185e-06, 5.486000000054503e-06, 5.445000000214861e-06, 5.444999999770772e-06, 5.4309999999446745e-06]</msg>
<status status="PASS" starttime="20201029 12:45:56.527" endtime="20201029 12:45:56.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.523" endtime="20201029 12:45:56.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.148" endtime="20201029 12:45:56.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.148" endtime="20201029 12:45:56.530"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.538" endtime="20201029 12:45:56.556"></status>
</kw>
<msg timestamp="20201029 12:45:56.556" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.536" endtime="20201029 12:45:56.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.559" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.557" endtime="20201029 12:45:56.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.560" endtime="20201029 12:45:56.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.534" endtime="20201029 12:45:56.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.532" endtime="20201029 12:45:56.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.568" endtime="20201029 12:45:56.886"></status>
</kw>
<msg timestamp="20201029 12:45:56.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.314456042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.314461486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.567" endtime="20201029 12:45:56.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.314456042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.314461486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.891" endtime="20201029 12:45:56.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.903" endtime="20201029 12:45:56.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.564" endtime="20201029 12:45:56.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.563" endtime="20201029 12:45:56.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:56.912" level="INFO">${RESULT} = [{'diff': 5.443999999688032e-06}, {'diff': 5.443999999688032e-06}, {'diff': 5.416000000035837e-06}, {'diff': 5.444999999770772e-06}, {'diff': 5.486000000054503e-06}, {'diff': 5.445000000214861e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:56.908" endtime="20201029 12:45:56.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:56.917" level="INFO">${OVERHEAD} = {'diff': [5.443999999688032e-06, 5.443999999688032e-06, 5.416000000035837e-06, 5.444999999770772e-06, 5.486000000054503e-06, 5.445000000214861e-06, 5.4579999999582185e-06, 5.444999999770772e-06, 5.416...</msg>
<status status="PASS" starttime="20201029 12:45:56.913" endtime="20201029 12:45:56.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.921" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:56.920" endtime="20201029 12:45:56.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.924" level="INFO">VALUE: [5.443999999688032e-06, 5.443999999688032e-06, 5.416000000035837e-06, 5.444999999770772e-06, 5.486000000054503e-06, 5.445000000214861e-06, 5.4579999999582185e-06, 5.444999999770772e-06, 5.416000000035837e-06, 5.4579999999582185e-06, 5.486000000054503e-06, 5.445000000214861e-06, 5.444999999770772e-06, 5.4309999999446745e-06, 5.389000000022293e-06, 5.416000000035837e-06, 5.445000000214861e-06, 5.388999999578203e-06, 5.360999999926008e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.4579999999582185e-06, 5.416000000035837e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.4729999998670564e-06, 5.443999999688032e-06, 5.4309999999446745e-06, 5.4579999999582185e-06, 5.445000000214861e-06, 5.3469999996558215e-06, 5.416000000035837e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.444999999770772e-06, 5.459000000040959e-06, 5.4579999999582185e-06, 5.486000000054503e-06, 5.4999999998806e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.430000000306023e-06, 5.417000000118577e-06, 5.429999999861934e-06, 5.4579999999582185e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.417000000118577e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.389000000022293e-06, 5.444000000132121e-06, 5.459000000040959e-06, 5.459000000040959e-06, 5.429999999861934e-06, 5.486000000054503e-06, 5.417000000118577e-06, 5.416000000035837e-06, 5.486000000054503e-06]</msg>
<status status="PASS" starttime="20201029 12:45:56.922" endtime="20201029 12:45:56.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.918" endtime="20201029 12:45:56.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.531" endtime="20201029 12:45:56.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.530" endtime="20201029 12:45:56.925"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.934" endtime="20201029 12:45:56.953"></status>
</kw>
<msg timestamp="20201029 12:45:56.953" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.933" endtime="20201029 12:45:56.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.956" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.954" endtime="20201029 12:45:56.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.957" endtime="20201029 12:45:56.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.929" endtime="20201029 12:45:56.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.927" endtime="20201029 12:45:56.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.966" endtime="20201029 12:45:57.296"></status>
</kw>
<msg timestamp="20201029 12:45:57.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.687211764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.687217194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.964" endtime="20201029 12:45:57.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.687211764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.687217194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.301" endtime="20201029 12:45:57.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.311" endtime="20201029 12:45:57.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.962" endtime="20201029 12:45:57.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.960" endtime="20201029 12:45:57.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:57.318" level="INFO">${RESULT} = [{'diff': 5.429999999861934e-06}, {'diff': 5.417000000118577e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.389000000022293e-06},...</msg>
<status status="PASS" starttime="20201029 12:45:57.315" endtime="20201029 12:45:57.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:57.324" level="INFO">${OVERHEAD} = {'diff': [5.429999999861934e-06, 5.417000000118577e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.389000000022293e-06, 5.444000000132121e-06, 5.459000000040959e-06, 5.45...</msg>
<status status="PASS" starttime="20201029 12:45:57.319" endtime="20201029 12:45:57.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.328" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:57.327" endtime="20201029 12:45:57.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.331" level="INFO">VALUE: [5.429999999861934e-06, 5.417000000118577e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.389000000022293e-06, 5.444000000132121e-06, 5.459000000040959e-06, 5.459000000040959e-06, 5.429999999861934e-06, 5.486000000054503e-06, 5.417000000118577e-06, 5.416000000035837e-06, 5.486000000054503e-06, 5.417000000118577e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.444999999770772e-06, 5.402000000209739e-06, 5.431000000388764e-06, 5.430000000306023e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.430000000306023e-06, 5.431000000388764e-06, 5.431000000388764e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.416000000035837e-06, 5.430000000306023e-06, 5.416000000035837e-06, 5.417000000118577e-06, 5.459000000040959e-06, 5.444000000132121e-06, 5.444999999770772e-06, 5.4729999998670564e-06, 5.429999999861934e-06, 5.444999999770772e-06, 5.445000000214861e-06, 5.471999999784316e-06, 5.40299999984839e-06, 5.403000000292479e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.4579999999582185e-06, 5.459000000040959e-06, 5.444999999770772e-06, 5.486000000054503e-06, 5.444999999770772e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.389000000022293e-06, 5.430000000306023e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.4999999998806e-06, 5.445000000214861e-06, 5.417000000118577e-06, 5.416999999674488e-06]</msg>
<status status="PASS" starttime="20201029 12:45:57.329" endtime="20201029 12:45:57.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.325" endtime="20201029 12:45:57.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.926" endtime="20201029 12:45:57.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.926" endtime="20201029 12:45:57.333"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.341" endtime="20201029 12:45:57.359"></status>
</kw>
<msg timestamp="20201029 12:45:57.359" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.339" endtime="20201029 12:45:57.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.362" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.360" endtime="20201029 12:45:57.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.363" endtime="20201029 12:45:57.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.337" endtime="20201029 12:45:57.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.335" endtime="20201029 12:45:57.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.373" endtime="20201029 12:45:57.689"></status>
</kw>
<msg timestamp="20201029 12:45:57.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.074145333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.074150792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.371" endtime="20201029 12:45:57.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.074145333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.074150792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.694" endtime="20201029 12:45:57.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.704" endtime="20201029 12:45:57.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.368" endtime="20201029 12:45:57.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.366" endtime="20201029 12:45:57.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:57.710" level="INFO">${RESULT} = [{'diff': 5.459000000040959e-06}, {'diff': 5.444999999770772e-06}, {'diff': 5.486000000054503e-06}, {'diff': 5.444999999770772e-06}, {'diff': 5.417000000118577e-06}, {'diff': 5.417000000118577e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:57.707" endtime="20201029 12:45:57.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:57.716" level="INFO">${OVERHEAD} = {'diff': [5.459000000040959e-06, 5.444999999770772e-06, 5.486000000054503e-06, 5.444999999770772e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.389000000022293e-06, 5.430000000306023e-06, 5.4579...</msg>
<status status="PASS" starttime="20201029 12:45:57.711" endtime="20201029 12:45:57.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.720" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:57.719" endtime="20201029 12:45:57.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.723" level="INFO">VALUE: [5.459000000040959e-06, 5.444999999770772e-06, 5.486000000054503e-06, 5.444999999770772e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.389000000022293e-06, 5.430000000306023e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.4999999998806e-06, 5.445000000214861e-06, 5.417000000118577e-06, 5.416999999674488e-06, 5.375000000196195e-06, 5.443999999688032e-06, 5.416000000035837e-06, 5.375000000196195e-06, 5.443999999688032e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.431000000388764e-06, 5.445000000214861e-06, 5.486999999693154e-06, 5.443999999688032e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.514000000150787e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.445000000214861e-06, 5.40299999984839e-06, 5.416000000035837e-06, 5.417000000118577e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.431000000388764e-06, 5.444000000132121e-06, 5.417000000118577e-06, 5.429999999861934e-06, 5.444999999770772e-06, 5.4579999999582185e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.430000000306023e-06, 5.430000000306023e-06, 5.40299999984839e-06, 5.444000000132121e-06, 5.4579999999582185e-06, 5.444000000132121e-06, 5.430000000306023e-06, 5.4579999999582185e-06, 5.471999999784316e-06, 5.459000000040959e-06, 5.444999999770772e-06, 5.4579999999582185e-06, 5.444999999770772e-06, 5.444999999770772e-06, 5.4309999999446745e-06, 5.443999999688032e-06, 5.4309999999446745e-06]</msg>
<status status="PASS" starttime="20201029 12:45:57.721" endtime="20201029 12:45:57.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.717" endtime="20201029 12:45:57.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.334" endtime="20201029 12:45:57.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.333" endtime="20201029 12:45:57.724"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.732" endtime="20201029 12:45:57.746"></status>
</kw>
<msg timestamp="20201029 12:45:57.747" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.730" endtime="20201029 12:45:57.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.749" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.748" endtime="20201029 12:45:57.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.750" endtime="20201029 12:45:57.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.728" endtime="20201029 12:45:57.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.726" endtime="20201029 12:45:57.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.761" endtime="20201029 12:45:58.096"></status>
</kw>
<msg timestamp="20201029 12:45:58.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.471112125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.471117569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.758" endtime="20201029 12:45:58.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.471112125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.471117569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.101" endtime="20201029 12:45:58.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.111" endtime="20201029 12:45:58.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.756" endtime="20201029 12:45:58.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.754" endtime="20201029 12:45:58.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:58.118" level="INFO">${RESULT} = [{'diff': 5.444000000132121e-06}, {'diff': 5.4579999999582185e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.430000000306023e-06}, {'diff': 5.4579999999582185e-06}, {'diff': 5.471999999784316e-06},...</msg>
<status status="PASS" starttime="20201029 12:45:58.114" endtime="20201029 12:45:58.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:58.122" level="INFO">${OVERHEAD} = {'diff': [5.444000000132121e-06, 5.4579999999582185e-06, 5.444000000132121e-06, 5.430000000306023e-06, 5.4579999999582185e-06, 5.471999999784316e-06, 5.459000000040959e-06, 5.444999999770772e-06, 5.45...</msg>
<status status="PASS" starttime="20201029 12:45:58.119" endtime="20201029 12:45:58.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.126" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:58.125" endtime="20201029 12:45:58.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.133" level="INFO">VALUE: [5.444000000132121e-06, 5.4579999999582185e-06, 5.444000000132121e-06, 5.430000000306023e-06, 5.4579999999582185e-06, 5.471999999784316e-06, 5.459000000040959e-06, 5.444999999770772e-06, 5.4579999999582185e-06, 5.444999999770772e-06, 5.444999999770772e-06, 5.4309999999446745e-06, 5.443999999688032e-06, 5.4309999999446745e-06, 5.40299999984839e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.416000000035837e-06, 5.417000000118577e-06, 5.4579999999582185e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.417000000118577e-06, 5.416999999674488e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.4579999999582185e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.40299999984839e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.4579999999582185e-06, 5.487000000137243e-06, 5.4309999999446745e-06, 5.45899999959687e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.472000000228405e-06, 5.459000000040959e-06, 5.4579999999582185e-06, 5.430000000306023e-06, 5.402000000209739e-06, 5.459000000040959e-06, 5.527999999976885e-06, 5.375000000196195e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.430000000306023e-06, 5.430000000306023e-06, 5.40299999984839e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.472000000228405e-06, 5.444999999770772e-06]</msg>
<status status="PASS" starttime="20201029 12:45:58.127" endtime="20201029 12:45:58.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.123" endtime="20201029 12:45:58.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.725" endtime="20201029 12:45:58.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.725" endtime="20201029 12:45:58.135"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.144" endtime="20201029 12:45:58.158"></status>
</kw>
<msg timestamp="20201029 12:45:58.158" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.143" endtime="20201029 12:45:58.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.161" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.159" endtime="20201029 12:45:58.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.162" endtime="20201029 12:45:58.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.140" endtime="20201029 12:45:58.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.137" endtime="20201029 12:45:58.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.172" endtime="20201029 12:45:58.482"></status>
</kw>
<msg timestamp="20201029 12:45:58.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.847088806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.847094208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.170" endtime="20201029 12:45:58.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.847088806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.847094208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.488" endtime="20201029 12:45:58.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.500" endtime="20201029 12:45:58.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.167" endtime="20201029 12:45:58.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.166" endtime="20201029 12:45:58.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:58.509" level="INFO">${RESULT} = [{'diff': 5.402000000209739e-06}, {'diff': 5.459000000040959e-06}, {'diff': 5.527999999976885e-06}, {'diff': 5.375000000196195e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.444000000132121e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:45:58.505" endtime="20201029 12:45:58.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:58.517" level="INFO">${OVERHEAD} = {'diff': [5.402000000209739e-06, 5.459000000040959e-06, 5.527999999976885e-06, 5.375000000196195e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.430000000306023e-06, 5.43...</msg>
<status status="PASS" starttime="20201029 12:45:58.510" endtime="20201029 12:45:58.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.521" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:58.520" endtime="20201029 12:45:58.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.523" level="INFO">VALUE: [5.402000000209739e-06, 5.459000000040959e-06, 5.527999999976885e-06, 5.375000000196195e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.430000000306023e-06, 5.430000000306023e-06, 5.40299999984839e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.472000000228405e-06, 5.444999999770772e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.403000000292479e-06, 5.374999999752106e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.444999999326683e-06, 5.415999999591747e-06, 5.417000000562666e-06, 5.415999999591747e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.4720000006724945e-06, 5.416000000479926e-06, 5.416999999674488e-06, 5.416999999674488e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.403000000292479e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.4729999998670564e-06, 5.416999999674488e-06, 5.403000000292479e-06, 5.50000000032469e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.457999999514129e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.444999999326683e-06, 5.444000000132121e-06, 5.403000000292479e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.45899999959687e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.513999999706698e-06, 5.444999999326683e-06, 5.416999999674488e-06, 5.444999999326683e-06]</msg>
<status status="PASS" starttime="20201029 12:45:58.522" endtime="20201029 12:45:58.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.517" endtime="20201029 12:45:58.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.136" endtime="20201029 12:45:58.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.135" endtime="20201029 12:45:58.525"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.533" endtime="20201029 12:45:58.551"></status>
</kw>
<msg timestamp="20201029 12:45:58.552" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.531" endtime="20201029 12:45:58.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.554" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.553" endtime="20201029 12:45:58.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.555" endtime="20201029 12:45:58.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.528" endtime="20201029 12:45:58.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.527" endtime="20201029 12:45:58.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.564" endtime="20201029 12:45:58.897"></status>
</kw>
<msg timestamp="20201029 12:45:58.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.250913597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.250919042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.563" endtime="20201029 12:45:58.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.250913597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.250919042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.901" endtime="20201029 12:45:58.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.911" endtime="20201029 12:45:58.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.560" endtime="20201029 12:45:58.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.559" endtime="20201029 12:45:58.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:58.919" level="INFO">${RESULT} = [{'diff': 5.444999999326683e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.403000000292479e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.416999999674488e-06}, {'diff': 5.444000000132121e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:58.914" endtime="20201029 12:45:58.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:58.924" level="INFO">${OVERHEAD} = {'diff': [5.444999999326683e-06, 5.444000000132121e-06, 5.403000000292479e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.45899999959687e-06, 5.42999...</msg>
<status status="PASS" starttime="20201029 12:45:58.920" endtime="20201029 12:45:58.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.928" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:58.927" endtime="20201029 12:45:58.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.930" level="INFO">VALUE: [5.444999999326683e-06, 5.444000000132121e-06, 5.403000000292479e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.45899999959687e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.513999999706698e-06, 5.444999999326683e-06, 5.416999999674488e-06, 5.444999999326683e-06, 5.416999999674488e-06, 5.4720000006724945e-06, 5.486000000054503e-06, 5.415999999591747e-06, 5.458000000402308e-06, 5.486000000054503e-06, 5.416999999674488e-06, 5.457999999514129e-06, 5.360999999481919e-06, 5.444999999326683e-06, 5.445000000214861e-06, 5.374999999752106e-06, 5.458000000402308e-06, 5.445000000214861e-06, 5.417000000562666e-06, 5.459000000485048e-06, 5.417000000562666e-06, 5.457999999514129e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.444999999326683e-06, 5.430000000750113e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.513999999706698e-06, 5.444000000132121e-06, 5.415999999591747e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.402999999404301e-06, 5.4439999992439425e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.457999999514129e-06, 5.4309999999446745e-06, 5.347000000099911e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.416000000479926e-06, 5.429999999861934e-06, 5.444999999326683e-06, 5.415999999591747e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.444999999326683e-06]</msg>
<status status="PASS" starttime="20201029 12:45:58.929" endtime="20201029 12:45:58.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.924" endtime="20201029 12:45:58.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.526" endtime="20201029 12:45:58.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.525" endtime="20201029 12:45:58.932"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.939" endtime="20201029 12:45:58.957"></status>
</kw>
<msg timestamp="20201029 12:45:58.958" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.938" endtime="20201029 12:45:58.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.960" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.959" endtime="20201029 12:45:58.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.961" endtime="20201029 12:45:58.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.935" endtime="20201029 12:45:58.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.934" endtime="20201029 12:45:58.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.971" endtime="20201029 12:45:59.293"></status>
</kw>
<msg timestamp="20201029 12:45:59.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.633689764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.633695111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.970" endtime="20201029 12:45:59.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.633689764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.633695111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.298" endtime="20201029 12:45:59.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.307" endtime="20201029 12:45:59.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.967" endtime="20201029 12:45:59.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.966" endtime="20201029 12:45:59.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:59.314" level="INFO">${RESULT} = [{'diff': 5.347000000099911e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.4309999999446745e-06},...</msg>
<status status="PASS" starttime="20201029 12:45:59.311" endtime="20201029 12:45:59.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:59.319" level="INFO">${OVERHEAD} = {'diff': [5.347000000099911e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.416000000479926e-06, 5.429999999861934e-06, 5.44...</msg>
<status status="PASS" starttime="20201029 12:45:59.315" endtime="20201029 12:45:59.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.324" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:59.323" endtime="20201029 12:45:59.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.326" level="INFO">VALUE: [5.347000000099911e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.416000000479926e-06, 5.429999999861934e-06, 5.444999999326683e-06, 5.415999999591747e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.444999999326683e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.514000000594876e-06, 5.389000000022293e-06, 5.374999999752106e-06, 5.4309999999446745e-06, 5.4439999992439425e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.444999999326683e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.459000000485048e-06, 5.45899999959687e-06, 5.403000000292479e-06, 5.487000000137243e-06, 5.50000000032469e-06, 5.416999999674488e-06, 5.457999999514129e-06, 5.415999999591747e-06, 5.360999999481919e-06, 5.431000000832853e-06, 5.444000000132121e-06, 5.402999999404301e-06, 5.403000000292479e-06, 5.415999999591747e-06, 5.486000000054503e-06, 5.45899999959687e-06, 5.458000000402308e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.458000000402308e-06, 5.416000000479926e-06, 5.403000000292479e-06, 5.458000000402308e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.444999999326683e-06, 5.471999999784316e-06, 5.429999999861934e-06, 5.458000000402308e-06, 5.431000000832853e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.401999999321561e-06, 5.445000000214861e-06, 5.429999999861934e-06]</msg>
<status status="PASS" starttime="20201029 12:45:59.325" endtime="20201029 12:45:59.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.320" endtime="20201029 12:45:59.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.933" endtime="20201029 12:45:59.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.932" endtime="20201029 12:45:59.328"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.335" endtime="20201029 12:45:59.354"></status>
</kw>
<msg timestamp="20201029 12:45:59.354" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.334" endtime="20201029 12:45:59.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.357" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.355" endtime="20201029 12:45:59.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.358" endtime="20201029 12:45:59.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.331" endtime="20201029 12:45:59.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.330" endtime="20201029 12:45:59.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.367" endtime="20201029 12:45:59.677"></status>
</kw>
<msg timestamp="20201029 12:45:59.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.028869917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.028875375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.365" endtime="20201029 12:45:59.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.028869917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.028875375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.682" endtime="20201029 12:45:59.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.692" endtime="20201029 12:45:59.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.363" endtime="20201029 12:45:59.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.361" endtime="20201029 12:45:59.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:59.702" level="INFO">${RESULT} = [{'diff': 5.458000000402308e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.444999999326683e-06}, {'diff': 5.471999999784316e-06},...</msg>
<status status="PASS" starttime="20201029 12:45:59.698" endtime="20201029 12:45:59.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:59.709" level="INFO">${OVERHEAD} = {'diff': [5.458000000402308e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.444999999326683e-06, 5.471999999784316e-06, 5.429999999861934e-06, 5.458000000402308e-06, 5.43...</msg>
<status status="PASS" starttime="20201029 12:45:59.704" endtime="20201029 12:45:59.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.715" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:59.714" endtime="20201029 12:45:59.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.719" level="INFO">VALUE: [5.458000000402308e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.444999999326683e-06, 5.471999999784316e-06, 5.429999999861934e-06, 5.458000000402308e-06, 5.431000000832853e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.401999999321561e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.417000000562666e-06, 5.416000000479926e-06, 5.444000000132121e-06, 5.486000000054503e-06, 5.348000000182651e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.417000000562666e-06, 5.429999999861934e-06, 5.403000000292479e-06, 5.4309999999446745e-06, 5.402999999404301e-06, 5.429999999861934e-06, 5.415999999591747e-06, 5.457999999514129e-06, 5.347000000099911e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.402999999404301e-06, 5.402000000209739e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.458000000402308e-06, 5.458000000402308e-06, 5.457999999514129e-06, 5.444999999326683e-06, 5.416999999674488e-06, 5.458000000402308e-06, 5.417000000562666e-06, 5.486000000054503e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.416000000479926e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.445000000214861e-06, 5.458000000402308e-06, 5.457999999514129e-06, 5.4439999992439425e-06, 5.459000000485048e-06, 5.444999999326683e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.389000000022293e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.444999999326683e-06]</msg>
<status status="PASS" starttime="20201029 12:45:59.717" endtime="20201029 12:45:59.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.711" endtime="20201029 12:45:59.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.328" endtime="20201029 12:45:59.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.328" endtime="20201029 12:45:59.721"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.730" endtime="20201029 12:45:59.750"></status>
</kw>
<msg timestamp="20201029 12:45:59.750" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.729" endtime="20201029 12:45:59.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.753" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.752" endtime="20201029 12:45:59.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.754" endtime="20201029 12:45:59.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.726" endtime="20201029 12:45:59.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.724" endtime="20201029 12:45:59.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.763" endtime="20201029 12:46:00.079"></status>
</kw>
<msg timestamp="20201029 12:46:00.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.415783069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.415788514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.762" endtime="20201029 12:46:00.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.415783069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.415788514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.084" endtime="20201029 12:46:00.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.093" endtime="20201029 12:46:00.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.759" endtime="20201029 12:46:00.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.757" endtime="20201029 12:46:00.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:00.100" level="INFO">${RESULT} = [{'diff': 5.445000000214861e-06}, {'diff': 5.458000000402308e-06}, {'diff': 5.457999999514129e-06}, {'diff': 5.4439999992439425e-06}, {'diff': 5.459000000485048e-06}, {'diff': 5.444999999326683e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:46:00.097" endtime="20201029 12:46:00.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:00.105" level="INFO">${OVERHEAD} = {'diff': [5.445000000214861e-06, 5.458000000402308e-06, 5.457999999514129e-06, 5.4439999992439425e-06, 5.459000000485048e-06, 5.444999999326683e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.445...</msg>
<status status="PASS" starttime="20201029 12:46:00.101" endtime="20201029 12:46:00.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.109" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:00.108" endtime="20201029 12:46:00.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.111" level="INFO">VALUE: [5.445000000214861e-06, 5.458000000402308e-06, 5.457999999514129e-06, 5.4439999992439425e-06, 5.459000000485048e-06, 5.444999999326683e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.389000000022293e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.444999999326683e-06, 5.403000000292479e-06, 5.403000000292479e-06, 5.444000000132121e-06, 5.417000000562666e-06, 5.374999999752106e-06, 5.444999999326683e-06, 5.458000000402308e-06, 5.416999999674488e-06, 5.459000000485048e-06, 5.527999999976885e-06, 5.444000000132121e-06, 5.431000000832853e-06, 5.403000000292479e-06, 5.374999999752106e-06, 5.444000000132121e-06, 5.402999999404301e-06, 5.416000000479926e-06, 5.389000000022293e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.347000000099911e-06, 5.416999999674488e-06, 5.374999999752106e-06, 5.417000000562666e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.4720000006724945e-06, 5.445000000214861e-06, 5.486000000054503e-06, 5.444999999326683e-06, 5.444999999326683e-06, 5.458000000402308e-06, 5.429999999861934e-06, 5.485999999166324e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.403000000292479e-06, 5.415999999591747e-06, 5.444000000132121e-06, 5.457999999514129e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.513999999706698e-06, 5.389000000022293e-06, 5.389000000022293e-06, 5.417000000562666e-06, 5.4309999999446745e-06]</msg>
<status status="PASS" starttime="20201029 12:46:00.110" endtime="20201029 12:46:00.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.106" endtime="20201029 12:46:00.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.722" endtime="20201029 12:46:00.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.722" endtime="20201029 12:46:00.113"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.121" endtime="20201029 12:46:00.138"></status>
</kw>
<msg timestamp="20201029 12:46:00.139" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.120" endtime="20201029 12:46:00.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.141" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.140" endtime="20201029 12:46:00.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.142" endtime="20201029 12:46:00.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.117" endtime="20201029 12:46:00.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.115" endtime="20201029 12:46:00.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.151" endtime="20201029 12:46:00.469"></status>
</kw>
<msg timestamp="20201029 12:46:00.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.796789736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.796795181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.150" endtime="20201029 12:46:00.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.796789736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.796795181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.474" endtime="20201029 12:46:00.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.484" endtime="20201029 12:46:00.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.147" endtime="20201029 12:46:00.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.146" endtime="20201029 12:46:00.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:00.491" level="INFO">${RESULT} = [{'diff': 5.445000000214861e-06}, {'diff': 5.429999999861934e-06}, {'diff': 5.403000000292479e-06}, {'diff': 5.415999999591747e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.457999999514129e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:46:00.487" endtime="20201029 12:46:00.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:00.496" level="INFO">${OVERHEAD} = {'diff': [5.445000000214861e-06, 5.429999999861934e-06, 5.403000000292479e-06, 5.415999999591747e-06, 5.444000000132121e-06, 5.457999999514129e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.44...</msg>
<status status="PASS" starttime="20201029 12:46:00.492" endtime="20201029 12:46:00.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.500" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:00.499" endtime="20201029 12:46:00.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.503" level="INFO">VALUE: [5.445000000214861e-06, 5.429999999861934e-06, 5.403000000292479e-06, 5.415999999591747e-06, 5.444000000132121e-06, 5.457999999514129e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.513999999706698e-06, 5.389000000022293e-06, 5.389000000022293e-06, 5.417000000562666e-06, 5.4309999999446745e-06, 5.403000000292479e-06, 5.430000000750113e-06, 5.4729999998670564e-06, 5.444000000132121e-06, 5.471999999784316e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.458000000402308e-06, 5.444000000132121e-06, 5.3610000003700975e-06, 5.429999999861934e-06, 5.374999999752106e-06, 5.402999999404301e-06, 5.416999999674488e-06, 5.403000000292479e-06, 5.416999999674488e-06, 5.486000000054503e-06, 5.402999999404301e-06, 5.416000000479926e-06, 5.416999999674488e-06, 5.445000000214861e-06, 5.445000000214861e-06, 5.445000000214861e-06, 5.458000000402308e-06, 5.4309999999446745e-06, 5.4720000006724945e-06, 5.374999999752106e-06, 5.417000000562666e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.487000000137243e-06, 5.499999999436511e-06, 5.4309999999446745e-06, 5.457999999514129e-06, 5.417000000562666e-06, 5.389000000022293e-06, 5.4309999999446745e-06, 5.403000000292479e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.45899999959687e-06, 5.445000000214861e-06, 5.444999999326683e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.416999999674488e-06, 5.4309999999446745e-06]</msg>
<status status="PASS" starttime="20201029 12:46:00.502" endtime="20201029 12:46:00.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.497" endtime="20201029 12:46:00.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.114" endtime="20201029 12:46:00.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.113" endtime="20201029 12:46:00.505"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.512" endtime="20201029 12:46:00.530"></status>
</kw>
<msg timestamp="20201029 12:46:00.530" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.511" endtime="20201029 12:46:00.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.533" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.531" endtime="20201029 12:46:00.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.534" endtime="20201029 12:46:00.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.508" endtime="20201029 12:46:00.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.506" endtime="20201029 12:46:00.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.543" endtime="20201029 12:46:00.853"></status>
</kw>
<msg timestamp="20201029 12:46:00.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.178706597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.178712014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.541" endtime="20201029 12:46:00.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.178706597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.178712014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.857" endtime="20201029 12:46:00.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.867" endtime="20201029 12:46:00.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.538" endtime="20201029 12:46:00.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.537" endtime="20201029 12:46:00.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:00.874" level="INFO">${RESULT} = [{'diff': 5.417000000562666e-06}, {'diff': 5.389000000022293e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.403000000292479e-06}, {'diff': 5.429999999861934e-06}, {'diff': 5.429999999861934e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:46:00.870" endtime="20201029 12:46:00.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:00.880" level="INFO">${OVERHEAD} = {'diff': [5.417000000562666e-06, 5.389000000022293e-06, 5.4309999999446745e-06, 5.403000000292479e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.45899999959687e-06, 5.445000000214861e-06, 5.4449...</msg>
<status status="PASS" starttime="20201029 12:46:00.875" endtime="20201029 12:46:00.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.884" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:00.883" endtime="20201029 12:46:00.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.886" level="INFO">VALUE: [5.417000000562666e-06, 5.389000000022293e-06, 5.4309999999446745e-06, 5.403000000292479e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.45899999959687e-06, 5.445000000214861e-06, 5.444999999326683e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.403000000292479e-06, 5.445000000214861e-06, 5.45899999959687e-06, 5.415999999591747e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.457999999514129e-06, 5.45899999959687e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.4720000006724945e-06, 5.471999999784316e-06, 5.458000000402308e-06, 5.4720000006724945e-06, 5.457999999514129e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.417000000562666e-06, 5.416000000479926e-06, 5.429999999861934e-06, 5.458000000402308e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.387999999939552e-06, 5.429999999861934e-06, 5.471999999784316e-06, 5.471999999784316e-06, 5.4309999999446745e-06, 5.471999999784316e-06, 5.486000000054503e-06, 5.401999999321561e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.4439999992439425e-06, 5.457999999514129e-06, 5.444000000132121e-06, 5.444999999326683e-06, 5.499999999436511e-06, 5.416999999674488e-06, 5.403000000292479e-06, 5.4439999992439425e-06, 5.485999999166324e-06, 5.403000000292479e-06, 5.444999999326683e-06, 5.403000000292479e-06, 5.4309999999446745e-06]</msg>
<status status="PASS" starttime="20201029 12:46:00.885" endtime="20201029 12:46:00.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.880" endtime="20201029 12:46:00.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.505" endtime="20201029 12:46:00.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.505" endtime="20201029 12:46:00.888"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.896" endtime="20201029 12:46:00.911"></status>
</kw>
<msg timestamp="20201029 12:46:00.912" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.894" endtime="20201029 12:46:00.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.914" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.913" endtime="20201029 12:46:00.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.915" endtime="20201029 12:46:00.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.891" endtime="20201029 12:46:00.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.890" endtime="20201029 12:46:00.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.925" endtime="20201029 12:46:01.242"></status>
</kw>
<msg timestamp="20201029 12:46:01.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.561499208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.561504639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.922" endtime="20201029 12:46:01.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.561499208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.561504639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:01.247" endtime="20201029 12:46:01.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.257" endtime="20201029 12:46:01.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.920" endtime="20201029 12:46:01.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.918" endtime="20201029 12:46:01.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:01.264" level="INFO">${RESULT} = [{'diff': 5.4309999999446745e-06}, {'diff': 5.4439999992439425e-06}, {'diff': 5.457999999514129e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.444999999326683e-06}, {'diff': 5.499999999436511e-06},...</msg>
<status status="PASS" starttime="20201029 12:46:01.260" endtime="20201029 12:46:01.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:01.269" level="INFO">${OVERHEAD} = {'diff': [5.4309999999446745e-06, 5.4439999992439425e-06, 5.457999999514129e-06, 5.444000000132121e-06, 5.444999999326683e-06, 5.499999999436511e-06, 5.416999999674488e-06, 5.403000000292479e-06, 5.44...</msg>
<status status="PASS" starttime="20201029 12:46:01.265" endtime="20201029 12:46:01.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.273" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:01.272" endtime="20201029 12:46:01.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.275" level="INFO">VALUE: [5.4309999999446745e-06, 5.4439999992439425e-06, 5.457999999514129e-06, 5.444000000132121e-06, 5.444999999326683e-06, 5.499999999436511e-06, 5.416999999674488e-06, 5.403000000292479e-06, 5.4439999992439425e-06, 5.485999999166324e-06, 5.403000000292479e-06, 5.444999999326683e-06, 5.403000000292479e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.45899999959687e-06, 5.4309999999446745e-06, 5.486000000054503e-06, 5.445000000214861e-06, 5.417000000562666e-06, 5.416999999674488e-06, 5.45899999959687e-06, 5.417000000562666e-06, 5.445000000214861e-06, 5.360999999481919e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.458000000402308e-06, 5.389000000022293e-06, 5.429999999861934e-06, 5.416000000479926e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.417000000562666e-06, 5.415999999591747e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.374999999752106e-06, 5.471999999784316e-06, 5.444999999326683e-06, 5.417000000562666e-06, 5.389000000022293e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.403000000292479e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.458000000402308e-06, 5.416999999674488e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.471999999784316e-06, 5.458000000402308e-06, 5.416999999674488e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.445000000214861e-06, 5.429999999861934e-06]</msg>
<status status="PASS" starttime="20201029 12:46:01.274" endtime="20201029 12:46:01.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.269" endtime="20201029 12:46:01.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.889" endtime="20201029 12:46:01.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.888" endtime="20201029 12:46:01.277"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.286" endtime="20201029 12:46:01.303"></status>
</kw>
<msg timestamp="20201029 12:46:01.304" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.284" endtime="20201029 12:46:01.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.306" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.305" endtime="20201029 12:46:01.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.307" endtime="20201029 12:46:01.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.281" endtime="20201029 12:46:01.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.279" endtime="20201029 12:46:01.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.316" endtime="20201029 12:46:01.639"></status>
</kw>
<msg timestamp="20201029 12:46:01.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.933357736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.933363194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:01.314" endtime="20201029 12:46:01.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.933357736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.933363194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:01.644" endtime="20201029 12:46:01.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.654" endtime="20201029 12:46:01.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.312" endtime="20201029 12:46:01.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.310" endtime="20201029 12:46:01.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:01.661" level="INFO">${RESULT} = [{'diff': 5.458000000402308e-06}, {'diff': 5.416999999674488e-06}, {'diff': 5.445000000214861e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.471999999784316e-06}, {'diff': 5.458000000402308e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:46:01.657" endtime="20201029 12:46:01.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:01.667" level="INFO">${OVERHEAD} = {'diff': [5.458000000402308e-06, 5.416999999674488e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.471999999784316e-06, 5.458000000402308e-06, 5.416999999674488e-06, 5.486000000054503e-06, 5.430...</msg>
<status status="PASS" starttime="20201029 12:46:01.662" endtime="20201029 12:46:01.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.671" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:01.670" endtime="20201029 12:46:01.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.674" level="INFO">VALUE: [5.458000000402308e-06, 5.416999999674488e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.471999999784316e-06, 5.458000000402308e-06, 5.416999999674488e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.415999999591747e-06, 5.374999999752106e-06, 5.416999999674488e-06, 5.417000000562666e-06, 5.430000000750113e-06, 5.403000000292479e-06, 5.402999999404301e-06, 5.403000000292479e-06, 5.444000000132121e-06, 5.389000000022293e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.403000000292479e-06, 5.445000000214861e-06, 5.4439999992439425e-06, 5.429999999861934e-06, 5.416000000479926e-06, 5.429999999861934e-06, 5.416000000479926e-06, 5.429999999861934e-06, 5.458000000402308e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.4439999992439425e-06, 5.429999999861934e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.347000000099911e-06, 5.459000000485048e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.430000000750113e-06, 5.4309999999446745e-06, 5.417000000562666e-06, 5.417000000562666e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.403000000292479e-06, 5.458000000402308e-06, 5.389000000022293e-06, 5.417000000562666e-06, 5.4309999999446745e-06, 5.4309999999446745e-06]</msg>
<status status="PASS" starttime="20201029 12:46:01.673" endtime="20201029 12:46:01.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.668" endtime="20201029 12:46:01.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.278" endtime="20201029 12:46:01.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.277" endtime="20201029 12:46:01.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.846" endtime="20201029 12:46:01.676"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:53.771" endtime="20201029 12:46:01.677" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:01.684" endtime="20201029 12:46:01.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.682" endtime="20201029 12:46:01.704"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.717" endtime="20201029 12:46:01.736"></status>
</kw>
<msg timestamp="20201029 12:46:01.737" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.716" endtime="20201029 12:46:01.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.739" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.738" endtime="20201029 12:46:01.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.743" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:01.740" endtime="20201029 12:46:01.743"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:01.713" endtime="20201029 12:46:01.744"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:01.710" endtime="20201029 12:46:01.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.709" endtime="20201029 12:46:01.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:01.751" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:01.750" endtime="20201029 12:46:01.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.745" endtime="20201029 12:46:01.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.708" endtime="20201029 12:46:01.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.708" endtime="20201029 12:46:01.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.753" endtime="20201029 12:46:01.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.706" endtime="20201029 12:46:01.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.705" endtime="20201029 12:46:01.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.681" endtime="20201029 12:46:01.756"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.764" endtime="20201029 12:46:01.790"></status>
</kw>
<msg timestamp="20201029 12:46:01.791" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.763" endtime="20201029 12:46:01.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.794" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.792" endtime="20201029 12:46:01.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.795" endtime="20201029 12:46:01.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.760" endtime="20201029 12:46:01.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.758" endtime="20201029 12:46:01.797"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.800" endtime="20201029 12:46:01.802"></status>
</kw>
<msg timestamp="20201029 12:46:01.802" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:01.798" endtime="20201029 12:46:01.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.806" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:01.805" endtime="20201029 12:46:01.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.809" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:01.808" endtime="20201029 12:46:01.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.803" endtime="20201029 12:46:01.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.814" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:01.813" endtime="20201029 12:46:01.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.816" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:01.815" endtime="20201029 12:46:01.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.810" endtime="20201029 12:46:01.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.823" endtime="20201029 12:46:02.109"></status>
</kw>
<msg timestamp="20201029 12:46:02.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073486403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073504917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:01.822" endtime="20201029 12:46:02.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073486403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073504917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.113" endtime="20201029 12:46:02.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.121" endtime="20201029 12:46:02.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.819" endtime="20201029 12:46:02.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.817" endtime="20201029 12:46:02.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:02.129" level="INFO">${RESULT} = [{'diff': 1.8513999999997255e-05}, {'diff': 2.2526999999994413e-05}, {'diff': 2.2499999999994746e-05}, {'diff': 2.2527999999993886e-05}, {'diff': 2.2443999999996467e-05}, {'diff': 2.2583999999992166e-...</msg>
<status status="PASS" starttime="20201029 12:46:02.125" endtime="20201029 12:46:02.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:02.134" level="INFO">${OVERHEAD} = {'diff': [1.8513999999997255e-05, 2.2526999999994413e-05, 2.2499999999994746e-05, 2.2527999999993886e-05, 2.2443999999996467e-05, 2.2583999999992166e-05, 2.2528000000007764e-05, 2.2526999999994413e-05...</msg>
<status status="PASS" starttime="20201029 12:46:02.130" endtime="20201029 12:46:02.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.138" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:46:02.137" endtime="20201029 12:46:02.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.141" level="INFO">VALUE: [1.8513999999997255e-05, 2.2526999999994413e-05, 2.2499999999994746e-05, 2.2527999999993886e-05, 2.2443999999996467e-05, 2.2583999999992166e-05, 2.2528000000007764e-05, 2.2526999999994413e-05, 2.2582999999992692e-05, 2.244499999999594e-05, 2.2486000000002115e-05, 2.2513999999987377e-05, 2.254100000000092e-05, 2.2542000000000395e-05, 2.248700000000159e-05, 2.2500000000008624e-05, 2.2457999999989098e-05, 2.2514000000001255e-05, 2.2486000000002115e-05, 2.2500000000008624e-05, 2.254100000000092e-05, 2.2527999999993886e-05, 2.2514000000001255e-05, 2.2486000000002115e-05, 2.2513999999987377e-05, 2.2554999999993552e-05, 2.2514000000001255e-05, 2.2513999999987377e-05, 2.2542000000000395e-05, 2.255500000000743e-05, 2.2499999999994746e-05, 2.2499999999994746e-05, 2.255500000000743e-05, 2.244499999999594e-05, 2.2500000000008624e-05, 2.2499999999994746e-05, 2.2526999999994413e-05, 2.2528000000007764e-05, 2.2486000000002115e-05, 2.2527999999993886e-05, 2.2528000000007764e-05, 2.2569999999999535e-05, 2.2471999999995607e-05, 2.2499999999994746e-05, 2.254100000000092e-05, 2.2554999999993552e-05, 2.2499999999994746e-05, 2.2514000000001255e-05, 2.2542000000000395e-05, 2.2528000000007764e-05]</msg>
<status status="PASS" starttime="20201029 12:46:02.140" endtime="20201029 12:46:02.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.135" endtime="20201029 12:46:02.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.756" endtime="20201029 12:46:02.142"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:01.678" endtime="20201029 12:46:02.143" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:02.150" endtime="20201029 12:46:02.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.149" endtime="20201029 12:46:02.170"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.184" endtime="20201029 12:46:02.203"></status>
</kw>
<msg timestamp="20201029 12:46:02.204" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.182" endtime="20201029 12:46:02.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.206" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.205" endtime="20201029 12:46:02.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.209" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:02.207" endtime="20201029 12:46:02.209"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:02.179" endtime="20201029 12:46:02.210"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:02.176" endtime="20201029 12:46:02.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.175" endtime="20201029 12:46:02.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:02.215" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:02.214" endtime="20201029 12:46:02.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.212" endtime="20201029 12:46:02.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.174" endtime="20201029 12:46:02.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.174" endtime="20201029 12:46:02.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.216" endtime="20201029 12:46:02.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.173" endtime="20201029 12:46:02.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.171" endtime="20201029 12:46:02.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.147" endtime="20201029 12:46:02.219"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.227" endtime="20201029 12:46:02.303"></status>
</kw>
<msg timestamp="20201029 12:46:02.304" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.226" endtime="20201029 12:46:02.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.309" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.306" endtime="20201029 12:46:02.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.311" endtime="20201029 12:46:02.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.223" endtime="20201029 12:46:02.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.221" endtime="20201029 12:46:02.316"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.321" endtime="20201029 12:46:02.324"></status>
</kw>
<msg timestamp="20201029 12:46:02.325" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:02.318" endtime="20201029 12:46:02.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.334" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:02.332" endtime="20201029 12:46:02.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.339" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:02.337" endtime="20201029 12:46:02.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.327" endtime="20201029 12:46:02.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.349" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:02.347" endtime="20201029 12:46:02.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.353" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:02.351" endtime="20201029 12:46:02.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.342" endtime="20201029 12:46:02.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.362" endtime="20201029 12:46:02.673"></status>
</kw>
<msg timestamp="20201029 12:46:02.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070277514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070297917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.360" endtime="20201029 12:46:02.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070277514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070297917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.686" endtime="20201029 12:46:02.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.698" endtime="20201029 12:46:02.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.357" endtime="20201029 12:46:02.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.355" endtime="20201029 12:46:02.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:02.705" level="INFO">${RESULT} = [{'diff': 2.040300000000217e-05}, {'diff': 2.9819999999999847e-05}, {'diff': 2.9736000000002427e-05}, {'diff': 2.9805000000007742e-05}, {'diff': 2.970900000000276e-05}, {'diff': 2.9777999999994198e-05...</msg>
<status status="PASS" starttime="20201029 12:46:02.701" endtime="20201029 12:46:02.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:02.710" level="INFO">${OVERHEAD} = {'diff': [2.040300000000217e-05, 2.9819999999999847e-05, 2.9736000000002427e-05, 2.9805000000007742e-05, 2.970900000000276e-05, 2.9777999999994198e-05, 2.9736000000002427e-05, 2.9764000000001567e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:02.706" endtime="20201029 12:46:02.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.715" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 12:46:02.714" endtime="20201029 12:46:02.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.718" level="INFO">VALUE: [2.040300000000217e-05, 2.9819999999999847e-05, 2.9736000000002427e-05, 2.9805000000007742e-05, 2.970900000000276e-05, 2.9777999999994198e-05, 2.9736000000002427e-05, 2.9764000000001567e-05, 2.972199999999592e-05, 2.9736000000002427e-05, 2.9736000000002427e-05, 2.9776999999994724e-05, 2.9804999999993864e-05, 2.9749999999995058e-05, 2.9722000000009796e-05, 2.9736000000002427e-05, 2.9764000000001567e-05, 2.9846999999999513e-05, 2.972199999999592e-05, 2.972199999999592e-05, 2.973599999998855e-05, 2.9819999999999847e-05, 2.9764000000001567e-05, 2.9806000000007216e-05, 2.9805999999993338e-05, 2.9666000000011516e-05, 2.970900000000276e-05, 2.9763000000002093e-05, 2.972199999999592e-05, 2.9777999999994198e-05, 2.9764000000001567e-05, 2.9736000000002427e-05, 2.9749999999995058e-05, 2.9792000000000707e-05, 2.972199999999592e-05, 2.9764000000001567e-05, 2.972199999999592e-05, 2.9791000000001233e-05, 2.9791000000001233e-05, 2.9792000000000707e-05, 2.9764000000001567e-05, 2.9805999999993338e-05, 2.9791000000001233e-05, 2.9764000000001567e-05, 2.9792000000000707e-05, 2.9777999999994198e-05, 2.976399999998769e-05, 2.9722000000009796e-05, 2.9819000000000373e-05, 2.9792000000000707e-05]</msg>
<status status="PASS" starttime="20201029 12:46:02.716" endtime="20201029 12:46:02.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.711" endtime="20201029 12:46:02.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.220" endtime="20201029 12:46:02.720"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:02.145" endtime="20201029 12:46:02.720" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:02.729" endtime="20201029 12:46:02.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.727" endtime="20201029 12:46:02.749"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.765" endtime="20201029 12:46:02.784"></status>
</kw>
<msg timestamp="20201029 12:46:02.785" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.763" endtime="20201029 12:46:02.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.788" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.786" endtime="20201029 12:46:02.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.791" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:02.789" endtime="20201029 12:46:02.791"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:02.760" endtime="20201029 12:46:02.792"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:02.758" endtime="20201029 12:46:02.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.756" endtime="20201029 12:46:02.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:02.797" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:02.796" endtime="20201029 12:46:02.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.794" endtime="20201029 12:46:02.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.755" endtime="20201029 12:46:02.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.755" endtime="20201029 12:46:02.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.799" endtime="20201029 12:46:02.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.753" endtime="20201029 12:46:02.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.750" endtime="20201029 12:46:02.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.725" endtime="20201029 12:46:02.801"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.810" endtime="20201029 12:46:02.982"></status>
</kw>
<msg timestamp="20201029 12:46:02.983" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.809" endtime="20201029 12:46:02.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.986" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.984" endtime="20201029 12:46:02.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.987" endtime="20201029 12:46:02.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.806" endtime="20201029 12:46:02.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.804" endtime="20201029 12:46:02.989"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.991" endtime="20201029 12:46:02.994"></status>
</kw>
<msg timestamp="20201029 12:46:02.995" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:02.990" endtime="20201029 12:46:02.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.999" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:02.998" endtime="20201029 12:46:03.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.002" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:03.001" endtime="20201029 12:46:03.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.996" endtime="20201029 12:46:03.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.007" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:03.006" endtime="20201029 12:46:03.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.009" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:03.008" endtime="20201029 12:46:03.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.003" endtime="20201029 12:46:03.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.017" endtime="20201029 12:46:03.331"></status>
</kw>
<msg timestamp="20201029 12:46:03.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075544569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075577458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.015" endtime="20201029 12:46:03.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075544569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075577458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.335" endtime="20201029 12:46:03.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.343" endtime="20201029 12:46:03.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.012" endtime="20201029 12:46:03.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.010" endtime="20201029 12:46:03.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:03.349" level="INFO">${RESULT} = [{'diff': 3.2888999999994284e-05}, {'diff': 5.005600000000665e-05}, {'diff': 5.008300000000632e-05}, {'diff': 5.00549999999933e-05}, {'diff': 5.012499999999809e-05}, {'diff': 5.0125000000011966e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:03.346" endtime="20201029 12:46:03.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:03.354" level="INFO">${OVERHEAD} = {'diff': [3.2888999999994284e-05, 5.005600000000665e-05, 5.008300000000632e-05, 5.00549999999933e-05, 5.012499999999809e-05, 5.0125000000011966e-05, 5.009699999999895e-05, 5.002800000000751e-05, 5.016...</msg>
<status status="PASS" starttime="20201029 12:46:03.350" endtime="20201029 12:46:03.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.359" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 12:46:03.358" endtime="20201029 12:46:03.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.361" level="INFO">VALUE: [3.2888999999994284e-05, 5.005600000000665e-05, 5.008300000000632e-05, 5.00549999999933e-05, 5.012499999999809e-05, 5.0125000000011966e-05, 5.009699999999895e-05, 5.002800000000751e-05, 5.016699999998986e-05, 5.009699999999895e-05, 5.0195000000002876e-05, 5.012499999999809e-05, 5.005500000000718e-05, 5.011099999999158e-05, 5.008400000000579e-05, 5.0167000000003736e-05, 5.0195000000002876e-05, 5.009699999999895e-05, 5.0125000000011966e-05, 5.007000000001316e-05, 5.013800000000512e-05, 5.005599999999277e-05, 5.015299999999723e-05, 5.011099999999158e-05, 5.0151999999997754e-05, 5.006899999998593e-05, 5.007000000001316e-05, 5.0111000000019335e-05, 5.016699999998986e-05, 5.008300000000632e-05, 5.009699999999895e-05, 5.004200000000014e-05, 5.012499999998421e-05, 5.013800000000512e-05, 5.012499999998421e-05, 5.011099999999158e-05, 5.0139000000004597e-05, 5.004200000000014e-05, 5.0069999999985404e-05, 5.0139000000004597e-05, 5.008300000000632e-05, 5.00549999999933e-05, 5.00549999999933e-05, 5.0125000000011966e-05, 5.015299999999723e-05, 5.006899999998593e-05, 5.011099999999158e-05, 5.015299999999723e-05, 5.011099999999158e-05, 5.0125000000011966e-05]</msg>
<status status="PASS" starttime="20201029 12:46:03.360" endtime="20201029 12:46:03.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.355" endtime="20201029 12:46:03.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.802" endtime="20201029 12:46:03.363"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:02.722" endtime="20201029 12:46:03.363" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:03.377" endtime="20201029 12:46:03.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.375" endtime="20201029 12:46:03.397"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.410" endtime="20201029 12:46:03.430"></status>
</kw>
<msg timestamp="20201029 12:46:03.430" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.408" endtime="20201029 12:46:03.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.433" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.431" endtime="20201029 12:46:03.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.436" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:03.434" endtime="20201029 12:46:03.436"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:03.406" endtime="20201029 12:46:03.437"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:03.404" endtime="20201029 12:46:03.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.402" endtime="20201029 12:46:03.438"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:03.441" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:03.440" endtime="20201029 12:46:03.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.438" endtime="20201029 12:46:03.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.402" endtime="20201029 12:46:03.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.401" endtime="20201029 12:46:03.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.443" endtime="20201029 12:46:03.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.400" endtime="20201029 12:46:03.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.398" endtime="20201029 12:46:03.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.374" endtime="20201029 12:46:03.446"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.455" endtime="20201029 12:46:03.483"></status>
</kw>
<msg timestamp="20201029 12:46:03.483" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.454" endtime="20201029 12:46:03.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.486" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.484" endtime="20201029 12:46:03.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.487" endtime="20201029 12:46:03.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.450" endtime="20201029 12:46:03.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.448" endtime="20201029 12:46:03.489"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.491" endtime="20201029 12:46:03.493"></status>
</kw>
<msg timestamp="20201029 12:46:03.494" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:03.490" endtime="20201029 12:46:03.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.498" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:03.497" endtime="20201029 12:46:03.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.500" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:03.499" endtime="20201029 12:46:03.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.494" endtime="20201029 12:46:03.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.505" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:03.504" endtime="20201029 12:46:03.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.507" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:03.506" endtime="20201029 12:46:03.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.501" endtime="20201029 12:46:03.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.514" endtime="20201029 12:46:03.799"></status>
</kw>
<msg timestamp="20201029 12:46:03.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073443208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073461361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.512" endtime="20201029 12:46:03.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073443208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073461361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.804" endtime="20201029 12:46:03.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.812" endtime="20201029 12:46:03.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.510" endtime="20201029 12:46:03.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.508" endtime="20201029 12:46:03.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:03.818" level="INFO">${RESULT} = [{'diff': 1.8153000000006858e-05}, {'diff': 1.8193999999999155e-05}, {'diff': 1.8195000000012507e-05}, {'diff': 1.816699999999949e-05}, {'diff': 1.8180000000006524e-05}, {'diff': 1.8179999999992646e-0...</msg>
<status status="PASS" starttime="20201029 12:46:03.815" endtime="20201029 12:46:03.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:03.823" level="INFO">${OVERHEAD} = {'diff': [1.8153000000006858e-05, 1.8193999999999155e-05, 1.8195000000012507e-05, 1.816699999999949e-05, 1.8180000000006524e-05, 1.8179999999992646e-05, 1.8181000000005998e-05, 1.8166000000000015e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:03.819" endtime="20201029 12:46:03.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.828" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 12:46:03.827" endtime="20201029 12:46:03.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.832" level="INFO">VALUE: [1.8153000000006858e-05, 1.8193999999999155e-05, 1.8195000000012507e-05, 1.816699999999949e-05, 1.8180000000006524e-05, 1.8179999999992646e-05, 1.8181000000005998e-05, 1.8166000000000015e-05, 1.819499999999863e-05, 1.8237000000004278e-05, 1.8179999999992646e-05, 1.8194000000013033e-05, 1.8193999999999155e-05, 1.8207999999991786e-05, 1.816699999999949e-05, 1.8153000000006858e-05, 1.8250000000011313e-05, 1.818099999999212e-05, 1.8277999999996575e-05, 1.8209000000005138e-05, 1.8179999999992646e-05, 1.8166000000000015e-05, 1.816699999999949e-05, 1.8167000000013367e-05, 1.8207999999991786e-05, 1.815299999999298e-05, 1.8193999999999155e-05, 1.8209000000005138e-05, 1.8181000000005998e-05, 1.8208000000005664e-05, 1.816699999999949e-05, 1.8166000000000015e-05, 1.8193999999999155e-05, 1.818099999999212e-05, 1.8207999999991786e-05, 1.8180000000006524e-05, 1.813900000000035e-05, 1.818099999999212e-05, 1.8277999999996575e-05, 1.8151999999993507e-05, 1.8209000000005138e-05, 1.8194000000013033e-05, 1.8208000000005664e-05, 1.816699999999949e-05, 1.8193999999999155e-05, 1.8195000000012507e-05, 1.815299999999298e-05, 1.8181000000005998e-05, 1.816699999999949e-05, 1.816699999999949e-05]</msg>
<status status="PASS" starttime="20201029 12:46:03.830" endtime="20201029 12:46:03.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.824" endtime="20201029 12:46:03.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.446" endtime="20201029 12:46:03.834"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:03.371" endtime="20201029 12:46:03.835" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:03.844" endtime="20201029 12:46:03.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.842" endtime="20201029 12:46:03.864"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.877" endtime="20201029 12:46:03.898"></status>
</kw>
<msg timestamp="20201029 12:46:03.898" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.876" endtime="20201029 12:46:03.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.900" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.899" endtime="20201029 12:46:03.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.904" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:03.902" endtime="20201029 12:46:03.905"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:03.873" endtime="20201029 12:46:03.905"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:03.871" endtime="20201029 12:46:03.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.869" endtime="20201029 12:46:03.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:03.910" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:03.909" endtime="20201029 12:46:03.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.907" endtime="20201029 12:46:03.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.869" endtime="20201029 12:46:03.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.868" endtime="20201029 12:46:03.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.911" endtime="20201029 12:46:03.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.867" endtime="20201029 12:46:03.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.865" endtime="20201029 12:46:03.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.840" endtime="20201029 12:46:03.914"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.922" endtime="20201029 12:46:03.997"></status>
</kw>
<msg timestamp="20201029 12:46:03.997" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.921" endtime="20201029 12:46:03.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.000" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.998" endtime="20201029 12:46:04.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.001" endtime="20201029 12:46:04.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.918" endtime="20201029 12:46:04.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.916" endtime="20201029 12:46:04.003"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.005" endtime="20201029 12:46:04.007"></status>
</kw>
<msg timestamp="20201029 12:46:04.007" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:04.004" endtime="20201029 12:46:04.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.012" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:04.011" endtime="20201029 12:46:04.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.014" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:04.013" endtime="20201029 12:46:04.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.008" endtime="20201029 12:46:04.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.019" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:04.018" endtime="20201029 12:46:04.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.021" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:04.020" endtime="20201029 12:46:04.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.016" endtime="20201029 12:46:04.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.028" endtime="20201029 12:46:04.321"></status>
</kw>
<msg timestamp="20201029 12:46:04.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074795097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074824764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.027" endtime="20201029 12:46:04.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074795097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074824764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.325" endtime="20201029 12:46:04.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.333" endtime="20201029 12:46:04.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.024" endtime="20201029 12:46:04.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.022" endtime="20201029 12:46:04.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:04.340" level="INFO">${RESULT} = [{'diff': 2.9666999999997112e-05}, {'diff': 2.9666999999997112e-05}, {'diff': 2.9584000000013044e-05}, {'diff': 2.9652000000005008e-05}, {'diff': 2.965300000000448e-05}, {'diff': 2.966700000001099e-05...</msg>
<status status="PASS" starttime="20201029 12:46:04.337" endtime="20201029 12:46:04.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:04.346" level="INFO">${OVERHEAD} = {'diff': [2.9666999999997112e-05, 2.9666999999997112e-05, 2.9584000000013044e-05, 2.9652000000005008e-05, 2.965300000000448e-05, 2.966700000001099e-05, 2.963900000001185e-05, 2.965199999999113e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:46:04.341" endtime="20201029 12:46:04.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.350" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 12:46:04.349" endtime="20201029 12:46:04.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.353" level="INFO">VALUE: [2.9666999999997112e-05, 2.9666999999997112e-05, 2.9584000000013044e-05, 2.9652000000005008e-05, 2.965300000000448e-05, 2.966700000001099e-05, 2.963900000001185e-05, 2.965199999999113e-05, 2.9652999999990604e-05, 2.9652999999990604e-05, 2.9666999999997112e-05, 2.9666999999997112e-05, 2.9610999999998833e-05, 2.9666999999997112e-05, 2.965300000000448e-05, 2.95970000000062e-05, 2.9666999999997112e-05, 2.967999999999027e-05, 2.9610999999998833e-05, 2.9680000000004148e-05, 2.9680000000004148e-05, 2.9610999999998833e-05, 2.970799999998941e-05, 2.9596999999992324e-05, 2.966700000001099e-05, 2.969399999999678e-05, 2.965199999999113e-05, 2.9680000000004148e-05, 2.9666999999997112e-05, 2.9666999999997112e-05, 2.9610999999998833e-05, 2.965300000000448e-05, 2.9569999999992658e-05, 2.9610999999998833e-05, 2.9638999999997973e-05, 2.9624999999991464e-05, 2.9638999999997973e-05, 2.9638999999997973e-05, 2.9680999999989743e-05, 2.9597999999991798e-05, 2.965300000000448e-05, 2.9638999999997973e-05, 2.9596999999992324e-05, 2.9610999999998833e-05, 2.962500000000534e-05, 2.9680000000004148e-05, 2.9666999999997112e-05, 2.9638999999997973e-05, 2.9611999999998306e-05, 2.9666999999997112e-05]</msg>
<status status="PASS" starttime="20201029 12:46:04.351" endtime="20201029 12:46:04.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.347" endtime="20201029 12:46:04.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.915" endtime="20201029 12:46:04.354"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:03.836" endtime="20201029 12:46:04.355" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:04.362" endtime="20201029 12:46:04.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.360" endtime="20201029 12:46:04.382"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.396" endtime="20201029 12:46:04.414"></status>
</kw>
<msg timestamp="20201029 12:46:04.414" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.394" endtime="20201029 12:46:04.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.417" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.416" endtime="20201029 12:46:04.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.420" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:04.418" endtime="20201029 12:46:04.420"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:04.392" endtime="20201029 12:46:04.421"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:04.388" endtime="20201029 12:46:04.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.387" endtime="20201029 12:46:04.422"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:04.425" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:04.425" endtime="20201029 12:46:04.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.423" endtime="20201029 12:46:04.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.386" endtime="20201029 12:46:04.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.386" endtime="20201029 12:46:04.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.427" endtime="20201029 12:46:04.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.384" endtime="20201029 12:46:04.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.383" endtime="20201029 12:46:04.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.359" endtime="20201029 12:46:04.430"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.438" endtime="20201029 12:46:04.615"></status>
</kw>
<msg timestamp="20201029 12:46:04.616" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.437" endtime="20201029 12:46:04.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.621" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.618" endtime="20201029 12:46:04.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.623" endtime="20201029 12:46:04.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.434" endtime="20201029 12:46:04.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.432" endtime="20201029 12:46:04.629"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.633" endtime="20201029 12:46:04.636"></status>
</kw>
<msg timestamp="20201029 12:46:04.637" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:04.630" endtime="20201029 12:46:04.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.645" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:04.643" endtime="20201029 12:46:04.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.650" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:04.648" endtime="20201029 12:46:04.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.639" endtime="20201029 12:46:04.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.660" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:04.658" endtime="20201029 12:46:04.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.672" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:04.663" endtime="20201029 12:46:04.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.654" endtime="20201029 12:46:04.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.685" endtime="20201029 12:46:04.980"></status>
</kw>
<msg timestamp="20201029 12:46:04.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070679875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070717875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.684" endtime="20201029 12:46:04.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070679875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070717875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.984" endtime="20201029 12:46:04.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.993" endtime="20201029 12:46:04.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.678" endtime="20201029 12:46:04.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.675" endtime="20201029 12:46:04.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:04.999" level="INFO">${RESULT} = [{'diff': 3.799999999999637e-05}, {'diff': 3.797199999999723e-05}, {'diff': 3.7944999999997564e-05}, {'diff': 3.798600000000374e-05}, {'diff': 3.797300000001058e-05}, {'diff': 3.7944999999997564e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:04.996" endtime="20201029 12:46:05.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:05.004" level="INFO">${OVERHEAD} = {'diff': [3.799999999999637e-05, 3.797199999999723e-05, 3.7944999999997564e-05, 3.798600000000374e-05, 3.797300000001058e-05, 3.7944999999997564e-05, 3.7972999999996704e-05, 3.7944999999997564e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:46:05.001" endtime="20201029 12:46:05.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.009" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 12:46:05.008" endtime="20201029 12:46:05.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.011" level="INFO">VALUE: [3.799999999999637e-05, 3.797199999999723e-05, 3.7944999999997564e-05, 3.798600000000374e-05, 3.797300000001058e-05, 3.7944999999997564e-05, 3.7972999999996704e-05, 3.7944999999997564e-05, 3.797199999999723e-05, 3.797199999999723e-05, 3.798600000000374e-05, 3.797199999999723e-05, 3.7902999999991915e-05, 3.7916999999998424e-05, 3.797199999999723e-05, 3.794399999999809e-05, 3.794399999999809e-05, 3.793100000000493e-05, 3.790300000000579e-05, 3.790200000000632e-05, 3.797199999999723e-05, 3.798599999998986e-05, 3.7972999999996704e-05, 3.797199999999723e-05, 3.794500000001144e-05, 3.792999999999158e-05, 3.787500000002053e-05, 3.797199999999723e-05, 3.791599999999895e-05, 3.790300000000579e-05, 3.797199999999723e-05, 3.79580000000046e-05, 3.797199999999723e-05, 3.797199999999723e-05, 3.790299999997804e-05, 3.798599999998986e-05, 3.798599999998986e-05, 3.792999999999158e-05, 3.7930999999991055e-05, 3.7916999999998424e-05, 3.7916999999998424e-05, 3.7888999999985407e-05, 3.790300000000579e-05, 3.797199999999723e-05, 3.790300000000579e-05, 3.791599999999895e-05, 3.79580000000046e-05, 3.792999999999158e-05, 3.7944999999983686e-05, 3.798599999998986e-05]</msg>
<status status="PASS" starttime="20201029 12:46:05.010" endtime="20201029 12:46:05.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.005" endtime="20201029 12:46:05.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.430" endtime="20201029 12:46:05.013"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:04.356" endtime="20201029 12:46:05.014" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:05.021" endtime="20201029 12:46:05.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.019" endtime="20201029 12:46:05.041"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.055" endtime="20201029 12:46:05.078"></status>
</kw>
<msg timestamp="20201029 12:46:05.079" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:05.053" endtime="20201029 12:46:05.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.082" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:05.080" endtime="20201029 12:46:05.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.088" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:05.085" endtime="20201029 12:46:05.088"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:05.051" endtime="20201029 12:46:05.089"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:05.048" endtime="20201029 12:46:05.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.047" endtime="20201029 12:46:05.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:05.098" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:05.097" endtime="20201029 12:46:05.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.093" endtime="20201029 12:46:05.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.046" endtime="20201029 12:46:05.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.045" endtime="20201029 12:46:05.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.100" endtime="20201029 12:46:05.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.043" endtime="20201029 12:46:05.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.042" endtime="20201029 12:46:05.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.018" endtime="20201029 12:46:05.105"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.109" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:46:05.117" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:46:06.309" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:46:05.108" endtime="20201029 12:46:06.309"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.312" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:46:06.310" endtime="20201029 12:46:06.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.106" endtime="20201029 12:46:06.313"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:06.316" endtime="20201029 12:46:06.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.314" endtime="20201029 12:46:06.337"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.346" endtime="20201029 12:46:06.357"></status>
</kw>
<msg timestamp="20201029 12:46:06.358" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.344" endtime="20201029 12:46:06.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.360" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.359" endtime="20201029 12:46:06.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.361" endtime="20201029 12:46:06.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.341" endtime="20201029 12:46:06.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.340" endtime="20201029 12:46:06.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.371" endtime="20201029 12:46:06.660"></status>
</kw>
<msg timestamp="20201029 12:46:06.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020136028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020155069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.369" endtime="20201029 12:46:06.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020136028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020155069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.664" endtime="20201029 12:46:06.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.673" endtime="20201029 12:46:06.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.367" endtime="20201029 12:46:06.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.365" endtime="20201029 12:46:06.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:06.680" level="INFO">${PHILIP_RES} = [{'diff': 1.904100000000089e-05}, {'diff': 1.8957999999999475e-05}, {'diff': 1.897299999999852e-05}, {'diff': 1.904099999999742e-05}, {'diff': 1.8930000000000335e-05}, {'diff': 1.8943999999999905e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:06.676" endtime="20201029 12:46:06.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:06.685" level="INFO">${RESULT} = {'diff': [1.904100000000089e-05, 1.8957999999999475e-05, 1.897299999999852e-05, 1.904099999999742e-05, 1.8930000000000335e-05, 1.8943999999999905e-05, 1.8985999999998615e-05, 1.894499999999938e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:46:06.681" endtime="20201029 12:46:06.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.690" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:06.688" endtime="20201029 12:46:06.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.706" level="INFO">VALUE: [1.904100000000089e-05, 1.8957999999999475e-05, 1.897299999999852e-05, 1.904099999999742e-05, 1.8930000000000335e-05, 1.8943999999999905e-05, 1.8985999999998615e-05, 1.894499999999938e-05, 1.8943999999999905e-05, 1.8999999999998185e-05, 1.8985999999998615e-05, 1.8971999999999045e-05, 1.88890000000011e-05, 1.8943999999999905e-05, 1.8973000000001988e-05, 1.902700000000132e-05, 1.8986000000002085e-05, 1.8943999999999905e-05, 1.8957999999999475e-05, 1.9000000000001654e-05, 1.9014000000001224e-05, 1.897299999999852e-05, 1.887499999999806e-05, 1.8971999999999045e-05, 1.8999999999998185e-05, 1.8902000000001196e-05, 1.8943999999999905e-05, 1.8985999999998615e-05, 1.8985999999998615e-05, 1.8985999999998615e-05, 1.8971999999999045e-05, 1.8985999999998615e-05, 1.9014000000001224e-05, 1.8958000000002945e-05, 1.8943999999999905e-05, 1.895900000000242e-05, 1.8971999999999045e-05, 1.894499999999938e-05, 1.9013999999997755e-05, 1.888899999999763e-05, 1.8972000000002515e-05, 1.8999999999998185e-05, 1.9000000000001654e-05, 1.891700000000024e-05, 1.894499999999938e-05, 1.902700000000132e-05, 1.8986000000002085e-05, 1.8985999999998615e-05, 1.894499999999938e-05, 1.8971999999999045e-05]</msg>
<status status="PASS" starttime="20201029 12:46:06.700" endtime="20201029 12:46:06.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.686" endtime="20201029 12:46:06.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.338" endtime="20201029 12:46:06.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.314" endtime="20201029 12:46:06.717"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:06.729" endtime="20201029 12:46:06.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.723" endtime="20201029 12:46:06.758"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.769" endtime="20201029 12:46:06.785"></status>
</kw>
<msg timestamp="20201029 12:46:06.785" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.767" endtime="20201029 12:46:06.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.788" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.786" endtime="20201029 12:46:06.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.789" endtime="20201029 12:46:06.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.764" endtime="20201029 12:46:06.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.761" endtime="20201029 12:46:06.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.800" endtime="20201029 12:46:07.102"></status>
</kw>
<msg timestamp="20201029 12:46:07.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027416611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027444042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.798" endtime="20201029 12:46:07.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027416611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027444042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.107" endtime="20201029 12:46:07.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.115" endtime="20201029 12:46:07.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.796" endtime="20201029 12:46:07.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.794" endtime="20201029 12:46:07.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:07.122" level="INFO">${PHILIP_RES} = [{'diff': 2.74309999999979e-05}, {'diff': 2.7388999999999192e-05}, {'diff': 2.740300000000223e-05}, {'diff': 2.7402000000002757e-05}, {'diff': 2.7361000000000052e-05}, {'diff': 2.7388999999999192e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:07.119" endtime="20201029 12:46:07.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:07.131" level="INFO">${RESULT} = {'diff': [2.74309999999979e-05, 2.7388999999999192e-05, 2.740300000000223e-05, 2.7402000000002757e-05, 2.7361000000000052e-05, 2.7388999999999192e-05, 2.7388999999999192e-05, 2.7374999999999622e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:46:07.123" endtime="20201029 12:46:07.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.138" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:07.137" endtime="20201029 12:46:07.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.141" level="INFO">VALUE: [2.74309999999979e-05, 2.7388999999999192e-05, 2.740300000000223e-05, 2.7402000000002757e-05, 2.7361000000000052e-05, 2.7388999999999192e-05, 2.7388999999999192e-05, 2.7374999999999622e-05, 2.7401999999999288e-05, 2.740299999999876e-05, 2.7388999999999192e-05, 2.7388999999999192e-05, 2.7388999999999192e-05, 2.7374999999999622e-05, 2.7387999999999718e-05, 2.7374999999999622e-05, 2.7388999999999192e-05, 2.7388999999999192e-05, 2.7374999999999622e-05, 2.738900000000266e-05, 2.7374999999999622e-05, 2.7347000000000482e-05, 2.7333000000000912e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.7361000000000052e-05, 2.740300000000223e-05, 2.7361000000000052e-05, 2.740300000000223e-05, 2.740299999999876e-05, 2.737500000000309e-05, 2.7334000000000386e-05, 2.7334000000000386e-05, 2.740299999999876e-05, 2.7388000000003188e-05, 2.738900000000266e-05, 2.7361000000000052e-05, 2.7374999999999622e-05, 2.738900000000266e-05, 2.7333000000000912e-05, 2.7374999999999622e-05, 2.7388999999999192e-05, 2.7387999999999718e-05, 2.7347000000000482e-05, 2.7332999999997443e-05, 2.7374999999999622e-05, 2.7347000000000482e-05, 2.740300000000223e-05, 2.7361000000000052e-05, 2.7387999999999718e-05]</msg>
<status status="PASS" starttime="20201029 12:46:07.139" endtime="20201029 12:46:07.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.132" endtime="20201029 12:46:07.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.759" endtime="20201029 12:46:07.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.719" endtime="20201029 12:46:07.145"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:07.148" endtime="20201029 12:46:07.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.146" endtime="20201029 12:46:07.169"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.177" endtime="20201029 12:46:07.191"></status>
</kw>
<msg timestamp="20201029 12:46:07.192" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.176" endtime="20201029 12:46:07.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.194" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.193" endtime="20201029 12:46:07.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.195" endtime="20201029 12:46:07.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.173" endtime="20201029 12:46:07.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.171" endtime="20201029 12:46:07.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.206" endtime="20201029 12:46:07.492"></status>
</kw>
<msg timestamp="20201029 12:46:07.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017558806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017594875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.203" endtime="20201029 12:46:07.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017558806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017594875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.496" endtime="20201029 12:46:07.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.504" endtime="20201029 12:46:07.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.201" endtime="20201029 12:46:07.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.199" endtime="20201029 12:46:07.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:07.511" level="INFO">${PHILIP_RES} = [{'diff': 3.6068999999999685e-05}, {'diff': 3.602800000000045e-05}, {'diff': 3.601400000000088e-05}, {'diff': 3.597200000000217e-05}, {'diff': 3.604200000000002e-05}, {'diff': 3.601400000000088e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:07.508" endtime="20201029 12:46:07.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:07.515" level="INFO">${RESULT} = {'diff': [3.6068999999999685e-05, 3.602800000000045e-05, 3.601400000000088e-05, 3.597200000000217e-05, 3.604200000000002e-05, 3.601400000000088e-05, 3.598600000000174e-05, 3.6068999999999685e-05, 3.59...</msg>
<status status="PASS" starttime="20201029 12:46:07.512" endtime="20201029 12:46:07.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.519" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:07.518" endtime="20201029 12:46:07.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.522" level="INFO">VALUE: [3.6068999999999685e-05, 3.602800000000045e-05, 3.601400000000088e-05, 3.597200000000217e-05, 3.604200000000002e-05, 3.601400000000088e-05, 3.598600000000174e-05, 3.6068999999999685e-05, 3.594399999999956e-05, 3.604200000000002e-05, 3.598599999999827e-05, 3.602800000000045e-05, 3.599999999999784e-05, 3.6041000000000545e-05, 3.600000000000131e-05, 3.605599999999959e-05, 3.59719999999987e-05, 3.604200000000002e-05, 3.602800000000045e-05, 3.6082999999999255e-05, 3.602799999999698e-05, 3.602800000000045e-05, 3.59589999999986e-05, 3.604200000000002e-05, 3.600000000000131e-05, 3.601399999999741e-05, 3.601400000000088e-05, 3.59580000000026e-05, 3.59580000000026e-05, 3.602800000000045e-05, 3.597300000000164e-05, 3.6027000000000975e-05, 3.602800000000045e-05, 3.602800000000045e-05, 3.602799999999698e-05, 3.602800000000045e-05, 3.600000000000131e-05, 3.6027000000000975e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.604200000000002e-05, 3.602800000000045e-05, 3.6026999999997505e-05, 3.602800000000045e-05, 3.597200000000217e-05, 3.592999999999999e-05, 3.602800000000045e-05, 3.59719999999987e-05, 3.604200000000002e-05, 3.6041000000000545e-05]</msg>
<status status="PASS" starttime="20201029 12:46:07.520" endtime="20201029 12:46:07.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.516" endtime="20201029 12:46:07.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.170" endtime="20201029 12:46:07.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.145" endtime="20201029 12:46:07.523"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:07.526" endtime="20201029 12:46:07.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.524" endtime="20201029 12:46:07.546"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.555" endtime="20201029 12:46:07.573"></status>
</kw>
<msg timestamp="20201029 12:46:07.573" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.553" endtime="20201029 12:46:07.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.576" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.574" endtime="20201029 12:46:07.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.577" endtime="20201029 12:46:07.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.549" endtime="20201029 12:46:07.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.548" endtime="20201029 12:46:07.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.586" endtime="20201029 12:46:07.895"></status>
</kw>
<msg timestamp="20201029 12:46:07.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022749042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.585" endtime="20201029 12:46:07.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022749042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.899" endtime="20201029 12:46:07.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.908" endtime="20201029 12:46:07.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.582" endtime="20201029 12:46:07.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.580" endtime="20201029 12:46:07.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:07.914" level="INFO">${PHILIP_RES} = [{'diff': 4.498600000000033e-05}, {'diff': 4.484800000000011e-05}, {'diff': 4.4945000000001095e-05}, {'diff': 4.4945000000001095e-05}, {'diff': 4.4944999999997626e-05}, {'diff': 4.4945000000001095e-05...</msg>
<status status="PASS" starttime="20201029 12:46:07.911" endtime="20201029 12:46:07.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:07.918" level="INFO">${RESULT} = {'diff': [4.498600000000033e-05, 4.484800000000011e-05, 4.4945000000001095e-05, 4.4945000000001095e-05, 4.4944999999997626e-05, 4.4945000000001095e-05, 4.4944999999997626e-05, 4.4945000000001095e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:07.915" endtime="20201029 12:46:07.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.924" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:07.922" endtime="20201029 12:46:07.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.926" level="INFO">VALUE: [4.498600000000033e-05, 4.484800000000011e-05, 4.4945000000001095e-05, 4.4945000000001095e-05, 4.4944999999997626e-05, 4.4945000000001095e-05, 4.4944999999997626e-05, 4.4945000000001095e-05, 4.480599999999793e-05, 4.4959000000000665e-05, 4.486199999999968e-05, 4.4931000000001525e-05, 4.4944999999997626e-05, 4.4945000000001095e-05, 4.497200000000076e-05, 4.495800000000119e-05, 4.495800000000119e-05, 4.4930999999998056e-05, 4.502799999999904e-05, 4.4930999999998056e-05, 4.497200000000076e-05, 4.495799999999772e-05, 4.493000000000205e-05, 4.495799999999772e-05, 4.4903000000002385e-05, 4.4902999999998916e-05, 4.495800000000119e-05, 4.494399999999815e-05, 4.4931000000001525e-05, 4.4874999999999776e-05, 4.4959000000000665e-05, 4.4861000000000206e-05, 4.494399999999815e-05, 4.494400000000162e-05, 4.494400000000162e-05, 4.492999999999858e-05, 4.494400000000162e-05, 4.495799999999772e-05, 4.494400000000162e-05, 4.491599999999901e-05, 4.495800000000119e-05, 4.4930999999998056e-05, 4.484800000000011e-05, 4.4931000000001525e-05, 4.501400000000294e-05, 4.495800000000119e-05, 4.494399999999815e-05, 4.495799999999772e-05, 4.494400000000162e-05, 4.4902999999998916e-05]</msg>
<status status="PASS" starttime="20201029 12:46:07.925" endtime="20201029 12:46:07.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.919" endtime="20201029 12:46:07.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.546" endtime="20201029 12:46:07.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.524" endtime="20201029 12:46:07.928"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:07.930" endtime="20201029 12:46:07.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.928" endtime="20201029 12:46:07.950"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.959" endtime="20201029 12:46:07.984"></status>
</kw>
<msg timestamp="20201029 12:46:07.984" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.957" endtime="20201029 12:46:07.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.987" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.985" endtime="20201029 12:46:07.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.988" endtime="20201029 12:46:07.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.954" endtime="20201029 12:46:07.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.952" endtime="20201029 12:46:07.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.997" endtime="20201029 12:46:08.283"></status>
</kw>
<msg timestamp="20201029 12:46:08.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020236139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020290292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.996" endtime="20201029 12:46:08.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020236139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020290292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:08.287" endtime="20201029 12:46:08.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.296" endtime="20201029 12:46:08.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.993" endtime="20201029 12:46:08.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.991" endtime="20201029 12:46:08.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:08.303" level="INFO">${PHILIP_RES} = [{'diff': 5.415300000000123e-05}, {'diff': 5.409799999999895e-05}, {'diff': 5.404099999999773e-05}, {'diff': 5.409699999999948e-05}, {'diff': 5.411100000000252e-05}, {'diff': 5.409699999999948e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:08.299" endtime="20201029 12:46:08.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:08.308" level="INFO">${RESULT} = {'diff': [5.415300000000123e-05, 5.409799999999895e-05, 5.404099999999773e-05, 5.409699999999948e-05, 5.411100000000252e-05, 5.409699999999948e-05, 5.409700000000295e-05, 5.405600000000024e-05, 5.4097...</msg>
<status status="PASS" starttime="20201029 12:46:08.304" endtime="20201029 12:46:08.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.312" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:08.311" endtime="20201029 12:46:08.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.315" level="INFO">VALUE: [5.415300000000123e-05, 5.409799999999895e-05, 5.404099999999773e-05, 5.409699999999948e-05, 5.411100000000252e-05, 5.409699999999948e-05, 5.409700000000295e-05, 5.405600000000024e-05, 5.409700000000295e-05, 5.405500000000077e-05, 5.412499999999862e-05, 5.406999999999981e-05, 5.411099999999905e-05, 5.3985999999998924e-05, 5.409700000000295e-05, 5.411099999999905e-05, 5.408299999999991e-05, 5.411099999999905e-05, 5.3971999999999354e-05, 5.404200000000067e-05, 5.400000000000196e-05, 5.405600000000024e-05, 5.400000000000196e-05, 5.4013999999998064e-05, 5.411099999999905e-05, 5.408299999999991e-05, 5.406999999999981e-05, 5.3999999999998494e-05, 5.406900000000034e-05, 5.405500000000077e-05, 5.400000000000196e-05, 5.3985999999998924e-05, 5.406900000000034e-05, 5.405500000000077e-05, 5.408299999999991e-05, 5.400000000000196e-05, 5.409699999999948e-05, 5.409699999999948e-05, 5.40280000000011e-05, 5.397200000000282e-05, 5.3999999999998494e-05, 5.4013999999998064e-05, 5.400000000000196e-05, 5.405600000000024e-05, 5.411200000000199e-05, 5.404200000000067e-05, 5.3971999999999354e-05, 5.401400000000153e-05, 5.4027999999997633e-05, 5.406900000000034e-05]</msg>
<status status="PASS" starttime="20201029 12:46:08.313" endtime="20201029 12:46:08.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.309" endtime="20201029 12:46:08.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.951" endtime="20201029 12:46:08.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.928" endtime="20201029 12:46:08.316"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:08.318" endtime="20201029 12:46:08.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.317" endtime="20201029 12:46:08.338"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.346" endtime="20201029 12:46:08.367"></status>
</kw>
<msg timestamp="20201029 12:46:08.368" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.345" endtime="20201029 12:46:08.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.388" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.386" endtime="20201029 12:46:08.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.389" endtime="20201029 12:46:08.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.342" endtime="20201029 12:46:08.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.340" endtime="20201029 12:46:08.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.398" endtime="20201029 12:46:08.685"></status>
</kw>
<msg timestamp="20201029 12:46:08.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018684653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018748181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:08.396" endtime="20201029 12:46:08.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018684653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018748181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:08.689" endtime="20201029 12:46:08.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.697" endtime="20201029 12:46:08.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.394" endtime="20201029 12:46:08.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.392" endtime="20201029 12:46:08.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:08.704" level="INFO">${PHILIP_RES} = [{'diff': 6.35280000000002e-05}, {'diff': 6.347199999999845e-05}, {'diff': 6.348600000000149e-05}, {'diff': 6.347200000000192e-05}, {'diff': 6.345900000000182e-05}, {'diff': 6.348600000000149e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:08.701" endtime="20201029 12:46:08.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:08.709" level="INFO">${RESULT} = {'diff': [6.35280000000002e-05, 6.347199999999845e-05, 6.348600000000149e-05, 6.347200000000192e-05, 6.345900000000182e-05, 6.348600000000149e-05, 6.344500000000225e-05, 6.33890000000005e-05, 6.337500...</msg>
<status status="PASS" starttime="20201029 12:46:08.705" endtime="20201029 12:46:08.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.713" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:08.712" endtime="20201029 12:46:08.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.715" level="INFO">VALUE: [6.35280000000002e-05, 6.347199999999845e-05, 6.348600000000149e-05, 6.347200000000192e-05, 6.345900000000182e-05, 6.348600000000149e-05, 6.344500000000225e-05, 6.33890000000005e-05, 6.337500000000093e-05, 6.334699999999832e-05, 6.348700000000096e-05, 6.336100000000136e-05, 6.344500000000225e-05, 6.348600000000149e-05, 6.341699999999964e-05, 6.344400000000278e-05, 6.341699999999964e-05, 6.341699999999964e-05, 6.341600000000017e-05, 6.342999999999974e-05, 6.341699999999964e-05, 6.336100000000136e-05, 6.348600000000149e-05, 6.348600000000149e-05, 6.345900000000182e-05, 6.33890000000005e-05, 6.347300000000139e-05, 6.336099999999789e-05, 6.347200000000192e-05, 6.341600000000017e-05, 6.34439999999993e-05, 6.33890000000005e-05, 6.336100000000136e-05, 6.348600000000149e-05, 6.348699999999749e-05, 6.347199999999845e-05, 6.345799999999888e-05, 6.348600000000149e-05, 6.343099999999921e-05, 6.333299999999875e-05, 6.344499999999878e-05, 6.343099999999921e-05, 6.341699999999964e-05, 6.340300000000007e-05, 6.350000000000106e-05, 6.347299999999792e-05, 6.336100000000136e-05, 6.337500000000093e-05, 6.347299999999792e-05, 6.341699999999964e-05]</msg>
<status status="PASS" starttime="20201029 12:46:08.714" endtime="20201029 12:46:08.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.709" endtime="20201029 12:46:08.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.339" endtime="20201029 12:46:08.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.316" endtime="20201029 12:46:08.717"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:08.719" endtime="20201029 12:46:08.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.718" endtime="20201029 12:46:08.739"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.747" endtime="20201029 12:46:08.769"></status>
</kw>
<msg timestamp="20201029 12:46:08.769" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.746" endtime="20201029 12:46:08.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.772" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.770" endtime="20201029 12:46:08.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.773" endtime="20201029 12:46:08.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.743" endtime="20201029 12:46:08.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.741" endtime="20201029 12:46:08.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.783" endtime="20201029 12:46:09.068"></status>
</kw>
<msg timestamp="20201029 12:46:09.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:08.781" endtime="20201029 12:46:09.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.072" endtime="20201029 12:46:09.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.080" endtime="20201029 12:46:09.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.778" endtime="20201029 12:46:09.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.777" endtime="20201029 12:46:09.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:09.087" level="INFO">${PHILIP_RES} = [{'diff': 7.309700000000113e-05}, {'diff': 7.304200000000233e-05}, {'diff': 7.313900000000331e-05}, {'diff': 7.313899999999984e-05}, {'diff': 7.306899999999852e-05}, {'diff': 7.302799999999929e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:09.084" endtime="20201029 12:46:09.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:09.091" level="INFO">${RESULT} = {'diff': [7.309700000000113e-05, 7.304200000000233e-05, 7.313900000000331e-05, 7.313899999999984e-05, 7.306899999999852e-05, 7.302799999999929e-05, 7.312500000000027e-05, 7.305599999999843e-05, 7.3138...</msg>
<status status="PASS" starttime="20201029 12:46:09.088" endtime="20201029 12:46:09.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.095" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:09.094" endtime="20201029 12:46:09.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.098" level="INFO">VALUE: [7.309700000000113e-05, 7.304200000000233e-05, 7.313900000000331e-05, 7.313899999999984e-05, 7.306899999999852e-05, 7.302799999999929e-05, 7.312500000000027e-05, 7.305599999999843e-05, 7.313899999999984e-05, 7.312500000000027e-05, 7.319399999999865e-05, 7.312500000000027e-05, 7.313800000000037e-05, 7.301399999999972e-05, 7.307000000000147e-05, 7.31110000000007e-05, 7.301399999999972e-05, 7.312500000000027e-05, 7.298700000000005e-05, 7.305599999999843e-05, 7.315300000000288e-05, 7.305500000000242e-05, 7.300000000000015e-05, 7.313899999999984e-05, 7.315299999999941e-05, 7.301399999999972e-05, 7.304199999999886e-05, 7.313800000000037e-05, 7.308300000000156e-05, 7.311200000000018e-05, 7.313899999999984e-05, 7.315199999999994e-05, 7.313899999999984e-05, 7.309700000000113e-05, 7.308300000000156e-05, 7.306899999999852e-05, 7.305499999999895e-05, 7.316599999999951e-05, 7.313899999999984e-05, 7.312500000000027e-05, 7.315199999999994e-05, 7.305499999999895e-05, 7.301399999999972e-05, 7.307000000000147e-05, 7.304199999999886e-05, 7.309699999999766e-05, 7.308300000000156e-05, 7.31110000000007e-05, 7.3069999999998e-05, 7.312500000000027e-05]</msg>
<status status="PASS" starttime="20201029 12:46:09.097" endtime="20201029 12:46:09.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.092" endtime="20201029 12:46:09.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.740" endtime="20201029 12:46:09.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.717" endtime="20201029 12:46:09.100"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:09.103" endtime="20201029 12:46:09.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.101" endtime="20201029 12:46:09.123"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.131" endtime="20201029 12:46:09.155"></status>
</kw>
<msg timestamp="20201029 12:46:09.155" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.129" endtime="20201029 12:46:09.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.158" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.156" endtime="20201029 12:46:09.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.160" endtime="20201029 12:46:09.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.127" endtime="20201029 12:46:09.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.125" endtime="20201029 12:46:09.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.169" endtime="20201029 12:46:09.454"></status>
</kw>
<msg timestamp="20201029 12:46:09.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018000847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018083903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.167" endtime="20201029 12:46:09.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018000847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018083903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.458" endtime="20201029 12:46:09.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.466" endtime="20201029 12:46:09.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.165" endtime="20201029 12:46:09.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.163" endtime="20201029 12:46:09.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:09.472" level="INFO">${PHILIP_RES} = [{'diff': 8.305599999999802e-05}, {'diff': 8.301399999999931e-05}, {'diff': 8.299999999999974e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.286100000000005e-05}, {'diff': 8.301399999999931e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:09.469" endtime="20201029 12:46:09.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:09.479" level="INFO">${RESULT} = {'diff': [8.305599999999802e-05, 8.301399999999931e-05, 8.299999999999974e-05, 8.31110000000003e-05, 8.286100000000005e-05, 8.301399999999931e-05, 8.290299999999876e-05, 8.298600000000017e-05, 8.29860...</msg>
<status status="PASS" starttime="20201029 12:46:09.473" endtime="20201029 12:46:09.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.484" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:09.483" endtime="20201029 12:46:09.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.486" level="INFO">VALUE: [8.305599999999802e-05, 8.301399999999931e-05, 8.299999999999974e-05, 8.31110000000003e-05, 8.286100000000005e-05, 8.301399999999931e-05, 8.290299999999876e-05, 8.298600000000017e-05, 8.298600000000017e-05, 8.290299999999876e-05, 8.295799999999756e-05, 8.29170000000018e-05, 8.295800000000103e-05, 8.295800000000103e-05, 8.297199999999713e-05, 8.292999999999842e-05, 8.302799999999888e-05, 8.302800000000235e-05, 8.29170000000018e-05, 8.29859999999967e-05, 8.298600000000017e-05, 8.290299999999876e-05, 8.294399999999799e-05, 8.295800000000103e-05, 8.298600000000017e-05, 8.294400000000146e-05, 8.293000000000189e-05, 8.29859999999967e-05, 8.304199999999845e-05, 8.290299999999876e-05, 8.300000000000321e-05, 8.294500000000093e-05, 8.29590000000005e-05, 8.298600000000017e-05, 8.294400000000146e-05, 8.288799999999971e-05, 8.304199999999845e-05, 8.304099999999898e-05, 8.291699999999833e-05, 8.301399999999931e-05, 8.29170000000018e-05, 8.298600000000017e-05, 8.293100000000136e-05, 8.291699999999833e-05, 8.305499999999855e-05, 8.299999999999974e-05, 8.295799999999756e-05, 8.299999999999974e-05, 8.298600000000017e-05, 8.301399999999931e-05]</msg>
<status status="PASS" starttime="20201029 12:46:09.485" endtime="20201029 12:46:09.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.480" endtime="20201029 12:46:09.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.123" endtime="20201029 12:46:09.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.101" endtime="20201029 12:46:09.487"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:09.491" endtime="20201029 12:46:09.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.489" endtime="20201029 12:46:09.511"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.523" endtime="20201029 12:46:09.548"></status>
</kw>
<msg timestamp="20201029 12:46:09.548" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.521" endtime="20201029 12:46:09.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.551" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.549" endtime="20201029 12:46:09.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.552" endtime="20201029 12:46:09.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.517" endtime="20201029 12:46:09.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.514" endtime="20201029 12:46:09.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.561" endtime="20201029 12:46:09.847"></status>
</kw>
<msg timestamp="20201029 12:46:09.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.559" endtime="20201029 12:46:09.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.851" endtime="20201029 12:46:09.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.859" endtime="20201029 12:46:09.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.557" endtime="20201029 12:46:09.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.555" endtime="20201029 12:46:09.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:09.866" level="INFO">${PHILIP_RES} = [{'diff': 9.309700000000032e-05}, {'diff': 9.308300000000075e-05}, {'diff': 9.313799999999955e-05}, {'diff': 9.319399999999783e-05}, {'diff': 9.313899999999903e-05}, {'diff': 9.309700000000032e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:09.863" endtime="20201029 12:46:09.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:09.870" level="INFO">${RESULT} = {'diff': [9.309700000000032e-05, 9.308300000000075e-05, 9.313799999999955e-05, 9.319399999999783e-05, 9.313899999999903e-05, 9.309700000000032e-05, 9.319399999999783e-05, 9.304100000000204e-05, 9.3083...</msg>
<status status="PASS" starttime="20201029 12:46:09.867" endtime="20201029 12:46:09.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.875" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:09.874" endtime="20201029 12:46:09.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.877" level="INFO">VALUE: [9.309700000000032e-05, 9.308300000000075e-05, 9.313799999999955e-05, 9.319399999999783e-05, 9.313899999999903e-05, 9.309700000000032e-05, 9.319399999999783e-05, 9.304100000000204e-05, 9.308300000000075e-05, 9.309700000000032e-05, 9.307000000000065e-05, 9.311099999999989e-05, 9.315300000000207e-05, 9.304200000000151e-05, 9.311099999999989e-05, 9.316700000000164e-05, 9.312499999999946e-05, 9.309700000000032e-05, 9.309700000000032e-05, 9.305500000000161e-05, 9.307000000000065e-05, 9.308300000000075e-05, 9.31390000000025e-05, 9.319500000000078e-05, 9.311099999999989e-05, 9.315199999999912e-05, 9.323600000000001e-05, 9.312499999999946e-05, 9.308299999999728e-05, 9.311099999999989e-05, 9.313899999999903e-05, 9.311199999999936e-05, 9.309700000000032e-05, 9.308300000000075e-05, 9.309699999999338e-05, 9.311199999999936e-05, 9.309700000000032e-05, 9.312499999999946e-05, 9.313899999999903e-05, 9.313899999999903e-05, 9.309799999999979e-05, 9.313899999999903e-05, 9.313799999999955e-05, 9.318100000000468e-05, 9.312499999999946e-05, 9.308300000000075e-05, 9.326400000000262e-05, 9.319500000000425e-05, 9.312499999999946e-05, 9.313899999999903e-05]</msg>
<status status="PASS" starttime="20201029 12:46:09.876" endtime="20201029 12:46:09.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.871" endtime="20201029 12:46:09.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.512" endtime="20201029 12:46:09.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.488" endtime="20201029 12:46:09.879"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:09.881" endtime="20201029 12:46:09.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.879" endtime="20201029 12:46:09.901"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.909" endtime="20201029 12:46:09.934"></status>
</kw>
<msg timestamp="20201029 12:46:09.935" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.908" endtime="20201029 12:46:09.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.937" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.936" endtime="20201029 12:46:09.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.938" endtime="20201029 12:46:09.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.905" endtime="20201029 12:46:09.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.903" endtime="20201029 12:46:09.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.948" endtime="20201029 12:46:10.234"></status>
</kw>
<msg timestamp="20201029 12:46:10.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0188065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01891, 'source': 'DUT_IC', 'event': 'FALLING',...</msg>
<status status="PASS" starttime="20201029 12:46:09.947" endtime="20201029 12:46:10.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0188065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01891, 'source': 'DUT_IC', 'event': 'FALLING',...</msg>
<status status="PASS" starttime="20201029 12:46:10.237" endtime="20201029 12:46:10.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.245" endtime="20201029 12:46:10.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.944" endtime="20201029 12:46:10.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.942" endtime="20201029 12:46:10.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:10.251" level="INFO">${PHILIP_RES} = [{'diff': 0.00010349999999999943}, {'diff': 0.00010348599999999986}, {'diff': 0.00010345800000000072}, {'diff': 0.00010348599999999986}, {'diff': 0.0001035559999999977}, {'diff': 0.0001035420000000016...</msg>
<status status="PASS" starttime="20201029 12:46:10.248" endtime="20201029 12:46:10.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:10.256" level="INFO">${RESULT} = {'diff': [0.00010349999999999943, 0.00010348599999999986, 0.00010345800000000072, 0.00010348599999999986, 0.0001035559999999977, 0.0001035420000000016, 0.00010362500000000302, 0.00010362499999999955, ...</msg>
<status status="PASS" starttime="20201029 12:46:10.253" endtime="20201029 12:46:10.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.260" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:10.259" endtime="20201029 12:46:10.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.262" level="INFO">VALUE: [0.00010349999999999943, 0.00010348599999999986, 0.00010345800000000072, 0.00010348599999999986, 0.0001035559999999977, 0.0001035420000000016, 0.00010362500000000302, 0.00010362499999999955, 0.00010354100000000213, 0.00010358400000000031, 0.00010359700000000041, 0.0001035689999999978, 0.00010361099999999998, 0.00010349999999999943, 0.00010347200000000029, 0.00010348599999999986, 0.00010348599999999986, 0.00010365300000000216, 0.0001035689999999978, 0.00010361099999999998, 0.00010354099999999866, 0.00010359700000000041, 0.00010345800000000072, 0.0001035689999999978, 0.00010348599999999986, 0.00010363899999999912, 0.000103513999999999, 0.00010347299999999976, 0.00010351299999999952, 0.0001035559999999977, 0.00010348599999999986, 0.00010359799999999988, 0.00010349999999999943, 0.00010358400000000031, 0.00010365200000000269, 0.00010345900000000019, 0.0001035420000000016, 0.00010355600000000117, 0.00010356900000000127, 0.00010361099999999998, 0.00010362499999999608, 0.00010348599999999986, 0.00010358399999999685, 0.00010345800000000072, 0.00010352799999999857, 0.00010358399999999685, 0.00010348599999999986, 0.00010357000000000421, 0.00010348700000000627, 0.00010359699999999694]</msg>
<status status="PASS" starttime="20201029 12:46:10.261" endtime="20201029 12:46:10.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.256" endtime="20201029 12:46:10.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.901" endtime="20201029 12:46:10.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.879" endtime="20201029 12:46:10.265"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:10.267" endtime="20201029 12:46:10.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.265" endtime="20201029 12:46:10.287"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.295" endtime="20201029 12:46:10.325"></status>
</kw>
<msg timestamp="20201029 12:46:10.326" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.294" endtime="20201029 12:46:10.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.328" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.327" endtime="20201029 12:46:10.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.329" endtime="20201029 12:46:10.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.291" endtime="20201029 12:46:10.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.289" endtime="20201029 12:46:10.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.338" endtime="20201029 12:46:10.624"></status>
</kw>
<msg timestamp="20201029 12:46:10.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019596792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.337" endtime="20201029 12:46:10.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019596792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.629" endtime="20201029 12:46:10.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.637" endtime="20201029 12:46:10.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.334" endtime="20201029 12:46:10.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.333" endtime="20201029 12:46:10.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:10.644" level="INFO">${PHILIP_RES} = [{'diff': 0.00011426400000000281}, {'diff': 0.00011412499999999964}, {'diff': 0.00011411200000000302}, {'diff': 0.0001142360000000002}, {'diff': 0.00011413900000000268}, {'diff': 0.0001140409999999987...</msg>
<status status="PASS" starttime="20201029 12:46:10.640" endtime="20201029 12:46:10.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:10.648" level="INFO">${RESULT} = {'diff': [0.00011426400000000281, 0.00011412499999999964, 0.00011411200000000302, 0.0001142360000000002, 0.00011413900000000268, 0.00011404099999999875, 0.0001142360000000002, 0.00011418100000000139, ...</msg>
<status status="PASS" starttime="20201029 12:46:10.644" endtime="20201029 12:46:10.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.653" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:10.652" endtime="20201029 12:46:10.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.655" level="INFO">VALUE: [0.00011426400000000281, 0.00011412499999999964, 0.00011411200000000302, 0.0001142360000000002, 0.00011413900000000268, 0.00011404099999999875, 0.0001142360000000002, 0.00011418100000000139, 0.00011415299999999878, 0.00011429199999999848, 0.00011420800000000106, 0.0001142360000000002, 0.00011416699999999835, 0.00011413899999999921, 0.00011412499999999964, 0.00011415199999999931, 0.00011419400000000149, 0.00011413900000000268, 0.00011419400000000149, 0.00011419500000000096, 0.0001142360000000002, 0.0001142230000000001, 0.00011412500000000311, 0.00011412499999999964, 0.00011413899999999921, 0.00011419399999999802, 0.0001142360000000002, 0.00011413799999999974, 0.00011416699999999835, 0.00011415299999999878, 0.00011412499999999964, 0.00011416599999999888, 0.00011424999999999977, 0.00011416599999999888, 0.00011423599999999673, 0.00011429200000000195, 0.00011417999999999845, 0.00011411100000000007, 0.00011418099999999792, 0.00011405600000000127, 0.00011412499999999964, 0.00011416699999999835, 0.00011407000000000084, 0.00011411100000000007, 0.0001142499999999963, 0.00011416599999999888, 0.00011411100000000007, 0.00011415299999999878, 0.00011420799999999759, 0.00011412499999999964]</msg>
<status status="PASS" starttime="20201029 12:46:10.654" endtime="20201029 12:46:10.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.649" endtime="20201029 12:46:10.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.288" endtime="20201029 12:46:10.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.265" endtime="20201029 12:46:10.657"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:10.659" endtime="20201029 12:46:10.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.658" endtime="20201029 12:46:10.679"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.687" endtime="20201029 12:46:10.718"></status>
</kw>
<msg timestamp="20201029 12:46:10.718" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.686" endtime="20201029 12:46:10.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.720" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.719" endtime="20201029 12:46:10.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.722" endtime="20201029 12:46:10.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.683" endtime="20201029 12:46:10.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.681" endtime="20201029 12:46:10.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.730" endtime="20201029 12:46:11.016"></status>
</kw>
<msg timestamp="20201029 12:46:11.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018923194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019048361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.729" endtime="20201029 12:46:11.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018923194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019048361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.020" endtime="20201029 12:46:11.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.028" endtime="20201029 12:46:11.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.726" endtime="20201029 12:46:11.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.725" endtime="20201029 12:46:11.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:11.035" level="INFO">${PHILIP_RES} = [{'diff': 0.00012516699999999895}, {'diff': 0.00012509699999999763}, {'diff': 0.00012504199999999882}, {'diff': 0.00012509699999999763}, {'diff': 0.00012501399999999968}, {'diff': 0.000125000000000000...</msg>
<status status="PASS" starttime="20201029 12:46:11.032" endtime="20201029 12:46:11.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:11.039" level="INFO">${RESULT} = {'diff': [0.00012516699999999895, 0.00012509699999999763, 0.00012504199999999882, 0.00012509699999999763, 0.00012501399999999968, 0.0001250000000000001, 0.00012512500000000024, 0.0001250000000000001, ...</msg>
<status status="PASS" starttime="20201029 12:46:11.036" endtime="20201029 12:46:11.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.044" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:11.043" endtime="20201029 12:46:11.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.046" level="INFO">VALUE: [0.00012516699999999895, 0.00012509699999999763, 0.00012504199999999882, 0.00012509699999999763, 0.00012501399999999968, 0.0001250000000000001, 0.00012512500000000024, 0.0001250000000000001, 0.00012502699999999978, 0.0001251389999999998, 0.00012501399999999968, 0.00012501399999999968, 0.00012507000000000143, 0.0001250000000000001, 0.0001250970000000011, 0.00012511100000000067, 0.000125084000000001, 0.00012501399999999968, 0.00012512500000000024, 0.0001250689999999985, 0.00012506900000000196, 0.00012501399999999968, 0.00012502799999999925, 0.0001250559999999984, 0.0001250970000000011, 0.00012495799999999793, 0.00012504099999999935, 0.0001251389999999998, 0.00012501399999999968, 0.0001250000000000001, 0.00012506900000000196, 0.00012509699999999763, 0.00012502799999999925, 0.00012501399999999968, 0.00012511100000000414, 0.00012501399999999968, 0.00012504199999999882, 0.00012513899999999634, 0.0001250000000000001, 0.0001250130000000002, 0.00012501399999999968, 0.00012505499999999892, 0.00012511100000000414, 0.0001250130000000002, 0.0001251529999999959, 0.00012502699999999978, 0.00012502699999999978, 0.00012508399999999753, 0.00012509800000000404, 0.0001251250000000037]</msg>
<status status="PASS" starttime="20201029 12:46:11.045" endtime="20201029 12:46:11.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.040" endtime="20201029 12:46:11.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.680" endtime="20201029 12:46:11.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.657" endtime="20201029 12:46:11.048"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:11.050" endtime="20201029 12:46:11.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.049" endtime="20201029 12:46:11.070"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.078" endtime="20201029 12:46:11.109"></status>
</kw>
<msg timestamp="20201029 12:46:11.110" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.077" endtime="20201029 12:46:11.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.112" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.111" endtime="20201029 12:46:11.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.113" endtime="20201029 12:46:11.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.074" endtime="20201029 12:46:11.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.073" endtime="20201029 12:46:11.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.123" endtime="20201029 12:46:11.421"></status>
</kw>
<msg timestamp="20201029 12:46:11.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019770042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019906264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.121" endtime="20201029 12:46:11.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019770042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019906264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.430" endtime="20201029 12:46:11.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.447" endtime="20201029 12:46:11.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.119" endtime="20201029 12:46:11.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.117" endtime="20201029 12:46:11.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:11.457" level="INFO">${PHILIP_RES} = [{'diff': 0.00013622199999999834}, {'diff': 0.0001362230000000013}, {'diff': 0.00013611100000000126}, {'diff': 0.00013629099999999672}, {'diff': 0.00013620799999999877}, {'diff': 0.0001362360000000013...</msg>
<status status="PASS" starttime="20201029 12:46:11.454" endtime="20201029 12:46:11.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:11.461" level="INFO">${RESULT} = {'diff': [0.00013622199999999834, 0.0001362230000000013, 0.00013611100000000126, 0.00013629099999999672, 0.00013620799999999877, 0.00013623600000000138, 0.00013615199999999703, 0.00013615299999999997,...</msg>
<status status="PASS" starttime="20201029 12:46:11.458" endtime="20201029 12:46:11.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.466" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:11.465" endtime="20201029 12:46:11.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.468" level="INFO">VALUE: [0.00013622199999999834, 0.0001362230000000013, 0.00013611100000000126, 0.00013629099999999672, 0.00013620799999999877, 0.00013623600000000138, 0.00013615199999999703, 0.00013615299999999997, 0.00013629199999999966, 0.00013619499999999868, 0.00013631899999999933, 0.00013616600000000006, 0.00013630599999999923, 0.0001361809999999991, 0.00013629199999999966, 0.00013619499999999868, 0.00013626400000000052, 0.0001362780000000001, 0.00013620800000000224, 0.0001361390000000004, 0.0001361520000000005, 0.0001361800000000031, 0.00013620799999999877, 0.00013616699999999954, 0.00013629199999999966, 0.00013615299999999997, 0.00013626400000000052, 0.00013616600000000006, 0.00013630500000000323, 0.00013622200000000528, 0.00013616699999999954, 0.00013618000000000657, 0.00013620799999999877, 0.0001361939999999992, 0.00013616699999999954, 0.00013620799999999877, 0.0001362090000000052, 0.00013616700000000648, 0.00013616699999999954, 0.00013624999999999748, 0.00013629200000000313, 0.00013623700000000433, 0.00013622200000000528, 0.00013617999999999963, 0.00013616699999999954, 0.00013622199999999834, 0.00013623600000000485, 0.00013622299999999782, 0.00013630599999999576, 0.00013629099999999672]</msg>
<status status="PASS" starttime="20201029 12:46:11.467" endtime="20201029 12:46:11.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.462" endtime="20201029 12:46:11.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.071" endtime="20201029 12:46:11.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.048" endtime="20201029 12:46:11.471"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:11.473" endtime="20201029 12:46:11.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.471" endtime="20201029 12:46:11.493"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.501" endtime="20201029 12:46:11.536"></status>
</kw>
<msg timestamp="20201029 12:46:11.537" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.499" endtime="20201029 12:46:11.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.539" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.538" endtime="20201029 12:46:11.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.540" endtime="20201029 12:46:11.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.497" endtime="20201029 12:46:11.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.495" endtime="20201029 12:46:11.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.549" endtime="20201029 12:46:11.835"></status>
</kw>
<msg timestamp="20201029 12:46:11.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019208083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019355778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.548" endtime="20201029 12:46:11.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019208083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019355778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.838" endtime="20201029 12:46:11.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.846" endtime="20201029 12:46:11.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.545" endtime="20201029 12:46:11.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.543" endtime="20201029 12:46:11.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:11.852" level="INFO">${PHILIP_RES} = [{'diff': 0.00014769499999999977}, {'diff': 0.00014770799999999987}, {'diff': 0.00014761100000000235}, {'diff': 0.0001476529999999976}, {'diff': 0.00014772199999999944}, {'diff': 0.0001476380000000020...</msg>
<status status="PASS" starttime="20201029 12:46:11.849" endtime="20201029 12:46:11.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:11.857" level="INFO">${RESULT} = {'diff': [0.00014769499999999977, 0.00014770799999999987, 0.00014761100000000235, 0.0001476529999999976, 0.00014772199999999944, 0.00014763800000000202, 0.00014770799999999987, 0.00014761099999999888,...</msg>
<status status="PASS" starttime="20201029 12:46:11.853" endtime="20201029 12:46:11.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.862" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:11.861" endtime="20201029 12:46:11.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.864" level="INFO">VALUE: [0.00014769499999999977, 0.00014770799999999987, 0.00014761100000000235, 0.0001476529999999976, 0.00014772199999999944, 0.00014763800000000202, 0.00014770799999999987, 0.00014761099999999888, 0.00014770799999999987, 0.00014770799999999987, 0.00014766700000000063, 0.00014776299999999867, 0.00014773600000000248, 0.00014766700000000063, 0.00014756999999999965, 0.00014770799999999987, 0.00014748599999999876, 0.00014765300000000106, 0.0001476810000000002, 0.00014770799999999987, 0.0001476810000000002, 0.00014766600000000116, 0.00014752800000000094, 0.00014762499999999845, 0.0001477220000000029, 0.0001476810000000002, 0.00014758299999999974, 0.0001476940000000003, 0.0001477090000000028, 0.00014768099999999673, 0.00014768100000000367, 0.00014763899999999802, 0.00014765300000000453, 0.00014756999999999965, 0.00014769500000000324, 0.00014765300000000453, 0.00014772199999999597, 0.0001475969999999993, 0.0001476659999999977, 0.0001475969999999993, 0.0001477220000000029, 0.00014769399999999683, 0.00014756900000000017, 0.0001476120000000053, 0.0001475969999999993, 0.0001476670000000041, 0.00014758399999999922, 0.00014761099999999888, 0.00014761099999999888, 0.00014766699999999716]</msg>
<status status="PASS" starttime="20201029 12:46:11.863" endtime="20201029 12:46:11.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.858" endtime="20201029 12:46:11.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.493" endtime="20201029 12:46:11.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.471" endtime="20201029 12:46:11.866"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:11.868" endtime="20201029 12:46:11.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.867" endtime="20201029 12:46:11.888"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.896" endtime="20201029 12:46:11.934"></status>
</kw>
<msg timestamp="20201029 12:46:11.935" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.895" endtime="20201029 12:46:11.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.937" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.936" endtime="20201029 12:46:11.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.939" endtime="20201029 12:46:11.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.892" endtime="20201029 12:46:11.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.890" endtime="20201029 12:46:11.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.950" endtime="20201029 12:46:12.252"></status>
</kw>
<msg timestamp="20201029 12:46:12.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020907042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021066361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.948" endtime="20201029 12:46:12.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020907042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021066361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.260" endtime="20201029 12:46:12.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.268" endtime="20201029 12:46:12.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.945" endtime="20201029 12:46:12.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.942" endtime="20201029 12:46:12.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:12.276" level="INFO">${PHILIP_RES} = [{'diff': 0.00015931899999999805}, {'diff': 0.00015931900000000151}, {'diff': 0.00015929199999999838}, {'diff': 0.00015930599999999795}, {'diff': 0.000159320000000001}, {'diff': 0.00015929100000000238...</msg>
<status status="PASS" starttime="20201029 12:46:12.273" endtime="20201029 12:46:12.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:12.280" level="INFO">${RESULT} = {'diff': [0.00015931899999999805, 0.00015931900000000151, 0.00015929199999999838, 0.00015930599999999795, 0.000159320000000001, 0.00015929100000000238, 0.00015929200000000185, 0.00015930600000000142, ...</msg>
<status status="PASS" starttime="20201029 12:46:12.277" endtime="20201029 12:46:12.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.284" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:12.283" endtime="20201029 12:46:12.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.286" level="INFO">VALUE: [0.00015931899999999805, 0.00015931900000000151, 0.00015929199999999838, 0.00015930599999999795, 0.000159320000000001, 0.00015929100000000238, 0.00015929200000000185, 0.00015930600000000142, 0.00015931899999999805, 0.00015938899999999936, 0.00015927699999999934, 0.00015936100000000022, 0.00015927800000000228, 0.00015940199999999946, 0.00015930600000000142, 0.00015930600000000142, 0.0001594169999999985, 0.00015929199999999838, 0.00015933400000000056, 0.00015936100000000022, 0.00015926399999999924, 0.00015929200000000185, 0.00015929200000000532, 0.00015931900000000498, 0.00015924999999999967, 0.0001592360000000001, 0.00015930599999999795, 0.00015930500000000541, 0.00015943100000000154, 0.0001592779999999988, 0.00015947300000000025, 0.00015929199999999838, 0.00015933400000000403, 0.0001592779999999988, 0.00015930499999999848, 0.00015941599999999556, 0.00015931899999999805, 0.00015933299999999762, 0.00015931900000000498, 0.00015930599999999795, 0.00015929199999999838, 0.00015934700000000412, 0.00015922200000000053, 0.00015932000000000446, 0.0001592089999999935, 0.00015931899999999805, 0.00015931900000000498, 0.00015934700000000412, 0.00015932000000000446, 0.00015937499999999633]</msg>
<status status="PASS" starttime="20201029 12:46:12.285" endtime="20201029 12:46:12.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.281" endtime="20201029 12:46:12.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.889" endtime="20201029 12:46:12.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.866" endtime="20201029 12:46:12.288"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:12.291" endtime="20201029 12:46:12.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.289" endtime="20201029 12:46:12.311"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.319" endtime="20201029 12:46:12.355"></status>
</kw>
<msg timestamp="20201029 12:46:12.356" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.317" endtime="20201029 12:46:12.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.358" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.357" endtime="20201029 12:46:12.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.359" endtime="20201029 12:46:12.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.315" endtime="20201029 12:46:12.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.313" endtime="20201029 12:46:12.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.369" endtime="20201029 12:46:12.654"></status>
</kw>
<msg timestamp="20201029 12:46:12.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020441958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020613139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.368" endtime="20201029 12:46:12.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020441958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020613139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.658" endtime="20201029 12:46:12.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.666" endtime="20201029 12:46:12.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.365" endtime="20201029 12:46:12.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.364" endtime="20201029 12:46:12.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:12.672" level="INFO">${PHILIP_RES} = [{'diff': 0.00017118099999999942}, {'diff': 0.00017112500000000114}, {'diff': 0.00017118099999999942}, {'diff': 0.0001711520000000008}, {'diff': 0.0001711109999999981}, {'diff': 0.0001710559999999993}...</msg>
<status status="PASS" starttime="20201029 12:46:12.669" endtime="20201029 12:46:12.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:12.676" level="INFO">${RESULT} = {'diff': [0.00017118099999999942, 0.00017112500000000114, 0.00017118099999999942, 0.0001711520000000008, 0.0001711109999999981, 0.0001710559999999993, 0.00017116700000000332, 0.00017111100000000157, 0...</msg>
<status status="PASS" starttime="20201029 12:46:12.673" endtime="20201029 12:46:12.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.680" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:12.679" endtime="20201029 12:46:12.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.683" level="INFO">VALUE: [0.00017118099999999942, 0.00017112500000000114, 0.00017118099999999942, 0.0001711520000000008, 0.0001711109999999981, 0.0001710559999999993, 0.00017116700000000332, 0.00017111100000000157, 0.00017115300000000028, 0.0001711390000000007, 0.0001711390000000007, 0.00017116600000000037, 0.00017109699999999853, 0.00017126400000000083, 0.000171097000000002, 0.0001710559999999993, 0.0001711390000000007, 0.00017101400000000058, 0.0001711390000000007, 0.00017117999999999994, 0.0001712360000000017, 0.0001711390000000007, 0.00017108300000000243, 0.0001711390000000007, 0.00017106899999999592, 0.0001711249999999942, 0.00017113800000000123, 0.00017112500000000114, 0.0001711390000000007, 0.00017111099999999463, 0.00017111100000000157, 0.0001712499999999978, 0.0001711390000000007, 0.00017109800000000147, 0.00017112500000000114, 0.00017115300000000028, 0.00017109699999999506, 0.00017101400000000405, 0.00017116600000000037, 0.00017118100000000636, 0.00017115300000000028, 0.00017107000000000233, 0.0001711390000000007, 0.00017115300000000028, 0.00017120799999999908, 0.000171194999999999, 0.0001710139999999971, 0.00017116600000000037, 0.0001711520000000008, 0.0001711390000000007]</msg>
<status status="PASS" starttime="20201029 12:46:12.682" endtime="20201029 12:46:12.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.677" endtime="20201029 12:46:12.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.311" endtime="20201029 12:46:12.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.289" endtime="20201029 12:46:12.686"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:12.688" endtime="20201029 12:46:12.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.687" endtime="20201029 12:46:12.708"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.716" endtime="20201029 12:46:12.757"></status>
</kw>
<msg timestamp="20201029 12:46:12.758" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.714" endtime="20201029 12:46:12.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.760" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.759" endtime="20201029 12:46:12.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.761" endtime="20201029 12:46:12.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.712" endtime="20201029 12:46:12.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.710" endtime="20201029 12:46:12.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.770" endtime="20201029 12:46:13.075"></status>
</kw>
<msg timestamp="20201029 12:46:13.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020080319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.769" endtime="20201029 12:46:13.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020080319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.084" endtime="20201029 12:46:13.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.101" endtime="20201029 12:46:13.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.766" endtime="20201029 12:46:13.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.764" endtime="20201029 12:46:13.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:13.114" level="INFO">${PHILIP_RES} = [{'diff': 0.00018333400000000027}, {'diff': 0.00018326400000000242}, {'diff': 0.00018327699999999905}, {'diff': 0.0001831520000000024}, {'diff': 0.00018322299999999972}, {'diff': 0.0001832629999999994...</msg>
<status status="PASS" starttime="20201029 12:46:13.107" endtime="20201029 12:46:13.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:13.128" level="INFO">${RESULT} = {'diff': [0.00018333400000000027, 0.00018326400000000242, 0.00018327699999999905, 0.0001831520000000024, 0.00018322299999999972, 0.00018326299999999948, 0.00018322200000000025, 0.00018323599999999982,...</msg>
<status status="PASS" starttime="20201029 12:46:13.116" endtime="20201029 12:46:13.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.137" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:13.135" endtime="20201029 12:46:13.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.142" level="INFO">VALUE: [0.00018333400000000027, 0.00018326400000000242, 0.00018327699999999905, 0.0001831520000000024, 0.00018322299999999972, 0.00018326299999999948, 0.00018322200000000025, 0.00018323599999999982, 0.00018326399999999896, 0.00018313899999999883, 0.00018316700000000144, 0.00018326399999999896, 0.000183278000000002, 0.000183181000000001, 0.00018322199999999678, 0.00018327799999999853, 0.00018327799999999853, 0.00018329200000000156, 0.00018322200000000025, 0.00018333400000000027, 0.00018340199999999918, 0.00018327700000000252, 0.00018330500000000166, 0.00018341599999999875, 0.00018326399999999549, 0.00018326400000000242, 0.000183278000000002, 0.0001832910000000021, 0.00018326400000000242, 0.00018329200000000156, 0.000183278000000002, 0.00018318099999999754, 0.000183278000000002, 0.00018323599999999635, 0.00018329200000000156, 0.000183278000000002, 0.0001833749999999995, 0.00018325000000000286, 0.00018323599999999635, 0.00018325000000000286, 0.00018329099999999515, 0.000183262999999996, 0.0001831659999999985, 0.00018326399999999549, 0.0001831659999999985, 0.00018320800000000415, 0.00018324999999999592, 0.00018313899999999883, 0.00018323599999999635, 0.00018322199999999678]</msg>
<status status="PASS" starttime="20201029 12:46:13.139" endtime="20201029 12:46:13.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.130" endtime="20201029 12:46:13.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.708" endtime="20201029 12:46:13.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.686" endtime="20201029 12:46:13.146"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:13.151" endtime="20201029 12:46:13.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.148" endtime="20201029 12:46:13.172"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.179" endtime="20201029 12:46:13.220"></status>
</kw>
<msg timestamp="20201029 12:46:13.220" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.178" endtime="20201029 12:46:13.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.223" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.221" endtime="20201029 12:46:13.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.224" endtime="20201029 12:46:13.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.175" endtime="20201029 12:46:13.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.174" endtime="20201029 12:46:13.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.233" endtime="20201029 12:46:13.522"></status>
</kw>
<msg timestamp="20201029 12:46:13.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018698153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018893861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.231" endtime="20201029 12:46:13.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018698153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018893861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.530" endtime="20201029 12:46:13.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.538" endtime="20201029 12:46:13.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.228" endtime="20201029 12:46:13.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.227" endtime="20201029 12:46:13.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:13.546" level="INFO">${PHILIP_RES} = [{'diff': 0.00019570800000000277}, {'diff': 0.0001956530000000005}, {'diff': 0.00019561099999999831}, {'diff': 0.0001955559999999995}, {'diff': 0.00019565199999999755}, {'diff': 0.0001956660000000006}...</msg>
<status status="PASS" starttime="20201029 12:46:13.543" endtime="20201029 12:46:13.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:13.550" level="INFO">${RESULT} = {'diff': [0.00019570800000000277, 0.0001956530000000005, 0.00019561099999999831, 0.0001955559999999995, 0.00019565199999999755, 0.0001956660000000006, 0.0001955559999999995, 0.0001956660000000006, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:13.547" endtime="20201029 12:46:13.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.554" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:13.553" endtime="20201029 12:46:13.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.557" level="INFO">VALUE: [0.00019570800000000277, 0.0001956530000000005, 0.00019561099999999831, 0.0001955559999999995, 0.00019565199999999755, 0.0001956660000000006, 0.0001955559999999995, 0.0001956660000000006, 0.0001956940000000032, 0.00019563900000000092, 0.00019559799999999822, 0.00019563899999999745, 0.00019561100000000178, 0.00019563900000000092, 0.00019561099999999831, 0.00019562499999999788, 0.0001956660000000006, 0.00019566700000000006, 0.00019576400000000105, 0.00019568000000000016, 0.00019562500000000135, 0.00019562500000000135, 0.00019561100000000525, 0.00019563899999999745, 0.0001956390000000044, 0.0001956669999999966, 0.00019558399999999865, 0.00019555500000000003, 0.00019563899999999745, 0.0001956390000000044, 0.00019566700000000353, 0.00019563799999999798, 0.00019563899999999745, 0.0001956520000000045, 0.0001955270000000009, 0.00019562499999999788, 0.00019559699999999874, 0.00019565300000000396, 0.00019565300000000396, 0.00019543100000000285, 0.00019552800000000037, 0.00019561099999999831, 0.00019559799999999822, 0.00019558299999999917, 0.00019554100000000046, 0.00019580599999999976, 0.0001956799999999967, 0.00019563799999999798, 0.00019565299999999702, 0.00019576400000000105]</msg>
<status status="PASS" starttime="20201029 12:46:13.556" endtime="20201029 12:46:13.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.551" endtime="20201029 12:46:13.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.172" endtime="20201029 12:46:13.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.147" endtime="20201029 12:46:13.566"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:13.568" endtime="20201029 12:46:13.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.567" endtime="20201029 12:46:13.588"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.597" endtime="20201029 12:46:13.638"></status>
</kw>
<msg timestamp="20201029 12:46:13.638" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.595" endtime="20201029 12:46:13.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.641" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.639" endtime="20201029 12:46:13.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.642" endtime="20201029 12:46:13.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.593" endtime="20201029 12:46:13.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.590" endtime="20201029 12:46:13.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.652" endtime="20201029 12:46:13.958"></status>
</kw>
<msg timestamp="20201029 12:46:13.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018882986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019091347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.650" endtime="20201029 12:46:13.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018882986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019091347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.968" endtime="20201029 12:46:13.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.979" endtime="20201029 12:46:13.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.648" endtime="20201029 12:46:13.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.646" endtime="20201029 12:46:13.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:13.986" level="INFO">${PHILIP_RES} = [{'diff': 0.00020836100000000066}, {'diff': 0.00020831900000000195}, {'diff': 0.00020842999999999903}, {'diff': 0.00020834699999999762}, {'diff': 0.00020837500000000023}, {'diff': 0.000208333000000001...</msg>
<status status="PASS" starttime="20201029 12:46:13.982" endtime="20201029 12:46:13.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:13.990" level="INFO">${RESULT} = {'diff': [0.00020836100000000066, 0.00020831900000000195, 0.00020842999999999903, 0.00020834699999999762, 0.00020837500000000023, 0.00020833300000000152, 0.00020833300000000152, 0.00020840299999999937...</msg>
<status status="PASS" starttime="20201029 12:46:13.987" endtime="20201029 12:46:13.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.994" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:13.993" endtime="20201029 12:46:13.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.997" level="INFO">VALUE: [0.00020836100000000066, 0.00020831900000000195, 0.00020842999999999903, 0.00020834699999999762, 0.00020837500000000023, 0.00020833300000000152, 0.00020833300000000152, 0.00020840299999999937, 0.0002083609999999972, 0.0002084170000000024, 0.0002083889999999998, 0.00020845900000000112, 0.0002083470000000011, 0.00020831899999999848, 0.00020836100000000066, 0.00020831999999999795, 0.0002082780000000027, 0.00020834699999999762, 0.00020829099999999934, 0.00020833299999999805, 0.00020843100000000198, 0.0002082919999999988, 0.00020843100000000198, 0.00020830600000000532, 0.00020826399999999967, 0.0002084449999999946, 0.00020829099999999934, 0.0002083750000000037, 0.00020831999999999795, 0.00020844400000000207, 0.0002083750000000037, 0.0002084720000000012, 0.00020830599999999838, 0.00020834699999999762, 0.0002083609999999972, 0.0002082630000000002, 0.00020841600000000293, 0.00020827699999999977, 0.00020845900000000112, 0.0002083750000000037, 0.00020831900000000542, 0.00020826399999999967, 0.0002082500000000001, 0.0002084029999999959, 0.0002083750000000037, 0.00020840300000000284, 0.0002083880000000038, 0.00020827699999999977, 0.00020831999999999795, 0.00020827800000000618]</msg>
<status status="PASS" starttime="20201029 12:46:13.996" endtime="20201029 12:46:13.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.991" endtime="20201029 12:46:13.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.589" endtime="20201029 12:46:14.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.566" endtime="20201029 12:46:14.000"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:14.002" endtime="20201029 12:46:14.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.001" endtime="20201029 12:46:14.023"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.031" endtime="20201029 12:46:14.078"></status>
</kw>
<msg timestamp="20201029 12:46:14.079" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.029" endtime="20201029 12:46:14.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.081" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.080" endtime="20201029 12:46:14.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.083" endtime="20201029 12:46:14.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.027" endtime="20201029 12:46:14.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.025" endtime="20201029 12:46:14.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.092" endtime="20201029 12:46:14.378"></status>
</kw>
<msg timestamp="20201029 12:46:14.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02198, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201181, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:46:14.090" endtime="20201029 12:46:14.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02198, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201181, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:46:14.382" endtime="20201029 12:46:14.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.390" endtime="20201029 12:46:14.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.088" endtime="20201029 12:46:14.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.086" endtime="20201029 12:46:14.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:14.397" level="INFO">${PHILIP_RES} = [{'diff': 0.00022118100000000085}, {'diff': 0.00022109799999999943}, {'diff': 0.0002211249999999991}, {'diff': 0.00022105600000000072}, {'diff': 0.00022109699999999996}, {'diff': 0.0002211950000000004...</msg>
<status status="PASS" starttime="20201029 12:46:14.394" endtime="20201029 12:46:14.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:14.402" level="INFO">${RESULT} = {'diff': [0.00022118100000000085, 0.00022109799999999943, 0.0002211249999999991, 0.00022105600000000072, 0.00022109699999999996, 0.00022119500000000042, 0.0002211669999999978, 0.00022106899999999735, ...</msg>
<status status="PASS" starttime="20201029 12:46:14.398" endtime="20201029 12:46:14.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.406" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:14.405" endtime="20201029 12:46:14.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.409" level="INFO">VALUE: [0.00022118100000000085, 0.00022109799999999943, 0.0002211249999999991, 0.00022105600000000072, 0.00022109699999999996, 0.00022119500000000042, 0.0002211669999999978, 0.00022106899999999735, 0.000221209, 0.00022123599999999966, 0.0002211249999999991, 0.00022119500000000042, 0.0002210830000000004, 0.00022118000000000138, 0.0002210830000000004, 0.0002210690000000043, 0.00022104199999999768, 0.0002211389999999952, 0.00022097199999999984, 0.00022120800000000052, 0.00022106899999999735, 0.00022118100000000085, 0.00022108400000000333, 0.00022123599999999966, 0.00022118100000000085, 0.0002211530000000017, 0.00022119500000000042, 0.00022119400000000095, 0.00022118000000000138, 0.00022111099999999606, 0.00022116700000000128, 0.00022112500000000257, 0.00022116700000000128, 0.00022112500000000257, 0.00022118000000000138, 0.00022118000000000138, 0.000221209, 0.00022118100000000085, 0.00022105499999999778, 0.00022113900000000214, 0.0002211530000000017, 0.00022113900000000214, 0.00022108300000000386, 0.0002210980000000029, 0.00022120800000000052, 0.00022112500000000257, 0.00022109700000000343, 0.0002211519999999953, 0.00022118000000000138, 0.00022112500000000257]</msg>
<status status="PASS" starttime="20201029 12:46:14.407" endtime="20201029 12:46:14.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.403" endtime="20201029 12:46:14.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.023" endtime="20201029 12:46:14.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.000" endtime="20201029 12:46:14.411"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:14.413" endtime="20201029 12:46:14.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.412" endtime="20201029 12:46:14.434"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.442" endtime="20201029 12:46:14.486"></status>
</kw>
<msg timestamp="20201029 12:46:14.486" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.440" endtime="20201029 12:46:14.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.489" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.487" endtime="20201029 12:46:14.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.490" endtime="20201029 12:46:14.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.438" endtime="20201029 12:46:14.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.436" endtime="20201029 12:46:14.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.499" endtime="20201029 12:46:14.787"></status>
</kw>
<msg timestamp="20201029 12:46:14.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017738583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017973069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.498" endtime="20201029 12:46:14.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017738583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017973069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.791" endtime="20201029 12:46:14.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.799" endtime="20201029 12:46:14.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.495" endtime="20201029 12:46:14.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.493" endtime="20201029 12:46:14.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:14.807" level="INFO">${PHILIP_RES} = [{'diff': 0.0002344860000000025}, {'diff': 0.0002343609999999989}, {'diff': 0.00023443100000000022}, {'diff': 0.00023443100000000022}, {'diff': 0.0002344579999999999}, {'diff': 0.00023433299999999976}...</msg>
<status status="PASS" starttime="20201029 12:46:14.804" endtime="20201029 12:46:14.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:14.811" level="INFO">${RESULT} = {'diff': [0.0002344860000000025, 0.0002343609999999989, 0.00023443100000000022, 0.00023443100000000022, 0.0002344579999999999, 0.00023433299999999976, 0.00023436100000000237, 0.0002343609999999989, 0....</msg>
<status status="PASS" starttime="20201029 12:46:14.808" endtime="20201029 12:46:14.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.815" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:14.814" endtime="20201029 12:46:14.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.818" level="INFO">VALUE: [0.0002344860000000025, 0.0002343609999999989, 0.00023443100000000022, 0.00023443100000000022, 0.0002344579999999999, 0.00023433299999999976, 0.00023436100000000237, 0.0002343609999999989, 0.0002343479999999988, 0.00023443000000000075, 0.00023445900000000283, 0.00023434699999999933, 0.0002343609999999989, 0.0002344029999999976, 0.0002343609999999989, 0.0002344999999999986, 0.00023433299999999976, 0.0002343060000000001, 0.00023431899999999672, 0.00023438899999999804, 0.0002343329999999963, 0.00023436200000000185, 0.00023430599999999663, 0.00023443100000000022, 0.00023434799999999534, 0.0002344999999999986, 0.00023440300000000108, 0.00023436099999999543, 0.0002342779999999975, 0.00023430599999999663, 0.00023447199999999946, 0.00023436100000000237, 0.00023443100000000022, 0.00023434699999999586, 0.000234374999999995, 0.00023436099999999543, 0.0002344999999999986, 0.00023443100000000022, 0.000234374999999995, 0.00023430600000000357, 0.00023431900000000366, 0.00023424999999999835, 0.00023443100000000022, 0.00023441700000000065, 0.00023447199999999946, 0.0002343329999999963, 0.00023445899999999936, 0.00023433300000000323, 0.00023450000000000554, 0.00023440300000000108]</msg>
<status status="PASS" starttime="20201029 12:46:14.817" endtime="20201029 12:46:14.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.812" endtime="20201029 12:46:14.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.434" endtime="20201029 12:46:14.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.411" endtime="20201029 12:46:14.820"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:14.822" endtime="20201029 12:46:14.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.821" endtime="20201029 12:46:14.843"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.851" endtime="20201029 12:46:14.899"></status>
</kw>
<msg timestamp="20201029 12:46:14.899" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.849" endtime="20201029 12:46:14.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.902" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.900" endtime="20201029 12:46:14.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.903" endtime="20201029 12:46:14.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.847" endtime="20201029 12:46:14.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.845" endtime="20201029 12:46:14.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.913" endtime="20201029 12:46:15.200"></status>
</kw>
<msg timestamp="20201029 12:46:15.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020709556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020957361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.911" endtime="20201029 12:46:15.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020709556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020957361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:15.204" endtime="20201029 12:46:15.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.212" endtime="20201029 12:46:15.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.909" endtime="20201029 12:46:15.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.907" endtime="20201029 12:46:15.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:15.219" level="INFO">${PHILIP_RES} = [{'diff': 0.00024780500000000025}, {'diff': 0.00024769500000000264}, {'diff': 0.00024779200000000015}, {'diff': 0.00024788800000000166}, {'diff': 0.000247764000000001}, {'diff': 0.00024762499999999785...</msg>
<status status="PASS" starttime="20201029 12:46:15.215" endtime="20201029 12:46:15.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:15.223" level="INFO">${RESULT} = {'diff': [0.00024780500000000025, 0.00024769500000000264, 0.00024779200000000015, 0.00024788800000000166, 0.000247764000000001, 0.00024762499999999785, 0.0002477780000000006, 0.0002476939999999997, 0....</msg>
<status status="PASS" starttime="20201029 12:46:15.220" endtime="20201029 12:46:15.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.227" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:15.226" endtime="20201029 12:46:15.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.230" level="INFO">VALUE: [0.00024780500000000025, 0.00024769500000000264, 0.00024779200000000015, 0.00024788800000000166, 0.000247764000000001, 0.00024762499999999785, 0.0002477780000000006, 0.0002476939999999997, 0.00024772199999999883, 0.00024773700000000135, 0.000247764000000001, 0.0002476809999999996, 0.0002477369999999979, 0.0002476250000000013, 0.00024756900000000304, 0.0002476939999999997, 0.0002476250000000013, 0.00024769499999999917, 0.000247667, 0.000247667, 0.00024774999999999797, 0.00024765300000000046, 0.00024761100000000175, 0.00024765300000000046, 0.0002477779999999971, 0.0002476800000000001, 0.0002476390000000009, 0.00024769499999999917, 0.000247667, 0.00024761100000000175, 0.0002476529999999935, 0.0002476800000000001, 0.0002476109999999948, 0.0002476249999999944, 0.0002477090000000057, 0.0002477920000000036, 0.0002476250000000013, 0.00024761100000000175, 0.0002476939999999997, 0.0002476390000000009, 0.00024759800000000165, 0.0002477500000000049, 0.00024756900000000304, 0.00024772200000000577, 0.0002475970000000022, 0.0002477500000000049, 0.00024758299999999567, 0.0002476950000000061, 0.0002475280000000038, 0.0002476809999999996]</msg>
<status status="PASS" starttime="20201029 12:46:15.228" endtime="20201029 12:46:15.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.224" endtime="20201029 12:46:15.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.843" endtime="20201029 12:46:15.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.820" endtime="20201029 12:46:15.233"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:15.235" endtime="20201029 12:46:15.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.234" endtime="20201029 12:46:15.255"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.264" endtime="20201029 12:46:15.314"></status>
</kw>
<msg timestamp="20201029 12:46:15.315" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.262" endtime="20201029 12:46:15.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.317" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.316" endtime="20201029 12:46:15.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.318" endtime="20201029 12:46:15.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.259" endtime="20201029 12:46:15.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.257" endtime="20201029 12:46:15.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.328" endtime="20201029 12:46:15.616"></status>
</kw>
<msg timestamp="20201029 12:46:15.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020047792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020309028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:15.326" endtime="20201029 12:46:15.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020047792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020309028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:15.620" endtime="20201029 12:46:15.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.628" endtime="20201029 12:46:15.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.324" endtime="20201029 12:46:15.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.322" endtime="20201029 12:46:15.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:15.634" level="INFO">${PHILIP_RES} = [{'diff': 0.0002612360000000015}, {'diff': 0.00026120800000000235}, {'diff': 0.0002612780000000002}, {'diff': 0.0002613060000000028}, {'diff': 0.00026130599999999934}, {'diff': 0.0002613469999999986},...</msg>
<status status="PASS" starttime="20201029 12:46:15.631" endtime="20201029 12:46:15.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:15.639" level="INFO">${RESULT} = {'diff': [0.0002612360000000015, 0.00026120800000000235, 0.0002612780000000002, 0.0002613060000000028, 0.00026130599999999934, 0.0002613469999999986, 0.00026126400000000063, 0.00026130499999999987, 0....</msg>
<status status="PASS" starttime="20201029 12:46:15.635" endtime="20201029 12:46:15.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.644" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:15.643" endtime="20201029 12:46:15.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.646" level="INFO">VALUE: [0.0002612360000000015, 0.00026120800000000235, 0.0002612780000000002, 0.0002613060000000028, 0.00026130599999999934, 0.0002613469999999986, 0.00026126400000000063, 0.00026130499999999987, 0.0002612079999999989, 0.0002612079999999989, 0.0002612919999999998, 0.0002612919999999998, 0.0002612919999999998, 0.00026125000000000106, 0.0002612910000000003, 0.0002613610000000016, 0.0002613330000000025, 0.00026127799999999674, 0.0002612499999999976, 0.0002613059999999959, 0.0002611939999999993, 0.000261333999999995, 0.00026133299999999554, 0.0002614160000000004, 0.00026134700000000205, 0.00026122199999999846, 0.00026129200000000324, 0.0002611809999999992, 0.0002613060000000028, 0.00026122199999999846, 0.0002612919999999963, 0.00026123600000000496, 0.00026126399999999717, 0.0002612919999999963, 0.00026127699999999726, 0.00026129200000000324, 0.00026129200000000324, 0.00026126399999999717, 0.00026131999999999544, 0.00026131899999999597, 0.00026143, 0.0002613620000000011, 0.00026122199999999846, 0.00026130500000000334, 0.00026129200000000324, 0.0002613059999999959, 0.00026127799999999674, 0.00026138900000000076, 0.0002612369999999975, 0.00026123600000000496]</msg>
<status status="PASS" starttime="20201029 12:46:15.645" endtime="20201029 12:46:15.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.640" endtime="20201029 12:46:15.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.256" endtime="20201029 12:46:15.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.233" endtime="20201029 12:46:15.648"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:15.651" endtime="20201029 12:46:15.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.649" endtime="20201029 12:46:15.671"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.679" endtime="20201029 12:46:15.732"></status>
</kw>
<msg timestamp="20201029 12:46:15.732" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.678" endtime="20201029 12:46:15.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.735" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.733" endtime="20201029 12:46:15.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.736" endtime="20201029 12:46:15.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.675" endtime="20201029 12:46:15.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.673" endtime="20201029 12:46:15.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.745" endtime="20201029 12:46:16.031"></status>
</kw>
<msg timestamp="20201029 12:46:16.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021254861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021529917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:15.744" endtime="20201029 12:46:16.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021254861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021529917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.035" endtime="20201029 12:46:16.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.043" endtime="20201029 12:46:16.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.741" endtime="20201029 12:46:16.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.739" endtime="20201029 12:46:16.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:16.051" level="INFO">${PHILIP_RES} = [{'diff': 0.0002750559999999992}, {'diff': 0.0002750970000000019}, {'diff': 0.0002750140000000005}, {'diff': 0.00027513900000000063}, {'diff': 0.00027513900000000063}, {'diff': 0.00027516699999999977}...</msg>
<status status="PASS" starttime="20201029 12:46:16.048" endtime="20201029 12:46:16.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:16.055" level="INFO">${RESULT} = {'diff': [0.0002750559999999992, 0.0002750970000000019, 0.0002750140000000005, 0.00027513900000000063, 0.00027513900000000063, 0.00027516699999999977, 0.0002751249999999976, 0.0002750829999999989, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:16.052" endtime="20201029 12:46:16.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.059" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:16.058" endtime="20201029 12:46:16.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.062" level="INFO">VALUE: [0.0002750559999999992, 0.0002750970000000019, 0.0002750140000000005, 0.00027513900000000063, 0.00027513900000000063, 0.00027516699999999977, 0.0002751249999999976, 0.0002750829999999989, 0.0002751110000000015, 0.00027512500000000106, 0.0002750699999999988, 0.00027516699999999977, 0.0002750699999999988, 0.00027525000000000466, 0.00027517999999999987, 0.00027512500000000106, 0.00027519399999999944, 0.00027512500000000106, 0.00027525000000000466, 0.0002752089999999985, 0.0002751379999999942, 0.00027517999999999987, 0.0002751949999999989, 0.0002752639999999973, 0.00027525000000000466, 0.0002750970000000019, 0.00027515200000000073, 0.00027511200000000097, 0.00027517999999999987, 0.000275207999999999, 0.00027512500000000106, 0.0002752220000000055, 0.0002751110000000015, 0.00027513900000000063, 0.0002752219999999986, 0.00027507000000000226, 0.00027512500000000106, 0.0002750970000000019, 0.00027507000000000226, 0.0002750000000000044, 0.0002751530000000002, 0.00027502800000000355, 0.0002752220000000055, 0.00027511099999999455, 0.0002751949999999989, 0.0002751949999999989, 0.00027516699999999977, 0.00027516699999999977, 0.0002751660000000003, 0.000275207999999999]</msg>
<status status="PASS" starttime="20201029 12:46:16.061" endtime="20201029 12:46:16.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.056" endtime="20201029 12:46:16.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.671" endtime="20201029 12:46:16.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.649" endtime="20201029 12:46:16.064"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:16.067" endtime="20201029 12:46:16.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.065" endtime="20201029 12:46:16.087"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.095" endtime="20201029 12:46:16.149"></status>
</kw>
<msg timestamp="20201029 12:46:16.150" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.094" endtime="20201029 12:46:16.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.153" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.151" endtime="20201029 12:46:16.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.154" endtime="20201029 12:46:16.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.091" endtime="20201029 12:46:16.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.089" endtime="20201029 12:46:16.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.164" endtime="20201029 12:46:16.450"></status>
</kw>
<msg timestamp="20201029 12:46:16.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022515042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.163" endtime="20201029 12:46:16.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022515042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.454" endtime="20201029 12:46:16.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.462" endtime="20201029 12:46:16.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.160" endtime="20201029 12:46:16.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.158" endtime="20201029 12:46:16.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:16.469" level="INFO">${PHILIP_RES} = [{'diff': 0.0002892640000000009}, {'diff': 0.0002892909999999971}, {'diff': 0.0002892500000000013}, {'diff': 0.000289292}, {'diff': 0.0002892630000000014}, {'diff': 0.00028931999999999916}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 12:46:16.466" endtime="20201029 12:46:16.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:16.473" level="INFO">${RESULT} = {'diff': [0.0002892640000000009, 0.0002892909999999971, 0.0002892500000000013, 0.000289292, 0.0002892630000000014, 0.00028931999999999916, 0.00028931900000000316, 0.0002894449999999993, 0.000289512999...</msg>
<status status="PASS" starttime="20201029 12:46:16.470" endtime="20201029 12:46:16.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.478" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:16.477" endtime="20201029 12:46:16.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.480" level="INFO">VALUE: [0.0002892640000000009, 0.0002892909999999971, 0.0002892500000000013, 0.000289292, 0.0002892630000000014, 0.00028931999999999916, 0.00028931900000000316, 0.0002894449999999993, 0.0002895129999999982, 0.0002894029999999971, 0.000289389000000001, 0.00028952800000000417, 0.00028940199999999416, 0.000289389000000001, 0.0002894859999999985, 0.0002894579999999994, 0.00028950000000000503, 0.00028936200000000134, 0.00028941700000000015, 0.0002893470000000023, 0.00028943000000000024, 0.00028954200000000374, 0.00028943000000000024, 0.0002894449999999993, 0.00028941700000000015, 0.0002894859999999985, 0.0002894030000000006, 0.00028937500000000144, 0.0002894449999999993, 0.0002894309999999997, 0.00028941600000000067, 0.00028934799999999483, 0.00028941600000000067, 0.0002894859999999985, 0.0002894030000000006, 0.0002894449999999993, 0.00028941600000000067, 0.00028941700000000015, 0.00028945899999999886, 0.0002892909999999971, 0.00028931900000000316, 0.0002893059999999961, 0.00028931900000000316, 0.00028931900000000316, 0.0002893340000000022, 0.0002893470000000023, 0.0002893199999999957, 0.000289277999999997, 0.0002892780000000039, 0.0002892920000000035]</msg>
<status status="PASS" starttime="20201029 12:46:16.479" endtime="20201029 12:46:16.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.474" endtime="20201029 12:46:16.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.087" endtime="20201029 12:46:16.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.064" endtime="20201029 12:46:16.483"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:16.486" endtime="20201029 12:46:16.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.484" endtime="20201029 12:46:16.506"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.514" endtime="20201029 12:46:16.570"></status>
</kw>
<msg timestamp="20201029 12:46:16.571" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.512" endtime="20201029 12:46:16.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.574" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.572" endtime="20201029 12:46:16.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.575" endtime="20201029 12:46:16.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.510" endtime="20201029 12:46:16.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.508" endtime="20201029 12:46:16.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.584" endtime="20201029 12:46:16.893"></status>
</kw>
<msg timestamp="20201029 12:46:16.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020527167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020830806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.583" endtime="20201029 12:46:16.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020527167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020830806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.902" endtime="20201029 12:46:16.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.910" endtime="20201029 12:46:16.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.580" endtime="20201029 12:46:16.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.578" endtime="20201029 12:46:16.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:16.917" level="INFO">${PHILIP_RES} = [{'diff': 0.0003036390000000014}, {'diff': 0.0003036940000000002}, {'diff': 0.0003036800000000006}, {'diff': 0.0003036810000000001}, {'diff': 0.00030369499999999966}, {'diff': 0.00030365300000000095},...</msg>
<status status="PASS" starttime="20201029 12:46:16.914" endtime="20201029 12:46:16.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:16.924" level="INFO">${RESULT} = {'diff': [0.0003036390000000014, 0.0003036940000000002, 0.0003036800000000006, 0.0003036810000000001, 0.00030369499999999966, 0.00030365300000000095, 0.00030358299999999963, 0.00030356900000000006, 0....</msg>
<status status="PASS" starttime="20201029 12:46:16.918" endtime="20201029 12:46:16.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.929" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:16.928" endtime="20201029 12:46:16.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.932" level="INFO">VALUE: [0.0003036390000000014, 0.0003036940000000002, 0.0003036800000000006, 0.0003036810000000001, 0.00030369499999999966, 0.00030365300000000095, 0.00030358299999999963, 0.00030356900000000006, 0.0003036529999999975, 0.00030369499999999966, 0.0003037219999999993, 0.0003036940000000002, 0.0003036389999999979, 0.0003037359999999989, 0.00030365300000000095, 0.0003036940000000002, 0.00030363899999999444, 0.000303554999999997, 0.0003035280000000043, 0.0003036390000000014, 0.00030365300000000095, 0.0003036250000000018, 0.0003037359999999989, 0.0003035840000000026, 0.0003037370000000053, 0.00030376399999999804, 0.00030374999999999847, 0.00030372300000000574, 0.0003037219999999993, 0.0003036940000000002, 0.00030361100000000224, 0.0003036810000000001, 0.0003037370000000053, 0.00030356900000000353, 0.0003036520000000015, 0.0003038610000000025, 0.0003036810000000001, 0.00030361100000000224, 0.0003037359999999989, 0.00030374999999999847, 0.0003036799999999937, 0.00030373600000000583, 0.0003036659999999941, 0.0003036659999999941, 0.0003036810000000001, 0.0003038060000000037, 0.0003036250000000018, 0.0003036800000000006, 0.00030374999999999847, 0.000303764000000005]</msg>
<status status="PASS" starttime="20201029 12:46:16.930" endtime="20201029 12:46:16.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.925" endtime="20201029 12:46:16.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.506" endtime="20201029 12:46:16.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.483" endtime="20201029 12:46:16.934"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:16.936" endtime="20201029 12:46:16.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.935" endtime="20201029 12:46:16.956"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.965" endtime="20201029 12:46:17.023"></status>
</kw>
<msg timestamp="20201029 12:46:17.023" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.963" endtime="20201029 12:46:17.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.026" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.024" endtime="20201029 12:46:17.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.027" endtime="20201029 12:46:17.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.960" endtime="20201029 12:46:17.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.958" endtime="20201029 12:46:17.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.036" endtime="20201029 12:46:17.322"></status>
</kw>
<msg timestamp="20201029 12:46:17.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022505597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.035" endtime="20201029 12:46:17.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022505597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.326" endtime="20201029 12:46:17.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.334" endtime="20201029 12:46:17.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.032" endtime="20201029 12:46:17.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.030" endtime="20201029 12:46:17.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:17.342" level="INFO">${PHILIP_RES} = [{'diff': 0.00031845799999999716}, {'diff': 0.00031844400000000106}, {'diff': 0.00031848599999999977}, {'diff': 0.00031838900000000225}, {'diff': 0.0003184439999999976}, {'diff': 0.000318429999999998}...</msg>
<status status="PASS" starttime="20201029 12:46:17.339" endtime="20201029 12:46:17.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.346" level="INFO">${RESULT} = {'diff': [0.00031845799999999716, 0.00031844400000000106, 0.00031848599999999977, 0.00031838900000000225, 0.0003184439999999976, 0.000318429999999998, 0.00031844400000000106, 0.00031844500000000053, 0...</msg>
<status status="PASS" starttime="20201029 12:46:17.343" endtime="20201029 12:46:17.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.350" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:17.349" endtime="20201029 12:46:17.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.353" level="INFO">VALUE: [0.00031845799999999716, 0.00031844400000000106, 0.00031848599999999977, 0.00031838900000000225, 0.0003184439999999976, 0.000318429999999998, 0.00031844400000000106, 0.00031844500000000053, 0.0003183330000000005, 0.0003184169999999979, 0.0003184590000000001, 0.00031844500000000053, 0.0003184170000000014, 0.00031838900000000225, 0.00031848699999999924, 0.00031833299999999704, 0.000318333000000004, 0.0003183609999999962, 0.0003184590000000001, 0.00031848599999999977, 0.00031833299999999704, 0.0003184729999999997, 0.00031849999999999934, 0.00031845800000000063, 0.00031838900000000225, 0.00031838900000000225, 0.000318348000000003, 0.0003184160000000019, 0.00031849999999999934, 0.0003183889999999953, 0.0003185139999999989, 0.00031849999999999934, 0.0003185000000000063, 0.00031848599999999977, 0.0003184860000000067, 0.0003183610000000031, 0.00031848599999999977, 0.00031845800000000063, 0.0003184720000000002, 0.00031854199999999805, 0.00031845800000000063, 0.00031844400000000106, 0.0003183609999999962, 0.0003184590000000001, 0.00031838900000000225, 0.0003183889999999953, 0.00031837499999999574, 0.0003184860000000067, 0.00031848599999999283, 0.000318526999999999]</msg>
<status status="PASS" starttime="20201029 12:46:17.351" endtime="20201029 12:46:17.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.347" endtime="20201029 12:46:17.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.957" endtime="20201029 12:46:17.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.934" endtime="20201029 12:46:17.355"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:17.357" endtime="20201029 12:46:17.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.356" endtime="20201029 12:46:17.377"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.386" endtime="20201029 12:46:17.441"></status>
</kw>
<msg timestamp="20201029 12:46:17.441" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.384" endtime="20201029 12:46:17.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.444" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.442" endtime="20201029 12:46:17.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.445" endtime="20201029 12:46:17.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.382" endtime="20201029 12:46:17.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.380" endtime="20201029 12:46:17.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.455" endtime="20201029 12:46:17.770"></status>
</kw>
<msg timestamp="20201029 12:46:17.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017861181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018194403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.454" endtime="20201029 12:46:17.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017861181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018194403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.774" endtime="20201029 12:46:17.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.781" endtime="20201029 12:46:17.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.451" endtime="20201029 12:46:17.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.449" endtime="20201029 12:46:17.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:17.788" level="INFO">${PHILIP_RES} = [{'diff': 0.00033322200000000107}, {'diff': 0.00033305599999999824}, {'diff': 0.0003332500000000002}, {'diff': 0.000333209000000001}, {'diff': 0.00033319400000000193}, {'diff': 0.00033315199999999975}...</msg>
<status status="PASS" starttime="20201029 12:46:17.785" endtime="20201029 12:46:17.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.792" level="INFO">${RESULT} = {'diff': [0.00033322200000000107, 0.00033305599999999824, 0.0003332500000000002, 0.000333209000000001, 0.00033319400000000193, 0.00033315199999999975, 0.0003332500000000002, 0.00033337500000000034, 0....</msg>
<status status="PASS" starttime="20201029 12:46:17.789" endtime="20201029 12:46:17.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.796" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:17.795" endtime="20201029 12:46:17.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.798" level="INFO">VALUE: [0.00033322200000000107, 0.00033305599999999824, 0.0003332500000000002, 0.000333209000000001, 0.00033319400000000193, 0.00033315199999999975, 0.0003332500000000002, 0.00033337500000000034, 0.00033313899999999966, 0.0003332639999999998, 0.00033319400000000193, 0.0003332639999999998, 0.0003331950000000014, 0.0003333470000000012, 0.0003332500000000002, 0.0003330829999999979, 0.00033319400000000193, 0.00033322200000000107, 0.0003332359999999937, 0.00033315299999999576, 0.00033316700000000227, 0.0003332919999999989, 0.000333111000000004, 0.00033322200000000107, 0.0003332919999999989, 0.000333209000000001, 0.0003331950000000014, 0.0003332639999999998, 0.0003332370000000001, 0.0003333620000000037, 0.0003333059999999985, 0.0003332639999999998, 0.00033322200000000107, 0.00033315299999999576, 0.0003332080000000015, 0.0003332080000000015, 0.00033323600000000064, 0.000333304999999999, 0.0003332919999999989, 0.00033327799999999935, 0.0003331390000000031, 0.00033315299999999576, 0.00033323600000000064, 0.00033311099999999705, 0.0003332500000000002, 0.00033322300000000055, 0.0003332639999999998, 0.0003332919999999989, 0.00033327799999999935, 0.0003332920000000128]</msg>
<status status="PASS" starttime="20201029 12:46:17.797" endtime="20201029 12:46:17.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.793" endtime="20201029 12:46:17.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.378" endtime="20201029 12:46:17.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.355" endtime="20201029 12:46:17.801"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:17.803" endtime="20201029 12:46:17.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.802" endtime="20201029 12:46:17.823"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.831" endtime="20201029 12:46:17.892"></status>
</kw>
<msg timestamp="20201029 12:46:17.892" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.830" endtime="20201029 12:46:17.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.894" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.893" endtime="20201029 12:46:17.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.896" endtime="20201029 12:46:17.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.827" endtime="20201029 12:46:17.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.825" endtime="20201029 12:46:17.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.904" endtime="20201029 12:46:18.190"></status>
</kw>
<msg timestamp="20201029 12:46:18.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018945597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019294111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.903" endtime="20201029 12:46:18.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018945597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019294111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:18.194" endtime="20201029 12:46:18.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.202" endtime="20201029 12:46:18.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.900" endtime="20201029 12:46:18.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.899" endtime="20201029 12:46:18.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:18.208" level="INFO">${PHILIP_RES} = [{'diff': 0.0003485139999999977}, {'diff': 0.00034843099999999974}, {'diff': 0.0003485129999999982}, {'diff': 0.0003484030000000006}, {'diff': 0.00034856999999999944}, {'diff': 0.000348471999999999}, ...</msg>
<status status="PASS" starttime="20201029 12:46:18.205" endtime="20201029 12:46:18.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:18.213" level="INFO">${RESULT} = {'diff': [0.0003485139999999977, 0.00034843099999999974, 0.0003485129999999982, 0.0003484030000000006, 0.00034856999999999944, 0.000348471999999999, 0.0003485280000000007, 0.0003485280000000007, 0.000...</msg>
<status status="PASS" starttime="20201029 12:46:18.209" endtime="20201029 12:46:18.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.217" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:18.216" endtime="20201029 12:46:18.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.220" level="INFO">VALUE: [0.0003485139999999977, 0.00034843099999999974, 0.0003485129999999982, 0.0003484030000000006, 0.00034856999999999944, 0.000348471999999999, 0.0003485280000000007, 0.0003485280000000007, 0.00034838900000000103, 0.00034852799999999726, 0.0003484579999999994, 0.0003484579999999994, 0.0003484579999999994, 0.00034843000000000374, 0.000348374999999998, 0.0003484870000000015, 0.00034841599999999723, 0.00034837500000000493, 0.0003485000000000016, 0.0003483199999999992, 0.00034844499999999584, 0.000348374999999998, 0.00034841599999999723, 0.0003483329999999993, 0.00034838899999999756, 0.00034847200000000245, 0.00034838899999999756, 0.00034849999999999465, 0.00034833399999999876, 0.0003484169999999967, 0.00034847200000000245, 0.0003485550000000004, 0.0003484719999999955, 0.00034840299999999713, 0.0003483199999999992, 0.0003485979999999986, 0.0003484719999999955, 0.0003485280000000007, 0.0003485420000000003, 0.0003486389999999978, 0.00034841700000000364, 0.00034861099999999867, 0.000348374999999998, 0.00034856899999999996, 0.0003485969999999991, 0.0003485280000000007, 0.000348374999999998, 0.0003485139999999942, 0.0003484730000000019, 0.00034855599999999987]</msg>
<status status="PASS" starttime="20201029 12:46:18.218" endtime="20201029 12:46:18.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.214" endtime="20201029 12:46:18.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.824" endtime="20201029 12:46:18.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.801" endtime="20201029 12:46:18.222"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:18.224" endtime="20201029 12:46:18.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.223" endtime="20201029 12:46:18.244"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.252" endtime="20201029 12:46:18.315"></status>
</kw>
<msg timestamp="20201029 12:46:18.315" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.250" endtime="20201029 12:46:18.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.318" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.316" endtime="20201029 12:46:18.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.319" endtime="20201029 12:46:18.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.248" endtime="20201029 12:46:18.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.246" endtime="20201029 12:46:18.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.328" endtime="20201029 12:46:18.628"></status>
</kw>
<msg timestamp="20201029 12:46:18.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020367694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020731361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:18.326" endtime="20201029 12:46:18.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020367694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020731361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:18.632" endtime="20201029 12:46:18.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.640" endtime="20201029 12:46:18.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.324" endtime="20201029 12:46:18.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.322" endtime="20201029 12:46:18.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:18.648" level="INFO">${PHILIP_RES} = [{'diff': 0.00036366700000000154}, {'diff': 0.0003636950000000007}, {'diff': 0.0003635690000000011}, {'diff': 0.00036363899999999894}, {'diff': 0.0003636940000000012}, {'diff': 0.0003636529999999985},...</msg>
<status status="PASS" starttime="20201029 12:46:18.645" endtime="20201029 12:46:18.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:18.652" level="INFO">${RESULT} = {'diff': [0.00036366700000000154, 0.0003636950000000007, 0.0003635690000000011, 0.00036363899999999894, 0.0003636940000000012, 0.0003636529999999985, 0.00036362499999999937, 0.0003636109999999998, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:18.649" endtime="20201029 12:46:18.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.656" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:18.655" endtime="20201029 12:46:18.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.658" level="INFO">VALUE: [0.00036366700000000154, 0.0003636950000000007, 0.0003635690000000011, 0.00036363899999999894, 0.0003636940000000012, 0.0003636529999999985, 0.00036362499999999937, 0.0003636109999999998, 0.0003637499999999995, 0.00036366700000000154, 0.00036362500000000283, 0.00036369500000000415, 0.00036363899999999894, 0.00036366600000000554, 0.0003638330000000009, 0.0003637639999999956, 0.00036366600000000554, 0.0003637770000000026, 0.0003635420000000014, 0.0003636529999999985, 0.00036363799999999946, 0.00036376400000000253, 0.0003637219999999969, 0.0003636659999999986, 0.00036363799999999946, 0.0003636529999999985, 0.00036376300000000306, 0.00036363899999999894, 0.00036365199999999903, 0.0003636949999999972, 0.00036369399999999774, 0.0003636659999999986, 0.00036386100000000005, 0.00036358400000000013, 0.0003636109999999998, 0.00036365199999999903, 0.00036363899999999894, 0.000363749999999996, 0.00036363899999999894, 0.00036362499999999937, 0.00036363899999999894, 0.0003636109999999998, 0.000363667000000005, 0.0003636949999999972, 0.0003634860000000101, 0.00036363899999999894, 0.0003636669999999981, 0.0003636250000000063, 0.0003636249999999924, 0.00036370800000000425]</msg>
<status status="PASS" starttime="20201029 12:46:18.657" endtime="20201029 12:46:18.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.653" endtime="20201029 12:46:18.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.245" endtime="20201029 12:46:18.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.222" endtime="20201029 12:46:18.718"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:18.720" endtime="20201029 12:46:18.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.719" endtime="20201029 12:46:18.740"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.748" endtime="20201029 12:46:18.811"></status>
</kw>
<msg timestamp="20201029 12:46:18.812" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.747" endtime="20201029 12:46:18.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.814" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.813" endtime="20201029 12:46:18.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.815" endtime="20201029 12:46:18.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.744" endtime="20201029 12:46:18.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.742" endtime="20201029 12:46:18.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.826" endtime="20201029 12:46:19.111"></status>
</kw>
<msg timestamp="20201029 12:46:19.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021565306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:18.824" endtime="20201029 12:46:19.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021565306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.115" endtime="20201029 12:46:19.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.123" endtime="20201029 12:46:19.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.821" endtime="20201029 12:46:19.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.819" endtime="20201029 12:46:19.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:19.129" level="INFO">${PHILIP_RES} = [{'diff': 0.00037938800000000134}, {'diff': 0.00037936100000000167}, {'diff': 0.00037945899999999866}, {'diff': 0.00037936100000000167}, {'diff': 0.0003792919999999998}, {'diff': 0.0003793609999999982...</msg>
<status status="PASS" starttime="20201029 12:46:19.126" endtime="20201029 12:46:19.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:19.133" level="INFO">${RESULT} = {'diff': [0.00037938800000000134, 0.00037936100000000167, 0.00037945899999999866, 0.00037936100000000167, 0.0003792919999999998, 0.0003793609999999982, 0.0003792919999999998, 0.00037936100000000167, 0...</msg>
<status status="PASS" starttime="20201029 12:46:19.130" endtime="20201029 12:46:19.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.137" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:19.136" endtime="20201029 12:46:19.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.140" level="INFO">VALUE: [0.00037938800000000134, 0.00037936100000000167, 0.00037945899999999866, 0.00037936100000000167, 0.0003792919999999998, 0.0003793609999999982, 0.0003792919999999998, 0.00037936100000000167, 0.00037941699999999995, 0.0003793890000000008, 0.0003793199999999955, 0.00037934699999999516, 0.00037931900000000296, 0.00037951399999999746, 0.00037936100000000167, 0.0003792920000000033, 0.0003793470000000021, 0.00037947199999999875, 0.00037933300000000253, 0.00037937500000000124, 0.00037933300000000253, 0.00037931900000000296, 0.000379334000000002, 0.0003793890000000008, 0.0003793470000000021, 0.0003794030000000004, 0.00037924999999999764, 0.00037930499999999645, 0.00037932000000000243, 0.00037909700000000185, 0.0003793470000000021, 0.0003793890000000008, 0.0003794020000000009, 0.0003794030000000004, 0.0003792780000000037, 0.00037943000000000005, 0.0003793050000000034, 0.00037926299999999774, 0.00037937500000000124, 0.00037937500000000124, 0.00037945800000001306, 0.00037924999999999764, 0.0003792779999999968, 0.00037938899999999387, 0.00037932000000000243, 0.0003793329999999956, 0.0003793329999999956, 0.0003792920000000033, 0.00037937500000000124, 0.0003792080000000059]</msg>
<status status="PASS" starttime="20201029 12:46:19.139" endtime="20201029 12:46:19.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.134" endtime="20201029 12:46:19.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.741" endtime="20201029 12:46:19.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.718" endtime="20201029 12:46:19.143"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:19.145" endtime="20201029 12:46:19.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.144" endtime="20201029 12:46:19.165"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.173" endtime="20201029 12:46:19.240"></status>
</kw>
<msg timestamp="20201029 12:46:19.241" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.171" endtime="20201029 12:46:19.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.246" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.243" endtime="20201029 12:46:19.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.249" endtime="20201029 12:46:19.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.169" endtime="20201029 12:46:19.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.167" endtime="20201029 12:46:19.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.268" endtime="20201029 12:46:19.561"></status>
</kw>
<msg timestamp="20201029 12:46:19.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018834486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019229694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.264" endtime="20201029 12:46:19.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018834486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019229694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.565" endtime="20201029 12:46:19.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.573" endtime="20201029 12:46:19.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.259" endtime="20201029 12:46:19.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.255" endtime="20201029 12:46:19.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:19.579" level="INFO">${PHILIP_RES} = [{'diff': 0.0003952079999999976}, {'diff': 0.00039522200000000063}, {'diff': 0.0003951809999999979}, {'diff': 0.0003953330000000012}, {'diff': 0.00039522200000000063}, {'diff': 0.0003952919999999985},...</msg>
<status status="PASS" starttime="20201029 12:46:19.576" endtime="20201029 12:46:19.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:19.584" level="INFO">${RESULT} = {'diff': [0.0003952079999999976, 0.00039522200000000063, 0.0003951809999999979, 0.0003953330000000012, 0.00039522200000000063, 0.0003952919999999985, 0.00039526399999999934, 0.00039522200000000063, 0....</msg>
<status status="PASS" starttime="20201029 12:46:19.580" endtime="20201029 12:46:19.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.589" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:19.588" endtime="20201029 12:46:19.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.591" level="INFO">VALUE: [0.0003952079999999976, 0.00039522200000000063, 0.0003951809999999979, 0.0003953330000000012, 0.00039522200000000063, 0.0003952919999999985, 0.00039526399999999934, 0.00039522200000000063, 0.0003952919999999985, 0.00039526399999999934, 0.0003951800000000019, 0.00039524999999999977, 0.0003951940000000015, 0.0003952779999999989, 0.00039524999999999977, 0.00039530599999999805, 0.00039524999999999977, 0.00039522200000000063, 0.00039509699999999703, 0.00039536099999999685, 0.00039522200000000063, 0.00039531899999999814, 0.00039531899999999814, 0.0003952779999999989, 0.00039519500000000096, 0.00039519399999999455, 0.0003954030000000025, 0.00039526399999999934, 0.0003951390000000027, 0.0003952360000000002, 0.00039533300000000465, 0.0003952919999999985, 0.0003952920000000054, 0.0003953339999999972, 0.0003952360000000002, 0.0003952360000000002, 0.0003953050000000055, 0.00039524999999999977, 0.00039541699999999513, 0.00039524999999999977, 0.0003951659999999954, 0.0003951390000000027, 0.0003951380000000032, 0.0003951530000000092, 0.000395179999999995, 0.00039529199999999154, 0.00039518000000000886, 0.000395179999999995, 0.00039523599999999326, 0.00039524999999999977]</msg>
<status status="PASS" starttime="20201029 12:46:19.590" endtime="20201029 12:46:19.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.585" endtime="20201029 12:46:19.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.166" endtime="20201029 12:46:19.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.143" endtime="20201029 12:46:19.593"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:19.595" endtime="20201029 12:46:19.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.594" endtime="20201029 12:46:19.615"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.624" endtime="20201029 12:46:19.691"></status>
</kw>
<msg timestamp="20201029 12:46:19.691" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.622" endtime="20201029 12:46:19.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.694" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.692" endtime="20201029 12:46:19.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.695" endtime="20201029 12:46:19.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.619" endtime="20201029 12:46:19.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.617" endtime="20201029 12:46:19.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.704" endtime="20201029 12:46:19.990"></status>
</kw>
<msg timestamp="20201029 12:46:19.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020557292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020968653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.702" endtime="20201029 12:46:19.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020557292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020968653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.994" endtime="20201029 12:46:20.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.001" endtime="20201029 12:46:20.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.700" endtime="20201029 12:46:20.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.698" endtime="20201029 12:46:20.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:20.009" level="INFO">${PHILIP_RES} = [{'diff': 0.000411360999999999}, {'diff': 0.00041118100000000005}, {'diff': 0.0004114859999999991}, {'diff': 0.000411472999999999}, {'diff': 0.00041154200000000085}, {'diff': 0.0004115560000000004}, {...</msg>
<status status="PASS" starttime="20201029 12:46:20.006" endtime="20201029 12:46:20.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:20.013" level="INFO">${RESULT} = {'diff': [0.000411360999999999, 0.00041118100000000005, 0.0004114859999999991, 0.000411472999999999, 0.00041154200000000085, 0.0004115560000000004, 0.00041145899999999944, 0.0004115970000000031, 0.000...</msg>
<status status="PASS" starttime="20201029 12:46:20.010" endtime="20201029 12:46:20.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.017" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:20.016" endtime="20201029 12:46:20.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.020" level="INFO">VALUE: [0.000411360999999999, 0.00041118100000000005, 0.0004114859999999991, 0.000411472999999999, 0.00041154200000000085, 0.0004115560000000004, 0.00041145899999999944, 0.0004115970000000031, 0.00041137499999999855, 0.0004115549999999975, 0.0004114579999999965, 0.00041155500000000095, 0.0004113889999999981, 0.000411472000000003, 0.00041147199999999606, 0.000411472000000003, 0.0004113469999999994, 0.00041131999999999974, 0.000411472000000003, 0.0004114449999999964, 0.0004113889999999981, 0.00041137499999999855, 0.0004114029999999977, 0.0004113339999999993, 0.00041137499999999855, 0.00041138900000000506, 0.00041152799999999434, 0.00041144400000000386, 0.00041131900000000027, 0.00041141699999999726, 0.0004112639999999945, 0.0004112359999999954, 0.00041129100000000113, 0.00041142999999999735, 0.00041137499999999855, 0.00041137499999999855, 0.0004114029999999977, 0.00041137499999999855, 0.000411389000000012, 0.00041141699999999726, 0.0004112500000000019, 0.00041140299999999075, 0.00041141699999999726, 0.00041154200000000085, 0.00041130600000000017, 0.0004114030000000046, 0.00041133299999999984, 0.000411360999999999, 0.0004114449999999964, 0.0004113889999999981]</msg>
<status status="PASS" starttime="20201029 12:46:20.019" endtime="20201029 12:46:20.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.014" endtime="20201029 12:46:20.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.616" endtime="20201029 12:46:20.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.593" endtime="20201029 12:46:20.022"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:20.024" endtime="20201029 12:46:20.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.023" endtime="20201029 12:46:20.045"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.053" endtime="20201029 12:46:20.123"></status>
</kw>
<msg timestamp="20201029 12:46:20.124" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.051" endtime="20201029 12:46:20.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.126" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.125" endtime="20201029 12:46:20.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.127" endtime="20201029 12:46:20.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.048" endtime="20201029 12:46:20.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.047" endtime="20201029 12:46:20.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.137" endtime="20201029 12:46:20.423"></status>
</kw>
<msg timestamp="20201029 12:46:20.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018513875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01894175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:20.136" endtime="20201029 12:46:20.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018513875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01894175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:20.427" endtime="20201029 12:46:20.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.435" endtime="20201029 12:46:20.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.133" endtime="20201029 12:46:20.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.131" endtime="20201029 12:46:20.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:20.441" level="INFO">${PHILIP_RES} = [{'diff': 0.00042787500000000117}, {'diff': 0.00042790200000000084}, {'diff': 0.00042775000000000105}, {'diff': 0.0004278749999999977}, {'diff': 0.00042775000000000105}, {'diff': 0.0004279309999999994...</msg>
<status status="PASS" starttime="20201029 12:46:20.438" endtime="20201029 12:46:20.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:20.445" level="INFO">${RESULT} = {'diff': [0.00042787500000000117, 0.00042790200000000084, 0.00042775000000000105, 0.0004278749999999977, 0.00042775000000000105, 0.00042793099999999945, 0.00042798599999999826, 0.00042793, 0.000427957...</msg>
<status status="PASS" starttime="20201029 12:46:20.442" endtime="20201029 12:46:20.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.449" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:20.448" endtime="20201029 12:46:20.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.452" level="INFO">VALUE: [0.00042787500000000117, 0.00042790200000000084, 0.00042775000000000105, 0.0004278749999999977, 0.00042775000000000105, 0.00042793099999999945, 0.00042798599999999826, 0.00042793, 0.0004279579999999991, 0.0004281109999999984, 0.0004278480000000015, 0.00042793, 0.0004281250000000014, 0.000427944999999999, 0.00042788900000000074, 0.0004278889999999938, 0.0004277640000000041, 0.0004280139999999974, 0.00042793099999999945, 0.00042798599999999826, 0.0004279310000000064, 0.00042787500000000117, 0.00042806900000000314, 0.0004279160000000004, 0.0004279860000000052, 0.00042787500000000117, 0.00042787500000000117, 0.0004281119999999944, 0.00042788900000000074, 0.00042794399999999955, 0.0004277499999999976, 0.0004279719999999987, 0.00042788900000000074, 0.00042790299999999337, 0.0004278060000000028, 0.0004279160000000004, 0.00042798599999999826, 0.0004279030000000003, 0.00042798599999999826, 0.0004279860000000052, 0.0004280420000000035, 0.0004280409999999901, 0.0004279160000000004, 0.0004279719999999987, 0.00042784700000000897, 0.00042790300000000725, 0.0004279999999999978, 0.00042783300000000246, 0.00042795900000000553, 0.00042805499999999663]</msg>
<status status="PASS" starttime="20201029 12:46:20.450" endtime="20201029 12:46:20.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.446" endtime="20201029 12:46:20.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.045" endtime="20201029 12:46:20.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.022" endtime="20201029 12:46:20.455"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:20.457" endtime="20201029 12:46:20.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.455" endtime="20201029 12:46:20.477"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.486" endtime="20201029 12:46:20.555"></status>
</kw>
<msg timestamp="20201029 12:46:20.556" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.484" endtime="20201029 12:46:20.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.559" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.557" endtime="20201029 12:46:20.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.560" endtime="20201029 12:46:20.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.481" endtime="20201029 12:46:20.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.479" endtime="20201029 12:46:20.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.570" endtime="20201029 12:46:20.873"></status>
</kw>
<msg timestamp="20201029 12:46:20.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018204153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018648611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.568" endtime="20201029 12:46:20.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018204153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018648611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.877" endtime="20201029 12:46:20.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.885" endtime="20201029 12:46:20.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.565" endtime="20201029 12:46:20.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.564" endtime="20201029 12:46:20.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:20.891" level="INFO">${PHILIP_RES} = [{'diff': 0.00044445799999999827}, {'diff': 0.0004444309999999986}, {'diff': 0.0004444309999999986}, {'diff': 0.0004442630000000003}, {'diff': 0.0004444720000000013}, {'diff': 0.0004444310000000021}, ...</msg>
<status status="PASS" starttime="20201029 12:46:20.888" endtime="20201029 12:46:20.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:20.898" level="INFO">${RESULT} = {'diff': [0.00044445799999999827, 0.0004444309999999986, 0.0004444309999999986, 0.0004442630000000003, 0.0004444720000000013, 0.0004444310000000021, 0.00044440299999999947, 0.0004444720000000013, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:20.892" endtime="20201029 12:46:20.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.903" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:20.902" endtime="20201029 12:46:20.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.905" level="INFO">VALUE: [0.00044445799999999827, 0.0004444309999999986, 0.0004444309999999986, 0.0004442630000000003, 0.0004444720000000013, 0.0004444310000000021, 0.00044440299999999947, 0.0004444720000000013, 0.0004443750000000003, 0.00044444500000000164, 0.0004445270000000001, 0.00044450000000000045, 0.00044433299999999815, 0.00044450000000000045, 0.0004443189999999986, 0.00044444399999999523, 0.0004444720000000013, 0.00044437499999999686, 0.00044427799999999934, 0.0004442919999999989, 0.0004443469999999977, 0.00044427799999999934, 0.0004443469999999977, 0.0004445420000000061, 0.0004444720000000013, 0.0004444310000000021, 0.0004443189999999986, 0.0004444310000000021, 0.0004443750000000038, 0.0004443750000000038, 0.00044454199999999916, 0.00044440300000000293, 0.00044423600000000063, 0.00044455499999999926, 0.0004443750000000038, 0.0004444860000000009, 0.00044455499999999926, 0.0004446110000000045, 0.00044450000000000045, 0.0004446110000000114, 0.0004445970000000049, 0.0004445970000000049, 0.0004445279999999996, 0.0004445829999999984, 0.0004445419999999922, 0.0004446669999999958, 0.00044455499999999926, 0.00044468000000000285, 0.00044450000000000045, 0.00044458399999999787]</msg>
<status status="PASS" starttime="20201029 12:46:20.904" endtime="20201029 12:46:20.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.899" endtime="20201029 12:46:20.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.478" endtime="20201029 12:46:20.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.455" endtime="20201029 12:46:20.907"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:20.910" endtime="20201029 12:46:20.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.908" endtime="20201029 12:46:20.930"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.938" endtime="20201029 12:46:21.008"></status>
</kw>
<msg timestamp="20201029 12:46:21.008" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.936" endtime="20201029 12:46:21.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.011" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.009" endtime="20201029 12:46:21.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.013" endtime="20201029 12:46:21.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.934" endtime="20201029 12:46:21.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.932" endtime="20201029 12:46:21.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.022" endtime="20201029 12:46:21.309"></status>
</kw>
<msg timestamp="20201029 12:46:21.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017726319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018187806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.020" endtime="20201029 12:46:21.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017726319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018187806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.313" endtime="20201029 12:46:21.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.321" endtime="20201029 12:46:21.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.018" endtime="20201029 12:46:21.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.016" endtime="20201029 12:46:21.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:21.327" level="INFO">${PHILIP_RES} = [{'diff': 0.000461487}, {'diff': 0.0004615280000000027}, {'diff': 0.00046148600000000053}, {'diff': 0.00046129199999999856}, {'diff': 0.00046124999999999985}, {'diff': 0.00046129199999999856}, {'diff'...</msg>
<status status="PASS" starttime="20201029 12:46:21.324" endtime="20201029 12:46:21.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:21.331" level="INFO">${RESULT} = {'diff': [0.000461487, 0.0004615280000000027, 0.00046148600000000053, 0.00046129199999999856, 0.00046124999999999985, 0.00046129199999999856, 0.00046124999999999985, 0.00046134700000000084, 0.00046126...</msg>
<status status="PASS" starttime="20201029 12:46:21.328" endtime="20201029 12:46:21.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.336" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:21.335" endtime="20201029 12:46:21.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.338" level="INFO">VALUE: [0.000461487, 0.0004615280000000027, 0.00046148600000000053, 0.00046129199999999856, 0.00046124999999999985, 0.00046129199999999856, 0.00046124999999999985, 0.00046134700000000084, 0.0004612639999999994, 0.00046129200000000203, 0.000461277999999999, 0.0004612499999999964, 0.000461375, 0.0004613049999999952, 0.00046129200000000203, 0.0004611389999999993, 0.0004611950000000045, 0.00046115299999999887, 0.0004611800000000055, 0.00046123600000000375, 0.00046117999999999854, 0.00046115299999999887, 0.0004611939999999981, 0.0004612220000000042, 0.0004611949999999976, 0.00046129200000000203, 0.00046133300000000127, 0.00046123600000000375, 0.0004611949999999976, 0.0004612220000000042, 0.00046123600000000375, 0.0004611949999999976, 0.0004611939999999981, 0.0004613060000000016, 0.00046122199999999725, 0.00046112499999999973, 0.0004611530000000058, 0.0004612499999999964, 0.0004612779999999955, 0.00046129200000000203, 0.00046129100000000256, 0.0004613200000000012, 0.0004612499999999964, 0.00046112500000000667, 0.00046122199999999725, 0.0004611389999999993, 0.0004611249999999928, 0.0004613200000000012, 0.00046130599999999466, 0.00046116599999999897]</msg>
<status status="PASS" starttime="20201029 12:46:21.337" endtime="20201029 12:46:21.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.332" endtime="20201029 12:46:21.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.930" endtime="20201029 12:46:21.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.908" endtime="20201029 12:46:21.340"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:21.343" endtime="20201029 12:46:21.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.341" endtime="20201029 12:46:21.363"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.371" endtime="20201029 12:46:21.449"></status>
</kw>
<msg timestamp="20201029 12:46:21.449" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.369" endtime="20201029 12:46:21.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.452" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.450" endtime="20201029 12:46:21.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.453" endtime="20201029 12:46:21.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.367" endtime="20201029 12:46:21.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.365" endtime="20201029 12:46:21.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.463" endtime="20201029 12:46:21.763"></status>
</kw>
<msg timestamp="20201029 12:46:21.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021774306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.461" endtime="20201029 12:46:21.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021774306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.767" endtime="20201029 12:46:21.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.774" endtime="20201029 12:46:21.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.459" endtime="20201029 12:46:21.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.457" endtime="20201029 12:46:21.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:21.781" level="INFO">${PHILIP_RES} = [{'diff': 0.0004783049999999983}, {'diff': 0.0004784310000000014}, {'diff': 0.00047831900000000135}, {'diff': 0.00047849999999999976}, {'diff': 0.0004784860000000002}, {'diff': 0.0004783890000000027},...</msg>
<status status="PASS" starttime="20201029 12:46:21.778" endtime="20201029 12:46:21.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:21.785" level="INFO">${RESULT} = {'diff': [0.0004783049999999983, 0.0004784310000000014, 0.00047831900000000135, 0.00047849999999999976, 0.0004784860000000002, 0.0004783890000000027, 0.00047820799999999733, 0.00047837499999999963, 0....</msg>
<status status="PASS" starttime="20201029 12:46:21.782" endtime="20201029 12:46:21.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.789" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:21.788" endtime="20201029 12:46:21.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.792" level="INFO">VALUE: [0.0004783049999999983, 0.0004784310000000014, 0.00047831900000000135, 0.00047849999999999976, 0.0004784860000000002, 0.0004783890000000027, 0.00047820799999999733, 0.00047837499999999963, 0.00047830600000000473, 0.00047834700000000396, 0.0004782080000000008, 0.0004783750000000031, 0.0004783190000000048, 0.0004783049999999983, 0.0004783330000000044, 0.00047836100000000353, 0.0004783330000000044, 0.00047840300000000224, 0.00047834700000000396, 0.0004783049999999983, 0.00047823599999999994, 0.00047849999999999976, 0.00047830600000000473, 0.00047831999999999736, 0.0004783609999999966, 0.0004783049999999983, 0.0004783609999999966, 0.00047827799999999865, 0.00047841600000000234, 0.0004783059999999978, 0.00047833299999999745, 0.000478346999999997, 0.00047822200000000037, 0.00047834800000000344, 0.0004783750000000031, 0.00047844399999999454, 0.00047844399999999454, 0.0004782769999999992, 0.00047826399999999214, 0.00047833300000001133, 0.0004783750000000031, 0.00047845800000000105, 0.00047833399999999693, 0.00047827799999999865, 0.0004784160000000093, 0.00047827799999999865, 0.00047827799999999865, 0.00047819400000000123, 0.0004782360000000069, 0.00047822200000000037]</msg>
<status status="PASS" starttime="20201029 12:46:21.790" endtime="20201029 12:46:21.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.786" endtime="20201029 12:46:21.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.363" endtime="20201029 12:46:21.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.340" endtime="20201029 12:46:21.794"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:21.797" endtime="20201029 12:46:21.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.795" endtime="20201029 12:46:21.817"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.825" endtime="20201029 12:46:21.901"></status>
</kw>
<msg timestamp="20201029 12:46:21.901" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.823" endtime="20201029 12:46:21.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.904" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.902" endtime="20201029 12:46:21.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.905" endtime="20201029 12:46:21.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.821" endtime="20201029 12:46:21.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.819" endtime="20201029 12:46:21.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.914" endtime="20201029 12:46:22.200"></status>
</kw>
<msg timestamp="20201029 12:46:22.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019651958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020147625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.913" endtime="20201029 12:46:22.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019651958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020147625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.204" endtime="20201029 12:46:22.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.212" endtime="20201029 12:46:22.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.910" endtime="20201029 12:46:22.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.908" endtime="20201029 12:46:22.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:22.218" level="INFO">${PHILIP_RES} = [{'diff': 0.0004956669999999982}, {'diff': 0.0004956659999999988}, {'diff': 0.0004955969999999969}, {'diff': 0.0004955970000000004}, {'diff': 0.0004957920000000018}, {'diff': 0.000495820000000001}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:22.215" endtime="20201029 12:46:22.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:22.223" level="INFO">${RESULT} = {'diff': [0.0004956669999999982, 0.0004956659999999988, 0.0004955969999999969, 0.0004955970000000004, 0.0004957920000000018, 0.000495820000000001, 0.0004956519999999992, 0.000495611, 0.000495667000000...</msg>
<status status="PASS" starttime="20201029 12:46:22.219" endtime="20201029 12:46:22.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.228" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:22.227" endtime="20201029 12:46:22.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.230" level="INFO">VALUE: [0.0004956669999999982, 0.0004956659999999988, 0.0004955969999999969, 0.0004955970000000004, 0.0004957920000000018, 0.000495820000000001, 0.0004956519999999992, 0.000495611, 0.0004956670000000017, 0.000495820000000001, 0.0004957640000000027, 0.0004957079999999975, 0.000495820000000001, 0.0004957079999999975, 0.000495611, 0.000495820000000001, 0.0004958060000000014, 0.0004957499999999962, 0.0004956940000000049, 0.0004956659999999988, 0.0004958190000000015, 0.0004957359999999966, 0.0004956530000000056, 0.0004957909999999954, 0.000495611, 0.000495722000000004, 0.0004958190000000015, 0.0004957090000000039, 0.0004956810000000048, 0.0004957780000000023, 0.0004957499999999962, 0.0004957920000000018, 0.0004956249999999995, 0.0004957910000000024, 0.0004956950000000043, 0.000495722000000004, 0.0004957359999999966, 0.0004956950000000043, 0.000495722000000004, 0.0004957639999999958, 0.0004957359999999966, 0.0004958050000000019, 0.0004956940000000049, 0.0004957079999999975, 0.0004955970000000004, 0.0004956799999999983, 0.0004956809999999978, 0.0004957229999999896, 0.0004957360000000105, 0.000495819999999994]</msg>
<status status="PASS" starttime="20201029 12:46:22.229" endtime="20201029 12:46:22.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.224" endtime="20201029 12:46:22.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.817" endtime="20201029 12:46:22.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.795" endtime="20201029 12:46:22.232"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:22.235" endtime="20201029 12:46:22.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.233" endtime="20201029 12:46:22.255"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.263" endtime="20201029 12:46:22.339"></status>
</kw>
<msg timestamp="20201029 12:46:22.339" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.261" endtime="20201029 12:46:22.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.342" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.340" endtime="20201029 12:46:22.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.343" endtime="20201029 12:46:22.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.259" endtime="20201029 12:46:22.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.257" endtime="20201029 12:46:22.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.352" endtime="20201029 12:46:22.660"></status>
</kw>
<msg timestamp="20201029 12:46:22.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018928472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019441806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.350" endtime="20201029 12:46:22.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018928472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019441806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.664" endtime="20201029 12:46:22.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.671" endtime="20201029 12:46:22.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.348" endtime="20201029 12:46:22.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.346" endtime="20201029 12:46:22.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:22.678" level="INFO">${PHILIP_RES} = [{'diff': 0.0005133340000000007}, {'diff': 0.0005133060000000016}, {'diff': 0.0005133749999999999}, {'diff': 0.0005133329999999978}, {'diff': 0.0005133610000000004}, {'diff': 0.0005132639999999994}, {...</msg>
<status status="PASS" starttime="20201029 12:46:22.675" endtime="20201029 12:46:22.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:22.682" level="INFO">${RESULT} = {'diff': [0.0005133340000000007, 0.0005133060000000016, 0.0005133749999999999, 0.0005133329999999978, 0.0005133610000000004, 0.0005132639999999994, 0.0005133059999999981, 0.0005132360000000002, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:46:22.679" endtime="20201029 12:46:22.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.686" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:22.685" endtime="20201029 12:46:22.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.689" level="INFO">VALUE: [0.0005133340000000007, 0.0005133060000000016, 0.0005133749999999999, 0.0005133329999999978, 0.0005133610000000004, 0.0005132639999999994, 0.0005133059999999981, 0.0005132360000000002, 0.0005133469999999973, 0.0005135000000000001, 0.0005134020000000031, 0.0005133330000000047, 0.0005133470000000043, 0.0005133750000000034, 0.0005133609999999969, 0.000513290999999999, 0.0005134170000000021, 0.0005133750000000034, 0.0005134169999999952, 0.0005134300000000022, 0.0005135139999999996, 0.0005133609999999969, 0.0005134029999999956, 0.0005133190000000051, 0.0005134310000000017, 0.0005134300000000022, 0.0005132639999999994, 0.0005133189999999982, 0.0005132920000000055, 0.000513180000000002, 0.0005133199999999977, 0.0005133059999999981, 0.0005132920000000055, 0.0005134309999999948, 0.0005133189999999982, 0.0005135140000000066, 0.0005134030000000095, 0.0005135140000000066, 0.0005134440000000018, 0.0005135139999999927, 0.000513277999999992, 0.0005132220000000076, 0.0005133749999999965, 0.0005134029999999956, 0.0005134439999999879, 0.0005134170000000021, 0.0005133469999999973, 0.0005134720000000009, 0.0005134029999999956, 0.000513306000000005]</msg>
<status status="PASS" starttime="20201029 12:46:22.687" endtime="20201029 12:46:22.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.683" endtime="20201029 12:46:22.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.255" endtime="20201029 12:46:22.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.233" endtime="20201029 12:46:22.691"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:22.693" endtime="20201029 12:46:22.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.692" endtime="20201029 12:46:22.713"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.721" endtime="20201029 12:46:22.800"></status>
</kw>
<msg timestamp="20201029 12:46:22.801" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.720" endtime="20201029 12:46:22.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.803" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.802" endtime="20201029 12:46:22.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.804" endtime="20201029 12:46:22.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.717" endtime="20201029 12:46:22.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.715" endtime="20201029 12:46:22.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.814" endtime="20201029 12:46:23.100"></status>
</kw>
<msg timestamp="20201029 12:46:23.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017648736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018180097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.813" endtime="20201029 12:46:23.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017648736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018180097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.104" endtime="20201029 12:46:23.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.112" endtime="20201029 12:46:23.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.810" endtime="20201029 12:46:23.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.808" endtime="20201029 12:46:23.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:23.119" level="INFO">${PHILIP_RES} = [{'diff': 0.0005313609999999976}, {'diff': 0.0005314029999999997}, {'diff': 0.0005313890000000002}, {'diff': 0.0005314860000000012}, {'diff': 0.0005314299999999994}, {'diff': 0.0005315840000000016}, {...</msg>
<status status="PASS" starttime="20201029 12:46:23.115" endtime="20201029 12:46:23.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:23.123" level="INFO">${RESULT} = {'diff': [0.0005313609999999976, 0.0005314029999999997, 0.0005313890000000002, 0.0005314860000000012, 0.0005314299999999994, 0.0005315840000000016, 0.000531541, 0.0005314450000000019, 0.00053156899999...</msg>
<status status="PASS" starttime="20201029 12:46:23.119" endtime="20201029 12:46:23.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.127" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:23.126" endtime="20201029 12:46:23.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.129" level="INFO">VALUE: [0.0005313609999999976, 0.0005314029999999997, 0.0005313890000000002, 0.0005314860000000012, 0.0005314299999999994, 0.0005315840000000016, 0.000531541, 0.0005314450000000019, 0.0005315689999999991, 0.0005313750000000006, 0.000531541999999996, 0.0005315000000000042, 0.0005314579999999985, 0.0005312780000000031, 0.000531361000000001, 0.0005315139999999968, 0.0005315280000000033, 0.0005314859999999977, 0.0005314579999999985, 0.0005314719999999981, 0.0005315139999999968, 0.0005314859999999977, 0.0005315280000000033, 0.0005314450000000054, 0.000531555000000003, 0.0005313890000000002, 0.0005314860000000046, 0.0005315420000000029, 0.0005314310000000058, 0.0005312779999999961, 0.0005314309999999989, 0.000531472000000005, 0.0005313330000000019, 0.0005315140000000107, 0.0005315000000000042, 0.000531570000000009, 0.0005315560000000025, 0.0005314450000000054, 0.0005314029999999997, 0.0005315699999999951, 0.0005315139999999968, 0.0005315139999999968, 0.0005314859999999977, 0.0005315280000000033, 0.0005312779999999961, 0.0005313750000000006, 0.0005315000000000042, 0.000531249999999997, 0.0005315000000000042, 0.000531472000000005]</msg>
<status status="PASS" starttime="20201029 12:46:23.128" endtime="20201029 12:46:23.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.123" endtime="20201029 12:46:23.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.714" endtime="20201029 12:46:23.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.691" endtime="20201029 12:46:23.132"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:23.135" endtime="20201029 12:46:23.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.133" endtime="20201029 12:46:23.155"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.164" endtime="20201029 12:46:23.249"></status>
</kw>
<msg timestamp="20201029 12:46:23.250" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.162" endtime="20201029 12:46:23.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.255" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.252" endtime="20201029 12:46:23.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.257" endtime="20201029 12:46:23.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.160" endtime="20201029 12:46:23.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.157" endtime="20201029 12:46:23.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.276" endtime="20201029 12:46:23.580"></status>
</kw>
<msg timestamp="20201029 12:46:23.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018111819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018661194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.273" endtime="20201029 12:46:23.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018111819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018661194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.584" endtime="20201029 12:46:23.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.592" endtime="20201029 12:46:23.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.268" endtime="20201029 12:46:23.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.264" endtime="20201029 12:46:23.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:23.598" level="INFO">${PHILIP_RES} = [{'diff': 0.0005493749999999978}, {'diff': 0.0005494160000000005}, {'diff': 0.0005492499999999977}, {'diff': 0.0005493750000000013}, {'diff': 0.0005493059999999994}, {'diff': 0.0005493750000000013}, {...</msg>
<status status="PASS" starttime="20201029 12:46:23.595" endtime="20201029 12:46:23.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:23.603" level="INFO">${RESULT} = {'diff': [0.0005493749999999978, 0.0005494160000000005, 0.0005492499999999977, 0.0005493750000000013, 0.0005493059999999994, 0.0005493750000000013, 0.0005493469999999986, 0.0005494309999999995, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:46:23.599" endtime="20201029 12:46:23.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.608" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:23.607" endtime="20201029 12:46:23.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.610" level="INFO">VALUE: [0.0005493749999999978, 0.0005494160000000005, 0.0005492499999999977, 0.0005493750000000013, 0.0005493059999999994, 0.0005493750000000013, 0.0005493469999999986, 0.0005494309999999995, 0.0005493609999999982, 0.000549417, 0.0005494029999999969, 0.0005492079999999955, 0.0005493749999999978, 0.0005493059999999994, 0.0005494450000000026, 0.0005493189999999995, 0.0005493889999999974, 0.0005493750000000047, 0.0005492500000000011, 0.0005493339999999985, 0.0005492500000000011, 0.0005492360000000016, 0.0005493049999999999, 0.0005492919999999998, 0.0005494580000000027, 0.0005495699999999992, 0.000549625000000005, 0.0005495969999999989, 0.0005497090000000024, 0.0005495550000000002, 0.0005496109999999985, 0.000549625000000005, 0.0005494860000000018, 0.0005495000000000083, 0.0005495549999999932, 0.0005494999999999944, 0.0005496810000000102, 0.0005495829999999924, 0.000549624999999998, 0.0005496250000000119, 0.000549707999999996, 0.0005495969999999989, 0.0005497500000000016, 0.0005495280000000075, 0.0005496390000000045, 0.0005496670000000037, 0.0005496109999999915, 0.0005497220000000025, 0.000549707999999996, 0.0005496799999999968]</msg>
<status status="PASS" starttime="20201029 12:46:23.609" endtime="20201029 12:46:23.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.604" endtime="20201029 12:46:23.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.155" endtime="20201029 12:46:23.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.133" endtime="20201029 12:46:23.612"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:23.614" endtime="20201029 12:46:23.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.613" endtime="20201029 12:46:23.634"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.642" endtime="20201029 12:46:23.729"></status>
</kw>
<msg timestamp="20201029 12:46:23.729" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.641" endtime="20201029 12:46:23.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.732" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.731" endtime="20201029 12:46:23.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.733" endtime="20201029 12:46:23.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.638" endtime="20201029 12:46:23.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.636" endtime="20201029 12:46:23.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.742" endtime="20201029 12:46:24.030"></status>
</kw>
<msg timestamp="20201029 12:46:24.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021042528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021609944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.740" endtime="20201029 12:46:24.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021042528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021609944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.034" endtime="20201029 12:46:24.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.041" endtime="20201029 12:46:24.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.738" endtime="20201029 12:46:24.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.736" endtime="20201029 12:46:24.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:24.048" level="INFO">${PHILIP_RES} = [{'diff': 0.0005674159999999977}, {'diff': 0.0005676249999999987}, {'diff': 0.0005676940000000005}, {'diff': 0.0005677639999999984}, {'diff': 0.0005678200000000001}, {'diff': 0.0005676940000000005}, {...</msg>
<status status="PASS" starttime="20201029 12:46:24.045" endtime="20201029 12:46:24.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:24.051" level="INFO">${RESULT} = {'diff': [0.0005674159999999977, 0.0005676249999999987, 0.0005676940000000005, 0.0005677639999999984, 0.0005678200000000001, 0.0005676940000000005, 0.0005678060000000006, 0.0005678340000000032, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:46:24.048" endtime="20201029 12:46:24.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.056" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:24.055" endtime="20201029 12:46:24.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.058" level="INFO">VALUE: [0.0005674159999999977, 0.0005676249999999987, 0.0005676940000000005, 0.0005677639999999984, 0.0005678200000000001, 0.0005676940000000005, 0.0005678060000000006, 0.0005678340000000032, 0.0005677639999999984, 0.0005677639999999984, 0.0005677219999999997, 0.0005676109999999956, 0.0005678609999999959, 0.0005677639999999984, 0.000567695, 0.000567695, 0.000567790999999998, 0.0005676249999999952, 0.0005677919999999975, 0.0005677780000000049, 0.0005676670000000009, 0.0005677769999999985, 0.0005678339999999962, 0.0005677359999999992, 0.0005675830000000034, 0.0005675690000000039, 0.0005676389999999948, 0.000567777999999998, 0.0005677499999999988, 0.0005677919999999975, 0.0005677080000000001, 0.0005677780000000049, 0.0005677639999999984, 0.0005676669999999939, 0.0005676250000000022, 0.0005675829999999965, 0.0005676660000000083, 0.0005677639999999984, 0.0005676110000000095, 0.0005676110000000095, 0.0005675979999999886, 0.0005676530000000013, 0.0005677499999999919, 0.0005676250000000022, 0.0005677639999999984, 0.0005677359999999992, 0.0005676949999999931, 0.000567597000000003, 0.0005677219999999927, 0.0005678189999999972]</msg>
<status status="PASS" starttime="20201029 12:46:24.057" endtime="20201029 12:46:24.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.052" endtime="20201029 12:46:24.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.635" endtime="20201029 12:46:24.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.612" endtime="20201029 12:46:24.117"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:24.121" endtime="20201029 12:46:24.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.118" endtime="20201029 12:46:24.144"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.161" endtime="20201029 12:46:24.249"></status>
</kw>
<msg timestamp="20201029 12:46:24.250" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.158" endtime="20201029 12:46:24.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.255" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.252" endtime="20201029 12:46:24.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.257" endtime="20201029 12:46:24.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.152" endtime="20201029 12:46:24.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.148" endtime="20201029 12:46:24.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.278" endtime="20201029 12:46:24.573"></status>
</kw>
<msg timestamp="20201029 12:46:24.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030422764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031009181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.275" endtime="20201029 12:46:24.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030422764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031009181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.577" endtime="20201029 12:46:24.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.585" endtime="20201029 12:46:24.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.269" endtime="20201029 12:46:24.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.266" endtime="20201029 12:46:24.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:24.592" level="INFO">${PHILIP_RES} = [{'diff': 0.0005864169999999988}, {'diff': 0.0005865410000000029}, {'diff': 0.0005865550000000025}, {'diff': 0.0005866529999999995}, {'diff': 0.0005866389999999999}, {'diff': 0.0005866809999999986}, {...</msg>
<status status="PASS" starttime="20201029 12:46:24.588" endtime="20201029 12:46:24.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:24.596" level="INFO">${RESULT} = {'diff': [0.0005864169999999988, 0.0005865410000000029, 0.0005865550000000025, 0.0005866529999999995, 0.0005866389999999999, 0.0005866809999999986, 0.000586458000000005, 0.000586652, 0.000586485999999...</msg>
<status status="PASS" starttime="20201029 12:46:24.593" endtime="20201029 12:46:24.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.600" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:24.599" endtime="20201029 12:46:24.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.603" level="INFO">VALUE: [0.0005864169999999988, 0.0005865410000000029, 0.0005865550000000025, 0.0005866529999999995, 0.0005866389999999999, 0.0005866809999999986, 0.000586458000000005, 0.000586652, 0.0005864859999999972, 0.0005865280000000028, 0.0005866250000000003, 0.0005867229999999973, 0.0005866380000000004, 0.0005866389999999999, 0.0005863750000000001, 0.0005867080000000052, 0.0005866799999999991, 0.000586347000000001, 0.0005866529999999995, 0.0005866389999999999, 0.0005866110000000008, 0.0005866110000000008, 0.000586666999999999, 0.0005864450000000049, 0.0005866389999999999, 0.0005867360000000044, 0.0005867360000000044, 0.0005865140000000102, 0.0005865139999999963, 0.0005866520000000069, 0.0005864869999999966, 0.0005865280000000028, 0.0005866250000000073, 0.000586556000000002, 0.000586457999999998, 0.0005865280000000028, 0.0005866809999999917, 0.0005864859999999972, 0.0005864299999999989, 0.0005865689999999951, 0.0005866520000000069, 0.0005865980000000076, 0.0005865549999999886, 0.000586749999999997, 0.0005866529999999925, 0.0005866250000000073, 0.0005865139999999963, 0.0005865139999999963, 0.000586569000000009, 0.0005864999999999898]</msg>
<status status="PASS" starttime="20201029 12:46:24.601" endtime="20201029 12:46:24.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.597" endtime="20201029 12:46:24.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.145" endtime="20201029 12:46:24.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.117" endtime="20201029 12:46:24.606"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:24.608" endtime="20201029 12:46:24.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.607" endtime="20201029 12:46:24.628"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.639" endtime="20201029 12:46:24.725"></status>
</kw>
<msg timestamp="20201029 12:46:24.726" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.637" endtime="20201029 12:46:24.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.728" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.727" endtime="20201029 12:46:24.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.730" endtime="20201029 12:46:24.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.634" endtime="20201029 12:46:24.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.631" endtime="20201029 12:46:24.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.739" endtime="20201029 12:46:25.026"></status>
</kw>
<msg timestamp="20201029 12:46:25.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.738" endtime="20201029 12:46:25.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:25.030" endtime="20201029 12:46:25.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.043" endtime="20201029 12:46:25.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.735" endtime="20201029 12:46:25.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.733" endtime="20201029 12:46:25.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:25.057" level="INFO">${PHILIP_RES} = [{'diff': 0.0006051520000000012}, {'diff': 0.0006052080000000029}, {'diff': 0.0006051390000000011}, {'diff': 0.0006052080000000029}, {'diff': 0.0006051670000000002}, {'diff': 0.0006052079999999994}, {...</msg>
<status status="PASS" starttime="20201029 12:46:25.050" endtime="20201029 12:46:25.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:25.073" level="INFO">${RESULT} = {'diff': [0.0006051520000000012, 0.0006052080000000029, 0.0006051390000000011, 0.0006052080000000029, 0.0006051670000000002, 0.0006052079999999994, 0.0006051380000000051, 0.0006050969999999989, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:46:25.059" endtime="20201029 12:46:25.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.082" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:25.080" endtime="20201029 12:46:25.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.087" level="INFO">VALUE: [0.0006051520000000012, 0.0006052080000000029, 0.0006051390000000011, 0.0006052080000000029, 0.0006051670000000002, 0.0006052079999999994, 0.0006051380000000051, 0.0006050969999999989, 0.0006052370000000015, 0.0006052080000000029, 0.000605124999999998, 0.000605125000000005, 0.0006051809999999963, 0.0006051530000000041, 0.0006052090000000024, 0.0006050699999999992, 0.0006051939999999964, 0.0006049309999999961, 0.0006050689999999997, 0.0006049860000000018, 0.0006051109999999985, 0.0006050829999999993, 0.0006052500000000016, 0.0006050829999999993, 0.0006051530000000041, 0.000605236000000002, 0.0006050420000000001, 0.0006052090000000093, 0.0006050699999999992, 0.0006051670000000037, 0.0006053749999999913, 0.0006050969999999989, 0.0006052220000000025, 0.000605124999999998, 0.0006053749999999913, 0.0006053609999999987, 0.0006052500000000016, 0.0006051529999999972, 0.0006052359999999951, 0.0006052780000000008, 0.0006050839999999919, 0.0006050829999999924, 0.0006051799999999968, 0.0006052500000000016, 0.0006052220000000025, 0.0006053059999999999, 0.0006050699999999992, 0.0006051390000000045, 0.000605207999999996, 0.000605124999999998]</msg>
<status status="PASS" starttime="20201029 12:46:25.084" endtime="20201029 12:46:25.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.074" endtime="20201029 12:46:25.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.629" endtime="20201029 12:46:25.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.606" endtime="20201029 12:46:25.092"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:25.097" endtime="20201029 12:46:25.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.094" endtime="20201029 12:46:25.120"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.139" endtime="20201029 12:46:25.232"></status>
</kw>
<msg timestamp="20201029 12:46:25.232" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.135" endtime="20201029 12:46:25.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.235" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.233" endtime="20201029 12:46:25.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.236" endtime="20201029 12:46:25.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.129" endtime="20201029 12:46:25.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.125" endtime="20201029 12:46:25.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.245" endtime="20201029 12:46:25.535"></status>
</kw>
<msg timestamp="20201029 12:46:25.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034646569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035270972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:25.244" endtime="20201029 12:46:25.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034646569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035270972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:25.539" endtime="20201029 12:46:25.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.547" endtime="20201029 12:46:25.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.241" endtime="20201029 12:46:25.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.239" endtime="20201029 12:46:25.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:25.554" level="INFO">${PHILIP_RES} = [{'diff': 0.0006244029999999956}, {'diff': 0.0006241810000000014}, {'diff': 0.000624388999999996}, {'diff': 0.000624388999999996}, {'diff': 0.000624290999999999}, {'diff': 0.0006243469999999973}, {'di...</msg>
<status status="PASS" starttime="20201029 12:46:25.551" endtime="20201029 12:46:25.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:25.559" level="INFO">${RESULT} = {'diff': [0.0006244029999999956, 0.0006241810000000014, 0.000624388999999996, 0.000624388999999996, 0.000624290999999999, 0.0006243469999999973, 0.0006244310000000017, 0.0006243609999999969, 0.0006241...</msg>
<status status="PASS" starttime="20201029 12:46:25.555" endtime="20201029 12:46:25.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.564" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:25.563" endtime="20201029 12:46:25.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.567" level="INFO">VALUE: [0.0006244029999999956, 0.0006241810000000014, 0.000624388999999996, 0.000624388999999996, 0.000624290999999999, 0.0006243469999999973, 0.0006244310000000017, 0.0006243609999999969, 0.0006241940000000015, 0.0006245000000000001, 0.0006243749999999965, 0.0006244450000000012, 0.0006244170000000021, 0.0006242220000000007, 0.0006243049999999986, 0.0006243749999999965, 0.0006243059999999981, 0.0006244160000000026, 0.0006243189999999982, 0.0006243610000000038, 0.0006243059999999911, 0.0006243889999999891, 0.0006244170000000021, 0.0006244580000000083, 0.000624306000000005, 0.0006243750000000103, 0.0006243330000000047, 0.0006243610000000038, 0.0006243749999999965, 0.0006244440000000018, 0.0006245689999999915, 0.0006243199999999977, 0.0006245969999999906, 0.0006246250000000036, 0.0006248049999999922, 0.0006246250000000036, 0.0006246389999999963, 0.0006248059999999916, 0.0006245139999999927, 0.0006245000000000001, 0.0006247639999999999, 0.0006246949999999946, 0.0006245139999999927, 0.0006245830000000119, 0.0006247219999999942, 0.0006246800000000025, 0.0006245830000000119, 0.0006245140000000066, 0.0006246379999999968, 0.0006246109999999971]</msg>
<status status="PASS" starttime="20201029 12:46:25.565" endtime="20201029 12:46:25.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.560" endtime="20201029 12:46:25.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.122" endtime="20201029 12:46:25.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.092" endtime="20201029 12:46:25.569"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:25.571" endtime="20201029 12:46:25.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.570" endtime="20201029 12:46:25.591"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.600" endtime="20201029 12:46:25.690"></status>
</kw>
<msg timestamp="20201029 12:46:25.690" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.598" endtime="20201029 12:46:25.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.693" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.691" endtime="20201029 12:46:25.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.694" endtime="20201029 12:46:25.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.596" endtime="20201029 12:46:25.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.594" endtime="20201029 12:46:25.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.704" endtime="20201029 12:46:26.019"></status>
</kw>
<msg timestamp="20201029 12:46:26.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018310389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018954125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:25.703" endtime="20201029 12:46:26.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018310389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018954125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.023" endtime="20201029 12:46:26.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.031" endtime="20201029 12:46:26.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.700" endtime="20201029 12:46:26.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.698" endtime="20201029 12:46:26.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:26.038" level="INFO">${PHILIP_RES} = [{'diff': 0.0006437359999999989}, {'diff': 0.0006438050000000008}, {'diff': 0.0006436659999999976}, {'diff': 0.0006437780000000011}, {'diff': 0.000643860999999999}, {'diff': 0.0006440830000000002}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:26.034" endtime="20201029 12:46:26.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:26.042" level="INFO">${RESULT} = {'diff': [0.0006437359999999989, 0.0006438050000000008, 0.0006436659999999976, 0.0006437780000000011, 0.000643860999999999, 0.0006440830000000002, 0.0006440969999999997, 0.0006439440000000005, 0.00064...</msg>
<status status="PASS" starttime="20201029 12:46:26.039" endtime="20201029 12:46:26.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.046" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:26.045" endtime="20201029 12:46:26.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.049" level="INFO">VALUE: [0.0006437359999999989, 0.0006438050000000008, 0.0006436659999999976, 0.0006437780000000011, 0.000643860999999999, 0.0006440830000000002, 0.0006440969999999997, 0.0006439440000000005, 0.0006439449999999999, 0.0006440419999999974, 0.0006440980000000027, 0.0006438890000000017, 0.0006438610000000025, 0.0006439169999999939, 0.0006439440000000005, 0.0006440279999999979, 0.0006438059999999968, 0.0006441800000000011, 0.0006441250000000023, 0.0006438889999999947, 0.0006441250000000023, 0.0006438749999999951, 0.0006438889999999947, 0.0006439440000000005, 0.0006438750000000021, 0.0006439310000000004, 0.0006435690000000036, 0.000643555000000004, 0.000643652999999994, 0.0006437229999999988, 0.0006437780000000115, 0.000643764000000005, 0.0006439859999999992, 0.0006439720000000065, 0.0006439999999999918, 0.0006440970000000101, 0.0006442500000000129, 0.0006439159999999944, 0.0006440000000000057, 0.0006441809999999937, 0.0006440969999999963, 0.0006440139999999983, 0.0006439720000000065, 0.0006440280000000048, 0.0006438480000000024, 0.0006440840000000031, 0.0006439719999999927, 0.0006440830000000036, 0.0006440970000000101, 0.0006440550000000045]</msg>
<status status="PASS" starttime="20201029 12:46:26.047" endtime="20201029 12:46:26.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.043" endtime="20201029 12:46:26.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.592" endtime="20201029 12:46:26.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.569" endtime="20201029 12:46:26.052"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:26.054" endtime="20201029 12:46:26.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.053" endtime="20201029 12:46:26.074"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.083" endtime="20201029 12:46:26.176"></status>
</kw>
<msg timestamp="20201029 12:46:26.176" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.081" endtime="20201029 12:46:26.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.179" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.177" endtime="20201029 12:46:26.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.180" endtime="20201029 12:46:26.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.078" endtime="20201029 12:46:26.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.076" endtime="20201029 12:46:26.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.189" endtime="20201029 12:46:26.476"></status>
</kw>
<msg timestamp="20201029 12:46:26.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017616167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018279472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.187" endtime="20201029 12:46:26.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017616167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018279472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.480" endtime="20201029 12:46:26.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.488" endtime="20201029 12:46:26.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.185" endtime="20201029 12:46:26.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.183" endtime="20201029 12:46:26.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:26.494" level="INFO">${PHILIP_RES} = [{'diff': 0.0006633050000000029}, {'diff': 0.0006632909999999999}, {'diff': 0.0006631809999999988}, {'diff': 0.0006633749999999973}, {'diff': 0.0006632919999999994}, {'diff': 0.0006632779999999998}, {...</msg>
<status status="PASS" starttime="20201029 12:46:26.491" endtime="20201029 12:46:26.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:26.499" level="INFO">${RESULT} = {'diff': [0.0006633050000000029, 0.0006632909999999999, 0.0006631809999999988, 0.0006633749999999973, 0.0006632919999999994, 0.0006632779999999998, 0.0006633610000000012, 0.0006632360000000011, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:46:26.496" endtime="20201029 12:46:26.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.504" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:26.503" endtime="20201029 12:46:26.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.507" level="INFO">VALUE: [0.0006633050000000029, 0.0006632909999999999, 0.0006631809999999988, 0.0006633749999999973, 0.0006632919999999994, 0.0006632779999999998, 0.0006633610000000012, 0.0006632360000000011, 0.0006632500000000006, 0.0006633340000000015, 0.0006633330000000021, 0.0006631949999999984, 0.000663221999999998, 0.0006631799999999993, 0.0006632919999999959, 0.000663221999999998, 0.0006633480000000011, 0.0006631529999999997, 0.0006633610000000012, 0.0006632359999999976, 0.0006632910000000034, 0.0006632780000000033, 0.0006632229999999975, 0.0006634299999999996, 0.0006633329999999951, 0.0006634450000000056, 0.0006632499999999972, 0.0006632499999999972, 0.0006632909999999964, 0.0006632920000000098, 0.0006633190000000094, 0.0006632770000000038, 0.0006633050000000029, 0.0006632780000000033, 0.0006633060000000024, 0.0006632920000000098, 0.0006630700000000017, 0.0006632359999999976, 0.0006633890000000003, 0.0006631250000000005, 0.0006632639999999967, 0.0006634169999999995, 0.0006633469999999947, 0.0006635279999999966, 0.000663431000000006, 0.0006634439999999991, 0.0006633750000000077, 0.000663431000000006, 0.0006635690000000027, 0.000663431000000006]</msg>
<status status="PASS" starttime="20201029 12:46:26.505" endtime="20201029 12:46:26.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.500" endtime="20201029 12:46:26.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.075" endtime="20201029 12:46:26.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.052" endtime="20201029 12:46:26.509"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:26.511" endtime="20201029 12:46:26.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.510" endtime="20201029 12:46:26.531"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.540" endtime="20201029 12:46:26.639"></status>
</kw>
<msg timestamp="20201029 12:46:26.639" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.538" endtime="20201029 12:46:26.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.642" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.640" endtime="20201029 12:46:26.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.643" endtime="20201029 12:46:26.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.535" endtime="20201029 12:46:26.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.533" endtime="20201029 12:46:26.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.652" endtime="20201029 12:46:26.963"></status>
</kw>
<msg timestamp="20201029 12:46:26.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017895042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018578403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.651" endtime="20201029 12:46:26.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017895042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018578403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.967" endtime="20201029 12:46:26.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.975" endtime="20201029 12:46:26.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.648" endtime="20201029 12:46:26.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.646" endtime="20201029 12:46:26.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:26.982" level="INFO">${PHILIP_RES} = [{'diff': 0.0006833610000000004}, {'diff': 0.0006834309999999982}, {'diff': 0.0006832359999999968}, {'diff': 0.0006833480000000003}, {'diff': 0.0006833340000000007}, {'diff': 0.0006833200000000011}, {...</msg>
<status status="PASS" starttime="20201029 12:46:26.978" endtime="20201029 12:46:26.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:26.986" level="INFO">${RESULT} = {'diff': [0.0006833610000000004, 0.0006834309999999982, 0.0006832359999999968, 0.0006833480000000003, 0.0006833340000000007, 0.0006833200000000011, 0.0006832780000000024, 0.000683195000000001, 0.00068...</msg>
<status status="PASS" starttime="20201029 12:46:26.983" endtime="20201029 12:46:26.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.990" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:26.989" endtime="20201029 12:46:26.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.993" level="INFO">VALUE: [0.0006833610000000004, 0.0006834309999999982, 0.0006832359999999968, 0.0006833480000000003, 0.0006833340000000007, 0.0006833200000000011, 0.0006832780000000024, 0.000683195000000001, 0.0006832219999999972, 0.0006833609999999934, 0.0006832499999999964, 0.0006831250000000066, 0.0006828609999999999, 0.0006830970000000006, 0.0006829999999999961, 0.0006829860000000035, 0.000683083000000001, 0.0006830279999999953, 0.0006830560000000013, 0.0006831389999999993, 0.0006832499999999964, 0.0006831670000000054, 0.0006830970000000006, 0.0006832360000000037, 0.0006829859999999965, 0.0006832089999999971, 0.0006831250000000066, 0.0006830140000000096, 0.0006830560000000013, 0.0006831389999999993, 0.0006831110000000001, 0.0006831530000000058, 0.0006829450000000042, 0.0006832359999999899, 0.000683098000000007, 0.0006831110000000001, 0.0006831250000000066, 0.0006832910000000025, 0.0006829720000000039, 0.0006829309999999977, 0.0006831949999999976, 0.0006832219999999972, 0.0006832219999999972, 0.0006830689999999945, 0.0006830280000000022, 0.000683000000000003, 0.0006830270000000027, 0.0006830969999999936, 0.0006831529999999919, 0.0006831389999999993]</msg>
<status status="PASS" starttime="20201029 12:46:26.991" endtime="20201029 12:46:26.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.987" endtime="20201029 12:46:26.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.532" endtime="20201029 12:46:26.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.509" endtime="20201029 12:46:26.995"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:26.997" endtime="20201029 12:46:27.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.996" endtime="20201029 12:46:27.018"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.026" endtime="20201029 12:46:27.122"></status>
</kw>
<msg timestamp="20201029 12:46:27.122" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.024" endtime="20201029 12:46:27.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.125" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.123" endtime="20201029 12:46:27.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.126" endtime="20201029 12:46:27.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.022" endtime="20201029 12:46:27.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.020" endtime="20201029 12:46:27.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.136" endtime="20201029 12:46:27.423"></status>
</kw>
<msg timestamp="20201029 12:46:27.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018952014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019655167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.135" endtime="20201029 12:46:27.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018952014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019655167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.427" endtime="20201029 12:46:27.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.435" endtime="20201029 12:46:27.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.132" endtime="20201029 12:46:27.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.130" endtime="20201029 12:46:27.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:27.442" level="INFO">${PHILIP_RES} = [{'diff': 0.0007031530000000015}, {'diff': 0.0007031530000000015}, {'diff': 0.0007033060000000008}, {'diff': 0.0007033060000000008}, {'diff': 0.0007032219999999999}, {'diff': 0.0007032359999999994}, {...</msg>
<status status="PASS" starttime="20201029 12:46:27.438" endtime="20201029 12:46:27.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:27.446" level="INFO">${RESULT} = {'diff': [0.0007031530000000015, 0.0007031530000000015, 0.0007033060000000008, 0.0007033060000000008, 0.0007032219999999999, 0.0007032359999999994, 0.0007031810000000006, 0.0007033190000000009, 0.0007...</msg>
<status status="PASS" starttime="20201029 12:46:27.443" endtime="20201029 12:46:27.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.450" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:27.449" endtime="20201029 12:46:27.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.453" level="INFO">VALUE: [0.0007031530000000015, 0.0007031530000000015, 0.0007033060000000008, 0.0007033060000000008, 0.0007032219999999999, 0.0007032359999999994, 0.0007031810000000006, 0.0007033190000000009, 0.0007031389999999985, 0.0007033060000000008, 0.0007032919999999943, 0.0007032219999999964, 0.0007032500000000025, 0.0007032219999999964, 0.0007033330000000004, 0.0007031389999999985, 0.000703458000000004, 0.0007033479999999995, 0.0007033339999999999, 0.0007031669999999976, 0.000703137999999999, 0.0007033050000000013, 0.0007033609999999996, 0.0007032920000000012, 0.0007033749999999991, 0.0007031810000000041, 0.000703152999999998, 0.0007030830000000071, 0.000703361999999999, 0.0007033750000000061, 0.0007033889999999987, 0.0007032639999999951, 0.0007031940000000042, 0.0007033330000000004, 0.0007033050000000013, 0.000703264000000009, 0.0007031530000000119, 0.0007033330000000004, 0.0007033060000000008, 0.0007033609999999996, 0.0007034309999999905, 0.0007032089999999963, 0.0007032920000000081, 0.0007032919999999943, 0.0007034030000000052, 0.0007032780000000016, 0.0007034030000000052, 0.0007033060000000008, 0.0007032089999999963, 0.0007035690000000011]</msg>
<status status="PASS" starttime="20201029 12:46:27.451" endtime="20201029 12:46:27.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.447" endtime="20201029 12:46:27.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.018" endtime="20201029 12:46:27.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.995" endtime="20201029 12:46:27.456"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:27.458" endtime="20201029 12:46:27.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.457" endtime="20201029 12:46:27.481"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.499" endtime="20201029 12:46:27.605"></status>
</kw>
<msg timestamp="20201029 12:46:27.606" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.496" endtime="20201029 12:46:27.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.612" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.609" endtime="20201029 12:46:27.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.615" endtime="20201029 12:46:27.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.490" endtime="20201029 12:46:27.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.485" endtime="20201029 12:46:27.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.635" endtime="20201029 12:46:27.946"></status>
</kw>
<msg timestamp="20201029 12:46:27.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035450806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036174903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.631" endtime="20201029 12:46:27.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035450806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036174903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.950" endtime="20201029 12:46:27.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.958" endtime="20201029 12:46:27.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.626" endtime="20201029 12:46:27.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.622" endtime="20201029 12:46:27.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:27.964" level="INFO">${PHILIP_RES} = [{'diff': 0.0007240969999999999}, {'diff': 0.0007238609999999993}, {'diff': 0.0007239440000000041}, {'diff': 0.0007238469999999997}, {'diff': 0.0007239730000000028}, {'diff': 0.0007240000000000024}, {...</msg>
<status status="PASS" starttime="20201029 12:46:27.961" endtime="20201029 12:46:27.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:27.969" level="INFO">${RESULT} = {'diff': [0.0007240969999999999, 0.0007238609999999993, 0.0007239440000000041, 0.0007238469999999997, 0.0007239730000000028, 0.0007240000000000024, 0.0007239449999999967, 0.000723931000000004, 0.00072...</msg>
<status status="PASS" starttime="20201029 12:46:27.965" endtime="20201029 12:46:27.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.974" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:27.973" endtime="20201029 12:46:27.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.976" level="INFO">VALUE: [0.0007240969999999999, 0.0007238609999999993, 0.0007239440000000041, 0.0007238469999999997, 0.0007239730000000028, 0.0007240000000000024, 0.0007239449999999967, 0.000723931000000004, 0.0007238889999999984, 0.0007238339999999996, 0.0007238190000000005, 0.0007238339999999996, 0.0007239159999999981, 0.0007240690000000008, 0.0007238060000000004, 0.000724125000000006, 0.0007237640000000017, 0.0007240410000000086, 0.000724013999999995, 0.0007241389999999986, 0.0007240689999999939, 0.000724013999999995, 0.0007239720000000033, 0.0007238469999999997, 0.0007238190000000005, 0.0007239450000000036, 0.0007238749999999988, 0.0007238060000000074, 0.0007238749999999988, 0.0007238190000000005, 0.0007238749999999988, 0.000723902999999998, 0.0007239299999999976, 0.000723833000000007, 0.000723902999999998, 0.0007238329999999932, 0.0007238190000000005, 0.0007238889999999915, 0.0007237910000000014, 0.0007238060000000074, 0.0007237780000000082, 0.0007239720000000033, 0.0007238749999999988, 0.000723902999999998, 0.0007239719999999894, 0.0007237779999999944, 0.0007238190000000005, 0.0007238190000000005, 0.0007238610000000062, 0.0007239450000000036]</msg>
<status status="PASS" starttime="20201029 12:46:27.975" endtime="20201029 12:46:27.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.970" endtime="20201029 12:46:27.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.482" endtime="20201029 12:46:27.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.456" endtime="20201029 12:46:27.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.313" endtime="20201029 12:46:27.978"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:05.016" endtime="20201029 12:46:27.979" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:45:44.136" endtime="20201029 12:46:27.988"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.059" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:46:28.068" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:46:29.523" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:46:28.058" endtime="20201029 12:46:29.525"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.530" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:46:29.527" endtime="20201029 12:46:29.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.057" endtime="20201029 12:46:29.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:29.535" endtime="20201029 12:46:29.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.533" endtime="20201029 12:46:29.722"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.735" endtime="20201029 12:46:29.755"></status>
</kw>
<msg timestamp="20201029 12:46:29.756" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.733" endtime="20201029 12:46:29.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.758" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.757" endtime="20201029 12:46:29.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.761" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:29.759" endtime="20201029 12:46:29.762"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:29.731" endtime="20201029 12:46:29.762"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:29.728" endtime="20201029 12:46:29.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.727" endtime="20201029 12:46:29.763"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:29.768" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:29.767" endtime="20201029 12:46:29.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.764" endtime="20201029 12:46:29.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.726" endtime="20201029 12:46:29.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.726" endtime="20201029 12:46:29.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.770" endtime="20201029 12:46:29.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.724" endtime="20201029 12:46:29.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.773" endtime="20201029 12:46:29.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.723" endtime="20201029 12:46:29.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.056" endtime="20201029 12:46:29.775"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:29.819" endtime="20201029 12:46:29.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.818" endtime="20201029 12:46:29.839"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.853" endtime="20201029 12:46:29.872"></status>
</kw>
<msg timestamp="20201029 12:46:29.872" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.852" endtime="20201029 12:46:29.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.875" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.873" endtime="20201029 12:46:29.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.878" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:29.876" endtime="20201029 12:46:29.878"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:29.849" endtime="20201029 12:46:29.879"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:29.847" endtime="20201029 12:46:29.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.846" endtime="20201029 12:46:29.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:29.884" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:29.883" endtime="20201029 12:46:29.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.881" endtime="20201029 12:46:29.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.845" endtime="20201029 12:46:29.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.844" endtime="20201029 12:46:29.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.885" endtime="20201029 12:46:29.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.843" endtime="20201029 12:46:29.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.841" endtime="20201029 12:46:29.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.817" endtime="20201029 12:46:29.888"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.899" endtime="20201029 12:46:29.935"></status>
</kw>
<msg timestamp="20201029 12:46:29.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.898" endtime="20201029 12:46:29.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.936" endtime="20201029 12:46:29.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.939" endtime="20201029 12:46:29.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.893" endtime="20201029 12:46:29.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.891" endtime="20201029 12:46:29.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.948" endtime="20201029 12:46:30.238"></status>
</kw>
<msg timestamp="20201029 12:46:30.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072141139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072472917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.947" endtime="20201029 12:46:30.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072141139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072472917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.242" endtime="20201029 12:46:30.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.251" endtime="20201029 12:46:30.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.944" endtime="20201029 12:46:30.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.942" endtime="20201029 12:46:30.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:30.257" level="INFO">${RESULT} = [{'diff': 0.0003317779999999909}, {'diff': 0.00033940200000000253}, {'diff': 0.00034180600000000005}, {'diff': 0.0003416940000000035}, {'diff': 0.00034243099999999027}, {'diff': 0.0003430690000000014}...</msg>
<status status="PASS" starttime="20201029 12:46:30.254" endtime="20201029 12:46:30.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:30.261" level="INFO">${ACCURACY} = {'diff': [0.0003317779999999909, 0.00033940200000000253, 0.00034180600000000005, 0.0003416940000000035, 0.00034243099999999027, 0.0003430690000000014, 0.0003385549999999904, 0.00033972200000000063, 0....</msg>
<status status="PASS" starttime="20201029 12:46:30.258" endtime="20201029 12:46:30.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.267" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:46:30.266" endtime="20201029 12:46:30.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.269" level="INFO">VALUE: [0.0003317779999999909, 0.00033940200000000253, 0.00034180600000000005, 0.0003416940000000035, 0.00034243099999999027, 0.0003430690000000014, 0.0003385549999999904, 0.00033972200000000063, 0.000344403000000007, 0.0003381529999999938, 0.0003406390000000037, 0.0003400139999999996, 0.0003386529999999943, 0.00034322200000000413, 0.0003421529999999978, 0.0003384170000000075, 0.0003389589999999998, 0.0003441390000000072, 0.0003429439999999978, 0.0003385689999999969, 0.00034145799999998894, 0.00034048600000000095, 0.00034441600000000017, 0.0003400279999999922, 0.00034073600000000814, 0.00034384700000000823, 0.00034447199999999845, 0.0003417920000000074, 0.0003414300000000037, 0.0003379730000000053, 0.0003397920000000054, 0.00034368099999999846, 0.0003387630000000058, 0.0003443890000000005, 0.00033868100000000734, 0.00033962500000001006, 0.00033859699999999604, 0.00034268099999999746, 0.0003388480000000027, 0.00034348600000000395, 0.000339612000000003, 0.00034205600000000724, 0.0003426940000000045, 0.00034029100000000645, 0.00033834700000000273, 0.0003389449999999933, 0.00034050000000000746, 0.0003420140000000016, 0.00034172200000000263, 0.0003412920000000069]</msg>
<status status="PASS" starttime="20201029 12:46:30.268" endtime="20201029 12:46:30.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.262" endtime="20201029 12:46:30.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:30.274" endtime="20201029 12:46:30.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.272" endtime="20201029 12:46:30.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.271" endtime="20201029 12:46:30.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.890" endtime="20201029 12:46:30.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.889" endtime="20201029 12:46:30.295"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.303" endtime="20201029 12:46:30.341"></status>
</kw>
<msg timestamp="20201029 12:46:30.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.302" endtime="20201029 12:46:30.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.343" endtime="20201029 12:46:30.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.345" endtime="20201029 12:46:30.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.299" endtime="20201029 12:46:30.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.297" endtime="20201029 12:46:30.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.355" endtime="20201029 12:46:30.640"></status>
</kw>
<msg timestamp="20201029 12:46:30.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024707986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025040611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.353" endtime="20201029 12:46:30.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024707986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025040611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.645" endtime="20201029 12:46:30.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.653" endtime="20201029 12:46:30.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.350" endtime="20201029 12:46:30.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.349" endtime="20201029 12:46:30.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:30.659" level="INFO">${RESULT} = [{'diff': 0.0003326249999999996}, {'diff': 0.00033977699999999944}, {'diff': 0.0003388190000000006}, {'diff': 0.00034433299999999875}, {'diff': 0.0003392779999999984}, {'diff': 0.0003431799999999985},...</msg>
<status status="PASS" starttime="20201029 12:46:30.656" endtime="20201029 12:46:30.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:30.664" level="INFO">${ACCURACY} = {'diff': [0.0003326249999999996, 0.00033977699999999944, 0.0003388190000000006, 0.00034433299999999875, 0.0003392779999999984, 0.0003431799999999985, 0.0003444720000000019, 0.0003417780000000009, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:30.660" endtime="20201029 12:46:30.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.669" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:46:30.668" endtime="20201029 12:46:30.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.672" level="INFO">VALUE: [0.0003326249999999996, 0.00033977699999999944, 0.0003388190000000006, 0.00034433299999999875, 0.0003392779999999984, 0.0003431799999999985, 0.0003444720000000019, 0.0003417780000000009, 0.000343986000000001, 0.0003424300000000012, 0.00033825000000000174, 0.00034340299999999907, 0.00034076400000000034, 0.0003395560000000013, 0.0003387499999999988, 0.00033937500000000287, 0.00034323600000000024, 0.0003398749999999999, 0.00034226400000000184, 0.00034319499999999753, 0.0003408469999999983, 0.00033948599999999995, 0.0003440270000000037, 0.0003389030000000015, 0.000344292000000003, 0.00033805499999999683, 0.0003396669999999949, 0.0003444579999999989, 0.0003439020000000001, 0.00033809699999999554, 0.00034422200000000513, 0.00034248600000000295, 0.00033893100000000065, 0.00034092999999999624, 0.0003446250000000012, 0.0003392920000000049, 0.00034369399999999856, 0.0003399580000000013, 0.00033805499999999683, 0.0003384719999999994, 0.0003402360000000007, 0.00034197199999999595, 0.0003440690000000024, 0.0003401250000000036, 0.00034054199999999923, 0.0003396390000000027, 0.00034401399999999666, 0.00033836099999999536, 0.0003438609999999939, 0.0003384170000000006]</msg>
<status status="PASS" starttime="20201029 12:46:30.671" endtime="20201029 12:46:30.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.665" endtime="20201029 12:46:30.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:30.677" endtime="20201029 12:46:30.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.676" endtime="20201029 12:46:30.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.674" endtime="20201029 12:46:30.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.296" endtime="20201029 12:46:30.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.295" endtime="20201029 12:46:30.698"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.707" endtime="20201029 12:46:30.743"></status>
</kw>
<msg timestamp="20201029 12:46:30.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.705" endtime="20201029 12:46:30.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.745" endtime="20201029 12:46:30.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.747" endtime="20201029 12:46:30.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.703" endtime="20201029 12:46:30.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.701" endtime="20201029 12:46:30.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.757" endtime="20201029 12:46:31.043"></status>
</kw>
<msg timestamp="20201029 12:46:31.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023087528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023421139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.755" endtime="20201029 12:46:31.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023087528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023421139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.047" endtime="20201029 12:46:31.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.056" endtime="20201029 12:46:31.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.753" endtime="20201029 12:46:31.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.751" endtime="20201029 12:46:31.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.062" level="INFO">${RESULT} = [{'diff': 0.000333611000000001}, {'diff': 0.0003401110000000006}, {'diff': 0.00034168000000000046}, {'diff': 0.0003413050000000001}, {'diff': 0.000340693999999999}, {'diff': 0.000339306000000001}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:31.059" endtime="20201029 12:46:31.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:31.066" level="INFO">${ACCURACY} = {'diff': [0.000333611000000001, 0.0003401110000000006, 0.00034168000000000046, 0.0003413050000000001, 0.000340693999999999, 0.000339306000000001, 0.0003426249999999992, 0.0003394450000000007, 0.000344...</msg>
<status status="PASS" starttime="20201029 12:46:31.063" endtime="20201029 12:46:31.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.071" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:46:31.070" endtime="20201029 12:46:31.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.073" level="INFO">VALUE: [0.000333611000000001, 0.0003401110000000006, 0.00034168000000000046, 0.0003413050000000001, 0.000340693999999999, 0.000339306000000001, 0.0003426249999999992, 0.0003394450000000007, 0.00034455499999999986, 0.0003380550000000003, 0.0003432639999999994, 0.00034173599999999874, 0.00033890199999999857, 0.0003416530000000008, 0.0003431659999999989, 0.00033944400000000124, 0.0003432499999999998, 0.0003400980000000005, 0.000343889, 0.00033998600000000045, 0.0003397079999999976, 0.00034018099999999843, 0.0003413750000000014, 0.00033963899999999575, 0.00033898599999999945, 0.0003384449999999997, 0.0003410140000000006, 0.0003384999999999985, 0.0003422219999999962, 0.00034054199999999923, 0.00034227700000000194, 0.0003386250000000021, 0.00034087499999999743, 0.00034419399999999906, 0.0003444020000000006, 0.0003426249999999992, 0.0003407360000000012, 0.0003381809999999999, 0.00033943100000000115, 0.0003417219999999957, 0.0003406669999999959, 0.0003404720000000014, 0.0003415559999999998, 0.00033863899999999475, 0.0003412500000000013, 0.0003432079999999976, 0.0003427780000000019, 0.000343889, 0.00033827800000000435, 0.000341791000000001]</msg>
<status status="PASS" starttime="20201029 12:46:31.072" endtime="20201029 12:46:31.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.067" endtime="20201029 12:46:31.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:31.078" endtime="20201029 12:46:31.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.076" endtime="20201029 12:46:31.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.075" endtime="20201029 12:46:31.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.699" endtime="20201029 12:46:31.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.699" endtime="20201029 12:46:31.099"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.108" endtime="20201029 12:46:31.145"></status>
</kw>
<msg timestamp="20201029 12:46:31.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.106" endtime="20201029 12:46:31.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.146" endtime="20201029 12:46:31.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.149" endtime="20201029 12:46:31.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.103" endtime="20201029 12:46:31.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.101" endtime="20201029 12:46:31.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.158" endtime="20201029 12:46:31.444"></status>
</kw>
<msg timestamp="20201029 12:46:31.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024592528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024946167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.157" endtime="20201029 12:46:31.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024592528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024946167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.448" endtime="20201029 12:46:31.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.456" endtime="20201029 12:46:31.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.154" endtime="20201029 12:46:31.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.153" endtime="20201029 12:46:31.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.463" level="INFO">${RESULT} = [{'diff': 0.0003536390000000028}, {'diff': 0.0003411390000000007}, {'diff': 0.0003431249999999997}, {'diff': 0.00033815300000000076}, {'diff': 0.00034261200000000255}, {'diff': 0.00033926399999999884}...</msg>
<status status="PASS" starttime="20201029 12:46:31.460" endtime="20201029 12:46:31.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:31.467" level="INFO">${ACCURACY} = {'diff': [0.0003536390000000028, 0.0003411390000000007, 0.0003431249999999997, 0.00033815300000000076, 0.00034261200000000255, 0.00033926399999999884, 0.00033840199999999807, 0.0003412360000000017, 0....</msg>
<status status="PASS" starttime="20201029 12:46:31.464" endtime="20201029 12:46:31.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.472" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:46:31.471" endtime="20201029 12:46:31.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.474" level="INFO">VALUE: [0.0003536390000000028, 0.0003411390000000007, 0.0003431249999999997, 0.00033815300000000076, 0.00034261200000000255, 0.00033926399999999884, 0.00033840199999999807, 0.0003412360000000017, 0.0003380550000000003, 0.0003429720000000004, 0.0003410689999999994, 0.0003437500000000003, 0.00033797200000000235, 0.0003406390000000002, 0.0003436659999999994, 0.0003399720000000009, 0.0003435699999999979, 0.00033962499999999965, 0.0003380970000000025, 0.00034043100000000215, 0.0003433889999999995, 0.0003384999999999985, 0.00034, 0.00033842999999999374, 0.0003396250000000031, 0.00034154100000000076, 0.00034391699999999914, 0.0003442639999999969, 0.00034176400000000134, 0.000342292000000001, 0.00034258300000000047, 0.0003383199999999961, 0.000340291999999999, 0.00034452800000000366, 0.0003433889999999995, 0.0003433340000000007, 0.000338999999999999, 0.0003385700000000033, 0.0003413339999999987, 0.00034363899999999975, 0.00033991599999999567, 0.00034068099999999546, 0.0003392909999999985, 0.00034347199999999745, 0.0003416800000000039, 0.00033905499999999783, 0.0003435969999999941, 0.00033934700000000373, 0.0003408329999999987, 0.00034419499999999853]</msg>
<status status="PASS" starttime="20201029 12:46:31.473" endtime="20201029 12:46:31.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.468" endtime="20201029 12:46:31.476"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:31.480" endtime="20201029 12:46:31.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.478" endtime="20201029 12:46:31.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.477" endtime="20201029 12:46:31.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.100" endtime="20201029 12:46:31.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.099" endtime="20201029 12:46:31.500"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.509" endtime="20201029 12:46:31.552"></status>
</kw>
<msg timestamp="20201029 12:46:31.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.508" endtime="20201029 12:46:31.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.554" endtime="20201029 12:46:31.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.556" endtime="20201029 12:46:31.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.505" endtime="20201029 12:46:31.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.503" endtime="20201029 12:46:31.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.565" endtime="20201029 12:46:31.851"></status>
</kw>
<msg timestamp="20201029 12:46:31.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024770208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025108069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.564" endtime="20201029 12:46:31.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024770208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025108069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.855" endtime="20201029 12:46:31.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.863" endtime="20201029 12:46:31.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.561" endtime="20201029 12:46:31.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.560" endtime="20201029 12:46:31.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.870" level="INFO">${RESULT} = [{'diff': 0.0003378610000000018}, {'diff': 0.0003427499999999993}, {'diff': 0.0003414309999999997}, {'diff': 0.00034004199999999873}, {'diff': 0.0003414719999999989}, {'diff': 0.00033838900000000144},...</msg>
<status status="PASS" starttime="20201029 12:46:31.866" endtime="20201029 12:46:31.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:31.875" level="INFO">${ACCURACY} = {'diff': [0.0003378610000000018, 0.0003427499999999993, 0.0003414309999999997, 0.00034004199999999873, 0.0003414719999999989, 0.00033838900000000144, 0.000340291999999999, 0.00034316700000000186, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:31.871" endtime="20201029 12:46:31.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.879" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:46:31.878" endtime="20201029 12:46:31.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.882" level="INFO">VALUE: [0.0003378610000000018, 0.0003427499999999993, 0.0003414309999999997, 0.00034004199999999873, 0.0003414719999999989, 0.00033838900000000144, 0.000340291999999999, 0.00034316700000000186, 0.00034427799999999995, 0.000339194000000001, 0.00034373600000000074, 0.00033930599999999755, 0.0003399719999999974, 0.000339291999999998, 0.0003419590000000028, 0.00034208299999999997, 0.00034237499999999893, 0.00034038899999999997, 0.00034081899999999915, 0.0003387920000000044, 0.00034337499999999993, 0.00033977800000000585, 0.00034286099999999986, 0.00034204100000000126, 0.00034265300000000526, 0.00034387500000000043, 0.00033919500000000047, 0.00034109699999999854, 0.0003414720000000024, 0.000339194000000001, 0.0003429170000000051, 0.00033880599999999705, 0.00034094400000000274, 0.0003427920000000015, 0.0003403889999999965, 0.00033881899999999715, 0.00033787500000000137, 0.00034247199999999645, 0.00034036099999999736, 0.00034391699999999914, 0.00034334800000000026, 0.00034306999999999394, 0.00034154200000000023, 0.00033887499999999543, 0.0003421250000000056, 0.0003386390000000017, 0.00034008299999999797, 0.0003439579999999984, 0.0003409579999999954, 0.0003405979999999975]</msg>
<status status="PASS" starttime="20201029 12:46:31.880" endtime="20201029 12:46:31.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.876" endtime="20201029 12:46:31.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:31.886" endtime="20201029 12:46:31.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.885" endtime="20201029 12:46:31.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.884" endtime="20201029 12:46:31.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.501" endtime="20201029 12:46:31.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.501" endtime="20201029 12:46:31.908"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.918" endtime="20201029 12:46:31.954"></status>
</kw>
<msg timestamp="20201029 12:46:31.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.916" endtime="20201029 12:46:31.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.956" endtime="20201029 12:46:31.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.958" endtime="20201029 12:46:31.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.914" endtime="20201029 12:46:31.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.911" endtime="20201029 12:46:31.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.968" endtime="20201029 12:46:32.254"></status>
</kw>
<msg timestamp="20201029 12:46:32.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025027681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025363931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.966" endtime="20201029 12:46:32.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025027681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025363931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.258" endtime="20201029 12:46:32.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.266" endtime="20201029 12:46:32.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.963" endtime="20201029 12:46:32.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.961" endtime="20201029 12:46:32.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:32.273" level="INFO">${RESULT} = [{'diff': 0.00033624999999999974}, {'diff': 0.00034373600000000074}, {'diff': 0.00034263899999999875}, {'diff': 0.00034052799999999966}, {'diff': 0.00034392999999999924}, {'diff': 0.000340445000000001...</msg>
<status status="PASS" starttime="20201029 12:46:32.269" endtime="20201029 12:46:32.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:32.277" level="INFO">${ACCURACY} = {'diff': [0.00033624999999999974, 0.00034373600000000074, 0.00034263899999999875, 0.00034052799999999966, 0.00034392999999999924, 0.0003404450000000017, 0.0003435699999999979, 0.0003441110000000011, 0...</msg>
<status status="PASS" starttime="20201029 12:46:32.274" endtime="20201029 12:46:32.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.281" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:46:32.280" endtime="20201029 12:46:32.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.284" level="INFO">VALUE: [0.00033624999999999974, 0.00034373600000000074, 0.00034263899999999875, 0.00034052799999999966, 0.00034392999999999924, 0.0003404450000000017, 0.0003435699999999979, 0.0003441110000000011, 0.0003435700000000014, 0.0003414450000000027, 0.00034022199999999767, 0.0003441250000000007, 0.0003414589999999988, 0.00034012500000000015, 0.0003398200000000011, 0.0003406390000000002, 0.00034176400000000134, 0.0003393749999999994, 0.00033866700000000083, 0.0003426109999999996, 0.00034259700000000004, 0.00033890299999999457, 0.0003384160000000011, 0.00033855500000000427, 0.0003380699999999959, 0.00034169499999999603, 0.000343679999999999, 0.0003413889999999975, 0.00033944400000000124, 0.0003442910000000035, 0.00033954099999999876, 0.000341612000000005, 0.0003394580000000008, 0.00033830599999999655, 0.00034280600000000105, 0.00034290299999999857, 0.0003419580000000033, 0.00033844400000000024, 0.0003408480000000047, 0.0003425419999999943, 0.00033858299999999647, 0.0003443059999999956, 0.00034236099999999936, 0.00034131899999999965, 0.0003443470000000018, 0.0003437219999999977, 0.00034094400000000274, 0.00034044400000000224, 0.00034386100000000086, 0.00034293100000000465]</msg>
<status status="PASS" starttime="20201029 12:46:32.282" endtime="20201029 12:46:32.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.278" endtime="20201029 12:46:32.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:32.288" endtime="20201029 12:46:32.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.287" endtime="20201029 12:46:32.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.286" endtime="20201029 12:46:32.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.909" endtime="20201029 12:46:32.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.908" endtime="20201029 12:46:32.309"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.318" endtime="20201029 12:46:32.356"></status>
</kw>
<msg timestamp="20201029 12:46:32.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.317" endtime="20201029 12:46:32.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.358" endtime="20201029 12:46:32.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.360" endtime="20201029 12:46:32.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.314" endtime="20201029 12:46:32.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.312" endtime="20201029 12:46:32.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.369" endtime="20201029 12:46:32.655"></status>
</kw>
<msg timestamp="20201029 12:46:32.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024889194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025245056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.368" endtime="20201029 12:46:32.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024889194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025245056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.659" endtime="20201029 12:46:32.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.667" endtime="20201029 12:46:32.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.365" endtime="20201029 12:46:32.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.363" endtime="20201029 12:46:32.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:32.674" level="INFO">${RESULT} = [{'diff': 0.00035586199999999846}, {'diff': 0.0003379719999999989}, {'diff': 0.00034172200000000263}, {'diff': 0.00034248700000000243}, {'diff': 0.0003399030000000025}, {'diff': 0.00034427799999999995...</msg>
<status status="PASS" starttime="20201029 12:46:32.671" endtime="20201029 12:46:32.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:32.678" level="INFO">${ACCURACY} = {'diff': [0.00035586199999999846, 0.0003379719999999989, 0.00034172200000000263, 0.00034248700000000243, 0.0003399030000000025, 0.00034427799999999995, 0.00033958300000000094, 0.0003408049999999996, 0...</msg>
<status status="PASS" starttime="20201029 12:46:32.675" endtime="20201029 12:46:32.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.684" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:46:32.682" endtime="20201029 12:46:32.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.687" level="INFO">VALUE: [0.00035586199999999846, 0.0003379719999999989, 0.00034172200000000263, 0.00034248700000000243, 0.0003399030000000025, 0.00034427799999999995, 0.00033958300000000094, 0.0003408049999999996, 0.00033988899999999947, 0.0003405699999999984, 0.00034237499999999893, 0.0003442919999999995, 0.0003429720000000004, 0.0003421109999999991, 0.0003411939999999995, 0.00034055499999999933, 0.00034373600000000074, 0.000339597000000004, 0.0003393610000000033, 0.0003428330000000007, 0.0003379579999999993, 0.0003384449999999997, 0.00034052799999999966, 0.000338790999999998, 0.0003407779999999999, 0.00034015300000000276, 0.0003383469999999958, 0.0003413050000000001, 0.0003407360000000012, 0.0003435560000000018, 0.0003414170000000036, 0.00034098600000000145, 0.000339403000000002, 0.0003443050000000031, 0.0003444309999999992, 0.0003409160000000036, 0.0003421390000000052, 0.00034187499999999843, 0.0003417780000000009, 0.0003396940000000015, 0.0003412219999999952, 0.00033986099999999686, 0.0003411810000000029, 0.00034116700000000333, 0.0003406249999999972, 0.0003441659999999999, 0.0003412219999999952, 0.0003380970000000025, 0.0003409030000000035, 0.0003393329999999972]</msg>
<status status="PASS" starttime="20201029 12:46:32.685" endtime="20201029 12:46:32.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.679" endtime="20201029 12:46:32.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:32.694" endtime="20201029 12:46:32.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.692" endtime="20201029 12:46:32.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.690" endtime="20201029 12:46:32.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.310" endtime="20201029 12:46:32.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.310" endtime="20201029 12:46:32.715"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.725" endtime="20201029 12:46:32.763"></status>
</kw>
<msg timestamp="20201029 12:46:32.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.724" endtime="20201029 12:46:32.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.764" endtime="20201029 12:46:32.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.767" endtime="20201029 12:46:32.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.721" endtime="20201029 12:46:32.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.719" endtime="20201029 12:46:32.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.776" endtime="20201029 12:46:33.064"></status>
</kw>
<msg timestamp="20201029 12:46:33.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026164306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026522306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.775" endtime="20201029 12:46:33.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026164306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026522306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.068" endtime="20201029 12:46:33.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.076" endtime="20201029 12:46:33.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.772" endtime="20201029 12:46:33.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.770" endtime="20201029 12:46:33.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:33.083" level="INFO">${RESULT} = [{'diff': 0.0003580000000000007}, {'diff': 0.00034186099999999886}, {'diff': 0.0003412500000000013}, {'diff': 0.0003378189999999996}, {'diff': 0.00034204200000000073}, {'diff': 0.00034195799999999985}...</msg>
<status status="PASS" starttime="20201029 12:46:33.080" endtime="20201029 12:46:33.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:33.088" level="INFO">${ACCURACY} = {'diff': [0.0003580000000000007, 0.00034186099999999886, 0.0003412500000000013, 0.0003378189999999996, 0.00034204200000000073, 0.00034195799999999985, 0.00034413900000000025, 0.00034038899999999997, 0...</msg>
<status status="PASS" starttime="20201029 12:46:33.084" endtime="20201029 12:46:33.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.092" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:46:33.091" endtime="20201029 12:46:33.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.095" level="INFO">VALUE: [0.0003580000000000007, 0.00034186099999999886, 0.0003412500000000013, 0.0003378189999999996, 0.00034204200000000073, 0.00034195799999999985, 0.00034413900000000025, 0.00034038899999999997, 0.0003380000000000015, 0.00033991599999999914, 0.00034122199999999867, 0.00033962499999999965, 0.00034230600000000055, 0.0003379579999999993, 0.00034308300000000097, 0.00034381900000000215, 0.0003435700000000014, 0.00034318099999999796, 0.00034286099999999986, 0.00034241599999999817, 0.0003416810000000034, 0.000338387999999995, 0.0003440690000000024, 0.00034169499999999603, 0.0003384999999999985, 0.00033976399999999934, 0.00033954199999999823, 0.0003423469999999998, 0.0003441529999999998, 0.00033811100000000205, 0.00033838900000000144, 0.00034048600000000095, 0.00034270800000000406, 0.00034341699999999864, 0.00034334699999999385, 0.00034072200000000163, 0.00033851300000000556, 0.0003436250000000002, 0.0003391810000000009, 0.00033823600000000564, 0.0003389589999999998, 0.0003406249999999972, 0.0003396810000000014, 0.0003430560000000013, 0.0003410140000000006, 0.0003380830000000029, 0.0003418469999999993, 0.000340194000000002, 0.0003439999999999971, 0.0003382499999999983]</msg>
<status status="PASS" starttime="20201029 12:46:33.093" endtime="20201029 12:46:33.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.089" endtime="20201029 12:46:33.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:33.100" endtime="20201029 12:46:33.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.098" endtime="20201029 12:46:33.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.097" endtime="20201029 12:46:33.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.717" endtime="20201029 12:46:33.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.716" endtime="20201029 12:46:33.121"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.129" endtime="20201029 12:46:33.165"></status>
</kw>
<msg timestamp="20201029 12:46:33.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.128" endtime="20201029 12:46:33.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.167" endtime="20201029 12:46:33.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.169" endtime="20201029 12:46:33.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.125" endtime="20201029 12:46:33.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.123" endtime="20201029 12:46:33.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.179" endtime="20201029 12:46:33.468"></status>
</kw>
<msg timestamp="20201029 12:46:33.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.177" endtime="20201029 12:46:33.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.472" endtime="20201029 12:46:33.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.480" endtime="20201029 12:46:33.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.174" endtime="20201029 12:46:33.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.173" endtime="20201029 12:46:33.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:33.487" level="INFO">${RESULT} = [{'diff': 0.0003356800000000014}, {'diff': 0.0003443890000000005}, {'diff': 0.00033784799999999823}, {'diff': 0.0003427080000000006}, {'diff': 0.00033959699999999704}, {'diff': 0.0003408049999999996},...</msg>
<status status="PASS" starttime="20201029 12:46:33.484" endtime="20201029 12:46:33.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:33.491" level="INFO">${ACCURACY} = {'diff': [0.0003356800000000014, 0.0003443890000000005, 0.00033784799999999823, 0.0003427080000000006, 0.00033959699999999704, 0.0003408049999999996, 0.00034176400000000134, 0.00033894400000000074, 0....</msg>
<status status="PASS" starttime="20201029 12:46:33.488" endtime="20201029 12:46:33.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.496" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:46:33.495" endtime="20201029 12:46:33.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.498" level="INFO">VALUE: [0.0003356800000000014, 0.0003443890000000005, 0.00033784799999999823, 0.0003427080000000006, 0.00033959699999999704, 0.0003408049999999996, 0.00034176400000000134, 0.00033894400000000074, 0.0003384579999999998, 0.0003388749999999989, 0.0003436529999999993, 0.0003432499999999998, 0.00034130599999999955, 0.00034350000000000006, 0.0003396250000000031, 0.0003425560000000008, 0.00033958300000000094, 0.00033938899999999897, 0.0003442919999999995, 0.0003401939999999985, 0.0003398339999999972, 0.00034350000000000006, 0.0003436120000000001, 0.00034345800000000135, 0.0003420140000000016, 0.00034187500000000537, 0.0003429030000000055, 0.00034441699999999964, 0.00033915300000000176, 0.00034391699999999914, 0.0003384300000000007, 0.0003390559999999973, 0.0003379449999999992, 0.00033898599999999945, 0.0003383060000000035, 0.00034355500000000233, 0.0003438059999999951, 0.0003405689999999989, 0.00034390299999999957, 0.00034384699999999435, 0.00034313899999999925, 0.00034130599999999955, 0.0003388199999999966, 0.000342000000000002, 0.00034374999999999684, 0.00034151399999999416, 0.00034255500000000133, 0.000340291999999999, 0.00034120800000000256, 0.000342679999999998]</msg>
<status status="PASS" starttime="20201029 12:46:33.497" endtime="20201029 12:46:33.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.492" endtime="20201029 12:46:33.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:33.503" endtime="20201029 12:46:33.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.502" endtime="20201029 12:46:33.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.500" endtime="20201029 12:46:33.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.121" endtime="20201029 12:46:33.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.121" endtime="20201029 12:46:33.524"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.533" endtime="20201029 12:46:33.572"></status>
</kw>
<msg timestamp="20201029 12:46:33.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.531" endtime="20201029 12:46:33.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.574" endtime="20201029 12:46:33.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.576" endtime="20201029 12:46:33.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.529" endtime="20201029 12:46:33.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.527" endtime="20201029 12:46:33.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.585" endtime="20201029 12:46:33.871"></status>
</kw>
<msg timestamp="20201029 12:46:33.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025702861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026056917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.584" endtime="20201029 12:46:33.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025702861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026056917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.875" endtime="20201029 12:46:33.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.883" endtime="20201029 12:46:33.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.581" endtime="20201029 12:46:33.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.579" endtime="20201029 12:46:33.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:33.892" level="INFO">${RESULT} = [{'diff': 0.00035405599999999843}, {'diff': 0.0003435700000000014}, {'diff': 0.0003419580000000033}, {'diff': 0.0003421249999999987}, {'diff': 0.0003415140000000011}, {'diff': 0.0003438189999999987}, ...</msg>
<status status="PASS" starttime="20201029 12:46:33.887" endtime="20201029 12:46:33.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:33.898" level="INFO">${ACCURACY} = {'diff': [0.00035405599999999843, 0.0003435700000000014, 0.0003419580000000033, 0.0003421249999999987, 0.0003415140000000011, 0.0003438189999999987, 0.00034004099999999926, 0.00034249999999999906, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:33.894" endtime="20201029 12:46:33.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.905" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:46:33.903" endtime="20201029 12:46:33.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.908" level="INFO">VALUE: [0.00035405599999999843, 0.0003435700000000014, 0.0003419580000000033, 0.0003421249999999987, 0.0003415140000000011, 0.0003438189999999987, 0.00034004099999999926, 0.00034249999999999906, 0.0003411939999999995, 0.0003409439999999993, 0.00033801400000000106, 0.0003439999999999971, 0.0003407360000000012, 0.00034374999999999684, 0.00034118099999999943, 0.00034445800000000235, 0.0003425130000000026, 0.0003429579999999974, 0.00034190299999999757, 0.0003413329999999992, 0.0003398329999999977, 0.0003387499999999988, 0.0003441380000000008, 0.00033919500000000047, 0.0003406390000000037, 0.00033932000000000406, 0.0003434999999999966, 0.0003429859999999965, 0.0003433059999999946, 0.0003441659999999999, 0.0003419580000000033, 0.00033840200000000153, 0.00034281900000000115, 0.0003431659999999989, 0.0003400689999999984, 0.0003393889999999955, 0.00034268099999999746, 0.0003420560000000003, 0.0003425700000000004, 0.00033816700000000033, 0.00033922200000000013, 0.0003402360000000007, 0.0003445270000000042, 0.0003445000000000045, 0.00034005499999999883, 0.000338790999999998, 0.00033909800000000295, 0.0003404580000000018, 0.0003431249999999997, 0.00034091599999999667]</msg>
<status status="PASS" starttime="20201029 12:46:33.906" endtime="20201029 12:46:33.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.899" endtime="20201029 12:46:33.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:33.917" endtime="20201029 12:46:33.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.915" endtime="20201029 12:46:33.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.913" endtime="20201029 12:46:33.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.525" endtime="20201029 12:46:33.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.524" endtime="20201029 12:46:33.937"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.947" endtime="20201029 12:46:33.985"></status>
</kw>
<msg timestamp="20201029 12:46:33.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.945" endtime="20201029 12:46:33.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.986" endtime="20201029 12:46:33.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.989" endtime="20201029 12:46:33.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.942" endtime="20201029 12:46:33.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.940" endtime="20201029 12:46:33.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.998" endtime="20201029 12:46:34.285"></status>
</kw>
<msg timestamp="20201029 12:46:34.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024350708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02469075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:33.997" endtime="20201029 12:46:34.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024350708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02469075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:34.289" endtime="20201029 12:46:34.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.297" endtime="20201029 12:46:34.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.994" endtime="20201029 12:46:34.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.992" endtime="20201029 12:46:34.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:34.304" level="INFO">${RESULT} = [{'diff': 0.0003400420000000022}, {'diff': 0.0003389580000000003}, {'diff': 0.00034036099999999736}, {'diff': 0.0003433330000000012}, {'diff': 0.0003434860000000005}, {'diff': 0.000342097999999999}, {...</msg>
<status status="PASS" starttime="20201029 12:46:34.301" endtime="20201029 12:46:34.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:34.309" level="INFO">${ACCURACY} = {'diff': [0.0003400420000000022, 0.0003389580000000003, 0.00034036099999999736, 0.0003433330000000012, 0.0003434860000000005, 0.000342097999999999, 0.00034249999999999906, 0.00033890299999999804, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:34.305" endtime="20201029 12:46:34.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.314" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:46:34.313" endtime="20201029 12:46:34.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.316" level="INFO">VALUE: [0.0003400420000000022, 0.0003389580000000003, 0.00034036099999999736, 0.0003433330000000012, 0.0003434860000000005, 0.000342097999999999, 0.00034249999999999906, 0.00033890299999999804, 0.000338790999999998, 0.00034368100000000193, 0.0003423469999999998, 0.00034090300000000004, 0.00034158399999999894, 0.00034237499999999893, 0.0003443049999999996, 0.00034369499999999803, 0.0003425700000000004, 0.0003396390000000027, 0.0003392079999999971, 0.00033922300000000655, 0.0003433050000000021, 0.00034248600000000295, 0.00034340299999999907, 0.00034248600000000295, 0.0003404019999999966, 0.000342097999999999, 0.0003387499999999988, 0.0003438200000000016, 0.0003381249999999947, 0.00033884700000000323, 0.00034226400000000184, 0.0003420699999999999, 0.00033927699999999894, 0.00034451399999999716, 0.00034252800000000166, 0.00034190299999999757, 0.00034454200000000323, 0.0003394999999999995, 0.0003399449999999943, 0.0003437780000000029, 0.000339597000000004, 0.000339194000000001, 0.00034047300000000086, 0.00034419500000000547, 0.00034048600000000095, 0.00034020800000000156, 0.0003383610000000023, 0.0003416669999999969, 0.0003422230000000026, 0.0003416109999999986]</msg>
<status status="PASS" starttime="20201029 12:46:34.315" endtime="20201029 12:46:34.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.310" endtime="20201029 12:46:34.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:34.321" endtime="20201029 12:46:34.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.320" endtime="20201029 12:46:34.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.319" endtime="20201029 12:46:34.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.938" endtime="20201029 12:46:34.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.938" endtime="20201029 12:46:34.342"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.351" endtime="20201029 12:46:34.385"></status>
</kw>
<msg timestamp="20201029 12:46:34.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.350" endtime="20201029 12:46:34.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.387" endtime="20201029 12:46:34.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.390" endtime="20201029 12:46:34.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.347" endtime="20201029 12:46:34.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.345" endtime="20201029 12:46:34.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.399" endtime="20201029 12:46:34.705"></status>
</kw>
<msg timestamp="20201029 12:46:34.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021474028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021804208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.397" endtime="20201029 12:46:34.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021474028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021804208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.709" endtime="20201029 12:46:34.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.717" endtime="20201029 12:46:34.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.395" endtime="20201029 12:46:34.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.393" endtime="20201029 12:46:34.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:34.724" level="INFO">${RESULT} = [{'diff': 0.00033017999999999936}, {'diff': 0.0003399580000000013}, {'diff': 0.00033984700000000076}, {'diff': 0.00033944400000000124}, {'diff': 0.00033972199999999717}, {'diff': 0.0003425420000000012...</msg>
<status status="PASS" starttime="20201029 12:46:34.721" endtime="20201029 12:46:34.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:34.729" level="INFO">${ACCURACY} = {'diff': [0.00033017999999999936, 0.0003399580000000013, 0.00033984700000000076, 0.00033944400000000124, 0.00033972199999999717, 0.00034254200000000123, 0.00033783300000000266, 0.00034131899999999965,...</msg>
<status status="PASS" starttime="20201029 12:46:34.725" endtime="20201029 12:46:34.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.734" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:46:34.733" endtime="20201029 12:46:34.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.736" level="INFO">VALUE: [0.00033017999999999936, 0.0003399580000000013, 0.00033984700000000076, 0.00033944400000000124, 0.00033972199999999717, 0.00034254200000000123, 0.00033783300000000266, 0.00034131899999999965, 0.0003425000000000025, 0.000339306000000001, 0.0003411110000000016, 0.0003407230000000011, 0.00034259700000000004, 0.00033797299999999836, 0.00033833399999999916, 0.000339097, 0.0003423469999999998, 0.0003416530000000008, 0.0003435700000000014, 0.0003435409999999993, 0.0003417920000000005, 0.0003382359999999987, 0.0003433330000000012, 0.00034012500000000015, 0.00034240299999999807, 0.000342679999999998, 0.00034058399999999794, 0.0003401810000000019, 0.000342888999999999, 0.000341403000000004, 0.0003412910000000005, 0.00034186099999999886, 0.00034254100000000176, 0.0003435690000000019, 0.00034245899999999635, 0.00033980599999999805, 0.00033992999999999524, 0.0003408610000000048, 0.0003420140000000016, 0.0003384999999999985, 0.0003413469999999988, 0.00034186099999999886, 0.00034120800000000256, 0.00034268099999999746, 0.00033795800000000625, 0.00033797299999999836, 0.0003421669999999974, 0.0003399590000000008, 0.0003443330000000022, 0.0003433330000000012]</msg>
<status status="PASS" starttime="20201029 12:46:34.735" endtime="20201029 12:46:34.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.730" endtime="20201029 12:46:34.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:34.742" endtime="20201029 12:46:34.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.741" endtime="20201029 12:46:34.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.739" endtime="20201029 12:46:34.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.343" endtime="20201029 12:46:34.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.343" endtime="20201029 12:46:34.763"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.772" endtime="20201029 12:46:34.808"></status>
</kw>
<msg timestamp="20201029 12:46:34.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.771" endtime="20201029 12:46:34.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.810" endtime="20201029 12:46:34.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.813" endtime="20201029 12:46:34.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.768" endtime="20201029 12:46:34.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.766" endtime="20201029 12:46:34.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.822" endtime="20201029 12:46:35.111"></status>
</kw>
<msg timestamp="20201029 12:46:35.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022532153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022865278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.820" endtime="20201029 12:46:35.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022532153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022865278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.117" endtime="20201029 12:46:35.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.126" endtime="20201029 12:46:35.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.818" endtime="20201029 12:46:35.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.816" endtime="20201029 12:46:35.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.133" level="INFO">${RESULT} = [{'diff': 0.0003331250000000001}, {'diff': 0.00034381999999999815}, {'diff': 0.0003410560000000028}, {'diff': 0.00034355499999999886}, {'diff': 0.0003410689999999994}, {'diff': 0.0003384300000000007},...</msg>
<status status="PASS" starttime="20201029 12:46:35.130" endtime="20201029 12:46:35.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:35.137" level="INFO">${ACCURACY} = {'diff': [0.0003331250000000001, 0.00034381999999999815, 0.0003410560000000028, 0.00034355499999999886, 0.0003410689999999994, 0.0003384300000000007, 0.000342292000000001, 0.0003438470000000013, 0.000...</msg>
<status status="PASS" starttime="20201029 12:46:35.134" endtime="20201029 12:46:35.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.142" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:46:35.141" endtime="20201029 12:46:35.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.144" level="INFO">VALUE: [0.0003331250000000001, 0.00034381999999999815, 0.0003410560000000028, 0.00034355499999999886, 0.0003410689999999994, 0.0003384300000000007, 0.000342292000000001, 0.0003438470000000013, 0.0003436669999999989, 0.0003419440000000003, 0.00034073599999999774, 0.00033794399999999974, 0.0003409019999999971, 0.00034395800000000185, 0.0003401389999999997, 0.0003396389999999992, 0.00034148600000000195, 0.00033852800000000113, 0.00033995799999999785, 0.00034058399999999794, 0.00034262500000000265, 0.0003412079999999991, 0.00034231900000000065, 0.00034086100000000133, 0.00034143100000000315, 0.0003444309999999992, 0.0003409019999999971, 0.00034336100000000036, 0.0003433470000000008, 0.000341679999999997, 0.00034330600000000155, 0.0003404580000000018, 0.00034142999999999674, 0.00034288900000000594, 0.0003385139999999981, 0.0003392229999999996, 0.0003416249999999982, 0.0003385840000000029, 0.0003409590000000018, 0.00033988900000000294, 0.0003384579999999998, 0.00034220800000000356, 0.00033865300000000126, 0.0003436669999999989, 0.0003400139999999996, 0.00033952799999999866, 0.0003437089999999976, 0.00033977699999999944, 0.00033865300000000126, 0.00034208299999999997]</msg>
<status status="PASS" starttime="20201029 12:46:35.143" endtime="20201029 12:46:35.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.138" endtime="20201029 12:46:35.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:35.151" endtime="20201029 12:46:35.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.149" endtime="20201029 12:46:35.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.148" endtime="20201029 12:46:35.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.764" endtime="20201029 12:46:35.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.764" endtime="20201029 12:46:35.171"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.180" endtime="20201029 12:46:35.217"></status>
</kw>
<msg timestamp="20201029 12:46:35.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.179" endtime="20201029 12:46:35.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.218" endtime="20201029 12:46:35.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.221" endtime="20201029 12:46:35.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.176" endtime="20201029 12:46:35.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.174" endtime="20201029 12:46:35.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.230" endtime="20201029 12:46:35.517"></status>
</kw>
<msg timestamp="20201029 12:46:35.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021375319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021726361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.229" endtime="20201029 12:46:35.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021375319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021726361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.521" endtime="20201029 12:46:35.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.529" endtime="20201029 12:46:35.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.226" endtime="20201029 12:46:35.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.224" endtime="20201029 12:46:35.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.536" level="INFO">${RESULT} = [{'diff': 0.0003510419999999993}, {'diff': 0.00033972200000000063}, {'diff': 0.0003418469999999993}, {'diff': 0.00034084800000000123}, {'diff': 0.00034291600000000214}, {'diff': 0.0003380970000000025}...</msg>
<status status="PASS" starttime="20201029 12:46:35.533" endtime="20201029 12:46:35.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:35.541" level="INFO">${ACCURACY} = {'diff': [0.0003510419999999993, 0.00033972200000000063, 0.0003418469999999993, 0.00034084800000000123, 0.00034291600000000214, 0.0003380970000000025, 0.00034019500000000147, 0.0003397360000000002, 0....</msg>
<status status="PASS" starttime="20201029 12:46:35.537" endtime="20201029 12:46:35.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.546" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:46:35.545" endtime="20201029 12:46:35.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.548" level="INFO">VALUE: [0.0003510419999999993, 0.00033972200000000063, 0.0003418469999999993, 0.00034084800000000123, 0.00034291600000000214, 0.0003380970000000025, 0.00034019500000000147, 0.0003397360000000002, 0.00034340299999999907, 0.00034272200000000017, 0.00033940299999999854, 0.00034277799999999845, 0.0003443890000000005, 0.0003384170000000006, 0.0003431659999999989, 0.0003380420000000002, 0.0003379449999999992, 0.0003399309999999982, 0.0003416390000000012, 0.00033802800000000063, 0.0003388749999999989, 0.0003422499999999988, 0.0003434170000000021, 0.0003427639999999989, 0.0003445410000000003, 0.0003419170000000006, 0.00034441600000000017, 0.0003403330000000017, 0.00034055600000000574, 0.0003400689999999984, 0.00033866700000000083, 0.0003413199999999991, 0.00034252800000000166, 0.0003405699999999984, 0.00033872199999999963, 0.0003421529999999978, 0.000339790999999999, 0.000340597000000005, 0.0003393060000000045, 0.0003418050000000006, 0.00034033400000000463, 0.0003392359999999997, 0.00033801400000000453, 0.00034180600000000005, 0.0003421810000000039, 0.0003380139999999976, 0.0003392369999999992, 0.000342888999999999, 0.0003414449999999958, 0.0003388199999999966]</msg>
<status status="PASS" starttime="20201029 12:46:35.547" endtime="20201029 12:46:35.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.542" endtime="20201029 12:46:35.550"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:35.553" endtime="20201029 12:46:35.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.552" endtime="20201029 12:46:35.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.551" endtime="20201029 12:46:35.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.172" endtime="20201029 12:46:35.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.172" endtime="20201029 12:46:35.574"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.583" endtime="20201029 12:46:35.622"></status>
</kw>
<msg timestamp="20201029 12:46:35.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.582" endtime="20201029 12:46:35.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.623" endtime="20201029 12:46:35.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.626" endtime="20201029 12:46:35.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.579" endtime="20201029 12:46:35.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.577" endtime="20201029 12:46:35.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.635" endtime="20201029 12:46:35.923"></status>
</kw>
<msg timestamp="20201029 12:46:35.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025314972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025667153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.634" endtime="20201029 12:46:35.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025314972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025667153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.927" endtime="20201029 12:46:35.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.935" endtime="20201029 12:46:35.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.631" endtime="20201029 12:46:35.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.629" endtime="20201029 12:46:35.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.942" level="INFO">${RESULT} = [{'diff': 0.000352181}, {'diff': 0.00034268000000000146}, {'diff': 0.00034038899999999997}, {'diff': 0.00034191599999999767}, {'diff': 0.0003437639999999999}, {'diff': 0.00034350000000000006}, {'diff'...</msg>
<status status="PASS" starttime="20201029 12:46:35.939" endtime="20201029 12:46:35.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:35.947" level="INFO">${ACCURACY} = {'diff': [0.000352181, 0.00034268000000000146, 0.00034038899999999997, 0.00034191599999999767, 0.0003437639999999999, 0.00034350000000000006, 0.00034208299999999997, 0.00034097300000000136, 0.00033797...</msg>
<status status="PASS" starttime="20201029 12:46:35.943" endtime="20201029 12:46:35.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.951" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:46:35.950" endtime="20201029 12:46:35.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.954" level="INFO">VALUE: [0.000352181, 0.00034268000000000146, 0.00034038899999999997, 0.00034191599999999767, 0.0003437639999999999, 0.00034350000000000006, 0.00034208299999999997, 0.00034097300000000136, 0.00033797300000000183, 0.00034327700000000294, 0.0003380000000000015, 0.00034055499999999933, 0.00034066699999999936, 0.00034090300000000004, 0.0003404720000000014, 0.00034158299999999947, 0.000341194999999999, 0.00033876399999999834, 0.0003398469999999973, 0.0003407779999999999, 0.00033854199999999723, 0.00034181900000000015, 0.0003439859999999975, 0.00033801400000000453, 0.0003438609999999939, 0.00033869499999999997, 0.0003412500000000013, 0.0003440419999999958, 0.00034368099999999846, 0.00033915300000000176, 0.0003424720000000034, 0.00034009699999999754, 0.00033884700000000323, 0.00033820799999999956, 0.0003386520000000018, 0.0003445690000000029, 0.0003423339999999997, 0.0003405270000000002, 0.0003420560000000003, 0.000340791, 0.000339097999999996, 0.0003386529999999943, 0.0003383190000000036, 0.0003429170000000051, 0.0003430700000000009, 0.0003405689999999989, 0.00034040299999999607, 0.00034430600000000255, 0.00034108299999999897, 0.00033952799999999866]</msg>
<status status="PASS" starttime="20201029 12:46:35.952" endtime="20201029 12:46:35.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.947" endtime="20201029 12:46:35.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:35.959" endtime="20201029 12:46:35.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.957" endtime="20201029 12:46:35.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.956" endtime="20201029 12:46:35.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.575" endtime="20201029 12:46:35.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.575" endtime="20201029 12:46:35.980"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.989" endtime="20201029 12:46:36.023"></status>
</kw>
<msg timestamp="20201029 12:46:36.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.987" endtime="20201029 12:46:36.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.025" endtime="20201029 12:46:36.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.027" endtime="20201029 12:46:36.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.985" endtime="20201029 12:46:36.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.983" endtime="20201029 12:46:36.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.037" endtime="20201029 12:46:36.324"></status>
</kw>
<msg timestamp="20201029 12:46:36.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021757556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022114556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.035" endtime="20201029 12:46:36.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021757556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022114556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.328" endtime="20201029 12:46:36.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.336" endtime="20201029 12:46:36.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.033" endtime="20201029 12:46:36.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.031" endtime="20201029 12:46:36.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:36.343" level="INFO">${RESULT} = [{'diff': 0.0003569999999999997}, {'diff': 0.0003440690000000024}, {'diff': 0.0003410140000000006}, {'diff': 0.00033912499999999915}, {'diff': 0.00033936099999999983}, {'diff': 0.0003416530000000008},...</msg>
<status status="PASS" starttime="20201029 12:46:36.339" endtime="20201029 12:46:36.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:36.347" level="INFO">${ACCURACY} = {'diff': [0.0003569999999999997, 0.0003440690000000024, 0.0003410140000000006, 0.00033912499999999915, 0.00033936099999999983, 0.0003416530000000008, 0.00034022299999999714, 0.00034109699999999854, 0....</msg>
<status status="PASS" starttime="20201029 12:46:36.344" endtime="20201029 12:46:36.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.351" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:46:36.350" endtime="20201029 12:46:36.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.354" level="INFO">VALUE: [0.0003569999999999997, 0.0003440690000000024, 0.0003410140000000006, 0.00033912499999999915, 0.00033936099999999983, 0.0003416530000000008, 0.00034022299999999714, 0.00034109699999999854, 0.0003404450000000017, 0.00033834799999999873, 0.0003428200000000006, 0.000341000000000001, 0.000343694000000002, 0.0003427639999999989, 0.0003413329999999992, 0.0003436529999999993, 0.00034441699999999964, 0.00034308300000000097, 0.0003424310000000007, 0.00034219399999999706, 0.000342000000000002, 0.0003415559999999998, 0.0003426530000000018, 0.00033801400000000106, 0.00034455599999999934, 0.0003409720000000019, 0.0003384579999999998, 0.0003402770000000069, 0.000339403000000002, 0.0003416390000000047, 0.0003425690000000009, 0.000343889, 0.0003384579999999998, 0.0003426800000000049, 0.0003404170000000026, 0.00034088900000000394, 0.0003413050000000001, 0.0003418329999999997, 0.0003397499999999998, 0.00034, 0.0003420549999999939, 0.0003422360000000027, 0.000341612000000005, 0.0003433200000000011, 0.0003384160000000011, 0.0003401390000000032, 0.00033872199999999963, 0.00034190299999999757, 0.0003423889999999985, 0.00034005499999999883]</msg>
<status status="PASS" starttime="20201029 12:46:36.353" endtime="20201029 12:46:36.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.348" endtime="20201029 12:46:36.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:36.360" endtime="20201029 12:46:36.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.358" endtime="20201029 12:46:36.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.357" endtime="20201029 12:46:36.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.981" endtime="20201029 12:46:36.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.980" endtime="20201029 12:46:36.381"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.390" endtime="20201029 12:46:36.426"></status>
</kw>
<msg timestamp="20201029 12:46:36.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.388" endtime="20201029 12:46:36.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.428" endtime="20201029 12:46:36.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.430" endtime="20201029 12:46:36.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.386" endtime="20201029 12:46:36.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.383" endtime="20201029 12:46:36.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.440" endtime="20201029 12:46:36.725"></status>
</kw>
<msg timestamp="20201029 12:46:36.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023009736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.438" endtime="20201029 12:46:36.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023009736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.730" endtime="20201029 12:46:36.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.738" endtime="20201029 12:46:36.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.436" endtime="20201029 12:46:36.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.434" endtime="20201029 12:46:36.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:36.745" level="INFO">${RESULT} = [{'diff': 0.0003434720000000009}, {'diff': 0.0003415140000000011}, {'diff': 0.00033822199999999913}, {'diff': 0.00034136099999999836}, {'diff': 0.00034159699999999904}, {'diff': 0.00033961199999999955...</msg>
<status status="PASS" starttime="20201029 12:46:36.741" endtime="20201029 12:46:36.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:36.750" level="INFO">${ACCURACY} = {'diff': [0.0003434720000000009, 0.0003415140000000011, 0.00033822199999999913, 0.00034136099999999836, 0.00034159699999999904, 0.00033961199999999955, 0.0003434309999999982, 0.00034009699999999754, 0...</msg>
<status status="PASS" starttime="20201029 12:46:36.746" endtime="20201029 12:46:36.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.755" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:46:36.753" endtime="20201029 12:46:36.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.757" level="INFO">VALUE: [0.0003434720000000009, 0.0003415140000000011, 0.00033822199999999913, 0.00034136099999999836, 0.00034159699999999904, 0.00033961199999999955, 0.0003434309999999982, 0.00034009699999999754, 0.0003423880000000025, 0.00034380600000000205, 0.0003418329999999997, 0.0003390689999999974, 0.0003404299999999992, 0.0003418339999999992, 0.0003421249999999987, 0.0003420140000000016, 0.00033856900000000037, 0.0003416110000000021, 0.00033826399999999784, 0.0003409170000000031, 0.0003403049999999991, 0.0003388749999999989, 0.0003437219999999977, 0.0003424729999999994, 0.0003386249999999952, 0.0003428059999999941, 0.00034437500000000093, 0.0003403049999999991, 0.0003403469999999978, 0.00034130599999999955, 0.0003406800000000029, 0.00034231900000000065, 0.00033970900000000054, 0.00034263899999999875, 0.0003441669999999994, 0.00034004199999999873, 0.0003398339999999972, 0.0003401800000000024, 0.0003408329999999987, 0.0003419449999999963, 0.00034348600000000395, 0.0003443059999999956, 0.0003394720000000004, 0.0003406249999999972, 0.0003429309999999977, 0.00034237499999999893, 0.00034341699999999864, 0.00033822199999999913, 0.0003397779999999989, 0.00034340299999999907]</msg>
<status status="PASS" starttime="20201029 12:46:36.756" endtime="20201029 12:46:36.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.751" endtime="20201029 12:46:36.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:36.763" endtime="20201029 12:46:36.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.761" endtime="20201029 12:46:36.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.760" endtime="20201029 12:46:36.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.382" endtime="20201029 12:46:36.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.381" endtime="20201029 12:46:36.784"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.794" endtime="20201029 12:46:36.833"></status>
</kw>
<msg timestamp="20201029 12:46:36.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.792" endtime="20201029 12:46:36.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.835" endtime="20201029 12:46:36.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.837" endtime="20201029 12:46:36.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.789" endtime="20201029 12:46:36.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.787" endtime="20201029 12:46:36.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.847" endtime="20201029 12:46:37.134"></status>
</kw>
<msg timestamp="20201029 12:46:37.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026341653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026672125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.845" endtime="20201029 12:46:37.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026341653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026672125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.138" endtime="20201029 12:46:37.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.147" endtime="20201029 12:46:37.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.842" endtime="20201029 12:46:37.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.840" endtime="20201029 12:46:37.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.153" level="INFO">${RESULT} = [{'diff': 0.0003304720000000018}, {'diff': 0.00034204100000000126}, {'diff': 0.00034104199999999973}, {'diff': 0.00033898599999999945}, {'diff': 0.00034148600000000195}, {'diff': 0.0003383050000000005...</msg>
<status status="PASS" starttime="20201029 12:46:37.150" endtime="20201029 12:46:37.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:37.158" level="INFO">${ACCURACY} = {'diff': [0.0003304720000000018, 0.00034204100000000126, 0.00034104199999999973, 0.00033898599999999945, 0.00034148600000000195, 0.00033830500000000055, 0.0003412079999999991, 0.00034104199999999973, ...</msg>
<status status="PASS" starttime="20201029 12:46:37.154" endtime="20201029 12:46:37.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.162" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:46:37.161" endtime="20201029 12:46:37.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.165" level="INFO">VALUE: [0.0003304720000000018, 0.00034204100000000126, 0.00034104199999999973, 0.00033898599999999945, 0.00034148600000000195, 0.00033830500000000055, 0.0003412079999999991, 0.00034104199999999973, 0.00034322300000000014, 0.0003413469999999988, 0.00034031899999999865, 0.00034299999999999956, 0.00034113899999999725, 0.00034108300000000244, 0.00034292999999999824, 0.0003404720000000014, 0.000343889, 0.0003413050000000001, 0.00033905499999999783, 0.0003392229999999996, 0.00033982000000000456, 0.00034113899999999725, 0.00033879100000000495, 0.0003413469999999988, 0.0003427219999999967, 0.0003420560000000003, 0.0003429579999999974, 0.0003396940000000015, 0.00034190299999999757, 0.0003431249999999997, 0.0003442500000000043, 0.00033959699999999704, 0.0003410140000000006, 0.0003388480000000027, 0.00033958399999999694, 0.0003410689999999994, 0.00034397199999999795, 0.0003417360000000022, 0.00033782000000000256, 0.0003427219999999967, 0.0003439439999999988, 0.00034436100000000136, 0.00034158299999999947, 0.0003397360000000002, 0.00034086099999999786, 0.0003443330000000022, 0.0003440409999999963, 0.0003389720000000068, 0.0003434579999999979, 0.000339305000000005]</msg>
<status status="PASS" starttime="20201029 12:46:37.163" endtime="20201029 12:46:37.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.158" endtime="20201029 12:46:37.166"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:37.170" endtime="20201029 12:46:37.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.168" endtime="20201029 12:46:37.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.167" endtime="20201029 12:46:37.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.785" endtime="20201029 12:46:37.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.785" endtime="20201029 12:46:37.191"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.200" endtime="20201029 12:46:37.244"></status>
</kw>
<msg timestamp="20201029 12:46:37.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.198" endtime="20201029 12:46:37.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.246" endtime="20201029 12:46:37.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.249" endtime="20201029 12:46:37.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.196" endtime="20201029 12:46:37.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.193" endtime="20201029 12:46:37.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.258" endtime="20201029 12:46:37.544"></status>
</kw>
<msg timestamp="20201029 12:46:37.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026538764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026869681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.256" endtime="20201029 12:46:37.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026538764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026869681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.548" endtime="20201029 12:46:37.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.556" endtime="20201029 12:46:37.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.254" endtime="20201029 12:46:37.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.252" endtime="20201029 12:46:37.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.563" level="INFO">${RESULT} = [{'diff': 0.000330917}, {'diff': 0.0003382360000000022}, {'diff': 0.0003399580000000013}, {'diff': 0.00033798599999999845}, {'diff': 0.0003409719999999984}, {'diff': 0.00034140300000000054}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 12:46:37.560" endtime="20201029 12:46:37.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:37.567" level="INFO">${ACCURACY} = {'diff': [0.000330917, 0.0003382360000000022, 0.0003399580000000013, 0.00033798599999999845, 0.0003409719999999984, 0.00034140300000000054, 0.0003381520000000013, 0.000341000000000001, 0.0003429159999...</msg>
<status status="PASS" starttime="20201029 12:46:37.564" endtime="20201029 12:46:37.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.572" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:46:37.571" endtime="20201029 12:46:37.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.574" level="INFO">VALUE: [0.000330917, 0.0003382360000000022, 0.0003399580000000013, 0.00033798599999999845, 0.0003409719999999984, 0.00034140300000000054, 0.0003381520000000013, 0.000341000000000001, 0.00034291599999999867, 0.00034447199999999845, 0.00034137499999999793, 0.0003411110000000016, 0.00034355499999999886, 0.00034038900000000344, 0.0003391250000000026, 0.0003439439999999988, 0.0003401390000000032, 0.00034193100000000365, 0.00033880599999999705, 0.0003380139999999976, 0.0003379300000000002, 0.000338194, 0.00033902799999999816, 0.0003416109999999986, 0.00034165300000000426, 0.0003389170000000011, 0.0003394449999999938, 0.00033991699999999514, 0.00033891599999999467, 0.0003411109999999981, 0.00034236199999999883, 0.00034254200000000123, 0.00034015199999999635, 0.0003412780000000004, 0.0003411669999999964, 0.00034468, 0.0003442360000000047, 0.00034413900000000025, 0.0003434449999999978, 0.0003385830000000034, 0.0003422500000000023, 0.0003444579999999989, 0.00033898599999999945, 0.00034087499999999743, 0.0003443470000000018, 0.00034472200000000564, 0.00033855600000000374, 0.00033915300000000176, 0.0003414300000000037, 0.0003420690000000004]</msg>
<status status="PASS" starttime="20201029 12:46:37.573" endtime="20201029 12:46:37.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.568" endtime="20201029 12:46:37.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:37.580" endtime="20201029 12:46:37.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.579" endtime="20201029 12:46:37.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.578" endtime="20201029 12:46:37.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.192" endtime="20201029 12:46:37.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.191" endtime="20201029 12:46:37.601"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.610" endtime="20201029 12:46:37.646"></status>
</kw>
<msg timestamp="20201029 12:46:37.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.609" endtime="20201029 12:46:37.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.648" endtime="20201029 12:46:37.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.650" endtime="20201029 12:46:37.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.606" endtime="20201029 12:46:37.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.604" endtime="20201029 12:46:37.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.660" endtime="20201029 12:46:37.948"></status>
</kw>
<msg timestamp="20201029 12:46:37.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023057889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023415931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.658" endtime="20201029 12:46:37.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023057889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023415931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.952" endtime="20201029 12:46:37.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.960" endtime="20201029 12:46:37.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.656" endtime="20201029 12:46:37.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.654" endtime="20201029 12:46:37.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.967" level="INFO">${RESULT} = [{'diff': 0.0003580419999999994}, {'diff': 0.00034}, {'diff': 0.00033863799999999875}, {'diff': 0.00033969500000000097}, {'diff': 0.0003410980000000015}, {'diff': 0.00034272299999999964}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:37.964" endtime="20201029 12:46:37.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:37.973" level="INFO">${ACCURACY} = {'diff': [0.0003580419999999994, 0.00034, 0.00033863799999999875, 0.00033969500000000097, 0.0003410980000000015, 0.00034272299999999964, 0.0003383049999999971, 0.000337999999999998, 0.0003430269999999...</msg>
<status status="PASS" starttime="20201029 12:46:37.968" endtime="20201029 12:46:37.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.977" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:46:37.976" endtime="20201029 12:46:37.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.980" level="INFO">VALUE: [0.0003580419999999994, 0.00034, 0.00033863799999999875, 0.00033969500000000097, 0.0003410980000000015, 0.00034272299999999964, 0.0003383049999999971, 0.000337999999999998, 0.0003430269999999992, 0.0003441530000000033, 0.00034308400000000044, 0.00033830500000000055, 0.00034244500000000025, 0.0003390979999999995, 0.0003415000000000015, 0.0003427499999999993, 0.0003432499999999998, 0.000344276999999997, 0.00034190300000000104, 0.00034137499999999793, 0.00034220900000000304, 0.00033802800000000063, 0.000344485999999998, 0.00034018099999999496, 0.00034422200000000513, 0.00033855500000000427, 0.00034380499999999564, 0.0003395559999999978, 0.00034291699999999814, 0.0003440969999999946, 0.0003385139999999981, 0.00034373599999999727, 0.000341403000000004, 0.00034013899999999625, 0.00034384699999999435, 0.00034381900000000215, 0.00033893100000000065, 0.00034381900000000215, 0.0003403889999999965, 0.00033854199999999723, 0.0003426659999999984, 0.0003409030000000035, 0.0003413889999999975, 0.00034220900000000304, 0.0003420560000000003, 0.00034137500000000487, 0.00034191599999999767, 0.00033927800000000535, 0.00034187499999999843, 0.0003425690000000009]</msg>
<status status="PASS" starttime="20201029 12:46:37.978" endtime="20201029 12:46:37.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.973" endtime="20201029 12:46:37.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:37.985" endtime="20201029 12:46:38.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.983" endtime="20201029 12:46:38.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.982" endtime="20201029 12:46:38.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.602" endtime="20201029 12:46:38.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.602" endtime="20201029 12:46:38.006"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.015" endtime="20201029 12:46:38.053"></status>
</kw>
<msg timestamp="20201029 12:46:38.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.014" endtime="20201029 12:46:38.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.054" endtime="20201029 12:46:38.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.057" endtime="20201029 12:46:38.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.011" endtime="20201029 12:46:38.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.008" endtime="20201029 12:46:38.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.067" endtime="20201029 12:46:38.353"></status>
</kw>
<msg timestamp="20201029 12:46:38.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025451306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025811097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.065" endtime="20201029 12:46:38.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025451306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025811097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.358" endtime="20201029 12:46:38.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.366" endtime="20201029 12:46:38.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.062" endtime="20201029 12:46:38.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.060" endtime="20201029 12:46:38.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:38.373" level="INFO">${RESULT} = [{'diff': 0.00035979100000000167}, {'diff': 0.00034408400000000144}, {'diff': 0.00034356899999999843}, {'diff': 0.0003419589999999993}, {'diff': 0.0003437219999999977}, {'diff': 0.0003409590000000018}...</msg>
<status status="PASS" starttime="20201029 12:46:38.369" endtime="20201029 12:46:38.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:38.377" level="INFO">${ACCURACY} = {'diff': [0.00035979100000000167, 0.00034408400000000144, 0.00034356899999999843, 0.0003419589999999993, 0.0003437219999999977, 0.0003409590000000018, 0.00034409699999999807, 0.00033872199999999963, 0...</msg>
<status status="PASS" starttime="20201029 12:46:38.374" endtime="20201029 12:46:38.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.382" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:46:38.380" endtime="20201029 12:46:38.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.384" level="INFO">VALUE: [0.00035979100000000167, 0.00034408400000000144, 0.00034356899999999843, 0.0003419589999999993, 0.0003437219999999977, 0.0003409590000000018, 0.00034409699999999807, 0.00033872199999999963, 0.00033988899999999947, 0.00033834699999999926, 0.00034073599999999774, 0.0003421249999999987, 0.0003391389999999987, 0.0003427219999999967, 0.0003426669999999979, 0.0003443470000000018, 0.00034086099999999786, 0.0003407779999999999, 0.00034330600000000155, 0.0003397919999999985, 0.00034311099999999317, 0.00034086099999999786, 0.0003413060000000065, 0.0003411390000000042, 0.00033948599999999995, 0.00034423599999999777, 0.00033837500000000187, 0.00034126400000000084, 0.00033948599999999995, 0.00033834700000000273, 0.0003416529999999973, 0.000342292000000001, 0.0003420140000000016, 0.0003439309999999987, 0.0003392359999999997, 0.0003443330000000022, 0.0003397360000000002, 0.0003417920000000005, 0.00034, 0.00034395899999999785, 0.00034154100000000076, 0.0003379449999999992, 0.0003391390000000022, 0.00033976399999999934, 0.0003391390000000022, 0.0003382499999999983, 0.00034009699999999754, 0.0003415140000000011, 0.0003422780000000014, 0.0003419450000000032]</msg>
<status status="PASS" starttime="20201029 12:46:38.383" endtime="20201029 12:46:38.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.378" endtime="20201029 12:46:38.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:38.389" endtime="20201029 12:46:38.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.388" endtime="20201029 12:46:38.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.386" endtime="20201029 12:46:38.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.007" endtime="20201029 12:46:38.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.006" endtime="20201029 12:46:38.410"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.419" endtime="20201029 12:46:38.456"></status>
</kw>
<msg timestamp="20201029 12:46:38.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.418" endtime="20201029 12:46:38.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.458" endtime="20201029 12:46:38.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.460" endtime="20201029 12:46:38.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.415" endtime="20201029 12:46:38.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.413" endtime="20201029 12:46:38.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.470" endtime="20201029 12:46:38.757"></status>
</kw>
<msg timestamp="20201029 12:46:38.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023068556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023418778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.468" endtime="20201029 12:46:38.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023068556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023418778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.761" endtime="20201029 12:46:38.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.769" endtime="20201029 12:46:38.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.465" endtime="20201029 12:46:38.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.464" endtime="20201029 12:46:38.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:38.776" level="INFO">${RESULT} = [{'diff': 0.00035022200000000073}, {'diff': 0.00033954100000000223}, {'diff': 0.00034387500000000043}, {'diff': 0.0003444860000000015}, {'diff': 0.00033972199999999717}, {'diff': 0.0003401110000000006...</msg>
<status status="PASS" starttime="20201029 12:46:38.773" endtime="20201029 12:46:38.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:38.780" level="INFO">${ACCURACY} = {'diff': [0.00035022200000000073, 0.00033954100000000223, 0.00034387500000000043, 0.0003444860000000015, 0.00033972199999999717, 0.0003401110000000006, 0.0003395840000000004, 0.00033973599999999674, 0...</msg>
<status status="PASS" starttime="20201029 12:46:38.777" endtime="20201029 12:46:38.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.785" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:46:38.784" endtime="20201029 12:46:38.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.787" level="INFO">VALUE: [0.00035022200000000073, 0.00033954100000000223, 0.00034387500000000043, 0.0003444860000000015, 0.00033972199999999717, 0.0003401110000000006, 0.0003395840000000004, 0.00033973599999999674, 0.0003443049999999996, 0.00034454199999999977, 0.00033812499999999815, 0.00034162500000000165, 0.00034047300000000086, 0.00034062500000000065, 0.0003422629999999989, 0.00034, 0.0003403330000000017, 0.0003422919999999975, 0.0003410980000000015, 0.00033976399999999934, 0.0003428470000000003, 0.00034184700000000276, 0.0003438200000000016, 0.00034331900000000165, 0.00033865300000000126, 0.00033966600000000235, 0.000341597000000006, 0.00034197300000000236, 0.0003446669999999999, 0.0003403190000000056, 0.00034148600000000195, 0.00034422200000000513, 0.00034022200000000113, 0.00034198600000000245, 0.0003412230000000016, 0.0003394999999999995, 0.0003419309999999967, 0.00034209699999999954, 0.00034361099999999367, 0.00034144400000000324, 0.0003421669999999974, 0.0003399590000000008, 0.0003397779999999989, 0.00034093100000000265, 0.0003413889999999975, 0.000339305000000005, 0.0003442779999999965, 0.00034008299999999797, 0.0003437500000000038, 0.0003426109999999996]</msg>
<status status="PASS" starttime="20201029 12:46:38.786" endtime="20201029 12:46:38.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.781" endtime="20201029 12:46:38.790"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:38.794" endtime="20201029 12:46:38.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.792" endtime="20201029 12:46:38.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.791" endtime="20201029 12:46:38.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.411" endtime="20201029 12:46:38.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.410" endtime="20201029 12:46:38.815"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.824" endtime="20201029 12:46:38.862"></status>
</kw>
<msg timestamp="20201029 12:46:38.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.823" endtime="20201029 12:46:38.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.864" endtime="20201029 12:46:38.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.867" endtime="20201029 12:46:38.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.820" endtime="20201029 12:46:38.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.818" endtime="20201029 12:46:38.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.876" endtime="20201029 12:46:39.164"></status>
</kw>
<msg timestamp="20201029 12:46:39.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025055056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025410653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.874" endtime="20201029 12:46:39.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025055056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025410653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.168" endtime="20201029 12:46:39.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.176" endtime="20201029 12:46:39.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.872" endtime="20201029 12:46:39.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.870" endtime="20201029 12:46:39.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:39.183" level="INFO">${RESULT} = [{'diff': 0.00035559699999999916}, {'diff': 0.00033816700000000033}, {'diff': 0.00033816700000000033}, {'diff': 0.00034154200000000023}, {'diff': 0.00034397199999999795}, {'diff': 0.000343430000000002...</msg>
<status status="PASS" starttime="20201029 12:46:39.180" endtime="20201029 12:46:39.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:39.188" level="INFO">${ACCURACY} = {'diff': [0.00035559699999999916, 0.00033816700000000033, 0.00033816700000000033, 0.00034154200000000023, 0.00034397199999999795, 0.0003434300000000022, 0.00033967999999999846, 0.0003387780000000014, ...</msg>
<status status="PASS" starttime="20201029 12:46:39.184" endtime="20201029 12:46:39.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.193" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:46:39.192" endtime="20201029 12:46:39.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.195" level="INFO">VALUE: [0.00035559699999999916, 0.00033816700000000033, 0.00033816700000000033, 0.00034154200000000023, 0.00034397199999999795, 0.0003434300000000022, 0.00033967999999999846, 0.0003387780000000014, 0.0003397079999999976, 0.00034411099999999764, 0.000340985999999998, 0.0003433889999999995, 0.0003421390000000017, 0.0003400699999999979, 0.00034136100000000183, 0.0003434309999999982, 0.00033908399999999644, 0.00034226400000000184, 0.0003413610000000053, 0.0003416249999999982, 0.00034441600000000017, 0.00034331900000000165, 0.00034168099999999646, 0.0003442089999999981, 0.00033809800000000195, 0.0003432079999999976, 0.0003440700000000019, 0.00033913899999999525, 0.00034413900000000025, 0.0003389300000000012, 0.00033943100000000115, 0.00034022200000000113, 0.00034087499999999743, 0.0003414450000000027, 0.0003378469999999953, 0.0003418050000000006, 0.0003423339999999997, 0.0003441529999999998, 0.0003382359999999987, 0.00033820899999999904, 0.0003409720000000019, 0.00034366700000000583, 0.0003380689999999964, 0.0003413329999999992, 0.0003393329999999972, 0.0003430690000000014, 0.00034252800000000166, 0.0003392499999999993, 0.0003435140000000031, 0.00034308299999999403]</msg>
<status status="PASS" starttime="20201029 12:46:39.194" endtime="20201029 12:46:39.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.189" endtime="20201029 12:46:39.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:39.201" endtime="20201029 12:46:39.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.199" endtime="20201029 12:46:39.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.198" endtime="20201029 12:46:39.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.816" endtime="20201029 12:46:39.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.816" endtime="20201029 12:46:39.224"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.238" endtime="20201029 12:46:39.274"></status>
</kw>
<msg timestamp="20201029 12:46:39.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.235" endtime="20201029 12:46:39.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.276" endtime="20201029 12:46:39.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.278" endtime="20201029 12:46:39.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.232" endtime="20201029 12:46:39.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.228" endtime="20201029 12:46:39.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.288" endtime="20201029 12:46:39.575"></status>
</kw>
<msg timestamp="20201029 12:46:39.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030501931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030842444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.286" endtime="20201029 12:46:39.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030501931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030842444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.579" endtime="20201029 12:46:39.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.587" endtime="20201029 12:46:39.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.284" endtime="20201029 12:46:39.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.282" endtime="20201029 12:46:39.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:39.594" level="INFO">${RESULT} = [{'diff': 0.0003405130000000006}, {'diff': 0.0003444020000000006}, {'diff': 0.0003445410000000003}, {'diff': 0.00034031899999999865}, {'diff': 0.00034179099999999407}, {'diff': 0.000340194000000002}, ...</msg>
<status status="PASS" starttime="20201029 12:46:39.591" endtime="20201029 12:46:39.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:39.598" level="INFO">${ACCURACY} = {'diff': [0.0003405130000000006, 0.0003444020000000006, 0.0003445410000000003, 0.00034031899999999865, 0.00034179099999999407, 0.000340194000000002, 0.00034373599999999727, 0.00033904099999999826, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:39.595" endtime="20201029 12:46:39.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.603" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:46:39.602" endtime="20201029 12:46:39.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.606" level="INFO">VALUE: [0.0003405130000000006, 0.0003444020000000006, 0.0003445410000000003, 0.00034031899999999865, 0.00034179099999999407, 0.000340194000000002, 0.00034373599999999727, 0.00033904099999999826, 0.0003414999999999946, 0.0003391390000000022, 0.0003395689999999979, 0.00034140299999999707, 0.0003406109999999976, 0.0003440279999999962, 0.00033831899999999665, 0.0003413889999999975, 0.0003417920000000005, 0.0003418050000000006, 0.0003394580000000008, 0.0003430419999999948, 0.0003393469999999968, 0.0003384579999999998, 0.0003402089999999941, 0.00034330499999999514, 0.0003394019999999956, 0.0003388329999999967, 0.00034347199999999745, 0.000341888999999998, 0.00034054199999999923, 0.00034352800000000266, 0.00034154200000000023, 0.0003425700000000004, 0.00034291699999999814, 0.00034152800000000066, 0.0003389030000000015, 0.00033809699999999554, 0.00033811100000000205, 0.00034004199999999873, 0.0003428470000000003, 0.0003439999999999971, 0.0003405559999999988, 0.00033837500000000187, 0.00034081899999999915, 0.00034048700000000043, 0.0003415270000000012, 0.0003395139999999991, 0.0003436110000000006, 0.00034136099999999836, 0.00034254200000000123, 0.00033893100000000065]</msg>
<status status="PASS" starttime="20201029 12:46:39.604" endtime="20201029 12:46:39.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.599" endtime="20201029 12:46:39.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:39.611" endtime="20201029 12:46:39.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.609" endtime="20201029 12:46:39.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.608" endtime="20201029 12:46:39.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.225" endtime="20201029 12:46:39.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.224" endtime="20201029 12:46:39.632"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.641" endtime="20201029 12:46:39.677"></status>
</kw>
<msg timestamp="20201029 12:46:39.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.639" endtime="20201029 12:46:39.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.678" endtime="20201029 12:46:39.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.681" endtime="20201029 12:46:39.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.636" endtime="20201029 12:46:39.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.634" endtime="20201029 12:46:39.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.690" endtime="20201029 12:46:39.977"></status>
</kw>
<msg timestamp="20201029 12:46:39.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022469819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022806181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.689" endtime="20201029 12:46:39.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022469819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022806181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.981" endtime="20201029 12:46:39.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.990" endtime="20201029 12:46:39.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.686" endtime="20201029 12:46:39.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.684" endtime="20201029 12:46:39.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:39.996" level="INFO">${RESULT} = [{'diff': 0.00033636199999999977}, {'diff': 0.00034223599999999924}, {'diff': 0.0003382640000000013}, {'diff': 0.00033937500000000287}, {'diff': 0.00033802799999999716}, {'diff': 0.0003382780000000009...</msg>
<status status="PASS" starttime="20201029 12:46:39.993" endtime="20201029 12:46:39.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:40.001" level="INFO">${ACCURACY} = {'diff': [0.00033636199999999977, 0.00034223599999999924, 0.0003382640000000013, 0.00033937500000000287, 0.00033802799999999716, 0.0003382780000000009, 0.0003423889999999985, 0.0003443049999999996, 0....</msg>
<status status="PASS" starttime="20201029 12:46:39.997" endtime="20201029 12:46:40.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.005" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:46:40.004" endtime="20201029 12:46:40.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.008" level="INFO">VALUE: [0.00033636199999999977, 0.00034223599999999924, 0.0003382640000000013, 0.00033937500000000287, 0.00033802799999999716, 0.0003382780000000009, 0.0003423889999999985, 0.0003443049999999996, 0.00033894400000000074, 0.0003389450000000002, 0.00034005499999999883, 0.00033780500000000005, 0.00034022199999999767, 0.0003414309999999997, 0.0003430829999999975, 0.000340888999999997, 0.00034081899999999915, 0.00034297199999999695, 0.0003414719999999989, 0.00033919500000000047, 0.0003398329999999977, 0.0003419170000000006, 0.0003394170000000016, 0.0003417369999999982, 0.00033986100000000033, 0.0003399720000000009, 0.00033992999999999524, 0.00034259700000000004, 0.00033893100000000065, 0.0003385830000000034, 0.00033972200000000063, 0.0003438470000000013, 0.00034420800000000557, 0.00033802799999999716, 0.0003402779999999994, 0.00033948599999999995, 0.0003388610000000028, 0.0003435690000000019, 0.00033987500000000337, 0.0003416529999999973, 0.0003406249999999972, 0.000341679999999997, 0.00034437500000000093, 0.0003438340000000012, 0.00034352800000000266, 0.0003409030000000035, 0.00034202800000000116, 0.00034197199999999595, 0.0003390139999999986, 0.00034211100000000605]</msg>
<status status="PASS" starttime="20201029 12:46:40.006" endtime="20201029 12:46:40.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.002" endtime="20201029 12:46:40.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:40.014" endtime="20201029 12:46:40.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.012" endtime="20201029 12:46:40.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.011" endtime="20201029 12:46:40.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.633" endtime="20201029 12:46:40.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.632" endtime="20201029 12:46:40.035"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.044" endtime="20201029 12:46:40.079"></status>
</kw>
<msg timestamp="20201029 12:46:40.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.043" endtime="20201029 12:46:40.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.080" endtime="20201029 12:46:40.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.083" endtime="20201029 12:46:40.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.040" endtime="20201029 12:46:40.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.038" endtime="20201029 12:46:40.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.092" endtime="20201029 12:46:40.380"></status>
</kw>
<msg timestamp="20201029 12:46:40.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021016597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021346917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.091" endtime="20201029 12:46:40.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021016597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021346917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.384" endtime="20201029 12:46:40.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.392" endtime="20201029 12:46:40.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.088" endtime="20201029 12:46:40.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.086" endtime="20201029 12:46:40.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:40.399" level="INFO">${RESULT} = [{'diff': 0.00033031999999999853}, {'diff': 0.00033912499999999915}, {'diff': 0.0003388200000000001}, {'diff': 0.00034105499999999983}, {'diff': 0.00034318000000000196}, {'diff': 0.0003409169999999996...</msg>
<status status="PASS" starttime="20201029 12:46:40.395" endtime="20201029 12:46:40.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:40.404" level="INFO">${ACCURACY} = {'diff': [0.00033031999999999853, 0.00033912499999999915, 0.0003388200000000001, 0.00034105499999999983, 0.00034318000000000196, 0.0003409169999999996, 0.0003399030000000025, 0.0003381390000000012, 0....</msg>
<status status="PASS" starttime="20201029 12:46:40.400" endtime="20201029 12:46:40.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.408" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:46:40.407" endtime="20201029 12:46:40.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.411" level="INFO">VALUE: [0.00033031999999999853, 0.00033912499999999915, 0.0003388200000000001, 0.00034105499999999983, 0.00034318000000000196, 0.0003409169999999996, 0.0003399030000000025, 0.0003381390000000012, 0.00034095799999999885, 0.0003392499999999993, 0.000340693999999999, 0.00033980500000000205, 0.00033862499999999865, 0.0003416390000000012, 0.00034429100000000004, 0.0003436669999999989, 0.00034140300000000054, 0.0003384449999999997, 0.000340888999999997, 0.0003378610000000018, 0.00033898599999999945, 0.0003426249999999992, 0.00034386100000000086, 0.00034245800000000035, 0.0003385969999999995, 0.00034211200000000205, 0.00034109699999999854, 0.00034433299999999875, 0.0003407779999999999, 0.0003432780000000024, 0.00034209699999999954, 0.0003404580000000018, 0.0003388049999999976, 0.00034268099999999746, 0.00033813899999999425, 0.0003401669999999954, 0.0003428340000000002, 0.0003425419999999943, 0.00033787500000000137, 0.00033891699999999414, 0.00034083400000000513, 0.0003377640000000043, 0.0003430560000000013, 0.00034186099999999886, 0.0003431110000000001, 0.0003395139999999991, 0.00033890299999999457, 0.00034254200000000123, 0.0003426250000000061, 0.0003396379999999963]</msg>
<status status="PASS" starttime="20201029 12:46:40.410" endtime="20201029 12:46:40.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.405" endtime="20201029 12:46:40.476"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:40.480" endtime="20201029 12:46:40.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.478" endtime="20201029 12:46:40.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.477" endtime="20201029 12:46:40.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.036" endtime="20201029 12:46:40.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.036" endtime="20201029 12:46:40.501"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.510" endtime="20201029 12:46:40.545"></status>
</kw>
<msg timestamp="20201029 12:46:40.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.508" endtime="20201029 12:46:40.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.547" endtime="20201029 12:46:40.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.549" endtime="20201029 12:46:40.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.505" endtime="20201029 12:46:40.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.503" endtime="20201029 12:46:40.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.559" endtime="20201029 12:46:40.846"></status>
</kw>
<msg timestamp="20201029 12:46:40.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022696292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023031653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.557" endtime="20201029 12:46:40.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022696292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023031653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.850" endtime="20201029 12:46:40.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.859" endtime="20201029 12:46:40.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.555" endtime="20201029 12:46:40.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.553" endtime="20201029 12:46:40.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:40.866" level="INFO">${RESULT} = [{'diff': 0.0003353609999999993}, {'diff': 0.0003441659999999999}, {'diff': 0.0003381250000000016}, {'diff': 0.0003403750000000004}, {'diff': 0.00034391699999999914}, {'diff': 0.00034222199999999967},...</msg>
<status status="PASS" starttime="20201029 12:46:40.862" endtime="20201029 12:46:40.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:40.870" level="INFO">${ACCURACY} = {'diff': [0.0003353609999999993, 0.0003441659999999999, 0.0003381250000000016, 0.0003403750000000004, 0.00034391699999999914, 0.00034222199999999967, 0.0003388749999999989, 0.0003429590000000003, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:40.867" endtime="20201029 12:46:40.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.875" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:46:40.873" endtime="20201029 12:46:40.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.877" level="INFO">VALUE: [0.0003353609999999993, 0.0003441659999999999, 0.0003381250000000016, 0.0003403750000000004, 0.00034391699999999914, 0.00034222199999999967, 0.0003388749999999989, 0.0003429590000000003, 0.00034372200000000117, 0.00033855499999999733, 0.0003379719999999989, 0.0003408329999999987, 0.00034067999999999946, 0.0003440279999999997, 0.0003442919999999995, 0.0003393330000000007, 0.0003411530000000003, 0.00034144400000000324, 0.00034070800000000206, 0.0003436659999999994, 0.0003438469999999978, 0.00034138900000000097, 0.00033888899999999847, 0.00034287499999999596, 0.000338403000000001, 0.00034313899999999925, 0.0003387090000000065, 0.0003389450000000002, 0.00033920900000000004, 0.0003410830000000059, 0.0003393889999999955, 0.0003409580000000023, 0.000338291999999997, 0.00034109699999999854, 0.00033902799999999816, 0.0003407500000000008, 0.0003418329999999997, 0.00034048600000000095, 0.00034193100000000365, 0.00033998600000000045, 0.00033933300000000416, 0.0003407500000000008, 0.00033922200000000013, 0.0003425279999999947, 0.00034334800000000026, 0.0003439309999999987, 0.0003421799999999975, 0.00033898599999999945, 0.0003434019999999996, 0.00033820899999999904]</msg>
<status status="PASS" starttime="20201029 12:46:40.876" endtime="20201029 12:46:40.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.871" endtime="20201029 12:46:40.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:40.887" endtime="20201029 12:46:40.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.884" endtime="20201029 12:46:40.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.881" endtime="20201029 12:46:40.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.502" endtime="20201029 12:46:40.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.501" endtime="20201029 12:46:40.919"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.945" endtime="20201029 12:46:40.990"></status>
</kw>
<msg timestamp="20201029 12:46:40.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.943" endtime="20201029 12:46:40.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.992" endtime="20201029 12:46:40.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.995" endtime="20201029 12:46:40.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.938" endtime="20201029 12:46:40.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.934" endtime="20201029 12:46:40.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.005" endtime="20201029 12:46:41.291"></status>
</kw>
<msg timestamp="20201029 12:46:41.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057250514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057596181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.004" endtime="20201029 12:46:41.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057250514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057596181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.295" endtime="20201029 12:46:41.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.303" endtime="20201029 12:46:41.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.001" endtime="20201029 12:46:41.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.998" endtime="20201029 12:46:41.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:41.309" level="INFO">${RESULT} = [{'diff': 0.0003456670000000009}, {'diff': 0.0003436669999999989}, {'diff': 0.00034098700000000093}, {'diff': 0.0003396250000000031}, {'diff': 0.0003378610000000018}, {'diff': 0.00034055499999999933},...</msg>
<status status="PASS" starttime="20201029 12:46:41.306" endtime="20201029 12:46:41.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:41.313" level="INFO">${ACCURACY} = {'diff': [0.0003456670000000009, 0.0003436669999999989, 0.00034098700000000093, 0.0003396250000000031, 0.0003378610000000018, 0.00034055499999999933, 0.00034091699999999614, 0.00034302800000000216, 0....</msg>
<status status="PASS" starttime="20201029 12:46:41.310" endtime="20201029 12:46:41.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.318" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:46:41.317" endtime="20201029 12:46:41.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.320" level="INFO">VALUE: [0.0003456670000000009, 0.0003436669999999989, 0.00034098700000000093, 0.0003396250000000031, 0.0003378610000000018, 0.00034055499999999933, 0.00034091699999999614, 0.00034302800000000216, 0.00034131899999999965, 0.0003431669999999984, 0.00034254200000000123, 0.00034254100000000176, 0.0003437089999999976, 0.0003392359999999997, 0.0003440970000000085, 0.0003384720000000063, 0.00034152699999999425, 0.00034105500000000677, 0.00034068099999999546, 0.00034018099999999496, 0.0003437500000000038, 0.00033866700000000083, 0.00034284699999999335, 0.0003429729999999964, 0.0003427780000000019, 0.0003417780000000009, 0.00033993100000000165, 0.00033887500000000237, 0.00034243100000000415, 0.000338612000000002, 0.000340403000000003, 0.0003380689999999964, 0.0003393339999999967, 0.00034082000000000556, 0.0003385690000000108, 0.00034347199999999745, 0.00034372200000000463, 0.000340708000000009, 0.00034111100000000505, 0.00033950000000000646, 0.0003405689999999989, 0.0003379449999999923, 0.00034265199999999885, 0.00034211100000000605, 0.00033955599999999087, 0.0003384579999999998, 0.00034030599999999855, 0.00033862500000000906, 0.000339679999999995, 0.0003416940000000035]</msg>
<status status="PASS" starttime="20201029 12:46:41.319" endtime="20201029 12:46:41.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.314" endtime="20201029 12:46:41.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:41.326" endtime="20201029 12:46:41.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.325" endtime="20201029 12:46:41.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.323" endtime="20201029 12:46:41.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.927" endtime="20201029 12:46:41.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.922" endtime="20201029 12:46:41.347"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.355" endtime="20201029 12:46:41.390"></status>
</kw>
<msg timestamp="20201029 12:46:41.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.354" endtime="20201029 12:46:41.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.391" endtime="20201029 12:46:41.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.394" endtime="20201029 12:46:41.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.351" endtime="20201029 12:46:41.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.349" endtime="20201029 12:46:41.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.402" endtime="20201029 12:46:41.697"></status>
</kw>
<msg timestamp="20201029 12:46:41.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020346181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020681917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.401" endtime="20201029 12:46:41.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020346181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020681917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.706" endtime="20201029 12:46:41.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.723" endtime="20201029 12:46:41.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.398" endtime="20201029 12:46:41.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.397" endtime="20201029 12:46:41.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:41.737" level="INFO">${RESULT} = [{'diff': 0.0003357359999999997}, {'diff': 0.00034268000000000146}, {'diff': 0.00034208299999999997}, {'diff': 0.000341985999999999}, {'diff': 0.0003421660000000014}, {'diff': 0.000343679999999999}, {...</msg>
<status status="PASS" starttime="20201029 12:46:41.730" endtime="20201029 12:46:41.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:41.747" level="INFO">${ACCURACY} = {'diff': [0.0003357359999999997, 0.00034268000000000146, 0.00034208299999999997, 0.000341985999999999, 0.0003421660000000014, 0.000343679999999999, 0.0003411390000000007, 0.00034122199999999867, 0.000...</msg>
<status status="PASS" starttime="20201029 12:46:41.739" endtime="20201029 12:46:41.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.753" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:46:41.752" endtime="20201029 12:46:41.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.756" level="INFO">VALUE: [0.0003357359999999997, 0.00034268000000000146, 0.00034208299999999997, 0.000341985999999999, 0.0003421660000000014, 0.000343679999999999, 0.0003411390000000007, 0.00034122199999999867, 0.0003411939999999995, 0.00034163899999999775, 0.00034062500000000065, 0.00034009699999999754, 0.0003442500000000008, 0.0003434309999999982, 0.00034090300000000004, 0.00033991599999999914, 0.00034117999999999996, 0.0003415000000000015, 0.0003444439999999993, 0.00034163899999999775, 0.00033844400000000024, 0.0003415979999999985, 0.0003430560000000013, 0.0003414590000000023, 0.0003414859999999985, 0.00034381999999999815, 0.00034073599999999774, 0.00034322300000000014, 0.00034238900000000197, 0.000343777999999996, 0.00034290299999999857, 0.0003401250000000036, 0.00034032000000000506, 0.0003403190000000056, 0.00033870800000000006, 0.00033876399999999834, 0.0003391109999999961, 0.0003381109999999951, 0.00034159699999999904, 0.00034090299999999657, 0.0003421249999999987, 0.00034287499999999943, 0.0003439439999999988, 0.00034247300000000286, 0.0003386250000000021, 0.0003397499999999998, 0.00034447199999999845, 0.00034381900000000215, 0.00033932000000000406, 0.00034286099999999986]</msg>
<status status="PASS" starttime="20201029 12:46:41.754" endtime="20201029 12:46:41.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.749" endtime="20201029 12:46:41.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:41.761" endtime="20201029 12:46:41.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.759" endtime="20201029 12:46:41.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.758" endtime="20201029 12:46:41.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.348" endtime="20201029 12:46:41.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.347" endtime="20201029 12:46:41.781"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.790" endtime="20201029 12:46:41.826"></status>
</kw>
<msg timestamp="20201029 12:46:41.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.788" endtime="20201029 12:46:41.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.828" endtime="20201029 12:46:41.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.830" endtime="20201029 12:46:41.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.786" endtime="20201029 12:46:41.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.784" endtime="20201029 12:46:41.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.840" endtime="20201029 12:46:42.127"></status>
</kw>
<msg timestamp="20201029 12:46:42.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022878972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023223319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.839" endtime="20201029 12:46:42.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022878972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023223319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.131" endtime="20201029 12:46:42.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.139" endtime="20201029 12:46:42.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.836" endtime="20201029 12:46:42.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.834" endtime="20201029 12:46:42.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.145" level="INFO">${RESULT} = [{'diff': 0.0003443469999999983}, {'diff': 0.00034363899999999975}, {'diff': 0.00034026399999999984}, {'diff': 0.0003412639999999974}, {'diff': 0.0003432919999999985}, {'diff': 0.0003388330000000002},...</msg>
<status status="PASS" starttime="20201029 12:46:42.142" endtime="20201029 12:46:42.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:42.149" level="INFO">${ACCURACY} = {'diff': [0.0003443469999999983, 0.00034363899999999975, 0.00034026399999999984, 0.0003412639999999974, 0.0003432919999999985, 0.0003388330000000002, 0.00033938899999999897, 0.0003428470000000003, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:42.146" endtime="20201029 12:46:42.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.154" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:46:42.153" endtime="20201029 12:46:42.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.156" level="INFO">VALUE: [0.0003443469999999983, 0.00034363899999999975, 0.00034026399999999984, 0.0003412639999999974, 0.0003432919999999985, 0.0003388330000000002, 0.00033938899999999897, 0.0003428470000000003, 0.00034386100000000086, 0.0003404720000000014, 0.00033872199999999963, 0.000340306000000002, 0.00033948599999999995, 0.0003396800000000019, 0.0003389030000000015, 0.0003421529999999978, 0.00033830500000000055, 0.0003426669999999979, 0.0003432639999999994, 0.00034140300000000054, 0.0003429310000000012, 0.00034341599999999917, 0.00034186099999999886, 0.0003444309999999992, 0.00033958299999999747, 0.0003421659999999979, 0.0003431110000000001, 0.0003409439999999958, 0.00033870800000000006, 0.00033986199999999633, 0.00033958299999999747, 0.00034154200000000023, 0.0003441799999999995, 0.00033922200000000013, 0.00034005499999999883, 0.00033850000000000546, 0.0003411529999999968, 0.0003442500000000043, 0.00034098600000000145, 0.0003442089999999981, 0.00034286099999999986, 0.00034198600000000245, 0.00033805600000000324, 0.0003411529999999968, 0.00034198600000000245, 0.00034141699999999664, 0.00034274999999999584, 0.00034408300000000197, 0.00034093100000000265, 0.0003401669999999954]</msg>
<status status="PASS" starttime="20201029 12:46:42.155" endtime="20201029 12:46:42.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.150" endtime="20201029 12:46:42.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.161" endtime="20201029 12:46:42.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.160" endtime="20201029 12:46:42.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.159" endtime="20201029 12:46:42.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.782" endtime="20201029 12:46:42.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.782" endtime="20201029 12:46:42.182"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.190" endtime="20201029 12:46:42.228"></status>
</kw>
<msg timestamp="20201029 12:46:42.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.189" endtime="20201029 12:46:42.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.230" endtime="20201029 12:46:42.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.232" endtime="20201029 12:46:42.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.186" endtime="20201029 12:46:42.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.184" endtime="20201029 12:46:42.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.241" endtime="20201029 12:46:42.540"></status>
</kw>
<msg timestamp="20201029 12:46:42.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024184486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024535931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.239" endtime="20201029 12:46:42.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024184486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024535931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.549" endtime="20201029 12:46:42.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.565" endtime="20201029 12:46:42.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.237" endtime="20201029 12:46:42.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.235" endtime="20201029 12:46:42.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.572" level="INFO">${RESULT} = [{'diff': 0.00035144499999999884}, {'diff': 0.00034223599999999924}, {'diff': 0.00033869499999999997}, {'diff': 0.00033890299999999804}, {'diff': 0.00034104100000000026}, {'diff': 0.000344472999999997...</msg>
<status status="PASS" starttime="20201029 12:46:42.569" endtime="20201029 12:46:42.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:42.576" level="INFO">${ACCURACY} = {'diff': [0.00035144499999999884, 0.00034223599999999924, 0.00033869499999999997, 0.00033890299999999804, 0.00034104100000000026, 0.0003444729999999979, 0.0003416109999999986, 0.00034016699999999886, ...</msg>
<status status="PASS" starttime="20201029 12:46:42.573" endtime="20201029 12:46:42.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.580" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:46:42.579" endtime="20201029 12:46:42.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.583" level="INFO">VALUE: [0.00035144499999999884, 0.00034223599999999924, 0.00033869499999999997, 0.00033890299999999804, 0.00034104100000000026, 0.0003444729999999979, 0.0003416109999999986, 0.00034016699999999886, 0.00033993100000000165, 0.0003392359999999997, 0.00034390300000000304, 0.0003397780000000024, 0.0003397369999999997, 0.00033834699999999926, 0.0003412079999999991, 0.0003385969999999995, 0.00034390299999999957, 0.00034292999999999824, 0.0003425269999999987, 0.0003413750000000014, 0.0003439309999999987, 0.0003382499999999983, 0.000339194000000001, 0.00034220900000000304, 0.00034319499999999753, 0.0003437219999999977, 0.0003415140000000011, 0.00033959800000000345, 0.0003416390000000047, 0.00034069499999999503, 0.000338403000000001, 0.00034340299999999907, 0.00033815300000000076, 0.0003392499999999993, 0.00034384699999999435, 0.0003403190000000056, 0.00033852799999999766, 0.00034380600000000205, 0.00034027699999999994, 0.00033798599999999845, 0.0003411669999999964, 0.0003439309999999987, 0.00034413900000000025, 0.00034180600000000005, 0.0003441250000000007, 0.0003424720000000034, 0.0003387779999999979, 0.000342888999999999, 0.00033837500000000187, 0.00033969500000000097]</msg>
<status status="PASS" starttime="20201029 12:46:42.581" endtime="20201029 12:46:42.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.577" endtime="20201029 12:46:42.585"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.589" endtime="20201029 12:46:42.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.587" endtime="20201029 12:46:42.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.586" endtime="20201029 12:46:42.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.183" endtime="20201029 12:46:42.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.182" endtime="20201029 12:46:42.609"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.618" endtime="20201029 12:46:42.656"></status>
</kw>
<msg timestamp="20201029 12:46:42.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.616" endtime="20201029 12:46:42.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.657" endtime="20201029 12:46:42.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.660" endtime="20201029 12:46:42.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.614" endtime="20201029 12:46:42.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.612" endtime="20201029 12:46:42.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.669" endtime="20201029 12:46:42.955"></status>
</kw>
<msg timestamp="20201029 12:46:42.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023825208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024178389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.667" endtime="20201029 12:46:42.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023825208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024178389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.959" endtime="20201029 12:46:42.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.967" endtime="20201029 12:46:42.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.665" endtime="20201029 12:46:42.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.663" endtime="20201029 12:46:42.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.974" level="INFO">${RESULT} = [{'diff': 0.000353181000000001}, {'diff': 0.0003397640000000028}, {'diff': 0.00034018099999999843}, {'diff': 0.0003418049999999971}, {'diff': 0.0003393330000000007}, {'diff': 0.00034359699999999757}, ...</msg>
<status status="PASS" starttime="20201029 12:46:42.971" endtime="20201029 12:46:42.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:42.979" level="INFO">${ACCURACY} = {'diff': [0.000353181000000001, 0.0003397640000000028, 0.00034018099999999843, 0.0003418049999999971, 0.0003393330000000007, 0.00034359699999999757, 0.0003389580000000003, 0.0003417370000000017, 0.000...</msg>
<status status="PASS" starttime="20201029 12:46:42.975" endtime="20201029 12:46:42.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.983" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:46:42.982" endtime="20201029 12:46:42.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.986" level="INFO">VALUE: [0.000353181000000001, 0.0003397640000000028, 0.00034018099999999843, 0.0003418049999999971, 0.0003393330000000007, 0.00034359699999999757, 0.0003389580000000003, 0.0003417370000000017, 0.0003394580000000008, 0.00034318100000000143, 0.0003389450000000002, 0.000343195000000001, 0.00033936099999999983, 0.00034208299999999997, 0.0003405140000000001, 0.00034120900000000204, 0.00034090300000000004, 0.0003412639999999974, 0.0003400139999999996, 0.000339097, 0.0003415140000000011, 0.0003416109999999986, 0.00034141699999999664, 0.0003395129999999996, 0.00034330499999999514, 0.0003427219999999967, 0.0003406249999999972, 0.000341791000000001, 0.0003429999999999961, 0.00034412499999999374, 0.0003399450000000012, 0.00033954099999999876, 0.00034041699999999564, 0.00034237499999999893, 0.00034258300000000047, 0.0003381800000000004, 0.00033809699999999554, 0.0003427780000000019, 0.0003421810000000039, 0.0003435560000000018, 0.0003437079999999981, 0.00034041599999999617, 0.00034258300000000047, 0.0003446529999999934, 0.0003419579999999964, 0.0003437920000000025, 0.0003417360000000022, 0.0003386380000000022, 0.0003411669999999964, 0.00034265300000000526]</msg>
<status status="PASS" starttime="20201029 12:46:42.984" endtime="20201029 12:46:42.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.980" endtime="20201029 12:46:42.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.991" endtime="20201029 12:46:43.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.989" endtime="20201029 12:46:43.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.988" endtime="20201029 12:46:43.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.610" endtime="20201029 12:46:43.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.610" endtime="20201029 12:46:43.012"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.020" endtime="20201029 12:46:43.062"></status>
</kw>
<msg timestamp="20201029 12:46:43.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.019" endtime="20201029 12:46:43.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.064" endtime="20201029 12:46:43.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.066" endtime="20201029 12:46:43.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.016" endtime="20201029 12:46:43.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.014" endtime="20201029 12:46:43.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.075" endtime="20201029 12:46:43.381"></status>
</kw>
<msg timestamp="20201029 12:46:43.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023676431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024010958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.074" endtime="20201029 12:46:43.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023676431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024010958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.385" endtime="20201029 12:46:43.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.393" endtime="20201029 12:46:43.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.071" endtime="20201029 12:46:43.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.069" endtime="20201029 12:46:43.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:43.400" level="INFO">${RESULT} = [{'diff': 0.00033452699999999766}, {'diff': 0.0003434579999999979}, {'diff': 0.00034166700000000036}, {'diff': 0.00034094499999999875}, {'diff': 0.0003438330000000017}, {'diff': 0.00034419399999999906...</msg>
<status status="PASS" starttime="20201029 12:46:43.397" endtime="20201029 12:46:43.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:43.404" level="INFO">${ACCURACY} = {'diff': [0.00033452699999999766, 0.0003434579999999979, 0.00034166700000000036, 0.00034094499999999875, 0.0003438330000000017, 0.00034419399999999906, 0.00034066699999999936, 0.0003407919999999995, 0...</msg>
<status status="PASS" starttime="20201029 12:46:43.401" endtime="20201029 12:46:43.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.408" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:46:43.407" endtime="20201029 12:46:43.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.411" level="INFO">VALUE: [0.00033452699999999766, 0.0003434579999999979, 0.00034166700000000036, 0.00034094499999999875, 0.0003438330000000017, 0.00034419399999999906, 0.00034066699999999936, 0.0003407919999999995, 0.00033854099999999776, 0.0003436110000000006, 0.000340306000000002, 0.0003402779999999994, 0.00033869499999999997, 0.00033804199999999673, 0.00034090300000000004, 0.0003441529999999998, 0.00034070899999999807, 0.00034380600000000205, 0.00034218099999999696, 0.00034429100000000004, 0.00034004100000000273, 0.00033933300000000416, 0.0003434309999999982, 0.0003391810000000009, 0.000340403000000003, 0.00033833400000000263, 0.00034148600000000195, 0.0003426390000000057, 0.0003381249999999947, 0.0003381250000000016, 0.0003439300000000062, 0.00033966600000000235, 0.00034304200000000173, 0.0003400689999999984, 0.00034366600000000636, 0.00034187499999999843, 0.00033887500000000237, 0.0003384300000000007, 0.0003426109999999996, 0.0003398879999999965, 0.0003406109999999976, 0.0003379589999999988, 0.00034384699999999435, 0.0003403469999999978, 0.0003442910000000035, 0.000342194000000004, 0.00033832000000000306, 0.0003391250000000026, 0.0003429439999999978, 0.0003384160000000011]</msg>
<status status="PASS" starttime="20201029 12:46:43.410" endtime="20201029 12:46:43.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.405" endtime="20201029 12:46:43.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:43.416" endtime="20201029 12:46:43.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.414" endtime="20201029 12:46:43.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.413" endtime="20201029 12:46:43.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.013" endtime="20201029 12:46:43.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.012" endtime="20201029 12:46:43.437"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.445" endtime="20201029 12:46:43.484"></status>
</kw>
<msg timestamp="20201029 12:46:43.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.444" endtime="20201029 12:46:43.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.486" endtime="20201029 12:46:43.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.488" endtime="20201029 12:46:43.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.441" endtime="20201029 12:46:43.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.439" endtime="20201029 12:46:43.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.497" endtime="20201029 12:46:43.783"></status>
</kw>
<msg timestamp="20201029 12:46:43.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025554861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025887361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.496" endtime="20201029 12:46:43.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025554861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025887361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.787" endtime="20201029 12:46:43.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.796" endtime="20201029 12:46:43.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.493" endtime="20201029 12:46:43.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.491" endtime="20201029 12:46:43.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:43.802" level="INFO">${RESULT} = [{'diff': 0.00033249999999999946}, {'diff': 0.00034430600000000255}, {'diff': 0.0003429309999999977}, {'diff': 0.00033876300000000234}, {'diff': 0.0003384999999999985}, {'diff': 0.000341194999999999},...</msg>
<status status="PASS" starttime="20201029 12:46:43.799" endtime="20201029 12:46:43.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:43.806" level="INFO">${ACCURACY} = {'diff': [0.00033249999999999946, 0.00034430600000000255, 0.0003429309999999977, 0.00033876300000000234, 0.0003384999999999985, 0.000341194999999999, 0.0003413880000000015, 0.0003440279999999997, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:43.803" endtime="20201029 12:46:43.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.811" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:46:43.810" endtime="20201029 12:46:43.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.813" level="INFO">VALUE: [0.00033249999999999946, 0.00034430600000000255, 0.0003429309999999977, 0.00033876300000000234, 0.0003384999999999985, 0.000341194999999999, 0.0003413880000000015, 0.0003440279999999997, 0.0003417360000000022, 0.00034331999999999765, 0.0003434440000000018, 0.00033976399999999934, 0.000339194000000001, 0.00033916600000000185, 0.0003440270000000002, 0.0003402499999999968, 0.0003376939999999995, 0.00034097199999999495, 0.0003436669999999989, 0.00033788900000000094, 0.00034437500000000093, 0.00034137499999999793, 0.00034308300000000097, 0.000339597000000004, 0.00034326400000000284, 0.0003429590000000038, 0.0003399300000000022, 0.0003435549999999954, 0.00033840299999999407, 0.00033972200000000063, 0.0003382770000000049, 0.00033777800000000385, 0.0003421379999999988, 0.0003409450000000022, 0.00034076400000000034, 0.00034043100000000215, 0.0003420690000000004, 0.00034048600000000095, 0.0003416249999999982, 0.0003409580000000023, 0.0003395559999999978, 0.00034340299999999907, 0.0003413339999999987, 0.0003390689999999974, 0.0003439579999999984, 0.0003433340000000007, 0.0003407360000000012, 0.00034137499999999793, 0.00033888900000000194, 0.00034226400000000184]</msg>
<status status="PASS" starttime="20201029 12:46:43.812" endtime="20201029 12:46:43.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.807" endtime="20201029 12:46:43.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:43.819" endtime="20201029 12:46:43.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.817" endtime="20201029 12:46:43.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.816" endtime="20201029 12:46:43.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.438" endtime="20201029 12:46:43.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.437" endtime="20201029 12:46:43.840"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.848" endtime="20201029 12:46:43.886"></status>
</kw>
<msg timestamp="20201029 12:46:43.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.847" endtime="20201029 12:46:43.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.888" endtime="20201029 12:46:43.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.890" endtime="20201029 12:46:43.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.844" endtime="20201029 12:46:43.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.842" endtime="20201029 12:46:43.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.899" endtime="20201029 12:46:44.184"></status>
</kw>
<msg timestamp="20201029 12:46:44.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02436475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024722569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:43.898" endtime="20201029 12:46:44.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02436475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024722569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:44.188" endtime="20201029 12:46:44.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.196" endtime="20201029 12:46:44.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.895" endtime="20201029 12:46:44.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.893" endtime="20201029 12:46:44.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:44.203" level="INFO">${RESULT} = [{'diff': 0.0003578189999999988}, {'diff': 0.0003395420000000017}, {'diff': 0.00034290299999999857}, {'diff': 0.00034108299999999897}, {'diff': 0.00033891599999999814}, {'diff': 0.0003426109999999996}...</msg>
<status status="PASS" starttime="20201029 12:46:44.200" endtime="20201029 12:46:44.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:44.208" level="INFO">${ACCURACY} = {'diff': [0.0003578189999999988, 0.0003395420000000017, 0.00034290299999999857, 0.00034108299999999897, 0.00033891599999999814, 0.0003426109999999996, 0.0003396110000000001, 0.00034168000000000046, 0....</msg>
<status status="PASS" starttime="20201029 12:46:44.204" endtime="20201029 12:46:44.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.212" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:46:44.211" endtime="20201029 12:46:44.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.215" level="INFO">VALUE: [0.0003578189999999988, 0.0003395420000000017, 0.00034290299999999857, 0.00034108299999999897, 0.00033891599999999814, 0.0003426109999999996, 0.0003396110000000001, 0.00034168000000000046, 0.0003380839999999989, 0.00033901400000000206, 0.00033962499999999965, 0.0003429720000000004, 0.00033936099999999983, 0.00033929200000000145, 0.000339194000000001, 0.0003421249999999987, 0.000341985999999999, 0.00034318100000000143, 0.00034245800000000035, 0.0003413050000000001, 0.00034424999999999734, 0.0003377779999999969, 0.000344098000000001, 0.0003383329999999962, 0.0003434590000000043, 0.0003382909999999975, 0.00033932000000000406, 0.000342000000000002, 0.00033819499999999947, 0.0003407779999999999, 0.0003440270000000037, 0.00033855600000000374, 0.0003378050000000035, 0.00034363899999999975, 0.00033922200000000013, 0.00034355599999999487, 0.0003444439999999993, 0.00034058299999999847, 0.000344485999999998, 0.000341888999999998, 0.00034097199999999495, 0.00033936200000000277, 0.00034424999999999734, 0.00034379099999999607, 0.00034209699999999954, 0.00034390299999999957, 0.0003438200000000016, 0.00033827699999999794, 0.0003390139999999986, 0.0003425690000000009]</msg>
<status status="PASS" starttime="20201029 12:46:44.213" endtime="20201029 12:46:44.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.209" endtime="20201029 12:46:44.216"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:44.220" endtime="20201029 12:46:44.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.218" endtime="20201029 12:46:44.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.217" endtime="20201029 12:46:44.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.841" endtime="20201029 12:46:44.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.840" endtime="20201029 12:46:44.240"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.249" endtime="20201029 12:46:44.284"></status>
</kw>
<msg timestamp="20201029 12:46:44.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.247" endtime="20201029 12:46:44.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.286" endtime="20201029 12:46:44.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.288" endtime="20201029 12:46:44.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.245" endtime="20201029 12:46:44.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.243" endtime="20201029 12:46:44.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.297" endtime="20201029 12:46:44.586"></status>
</kw>
<msg timestamp="20201029 12:46:44.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020677083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021019167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.296" endtime="20201029 12:46:44.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020677083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021019167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.590" endtime="20201029 12:46:44.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.598" endtime="20201029 12:46:44.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.293" endtime="20201029 12:46:44.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.291" endtime="20201029 12:46:44.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:44.604" level="INFO">${RESULT} = [{'diff': 0.00034208399999999944}, {'diff': 0.0003416949999999995}, {'diff': 0.0003403199999999981}, {'diff': 0.00034380600000000205}, {'diff': 0.0003441529999999998}, {'diff': 0.00034137499999999793}...</msg>
<status status="PASS" starttime="20201029 12:46:44.601" endtime="20201029 12:46:44.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:44.608" level="INFO">${ACCURACY} = {'diff': [0.00034208399999999944, 0.0003416949999999995, 0.0003403199999999981, 0.00034380600000000205, 0.0003441529999999998, 0.00034137499999999793, 0.00033848599999999895, 0.0003389170000000011, 0....</msg>
<status status="PASS" starttime="20201029 12:46:44.605" endtime="20201029 12:46:44.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.613" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:46:44.612" endtime="20201029 12:46:44.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.615" level="INFO">VALUE: [0.00034208399999999944, 0.0003416949999999995, 0.0003403199999999981, 0.00034380600000000205, 0.0003441529999999998, 0.00034137499999999793, 0.00033848599999999895, 0.0003389170000000011, 0.000341000000000001, 0.00034423599999999777, 0.0003428059999999976, 0.00034294500000000075, 0.00033938899999999897, 0.0003429170000000016, 0.000343889, 0.00034204200000000073, 0.00033958299999999747, 0.00033984700000000076, 0.0003422780000000014, 0.00034073599999999774, 0.00034066700000000283, 0.0003408469999999983, 0.0003412500000000013, 0.000339403000000002, 0.0003407079999999986, 0.0003398329999999977, 0.0003386250000000021, 0.00033851400000000156, 0.0003395139999999991, 0.00034341599999999917, 0.00034208399999999944, 0.0003409580000000023, 0.0003431110000000001, 0.00033898599999999945, 0.0003432780000000024, 0.00034018099999999496, 0.0003439020000000001, 0.0003395830000000044, 0.0003396390000000027, 0.0003415549999999934, 0.00034241599999999817, 0.0003400840000000044, 0.00034063899999999675, 0.00034148600000000195, 0.0003432500000000033, 0.00034165300000000426, 0.00033852799999999766, 0.000341679999999997, 0.00034308299999999403, 0.00034408300000000197]</msg>
<status status="PASS" starttime="20201029 12:46:44.614" endtime="20201029 12:46:44.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.609" endtime="20201029 12:46:44.617"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:44.620" endtime="20201029 12:46:44.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.619" endtime="20201029 12:46:44.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.618" endtime="20201029 12:46:44.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.241" endtime="20201029 12:46:44.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.241" endtime="20201029 12:46:44.641"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.650" endtime="20201029 12:46:44.690"></status>
</kw>
<msg timestamp="20201029 12:46:44.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.648" endtime="20201029 12:46:44.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.692" endtime="20201029 12:46:44.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.695" endtime="20201029 12:46:44.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.646" endtime="20201029 12:46:44.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.644" endtime="20201029 12:46:44.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.704" endtime="20201029 12:46:44.989"></status>
</kw>
<msg timestamp="20201029 12:46:44.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026776542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027124306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.702" endtime="20201029 12:46:44.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026776542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027124306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.994" endtime="20201029 12:46:45.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.002" endtime="20201029 12:46:45.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.699" endtime="20201029 12:46:45.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.698" endtime="20201029 12:46:45.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:45.008" level="INFO">${RESULT} = [{'diff': 0.0003477640000000004}, {'diff': 0.000343292000000002}, {'diff': 0.00034304199999999826}, {'diff': 0.00034377699999999997}, {'diff': 0.0003394720000000004}, {'diff': 0.000339306000000001}, {...</msg>
<status status="PASS" starttime="20201029 12:46:45.005" endtime="20201029 12:46:45.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:45.013" level="INFO">${ACCURACY} = {'diff': [0.0003477640000000004, 0.000343292000000002, 0.00034304199999999826, 0.00034377699999999997, 0.0003394720000000004, 0.000339306000000001, 0.0003402779999999994, 0.0003408329999999987, 0.0003...</msg>
<status status="PASS" starttime="20201029 12:46:45.009" endtime="20201029 12:46:45.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.017" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:46:45.016" endtime="20201029 12:46:45.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.019" level="INFO">VALUE: [0.0003477640000000004, 0.000343292000000002, 0.00034304199999999826, 0.00034377699999999997, 0.0003394720000000004, 0.000339306000000001, 0.0003402779999999994, 0.0003408329999999987, 0.00034162500000000165, 0.00033825000000000174, 0.0003393200000000006, 0.00033938899999999897, 0.00034204200000000073, 0.0003398610000000038, 0.0003427920000000015, 0.0003391249999999957, 0.0003417780000000009, 0.000343000000000003, 0.0003412500000000013, 0.0003437219999999977, 0.00033876299999999887, 0.0003393610000000033, 0.00033998600000000045, 0.0003423050000000011, 0.0003386529999999943, 0.0003442219999999982, 0.00034284799999999976, 0.0003411659999999969, 0.00034301399999999566, 0.0003439450000000052, 0.00034036099999999736, 0.0003423200000000001, 0.00033954199999999823, 0.0003386250000000021, 0.000343485999999997, 0.0003389589999999998, 0.0003431110000000001, 0.0003427639999999954, 0.0003399170000000021, 0.0003415000000000015, 0.00033808299999999597, 0.000337999999999998, 0.0003432219999999972, 0.0003435000000000035, 0.00033980599999999805, 0.0003387220000000066, 0.0003399450000000012, 0.0003394580000000008, 0.0003433050000000021, 0.00033780599999999605]</msg>
<status status="PASS" starttime="20201029 12:46:45.018" endtime="20201029 12:46:45.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.013" endtime="20201029 12:46:45.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:45.025" endtime="20201029 12:46:45.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.024" endtime="20201029 12:46:45.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.023" endtime="20201029 12:46:45.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.642" endtime="20201029 12:46:45.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.641" endtime="20201029 12:46:45.046"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.055" endtime="20201029 12:46:45.092"></status>
</kw>
<msg timestamp="20201029 12:46:45.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.053" endtime="20201029 12:46:45.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.094" endtime="20201029 12:46:45.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.096" endtime="20201029 12:46:45.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.051" endtime="20201029 12:46:45.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.049" endtime="20201029 12:46:45.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.105" endtime="20201029 12:46:45.391"></status>
</kw>
<msg timestamp="20201029 12:46:45.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023640917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023979333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.104" endtime="20201029 12:46:45.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023640917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023979333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.395" endtime="20201029 12:46:45.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.403" endtime="20201029 12:46:45.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.101" endtime="20201029 12:46:45.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.099" endtime="20201029 12:46:45.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:45.410" level="INFO">${RESULT} = [{'diff': 0.00033841599999999764}, {'diff': 0.00034192999999999724}, {'diff': 0.0003404169999999991}, {'diff': 0.00033898599999999945}, {'diff': 0.00034245800000000035}, {'diff': 0.0003383329999999997...</msg>
<status status="PASS" starttime="20201029 12:46:45.407" endtime="20201029 12:46:45.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:45.415" level="INFO">${ACCURACY} = {'diff': [0.00033841599999999764, 0.00034192999999999724, 0.0003404169999999991, 0.00033898599999999945, 0.00034245800000000035, 0.0003383329999999997, 0.00034029200000000245, 0.00033920800000000056, ...</msg>
<status status="PASS" starttime="20201029 12:46:45.411" endtime="20201029 12:46:45.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.419" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:46:45.418" endtime="20201029 12:46:45.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.422" level="INFO">VALUE: [0.00033841599999999764, 0.00034192999999999724, 0.0003404169999999991, 0.00033898599999999945, 0.00034245800000000035, 0.0003383329999999997, 0.00034029200000000245, 0.00033920800000000056, 0.00034351300000000015, 0.00033802800000000063, 0.0003436110000000006, 0.0003395559999999978, 0.00034204200000000073, 0.0003384300000000007, 0.0003439449999999983, 0.00034122200000000213, 0.0003380559999999998, 0.00033845900000000276, 0.00033872199999999963, 0.00034268000000000146, 0.0003441110000000011, 0.0003441110000000011, 0.00034230600000000055, 0.0003394170000000016, 0.0003401250000000036, 0.00034141599999999717, 0.00033816700000000033, 0.00033934799999999626, 0.0003430419999999948, 0.00033938900000000244, 0.0003435000000000035, 0.00034218099999999696, 0.000338403000000001, 0.0003395689999999979, 0.0003427780000000019, 0.00034405500000000283, 0.0003396250000000031, 0.0003424170000000046, 0.0003384300000000007, 0.0003432079999999976, 0.00034270800000000406, 0.0003424579999999969, 0.0003409439999999958, 0.0003384719999999994, 0.00034091699999999614, 0.00034237499999999893, 0.0003425560000000008, 0.0003427920000000015, 0.00034281900000000115, 0.0003380139999999976]</msg>
<status status="PASS" starttime="20201029 12:46:45.421" endtime="20201029 12:46:45.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.416" endtime="20201029 12:46:45.428"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:45.432" endtime="20201029 12:46:45.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.430" endtime="20201029 12:46:45.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.429" endtime="20201029 12:46:45.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.047" endtime="20201029 12:46:45.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.047" endtime="20201029 12:46:45.453"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.461" endtime="20201029 12:46:45.500"></status>
</kw>
<msg timestamp="20201029 12:46:45.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.460" endtime="20201029 12:46:45.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.501" endtime="20201029 12:46:45.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.504" endtime="20201029 12:46:45.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.457" endtime="20201029 12:46:45.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.455" endtime="20201029 12:46:45.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.513" endtime="20201029 12:46:45.801"></status>
</kw>
<msg timestamp="20201029 12:46:45.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024304861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024643917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.511" endtime="20201029 12:46:45.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024304861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024643917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.805" endtime="20201029 12:46:45.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.813" endtime="20201029 12:46:45.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.509" endtime="20201029 12:46:45.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.507" endtime="20201029 12:46:45.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:45.819" level="INFO">${RESULT} = [{'diff': 0.0003390560000000008}, {'diff': 0.0003415979999999985}, {'diff': 0.0003435980000000005}, {'diff': 0.0003416530000000008}, {'diff': 0.0003403199999999981}, {'diff': 0.0003421109999999991}, {...</msg>
<status status="PASS" starttime="20201029 12:46:45.816" endtime="20201029 12:46:45.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:45.823" level="INFO">${ACCURACY} = {'diff': [0.0003390560000000008, 0.0003415979999999985, 0.0003435980000000005, 0.0003416530000000008, 0.0003403199999999981, 0.0003421109999999991, 0.0003379860000000019, 0.0003385560000000003, 0.0003...</msg>
<status status="PASS" starttime="20201029 12:46:45.820" endtime="20201029 12:46:45.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.828" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:46:45.827" endtime="20201029 12:46:45.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.830" level="INFO">VALUE: [0.0003390560000000008, 0.0003415979999999985, 0.0003435980000000005, 0.0003416530000000008, 0.0003403199999999981, 0.0003421109999999991, 0.0003379860000000019, 0.0003385560000000003, 0.00034072299999999764, 0.0003424170000000011, 0.00034299999999999956, 0.00034168099999999993, 0.0003414720000000024, 0.00034012500000000015, 0.00034313899999999925, 0.00034258399999999994, 0.0003410559999999993, 0.00034230600000000055, 0.00033983400000000066, 0.0003407360000000012, 0.00034015300000000276, 0.0003405140000000001, 0.000343388, 0.0003404720000000014, 0.0003381809999999999, 0.0003394170000000016, 0.00033833400000000263, 0.00033798599999999845, 0.000339403000000002, 0.00033901400000000553, 0.00034019500000000147, 0.0003441529999999998, 0.0003427219999999967, 0.0003426249999999992, 0.0003442500000000043, 0.000339291999999998, 0.000342777999999995, 0.00034023599999999377, 0.0003445140000000041, 0.00033854199999999723, 0.00034052799999999966, 0.00034088900000000394, 0.0003383329999999962, 0.0003389439999999938, 0.000343292000000002, 0.00033909699999999654, 0.00033956900000000484, 0.0003443890000000005, 0.00034430499999999614, 0.00034302800000000216]</msg>
<status status="PASS" starttime="20201029 12:46:45.829" endtime="20201029 12:46:45.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.824" endtime="20201029 12:46:45.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:45.836" endtime="20201029 12:46:45.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.834" endtime="20201029 12:46:45.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.833" endtime="20201029 12:46:45.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.453" endtime="20201029 12:46:45.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.453" endtime="20201029 12:46:45.856"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.865" endtime="20201029 12:46:45.900"></status>
</kw>
<msg timestamp="20201029 12:46:45.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.863" endtime="20201029 12:46:45.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.902" endtime="20201029 12:46:45.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.905" endtime="20201029 12:46:45.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.861" endtime="20201029 12:46:45.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.859" endtime="20201029 12:46:45.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.914" endtime="20201029 12:46:46.201"></status>
</kw>
<msg timestamp="20201029 12:46:46.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022375222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.913" endtime="20201029 12:46:46.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022375222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.205" endtime="20201029 12:46:46.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.213" endtime="20201029 12:46:46.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.910" endtime="20201029 12:46:46.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.908" endtime="20201029 12:46:46.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:46.219" level="INFO">${RESULT} = [{'diff': 0.00033788900000000094}, {'diff': 0.0003405140000000001}, {'diff': 0.0003426109999999996}, {'diff': 0.0003430139999999991}, {'diff': 0.00033929200000000145}, {'diff': 0.0003412360000000017},...</msg>
<status status="PASS" starttime="20201029 12:46:46.216" endtime="20201029 12:46:46.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:46.224" level="INFO">${ACCURACY} = {'diff': [0.00033788900000000094, 0.0003405140000000001, 0.0003426109999999996, 0.0003430139999999991, 0.00033929200000000145, 0.0003412360000000017, 0.0003384579999999998, 0.0003435139999999996, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:46.220" endtime="20201029 12:46:46.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.228" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:46:46.227" endtime="20201029 12:46:46.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.231" level="INFO">VALUE: [0.00033788900000000094, 0.0003405140000000001, 0.0003426109999999996, 0.0003430139999999991, 0.00033929200000000145, 0.0003412360000000017, 0.0003384579999999998, 0.0003435139999999996, 0.0003433470000000008, 0.0003422499999999988, 0.0003426249999999992, 0.0003438469999999978, 0.00033788900000000094, 0.00033870800000000006, 0.0003429310000000012, 0.0003419719999999994, 0.00033940299999999854, 0.0003384999999999985, 0.0003428049999999981, 0.0003417079999999996, 0.0003415000000000015, 0.0003412780000000004, 0.00034030599999999855, 0.0003414719999999989, 0.0003410689999999994, 0.0003416800000000039, 0.00033988900000000294, 0.00034022200000000113, 0.0003384999999999985, 0.0003427230000000031, 0.00034387500000000043, 0.0003408049999999996, 0.00034320900000000404, 0.0003411529999999968, 0.0003398329999999977, 0.00033820799999999956, 0.00033983400000000413, 0.00034402800000000316, 0.00034219499999999653, 0.00034442999999999974, 0.00033908299999999697, 0.00034302699999999575, 0.00034337499999999993, 0.0003397919999999985, 0.0003381809999999999, 0.0003386529999999943, 0.0003439449999999983, 0.0003442910000000035, 0.00033944400000000124, 0.0003410689999999994]</msg>
<status status="PASS" starttime="20201029 12:46:46.229" endtime="20201029 12:46:46.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.224" endtime="20201029 12:46:46.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:46.237" endtime="20201029 12:46:46.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.235" endtime="20201029 12:46:46.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.234" endtime="20201029 12:46:46.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.857" endtime="20201029 12:46:46.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.857" endtime="20201029 12:46:46.257"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.266" endtime="20201029 12:46:46.303"></status>
</kw>
<msg timestamp="20201029 12:46:46.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.264" endtime="20201029 12:46:46.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.305" endtime="20201029 12:46:46.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.307" endtime="20201029 12:46:46.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.262" endtime="20201029 12:46:46.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.260" endtime="20201029 12:46:46.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.316" endtime="20201029 12:46:46.601"></status>
</kw>
<msg timestamp="20201029 12:46:46.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023304042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023638236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.315" endtime="20201029 12:46:46.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023304042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023638236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.605" endtime="20201029 12:46:46.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.613" endtime="20201029 12:46:46.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.312" endtime="20201029 12:46:46.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.310" endtime="20201029 12:46:46.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:46.620" level="INFO">${RESULT} = [{'diff': 0.00033419399999999946}, {'diff': 0.00033886099999999933}, {'diff': 0.0003414720000000024}, {'diff': 0.00034391699999999914}, {'diff': 0.0003397499999999998}, {'diff': 0.0003386250000000021}...</msg>
<status status="PASS" starttime="20201029 12:46:46.617" endtime="20201029 12:46:46.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:46.625" level="INFO">${ACCURACY} = {'diff': [0.00033419399999999946, 0.00033886099999999933, 0.0003414720000000024, 0.00034391699999999914, 0.0003397499999999998, 0.0003386250000000021, 0.00034266700000000136, 0.00034369399999999856, 0...</msg>
<status status="PASS" starttime="20201029 12:46:46.621" endtime="20201029 12:46:46.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.630" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:46:46.628" endtime="20201029 12:46:46.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.632" level="INFO">VALUE: [0.00033419399999999946, 0.00033886099999999933, 0.0003414720000000024, 0.00034391699999999914, 0.0003397499999999998, 0.0003386250000000021, 0.00034266700000000136, 0.00034369399999999856, 0.000338306, 0.0003380420000000002, 0.0003426529999999983, 0.0003384300000000007, 0.0003446250000000012, 0.0003415979999999985, 0.00034204200000000073, 0.00034066700000000283, 0.0003434860000000005, 0.00033854100000000123, 0.0003397499999999998, 0.00033938900000000244, 0.0003442089999999981, 0.000340194000000002, 0.0003429720000000039, 0.00033826399999999784, 0.0003424720000000034, 0.00034319399999999806, 0.00034387500000000043, 0.0003421109999999991, 0.0003382779999999974, 0.00033915300000000176, 0.0003429859999999965, 0.0003442780000000034, 0.00034387500000000043, 0.0003441669999999994, 0.0003383060000000035, 0.0003445560000000028, 0.0003390269999999987, 0.0003436250000000002, 0.0003399720000000009, 0.00034108299999999897, 0.00034004099999999926, 0.00034340299999999907, 0.00033937500000000287, 0.0003442079999999986, 0.00034069500000000197, 0.0003423339999999997, 0.00034226400000000184, 0.0003423200000000001, 0.000338194, 0.0003390559999999973]</msg>
<status status="PASS" starttime="20201029 12:46:46.631" endtime="20201029 12:46:46.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.626" endtime="20201029 12:46:46.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:46.637" endtime="20201029 12:46:46.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.635" endtime="20201029 12:46:46.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.634" endtime="20201029 12:46:46.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.258" endtime="20201029 12:46:46.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.258" endtime="20201029 12:46:46.658"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.667" endtime="20201029 12:46:46.705"></status>
</kw>
<msg timestamp="20201029 12:46:46.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.665" endtime="20201029 12:46:46.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.706" endtime="20201029 12:46:46.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.709" endtime="20201029 12:46:46.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.663" endtime="20201029 12:46:46.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.660" endtime="20201029 12:46:46.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.718" endtime="20201029 12:46:47.005"></status>
</kw>
<msg timestamp="20201029 12:46:47.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024672639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025005125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.717" endtime="20201029 12:46:47.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024672639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025005125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.009" endtime="20201029 12:46:47.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.018" endtime="20201029 12:46:47.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.714" endtime="20201029 12:46:47.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.712" endtime="20201029 12:46:47.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:47.024" level="INFO">${RESULT} = [{'diff': 0.0003324859999999999}, {'diff': 0.00033902800000000163}, {'diff': 0.0003427080000000006}, {'diff': 0.0003443890000000005}, {'diff': 0.00034126400000000084}, {'diff': 0.0003390139999999986},...</msg>
<status status="PASS" starttime="20201029 12:46:47.021" endtime="20201029 12:46:47.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:47.028" level="INFO">${ACCURACY} = {'diff': [0.0003324859999999999, 0.00033902800000000163, 0.0003427080000000006, 0.0003443890000000005, 0.00034126400000000084, 0.0003390139999999986, 0.00034377799999999945, 0.0003395139999999991, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:47.025" endtime="20201029 12:46:47.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.033" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:46:47.032" endtime="20201029 12:46:47.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.035" level="INFO">VALUE: [0.0003324859999999999, 0.00033902800000000163, 0.0003427080000000006, 0.0003443890000000005, 0.00034126400000000084, 0.0003390139999999986, 0.00034377799999999945, 0.0003395139999999991, 0.0003381389999999977, 0.0003414170000000001, 0.00034034700000000126, 0.0003419310000000002, 0.000340291999999999, 0.00033955499999999833, 0.00034240300000000154, 0.0003383749999999984, 0.00034031899999999865, 0.0003406390000000002, 0.00034436100000000136, 0.000339597000000004, 0.00034277700000000244, 0.0003409160000000036, 0.0003381809999999999, 0.00033937499999999593, 0.0003392359999999997, 0.00034286099999999986, 0.00033888900000000194, 0.00034315300000000576, 0.00034069500000000197, 0.00034469399999999956, 0.0003386810000000004, 0.0003432089999999971, 0.00033976399999999934, 0.0003415689999999999, 0.0003434019999999996, 0.00033911100000000305, 0.00033927800000000535, 0.00034184700000000623, 0.0003431249999999997, 0.00034430600000000255, 0.00034347300000000386, 0.00034180600000000005, 0.00034059800000000445, 0.00034136099999999836, 0.0003431379999999998, 0.0003405830000000054, 0.0003426800000000049, 0.00034304200000000173, 0.0003382770000000049, 0.00034436100000000136]</msg>
<status status="PASS" starttime="20201029 12:46:47.034" endtime="20201029 12:46:47.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.029" endtime="20201029 12:46:47.037"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:47.040" endtime="20201029 12:46:47.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.039" endtime="20201029 12:46:47.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.038" endtime="20201029 12:46:47.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.659" endtime="20201029 12:46:47.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.658" endtime="20201029 12:46:47.061"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.070" endtime="20201029 12:46:47.106"></status>
</kw>
<msg timestamp="20201029 12:46:47.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.068" endtime="20201029 12:46:47.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.108" endtime="20201029 12:46:47.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.111" endtime="20201029 12:46:47.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.066" endtime="20201029 12:46:47.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.064" endtime="20201029 12:46:47.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.120" endtime="20201029 12:46:47.405"></status>
</kw>
<msg timestamp="20201029 12:46:47.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023362986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023704542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.118" endtime="20201029 12:46:47.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023362986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023704542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.409" endtime="20201029 12:46:47.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.417" endtime="20201029 12:46:47.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.116" endtime="20201029 12:46:47.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.114" endtime="20201029 12:46:47.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:47.424" level="INFO">${RESULT} = [{'diff': 0.0003415559999999998}, {'diff': 0.0003438049999999991}, {'diff': 0.0003426110000000031}, {'diff': 0.000342888999999999}, {'diff': 0.0003405140000000001}, {'diff': 0.00034155500000000033}, {...</msg>
<status status="PASS" starttime="20201029 12:46:47.421" endtime="20201029 12:46:47.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:47.428" level="INFO">${ACCURACY} = {'diff': [0.0003415559999999998, 0.0003438049999999991, 0.0003426110000000031, 0.000342888999999999, 0.0003405140000000001, 0.00034155500000000033, 0.00034052799999999966, 0.00033802800000000063, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:47.425" endtime="20201029 12:46:47.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.433" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:46:47.432" endtime="20201029 12:46:47.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.435" level="INFO">VALUE: [0.0003415559999999998, 0.0003438049999999991, 0.0003426110000000031, 0.000342888999999999, 0.0003405140000000001, 0.00034155500000000033, 0.00034052799999999966, 0.00033802800000000063, 0.0003435279999999992, 0.00033884699999999976, 0.000343083999999997, 0.0003421109999999991, 0.00034248699999999896, 0.0003434439999999983, 0.00034387500000000043, 0.00034372300000000064, 0.0003410559999999993, 0.0003413329999999992, 0.0003403750000000004, 0.0003421529999999978, 0.0003418750000000019, 0.00034374999999999684, 0.0003411109999999981, 0.00034163899999999775, 0.00033816600000000085, 0.00034026300000000037, 0.0003435000000000035, 0.00033808399999999544, 0.00034354200000000223, 0.00033804199999999673, 0.0003431120000000065, 0.0003414160000000041, 0.0003421390000000052, 0.0003414439999999963, 0.00034187500000000537, 0.00034369399999999856, 0.000340679999999996, 0.0003433330000000012, 0.0003390830000000039, 0.00033940299999999507, 0.00034290299999999857, 0.0003440969999999946, 0.0003434449999999978, 0.0003437500000000038, 0.00034109699999999854, 0.00033937499999999593, 0.000344098000000001, 0.0003443609999999944, 0.00034241599999999817, 0.0003430690000000014]</msg>
<status status="PASS" starttime="20201029 12:46:47.434" endtime="20201029 12:46:47.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.429" endtime="20201029 12:46:47.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:47.441" endtime="20201029 12:46:47.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.439" endtime="20201029 12:46:47.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.438" endtime="20201029 12:46:47.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.062" endtime="20201029 12:46:47.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.061" endtime="20201029 12:46:47.462"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.470" endtime="20201029 12:46:47.508"></status>
</kw>
<msg timestamp="20201029 12:46:47.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.469" endtime="20201029 12:46:47.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.510" endtime="20201029 12:46:47.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.512" endtime="20201029 12:46:47.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.466" endtime="20201029 12:46:47.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.464" endtime="20201029 12:46:47.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.521" endtime="20201029 12:46:47.808"></status>
</kw>
<msg timestamp="20201029 12:46:47.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024714097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025065208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.520" endtime="20201029 12:46:47.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024714097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025065208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.812" endtime="20201029 12:46:47.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.820" endtime="20201029 12:46:47.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.517" endtime="20201029 12:46:47.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.515" endtime="20201029 12:46:47.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:47.827" level="INFO">${RESULT} = [{'diff': 0.0003511109999999977}, {'diff': 0.0003427639999999989}, {'diff': 0.000341292}, {'diff': 0.0003436110000000006}, {'diff': 0.0003407500000000008}, {'diff': 0.0003414719999999989}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 12:46:47.824" endtime="20201029 12:46:47.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:47.832" level="INFO">${ACCURACY} = {'diff': [0.0003511109999999977, 0.0003427639999999989, 0.000341292, 0.0003436110000000006, 0.0003407500000000008, 0.0003414719999999989, 0.00033944400000000124, 0.00034102800000000016, 0.000341819999...</msg>
<status status="PASS" starttime="20201029 12:46:47.828" endtime="20201029 12:46:47.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.836" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:46:47.835" endtime="20201029 12:46:47.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.839" level="INFO">VALUE: [0.0003511109999999977, 0.0003427639999999989, 0.000341292, 0.0003436110000000006, 0.0003407500000000008, 0.0003414719999999989, 0.00033944400000000124, 0.00034102800000000016, 0.0003418199999999996, 0.0003400840000000009, 0.00034095799999999885, 0.00033826399999999784, 0.0003443469999999983, 0.0003385689999999969, 0.0003431659999999989, 0.0003393330000000007, 0.0003417780000000009, 0.00033856900000000037, 0.0003411249999999977, 0.00034165199999999785, 0.0003382779999999974, 0.00034198600000000245, 0.00033838900000000144, 0.00033787500000000137, 0.0003384579999999998, 0.0003400689999999984, 0.0003406810000000024, 0.0003431110000000001, 0.0003399309999999947, 0.0003397219999999937, 0.000342888999999999, 0.00033992999999999524, 0.00034176400000000134, 0.00034108399999999844, 0.0003439999999999971, 0.0003417780000000009, 0.0003384449999999997, 0.00034292999999999824, 0.0003444309999999992, 0.0003391810000000009, 0.000343098, 0.0003429170000000051, 0.0003424729999999959, 0.00034240200000000554, 0.0003401379999999968, 0.00034158399999999894, 0.0003412219999999952, 0.00034076400000000034, 0.0003437219999999977, 0.00033840299999999407]</msg>
<status status="PASS" starttime="20201029 12:46:47.837" endtime="20201029 12:46:47.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.833" endtime="20201029 12:46:47.840"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:47.844" endtime="20201029 12:46:47.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.842" endtime="20201029 12:46:47.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.841" endtime="20201029 12:46:47.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.463" endtime="20201029 12:46:47.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.462" endtime="20201029 12:46:47.865"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.873" endtime="20201029 12:46:47.910"></status>
</kw>
<msg timestamp="20201029 12:46:47.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.872" endtime="20201029 12:46:47.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.911" endtime="20201029 12:46:47.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.914" endtime="20201029 12:46:47.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.869" endtime="20201029 12:46:47.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.867" endtime="20201029 12:46:47.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.924" endtime="20201029 12:46:48.211"></status>
</kw>
<msg timestamp="20201029 12:46:48.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023700875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024060111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.922" endtime="20201029 12:46:48.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023700875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024060111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.215" endtime="20201029 12:46:48.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.223" endtime="20201029 12:46:48.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.919" endtime="20201029 12:46:48.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.917" endtime="20201029 12:46:48.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:48.229" level="INFO">${RESULT} = [{'diff': 0.0003592359999999989}, {'diff': 0.0003433189999999982}, {'diff': 0.0003379579999999993}, {'diff': 0.0003435690000000019}, {'diff': 0.000341679999999997}, {'diff': 0.00033908299999999697}, {...</msg>
<status status="PASS" starttime="20201029 12:46:48.226" endtime="20201029 12:46:48.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:48.234" level="INFO">${ACCURACY} = {'diff': [0.0003592359999999989, 0.0003433189999999982, 0.0003379579999999993, 0.0003435690000000019, 0.000341679999999997, 0.00033908299999999697, 0.00034308400000000044, 0.0003403199999999981, 0.000...</msg>
<status status="PASS" starttime="20201029 12:46:48.231" endtime="20201029 12:46:48.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.238" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:46:48.237" endtime="20201029 12:46:48.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.240" level="INFO">VALUE: [0.0003592359999999989, 0.0003433189999999982, 0.0003379579999999993, 0.0003435690000000019, 0.000341679999999997, 0.00033908299999999697, 0.00034308400000000044, 0.0003403199999999981, 0.00034190300000000104, 0.0003378749999999979, 0.00034345800000000135, 0.00033786099999999833, 0.0003397360000000002, 0.0003394439999999978, 0.0003378329999999992, 0.0003386389999999982, 0.000339097, 0.0003396529999999988, 0.000343889, 0.00033816600000000085, 0.0003395130000000031, 0.00034404200000000273, 0.0003400689999999984, 0.000341292, 0.0003384999999999985, 0.0003411119999999976, 0.0003431110000000001, 0.000339888999999996, 0.0003402500000000003, 0.0003393329999999972, 0.00034258300000000047, 0.000339194000000001, 0.00034041599999999617, 0.00034369399999999856, 0.0003398049999999986, 0.00034186200000000527, 0.0003426659999999984, 0.0003422360000000027, 0.00034286099999999986, 0.00033997300000000036, 0.00034424999999999734, 0.00033843100000000015, 0.0003442219999999982, 0.000340291999999999, 0.00033930599999999755, 0.0003426109999999996, 0.00034258300000000047, 0.00033832000000000306, 0.0003381250000000016, 0.00033808299999999597]</msg>
<status status="PASS" starttime="20201029 12:46:48.239" endtime="20201029 12:46:48.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.235" endtime="20201029 12:46:48.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:48.246" endtime="20201029 12:46:48.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.244" endtime="20201029 12:46:48.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.243" endtime="20201029 12:46:48.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.866" endtime="20201029 12:46:48.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.865" endtime="20201029 12:46:48.266"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.275" endtime="20201029 12:46:48.313"></status>
</kw>
<msg timestamp="20201029 12:46:48.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.273" endtime="20201029 12:46:48.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.314" endtime="20201029 12:46:48.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.317" endtime="20201029 12:46:48.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.271" endtime="20201029 12:46:48.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.269" endtime="20201029 12:46:48.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.326" endtime="20201029 12:46:48.612"></status>
</kw>
<msg timestamp="20201029 12:46:48.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023900486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024241278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.324" endtime="20201029 12:46:48.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023900486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024241278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.616" endtime="20201029 12:46:48.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.624" endtime="20201029 12:46:48.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.322" endtime="20201029 12:46:48.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.320" endtime="20201029 12:46:48.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:48.631" level="INFO">${RESULT} = [{'diff': 0.00034079200000000295}, {'diff': 0.00034248600000000295}, {'diff': 0.00034131899999999965}, {'diff': 0.00034155499999999686}, {'diff': 0.0003414439999999998}, {'diff': 0.0003435699999999979...</msg>
<status status="PASS" starttime="20201029 12:46:48.628" endtime="20201029 12:46:48.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:48.635" level="INFO">${ACCURACY} = {'diff': [0.00034079200000000295, 0.00034248600000000295, 0.00034131899999999965, 0.00034155499999999686, 0.0003414439999999998, 0.0003435699999999979, 0.0003388610000000028, 0.00034186099999999886, 0...</msg>
<status status="PASS" starttime="20201029 12:46:48.632" endtime="20201029 12:46:48.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.639" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:46:48.638" endtime="20201029 12:46:48.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.642" level="INFO">VALUE: [0.00034079200000000295, 0.00034248600000000295, 0.00034131899999999965, 0.00034155499999999686, 0.0003414439999999998, 0.0003435699999999979, 0.0003388610000000028, 0.00034186099999999886, 0.00034295800000000085, 0.00034016600000000285, 0.0003411110000000016, 0.0003430829999999975, 0.0003438200000000016, 0.00033872199999999963, 0.00033820899999999904, 0.0003411530000000003, 0.0003386800000000009, 0.00033898599999999945, 0.00034368099999999846, 0.00034072200000000163, 0.00034023700000000365, 0.0003429580000000043, 0.0003387779999999979, 0.00034144400000000324, 0.00034359700000000104, 0.00034002799999999916, 0.0003413339999999987, 0.0003380970000000025, 0.0003426109999999996, 0.00034415200000000035, 0.0003429859999999965, 0.00033838900000000144, 0.00034380499999999564, 0.00033837499999999493, 0.00033870899999999954, 0.0003419579999999964, 0.00034219500000000347, 0.0003417639999999944, 0.000341679999999997, 0.0003405699999999984, 0.0003399030000000025, 0.0003384730000000058, 0.0003419590000000028, 0.000342403000000005, 0.0003422780000000014, 0.0003380830000000029, 0.000341000000000001, 0.0003397360000000002, 0.00034416700000000633, 0.0003419720000000029]</msg>
<status status="PASS" starttime="20201029 12:46:48.641" endtime="20201029 12:46:48.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.636" endtime="20201029 12:46:48.644"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:48.648" endtime="20201029 12:46:48.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.646" endtime="20201029 12:46:48.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.645" endtime="20201029 12:46:48.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.267" endtime="20201029 12:46:48.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.267" endtime="20201029 12:46:48.669"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.677" endtime="20201029 12:46:48.719"></status>
</kw>
<msg timestamp="20201029 12:46:48.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.676" endtime="20201029 12:46:48.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.721" endtime="20201029 12:46:48.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.723" endtime="20201029 12:46:48.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.673" endtime="20201029 12:46:48.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.671" endtime="20201029 12:46:48.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.732" endtime="20201029 12:46:49.019"></status>
</kw>
<msg timestamp="20201029 12:46:49.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023624528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023954667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.731" endtime="20201029 12:46:49.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023624528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023954667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.023" endtime="20201029 12:46:49.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.031" endtime="20201029 12:46:49.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.728" endtime="20201029 12:46:49.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.726" endtime="20201029 12:46:49.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:49.038" level="INFO">${RESULT} = [{'diff': 0.0003301390000000001}, {'diff': 0.00034117999999999996}, {'diff': 0.0003444449999999988}, {'diff': 0.0003427499999999993}, {'diff': 0.0003430139999999991}, {'diff': 0.00033912499999999915},...</msg>
<status status="PASS" starttime="20201029 12:46:49.035" endtime="20201029 12:46:49.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:49.043" level="INFO">${ACCURACY} = {'diff': [0.0003301390000000001, 0.00034117999999999996, 0.0003444449999999988, 0.0003427499999999993, 0.0003430139999999991, 0.00033912499999999915, 0.00034398700000000046, 0.0003383329999999997, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:49.039" endtime="20201029 12:46:49.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.047" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:46:49.046" endtime="20201029 12:46:49.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.050" level="INFO">VALUE: [0.0003301390000000001, 0.00034117999999999996, 0.0003444449999999988, 0.0003427499999999993, 0.0003430139999999991, 0.00033912499999999915, 0.00034398700000000046, 0.0003383329999999997, 0.00034368000000000246, 0.00034054199999999923, 0.00033901400000000206, 0.00034330600000000155, 0.00034423599999999777, 0.0003413329999999992, 0.0003409299999999997, 0.0003394580000000008, 0.00034066699999999936, 0.0003408750000000009, 0.000342694000000001, 0.00034076400000000034, 0.00034451399999999716, 0.0003433470000000008, 0.00033959699999999704, 0.00034108399999999844, 0.0003395139999999991, 0.00034102800000000016, 0.0003426669999999979, 0.00033827800000000435, 0.00033911100000000305, 0.00034286099999999986, 0.00034247199999999645, 0.00033994400000000174, 0.0003383469999999958, 0.0003423339999999997, 0.00033855499999999733, 0.00033959800000000345, 0.0003416529999999973, 0.00034391699999999914, 0.0003445560000000028, 0.00034008399999999744, 0.0003435700000000014, 0.00034319499999999753, 0.00034120800000000256, 0.00033883300000000366, 0.0003434439999999983, 0.00034102800000000016, 0.0003431110000000001, 0.0003425690000000009, 0.00033980599999999805, 0.000343000000000003]</msg>
<status status="PASS" starttime="20201029 12:46:49.048" endtime="20201029 12:46:49.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.043" endtime="20201029 12:46:49.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:49.055" endtime="20201029 12:46:49.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.053" endtime="20201029 12:46:49.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.052" endtime="20201029 12:46:49.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.669" endtime="20201029 12:46:49.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.669" endtime="20201029 12:46:49.075"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.084" endtime="20201029 12:46:49.121"></status>
</kw>
<msg timestamp="20201029 12:46:49.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.083" endtime="20201029 12:46:49.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.123" endtime="20201029 12:46:49.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.125" endtime="20201029 12:46:49.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.080" endtime="20201029 12:46:49.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.078" endtime="20201029 12:46:49.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.134" endtime="20201029 12:46:49.421"></status>
</kw>
<msg timestamp="20201029 12:46:49.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023691056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024046208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.133" endtime="20201029 12:46:49.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023691056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024046208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.425" endtime="20201029 12:46:49.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.433" endtime="20201029 12:46:49.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.130" endtime="20201029 12:46:49.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.128" endtime="20201029 12:46:49.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:49.440" level="INFO">${RESULT} = [{'diff': 0.00035515200000000094}, {'diff': 0.0003392640000000023}, {'diff': 0.00033926399999999884}, {'diff': 0.00034109699999999854}, {'diff': 0.0003427499999999993}, {'diff': 0.00033920800000000056...</msg>
<status status="PASS" starttime="20201029 12:46:49.437" endtime="20201029 12:46:49.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:49.444" level="INFO">${ACCURACY} = {'diff': [0.00035515200000000094, 0.0003392640000000023, 0.00033926399999999884, 0.00034109699999999854, 0.0003427499999999993, 0.00033920800000000056, 0.0003397770000000029, 0.0003435699999999979, 0....</msg>
<status status="PASS" starttime="20201029 12:46:49.441" endtime="20201029 12:46:49.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.448" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:46:49.447" endtime="20201029 12:46:49.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.451" level="INFO">VALUE: [0.00035515200000000094, 0.0003392640000000023, 0.00033926399999999884, 0.00034109699999999854, 0.0003427499999999993, 0.00033920800000000056, 0.0003397770000000029, 0.0003435699999999979, 0.00034159699999999904, 0.00034273599999999974, 0.00033983400000000066, 0.00033905499999999783, 0.0003392499999999993, 0.0003437630000000004, 0.0003408339999999982, 0.0003429439999999978, 0.00034309700000000054, 0.0003415689999999999, 0.00034, 0.00034234799999999926, 0.0003429309999999977, 0.0003433889999999995, 0.00034058299999999847, 0.0003407500000000008, 0.00034395899999999785, 0.0003404309999999952, 0.0003401120000000035, 0.00034037499999999693, 0.0003435000000000035, 0.0003443330000000022, 0.0003380139999999976, 0.0003396940000000015, 0.0003390139999999986, 0.00034126300000000137, 0.00034454100000000376, 0.0003413889999999975, 0.0003395559999999978, 0.0003391810000000009, 0.00034441600000000017, 0.0003410140000000006, 0.0003421119999999986, 0.0003386940000000005, 0.00033976399999999934, 0.000342000000000002, 0.00033888900000000194, 0.0003419580000000033, 0.0003443890000000005, 0.0003403329999999982, 0.00033969500000000097, 0.0003425560000000008]</msg>
<status status="PASS" starttime="20201029 12:46:49.449" endtime="20201029 12:46:49.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.445" endtime="20201029 12:46:49.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:49.456" endtime="20201029 12:46:49.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.454" endtime="20201029 12:46:49.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.453" endtime="20201029 12:46:49.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.076" endtime="20201029 12:46:49.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.076" endtime="20201029 12:46:49.477"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.486" endtime="20201029 12:46:49.523"></status>
</kw>
<msg timestamp="20201029 12:46:49.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.484" endtime="20201029 12:46:49.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.524" endtime="20201029 12:46:49.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.527" endtime="20201029 12:46:49.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.481" endtime="20201029 12:46:49.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.479" endtime="20201029 12:46:49.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.536" endtime="20201029 12:46:49.822"></status>
</kw>
<msg timestamp="20201029 12:46:49.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024413597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024765917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.535" endtime="20201029 12:46:49.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024413597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024765917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.826" endtime="20201029 12:46:49.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.834" endtime="20201029 12:46:49.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.532" endtime="20201029 12:46:49.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.530" endtime="20201029 12:46:49.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:49.841" level="INFO">${RESULT} = [{'diff': 0.0003523199999999997}, {'diff': 0.0003404169999999991}, {'diff': 0.0003441250000000007}, {'diff': 0.00034140299999999707}, {'diff': 0.00034023599999999724}, {'diff': 0.00034108299999999897}...</msg>
<status status="PASS" starttime="20201029 12:46:49.838" endtime="20201029 12:46:49.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:49.845" level="INFO">${ACCURACY} = {'diff': [0.0003523199999999997, 0.0003404169999999991, 0.0003441250000000007, 0.00034140299999999707, 0.00034023599999999724, 0.00034108299999999897, 0.0003406529999999998, 0.0003413889999999975, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:49.842" endtime="20201029 12:46:49.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.849" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:46:49.848" endtime="20201029 12:46:49.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.852" level="INFO">VALUE: [0.0003523199999999997, 0.0003404169999999991, 0.0003441250000000007, 0.00034140299999999707, 0.00034023599999999724, 0.00034108299999999897, 0.0003406529999999998, 0.0003413889999999975, 0.00034318100000000143, 0.00034095799999999885, 0.0003439439999999988, 0.00034295800000000085, 0.0003382780000000009, 0.00034136099999999836, 0.0003421940000000005, 0.0003396519999999993, 0.0003404580000000018, 0.0003402230000000006, 0.0003410279999999967, 0.00033904099999999826, 0.00033794399999999974, 0.0003398190000000051, 0.00034366700000000583, 0.00034352800000000266, 0.00033858299999999647, 0.00033805499999999683, 0.00034191599999999767, 0.000338999999999999, 0.0003392359999999997, 0.0003406390000000037, 0.00034170800000000306, 0.00034152800000000066, 0.00034286099999999986, 0.0003392219999999932, 0.00034369399999999856, 0.00034119499999999553, 0.0003379310000000066, 0.0003419720000000029, 0.0003412230000000016, 0.0003419580000000033, 0.00034152800000000066, 0.00033955499999999833, 0.0003441529999999998, 0.0003434449999999978, 0.0003424999999999956, 0.00033851400000000503, 0.0003387500000000057, 0.00034037499999999693, 0.0003434580000000048, 0.0003436529999999993]</msg>
<status status="PASS" starttime="20201029 12:46:49.851" endtime="20201029 12:46:49.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.846" endtime="20201029 12:46:49.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:49.858" endtime="20201029 12:46:49.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.856" endtime="20201029 12:46:49.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.855" endtime="20201029 12:46:49.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.478" endtime="20201029 12:46:49.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.477" endtime="20201029 12:46:49.878"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.887" endtime="20201029 12:46:49.926"></status>
</kw>
<msg timestamp="20201029 12:46:49.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.886" endtime="20201029 12:46:49.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.928" endtime="20201029 12:46:49.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.930" endtime="20201029 12:46:49.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.883" endtime="20201029 12:46:49.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.881" endtime="20201029 12:46:49.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.939" endtime="20201029 12:46:50.226"></status>
</kw>
<msg timestamp="20201029 12:46:50.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024513972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024844472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.938" endtime="20201029 12:46:50.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024513972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024844472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.230" endtime="20201029 12:46:50.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.238" endtime="20201029 12:46:50.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.935" endtime="20201029 12:46:50.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.933" endtime="20201029 12:46:50.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:50.245" level="INFO">${RESULT} = [{'diff': 0.00033050000000000093}, {'diff': 0.0003383329999999997}, {'diff': 0.00034073599999999774}, {'diff': 0.0003435700000000014}, {'diff': 0.000341387999999998}, {'diff': 0.0003414719999999989}, ...</msg>
<status status="PASS" starttime="20201029 12:46:50.241" endtime="20201029 12:46:50.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:50.250" level="INFO">${ACCURACY} = {'diff': [0.00033050000000000093, 0.0003383329999999997, 0.00034073599999999774, 0.0003435700000000014, 0.000341387999999998, 0.0003414719999999989, 0.0003421530000000013, 0.0003433050000000021, 0.000...</msg>
<status status="PASS" starttime="20201029 12:46:50.246" endtime="20201029 12:46:50.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.254" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:46:50.253" endtime="20201029 12:46:50.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.257" level="INFO">VALUE: [0.00033050000000000093, 0.0003383329999999997, 0.00034073599999999774, 0.0003435700000000014, 0.000341387999999998, 0.0003414719999999989, 0.0003421530000000013, 0.0003433050000000021, 0.0003393879999999995, 0.0003436250000000002, 0.0003430690000000014, 0.0003383190000000001, 0.0003399439999999983, 0.00033866700000000083, 0.00034088900000000047, 0.000339598, 0.00034007000000000134, 0.0003405559999999988, 0.00033888900000000194, 0.00034065199999999685, 0.00034081899999999915, 0.0003425690000000009, 0.0003403329999999982, 0.00034108299999999897, 0.00034145899999999535, 0.00034122200000000213, 0.0003394450000000007, 0.0003415140000000011, 0.0003405140000000001, 0.00034037499999999693, 0.0003424170000000046, 0.00034152800000000066, 0.00033798599999999845, 0.00034208299999999997, 0.00034059699999999804, 0.0003440279999999962, 0.00033890299999999457, 0.00034137499999999793, 0.0003401390000000032, 0.0003408469999999983, 0.00033937500000000287, 0.000342292000000001, 0.0003405689999999989, 0.00034409700000000154, 0.0003408879999999975, 0.0003384019999999946, 0.00033816700000000033, 0.00033987499999999643, 0.0003418050000000006, 0.0003422780000000014]</msg>
<status status="PASS" starttime="20201029 12:46:50.255" endtime="20201029 12:46:50.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.251" endtime="20201029 12:46:50.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:50.262" endtime="20201029 12:46:50.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.260" endtime="20201029 12:46:50.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.259" endtime="20201029 12:46:50.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.879" endtime="20201029 12:46:50.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.879" endtime="20201029 12:46:50.283"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.291" endtime="20201029 12:46:50.327"></status>
</kw>
<msg timestamp="20201029 12:46:50.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.290" endtime="20201029 12:46:50.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.329" endtime="20201029 12:46:50.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.331" endtime="20201029 12:46:50.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.287" endtime="20201029 12:46:50.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.285" endtime="20201029 12:46:50.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.341" endtime="20201029 12:46:50.627"></status>
</kw>
<msg timestamp="20201029 12:46:50.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022416056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.339" endtime="20201029 12:46:50.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022416056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.631" endtime="20201029 12:46:50.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.639" endtime="20201029 12:46:50.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.336" endtime="20201029 12:46:50.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.335" endtime="20201029 12:46:50.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:50.646" level="INFO">${RESULT} = [{'diff': 0.0003370130000000006}, {'diff': 0.0003384170000000006}, {'diff': 0.00034054099999999976}, {'diff': 0.0003404169999999991}, {'diff': 0.0003388190000000006}, {'diff': 0.0003421530000000013}, ...</msg>
<status status="PASS" starttime="20201029 12:46:50.643" endtime="20201029 12:46:50.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:50.650" level="INFO">${ACCURACY} = {'diff': [0.0003370130000000006, 0.0003384170000000006, 0.00034054099999999976, 0.0003404169999999991, 0.0003388190000000006, 0.0003421530000000013, 0.0003386109999999991, 0.00034259700000000004, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:50.647" endtime="20201029 12:46:50.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.655" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:46:50.654" endtime="20201029 12:46:50.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.657" level="INFO">VALUE: [0.0003370130000000006, 0.0003384170000000006, 0.00034054099999999976, 0.0003404169999999991, 0.0003388190000000006, 0.0003421530000000013, 0.0003386109999999991, 0.00034259700000000004, 0.00033934700000000026, 0.0003409309999999992, 0.0003409309999999992, 0.00034361099999999714, 0.0003420560000000003, 0.0003436250000000002, 0.0003381809999999999, 0.00034405499999999936, 0.0003397079999999976, 0.0003382360000000022, 0.00034336199999999983, 0.00034083400000000166, 0.00033884699999999976, 0.000342791999999998, 0.0003420409999999978, 0.0003416949999999995, 0.00034272200000000017, 0.0003429579999999974, 0.00034002799999999916, 0.00034006900000000534, 0.000342000000000002, 0.00033881899999999715, 0.00034248700000000243, 0.0003397499999999998, 0.00033819499999999947, 0.00033794399999999974, 0.0003429309999999977, 0.00034433399999999476, 0.00033805499999999683, 0.0003416390000000047, 0.00033972200000000063, 0.000343292000000002, 0.0003443200000000021, 0.0003424300000000047, 0.00034005500000000577, 0.0003392909999999985, 0.0003382909999999975, 0.0003412370000000012, 0.0003411810000000029, 0.000341292, 0.0003426109999999996, 0.000341403000000004]</msg>
<status status="PASS" starttime="20201029 12:46:50.656" endtime="20201029 12:46:50.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.651" endtime="20201029 12:46:50.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:50.667" endtime="20201029 12:46:50.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.666" endtime="20201029 12:46:50.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.665" endtime="20201029 12:46:50.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.283" endtime="20201029 12:46:50.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.283" endtime="20201029 12:46:50.688"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.697" endtime="20201029 12:46:50.734"></status>
</kw>
<msg timestamp="20201029 12:46:50.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.695" endtime="20201029 12:46:50.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.736" endtime="20201029 12:46:50.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.738" endtime="20201029 12:46:50.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.693" endtime="20201029 12:46:50.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.691" endtime="20201029 12:46:50.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.747" endtime="20201029 12:46:51.032"></status>
</kw>
<msg timestamp="20201029 12:46:51.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023653444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024001528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.746" endtime="20201029 12:46:51.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023653444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024001528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.038" endtime="20201029 12:46:51.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.049" endtime="20201029 12:46:51.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.743" endtime="20201029 12:46:51.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.741" endtime="20201029 12:46:51.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.059" level="INFO">${RESULT} = [{'diff': 0.000348084000000002}, {'diff': 0.0003381109999999986}, {'diff': 0.0003414300000000002}, {'diff': 0.00033870800000000006}, {'diff': 0.00034392999999999924}, {'diff': 0.0003397919999999985}, ...</msg>
<status status="PASS" starttime="20201029 12:46:51.054" endtime="20201029 12:46:51.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:51.064" level="INFO">${ACCURACY} = {'diff': [0.000348084000000002, 0.0003381109999999986, 0.0003414300000000002, 0.00033870800000000006, 0.00034392999999999924, 0.0003397919999999985, 0.00034172199999999917, 0.0003425560000000008, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:51.060" endtime="20201029 12:46:51.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.070" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:46:51.069" endtime="20201029 12:46:51.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.072" level="INFO">VALUE: [0.000348084000000002, 0.0003381109999999986, 0.0003414300000000002, 0.00033870800000000006, 0.00034392999999999924, 0.0003397919999999985, 0.00034172199999999917, 0.0003425560000000008, 0.0003387499999999988, 0.0003380559999999998, 0.00034105499999999983, 0.0003401389999999997, 0.0003430269999999992, 0.0003379449999999992, 0.00034236099999999936, 0.00034245800000000035, 0.00034088900000000047, 0.00034323600000000024, 0.00034368000000000246, 0.00033990199999999957, 0.0003380550000000003, 0.0003395840000000039, 0.0003409450000000022, 0.0003403329999999982, 0.00034130599999999955, 0.00033805499999999683, 0.0003419999999999951, 0.00034036099999999736, 0.0003395139999999991, 0.0003442500000000043, 0.00034136099999999836, 0.0003384449999999997, 0.00034434800000000126, 0.00033943100000000115, 0.0003422500000000023, 0.000344292000000003, 0.0003431249999999997, 0.00034009699999999754, 0.0003427089999999966, 0.0003444450000000057, 0.0003439309999999987, 0.000340888999999997, 0.00034231900000000065, 0.0003393889999999955, 0.00033998600000000045, 0.00033798599999999845, 0.0003443470000000018, 0.0003430279999999952, 0.00034105499999999983, 0.00034368099999999846]</msg>
<status status="PASS" starttime="20201029 12:46:51.071" endtime="20201029 12:46:51.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.065" endtime="20201029 12:46:51.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.078" endtime="20201029 12:46:51.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.077" endtime="20201029 12:46:51.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.076" endtime="20201029 12:46:51.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.689" endtime="20201029 12:46:51.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.689" endtime="20201029 12:46:51.099"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.108" endtime="20201029 12:46:51.147"></status>
</kw>
<msg timestamp="20201029 12:46:51.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.106" endtime="20201029 12:46:51.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.148" endtime="20201029 12:46:51.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.151" endtime="20201029 12:46:51.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.104" endtime="20201029 12:46:51.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.102" endtime="20201029 12:46:51.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.160" endtime="20201029 12:46:51.446"></status>
</kw>
<msg timestamp="20201029 12:46:51.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024668611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025000375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.158" endtime="20201029 12:46:51.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024668611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025000375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.450" endtime="20201029 12:46:51.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.458" endtime="20201029 12:46:51.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.156" endtime="20201029 12:46:51.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.154" endtime="20201029 12:46:51.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.465" level="INFO">${RESULT} = [{'diff': 0.0003317639999999983}, {'diff': 0.0003438470000000013}, {'diff': 0.0003399720000000009}, {'diff': 0.00034055499999999933}, {'diff': 0.00033901400000000206}, {'diff': 0.00033990299999999904}...</msg>
<status status="PASS" starttime="20201029 12:46:51.462" endtime="20201029 12:46:51.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:51.470" level="INFO">${ACCURACY} = {'diff': [0.0003317639999999983, 0.0003438470000000013, 0.0003399720000000009, 0.00034055499999999933, 0.00033901400000000206, 0.00033990299999999904, 0.0003425140000000021, 0.00034036100000000083, 0....</msg>
<status status="PASS" starttime="20201029 12:46:51.466" endtime="20201029 12:46:51.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.474" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:46:51.473" endtime="20201029 12:46:51.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.477" level="INFO">VALUE: [0.0003317639999999983, 0.0003438470000000013, 0.0003399720000000009, 0.00034055499999999933, 0.00033901400000000206, 0.00033990299999999904, 0.0003425140000000021, 0.00034036100000000083, 0.00034465200000000085, 0.0003426109999999996, 0.00034062500000000065, 0.0003430279999999987, 0.00034048600000000095, 0.0003389580000000003, 0.0003437639999999999, 0.00034459699999999857, 0.0003437639999999999, 0.0003432499999999998, 0.00034241600000000164, 0.00034058299999999847, 0.00034304100000000226, 0.0003427089999999966, 0.00033936099999999636, 0.00034280600000000105, 0.0003416109999999986, 0.0003426109999999996, 0.0003387499999999988, 0.0003403469999999978, 0.0003420690000000004, 0.0003437639999999964, 0.0003410689999999994, 0.0003407779999999999, 0.00034341599999999917, 0.0003438050000000026, 0.0003410689999999994, 0.00034208299999999997, 0.000341485999999995, 0.0003431659999999989, 0.0003399030000000025, 0.0003414019999999976, 0.0003437219999999977, 0.00034033400000000463, 0.0003417500000000018, 0.0003442370000000042, 0.00034054199999999923, 0.0003408049999999996, 0.0003439449999999983, 0.00034202800000000116, 0.00034248600000000295, 0.00033970900000000054]</msg>
<status status="PASS" starttime="20201029 12:46:51.475" endtime="20201029 12:46:51.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.471" endtime="20201029 12:46:51.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.482" endtime="20201029 12:46:51.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.480" endtime="20201029 12:46:51.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.479" endtime="20201029 12:46:51.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.100" endtime="20201029 12:46:51.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.099" endtime="20201029 12:46:51.503"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.511" endtime="20201029 12:46:51.548"></status>
</kw>
<msg timestamp="20201029 12:46:51.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.510" endtime="20201029 12:46:51.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.550" endtime="20201029 12:46:51.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.552" endtime="20201029 12:46:51.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.507" endtime="20201029 12:46:51.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.505" endtime="20201029 12:46:51.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.561" endtime="20201029 12:46:51.848"></status>
</kw>
<msg timestamp="20201029 12:46:51.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023055292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023395708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.560" endtime="20201029 12:46:51.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023055292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023395708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.852" endtime="20201029 12:46:51.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.860" endtime="20201029 12:46:51.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.557" endtime="20201029 12:46:51.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.556" endtime="20201029 12:46:51.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.867" level="INFO">${RESULT} = [{'diff': 0.00034041599999999964}, {'diff': 0.00034020899999999757}, {'diff': 0.0003380000000000015}, {'diff': 0.0003384580000000033}, {'diff': 0.0003440409999999998}, {'diff': 0.0003410689999999994},...</msg>
<status status="PASS" starttime="20201029 12:46:51.864" endtime="20201029 12:46:51.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:51.871" level="INFO">${ACCURACY} = {'diff': [0.00034041599999999964, 0.00034020899999999757, 0.0003380000000000015, 0.0003384580000000033, 0.0003440409999999998, 0.0003410689999999994, 0.0003382360000000022, 0.00034169500000000297, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:51.868" endtime="20201029 12:46:51.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.875" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:46:51.874" endtime="20201029 12:46:51.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.878" level="INFO">VALUE: [0.00034041599999999964, 0.00034020899999999757, 0.0003380000000000015, 0.0003384580000000033, 0.0003440409999999998, 0.0003410689999999994, 0.0003382360000000022, 0.00034169500000000297, 0.00034336100000000036, 0.00034008300000000144, 0.00033884799999999923, 0.00033869499999999997, 0.00034326400000000284, 0.00034086100000000133, 0.00034354100000000276, 0.00034240300000000154, 0.0003399299999999987, 0.00034088900000000047, 0.0003423330000000002, 0.0003443059999999991, 0.00034380600000000205, 0.0003407230000000011, 0.00034118099999999943, 0.00033865300000000126, 0.00034302800000000216, 0.0003407500000000008, 0.0003390689999999974, 0.000339597000000004, 0.0003431249999999997, 0.00034006900000000534, 0.00034036099999999736, 0.0003409720000000019, 0.00033954099999999876, 0.00034020900000000104, 0.0003391520000000023, 0.0003429720000000039, 0.0003399590000000008, 0.0003419019999999981, 0.0003382499999999983, 0.00033798599999999845, 0.00034352800000000266, 0.0003404439999999953, 0.0003398190000000051, 0.0003419439999999968, 0.00033884700000000323, 0.00034008299999999797, 0.00034058299999999847, 0.0003436110000000006, 0.0003403329999999982, 0.00033952799999999866]</msg>
<status status="PASS" starttime="20201029 12:46:51.876" endtime="20201029 12:46:51.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.872" endtime="20201029 12:46:51.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.883" endtime="20201029 12:46:51.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.881" endtime="20201029 12:46:51.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.880" endtime="20201029 12:46:51.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.504" endtime="20201029 12:46:51.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.503" endtime="20201029 12:46:51.904"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.912" endtime="20201029 12:46:51.950"></status>
</kw>
<msg timestamp="20201029 12:46:51.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.911" endtime="20201029 12:46:51.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.952" endtime="20201029 12:46:51.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.954" endtime="20201029 12:46:51.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.908" endtime="20201029 12:46:51.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.906" endtime="20201029 12:46:51.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.963" endtime="20201029 12:46:52.250"></status>
</kw>
<msg timestamp="20201029 12:46:52.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023945278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024276444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.962" endtime="20201029 12:46:52.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023945278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024276444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.254" endtime="20201029 12:46:52.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.262" endtime="20201029 12:46:52.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.959" endtime="20201029 12:46:52.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.957" endtime="20201029 12:46:52.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:52.268" level="INFO">${RESULT} = [{'diff': 0.0003311660000000008}, {'diff': 0.00033986100000000033}, {'diff': 0.00034205500000000083}, {'diff': 0.0003429300000000017}, {'diff': 0.0003438059999999986}, {'diff': 0.0003382640000000013},...</msg>
<status status="PASS" starttime="20201029 12:46:52.265" endtime="20201029 12:46:52.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:52.272" level="INFO">${ACCURACY} = {'diff': [0.0003311660000000008, 0.00033986100000000033, 0.00034205500000000083, 0.0003429300000000017, 0.0003438059999999986, 0.0003382640000000013, 0.00034208299999999997, 0.00034105499999999983, 0....</msg>
<status status="PASS" starttime="20201029 12:46:52.269" endtime="20201029 12:46:52.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.277" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:46:52.276" endtime="20201029 12:46:52.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.279" level="INFO">VALUE: [0.0003311660000000008, 0.00033986100000000033, 0.00034205500000000083, 0.0003429300000000017, 0.0003438059999999986, 0.0003382640000000013, 0.00034208299999999997, 0.00034105499999999983, 0.00033922200000000013, 0.000341292, 0.0003395560000000013, 0.0003437079999999981, 0.0003416660000000009, 0.0003445270000000007, 0.00034358300000000147, 0.00034090300000000004, 0.00033848599999999895, 0.0003419719999999994, 0.0003405140000000001, 0.0003422780000000014, 0.0003433189999999982, 0.0003393610000000033, 0.00034290299999999857, 0.0003427219999999967, 0.0003436250000000002, 0.0003415000000000015, 0.000338790999999998, 0.0003425700000000004, 0.0003435980000000005, 0.00033805600000000324, 0.000340194000000002, 0.0003433889999999995, 0.0003416249999999982, 0.00034441699999999964, 0.0003435980000000005, 0.0003389160000000016, 0.0003387359999999992, 0.00033863899999999475, 0.00034043100000000215, 0.0003382920000000039, 0.00033856900000000384, 0.0003415559999999998, 0.00034409700000000154, 0.0003437079999999981, 0.0003386250000000021, 0.0003408199999999986, 0.00033881899999999715, 0.0003389580000000003, 0.00033940299999999507, 0.00034109699999999854]</msg>
<status status="PASS" starttime="20201029 12:46:52.278" endtime="20201029 12:46:52.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.273" endtime="20201029 12:46:52.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:52.285" endtime="20201029 12:46:52.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.284" endtime="20201029 12:46:52.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.282" endtime="20201029 12:46:52.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.905" endtime="20201029 12:46:52.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.904" endtime="20201029 12:46:52.306"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.315" endtime="20201029 12:46:52.352"></status>
</kw>
<msg timestamp="20201029 12:46:52.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.313" endtime="20201029 12:46:52.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.353" endtime="20201029 12:46:52.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.356" endtime="20201029 12:46:52.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.310" endtime="20201029 12:46:52.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.308" endtime="20201029 12:46:52.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.365" endtime="20201029 12:46:52.651"></status>
</kw>
<msg timestamp="20201029 12:46:52.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02373325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024074222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:52.363" endtime="20201029 12:46:52.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02373325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024074222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:52.655" endtime="20201029 12:46:52.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.663" endtime="20201029 12:46:52.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.361" endtime="20201029 12:46:52.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.359" endtime="20201029 12:46:52.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:52.669" level="INFO">${RESULT} = [{'diff': 0.0003409719999999984}, {'diff': 0.0003407499999999973}, {'diff': 0.00033972200000000063}, {'diff': 0.0003395559999999978}, {'diff': 0.00034406899999999893}, {'diff': 0.0003417499999999983},...</msg>
<status status="PASS" starttime="20201029 12:46:52.666" endtime="20201029 12:46:52.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:52.674" level="INFO">${ACCURACY} = {'diff': [0.0003409719999999984, 0.0003407499999999973, 0.00033972200000000063, 0.0003395559999999978, 0.00034406899999999893, 0.0003417499999999983, 0.0003407919999999995, 0.0003430279999999987, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:52.670" endtime="20201029 12:46:52.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.679" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:46:52.678" endtime="20201029 12:46:52.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.681" level="INFO">VALUE: [0.0003409719999999984, 0.0003407499999999973, 0.00033972200000000063, 0.0003395559999999978, 0.00034406899999999893, 0.0003417499999999983, 0.0003407919999999995, 0.0003430279999999987, 0.0003409589999999983, 0.000340985999999998, 0.0003386520000000018, 0.0003431249999999997, 0.00033926399999999884, 0.00033870899999999954, 0.00034437500000000093, 0.0003395970000000005, 0.0003381250000000016, 0.00034018099999999843, 0.000339693999999998, 0.00034230600000000055, 0.0003437780000000029, 0.0003422360000000027, 0.0003380139999999976, 0.0003384019999999946, 0.00034326400000000284, 0.0003424720000000034, 0.0003411659999999969, 0.00033840200000000153, 0.0003443059999999956, 0.0003399590000000008, 0.00033820799999999956, 0.00034238900000000544, 0.00033948599999999995, 0.0003422780000000014, 0.0003426669999999979, 0.00033802799999999716, 0.0003429999999999961, 0.0003406810000000024, 0.0003406109999999976, 0.0003392499999999993, 0.0003396800000000019, 0.0003389030000000015, 0.00034443100000000615, 0.00034401399999999666, 0.00034270800000000406, 0.00034408300000000197, 0.0003394450000000007, 0.000341387999999998, 0.0003415559999999998, 0.0003400139999999996]</msg>
<status status="PASS" starttime="20201029 12:46:52.680" endtime="20201029 12:46:52.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.675" endtime="20201029 12:46:52.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:52.686" endtime="20201029 12:46:52.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.685" endtime="20201029 12:46:52.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.684" endtime="20201029 12:46:52.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.307" endtime="20201029 12:46:52.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.306" endtime="20201029 12:46:52.707"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.716" endtime="20201029 12:46:52.753"></status>
</kw>
<msg timestamp="20201029 12:46:52.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.714" endtime="20201029 12:46:52.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.755" endtime="20201029 12:46:52.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.757" endtime="20201029 12:46:52.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.711" endtime="20201029 12:46:52.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.709" endtime="20201029 12:46:52.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.766" endtime="20201029 12:46:53.054"></status>
</kw>
<msg timestamp="20201029 12:46:53.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024476514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024806792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.765" endtime="20201029 12:46:53.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024476514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024806792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.058" endtime="20201029 12:46:53.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.066" endtime="20201029 12:46:53.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.762" endtime="20201029 12:46:53.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.760" endtime="20201029 12:46:53.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.072" level="INFO">${RESULT} = [{'diff': 0.0003302779999999998}, {'diff': 0.0003379579999999993}, {'diff': 0.00034256899999999743}, {'diff': 0.00034292999999999824}, {'diff': 0.00033916699999999786}, {'diff': 0.00033972200000000063...</msg>
<status status="PASS" starttime="20201029 12:46:53.069" endtime="20201029 12:46:53.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:53.076" level="INFO">${ACCURACY} = {'diff': [0.0003302779999999998, 0.0003379579999999993, 0.00034256899999999743, 0.00034292999999999824, 0.00033916699999999786, 0.00033972200000000063, 0.0003430139999999991, 0.00033784799999999823, 0...</msg>
<status status="PASS" starttime="20201029 12:46:53.073" endtime="20201029 12:46:53.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.081" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:46:53.080" endtime="20201029 12:46:53.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.083" level="INFO">VALUE: [0.0003302779999999998, 0.0003379579999999993, 0.00034256899999999743, 0.00034292999999999824, 0.00033916699999999786, 0.00033972200000000063, 0.0003430139999999991, 0.00033784799999999823, 0.0003379160000000006, 0.0003438469999999978, 0.00034295800000000085, 0.00033843100000000015, 0.00034141600000000064, 0.00034269399999999756, 0.0003405840000000014, 0.0003418750000000019, 0.00034045799999999835, 0.00034036100000000083, 0.0003393749999999994, 0.00033891699999999414, 0.00033805499999999683, 0.00034327700000000294, 0.00033859699999999604, 0.00033876399999999834, 0.00033952799999999866, 0.0003400830000000049, 0.0003402230000000006, 0.0003426109999999996, 0.00034290299999999857, 0.0003394999999999995, 0.00033816700000000033, 0.0003439859999999975, 0.0003417089999999956, 0.00034158399999999894, 0.0003407360000000012, 0.000341292, 0.0003421529999999978, 0.00034441699999999964, 0.000344485999999998, 0.0003402089999999941, 0.0003385269999999982, 0.0003389170000000011, 0.0003427920000000015, 0.00033961100000000355, 0.000339403000000002, 0.0003419999999999951, 0.00034426400000000384, 0.00034272299999999617, 0.0003383049999999971, 0.00034359700000000104]</msg>
<status status="PASS" starttime="20201029 12:46:53.082" endtime="20201029 12:46:53.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.077" endtime="20201029 12:46:53.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.088" endtime="20201029 12:46:53.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.087" endtime="20201029 12:46:53.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.086" endtime="20201029 12:46:53.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.708" endtime="20201029 12:46:53.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.707" endtime="20201029 12:46:53.109"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.118" endtime="20201029 12:46:53.155"></status>
</kw>
<msg timestamp="20201029 12:46:53.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.117" endtime="20201029 12:46:53.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.157" endtime="20201029 12:46:53.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.159" endtime="20201029 12:46:53.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.114" endtime="20201029 12:46:53.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.112" endtime="20201029 12:46:53.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.168" endtime="20201029 12:46:53.454"></status>
</kw>
<msg timestamp="20201029 12:46:53.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024051153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02440525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:53.166" endtime="20201029 12:46:53.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024051153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02440525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:53.458" endtime="20201029 12:46:53.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.466" endtime="20201029 12:46:53.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.164" endtime="20201029 12:46:53.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.162" endtime="20201029 12:46:53.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.472" level="INFO">${RESULT} = [{'diff': 0.00035409700000000113}, {'diff': 0.0003395970000000005}, {'diff': 0.0003440700000000019}, {'diff': 0.00034091600000000014}, {'diff': 0.00034158299999999947}, {'diff': 0.0003405000000000005}...</msg>
<status status="PASS" starttime="20201029 12:46:53.469" endtime="20201029 12:46:53.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:53.476" level="INFO">${ACCURACY} = {'diff': [0.00035409700000000113, 0.0003395970000000005, 0.0003440700000000019, 0.00034091600000000014, 0.00034158299999999947, 0.0003405000000000005, 0.00034006900000000187, 0.00034440300000000007, 0...</msg>
<status status="PASS" starttime="20201029 12:46:53.473" endtime="20201029 12:46:53.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.481" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:46:53.480" endtime="20201029 12:46:53.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.483" level="INFO">VALUE: [0.00035409700000000113, 0.0003395970000000005, 0.0003440700000000019, 0.00034091600000000014, 0.00034158299999999947, 0.0003405000000000005, 0.00034006900000000187, 0.00034440300000000007, 0.00034404199999999927, 0.0003385560000000003, 0.0003420690000000004, 0.00034345899999999735, 0.0003395689999999979, 0.00033788900000000094, 0.0003410980000000015, 0.00034284799999999976, 0.00033941599999999864, 0.00034255499999999786, 0.0003429720000000004, 0.00034381900000000215, 0.00033994400000000174, 0.0003412360000000017, 0.00033863899999999475, 0.00034193100000000365, 0.0003391250000000026, 0.0003445000000000045, 0.0003405000000000005, 0.00034087499999999743, 0.00034080599999999905, 0.00034330499999999514, 0.0003440690000000024, 0.00034352699999999625, 0.00033991599999999567, 0.00034105499999999983, 0.0003412780000000004, 0.0003388190000000041, 0.00034268099999999746, 0.00033934700000000373, 0.00034137499999999793, 0.0003406810000000024, 0.00033970800000000106, 0.0003412500000000013, 0.0003434869999999965, 0.0003406249999999972, 0.00034113899999999725, 0.0003431799999999985, 0.00033876399999999834, 0.0003444729999999979, 0.00033809699999999554, 0.0003411250000000046]</msg>
<status status="PASS" starttime="20201029 12:46:53.482" endtime="20201029 12:46:53.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.477" endtime="20201029 12:46:53.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.489" endtime="20201029 12:46:53.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.488" endtime="20201029 12:46:53.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.486" endtime="20201029 12:46:53.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.110" endtime="20201029 12:46:53.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.110" endtime="20201029 12:46:53.510"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.519" endtime="20201029 12:46:53.553"></status>
</kw>
<msg timestamp="20201029 12:46:53.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.517" endtime="20201029 12:46:53.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.555" endtime="20201029 12:46:53.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.557" endtime="20201029 12:46:53.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.515" endtime="20201029 12:46:53.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.513" endtime="20201029 12:46:53.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.566" endtime="20201029 12:46:53.852"></status>
</kw>
<msg timestamp="20201029 12:46:53.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020281681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020627514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.565" endtime="20201029 12:46:53.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020281681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020627514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.856" endtime="20201029 12:46:53.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.864" endtime="20201029 12:46:53.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.562" endtime="20201029 12:46:53.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.560" endtime="20201029 12:46:53.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.871" level="INFO">${RESULT} = [{'diff': 0.00034583300000000025}, {'diff': 0.00034230600000000055}, {'diff': 0.000339097}, {'diff': 0.000340306000000002}, {'diff': 0.00033876300000000234}, {'diff': 0.0003409439999999993}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 12:46:53.868" endtime="20201029 12:46:53.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:53.876" level="INFO">${ACCURACY} = {'diff': [0.00034583300000000025, 0.00034230600000000055, 0.000339097, 0.000340306000000002, 0.00033876300000000234, 0.0003409439999999993, 0.00034442999999999974, 0.0003440140000000001, 0.00034109699...</msg>
<status status="PASS" starttime="20201029 12:46:53.872" endtime="20201029 12:46:53.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.880" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:46:53.879" endtime="20201029 12:46:53.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.883" level="INFO">VALUE: [0.00034583300000000025, 0.00034230600000000055, 0.000339097, 0.000340306000000002, 0.00033876300000000234, 0.0003409439999999993, 0.00034442999999999974, 0.0003440140000000001, 0.00034109699999999854, 0.0003438470000000013, 0.0003385139999999981, 0.0003442500000000008, 0.00034158299999999947, 0.0003379449999999992, 0.000341292, 0.00034365199999999985, 0.00034104199999999973, 0.00034404199999999927, 0.000339194000000001, 0.00033934700000000026, 0.0003442640000000004, 0.00033948599999999995, 0.00034056900000000237, 0.00033894400000000074, 0.0003436529999999993, 0.0003406949999999985, 0.0003432629999999999, 0.00034276400000000234, 0.00034408400000000144, 0.0003386940000000005, 0.0003390839999999999, 0.0003426109999999996, 0.00033993100000000165, 0.0003389160000000016, 0.0003412780000000004, 0.0003390970000000035, 0.0003387370000000056, 0.0003426800000000049, 0.00034223699999999524, 0.00034409700000000154, 0.0003410689999999994, 0.0003390410000000052, 0.0003395269999999992, 0.00033986200000000327, 0.00034119500000000247, 0.0003432780000000024, 0.00033941699999999464, 0.0003409450000000022, 0.00034148600000000195, 0.00034409700000000154]</msg>
<status status="PASS" starttime="20201029 12:46:53.881" endtime="20201029 12:46:53.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.877" endtime="20201029 12:46:53.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.888" endtime="20201029 12:46:53.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.886" endtime="20201029 12:46:53.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.885" endtime="20201029 12:46:53.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.511" endtime="20201029 12:46:53.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.510" endtime="20201029 12:46:53.909"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.917" endtime="20201029 12:46:53.955"></status>
</kw>
<msg timestamp="20201029 12:46:53.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.916" endtime="20201029 12:46:53.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.956" endtime="20201029 12:46:53.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.959" endtime="20201029 12:46:53.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.913" endtime="20201029 12:46:53.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.911" endtime="20201029 12:46:53.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.968" endtime="20201029 12:46:54.255"></status>
</kw>
<msg timestamp="20201029 12:46:54.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023517861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023869833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.966" endtime="20201029 12:46:54.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023517861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023869833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.259" endtime="20201029 12:46:54.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.267" endtime="20201029 12:46:54.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.964" endtime="20201029 12:46:54.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.962" endtime="20201029 12:46:54.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:54.274" level="INFO">${RESULT} = [{'diff': 0.000351971999999999}, {'diff': 0.000342986}, {'diff': 0.00033833399999999916}, {'diff': 0.0003428470000000003}, {'diff': 0.0003388749999999989}, {'diff': 0.00034326400000000284}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 12:46:54.271" endtime="20201029 12:46:54.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:54.278" level="INFO">${ACCURACY} = {'diff': [0.000351971999999999, 0.000342986, 0.00033833399999999916, 0.0003428470000000003, 0.0003388749999999989, 0.00034326400000000284, 0.0003387910000000015, 0.0003392499999999993, 0.0003444030000...</msg>
<status status="PASS" starttime="20201029 12:46:54.275" endtime="20201029 12:46:54.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.283" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:46:54.281" endtime="20201029 12:46:54.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.285" level="INFO">VALUE: [0.000351971999999999, 0.000342986, 0.00033833399999999916, 0.0003428470000000003, 0.0003388749999999989, 0.00034326400000000284, 0.0003387910000000015, 0.0003392499999999993, 0.00034440300000000007, 0.0003437639999999999, 0.0003394169999999981, 0.0003445140000000006, 0.0003431110000000001, 0.00034187499999999843, 0.00034072200000000163, 0.00034291699999999814, 0.00033926399999999884, 0.00034230600000000055, 0.0003397779999999989, 0.0003433330000000012, 0.0003437219999999977, 0.00034005499999999883, 0.00034198600000000245, 0.00034213899999999825, 0.0003441250000000007, 0.000341888999999998, 0.00033988900000000294, 0.00034205500000000083, 0.00033922200000000013, 0.0003392359999999997, 0.00033984799999999676, 0.00034216700000000433, 0.0003431799999999985, 0.00033969500000000097, 0.00034436100000000136, 0.00034354200000000223, 0.0003389719999999999, 0.0003410970000000055, 0.0003397360000000002, 0.0003434999999999966, 0.0003413469999999988, 0.00034126400000000084, 0.00033811100000000205, 0.00033816700000000033, 0.00034086099999999786, 0.00034347199999999745, 0.00033858399999999594, 0.00033832000000000306, 0.0003404720000000014, 0.00034393100000000565]</msg>
<status status="PASS" starttime="20201029 12:46:54.284" endtime="20201029 12:46:54.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.279" endtime="20201029 12:46:54.286"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:54.290" endtime="20201029 12:46:54.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.288" endtime="20201029 12:46:54.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.287" endtime="20201029 12:46:54.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.910" endtime="20201029 12:46:54.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.909" endtime="20201029 12:46:54.311"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.319" endtime="20201029 12:46:54.361"></status>
</kw>
<msg timestamp="20201029 12:46:54.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.318" endtime="20201029 12:46:54.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.363" endtime="20201029 12:46:54.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.365" endtime="20201029 12:46:54.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.315" endtime="20201029 12:46:54.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.313" endtime="20201029 12:46:54.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.374" endtime="20201029 12:46:54.661"></status>
</kw>
<msg timestamp="20201029 12:46:54.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023432389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023787556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.373" endtime="20201029 12:46:54.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023432389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023787556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.665" endtime="20201029 12:46:54.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.673" endtime="20201029 12:46:54.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.370" endtime="20201029 12:46:54.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.368" endtime="20201029 12:46:54.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:54.680" level="INFO">${RESULT} = [{'diff': 0.000355167}, {'diff': 0.0003436950000000015}, {'diff': 0.000341679999999997}, {'diff': 0.0003411939999999995}, {'diff': 0.00033834699999999926}, {'diff': 0.00034377799999999945}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 12:46:54.676" endtime="20201029 12:46:54.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:54.684" level="INFO">${ACCURACY} = {'diff': [0.000355167, 0.0003436950000000015, 0.000341679999999997, 0.0003411939999999995, 0.00033834699999999926, 0.00034377799999999945, 0.0003416949999999995, 0.0003418199999999996, 0.0003378610000...</msg>
<status status="PASS" starttime="20201029 12:46:54.681" endtime="20201029 12:46:54.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.688" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:46:54.687" endtime="20201029 12:46:54.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.691" level="INFO">VALUE: [0.000355167, 0.0003436950000000015, 0.000341679999999997, 0.0003411939999999995, 0.00033834699999999926, 0.00034377799999999945, 0.0003416949999999995, 0.0003418199999999996, 0.0003378610000000018, 0.00034294500000000075, 0.0003390550000000013, 0.00033869499999999997, 0.00034155500000000033, 0.0003386529999999978, 0.0003377910000000005, 0.00033975000000000324, 0.0003402360000000007, 0.0003379719999999989, 0.00034313899999999925, 0.0003423189999999972, 0.00034181900000000015, 0.00034154200000000023, 0.00033781899999999615, 0.00034226400000000184, 0.0003428470000000003, 0.0003396109999999966, 0.00034313899999999925, 0.00034204200000000073, 0.00034048600000000095, 0.0003394300000000017, 0.0003411249999999977, 0.00034211100000000605, 0.00033820799999999956, 0.0003405270000000002, 0.0003407919999999995, 0.00034430600000000255, 0.00034386100000000086, 0.0003385559999999968, 0.0003386810000000004, 0.00034408400000000144, 0.0003379449999999992, 0.0003418339999999992, 0.00034398600000000445, 0.0003408329999999987, 0.0003436120000000001, 0.00034158299999999947, 0.0003444450000000057, 0.0003427089999999966, 0.0003428329999999938, 0.00034329199999999505]</msg>
<status status="PASS" starttime="20201029 12:46:54.689" endtime="20201029 12:46:54.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.684" endtime="20201029 12:46:54.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:54.697" endtime="20201029 12:46:54.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.695" endtime="20201029 12:46:54.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.694" endtime="20201029 12:46:54.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.312" endtime="20201029 12:46:54.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.311" endtime="20201029 12:46:54.717"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.726" endtime="20201029 12:46:54.763"></status>
</kw>
<msg timestamp="20201029 12:46:54.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.725" endtime="20201029 12:46:54.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.764" endtime="20201029 12:46:54.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.767" endtime="20201029 12:46:54.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.722" endtime="20201029 12:46:54.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.720" endtime="20201029 12:46:54.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.776" endtime="20201029 12:46:55.062"></status>
</kw>
<msg timestamp="20201029 12:46:55.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023687514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024027875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.775" endtime="20201029 12:46:55.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023687514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024027875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.066" endtime="20201029 12:46:55.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.074" endtime="20201029 12:46:55.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.772" endtime="20201029 12:46:55.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.770" endtime="20201029 12:46:55.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.080" level="INFO">${RESULT} = [{'diff': 0.00034036100000000083}, {'diff': 0.0003433889999999995}, {'diff': 0.00033965300000000226}, {'diff': 0.00033884699999999976}, {'diff': 0.00034}, {'diff': 0.00033963799999999975}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 12:46:55.077" endtime="20201029 12:46:55.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:55.085" level="INFO">${ACCURACY} = {'diff': [0.00034036100000000083, 0.0003433889999999995, 0.00033965300000000226, 0.00033884699999999976, 0.00034, 0.00033963799999999975, 0.00033816700000000033, 0.00034186100000000233, 0.000339541999...</msg>
<status status="PASS" starttime="20201029 12:46:55.081" endtime="20201029 12:46:55.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.090" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:46:55.089" endtime="20201029 12:46:55.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.092" level="INFO">VALUE: [0.00034036100000000083, 0.0003433889999999995, 0.00033965300000000226, 0.00033884699999999976, 0.00034, 0.00033963799999999975, 0.00033816700000000033, 0.00034186100000000233, 0.00033954199999999823, 0.0003428470000000003, 0.00034237499999999893, 0.0003445140000000006, 0.0003388200000000001, 0.00033838900000000144, 0.0003421379999999988, 0.0003418199999999996, 0.0003416530000000008, 0.00033852700000000166, 0.00033804099999999726, 0.00033920800000000056, 0.00033880599999999705, 0.0003439439999999988, 0.0003417780000000009, 0.0003394999999999995, 0.00033787500000000137, 0.00033811100000000205, 0.00034205500000000083, 0.0003427920000000015, 0.00033888800000000247, 0.0003435000000000035, 0.000338790999999998, 0.0003418199999999996, 0.000343485999999997, 0.00033837499999999493, 0.00033936099999999636, 0.00033955499999999833, 0.00034102800000000016, 0.00034402800000000316, 0.0003417780000000009, 0.00034137500000000487, 0.000343000000000003, 0.00033783300000000266, 0.00033958399999999694, 0.0003430140000000026, 0.0003396109999999966, 0.0003438050000000026, 0.0003410559999999993, 0.00034108299999999897, 0.0003442089999999981, 0.00034219399999999706]</msg>
<status status="PASS" starttime="20201029 12:46:55.091" endtime="20201029 12:46:55.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.086" endtime="20201029 12:46:55.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.097" endtime="20201029 12:46:55.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.096" endtime="20201029 12:46:55.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.095" endtime="20201029 12:46:55.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.718" endtime="20201029 12:46:55.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.718" endtime="20201029 12:46:55.118"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.127" endtime="20201029 12:46:55.165"></status>
</kw>
<msg timestamp="20201029 12:46:55.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.125" endtime="20201029 12:46:55.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.166" endtime="20201029 12:46:55.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.169" endtime="20201029 12:46:55.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.123" endtime="20201029 12:46:55.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.120" endtime="20201029 12:46:55.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.178" endtime="20201029 12:46:55.464"></status>
</kw>
<msg timestamp="20201029 12:46:55.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024943014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025290569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.176" endtime="20201029 12:46:55.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024943014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025290569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.468" endtime="20201029 12:46:55.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.477" endtime="20201029 12:46:55.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.174" endtime="20201029 12:46:55.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.172" endtime="20201029 12:46:55.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.483" level="INFO">${RESULT} = [{'diff': 0.0003475549999999994}, {'diff': 0.0003441669999999994}, {'diff': 0.0003430699999999974}, {'diff': 0.0003381390000000012}, {'diff': 0.00034405500000000283}, {'diff': 0.00034141600000000064},...</msg>
<status status="PASS" starttime="20201029 12:46:55.480" endtime="20201029 12:46:55.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:55.487" level="INFO">${ACCURACY} = {'diff': [0.0003475549999999994, 0.0003441669999999994, 0.0003430699999999974, 0.0003381390000000012, 0.00034405500000000283, 0.00034141600000000064, 0.0003404450000000017, 0.0003396389999999992, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:55.484" endtime="20201029 12:46:55.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.492" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:46:55.491" endtime="20201029 12:46:55.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.494" level="INFO">VALUE: [0.0003475549999999994, 0.0003441669999999994, 0.0003430699999999974, 0.0003381390000000012, 0.00034405500000000283, 0.00034141600000000064, 0.0003404450000000017, 0.0003396389999999992, 0.00034223599999999924, 0.0003399719999999974, 0.0003399720000000009, 0.0003380420000000002, 0.0003430409999999988, 0.000344292000000003, 0.0003396110000000001, 0.0003416949999999995, 0.00034055499999999933, 0.00033880500000000105, 0.0003391379999999958, 0.00033926399999999884, 0.00034213899999999825, 0.0003439309999999987, 0.00034447199999999845, 0.0003387359999999992, 0.0003442230000000046, 0.0003400139999999996, 0.0003382499999999983, 0.000338999999999999, 0.00034009699999999754, 0.00034209699999999954, 0.0003379300000000002, 0.0003408329999999987, 0.0003383469999999958, 0.0003439309999999987, 0.0003397779999999989, 0.0003409300000000032, 0.00034036200000000377, 0.00034420900000000504, 0.000340791, 0.0003441669999999994, 0.0003433470000000008, 0.00034216700000000433, 0.0003399160000000026, 0.0003423050000000011, 0.000344276999999997, 0.0003404309999999952, 0.0003441110000000011, 0.0003445270000000042, 0.00034109699999999854, 0.0003379170000000001]</msg>
<status status="PASS" starttime="20201029 12:46:55.493" endtime="20201029 12:46:55.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.488" endtime="20201029 12:46:55.496"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.499" endtime="20201029 12:46:55.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.498" endtime="20201029 12:46:55.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.497" endtime="20201029 12:46:55.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.119" endtime="20201029 12:46:55.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.118" endtime="20201029 12:46:55.520"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.529" endtime="20201029 12:46:55.568"></status>
</kw>
<msg timestamp="20201029 12:46:55.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.527" endtime="20201029 12:46:55.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.570" endtime="20201029 12:46:55.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.572" endtime="20201029 12:46:55.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.525" endtime="20201029 12:46:55.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.523" endtime="20201029 12:46:55.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.581" endtime="20201029 12:46:55.866"></status>
</kw>
<msg timestamp="20201029 12:46:55.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024768028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025100903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.580" endtime="20201029 12:46:55.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024768028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025100903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.870" endtime="20201029 12:46:55.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.878" endtime="20201029 12:46:55.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.577" endtime="20201029 12:46:55.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.576" endtime="20201029 12:46:55.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.885" level="INFO">${RESULT} = [{'diff': 0.00033287499999999984}, {'diff': 0.0003433200000000011}, {'diff': 0.0003400550000000023}, {'diff': 0.0003390979999999995}, {'diff': 0.00034163800000000175}, {'diff': 0.000342986}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 12:46:55.882" endtime="20201029 12:46:55.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:55.889" level="INFO">${ACCURACY} = {'diff': [0.00033287499999999984, 0.0003433200000000011, 0.0003400550000000023, 0.0003390979999999995, 0.00034163800000000175, 0.000342986, 0.00034418099999999896, 0.00034313899999999925, 0.0003403470...</msg>
<status status="PASS" starttime="20201029 12:46:55.886" endtime="20201029 12:46:55.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.893" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:46:55.892" endtime="20201029 12:46:55.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.896" level="INFO">VALUE: [0.00033287499999999984, 0.0003433200000000011, 0.0003400550000000023, 0.0003390979999999995, 0.00034163800000000175, 0.000342986, 0.00034418099999999896, 0.00034313899999999925, 0.00034034700000000126, 0.0003411530000000003, 0.0003432500000000033, 0.0003380559999999998, 0.0003422499999999988, 0.0003389719999999999, 0.0003424440000000008, 0.0003394450000000007, 0.0003400560000000018, 0.0003404859999999975, 0.00034272200000000363, 0.0003404580000000018, 0.0003407500000000008, 0.00033884700000000323, 0.00034437500000000093, 0.0003445000000000045, 0.0003394170000000016, 0.0003433330000000012, 0.0003382359999999987, 0.0003381250000000016, 0.00034166700000000383, 0.0003396390000000027, 0.0003397779999999989, 0.00034437500000000093, 0.000343889, 0.0003394720000000004, 0.0003397230000000001, 0.00034237500000000587, 0.00034123599999999477, 0.00033816600000000085, 0.0003418050000000006, 0.00033972200000000063, 0.0003386810000000004, 0.0003391810000000009, 0.0003438200000000016, 0.0003414590000000023, 0.00033901400000000553, 0.00034172299999999517, 0.000341403000000004, 0.0003400699999999979, 0.00034358300000000147, 0.0003410699999999989]</msg>
<status status="PASS" starttime="20201029 12:46:55.894" endtime="20201029 12:46:55.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.890" endtime="20201029 12:46:55.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.906" endtime="20201029 12:46:55.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.905" endtime="20201029 12:46:55.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.904" endtime="20201029 12:46:55.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.521" endtime="20201029 12:46:55.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.520" endtime="20201029 12:46:55.927"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.936" endtime="20201029 12:46:55.974"></status>
</kw>
<msg timestamp="20201029 12:46:55.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.934" endtime="20201029 12:46:55.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.976" endtime="20201029 12:46:55.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.978" endtime="20201029 12:46:55.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.931" endtime="20201029 12:46:55.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.929" endtime="20201029 12:46:55.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.987" endtime="20201029 12:46:56.274"></status>
</kw>
<msg timestamp="20201029 12:46:56.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024850625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0251875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:55.986" endtime="20201029 12:46:56.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024850625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0251875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:56.278" endtime="20201029 12:46:56.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.286" endtime="20201029 12:46:56.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.983" endtime="20201029 12:46:56.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.981" endtime="20201029 12:46:56.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:56.292" level="INFO">${RESULT} = [{'diff': 0.00033687500000000037}, {'diff': 0.0003408750000000009}, {'diff': 0.00034384800000000076}, {'diff': 0.00034184799999999876}, {'diff': 0.0003397499999999998}, {'diff': 0.0003423889999999985}...</msg>
<status status="PASS" starttime="20201029 12:46:56.289" endtime="20201029 12:46:56.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:56.297" level="INFO">${ACCURACY} = {'diff': [0.00033687500000000037, 0.0003408750000000009, 0.00034384800000000076, 0.00034184799999999876, 0.0003397499999999998, 0.0003423889999999985, 0.0003406110000000011, 0.00033852800000000113, 0....</msg>
<status status="PASS" starttime="20201029 12:46:56.293" endtime="20201029 12:46:56.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.302" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:46:56.301" endtime="20201029 12:46:56.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.304" level="INFO">VALUE: [0.00033687500000000037, 0.0003408750000000009, 0.00034384800000000076, 0.00034184799999999876, 0.0003397499999999998, 0.0003423889999999985, 0.0003406110000000011, 0.00033852800000000113, 0.00034249999999999906, 0.0003438049999999991, 0.00034288900000000247, 0.0003435139999999996, 0.00034252800000000166, 0.00034209699999999954, 0.0003412629999999979, 0.0003384170000000006, 0.0003405140000000001, 0.0003398469999999973, 0.00033909699999999654, 0.0003390139999999986, 0.0003391810000000009, 0.0003434580000000048, 0.00034365199999999985, 0.0003441529999999998, 0.00034423699999999724, 0.0003404720000000014, 0.00034308300000000097, 0.00034413900000000025, 0.00034043100000000215, 0.0003415270000000012, 0.0003412219999999952, 0.0003398190000000051, 0.0003439439999999988, 0.0003400689999999984, 0.0003416250000000051, 0.00034244400000000424, 0.00033787499999999443, 0.00034252699999999525, 0.000341194000000003, 0.0003411390000000042, 0.0003425549999999944, 0.0003429999999999961, 0.0003393469999999968, 0.00034404200000000273, 0.00034359700000000104, 0.0003378610000000018, 0.0003405140000000001, 0.0003411119999999976, 0.00033963899999999575, 0.0003389719999999999]</msg>
<status status="PASS" starttime="20201029 12:46:56.303" endtime="20201029 12:46:56.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.298" endtime="20201029 12:46:56.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:56.309" endtime="20201029 12:46:56.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.308" endtime="20201029 12:46:56.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.307" endtime="20201029 12:46:56.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.928" endtime="20201029 12:46:56.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.927" endtime="20201029 12:46:56.330"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.339" endtime="20201029 12:46:56.376"></status>
</kw>
<msg timestamp="20201029 12:46:56.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.337" endtime="20201029 12:46:56.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.377" endtime="20201029 12:46:56.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.380" endtime="20201029 12:46:56.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.335" endtime="20201029 12:46:56.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.333" endtime="20201029 12:46:56.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.389" endtime="20201029 12:46:56.676"></status>
</kw>
<msg timestamp="20201029 12:46:56.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023740403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024090722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.387" endtime="20201029 12:46:56.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023740403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024090722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.680" endtime="20201029 12:46:56.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.688" endtime="20201029 12:46:56.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.385" endtime="20201029 12:46:56.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.383" endtime="20201029 12:46:56.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:56.695" level="INFO">${RESULT} = [{'diff': 0.00035031899999999824}, {'diff': 0.00034337499999999993}, {'diff': 0.000338194}, {'diff': 0.0003420140000000016}, {'diff': 0.00034327799999999895}, {'diff': 0.0003401109999999971}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:46:56.691" endtime="20201029 12:46:56.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:56.699" level="INFO">${ACCURACY} = {'diff': [0.00035031899999999824, 0.00034337499999999993, 0.000338194, 0.0003420140000000016, 0.00034327799999999895, 0.0003401109999999971, 0.0003380420000000002, 0.0003422500000000023, 0.00034179200...</msg>
<status status="PASS" starttime="20201029 12:46:56.695" endtime="20201029 12:46:56.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.703" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:46:56.702" endtime="20201029 12:46:56.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.706" level="INFO">VALUE: [0.00035031899999999824, 0.00034337499999999993, 0.000338194, 0.0003420140000000016, 0.00034327799999999895, 0.0003401109999999971, 0.0003380420000000002, 0.0003422500000000023, 0.0003417920000000005, 0.0003418620000000018, 0.0003413339999999987, 0.0003430139999999991, 0.0003405689999999989, 0.00034117999999999996, 0.00034227700000000194, 0.00034390300000000304, 0.0003408329999999987, 0.00034018099999999843, 0.0003417499999999983, 0.00034322200000000067, 0.0003436249999999967, 0.00033961100000000355, 0.0003405000000000005, 0.0003428200000000006, 0.00033920900000000004, 0.00034059699999999804, 0.00034463900000000075, 0.0003410140000000006, 0.000338790999999998, 0.0003399580000000013, 0.00033890299999999457, 0.0003385559999999968, 0.00034266700000000483, 0.0003406940000000025, 0.00033808299999999597, 0.0003407919999999995, 0.0003432500000000033, 0.00033941599999999517, 0.00034168099999999646, 0.00034076400000000034, 0.0003424579999999969, 0.0003396109999999966, 0.0003435700000000014, 0.00034058299999999847, 0.0003422639999999949, 0.0003417219999999957, 0.00034404100000000326, 0.00034026399999999984, 0.0003382779999999974, 0.0003399449999999943]</msg>
<status status="PASS" starttime="20201029 12:46:56.704" endtime="20201029 12:46:56.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.700" endtime="20201029 12:46:56.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:56.711" endtime="20201029 12:46:56.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.709" endtime="20201029 12:46:56.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.708" endtime="20201029 12:46:56.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.331" endtime="20201029 12:46:56.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.330" endtime="20201029 12:46:56.731"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.740" endtime="20201029 12:46:56.779"></status>
</kw>
<msg timestamp="20201029 12:46:56.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.739" endtime="20201029 12:46:56.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.780" endtime="20201029 12:46:56.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.783" endtime="20201029 12:46:56.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.736" endtime="20201029 12:46:56.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.734" endtime="20201029 12:46:56.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.792" endtime="20201029 12:46:57.078"></status>
</kw>
<msg timestamp="20201029 12:46:57.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024225264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024559819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.790" endtime="20201029 12:46:57.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024225264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024559819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.082" endtime="20201029 12:46:57.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.090" endtime="20201029 12:46:57.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.788" endtime="20201029 12:46:57.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.786" endtime="20201029 12:46:57.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.097" level="INFO">${RESULT} = [{'diff': 0.00033455500000000027}, {'diff': 0.0003382640000000013}, {'diff': 0.0003413329999999992}, {'diff': 0.00034030599999999855}, {'diff': 0.0003396389999999992}, {'diff': 0.0003405270000000002},...</msg>
<status status="PASS" starttime="20201029 12:46:57.094" endtime="20201029 12:46:57.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:57.101" level="INFO">${ACCURACY} = {'diff': [0.00033455500000000027, 0.0003382640000000013, 0.0003413329999999992, 0.00034030599999999855, 0.0003396389999999992, 0.0003405270000000002, 0.0003391810000000009, 0.0003432919999999985, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:57.098" endtime="20201029 12:46:57.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.106" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:46:57.105" endtime="20201029 12:46:57.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.108" level="INFO">VALUE: [0.00033455500000000027, 0.0003382640000000013, 0.0003413329999999992, 0.00034030599999999855, 0.0003396389999999992, 0.0003405270000000002, 0.0003391810000000009, 0.0003432919999999985, 0.00034020900000000104, 0.00033943100000000115, 0.0003442500000000008, 0.0003427639999999989, 0.0003426390000000022, 0.00034086100000000133, 0.00033888899999999847, 0.00033836200000000177, 0.0003444449999999988, 0.00034415200000000035, 0.00034154100000000076, 0.0003426119999999991, 0.00033837500000000187, 0.0003384300000000007, 0.00033943100000000115, 0.00034154100000000076, 0.0003437089999999976, 0.0003403610000000043, 0.000343485999999997, 0.0003407500000000008, 0.0003443470000000018, 0.00033927699999999894, 0.00033969399999999456, 0.0003386800000000009, 0.0003389589999999998, 0.00034166600000000436, 0.0003433470000000008, 0.0003401520000000033, 0.0003381390000000012, 0.000342292000000001, 0.00033913899999999525, 0.00034219399999999706, 0.000341679999999997, 0.0003411529999999968, 0.00034105600000000624, 0.000340403000000003, 0.00034147199999999545, 0.00034145899999999535, 0.000340679999999996, 0.0003412500000000013, 0.0003380139999999976, 0.0003394160000000021]</msg>
<status status="PASS" starttime="20201029 12:46:57.107" endtime="20201029 12:46:57.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.102" endtime="20201029 12:46:57.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:57.114" endtime="20201029 12:46:57.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.113" endtime="20201029 12:46:57.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.111" endtime="20201029 12:46:57.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.732" endtime="20201029 12:46:57.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.732" endtime="20201029 12:46:57.135"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.144" endtime="20201029 12:46:57.180"></status>
</kw>
<msg timestamp="20201029 12:46:57.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.142" endtime="20201029 12:46:57.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.182" endtime="20201029 12:46:57.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.184" endtime="20201029 12:46:57.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.139" endtime="20201029 12:46:57.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.137" endtime="20201029 12:46:57.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.194" endtime="20201029 12:46:57.478"></status>
</kw>
<msg timestamp="20201029 12:46:57.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023115264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.192" endtime="20201029 12:46:57.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023115264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.482" endtime="20201029 12:46:57.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.490" endtime="20201029 12:46:57.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.189" endtime="20201029 12:46:57.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.187" endtime="20201029 12:46:57.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.497" level="INFO">${RESULT} = [{'diff': 0.0003595280000000013}, {'diff': 0.00033862499999999865}, {'diff': 0.00034402800000000316}, {'diff': 0.00034290299999999857}, {'diff': 0.0003433200000000011}, {'diff': 0.0003406529999999998}...</msg>
<status status="PASS" starttime="20201029 12:46:57.494" endtime="20201029 12:46:57.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:57.502" level="INFO">${ACCURACY} = {'diff': [0.0003595280000000013, 0.00033862499999999865, 0.00034402800000000316, 0.00034290299999999857, 0.0003433200000000011, 0.0003406529999999998, 0.00034152800000000066, 0.0003425279999999982, 0....</msg>
<status status="PASS" starttime="20201029 12:46:57.498" endtime="20201029 12:46:57.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.507" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:46:57.506" endtime="20201029 12:46:57.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.509" level="INFO">VALUE: [0.0003595280000000013, 0.00033862499999999865, 0.00034402800000000316, 0.00034290299999999857, 0.0003433200000000011, 0.0003406529999999998, 0.00034152800000000066, 0.0003425279999999982, 0.0003443470000000018, 0.00034173599999999874, 0.00034361099999999714, 0.0003434310000000017, 0.00034155500000000033, 0.00033926399999999884, 0.00033895799999999685, 0.00033862499999999865, 0.0003384449999999997, 0.00034062500000000065, 0.00034019500000000147, 0.0003414859999999985, 0.00034313899999999925, 0.00033797200000000235, 0.000342694000000001, 0.0003441110000000011, 0.00033940299999999507, 0.00033840200000000153, 0.0003429859999999965, 0.00034037500000000387, 0.00034208299999999997, 0.0003387499999999988, 0.00034124999999999434, 0.0003433330000000012, 0.0003415000000000015, 0.0003390830000000039, 0.00034105499999999983, 0.00034373599999999727, 0.0003381809999999999, 0.000341597000000006, 0.0003403199999999981, 0.00033956900000000484, 0.00033822199999999913, 0.0003443340000000017, 0.0003393610000000033, 0.00033993100000000165, 0.000340194000000002, 0.00034159699999999904, 0.0003396390000000027, 0.00034401399999999666, 0.0003396380000000032, 0.00033859699999999604]</msg>
<status status="PASS" starttime="20201029 12:46:57.508" endtime="20201029 12:46:57.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.503" endtime="20201029 12:46:57.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:57.514" endtime="20201029 12:46:57.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.513" endtime="20201029 12:46:57.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.511" endtime="20201029 12:46:57.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.136" endtime="20201029 12:46:57.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.135" endtime="20201029 12:46:57.535"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.544" endtime="20201029 12:46:57.582"></status>
</kw>
<msg timestamp="20201029 12:46:57.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.542" endtime="20201029 12:46:57.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.583" endtime="20201029 12:46:57.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.586" endtime="20201029 12:46:57.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.539" endtime="20201029 12:46:57.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.537" endtime="20201029 12:46:57.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.595" endtime="20201029 12:46:57.882"></status>
</kw>
<msg timestamp="20201029 12:46:57.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024661542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025012958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.593" endtime="20201029 12:46:57.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024661542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025012958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.887" endtime="20201029 12:46:57.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.895" endtime="20201029 12:46:57.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.591" endtime="20201029 12:46:57.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.589" endtime="20201029 12:46:57.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.901" level="INFO">${RESULT} = [{'diff': 0.00035141599999999676}, {'diff': 0.0003398200000000011}, {'diff': 0.00034120899999999857}, {'diff': 0.0003423059999999971}, {'diff': 0.0003405140000000001}, {'diff': 0.0003383190000000001},...</msg>
<status status="PASS" starttime="20201029 12:46:57.898" endtime="20201029 12:46:57.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:57.906" level="INFO">${ACCURACY} = {'diff': [0.00035141599999999676, 0.0003398200000000011, 0.00034120899999999857, 0.0003423059999999971, 0.0003405140000000001, 0.0003383190000000001, 0.0003419719999999994, 0.00034204200000000073, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:57.903" endtime="20201029 12:46:57.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.910" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:46:57.909" endtime="20201029 12:46:57.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.913" level="INFO">VALUE: [0.00035141599999999676, 0.0003398200000000011, 0.00034120899999999857, 0.0003423059999999971, 0.0003405140000000001, 0.0003383190000000001, 0.0003419719999999994, 0.00034204200000000073, 0.0003380130000000016, 0.0003427780000000019, 0.00034283299999999725, 0.00033833399999999916, 0.00033861100000000255, 0.0003414170000000001, 0.0003436659999999994, 0.0003433189999999982, 0.0003425279999999982, 0.00034395899999999785, 0.0003398330000000012, 0.0003412500000000013, 0.00034022200000000113, 0.0003423339999999997, 0.00033922200000000013, 0.0003442079999999986, 0.00033993100000000165, 0.00034165300000000426, 0.00034348600000000395, 0.00034016700000000233, 0.00034040200000000354, 0.000342485999999996, 0.0003386810000000004, 0.0003383049999999971, 0.00033844400000000024, 0.00033966700000000183, 0.0003390970000000035, 0.00033772199999999863, 0.00034065300000000326, 0.00034038900000000344, 0.0003391810000000009, 0.00034391599999999967, 0.00033937499999999593, 0.00033804199999999673, 0.00033831899999999665, 0.00033888800000000247, 0.00034104199999999973, 0.0003434579999999979, 0.00034365199999999985, 0.0003381249999999947, 0.000338305000000004, 0.000342000000000002]</msg>
<status status="PASS" starttime="20201029 12:46:57.911" endtime="20201029 12:46:57.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.906" endtime="20201029 12:46:57.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:57.918" endtime="20201029 12:46:57.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.916" endtime="20201029 12:46:57.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.915" endtime="20201029 12:46:57.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.536" endtime="20201029 12:46:57.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.535" endtime="20201029 12:46:57.938"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.947" endtime="20201029 12:46:57.984"></status>
</kw>
<msg timestamp="20201029 12:46:57.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.946" endtime="20201029 12:46:57.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.985" endtime="20201029 12:46:57.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.988" endtime="20201029 12:46:57.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.943" endtime="20201029 12:46:57.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.941" endtime="20201029 12:46:57.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.997" endtime="20201029 12:46:58.282"></status>
</kw>
<msg timestamp="20201029 12:46:58.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023105542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023462806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.995" endtime="20201029 12:46:58.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023105542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023462806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.286" endtime="20201029 12:46:58.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.294" endtime="20201029 12:46:58.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.993" endtime="20201029 12:46:58.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.991" endtime="20201029 12:46:58.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:58.301" level="INFO">${RESULT} = [{'diff': 0.0003572639999999995}, {'diff': 0.0003413889999999975}, {'diff': 0.00034005499999999883}, {'diff': 0.00034313899999999925}, {'diff': 0.00034120899999999857}, {'diff': 0.00034437500000000093...</msg>
<status status="PASS" starttime="20201029 12:46:58.298" endtime="20201029 12:46:58.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:58.305" level="INFO">${ACCURACY} = {'diff': [0.0003572639999999995, 0.0003413889999999975, 0.00034005499999999883, 0.00034313899999999925, 0.00034120899999999857, 0.00034437500000000093, 0.00034277799999999845, 0.0003412780000000004, 0...</msg>
<status status="PASS" starttime="20201029 12:46:58.302" endtime="20201029 12:46:58.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.310" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:46:58.309" endtime="20201029 12:46:58.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.312" level="INFO">VALUE: [0.0003572639999999995, 0.0003413889999999975, 0.00034005499999999883, 0.00034313899999999925, 0.00034120899999999857, 0.00034437500000000093, 0.00034277799999999845, 0.0003412780000000004, 0.0003432499999999998, 0.00034002799999999916, 0.0003440270000000002, 0.00034322200000000067, 0.00034354199999999877, 0.00033815300000000076, 0.00034080599999999905, 0.0003388330000000002, 0.00034387500000000043, 0.00033920900000000004, 0.00033966699999999836, 0.00034463900000000075, 0.00034141600000000064, 0.0003435690000000019, 0.0003421660000000014, 0.00033922200000000013, 0.000340194000000002, 0.00034277700000000244, 0.000342000000000002, 0.0003442079999999986, 0.00034276400000000234, 0.00033927699999999894, 0.0003426669999999979, 0.0003415559999999998, 0.0003411799999999965, 0.00034004199999999873, 0.0003383610000000023, 0.00034413900000000025, 0.00034187500000000537, 0.0003394300000000017, 0.0003431110000000001, 0.0003405689999999989, 0.00034204200000000073, 0.00034113899999999725, 0.00033838900000000144, 0.00034086099999999786, 0.0003439999999999971, 0.000339097999999996, 0.0003397779999999989, 0.00034084700000000523, 0.000343000000000003, 0.00034326400000000284]</msg>
<status status="PASS" starttime="20201029 12:46:58.311" endtime="20201029 12:46:58.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.306" endtime="20201029 12:46:58.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.318" endtime="20201029 12:46:58.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.317" endtime="20201029 12:46:58.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.315" endtime="20201029 12:46:58.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.939" endtime="20201029 12:46:58.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.939" endtime="20201029 12:46:58.339"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.348" endtime="20201029 12:46:58.385"></status>
</kw>
<msg timestamp="20201029 12:46:58.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.346" endtime="20201029 12:46:58.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.387" endtime="20201029 12:46:58.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.389" endtime="20201029 12:46:58.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.344" endtime="20201029 12:46:58.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.341" endtime="20201029 12:46:58.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.398" endtime="20201029 12:46:58.684"></status>
</kw>
<msg timestamp="20201029 12:46:58.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024482347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024822625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.397" endtime="20201029 12:46:58.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024482347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024822625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.688" endtime="20201029 12:46:58.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.696" endtime="20201029 12:46:58.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.394" endtime="20201029 12:46:58.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.393" endtime="20201029 12:46:58.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:58.703" level="INFO">${RESULT} = [{'diff': 0.0003402779999999994}, {'diff': 0.0003420699999999999}, {'diff': 0.00033870899999999954}, {'diff': 0.0003392779999999984}, {'diff': 0.00034373600000000074}, {'diff': 0.0003442080000000021},...</msg>
<status status="PASS" starttime="20201029 12:46:58.699" endtime="20201029 12:46:58.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:58.708" level="INFO">${ACCURACY} = {'diff': [0.0003402779999999994, 0.0003420699999999999, 0.00033870899999999954, 0.0003392779999999984, 0.00034373600000000074, 0.0003442080000000021, 0.00034337499999999993, 0.00033912499999999915, 0....</msg>
<status status="PASS" starttime="20201029 12:46:58.704" endtime="20201029 12:46:58.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.712" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:46:58.711" endtime="20201029 12:46:58.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.715" level="INFO">VALUE: [0.0003402779999999994, 0.0003420699999999999, 0.00033870899999999954, 0.0003392779999999984, 0.00034373600000000074, 0.0003442080000000021, 0.00034337499999999993, 0.00033912499999999915, 0.0003429720000000004, 0.0003392229999999996, 0.0003437080000000016, 0.0003396529999999988, 0.00033972200000000063, 0.0003389719999999999, 0.0003396529999999988, 0.0003427780000000019, 0.00034222199999999967, 0.0003430700000000009, 0.00033872199999999963, 0.00034245899999999635, 0.00033783300000000266, 0.0003406529999999963, 0.0003400689999999984, 0.00033876399999999834, 0.00034393100000000565, 0.00034305599999999437, 0.0003434309999999982, 0.0003413469999999988, 0.00034280600000000105, 0.00034087499999999743, 0.00034236099999999936, 0.00034155500000000033, 0.0003391520000000023, 0.0003431379999999998, 0.0003379170000000001, 0.0003426249999999992, 0.0003381250000000016, 0.0003425700000000004, 0.0003399720000000009, 0.00033863899999999475, 0.00034220800000000356, 0.00034130599999999955, 0.0003406800000000029, 0.0003425000000000025, 0.00034363899999999975, 0.00034111100000000505, 0.0003436800000000059, 0.0003384719999999994, 0.0003383049999999971, 0.0003424729999999959]</msg>
<status status="PASS" starttime="20201029 12:46:58.713" endtime="20201029 12:46:58.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.709" endtime="20201029 12:46:58.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.720" endtime="20201029 12:46:58.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.718" endtime="20201029 12:46:58.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.717" endtime="20201029 12:46:58.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.340" endtime="20201029 12:46:58.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.339" endtime="20201029 12:46:58.740"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.749" endtime="20201029 12:46:58.787"></status>
</kw>
<msg timestamp="20201029 12:46:58.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.748" endtime="20201029 12:46:58.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.788" endtime="20201029 12:46:58.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.791" endtime="20201029 12:46:58.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.745" endtime="20201029 12:46:58.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.743" endtime="20201029 12:46:58.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.800" endtime="20201029 12:46:59.088"></status>
</kw>
<msg timestamp="20201029 12:46:59.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024876333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025224208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.798" endtime="20201029 12:46:59.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024876333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025224208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.092" endtime="20201029 12:46:59.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.101" endtime="20201029 12:46:59.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.796" endtime="20201029 12:46:59.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.794" endtime="20201029 12:46:59.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:59.107" level="INFO">${RESULT} = [{'diff': 0.00034787500000000096}, {'diff': 0.000338999999999999}, {'diff': 0.0003407079999999986}, {'diff': 0.00033933400000000016}, {'diff': 0.0003406249999999972}, {'diff': 0.0003404719999999979}, ...</msg>
<status status="PASS" starttime="20201029 12:46:59.104" endtime="20201029 12:46:59.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:59.111" level="INFO">${ACCURACY} = {'diff': [0.00034787500000000096, 0.000338999999999999, 0.0003407079999999986, 0.00033933400000000016, 0.0003406249999999972, 0.0003404719999999979, 0.00034040299999999954, 0.00033954099999999876, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:59.108" endtime="20201029 12:46:59.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.116" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:46:59.115" endtime="20201029 12:46:59.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.118" level="INFO">VALUE: [0.00034787500000000096, 0.000338999999999999, 0.0003407079999999986, 0.00033933400000000016, 0.0003406249999999972, 0.0003404719999999979, 0.00034040299999999954, 0.00033954099999999876, 0.000342694000000001, 0.0003436529999999993, 0.00034236099999999936, 0.00034305499999999836, 0.00034062500000000065, 0.00033983400000000066, 0.00034286099999999986, 0.0003426109999999996, 0.00034369399999999856, 0.0003430699999999974, 0.00034009800000000395, 0.00034259700000000004, 0.0003385139999999981, 0.00034126400000000084, 0.0003386250000000021, 0.00034009699999999754, 0.0003412910000000005, 0.0003437500000000038, 0.00034287500000000637, 0.000340612000000004, 0.00034048600000000095, 0.00034340299999999907, 0.00034052799999999966, 0.0003405140000000001, 0.00034268099999999746, 0.00034329199999999505, 0.0003383610000000023, 0.0003411529999999968, 0.00033809699999999554, 0.00033770799999999906, 0.00034229199999999405, 0.0003380970000000025, 0.00034169399999999656, 0.000338806000000004, 0.00034191699999999714, 0.000341403000000004, 0.0003439309999999987, 0.00034098600000000145, 0.0003428340000000002, 0.0003409580000000023, 0.0003383190000000036, 0.00034298600000000345]</msg>
<status status="PASS" starttime="20201029 12:46:59.117" endtime="20201029 12:46:59.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.112" endtime="20201029 12:46:59.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.123" endtime="20201029 12:46:59.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.122" endtime="20201029 12:46:59.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.121" endtime="20201029 12:46:59.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.741" endtime="20201029 12:46:59.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.741" endtime="20201029 12:46:59.144"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.153" endtime="20201029 12:46:59.195"></status>
</kw>
<msg timestamp="20201029 12:46:59.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.151" endtime="20201029 12:46:59.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.196" endtime="20201029 12:46:59.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.199" endtime="20201029 12:46:59.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.149" endtime="20201029 12:46:59.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.147" endtime="20201029 12:46:59.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.208" endtime="20201029 12:46:59.494"></status>
</kw>
<msg timestamp="20201029 12:46:59.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028071389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028420181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.207" endtime="20201029 12:46:59.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028071389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028420181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.498" endtime="20201029 12:46:59.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.506" endtime="20201029 12:46:59.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.204" endtime="20201029 12:46:59.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.202" endtime="20201029 12:46:59.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:59.513" level="INFO">${RESULT} = [{'diff': 0.00034879200000000055}, {'diff': 0.0003422499999999988}, {'diff': 0.0003422919999999975}, {'diff': 0.00034322200000000067}, {'diff': 0.00034033400000000116}, {'diff': 0.00033844400000000024...</msg>
<status status="PASS" starttime="20201029 12:46:59.510" endtime="20201029 12:46:59.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:59.517" level="INFO">${ACCURACY} = {'diff': [0.00034879200000000055, 0.0003422499999999988, 0.0003422919999999975, 0.00034322200000000067, 0.00034033400000000116, 0.00033844400000000024, 0.00034166700000000036, 0.0003409729999999979, 0...</msg>
<status status="PASS" starttime="20201029 12:46:59.514" endtime="20201029 12:46:59.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.521" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:46:59.520" endtime="20201029 12:46:59.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.524" level="INFO">VALUE: [0.00034879200000000055, 0.0003422499999999988, 0.0003422919999999975, 0.00034322200000000067, 0.00034033400000000116, 0.00033844400000000024, 0.00034166700000000036, 0.0003409729999999979, 0.0003386529999999978, 0.0003412500000000013, 0.0003430560000000013, 0.00033981899999999815, 0.00034069500000000197, 0.0003413329999999992, 0.0003397640000000063, 0.00034424999999999734, 0.0003419439999999968, 0.00033838900000000144, 0.00034223599999999577, 0.0003441529999999998, 0.0003394580000000008, 0.0003407360000000012, 0.0003431110000000001, 0.00034437500000000093, 0.00034345899999999735, 0.0003397360000000002, 0.0003395139999999991, 0.0003398049999999986, 0.0003418469999999993, 0.0003396390000000027, 0.00034087499999999743, 0.00034120900000000204, 0.00034355500000000233, 0.00034172200000000263, 0.0003424869999999955, 0.0003439580000000053, 0.0003411390000000042, 0.000338403000000001, 0.0003416249999999982, 0.0003400689999999984, 0.0003428330000000007, 0.00033804199999999673, 0.00033894400000000074, 0.0003442779999999965, 0.0003425700000000004, 0.0003386390000000017, 0.00034386100000000086, 0.0003435419999999953, 0.00034423599999999777, 0.0003407779999999999]</msg>
<status status="PASS" starttime="20201029 12:46:59.523" endtime="20201029 12:46:59.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.518" endtime="20201029 12:46:59.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.530" endtime="20201029 12:46:59.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.528" endtime="20201029 12:46:59.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.527" endtime="20201029 12:46:59.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.145" endtime="20201029 12:46:59.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.145" endtime="20201029 12:46:59.550"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.559" endtime="20201029 12:46:59.596"></status>
</kw>
<msg timestamp="20201029 12:46:59.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.558" endtime="20201029 12:46:59.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.598" endtime="20201029 12:46:59.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.600" endtime="20201029 12:46:59.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.555" endtime="20201029 12:46:59.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.553" endtime="20201029 12:46:59.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.610" endtime="20201029 12:46:59.896"></status>
</kw>
<msg timestamp="20201029 12:46:59.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023650958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024006194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.608" endtime="20201029 12:46:59.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023650958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024006194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.900" endtime="20201029 12:46:59.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.908" endtime="20201029 12:46:59.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.606" endtime="20201029 12:46:59.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.604" endtime="20201029 12:46:59.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:59.915" level="INFO">${RESULT} = [{'diff': 0.00035523600000000183}, {'diff': 0.0003379719999999989}, {'diff': 0.0003433059999999981}, {'diff': 0.000339598}, {'diff': 0.00034290299999999857}, {'diff': 0.0003441250000000007}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 12:46:59.911" endtime="20201029 12:46:59.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:59.919" level="INFO">${ACCURACY} = {'diff': [0.00035523600000000183, 0.0003379719999999989, 0.0003433059999999981, 0.000339598, 0.00034290299999999857, 0.0003441250000000007, 0.00033798599999999845, 0.0003403750000000004, 0.00033852800...</msg>
<status status="PASS" starttime="20201029 12:46:59.916" endtime="20201029 12:46:59.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.924" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:46:59.923" endtime="20201029 12:46:59.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.926" level="INFO">VALUE: [0.00035523600000000183, 0.0003379719999999989, 0.0003433059999999981, 0.000339598, 0.00034290299999999857, 0.0003441250000000007, 0.00033798599999999845, 0.0003403750000000004, 0.00033852800000000113, 0.00034433299999999875, 0.0003386800000000009, 0.0003402779999999994, 0.00034154100000000076, 0.0003437639999999999, 0.00034387500000000043, 0.0003406110000000011, 0.0003389450000000002, 0.0003392909999999985, 0.0003419300000000007, 0.0003432499999999998, 0.0003432360000000037, 0.00033918099999999396, 0.00034313899999999925, 0.00033938900000000244, 0.00034136099999999836, 0.0003407779999999999, 0.0003435419999999953, 0.00034370800000000507, 0.00033883400000000313, 0.0003415699999999994, 0.0003438050000000026, 0.000340291999999999, 0.00034158399999999894, 0.0003439859999999975, 0.00034365199999999985, 0.00034259700000000004, 0.0003428330000000007, 0.00034070800000000206, 0.0003431669999999984, 0.00034324999999999634, 0.0003415000000000015, 0.0003432779999999955, 0.00034011100000000405, 0.0003420140000000016, 0.00034284799999999976, 0.00034241699999999764, 0.0003403469999999978, 0.0003411390000000042, 0.00034304100000000226, 0.0003382080000000065]</msg>
<status status="PASS" starttime="20201029 12:46:59.925" endtime="20201029 12:46:59.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.920" endtime="20201029 12:46:59.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.931" endtime="20201029 12:46:59.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.930" endtime="20201029 12:46:59.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.929" endtime="20201029 12:46:59.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.551" endtime="20201029 12:46:59.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.551" endtime="20201029 12:46:59.952"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.961" endtime="20201029 12:47:00.003"></status>
</kw>
<msg timestamp="20201029 12:47:00.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.960" endtime="20201029 12:47:00.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.005" endtime="20201029 12:47:00.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.007" endtime="20201029 12:47:00.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.957" endtime="20201029 12:47:00.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.955" endtime="20201029 12:47:00.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.016" endtime="20201029 12:47:00.303"></status>
</kw>
<msg timestamp="20201029 12:47:00.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023719708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024071875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.015" endtime="20201029 12:47:00.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023719708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024071875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.307" endtime="20201029 12:47:00.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.315" endtime="20201029 12:47:00.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.012" endtime="20201029 12:47:00.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.010" endtime="20201029 12:47:00.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.322" level="INFO">${RESULT} = [{'diff': 0.00035216700000000045}, {'diff': 0.00034263899999999875}, {'diff': 0.0003411109999999981}, {'diff': 0.00034284799999999976}, {'diff': 0.00034172199999999917}, {'diff': 0.0003440279999999997...</msg>
<status status="PASS" starttime="20201029 12:47:00.319" endtime="20201029 12:47:00.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:00.326" level="INFO">${ACCURACY} = {'diff': [0.00035216700000000045, 0.00034263899999999875, 0.0003411109999999981, 0.00034284799999999976, 0.00034172199999999917, 0.0003440279999999997, 0.0003388610000000028, 0.0003441250000000007, 0....</msg>
<status status="PASS" starttime="20201029 12:47:00.323" endtime="20201029 12:47:00.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.331" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:47:00.330" endtime="20201029 12:47:00.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.333" level="INFO">VALUE: [0.00035216700000000045, 0.00034263899999999875, 0.0003411109999999981, 0.00034284799999999976, 0.00034172199999999917, 0.0003440279999999997, 0.0003388610000000028, 0.0003441250000000007, 0.0003392779999999984, 0.0003406379999999973, 0.00034149999999999806, 0.0003403880000000005, 0.00034337499999999993, 0.0003423049999999976, 0.00034016700000000233, 0.0003421520000000018, 0.0003379170000000001, 0.0003421529999999978, 0.0003408750000000009, 0.0003416390000000012, 0.0003383049999999971, 0.00034351399999999616, 0.0003426249999999992, 0.00034011100000000405, 0.0003425979999999995, 0.000343292000000002, 0.00034258399999999994, 0.0003415689999999999, 0.00033870800000000006, 0.0003443330000000022, 0.00034354100000000276, 0.00033838900000000144, 0.0003427769999999955, 0.0003436810000000054, 0.0003429160000000056, 0.00034452800000000366, 0.00034215300000000476, 0.0003410970000000055, 0.0003442779999999965, 0.000343485999999997, 0.00034032000000000506, 0.0003389170000000011, 0.0003393469999999968, 0.000338403000000001, 0.00034048700000000043, 0.00034454100000000376, 0.00033819499999999947, 0.00034159699999999904, 0.00034036099999999736, 0.0003379030000000005]</msg>
<status status="PASS" starttime="20201029 12:47:00.332" endtime="20201029 12:47:00.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.327" endtime="20201029 12:47:00.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.338" endtime="20201029 12:47:00.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.336" endtime="20201029 12:47:00.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.335" endtime="20201029 12:47:00.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.953" endtime="20201029 12:47:00.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.953" endtime="20201029 12:47:00.359"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.368" endtime="20201029 12:47:00.405"></status>
</kw>
<msg timestamp="20201029 12:47:00.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.366" endtime="20201029 12:47:00.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.406" endtime="20201029 12:47:00.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.409" endtime="20201029 12:47:00.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.364" endtime="20201029 12:47:00.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.361" endtime="20201029 12:47:00.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.418" endtime="20201029 12:47:00.704"></status>
</kw>
<msg timestamp="20201029 12:47:00.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024149944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024491597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.416" endtime="20201029 12:47:00.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024149944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024491597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.708" endtime="20201029 12:47:00.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.716" endtime="20201029 12:47:00.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.414" endtime="20201029 12:47:00.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.412" endtime="20201029 12:47:00.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.723" level="INFO">${RESULT} = [{'diff': 0.0003416530000000008}, {'diff': 0.0003428049999999981}, {'diff': 0.0003406110000000011}, {'diff': 0.00033866700000000083}, {'diff': 0.00033875000000000224}, {'diff': 0.00034172200000000263}...</msg>
<status status="PASS" starttime="20201029 12:47:00.719" endtime="20201029 12:47:00.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:00.727" level="INFO">${ACCURACY} = {'diff': [0.0003416530000000008, 0.0003428049999999981, 0.0003406110000000011, 0.00033866700000000083, 0.00033875000000000224, 0.00034172200000000263, 0.00034319499999999753, 0.000341888999999998, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:00.724" endtime="20201029 12:47:00.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.731" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:47:00.730" endtime="20201029 12:47:00.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.734" level="INFO">VALUE: [0.0003416530000000008, 0.0003428049999999981, 0.0003406110000000011, 0.00033866700000000083, 0.00033875000000000224, 0.00034172200000000263, 0.00034319499999999753, 0.000341888999999998, 0.0003388200000000001, 0.00033836099999999883, 0.0003429300000000017, 0.0003431110000000001, 0.00034062500000000065, 0.00034183400000000266, 0.0003394999999999995, 0.0003417360000000022, 0.0003385550000000008, 0.00034436100000000136, 0.0003397640000000028, 0.00034172199999999917, 0.0003440549999999959, 0.0003429170000000051, 0.000339387999999996, 0.000338194, 0.00034019500000000147, 0.00033897299999999936, 0.00033820899999999904, 0.000338403000000001, 0.0003390139999999986, 0.00033832000000000306, 0.00033798599999999845, 0.00034073599999999427, 0.0003432500000000033, 0.0003438200000000016, 0.0003428340000000002, 0.00034063899999999675, 0.00033861100000000255, 0.0003440140000000036, 0.00033988900000000294, 0.0003404450000000017, 0.00034154200000000023, 0.0003430690000000014, 0.00034097199999999495, 0.0003383610000000023, 0.00034122200000000213, 0.0003422360000000027, 0.00034008299999999797, 0.0003388339999999962, 0.00033837500000000187, 0.0003421109999999991]</msg>
<status status="PASS" starttime="20201029 12:47:00.732" endtime="20201029 12:47:00.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.727" endtime="20201029 12:47:00.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.739" endtime="20201029 12:47:00.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.738" endtime="20201029 12:47:00.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.737" endtime="20201029 12:47:00.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.360" endtime="20201029 12:47:00.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.359" endtime="20201029 12:47:00.760"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.769" endtime="20201029 12:47:00.806"></status>
</kw>
<msg timestamp="20201029 12:47:00.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.767" endtime="20201029 12:47:00.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.808" endtime="20201029 12:47:00.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.810" endtime="20201029 12:47:00.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.765" endtime="20201029 12:47:00.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.763" endtime="20201029 12:47:00.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.820" endtime="20201029 12:47:01.122"></status>
</kw>
<msg timestamp="20201029 12:47:01.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024781333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025122375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.818" endtime="20201029 12:47:01.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024781333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025122375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.131" endtime="20201029 12:47:01.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.140" endtime="20201029 12:47:01.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.815" endtime="20201029 12:47:01.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.814" endtime="20201029 12:47:01.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:01.146" level="INFO">${RESULT} = [{'diff': 0.00034104199999999973}, {'diff': 0.0003413329999999992}, {'diff': 0.0003427780000000019}, {'diff': 0.00034284799999999976}, {'diff': 0.00034368100000000193}, {'diff': 0.0003399590000000008}...</msg>
<status status="PASS" starttime="20201029 12:47:01.143" endtime="20201029 12:47:01.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:01.151" level="INFO">${ACCURACY} = {'diff': [0.00034104199999999973, 0.0003413329999999992, 0.0003427780000000019, 0.00034284799999999976, 0.00034368100000000193, 0.0003399590000000008, 0.00033930500000000155, 0.0003405140000000001, 0....</msg>
<status status="PASS" starttime="20201029 12:47:01.147" endtime="20201029 12:47:01.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.156" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:47:01.155" endtime="20201029 12:47:01.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.159" level="INFO">VALUE: [0.00034104199999999973, 0.0003413329999999992, 0.0003427780000000019, 0.00034284799999999976, 0.00034368100000000193, 0.0003399590000000008, 0.00033930500000000155, 0.0003405140000000001, 0.00033856999999999984, 0.0003384300000000007, 0.00033933400000000016, 0.0003405000000000005, 0.0003394999999999995, 0.0003421109999999991, 0.0003381390000000012, 0.0003416660000000009, 0.0003437080000000016, 0.00034069500000000197, 0.0003441529999999998, 0.00034320800000000456, 0.00033822199999999913, 0.0003441250000000007, 0.0003407360000000012, 0.0003426940000000045, 0.0003399300000000022, 0.0003443200000000021, 0.000339194000000001, 0.00033930599999999755, 0.0003441799999999995, 0.0003444020000000006, 0.00033855500000000427, 0.0003406669999999959, 0.00033959699999999704, 0.0003408329999999987, 0.0003428200000000006, 0.0003423469999999998, 0.00034354200000000223, 0.00034142999999999674, 0.00034348600000000395, 0.0003410140000000006, 0.00033893100000000065, 0.0003429999999999961, 0.0003426390000000057, 0.00034419399999999906, 0.0003399590000000008, 0.0003418480000000057, 0.00034047300000000086, 0.0003394999999999995, 0.0003429729999999964, 0.00034227700000000194]</msg>
<status status="PASS" starttime="20201029 12:47:01.157" endtime="20201029 12:47:01.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.152" endtime="20201029 12:47:01.164"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:01.168" endtime="20201029 12:47:01.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.166" endtime="20201029 12:47:01.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.165" endtime="20201029 12:47:01.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.761" endtime="20201029 12:47:01.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.760" endtime="20201029 12:47:01.189"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.198" endtime="20201029 12:47:01.235"></status>
</kw>
<msg timestamp="20201029 12:47:01.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.196" endtime="20201029 12:47:01.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.237" endtime="20201029 12:47:01.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.239" endtime="20201029 12:47:01.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.193" endtime="20201029 12:47:01.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.191" endtime="20201029 12:47:01.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.248" endtime="20201029 12:47:01.534"></status>
</kw>
<msg timestamp="20201029 12:47:01.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023257611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023613458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.247" endtime="20201029 12:47:01.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023257611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023613458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.538" endtime="20201029 12:47:01.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.546" endtime="20201029 12:47:01.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.244" endtime="20201029 12:47:01.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.242" endtime="20201029 12:47:01.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:01.553" level="INFO">${RESULT} = [{'diff': 0.0003558469999999994}, {'diff': 0.00033998600000000045}, {'diff': 0.00034306899999999793}, {'diff': 0.00033837500000000187}, {'diff': 0.0003407360000000012}, {'diff': 0.0003387499999999988}...</msg>
<status status="PASS" starttime="20201029 12:47:01.550" endtime="20201029 12:47:01.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:01.557" level="INFO">${ACCURACY} = {'diff': [0.0003558469999999994, 0.00033998600000000045, 0.00034306899999999793, 0.00033837500000000187, 0.0003407360000000012, 0.0003387499999999988, 0.00033944400000000124, 0.0003377499999999978, 0....</msg>
<status status="PASS" starttime="20201029 12:47:01.554" endtime="20201029 12:47:01.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.562" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:47:01.560" endtime="20201029 12:47:01.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.564" level="INFO">VALUE: [0.0003558469999999994, 0.00033998600000000045, 0.00034306899999999793, 0.00033837500000000187, 0.0003407360000000012, 0.0003387499999999988, 0.00033944400000000124, 0.0003377499999999978, 0.0003399720000000009, 0.00033933400000000016, 0.0003405699999999984, 0.00033838899999999797, 0.00034072200000000163, 0.00034081899999999915, 0.0003410689999999994, 0.0003443340000000017, 0.0003378329999999992, 0.0003424859999999995, 0.0003413330000000027, 0.0003383199999999996, 0.00034350000000000006, 0.00033963799999999975, 0.0003402920000000059, 0.00034390299999999957, 0.0003406800000000029, 0.00033816700000000033, 0.0003415140000000011, 0.000341292, 0.00033802799999999716, 0.0003440839999999945, 0.0003377369999999977, 0.00033887500000000237, 0.000339291999999998, 0.0003395410000000057, 0.0003390410000000052, 0.0003422360000000027, 0.0003416529999999973, 0.00034054099999999976, 0.00033948599999999995, 0.0003378469999999953, 0.00034426400000000384, 0.00034015199999999635, 0.0003381380000000017, 0.0003406940000000025, 0.0003396250000000031, 0.00034376400000000334, 0.0003390699999999969, 0.0003410830000000059, 0.0003378469999999953, 0.00034387500000000043]</msg>
<status status="PASS" starttime="20201029 12:47:01.563" endtime="20201029 12:47:01.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.558" endtime="20201029 12:47:01.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:01.569" endtime="20201029 12:47:01.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.567" endtime="20201029 12:47:01.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.566" endtime="20201029 12:47:01.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.190" endtime="20201029 12:47:01.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.189" endtime="20201029 12:47:01.590"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.602" endtime="20201029 12:47:01.641"></status>
</kw>
<msg timestamp="20201029 12:47:01.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.599" endtime="20201029 12:47:01.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.643" endtime="20201029 12:47:01.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.647" endtime="20201029 12:47:01.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.596" endtime="20201029 12:47:01.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.594" endtime="20201029 12:47:01.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.656" endtime="20201029 12:47:01.942"></status>
</kw>
<msg timestamp="20201029 12:47:01.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029154764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029512583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.654" endtime="20201029 12:47:01.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029154764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029512583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.946" endtime="20201029 12:47:01.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.954" endtime="20201029 12:47:01.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.652" endtime="20201029 12:47:01.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.650" endtime="20201029 12:47:01.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:01.961" level="INFO">${RESULT} = [{'diff': 0.0003578189999999988}, {'diff': 0.0003426950000000005}, {'diff': 0.0003423050000000011}, {'diff': 0.00034072299999999764}, {'diff': 0.0003383329999999997}, {'diff': 0.00034376400000000334},...</msg>
<status status="PASS" starttime="20201029 12:47:01.958" endtime="20201029 12:47:01.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:01.966" level="INFO">${ACCURACY} = {'diff': [0.0003578189999999988, 0.0003426950000000005, 0.0003423050000000011, 0.00034072299999999764, 0.0003383329999999997, 0.00034376400000000334, 0.0003436659999999994, 0.0003416390000000047, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:01.962" endtime="20201029 12:47:01.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.971" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:47:01.970" endtime="20201029 12:47:01.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.974" level="INFO">VALUE: [0.0003578189999999988, 0.0003426950000000005, 0.0003423050000000011, 0.00034072299999999764, 0.0003383329999999997, 0.00034376400000000334, 0.0003436659999999994, 0.0003416390000000047, 0.00034020800000000156, 0.00034324999999999634, 0.0003412500000000013, 0.00034274999999999584, 0.00034286099999999986, 0.00034298700000000293, 0.0003423339999999997, 0.0003413329999999992, 0.0003384579999999998, 0.00034002700000000663, 0.0003439999999999971, 0.000342888999999999, 0.0003405280000000066, 0.00034201399999999466, 0.00034054199999999923, 0.00034342999999999874, 0.00034323599999999677, 0.00034172200000000263, 0.0003425690000000009, 0.00033972200000000063, 0.00034440300000000007, 0.00034097300000000136, 0.00034168099999999646, 0.00034287499999999943, 0.00034342999999999874, 0.00034219399999999706, 0.00034387500000000043, 0.0003415140000000011, 0.00034408300000000197, 0.00034174999999999484, 0.0003399439999999948, 0.0003380129999999981, 0.0003441110000000011, 0.0003386940000000005, 0.0003397640000000063, 0.0003384449999999997, 0.00034179199999999355, 0.0003412910000000005, 0.00034440300000000007, 0.0003391390000000022, 0.00034313899999999925, 0.0003435419999999953]</msg>
<status status="PASS" starttime="20201029 12:47:01.973" endtime="20201029 12:47:01.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.968" endtime="20201029 12:47:01.976"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:01.980" endtime="20201029 12:47:01.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.978" endtime="20201029 12:47:02.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.977" endtime="20201029 12:47:02.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.591" endtime="20201029 12:47:02.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.591" endtime="20201029 12:47:02.001"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.010" endtime="20201029 12:47:02.048"></status>
</kw>
<msg timestamp="20201029 12:47:02.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.008" endtime="20201029 12:47:02.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.049" endtime="20201029 12:47:02.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.052" endtime="20201029 12:47:02.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.005" endtime="20201029 12:47:02.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.003" endtime="20201029 12:47:02.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.061" endtime="20201029 12:47:02.347"></status>
</kw>
<msg timestamp="20201029 12:47:02.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025228958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025587944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.059" endtime="20201029 12:47:02.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025228958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025587944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.352" endtime="20201029 12:47:02.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.360" endtime="20201029 12:47:02.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.057" endtime="20201029 12:47:02.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.055" endtime="20201029 12:47:02.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:02.366" level="INFO">${RESULT} = [{'diff': 0.0003589860000000021}, {'diff': 0.00033969500000000097}, {'diff': 0.0003432919999999985}, {'diff': 0.0003429720000000004}, {'diff': 0.0003436110000000006}, {'diff': 0.0003389170000000011}, ...</msg>
<status status="PASS" starttime="20201029 12:47:02.363" endtime="20201029 12:47:02.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:02.371" level="INFO">${ACCURACY} = {'diff': [0.0003589860000000021, 0.00033969500000000097, 0.0003432919999999985, 0.0003429720000000004, 0.0003436110000000006, 0.0003389170000000011, 0.0003428049999999981, 0.0003404309999999987, 0.000...</msg>
<status status="PASS" starttime="20201029 12:47:02.367" endtime="20201029 12:47:02.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.376" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:47:02.375" endtime="20201029 12:47:02.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.378" level="INFO">VALUE: [0.0003589860000000021, 0.00033969500000000097, 0.0003432919999999985, 0.0003429720000000004, 0.0003436110000000006, 0.0003389170000000011, 0.0003428049999999981, 0.0003404309999999987, 0.0003443469999999983, 0.0003428470000000003, 0.00034131899999999965, 0.0003431110000000001, 0.00033991599999999914, 0.0003398199999999976, 0.00033988899999999947, 0.00034234799999999926, 0.00033987499999999643, 0.0003434579999999979, 0.00034148700000000143, 0.0003396390000000027, 0.0003431249999999997, 0.00034209699999999954, 0.000339291999999998, 0.0003396669999999949, 0.00034137499999999793, 0.0003399720000000009, 0.0003436659999999994, 0.000343679999999999, 0.00034231900000000065, 0.0003414720000000024, 0.0003430279999999952, 0.00034413900000000025, 0.00034230600000000055, 0.0003392499999999993, 0.00034374999999999684, 0.00033934700000000373, 0.0003416109999999986, 0.00033881899999999715, 0.000337999999999998, 0.0003422780000000014, 0.0003410970000000055, 0.0003379719999999989, 0.0003416249999999982, 0.0003399309999999947, 0.00034186099999999886, 0.0003403889999999965, 0.0003404720000000014, 0.00033872199999999963, 0.0003389170000000011, 0.0003405699999999984]</msg>
<status status="PASS" starttime="20201029 12:47:02.377" endtime="20201029 12:47:02.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.372" endtime="20201029 12:47:02.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:02.383" endtime="20201029 12:47:02.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.382" endtime="20201029 12:47:02.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.381" endtime="20201029 12:47:02.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.002" endtime="20201029 12:47:02.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.001" endtime="20201029 12:47:02.404"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.413" endtime="20201029 12:47:02.452"></status>
</kw>
<msg timestamp="20201029 12:47:02.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.411" endtime="20201029 12:47:02.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.454" endtime="20201029 12:47:02.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.456" endtime="20201029 12:47:02.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.409" endtime="20201029 12:47:02.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.407" endtime="20201029 12:47:02.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.465" endtime="20201029 12:47:02.753"></status>
</kw>
<msg timestamp="20201029 12:47:02.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023614806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023968778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.464" endtime="20201029 12:47:02.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023614806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023968778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.757" endtime="20201029 12:47:02.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.765" endtime="20201029 12:47:02.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.461" endtime="20201029 12:47:02.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.459" endtime="20201029 12:47:02.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:02.772" level="INFO">${RESULT} = [{'diff': 0.000353972000000001}, {'diff': 0.00034138900000000097}, {'diff': 0.0003432919999999985}, {'diff': 0.00033972200000000063}, {'diff': 0.000344276999999997}, {'diff': 0.0003431529999999988}, {...</msg>
<status status="PASS" starttime="20201029 12:47:02.768" endtime="20201029 12:47:02.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:02.776" level="INFO">${ACCURACY} = {'diff': [0.000353972000000001, 0.00034138900000000097, 0.0003432919999999985, 0.00033972200000000063, 0.000344276999999997, 0.0003431529999999988, 0.0003423330000000002, 0.00033931899999999765, 0.000...</msg>
<status status="PASS" starttime="20201029 12:47:02.773" endtime="20201029 12:47:02.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.780" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:47:02.779" endtime="20201029 12:47:02.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.783" level="INFO">VALUE: [0.000353972000000001, 0.00034138900000000097, 0.0003432919999999985, 0.00033972200000000063, 0.000344276999999997, 0.0003431529999999988, 0.0003423330000000002, 0.00033931899999999765, 0.000340097000000001, 0.0003419310000000002, 0.0003386109999999991, 0.00034172199999999917, 0.00034258300000000047, 0.0003378749999999979, 0.00033934700000000026, 0.00034252800000000166, 0.0003383329999999997, 0.0003379449999999992, 0.00034033400000000116, 0.0003412780000000004, 0.0003386250000000021, 0.0003405140000000001, 0.00034127700000000094, 0.0003394720000000004, 0.000343986999999997, 0.00034088900000000394, 0.0003391810000000009, 0.0003380840000000024, 0.0003387499999999988, 0.000339403000000002, 0.0003414999999999946, 0.0003439999999999971, 0.0003411669999999964, 0.0003420140000000016, 0.0003412639999999939, 0.00033969500000000097, 0.0003439309999999987, 0.0003426529999999983, 0.00034048600000000095, 0.0003404019999999966, 0.0003384160000000011, 0.000339194000000001, 0.00034341699999999864, 0.0003432219999999972, 0.0003385979999999955, 0.00033886099999999586, 0.0003421249999999987, 0.00034424999999999734, 0.0003425279999999947, 0.000338403000000001]</msg>
<status status="PASS" starttime="20201029 12:47:02.781" endtime="20201029 12:47:02.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.777" endtime="20201029 12:47:02.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:02.788" endtime="20201029 12:47:02.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.786" endtime="20201029 12:47:02.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.785" endtime="20201029 12:47:02.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.405" endtime="20201029 12:47:02.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.405" endtime="20201029 12:47:02.809"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.817" endtime="20201029 12:47:02.857"></status>
</kw>
<msg timestamp="20201029 12:47:02.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.816" endtime="20201029 12:47:02.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.859" endtime="20201029 12:47:02.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.861" endtime="20201029 12:47:02.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.813" endtime="20201029 12:47:02.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.811" endtime="20201029 12:47:02.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.870" endtime="20201029 12:47:03.157"></status>
</kw>
<msg timestamp="20201029 12:47:03.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026155042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026495847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.869" endtime="20201029 12:47:03.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026155042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026495847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.161" endtime="20201029 12:47:03.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.169" endtime="20201029 12:47:03.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.866" endtime="20201029 12:47:03.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.865" endtime="20201029 12:47:03.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:03.176" level="INFO">${RESULT} = [{'diff': 0.0003408049999999996}, {'diff': 0.00033958300000000094}, {'diff': 0.0003416110000000021}, {'diff': 0.00034433299999999875}, {'diff': 0.00034199999999999856}, {'diff': 0.0003436250000000002}...</msg>
<status status="PASS" starttime="20201029 12:47:03.173" endtime="20201029 12:47:03.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:03.180" level="INFO">${ACCURACY} = {'diff': [0.0003408049999999996, 0.00033958300000000094, 0.0003416110000000021, 0.00034433299999999875, 0.00034199999999999856, 0.0003436250000000002, 0.00033970900000000054, 0.00033816600000000085, 0...</msg>
<status status="PASS" starttime="20201029 12:47:03.177" endtime="20201029 12:47:03.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.185" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:47:03.184" endtime="20201029 12:47:03.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.187" level="INFO">VALUE: [0.0003408049999999996, 0.00033958300000000094, 0.0003416110000000021, 0.00034433299999999875, 0.00034199999999999856, 0.0003436250000000002, 0.00033970900000000054, 0.00033816600000000085, 0.0003403750000000004, 0.00034090300000000004, 0.00034108399999999844, 0.00033986100000000033, 0.0003385969999999995, 0.00033808299999999944, 0.0003439590000000048, 0.0003439999999999971, 0.00034201399999999466, 0.0003411109999999981, 0.0003440690000000024, 0.00034336100000000036, 0.0003421390000000052, 0.0003442360000000047, 0.00034004099999999926, 0.0003411109999999981, 0.0003418050000000006, 0.000338597000000003, 0.0003426669999999979, 0.0003403199999999981, 0.00033830599999999655, 0.0003387779999999979, 0.00034037500000000387, 0.00034452800000000366, 0.0003384170000000006, 0.00033806900000000334, 0.00034020800000000156, 0.0003409449999999953, 0.0003415000000000015, 0.00033797299999999836, 0.00033819499999999947, 0.0003397779999999989, 0.00033913899999999525, 0.0003402500000000003, 0.0003409720000000019, 0.00033902799999999816, 0.0003384579999999998, 0.00034376400000000334, 0.00034420800000000557, 0.0003420140000000016, 0.0003387770000000054, 0.0003407919999999995]</msg>
<status status="PASS" starttime="20201029 12:47:03.186" endtime="20201029 12:47:03.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.181" endtime="20201029 12:47:03.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.193" endtime="20201029 12:47:03.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.191" endtime="20201029 12:47:03.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.190" endtime="20201029 12:47:03.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.810" endtime="20201029 12:47:03.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.809" endtime="20201029 12:47:03.214"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.223" endtime="20201029 12:47:03.259"></status>
</kw>
<msg timestamp="20201029 12:47:03.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.221" endtime="20201029 12:47:03.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.260" endtime="20201029 12:47:03.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.263" endtime="20201029 12:47:03.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.218" endtime="20201029 12:47:03.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.216" endtime="20201029 12:47:03.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.272" endtime="20201029 12:47:03.558"></status>
</kw>
<msg timestamp="20201029 12:47:03.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022638681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022987389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.270" endtime="20201029 12:47:03.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022638681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022987389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.562" endtime="20201029 12:47:03.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.570" endtime="20201029 12:47:03.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.268" endtime="20201029 12:47:03.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.266" endtime="20201029 12:47:03.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:03.577" level="INFO">${RESULT} = [{'diff': 0.00034870799999999966}, {'diff': 0.00034084700000000176}, {'diff': 0.00034194499999999975}, {'diff': 0.00034087499999999743}, {'diff': 0.00033836099999999883}, {'diff': 0.000337805000000000...</msg>
<status status="PASS" starttime="20201029 12:47:03.573" endtime="20201029 12:47:03.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:03.582" level="INFO">${ACCURACY} = {'diff': [0.00034870799999999966, 0.00034084700000000176, 0.00034194499999999975, 0.00034087499999999743, 0.00033836099999999883, 0.00033780500000000005, 0.00033837500000000187, 0.0003425270000000022,...</msg>
<status status="PASS" starttime="20201029 12:47:03.578" endtime="20201029 12:47:03.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.586" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:47:03.585" endtime="20201029 12:47:03.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.589" level="INFO">VALUE: [0.00034870799999999966, 0.00034084700000000176, 0.00034194499999999975, 0.00034087499999999743, 0.00033836099999999883, 0.00033780500000000005, 0.00033837500000000187, 0.0003425270000000022, 0.00034437499999999746, 0.000343292000000002, 0.0003422499999999988, 0.0003420270000000017, 0.0003416529999999973, 0.0003444440000000028, 0.00034007000000000134, 0.0003401110000000006, 0.0003441659999999999, 0.0003436250000000002, 0.0003417920000000005, 0.00033856900000000037, 0.00034318099999999796, 0.0003410550000000033, 0.0003429720000000004, 0.00033786099999999833, 0.00034177700000000144, 0.0003406249999999972, 0.0003433200000000011, 0.00034102800000000016, 0.0003432910000000025, 0.00034115300000000376, 0.000339194000000001, 0.00034258300000000047, 0.00034066700000000283, 0.00034304200000000173, 0.00033908399999999644, 0.00033872199999999963, 0.0003390699999999969, 0.0003430140000000026, 0.0003441250000000007, 0.0003411109999999981, 0.0003441669999999994, 0.000342292000000001, 0.0003396390000000027, 0.00033884700000000323, 0.00033820799999999956, 0.0003393329999999972, 0.00034284799999999976, 0.00034009699999999754, 0.0003382229999999986, 0.0003429579999999974]</msg>
<status status="PASS" starttime="20201029 12:47:03.587" endtime="20201029 12:47:03.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.583" endtime="20201029 12:47:03.590"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.594" endtime="20201029 12:47:03.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.592" endtime="20201029 12:47:03.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.591" endtime="20201029 12:47:03.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.215" endtime="20201029 12:47:03.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.214" endtime="20201029 12:47:03.615"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.623" endtime="20201029 12:47:03.660"></status>
</kw>
<msg timestamp="20201029 12:47:03.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.622" endtime="20201029 12:47:03.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.662" endtime="20201029 12:47:03.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.665" endtime="20201029 12:47:03.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.619" endtime="20201029 12:47:03.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.617" endtime="20201029 12:47:03.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.674" endtime="20201029 12:47:03.963"></status>
</kw>
<msg timestamp="20201029 12:47:03.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024048528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024405819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.672" endtime="20201029 12:47:03.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024048528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024405819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.972" endtime="20201029 12:47:03.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.990" endtime="20201029 12:47:03.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.670" endtime="20201029 12:47:03.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.668" endtime="20201029 12:47:03.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.004" level="INFO">${RESULT} = [{'diff': 0.00035729099999999916}, {'diff': 0.00033866600000000135}, {'diff': 0.00033822199999999913}, {'diff': 0.00034134800000000173}, {'diff': 0.0003410140000000006}, {'diff': 0.0003391810000000009...</msg>
<status status="PASS" starttime="20201029 12:47:03.997" endtime="20201029 12:47:04.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:04.013" level="INFO">${ACCURACY} = {'diff': [0.00035729099999999916, 0.00033866600000000135, 0.00033822199999999913, 0.00034134800000000173, 0.0003410140000000006, 0.0003391810000000009, 0.00034326400000000284, 0.0003384300000000007, 0...</msg>
<status status="PASS" starttime="20201029 12:47:04.006" endtime="20201029 12:47:04.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.023" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:47:04.020" endtime="20201029 12:47:04.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.028" level="INFO">VALUE: [0.00035729099999999916, 0.00033866600000000135, 0.00033822199999999913, 0.00034134800000000173, 0.0003410140000000006, 0.0003391810000000009, 0.00034326400000000284, 0.0003384300000000007, 0.0003432919999999985, 0.00033936099999999983, 0.0003424440000000008, 0.00033948599999999995, 0.00034186099999999886, 0.00034095799999999885, 0.0003405420000000027, 0.0003434310000000017, 0.0003422629999999989, 0.0003401110000000006, 0.0003443330000000022, 0.00033993100000000165, 0.00033788900000000094, 0.000344000000000004, 0.00034386100000000086, 0.0003423469999999998, 0.0003395559999999978, 0.0003404450000000017, 0.0003384579999999998, 0.0003440549999999959, 0.00034130599999999955, 0.0003429999999999961, 0.0003407230000000011, 0.00034295899999999685, 0.00034137500000000487, 0.000338597000000003, 0.0003405140000000001, 0.000342679999999998, 0.0003437079999999981, 0.0003425419999999943, 0.000344292000000003, 0.00034205500000000083, 0.00034405500000000283, 0.0003428050000000016, 0.00033980599999999805, 0.00034058299999999847, 0.00034419399999999906, 0.0003382770000000049, 0.0003432910000000025, 0.00033877800000000485, 0.00034437500000000093, 0.0003405000000000005]</msg>
<status status="PASS" starttime="20201029 12:47:04.025" endtime="20201029 12:47:04.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.015" endtime="20201029 12:47:04.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.038" endtime="20201029 12:47:04.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.035" endtime="20201029 12:47:04.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.033" endtime="20201029 12:47:04.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.615" endtime="20201029 12:47:04.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.615" endtime="20201029 12:47:04.061"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.070" endtime="20201029 12:47:04.108"></status>
</kw>
<msg timestamp="20201029 12:47:04.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.069" endtime="20201029 12:47:04.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.110" endtime="20201029 12:47:04.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.113" endtime="20201029 12:47:04.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.066" endtime="20201029 12:47:04.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.064" endtime="20201029 12:47:04.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.122" endtime="20201029 12:47:04.408"></status>
</kw>
<msg timestamp="20201029 12:47:04.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025898153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026230972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.120" endtime="20201029 12:47:04.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025898153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026230972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.412" endtime="20201029 12:47:04.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.420" endtime="20201029 12:47:04.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.117" endtime="20201029 12:47:04.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.116" endtime="20201029 12:47:04.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.426" level="INFO">${RESULT} = [{'diff': 0.00033281900000000156}, {'diff': 0.0003387780000000014}, {'diff': 0.0003399030000000025}, {'diff': 0.0003429440000000013}, {'diff': 0.00034173599999999874}, {'diff': 0.00034073599999999774}...</msg>
<status status="PASS" starttime="20201029 12:47:04.423" endtime="20201029 12:47:04.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:04.430" level="INFO">${ACCURACY} = {'diff': [0.00033281900000000156, 0.0003387780000000014, 0.0003399030000000025, 0.0003429440000000013, 0.00034173599999999874, 0.00034073599999999774, 0.0003408620000000008, 0.0003400139999999996, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:04.427" endtime="20201029 12:47:04.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.435" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:47:04.434" endtime="20201029 12:47:04.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.437" level="INFO">VALUE: [0.00033281900000000156, 0.0003387780000000014, 0.0003399030000000025, 0.0003429440000000013, 0.00034173599999999874, 0.00034073599999999774, 0.0003408620000000008, 0.0003400139999999996, 0.00033838899999999797, 0.0003392499999999993, 0.00034406899999999893, 0.00034076400000000034, 0.00034172199999999917, 0.00033843100000000015, 0.00033988900000000294, 0.0003384589999999993, 0.0003423330000000002, 0.0003417230000000021, 0.00034354100000000276, 0.00033870800000000006, 0.00034018099999999496, 0.0003427920000000015, 0.00034386100000000086, 0.0003395979999999965, 0.00034070800000000206, 0.00033882000000000356, 0.0003402500000000003, 0.00033822199999999913, 0.00034419499999999853, 0.00034291699999999814, 0.00033838900000000144, 0.00033793099999999965, 0.00034209699999999954, 0.0003441799999999995, 0.00034402800000000316, 0.0003388329999999967, 0.0003431249999999997, 0.0003439170000000061, 0.0003404309999999952, 0.00034056900000000584, 0.00034387500000000043, 0.0003442230000000046, 0.00033870899999999954, 0.00034352699999999625, 0.0003428330000000007, 0.0003389030000000015, 0.0003410830000000059, 0.00034365199999999985, 0.00034097199999999495, 0.0003443200000000021]</msg>
<status status="PASS" starttime="20201029 12:47:04.436" endtime="20201029 12:47:04.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.431" endtime="20201029 12:47:04.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.443" endtime="20201029 12:47:04.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.441" endtime="20201029 12:47:04.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.440" endtime="20201029 12:47:04.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.062" endtime="20201029 12:47:04.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.062" endtime="20201029 12:47:04.464"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.472" endtime="20201029 12:47:04.510"></status>
</kw>
<msg timestamp="20201029 12:47:04.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.471" endtime="20201029 12:47:04.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.511" endtime="20201029 12:47:04.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.515" endtime="20201029 12:47:04.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.468" endtime="20201029 12:47:04.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.466" endtime="20201029 12:47:04.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.526" endtime="20201029 12:47:04.822"></status>
</kw>
<msg timestamp="20201029 12:47:04.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023822083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024181681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.524" endtime="20201029 12:47:04.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023822083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024181681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.831" endtime="20201029 12:47:04.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.849" endtime="20201029 12:47:04.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.521" endtime="20201029 12:47:04.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.519" endtime="20201029 12:47:04.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.862" level="INFO">${RESULT} = [{'diff': 0.00035959799999999917}, {'diff': 0.00034054199999999923}, {'diff': 0.00034236099999999936}, {'diff': 0.0003433889999999995}, {'diff': 0.00034036100000000083}, {'diff': 0.0003437360000000007...</msg>
<status status="PASS" starttime="20201029 12:47:04.855" endtime="20201029 12:47:04.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:04.870" level="INFO">${ACCURACY} = {'diff': [0.00035959799999999917, 0.00034054199999999923, 0.00034236099999999936, 0.0003433889999999995, 0.00034036100000000083, 0.00034373600000000074, 0.00034177700000000144, 0.0003428049999999981, ...</msg>
<status status="PASS" starttime="20201029 12:47:04.864" endtime="20201029 12:47:04.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.875" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:47:04.874" endtime="20201029 12:47:04.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.877" level="INFO">VALUE: [0.00035959799999999917, 0.00034054199999999923, 0.00034236099999999936, 0.0003433889999999995, 0.00034036100000000083, 0.00034373600000000074, 0.00034177700000000144, 0.0003428049999999981, 0.00034450000000000106, 0.00033861100000000255, 0.0003385269999999982, 0.00033926399999999884, 0.0003405560000000023, 0.00033940299999999854, 0.0003436250000000002, 0.000340598000000001, 0.0003393190000000011, 0.00033852799999999766, 0.0003417920000000005, 0.0003412079999999991, 0.0003432499999999998, 0.00034070900000000154, 0.00034408400000000144, 0.00033898599999999945, 0.0003441529999999998, 0.00034286099999999986, 0.00034369500000000497, 0.00034136099999999836, 0.00034365300000000626, 0.0003419999999999951, 0.0003427360000000032, 0.0003429859999999965, 0.000341292, 0.00034315199999999935, 0.0003435700000000014, 0.0003399580000000013, 0.00034037499999999693, 0.00033820799999999956, 0.00033984799999999676, 0.0003394999999999995, 0.0003402370000000002, 0.00034131899999999965, 0.0003389160000000016, 0.000342000000000002, 0.0003387920000000044, 0.00034424999999999734, 0.0003387920000000044, 0.00034169500000000297, 0.0003430279999999952, 0.0003443470000000018]</msg>
<status status="PASS" starttime="20201029 12:47:04.876" endtime="20201029 12:47:04.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.871" endtime="20201029 12:47:04.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.882" endtime="20201029 12:47:04.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.881" endtime="20201029 12:47:04.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.880" endtime="20201029 12:47:04.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.465" endtime="20201029 12:47:04.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.464" endtime="20201029 12:47:04.903"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.912" endtime="20201029 12:47:04.947"></status>
</kw>
<msg timestamp="20201029 12:47:04.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.910" endtime="20201029 12:47:04.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.948" endtime="20201029 12:47:04.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.951" endtime="20201029 12:47:04.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.907" endtime="20201029 12:47:04.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.905" endtime="20201029 12:47:04.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.960" endtime="20201029 12:47:05.249"></status>
</kw>
<msg timestamp="20201029 12:47:05.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021590542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021931486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.958" endtime="20201029 12:47:05.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021590542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021931486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.253" endtime="20201029 12:47:05.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.262" endtime="20201029 12:47:05.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.956" endtime="20201029 12:47:05.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.954" endtime="20201029 12:47:05.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:05.268" level="INFO">${RESULT} = [{'diff': 0.0003409439999999993}, {'diff': 0.00034287499999999943}, {'diff': 0.00034241599999999817}, {'diff': 0.00033952800000000213}, {'diff': 0.0003382780000000009}, {'diff': 0.0003384579999999998}...</msg>
<status status="PASS" starttime="20201029 12:47:05.265" endtime="20201029 12:47:05.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:05.273" level="INFO">${ACCURACY} = {'diff': [0.0003409439999999993, 0.00034287499999999943, 0.00034241599999999817, 0.00033952800000000213, 0.0003382780000000009, 0.0003384579999999998, 0.0003415140000000011, 0.00034154200000000023, 0....</msg>
<status status="PASS" starttime="20201029 12:47:05.269" endtime="20201029 12:47:05.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.278" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:47:05.276" endtime="20201029 12:47:05.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.280" level="INFO">VALUE: [0.0003409439999999993, 0.00034287499999999943, 0.00034241599999999817, 0.00033952800000000213, 0.0003382780000000009, 0.0003384579999999998, 0.0003415140000000011, 0.00034154200000000023, 0.0003406520000000003, 0.0003429720000000004, 0.0003404729999999974, 0.00034017999999999896, 0.00034107000000000234, 0.0003438609999999974, 0.00034341699999999864, 0.00034223599999999924, 0.0003409299999999997, 0.000342791999999998, 0.0003428050000000016, 0.000337999999999998, 0.0003421249999999987, 0.00034434800000000126, 0.0003440140000000001, 0.0003414300000000002, 0.00033848599999999895, 0.00033888899999999847, 0.00034154200000000023, 0.00034330600000000155, 0.00034236099999999936, 0.00034002799999999916, 0.00033954099999999876, 0.0003389450000000002, 0.00034297199999999695, 0.00033866600000000135, 0.00033966700000000183, 0.0003435000000000035, 0.0003410140000000006, 0.00034048600000000095, 0.0003440839999999945, 0.0003435000000000035, 0.0003407230000000011, 0.00034069399999999556, 0.00034144400000000324, 0.00034087499999999743, 0.00033976399999999934, 0.00034384699999999435, 0.0003404580000000018, 0.00033822199999999913, 0.0003392079999999936, 0.00033936199999999583]</msg>
<status status="PASS" starttime="20201029 12:47:05.279" endtime="20201029 12:47:05.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.274" endtime="20201029 12:47:05.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:05.285" endtime="20201029 12:47:05.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.284" endtime="20201029 12:47:05.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.282" endtime="20201029 12:47:05.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.904" endtime="20201029 12:47:05.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.903" endtime="20201029 12:47:05.306"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.315" endtime="20201029 12:47:05.353"></status>
</kw>
<msg timestamp="20201029 12:47:05.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.314" endtime="20201029 12:47:05.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.355" endtime="20201029 12:47:05.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.357" endtime="20201029 12:47:05.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.311" endtime="20201029 12:47:05.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.309" endtime="20201029 12:47:05.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.367" endtime="20201029 12:47:05.676"></status>
</kw>
<msg timestamp="20201029 12:47:05.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025512944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025851125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.365" endtime="20201029 12:47:05.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025512944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025851125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.680" endtime="20201029 12:47:05.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.689" endtime="20201029 12:47:05.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.363" endtime="20201029 12:47:05.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.361" endtime="20201029 12:47:05.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:05.695" level="INFO">${RESULT} = [{'diff': 0.0003381809999999999}, {'diff': 0.0003438330000000017}, {'diff': 0.00034249999999999906}, {'diff': 0.0003410980000000015}, {'diff': 0.00033962499999999965}, {'diff': 0.0003391250000000026},...</msg>
<status status="PASS" starttime="20201029 12:47:05.692" endtime="20201029 12:47:05.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:05.700" level="INFO">${ACCURACY} = {'diff': [0.0003381809999999999, 0.0003438330000000017, 0.00034249999999999906, 0.0003410980000000015, 0.00033962499999999965, 0.0003391250000000026, 0.00034090300000000004, 0.00033888899999999847, 0....</msg>
<status status="PASS" starttime="20201029 12:47:05.696" endtime="20201029 12:47:05.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.704" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:47:05.703" endtime="20201029 12:47:05.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.707" level="INFO">VALUE: [0.0003381809999999999, 0.0003438330000000017, 0.00034249999999999906, 0.0003410980000000015, 0.00033962499999999965, 0.0003391250000000026, 0.00034090300000000004, 0.00033888899999999847, 0.000343889, 0.0003438189999999987, 0.0003437639999999999, 0.00033854100000000123, 0.0003390839999999999, 0.00033898599999999945, 0.000343986000000001, 0.00034350000000000006, 0.00034068099999999546, 0.00033816600000000085, 0.0003433470000000008, 0.0003393610000000033, 0.0003417219999999957, 0.00034187500000000537, 0.00034076400000000034, 0.00034172200000000263, 0.00034316700000000533, 0.00033886099999999586, 0.000342292000000001, 0.0003389439999999938, 0.0003417360000000022, 0.0003391249999999957, 0.0003406109999999976, 0.00034431900000000265, 0.0003441110000000011, 0.0003402370000000002, 0.0003400559999999983, 0.0003429859999999965, 0.00034054099999999976, 0.0003381390000000012, 0.00033942999999999474, 0.00033918099999999396, 0.000339888999999996, 0.00033941699999999464, 0.00034393100000000565, 0.0003396810000000014, 0.0003395139999999991, 0.0003417920000000005, 0.0003423889999999985, 0.00033901400000000553, 0.00034419399999999906, 0.0003392359999999997]</msg>
<status status="PASS" starttime="20201029 12:47:05.705" endtime="20201029 12:47:05.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.700" endtime="20201029 12:47:05.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:05.713" endtime="20201029 12:47:05.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.711" endtime="20201029 12:47:05.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.710" endtime="20201029 12:47:05.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.307" endtime="20201029 12:47:05.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.307" endtime="20201029 12:47:05.734"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.743" endtime="20201029 12:47:05.781"></status>
</kw>
<msg timestamp="20201029 12:47:05.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.741" endtime="20201029 12:47:05.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.783" endtime="20201029 12:47:05.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.785" endtime="20201029 12:47:05.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.738" endtime="20201029 12:47:05.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.736" endtime="20201029 12:47:05.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.795" endtime="20201029 12:47:06.082"></status>
</kw>
<msg timestamp="20201029 12:47:06.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02504175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025380333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:05.793" endtime="20201029 12:47:06.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02504175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025380333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:06.086" endtime="20201029 12:47:06.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.094" endtime="20201029 12:47:06.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.790" endtime="20201029 12:47:06.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.789" endtime="20201029 12:47:06.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.101" level="INFO">${RESULT} = [{'diff': 0.00033858299999999994}, {'diff': 0.0003420699999999999}, {'diff': 0.00033969500000000097}, {'diff': 0.0003441110000000011}, {'diff': 0.00033840299999999754}, {'diff': 0.000343889}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:47:06.098" endtime="20201029 12:47:06.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:06.106" level="INFO">${ACCURACY} = {'diff': [0.00033858299999999994, 0.0003420699999999999, 0.00033969500000000097, 0.0003441110000000011, 0.00033840299999999754, 0.000343889, 0.0003397079999999976, 0.0003439730000000009, 0.00034227799...</msg>
<status status="PASS" starttime="20201029 12:47:06.102" endtime="20201029 12:47:06.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.111" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:47:06.110" endtime="20201029 12:47:06.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.113" level="INFO">VALUE: [0.00033858299999999994, 0.0003420699999999999, 0.00033969500000000097, 0.0003441110000000011, 0.00033840299999999754, 0.000343889, 0.0003397079999999976, 0.0003439730000000009, 0.00034227799999999795, 0.0003426109999999996, 0.00034137499999999793, 0.00034086099999999786, 0.0003441250000000007, 0.0003409439999999993, 0.0003384589999999993, 0.00033940199999999907, 0.0003405140000000001, 0.0003409439999999993, 0.0003382499999999983, 0.00034437500000000093, 0.00034365199999999985, 0.0003394170000000016, 0.0003393190000000046, 0.0003390420000000047, 0.0003406659999999964, 0.0003390139999999986, 0.00034347199999999745, 0.00034179199999999355, 0.0003393610000000033, 0.000340791, 0.0003401109999999971, 0.0003409720000000019, 0.0003402079999999946, 0.00034134700000000573, 0.0003385269999999982, 0.0003415000000000015, 0.00033788800000000146, 0.0003393190000000046, 0.0003412500000000013, 0.00034242999999999774, 0.0003405840000000049, 0.00034391599999999967, 0.0003439720000000049, 0.0003421109999999991, 0.00033940299999999507, 0.0003442779999999965, 0.0003432500000000033, 0.00034226299999999543, 0.00034395899999999785, 0.0003442780000000034]</msg>
<status status="PASS" starttime="20201029 12:47:06.112" endtime="20201029 12:47:06.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.107" endtime="20201029 12:47:06.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.118" endtime="20201029 12:47:06.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.117" endtime="20201029 12:47:06.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.116" endtime="20201029 12:47:06.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.735" endtime="20201029 12:47:06.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.734" endtime="20201029 12:47:06.139"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.148" endtime="20201029 12:47:06.183"></status>
</kw>
<msg timestamp="20201029 12:47:06.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.147" endtime="20201029 12:47:06.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.184" endtime="20201029 12:47:06.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.187" endtime="20201029 12:47:06.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.144" endtime="20201029 12:47:06.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.142" endtime="20201029 12:47:06.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.196" endtime="20201029 12:47:06.484"></status>
</kw>
<msg timestamp="20201029 12:47:06.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021353083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021707583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.195" endtime="20201029 12:47:06.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021353083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021707583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.489" endtime="20201029 12:47:06.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.497" endtime="20201029 12:47:06.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.192" endtime="20201029 12:47:06.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.190" endtime="20201029 12:47:06.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.504" level="INFO">${RESULT} = [{'diff': 0.00035450000000000065}, {'diff': 0.0003415699999999994}, {'diff': 0.000343791999999999}, {'diff': 0.0003425269999999987}, {'diff': 0.0003384589999999993}, {'diff': 0.0003440700000000019}, {...</msg>
<status status="PASS" starttime="20201029 12:47:06.500" endtime="20201029 12:47:06.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:06.508" level="INFO">${ACCURACY} = {'diff': [0.00035450000000000065, 0.0003415699999999994, 0.000343791999999999, 0.0003425269999999987, 0.0003384589999999993, 0.0003440700000000019, 0.0003422499999999988, 0.0003436120000000001, 0.0003...</msg>
<status status="PASS" starttime="20201029 12:47:06.505" endtime="20201029 12:47:06.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.512" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:47:06.511" endtime="20201029 12:47:06.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.515" level="INFO">VALUE: [0.00035450000000000065, 0.0003415699999999994, 0.000343791999999999, 0.0003425269999999987, 0.0003384589999999993, 0.0003440700000000019, 0.0003422499999999988, 0.0003436120000000001, 0.0003407500000000008, 0.0003415699999999994, 0.0003397360000000002, 0.00033890299999999804, 0.0003405000000000005, 0.0003380840000000024, 0.0003438059999999986, 0.00034057000000000184, 0.00033887500000000237, 0.000343791999999999, 0.00034055499999999933, 0.0003409439999999993, 0.0003396390000000027, 0.0003442919999999995, 0.00034409699999999807, 0.00034245800000000035, 0.00034038899999999997, 0.0003400559999999983, 0.0003427639999999989, 0.00033831899999999665, 0.000343791000000003, 0.00034141699999999664, 0.0003443470000000018, 0.00034016700000000233, 0.00034076300000000087, 0.00034330600000000155, 0.0003390840000000034, 0.0003392359999999997, 0.0003411529999999968, 0.00034319500000000447, 0.0003423050000000011, 0.00034422299999999767, 0.00033877699999999844, 0.00033866700000000083, 0.0003441250000000007, 0.0003419309999999967, 0.000338194, 0.0003417079999999961, 0.00034213899999999825, 0.0003411659999999969, 0.00034454100000000376, 0.00033920900000000004]</msg>
<status status="PASS" starttime="20201029 12:47:06.514" endtime="20201029 12:47:06.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.509" endtime="20201029 12:47:06.523"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.527" endtime="20201029 12:47:06.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.526" endtime="20201029 12:47:06.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.524" endtime="20201029 12:47:06.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.140" endtime="20201029 12:47:06.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.140" endtime="20201029 12:47:06.548"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.557" endtime="20201029 12:47:06.594"></status>
</kw>
<msg timestamp="20201029 12:47:06.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.555" endtime="20201029 12:47:06.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.596" endtime="20201029 12:47:06.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.599" endtime="20201029 12:47:06.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.553" endtime="20201029 12:47:06.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.551" endtime="20201029 12:47:06.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.608" endtime="20201029 12:47:06.895"></status>
</kw>
<msg timestamp="20201029 12:47:06.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024657667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025001069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.606" endtime="20201029 12:47:06.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024657667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025001069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.899" endtime="20201029 12:47:06.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.907" endtime="20201029 12:47:06.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.604" endtime="20201029 12:47:06.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.602" endtime="20201029 12:47:06.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.914" level="INFO">${RESULT} = [{'diff': 0.0003434019999999996}, {'diff': 0.00034186099999999886}, {'diff': 0.0003444170000000031}, {'diff': 0.00034287499999999943}, {'diff': 0.0003428189999999977}, {'diff': 0.00034122199999999867}...</msg>
<status status="PASS" starttime="20201029 12:47:06.910" endtime="20201029 12:47:06.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:06.918" level="INFO">${ACCURACY} = {'diff': [0.0003434019999999996, 0.00034186099999999886, 0.0003444170000000031, 0.00034287499999999943, 0.0003428189999999977, 0.00034122199999999867, 0.00034172299999999864, 0.0003386520000000018, 0....</msg>
<status status="PASS" starttime="20201029 12:47:06.915" endtime="20201029 12:47:06.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.923" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:47:06.921" endtime="20201029 12:47:06.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.925" level="INFO">VALUE: [0.0003434019999999996, 0.00034186099999999886, 0.0003444170000000031, 0.00034287499999999943, 0.0003428189999999977, 0.00034122199999999867, 0.00034172299999999864, 0.0003386520000000018, 0.00034072199999999817, 0.000339194000000001, 0.00033990199999999957, 0.0003425000000000025, 0.0003443339999999982, 0.00033838899999999797, 0.0003414300000000002, 0.00034026399999999984, 0.0003423049999999976, 0.0003405130000000006, 0.0003394590000000003, 0.0003423469999999998, 0.0003431249999999997, 0.0003438050000000026, 0.0003405000000000005, 0.0003438200000000016, 0.0003429439999999978, 0.0003403199999999981, 0.0003438330000000017, 0.000343889, 0.000341679999999997, 0.0003387499999999988, 0.0003396940000000015, 0.0003441669999999994, 0.00033938900000000244, 0.0003389030000000015, 0.0003415000000000015, 0.00034141599999999717, 0.0003443470000000018, 0.00034315199999999935, 0.0003384999999999985, 0.00033987499999999643, 0.0003384719999999994, 0.0003406250000000041, 0.00034, 0.00034302800000000216, 0.00034334800000000026, 0.0003382640000000048, 0.00034445899999999835, 0.00034337499999999993, 0.00034290299999999857, 0.00034355500000000233]</msg>
<status status="PASS" starttime="20201029 12:47:06.924" endtime="20201029 12:47:06.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.919" endtime="20201029 12:47:06.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.931" endtime="20201029 12:47:06.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.930" endtime="20201029 12:47:06.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.928" endtime="20201029 12:47:06.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.549" endtime="20201029 12:47:06.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.548" endtime="20201029 12:47:06.952"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.961" endtime="20201029 12:47:06.997"></status>
</kw>
<msg timestamp="20201029 12:47:06.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.959" endtime="20201029 12:47:06.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.999" endtime="20201029 12:47:07.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.001" endtime="20201029 12:47:07.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.957" endtime="20201029 12:47:07.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.955" endtime="20201029 12:47:07.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.011" endtime="20201029 12:47:07.297"></status>
</kw>
<msg timestamp="20201029 12:47:07.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022803319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.009" endtime="20201029 12:47:07.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022803319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.302" endtime="20201029 12:47:07.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.310" endtime="20201029 12:47:07.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.006" endtime="20201029 12:47:07.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.005" endtime="20201029 12:47:07.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.317" level="INFO">${RESULT} = [{'diff': 0.0003441799999999995}, {'diff': 0.0003405270000000002}, {'diff': 0.00033954099999999876}, {'diff': 0.00034102800000000016}, {'diff': 0.00033876399999999834}, {'diff': 0.00033961199999999955...</msg>
<status status="PASS" starttime="20201029 12:47:07.313" endtime="20201029 12:47:07.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:07.322" level="INFO">${ACCURACY} = {'diff': [0.0003441799999999995, 0.0003405270000000002, 0.00033954099999999876, 0.00034102800000000016, 0.00033876399999999834, 0.00033961199999999955, 0.00033941599999999864, 0.00034434800000000126, ...</msg>
<status status="PASS" starttime="20201029 12:47:07.318" endtime="20201029 12:47:07.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.326" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:47:07.325" endtime="20201029 12:47:07.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.329" level="INFO">VALUE: [0.0003441799999999995, 0.0003405270000000002, 0.00033954099999999876, 0.00034102800000000016, 0.00033876399999999834, 0.00033961199999999955, 0.00033941599999999864, 0.00034434800000000126, 0.00034155500000000033, 0.0003424019999999986, 0.0003429170000000016, 0.00033877699999999844, 0.0003421110000000026, 0.00033915300000000176, 0.00034118099999999943, 0.0003423059999999971, 0.00034122199999999867, 0.00033902799999999816, 0.0003425269999999987, 0.00034031899999999865, 0.000341000000000001, 0.00034383299999999825, 0.00034295800000000085, 0.00034330600000000155, 0.0003401810000000019, 0.00033805600000000324, 0.0003437079999999981, 0.0003407360000000012, 0.00034145899999999535, 0.00033886199999999533, 0.00034033400000000463, 0.00034408400000000144, 0.00033966700000000183, 0.00034081899999999915, 0.0003411800000000034, 0.00033852799999999766, 0.0003430279999999952, 0.00034094400000000274, 0.00033804099999999726, 0.00034423599999999777, 0.0003382359999999987, 0.0003399170000000021, 0.0003434449999999978, 0.0003412910000000005, 0.00034006900000000534, 0.000341292, 0.0003397499999999998, 0.0003422780000000014, 0.0003435980000000005, 0.000339387999999996]</msg>
<status status="PASS" starttime="20201029 12:47:07.328" endtime="20201029 12:47:07.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.323" endtime="20201029 12:47:07.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:07.334" endtime="20201029 12:47:07.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.333" endtime="20201029 12:47:07.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.331" endtime="20201029 12:47:07.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.953" endtime="20201029 12:47:07.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.953" endtime="20201029 12:47:07.355"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.364" endtime="20201029 12:47:07.399"></status>
</kw>
<msg timestamp="20201029 12:47:07.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.362" endtime="20201029 12:47:07.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.401" endtime="20201029 12:47:07.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.403" endtime="20201029 12:47:07.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.360" endtime="20201029 12:47:07.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.358" endtime="20201029 12:47:07.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.413" endtime="20201029 12:47:07.700"></status>
</kw>
<msg timestamp="20201029 12:47:07.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021490833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.411" endtime="20201029 12:47:07.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021490833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.704" endtime="20201029 12:47:07.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.712" endtime="20201029 12:47:07.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.408" endtime="20201029 12:47:07.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.407" endtime="20201029 12:47:07.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.719" level="INFO">${RESULT} = [{'diff': 0.000359652999999998}, {'diff': 0.0003389309999999972}, {'diff': 0.0003415979999999985}, {'diff': 0.0003421109999999991}, {'diff': 0.00034355499999999886}, {'diff': 0.0003437630000000004}, {...</msg>
<status status="PASS" starttime="20201029 12:47:07.716" endtime="20201029 12:47:07.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:07.723" level="INFO">${ACCURACY} = {'diff': [0.000359652999999998, 0.0003389309999999972, 0.0003415979999999985, 0.0003421109999999991, 0.00034355499999999886, 0.0003437630000000004, 0.00033952700000000266, 0.00034363899999999975, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:07.720" endtime="20201029 12:47:07.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.728" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:47:07.727" endtime="20201029 12:47:07.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.731" level="INFO">VALUE: [0.000359652999999998, 0.0003389309999999972, 0.0003415979999999985, 0.0003421109999999991, 0.00034355499999999886, 0.0003437630000000004, 0.00033952700000000266, 0.00034363899999999975, 0.00034062500000000065, 0.0003406110000000011, 0.0003436529999999993, 0.00033891599999999814, 0.00034377799999999945, 0.0003387359999999992, 0.0003403199999999981, 0.0003431529999999988, 0.000339598, 0.0003420279999999977, 0.00034230600000000055, 0.0003400840000000009, 0.000338597999999999, 0.00033986100000000033, 0.0003401810000000019, 0.00034254200000000123, 0.0003444730000000014, 0.0003382229999999986, 0.0003437639999999964, 0.0003419720000000029, 0.00034197199999999595, 0.00034170800000000306, 0.0003410140000000006, 0.0003386520000000018, 0.00034036099999999736, 0.00034326400000000284, 0.0003419300000000042, 0.0003417500000000018, 0.0003401250000000036, 0.0003432910000000025, 0.0003435560000000018, 0.00033884700000000323, 0.0003398329999999977, 0.000339403000000002, 0.0003394999999999995, 0.0003421390000000052, 0.0003406249999999972, 0.00034094400000000274, 0.0003419300000000042, 0.0003443189999999957, 0.0003440140000000036, 0.00034097199999999495]</msg>
<status status="PASS" starttime="20201029 12:47:07.729" endtime="20201029 12:47:07.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.724" endtime="20201029 12:47:07.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:07.736" endtime="20201029 12:47:07.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.734" endtime="20201029 12:47:07.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.733" endtime="20201029 12:47:07.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.356" endtime="20201029 12:47:07.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.355" endtime="20201029 12:47:07.757"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.766" endtime="20201029 12:47:07.801"></status>
</kw>
<msg timestamp="20201029 12:47:07.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.764" endtime="20201029 12:47:07.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.802" endtime="20201029 12:47:07.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.805" endtime="20201029 12:47:07.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.761" endtime="20201029 12:47:07.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.759" endtime="20201029 12:47:07.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.814" endtime="20201029 12:47:08.102"></status>
</kw>
<msg timestamp="20201029 12:47:08.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021771181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022114333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.813" endtime="20201029 12:47:08.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021771181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022114333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.106" endtime="20201029 12:47:08.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.114" endtime="20201029 12:47:08.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.810" endtime="20201029 12:47:08.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.808" endtime="20201029 12:47:08.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:08.121" level="INFO">${RESULT} = [{'diff': 0.00034315199999999935}, {'diff': 0.000341791000000001}, {'diff': 0.0003379170000000001}, {'diff': 0.0003413050000000001}, {'diff': 0.000340306000000002}, {'diff': 0.00033816600000000085}, {...</msg>
<status status="PASS" starttime="20201029 12:47:08.118" endtime="20201029 12:47:08.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:08.125" level="INFO">${ACCURACY} = {'diff': [0.00034315199999999935, 0.000341791000000001, 0.0003379170000000001, 0.0003413050000000001, 0.000340306000000002, 0.00033816600000000085, 0.00034433299999999875, 0.00034373600000000074, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:08.122" endtime="20201029 12:47:08.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.130" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:47:08.129" endtime="20201029 12:47:08.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.132" level="INFO">VALUE: [0.00034315199999999935, 0.000341791000000001, 0.0003379170000000001, 0.0003413050000000001, 0.000340306000000002, 0.00033816600000000085, 0.00034433299999999875, 0.00034373600000000074, 0.00033884799999999923, 0.0003391939999999975, 0.00034237499999999893, 0.0003387910000000015, 0.00033986100000000033, 0.00034373600000000074, 0.00034313899999999925, 0.00033933400000000016, 0.0003417500000000018, 0.0003423469999999998, 0.00034336100000000036, 0.0003417500000000018, 0.00033788899999999747, 0.0003399309999999982, 0.00034038899999999997, 0.0003414170000000001, 0.00033998600000000045, 0.0003377780000000004, 0.00034270900000000354, 0.0003439999999999971, 0.00034190299999999757, 0.00034436100000000136, 0.0003421119999999986, 0.00034342999999999874, 0.0003407079999999951, 0.00033798599999999845, 0.00034280600000000105, 0.0003433470000000008, 0.0003439729999999974, 0.00033980599999999805, 0.0003409580000000023, 0.0003392920000000049, 0.0003439439999999988, 0.0003426109999999996, 0.000342403000000005, 0.0003423330000000002, 0.00033884700000000323, 0.0003428200000000006, 0.00033831899999999665, 0.0003395129999999996, 0.0003391249999999957, 0.0003387359999999992]</msg>
<status status="PASS" starttime="20201029 12:47:08.131" endtime="20201029 12:47:08.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.126" endtime="20201029 12:47:08.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:08.138" endtime="20201029 12:47:08.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.137" endtime="20201029 12:47:08.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.136" endtime="20201029 12:47:08.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.758" endtime="20201029 12:47:08.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.757" endtime="20201029 12:47:08.159"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.168" endtime="20201029 12:47:08.204"></status>
</kw>
<msg timestamp="20201029 12:47:08.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.167" endtime="20201029 12:47:08.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.206" endtime="20201029 12:47:08.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.208" endtime="20201029 12:47:08.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.164" endtime="20201029 12:47:08.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.162" endtime="20201029 12:47:08.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.217" endtime="20201029 12:47:08.504"></status>
</kw>
<msg timestamp="20201029 12:47:08.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021126167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021468889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.216" endtime="20201029 12:47:08.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021126167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021468889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.508" endtime="20201029 12:47:08.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.516" endtime="20201029 12:47:08.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.213" endtime="20201029 12:47:08.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.211" endtime="20201029 12:47:08.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:08.523" level="INFO">${RESULT} = [{'diff': 0.00034272200000000017}, {'diff': 0.0003397919999999985}, {'diff': 0.0003404580000000018}, {'diff': 0.00034461099999999814}, {'diff': 0.00034145799999999935}, {'diff': 0.0003436669999999989}...</msg>
<status status="PASS" starttime="20201029 12:47:08.520" endtime="20201029 12:47:08.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:08.528" level="INFO">${ACCURACY} = {'diff': [0.00034272200000000017, 0.0003397919999999985, 0.0003404580000000018, 0.00034461099999999814, 0.00034145799999999935, 0.0003436669999999989, 0.0003434019999999996, 0.000340306000000002, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:08.524" endtime="20201029 12:47:08.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.533" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:47:08.532" endtime="20201029 12:47:08.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.535" level="INFO">VALUE: [0.00034272200000000017, 0.0003397919999999985, 0.0003404580000000018, 0.00034461099999999814, 0.00034145799999999935, 0.0003436669999999989, 0.0003434019999999996, 0.000340306000000002, 0.00033988899999999947, 0.0003438050000000026, 0.0003444449999999988, 0.0003426390000000022, 0.000340791, 0.0003437639999999999, 0.00034380600000000205, 0.00033934700000000026, 0.0003402779999999994, 0.0003434019999999996, 0.0003392359999999997, 0.0003413050000000001, 0.0003396389999999992, 0.00033884699999999976, 0.0003416529999999973, 0.0003403190000000021, 0.000343679999999999, 0.00034094499999999875, 0.00034088900000000047, 0.00034131899999999965, 0.0003421249999999987, 0.00033858299999999647, 0.0003417920000000005, 0.00034419499999999853, 0.0003431800000000054, 0.00034373599999999727, 0.0003387500000000057, 0.000344485999999998, 0.0003397499999999998, 0.00033855499999999733, 0.0003390830000000039, 0.0003443330000000022, 0.0003431249999999997, 0.0003403199999999981, 0.0003433330000000012, 0.0003445000000000045, 0.0003418050000000006, 0.00034258399999999994, 0.0003394170000000016, 0.00034124999999999434, 0.00034422299999999767, 0.0003414450000000027]</msg>
<status status="PASS" starttime="20201029 12:47:08.534" endtime="20201029 12:47:08.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.529" endtime="20201029 12:47:08.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:08.540" endtime="20201029 12:47:08.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.539" endtime="20201029 12:47:08.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.538" endtime="20201029 12:47:08.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.160" endtime="20201029 12:47:08.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.160" endtime="20201029 12:47:08.561"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.570" endtime="20201029 12:47:08.604"></status>
</kw>
<msg timestamp="20201029 12:47:08.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.569" endtime="20201029 12:47:08.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.605" endtime="20201029 12:47:08.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.608" endtime="20201029 12:47:08.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.566" endtime="20201029 12:47:08.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.564" endtime="20201029 12:47:08.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.617" endtime="20201029 12:47:08.904"></status>
</kw>
<msg timestamp="20201029 12:47:08.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020954319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021304167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.616" endtime="20201029 12:47:08.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020954319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021304167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.908" endtime="20201029 12:47:08.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.917" endtime="20201029 12:47:08.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.613" endtime="20201029 12:47:08.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.611" endtime="20201029 12:47:08.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:08.924" level="INFO">${RESULT} = [{'diff': 0.0003498479999999998}, {'diff': 0.0003444579999999989}, {'diff': 0.00033941599999999864}, {'diff': 0.0003385550000000008}, {'diff': 0.0003403190000000021}, {'diff': 0.00034302800000000216},...</msg>
<status status="PASS" starttime="20201029 12:47:08.920" endtime="20201029 12:47:08.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:08.928" level="INFO">${ACCURACY} = {'diff': [0.0003498479999999998, 0.0003444579999999989, 0.00033941599999999864, 0.0003385550000000008, 0.0003403190000000021, 0.00034302800000000216, 0.00034136099999999836, 0.0003444439999999993, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:08.925" endtime="20201029 12:47:08.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.932" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:47:08.931" endtime="20201029 12:47:08.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.935" level="INFO">VALUE: [0.0003498479999999998, 0.0003444579999999989, 0.00033941599999999864, 0.0003385550000000008, 0.0003403190000000021, 0.00034302800000000216, 0.00034136099999999836, 0.0003444439999999993, 0.000343083999999997, 0.0003408190000000026, 0.0003417499999999983, 0.00034055499999999933, 0.0003381109999999986, 0.00034116699999999986, 0.00033833399999999916, 0.0003414720000000024, 0.00033833399999999916, 0.00033898599999999945, 0.00034148600000000195, 0.0003439720000000014, 0.0003392779999999984, 0.00034322200000000067, 0.0003401110000000006, 0.0003429439999999978, 0.00034104199999999973, 0.0003432080000000011, 0.0003392359999999997, 0.00034022199999999767, 0.00034254200000000123, 0.00033916700000000133, 0.00033998699999999993, 0.000343000000000003, 0.00034131899999999965, 0.00033815300000000076, 0.0003397360000000002, 0.00034131899999999965, 0.000341888999999998, 0.0003386940000000005, 0.00034180600000000005, 0.0003432639999999959, 0.000342000000000002, 0.00034390299999999957, 0.00034380600000000205, 0.0003395139999999991, 0.00034126400000000084, 0.0003412219999999952, 0.0003389719999999999, 0.00034170800000000306, 0.00033948599999999995, 0.00034088900000000394]</msg>
<status status="PASS" starttime="20201029 12:47:08.934" endtime="20201029 12:47:08.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.929" endtime="20201029 12:47:08.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:08.940" endtime="20201029 12:47:08.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.939" endtime="20201029 12:47:08.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.937" endtime="20201029 12:47:08.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.562" endtime="20201029 12:47:08.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.562" endtime="20201029 12:47:08.961"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.970" endtime="20201029 12:47:09.007"></status>
</kw>
<msg timestamp="20201029 12:47:09.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.969" endtime="20201029 12:47:09.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.008" endtime="20201029 12:47:09.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.011" endtime="20201029 12:47:09.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.966" endtime="20201029 12:47:09.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.964" endtime="20201029 12:47:09.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.020" endtime="20201029 12:47:09.307"></status>
</kw>
<msg timestamp="20201029 12:47:09.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023120153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023457708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.019" endtime="20201029 12:47:09.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023120153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023457708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.311" endtime="20201029 12:47:09.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.319" endtime="20201029 12:47:09.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.016" endtime="20201029 12:47:09.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.014" endtime="20201029 12:47:09.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:09.326" level="INFO">${RESULT} = [{'diff': 0.0003375549999999998}, {'diff': 0.0003393329999999972}, {'diff': 0.0003415970000000025}, {'diff': 0.00034227799999999795}, {'diff': 0.00034255599999999733}, {'diff': 0.00034422200000000167}...</msg>
<status status="PASS" starttime="20201029 12:47:09.323" endtime="20201029 12:47:09.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:09.330" level="INFO">${ACCURACY} = {'diff': [0.0003375549999999998, 0.0003393329999999972, 0.0003415970000000025, 0.00034227799999999795, 0.00034255599999999733, 0.00034422200000000167, 0.00034058299999999847, 0.00034208299999999997, 0...</msg>
<status status="PASS" starttime="20201029 12:47:09.327" endtime="20201029 12:47:09.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.335" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:47:09.334" endtime="20201029 12:47:09.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.337" level="INFO">VALUE: [0.0003375549999999998, 0.0003393329999999972, 0.0003415970000000025, 0.00034227799999999795, 0.00034255599999999733, 0.00034422200000000167, 0.00034058299999999847, 0.00034208299999999997, 0.0003440140000000001, 0.0003406659999999999, 0.0003423049999999976, 0.0003419170000000006, 0.0003415000000000015, 0.00034218100000000043, 0.00034341599999999917, 0.0003444590000000018, 0.00033952799999999866, 0.0003420560000000003, 0.0003445280000000002, 0.0003399170000000021, 0.00034159699999999904, 0.0003386109999999991, 0.0003437080000000016, 0.00034252699999999525, 0.00033870800000000006, 0.0003428059999999941, 0.00034019499999999453, 0.000342403000000005, 0.0003412780000000004, 0.00033944400000000124, 0.0003426940000000045, 0.00034390299999999957, 0.0003408469999999983, 0.0003411109999999981, 0.0003410699999999989, 0.0003410140000000006, 0.000339806000000005, 0.0003430560000000013, 0.0003400970000000045, 0.0003381520000000013, 0.0003413199999999991, 0.00034013899999999625, 0.0003411800000000034, 0.00034138800000000497, 0.0003400420000000057, 0.00033938900000000244, 0.0003410559999999993, 0.0003405140000000001, 0.00034120900000000204, 0.00034331900000000165]</msg>
<status status="PASS" starttime="20201029 12:47:09.336" endtime="20201029 12:47:09.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.331" endtime="20201029 12:47:09.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:09.344" endtime="20201029 12:47:09.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.342" endtime="20201029 12:47:09.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.341" endtime="20201029 12:47:09.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.962" endtime="20201029 12:47:09.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.961" endtime="20201029 12:47:09.364"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.373" endtime="20201029 12:47:09.408"></status>
</kw>
<msg timestamp="20201029 12:47:09.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.372" endtime="20201029 12:47:09.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.410" endtime="20201029 12:47:09.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.413" endtime="20201029 12:47:09.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.369" endtime="20201029 12:47:09.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.367" endtime="20201029 12:47:09.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.422" endtime="20201029 12:47:09.708"></status>
</kw>
<msg timestamp="20201029 12:47:09.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022005431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.420" endtime="20201029 12:47:09.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022005431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.712" endtime="20201029 12:47:09.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.720" endtime="20201029 12:47:09.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.418" endtime="20201029 12:47:09.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.416" endtime="20201029 12:47:09.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:09.727" level="INFO">${RESULT} = [{'diff': 0.00034770899999999813}, {'diff': 0.0003387499999999988}, {'diff': 0.0003401529999999993}, {'diff': 0.000343388}, {'diff': 0.0003442219999999982}, {'diff': 0.0003382779999999974}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 12:47:09.724" endtime="20201029 12:47:09.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:09.732" level="INFO">${ACCURACY} = {'diff': [0.00034770899999999813, 0.0003387499999999988, 0.0003401529999999993, 0.000343388, 0.0003442219999999982, 0.0003382779999999974, 0.0003394999999999995, 0.00034127799999999694, 0.000341819999...</msg>
<status status="PASS" starttime="20201029 12:47:09.728" endtime="20201029 12:47:09.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.737" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:47:09.736" endtime="20201029 12:47:09.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.739" level="INFO">VALUE: [0.00034770899999999813, 0.0003387499999999988, 0.0003401529999999993, 0.000343388, 0.0003442219999999982, 0.0003382779999999974, 0.0003394999999999995, 0.00034127799999999694, 0.0003418199999999996, 0.00034031899999999865, 0.0003407919999999995, 0.00033820799999999956, 0.0003390000000000025, 0.00034036099999999736, 0.0003381109999999986, 0.00033852800000000113, 0.00034026399999999984, 0.0003404590000000013, 0.0003401529999999993, 0.00034136099999999836, 0.00034036099999999736, 0.00034126400000000084, 0.00034070800000000206, 0.0003389450000000002, 0.00034141600000000064, 0.00034273599999999974, 0.0003431799999999985, 0.0003393469999999968, 0.00034158299999999947, 0.0003442219999999982, 0.00033984700000000423, 0.00034448600000000495, 0.000343388, 0.00034090200000000404, 0.00034276400000000234, 0.00034066600000000336, 0.00033998600000000045, 0.00034130599999999955, 0.0003419590000000028, 0.00034366600000000636, 0.000344000000000004, 0.00034337499999999993, 0.00034344400000000525, 0.0003423050000000011, 0.00033852799999999766, 0.00034069399999999556, 0.0003417500000000018, 0.00034374999999999684, 0.0003444999999999976, 0.0003412780000000004]</msg>
<status status="PASS" starttime="20201029 12:47:09.738" endtime="20201029 12:47:09.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.733" endtime="20201029 12:47:09.741"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:09.745" endtime="20201029 12:47:09.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.743" endtime="20201029 12:47:09.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.742" endtime="20201029 12:47:09.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.365" endtime="20201029 12:47:09.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.365" endtime="20201029 12:47:09.765"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.775" endtime="20201029 12:47:09.810"></status>
</kw>
<msg timestamp="20201029 12:47:09.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.773" endtime="20201029 12:47:09.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.812" endtime="20201029 12:47:09.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.814" endtime="20201029 12:47:09.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.770" endtime="20201029 12:47:09.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.768" endtime="20201029 12:47:09.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.824" endtime="20201029 12:47:10.111"></status>
</kw>
<msg timestamp="20201029 12:47:10.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.822" endtime="20201029 12:47:10.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.116" endtime="20201029 12:47:10.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.124" endtime="20201029 12:47:10.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.819" endtime="20201029 12:47:10.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.818" endtime="20201029 12:47:10.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:10.131" level="INFO">${RESULT} = [{'diff': 0.00033090300000000045}, {'diff': 0.0003393749999999994}, {'diff': 0.0003408750000000009}, {'diff': 0.0003434860000000005}, {'diff': 0.00033876299999999887}, {'diff': 0.0003416660000000009},...</msg>
<status status="PASS" starttime="20201029 12:47:10.128" endtime="20201029 12:47:10.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:10.135" level="INFO">${ACCURACY} = {'diff': [0.00033090300000000045, 0.0003393749999999994, 0.0003408750000000009, 0.0003434860000000005, 0.00033876299999999887, 0.0003416660000000009, 0.00034107000000000234, 0.0003392499999999993, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:10.132" endtime="20201029 12:47:10.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.140" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:47:10.139" endtime="20201029 12:47:10.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.142" level="INFO">VALUE: [0.00033090300000000045, 0.0003393749999999994, 0.0003408750000000009, 0.0003434860000000005, 0.00033876299999999887, 0.0003416660000000009, 0.00034107000000000234, 0.0003392499999999993, 0.0003382369999999982, 0.00033830500000000055, 0.0003428189999999977, 0.00033938899999999897, 0.00034068099999999893, 0.0003439579999999984, 0.00034234800000000273, 0.0003392640000000023, 0.00034186099999999886, 0.0003444860000000015, 0.00033922200000000013, 0.0003442919999999995, 0.0003395139999999991, 0.00034355599999999833, 0.00034202800000000116, 0.00034072200000000163, 0.0003395840000000004, 0.0003436250000000002, 0.00034323599999999677, 0.00033848599999999895, 0.0003416390000000047, 0.0003422360000000027, 0.00034090200000000404, 0.00034136099999999836, 0.00034374999999999684, 0.00034351399999999616, 0.00033883300000000366, 0.00033798699999999793, 0.00034292999999999824, 0.000344374999999994, 0.000343485999999997, 0.0003394450000000007, 0.00034120800000000256, 0.0003428470000000003, 0.0003406669999999959, 0.00034086099999999786, 0.0003424449999999968, 0.0003421659999999979, 0.00033816700000000033, 0.00033861100000000255, 0.00034159699999999904, 0.00034044400000000224]</msg>
<status status="PASS" starttime="20201029 12:47:10.141" endtime="20201029 12:47:10.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.136" endtime="20201029 12:47:10.144"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:10.148" endtime="20201029 12:47:10.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.146" endtime="20201029 12:47:10.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.145" endtime="20201029 12:47:10.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.766" endtime="20201029 12:47:10.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.766" endtime="20201029 12:47:10.168"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.178" endtime="20201029 12:47:10.221"></status>
</kw>
<msg timestamp="20201029 12:47:10.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.176" endtime="20201029 12:47:10.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.223" endtime="20201029 12:47:10.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.225" endtime="20201029 12:47:10.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.173" endtime="20201029 12:47:10.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.171" endtime="20201029 12:47:10.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.235" endtime="20201029 12:47:10.521"></status>
</kw>
<msg timestamp="20201029 12:47:10.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026601458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026935292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.233" endtime="20201029 12:47:10.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026601458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026935292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.525" endtime="20201029 12:47:10.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.533" endtime="20201029 12:47:10.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.231" endtime="20201029 12:47:10.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.229" endtime="20201029 12:47:10.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:10.540" level="INFO">${RESULT} = [{'diff': 0.00033383399999999813}, {'diff': 0.00033788900000000094}, {'diff': 0.0003409580000000023}, {'diff': 0.0003429590000000003}, {'diff': 0.00034318100000000143}, {'diff': 0.00034380600000000205...</msg>
<status status="PASS" starttime="20201029 12:47:10.537" endtime="20201029 12:47:10.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:10.544" level="INFO">${ACCURACY} = {'diff': [0.00033383399999999813, 0.00033788900000000094, 0.0003409580000000023, 0.0003429590000000003, 0.00034318100000000143, 0.00034380600000000205, 0.0003382360000000022, 0.00034355500000000233, 0...</msg>
<status status="PASS" starttime="20201029 12:47:10.541" endtime="20201029 12:47:10.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.549" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:47:10.548" endtime="20201029 12:47:10.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.552" level="INFO">VALUE: [0.00033383399999999813, 0.00033788900000000094, 0.0003409580000000023, 0.0003429590000000003, 0.00034318100000000143, 0.00034380600000000205, 0.0003382360000000022, 0.00034355500000000233, 0.0003397779999999989, 0.00034041599999999964, 0.00034109699999999854, 0.00034440300000000007, 0.00034268100000000093, 0.0003433050000000021, 0.0003443199999999952, 0.0003410689999999994, 0.00033932000000000406, 0.0003442639999999969, 0.0003385840000000029, 0.0003398339999999972, 0.0003401249999999967, 0.0003406109999999976, 0.00034223599999999577, 0.00034305500000000183, 0.0003403889999999965, 0.00034073599999999427, 0.00033913899999999525, 0.0003408199999999986, 0.00034113899999999725, 0.00034352800000000266, 0.0003389580000000003, 0.00034418099999999896, 0.00034311099999999317, 0.0003443330000000022, 0.00034224999999999534, 0.0003432779999999955, 0.0003392359999999997, 0.0003421529999999978, 0.00034130599999999955, 0.00033952799999999866, 0.0003439170000000061, 0.0003394720000000004, 0.00034236099999999936, 0.00034440300000000007, 0.0003416390000000047, 0.0003445140000000041, 0.0003444449999999988, 0.0003431119999999996, 0.00033954199999999823, 0.000338999999999999]</msg>
<status status="PASS" starttime="20201029 12:47:10.550" endtime="20201029 12:47:10.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.545" endtime="20201029 12:47:10.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:10.558" endtime="20201029 12:47:10.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.556" endtime="20201029 12:47:10.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.555" endtime="20201029 12:47:10.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.169" endtime="20201029 12:47:10.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.169" endtime="20201029 12:47:10.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.888" endtime="20201029 12:47:10.579"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:29.776" endtime="20201029 12:47:10.579" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:10.586" endtime="20201029 12:47:10.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.585" endtime="20201029 12:47:10.606"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.620" endtime="20201029 12:47:10.641"></status>
</kw>
<msg timestamp="20201029 12:47:10.641" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.618" endtime="20201029 12:47:10.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.644" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.642" endtime="20201029 12:47:10.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.647" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:10.645" endtime="20201029 12:47:10.647"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:10.615" endtime="20201029 12:47:10.648"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:10.613" endtime="20201029 12:47:10.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.612" endtime="20201029 12:47:10.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:10.653" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:10.652" endtime="20201029 12:47:10.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.650" endtime="20201029 12:47:10.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.611" endtime="20201029 12:47:10.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.610" endtime="20201029 12:47:10.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.654" endtime="20201029 12:47:10.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.609" endtime="20201029 12:47:10.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.607" endtime="20201029 12:47:10.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.583" endtime="20201029 12:47:10.657"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.668" endtime="20201029 12:47:10.705"></status>
</kw>
<msg timestamp="20201029 12:47:10.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.667" endtime="20201029 12:47:10.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.707" endtime="20201029 12:47:10.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.710" endtime="20201029 12:47:10.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.663" endtime="20201029 12:47:10.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.660" endtime="20201029 12:47:10.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.719" endtime="20201029 12:47:11.007"></status>
</kw>
<msg timestamp="20201029 12:47:11.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075209028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075582139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.718" endtime="20201029 12:47:11.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075209028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075582139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.011" endtime="20201029 12:47:11.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.019" endtime="20201029 12:47:11.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.715" endtime="20201029 12:47:11.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.713" endtime="20201029 12:47:11.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:11.026" level="INFO">${RESULT} = [{'diff': 0.0003731110000000093}, {'diff': 0.00035713899999999243}, {'diff': 0.00038588900000000037}, {'diff': 0.0003596390000000088}, {'diff': 0.00038538899999999987}, {'diff': 0.00038598599999999095...</msg>
<status status="PASS" starttime="20201029 12:47:11.023" endtime="20201029 12:47:11.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:11.030" level="INFO">${ACCURACY} = {'diff': [0.0003731110000000093, 0.00035713899999999243, 0.00038588900000000037, 0.0003596390000000088, 0.00038538899999999987, 0.00038598599999999095, 0.0003582219999999914, 0.0003576949999999912, 0....</msg>
<status status="PASS" starttime="20201029 12:47:11.027" endtime="20201029 12:47:11.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.036" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:47:11.035" endtime="20201029 12:47:11.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.038" level="INFO">VALUE: [0.0003731110000000093, 0.00035713899999999243, 0.00038588900000000037, 0.0003596390000000088, 0.00038538899999999987, 0.00038598599999999095, 0.0003582219999999914, 0.0003576949999999912, 0.0003603050000000052, 0.000359054999999997, 0.0003591250000000018, 0.00038640199999999403, 0.0003561809999999971, 0.0003574309999999914, 0.000359346999999996, 0.0003596110000000097, 0.000358861000000002, 0.00035927799999999066, 0.00036016700000000845, 0.0003578890000000001, 0.0003604860000000071, 0.0003583610000000015, 0.0003850560000000086, 0.0003852639999999963, 0.0003603749999999961, 0.0003589019999999943, 0.0003611250000000038, 0.0003583060000000027, 0.0003601109999999963, 0.000385416999999999, 0.0003573060000000017, 0.00035983300000000384, 0.0003860970000000019, 0.00035895800000000644, 0.00035758300000000853, 0.00038568099999999883, 0.0003862780000000038, 0.00035909800000000214, 0.0003851110000000074, 0.0003604300000000088, 0.00038583400000000156, 0.00035820799999999875, 0.0003567640000000094, 0.0003605969999999903, 0.00035659700000000016, 0.00035708299999999416, 0.00035777800000000304, 0.00036077800000000604, 0.00035834799999999445, 0.0003565000000000096]</msg>
<status status="PASS" starttime="20201029 12:47:11.037" endtime="20201029 12:47:11.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.031" endtime="20201029 12:47:11.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.043" endtime="20201029 12:47:11.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.042" endtime="20201029 12:47:11.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.040" endtime="20201029 12:47:11.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.659" endtime="20201029 12:47:11.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.658" endtime="20201029 12:47:11.064"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.073" endtime="20201029 12:47:11.112"></status>
</kw>
<msg timestamp="20201029 12:47:11.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.071" endtime="20201029 12:47:11.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.114" endtime="20201029 12:47:11.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.116" endtime="20201029 12:47:11.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.069" endtime="20201029 12:47:11.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.067" endtime="20201029 12:47:11.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.126" endtime="20201029 12:47:11.412"></status>
</kw>
<msg timestamp="20201029 12:47:11.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025205042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025583597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.124" endtime="20201029 12:47:11.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025205042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025583597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.416" endtime="20201029 12:47:11.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.424" endtime="20201029 12:47:11.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.121" endtime="20201029 12:47:11.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.119" endtime="20201029 12:47:11.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:11.431" level="INFO">${RESULT} = [{'diff': 0.00037855499999999917}, {'diff': 0.0003579159999999998}, {'diff': 0.00038594400000000265}, {'diff': 0.00036094400000000193}, {'diff': 0.00038636100000000173}, {'diff': 0.0003610279999999993...</msg>
<status status="PASS" starttime="20201029 12:47:11.428" endtime="20201029 12:47:11.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:11.437" level="INFO">${ACCURACY} = {'diff': [0.00037855499999999917, 0.0003579159999999998, 0.00038594400000000265, 0.00036094400000000193, 0.00038636100000000173, 0.00036102799999999935, 0.00035909700000000266, 0.0003610139999999998, ...</msg>
<status status="PASS" starttime="20201029 12:47:11.432" endtime="20201029 12:47:11.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.441" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:47:11.440" endtime="20201029 12:47:11.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.444" level="INFO">VALUE: [0.00037855499999999917, 0.0003579159999999998, 0.00038594400000000265, 0.00036094400000000193, 0.00038636100000000173, 0.00036102799999999935, 0.00035909700000000266, 0.0003610139999999998, 0.000359667000000001, 0.0003608750000000001, 0.00036094499999999793, 0.00036088899999999965, 0.0003570830000000011, 0.0003590280000000008, 0.00036058399999999713, 0.0003587089999999987, 0.00035643000000000133, 0.00038590299999999994, 0.00035782000000000175, 0.00035842999999999986, 0.00036070800000000125, 0.00035980599999999724, 0.0003854309999999986, 0.00035727800000000254, 0.0003602220000000003, 0.00035924999999999846, 0.00035931899999999684, 0.0003591800000000006, 0.0003609450000000014, 0.00035732000000000125, 0.0003609580000000015, 0.0003577359999999974, 0.00035770799999999825, 0.0003598340000000033, 0.00035711100000000023, 0.0003612220000000013, 0.000358054999999996, 0.00035700000000000315, 0.00036048600000000014, 0.0003853330000000016, 0.0003578060000000022, 0.00035759800000000064, 0.0003589030000000007, 0.00036102799999999935, 0.00035998599999999964, 0.0003857919999999959, 0.00038599999999999746, 0.0003563190000000008, 0.00035947199999999957, 0.0003855409999999962]</msg>
<status status="PASS" starttime="20201029 12:47:11.443" endtime="20201029 12:47:11.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.438" endtime="20201029 12:47:11.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.449" endtime="20201029 12:47:11.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.447" endtime="20201029 12:47:11.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.446" endtime="20201029 12:47:11.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.065" endtime="20201029 12:47:11.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.064" endtime="20201029 12:47:11.469"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.479" endtime="20201029 12:47:11.513"></status>
</kw>
<msg timestamp="20201029 12:47:11.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.477" endtime="20201029 12:47:11.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.515" endtime="20201029 12:47:11.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.518" endtime="20201029 12:47:11.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.475" endtime="20201029 12:47:11.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.472" endtime="20201029 12:47:11.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.527" endtime="20201029 12:47:11.814"></status>
</kw>
<msg timestamp="20201029 12:47:11.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02213925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:11.525" endtime="20201029 12:47:11.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02213925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:11.819" endtime="20201029 12:47:11.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.827" endtime="20201029 12:47:11.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.523" endtime="20201029 12:47:11.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.521" endtime="20201029 12:47:11.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:11.834" level="INFO">${RESULT} = [{'diff': 0.0003837779999999978}, {'diff': 0.0003589449999999994}, {'diff': 0.0003572220000000008}, {'diff': 0.00035809700000000166}, {'diff': 0.0003852779999999993}, {'diff': 0.00035669400000000115},...</msg>
<status status="PASS" starttime="20201029 12:47:11.831" endtime="20201029 12:47:11.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:11.838" level="INFO">${ACCURACY} = {'diff': [0.0003837779999999978, 0.0003589449999999994, 0.0003572220000000008, 0.00035809700000000166, 0.0003852779999999993, 0.00035669400000000115, 0.00038531899999999855, 0.0003564729999999995, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:11.835" endtime="20201029 12:47:11.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.843" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:47:11.842" endtime="20201029 12:47:11.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.845" level="INFO">VALUE: [0.0003837779999999978, 0.0003589449999999994, 0.0003572220000000008, 0.00035809700000000166, 0.0003852779999999993, 0.00035669400000000115, 0.00038531899999999855, 0.0003564729999999995, 0.0003590139999999978, 0.0003852779999999993, 0.00035727799999999907, 0.0003859859999999979, 0.00038520800000000147, 0.00036129199999999917, 0.00038508299999999787, 0.000357167000000002, 0.0003581250000000008, 0.0003581390000000004, 0.0003866530000000007, 0.0003599999999999992, 0.0003851810000000018, 0.00035727700000000306, 0.00038580599999999896, 0.0003853330000000016, 0.0003852640000000032, 0.00035938899999999815, 0.00035677800000000204, 0.00035937500000000205, 0.00036104099999999945, 0.0003857640000000037, 0.00035722200000000426, 0.0003583610000000015, 0.00035788800000000065, 0.00038494499999999765, 0.00035827800000000354, 0.0003582080000000057, 0.0003576250000000003, 0.00035976399999999853, 0.00035773699999999686, 0.00035741699999999876, 0.000386611000000002, 0.00035947199999999957, 0.0003565689999999941, 0.0003854729999999973, 0.0003564860000000031, 0.0003593329999999964, 0.00035659700000000016, 0.00038561200000000045, 0.00035719499999999765, 0.00036065200000000297]</msg>
<status status="PASS" starttime="20201029 12:47:11.844" endtime="20201029 12:47:11.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.839" endtime="20201029 12:47:11.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.850" endtime="20201029 12:47:11.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.848" endtime="20201029 12:47:11.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.847" endtime="20201029 12:47:11.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.470" endtime="20201029 12:47:11.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.470" endtime="20201029 12:47:11.875"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.885" endtime="20201029 12:47:11.920"></status>
</kw>
<msg timestamp="20201029 12:47:11.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.883" endtime="20201029 12:47:11.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.922" endtime="20201029 12:47:11.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.924" endtime="20201029 12:47:11.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.880" endtime="20201029 12:47:11.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.878" endtime="20201029 12:47:11.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.940" endtime="20201029 12:47:12.230"></status>
</kw>
<msg timestamp="20201029 12:47:12.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027347694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027724069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.938" endtime="20201029 12:47:12.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027347694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027724069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.235" endtime="20201029 12:47:12.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.246" endtime="20201029 12:47:12.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.933" endtime="20201029 12:47:12.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.930" endtime="20201029 12:47:12.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:12.254" level="INFO">${RESULT} = [{'diff': 0.0003763750000000017}, {'diff': 0.0003598749999999991}, {'diff': 0.00035715299999999894}, {'diff': 0.00035973699999999886}, {'diff': 0.00036098600000000064}, {'diff': 0.00035879200000000014...</msg>
<status status="PASS" starttime="20201029 12:47:12.250" endtime="20201029 12:47:12.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:12.258" level="INFO">${ACCURACY} = {'diff': [0.0003763750000000017, 0.0003598749999999991, 0.00035715299999999894, 0.00035973699999999886, 0.00036098600000000064, 0.00035879200000000014, 0.00035937500000000205, 0.00035825000000000093, ...</msg>
<status status="PASS" starttime="20201029 12:47:12.255" endtime="20201029 12:47:12.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.262" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:47:12.261" endtime="20201029 12:47:12.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.265" level="INFO">VALUE: [0.0003763750000000017, 0.0003598749999999991, 0.00035715299999999894, 0.00035973699999999886, 0.00036098600000000064, 0.00035879200000000014, 0.00035937500000000205, 0.00035825000000000093, 0.0003608469999999975, 0.000360862, 0.00035683399999999685, 0.00036026399999999903, 0.0003582080000000057, 0.0003577779999999961, 0.00035737500000000005, 0.000386611000000002, 0.00035843099999999933, 0.0003599030000000017, 0.000357958999999998, 0.00035759800000000064, 0.0003569999999999962, 0.0003566390000000058, 0.0003606390000000029, 0.0003598890000000021, 0.00038640300000000044, 0.0003607090000000007, 0.0003606659999999956, 0.00038551400000000347, 0.0003584999999999977, 0.0003596109999999958, 0.0003603749999999961, 0.0003568479999999999, 0.00036098600000000064, 0.0003592219999999993, 0.0003605549999999985, 0.00036074999999999996, 0.00038577799999999635, 0.00036058299999999766, 0.00038657000000000274, 0.00035937500000000205, 0.0003865560000000032, 0.0003860980000000014, 0.0003600969999999967, 0.00038556900000000227, 0.0003563889999999986, 0.0003607360000000004, 0.00035661099999999973, 0.00035795800000000544, 0.00035730599999999474, 0.0003863330000000026]</msg>
<status status="PASS" starttime="20201029 12:47:12.264" endtime="20201029 12:47:12.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.259" endtime="20201029 12:47:12.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:12.271" endtime="20201029 12:47:12.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.269" endtime="20201029 12:47:12.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.268" endtime="20201029 12:47:12.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.876" endtime="20201029 12:47:12.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.875" endtime="20201029 12:47:12.292"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.302" endtime="20201029 12:47:12.339"></status>
</kw>
<msg timestamp="20201029 12:47:12.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.300" endtime="20201029 12:47:12.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.341" endtime="20201029 12:47:12.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.343" endtime="20201029 12:47:12.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.297" endtime="20201029 12:47:12.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.295" endtime="20201029 12:47:12.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.353" endtime="20201029 12:47:12.640"></status>
</kw>
<msg timestamp="20201029 12:47:12.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023186028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023570375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.351" endtime="20201029 12:47:12.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023186028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023570375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.644" endtime="20201029 12:47:12.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.652" endtime="20201029 12:47:12.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.348" endtime="20201029 12:47:12.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.346" endtime="20201029 12:47:12.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:12.659" level="INFO">${RESULT} = [{'diff': 0.00038434700000000016}, {'diff': 0.0003598190000000008}, {'diff': 0.00036001400000000225}, {'diff': 0.0003865000000000014}, {'diff': 0.00035970800000000025}, {'diff': 0.0003609030000000027}...</msg>
<status status="PASS" starttime="20201029 12:47:12.656" endtime="20201029 12:47:12.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:12.664" level="INFO">${ACCURACY} = {'diff': [0.00038434700000000016, 0.0003598190000000008, 0.00036001400000000225, 0.0003865000000000014, 0.00035970800000000025, 0.0003609030000000027, 0.0003864720000000023, 0.00035637499999999905, 0....</msg>
<status status="PASS" starttime="20201029 12:47:12.660" endtime="20201029 12:47:12.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.669" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:47:12.668" endtime="20201029 12:47:12.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.672" level="INFO">VALUE: [0.00038434700000000016, 0.0003598190000000008, 0.00036001400000000225, 0.0003865000000000014, 0.00035970800000000025, 0.0003609030000000027, 0.0003864720000000023, 0.00035637499999999905, 0.000358555, 0.00035673599999999986, 0.0003573190000000018, 0.00035970800000000025, 0.00035792999999999936, 0.0003595830000000001, 0.00035934699999999944, 0.00036088899999999965, 0.00035745900000000094, 0.00036088899999999965, 0.00036020800000000075, 0.00035633300000000034, 0.0003566389999999989, 0.00035624999999999893, 0.00035808299999999516, 0.0003848749999999998, 0.0003599169999999943, 0.0003566799999999981, 0.00038562500000000055, 0.0003858060000000024, 0.00036052799999999885, 0.0003593199999999963, 0.0003578470000000014, 0.0003566950000000041, 0.00038520899999999747, 0.00038572199999999807, 0.00038516699999999876, 0.0003861939999999994, 0.0003562219999999963, 0.0003857770000000038, 0.00035694399999999793, 0.00035852799999999685, 0.000359458, 0.0003570830000000011, 0.00035680499999999477, 0.0003594020000000017, 0.0003585140000000042, 0.00035986099999999605, 0.000385013999999996, 0.00035952799999999785, 0.00035820799999999875, 0.00036006999999999706]</msg>
<status status="PASS" starttime="20201029 12:47:12.670" endtime="20201029 12:47:12.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.665" endtime="20201029 12:47:12.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:12.677" endtime="20201029 12:47:12.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.675" endtime="20201029 12:47:12.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.674" endtime="20201029 12:47:12.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.293" endtime="20201029 12:47:12.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.293" endtime="20201029 12:47:12.698"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.707" endtime="20201029 12:47:12.744"></status>
</kw>
<msg timestamp="20201029 12:47:12.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.705" endtime="20201029 12:47:12.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.746" endtime="20201029 12:47:12.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.749" endtime="20201029 12:47:12.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.702" endtime="20201029 12:47:12.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.700" endtime="20201029 12:47:12.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.758" endtime="20201029 12:47:13.045"></status>
</kw>
<msg timestamp="20201029 12:47:13.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024462722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024822722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.756" endtime="20201029 12:47:13.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024462722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024822722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.049" endtime="20201029 12:47:13.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.057" endtime="20201029 12:47:13.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.754" endtime="20201029 12:47:13.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.752" endtime="20201029 12:47:13.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:13.064" level="INFO">${RESULT} = [{'diff': 0.0003599999999999992}, {'diff': 0.0003591809999999966}, {'diff': 0.00038588900000000037}, {'diff': 0.0003576530000000029}, {'diff': 0.00036084799999999695}, {'diff': 0.00035919499999999965}...</msg>
<status status="PASS" starttime="20201029 12:47:13.061" endtime="20201029 12:47:13.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:13.068" level="INFO">${ACCURACY} = {'diff': [0.0003599999999999992, 0.0003591809999999966, 0.00038588900000000037, 0.0003576530000000029, 0.00036084799999999695, 0.00035919499999999965, 0.0003573329999999979, 0.0003587219999999988, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:13.065" endtime="20201029 12:47:13.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.073" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:47:13.072" endtime="20201029 12:47:13.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.076" level="INFO">VALUE: [0.0003599999999999992, 0.0003591809999999966, 0.00038588900000000037, 0.0003576530000000029, 0.00036084799999999695, 0.00035919499999999965, 0.0003573329999999979, 0.0003587219999999988, 0.00035957000000000003, 0.00036047300000000004, 0.000358360999999998, 0.0003593190000000003, 0.00035938800000000215, 0.00035672299999999976, 0.0003572090000000007, 0.0003591940000000002, 0.0003856249999999971, 0.0003569999999999997, 0.0003569029999999987, 0.00035948599999999914, 0.00035655600000000093, 0.00036070800000000125, 0.00038595799999999875, 0.0003593199999999963, 0.0003855699999999948, 0.00035626400000000197, 0.00038586100000000123, 0.00038562500000000055, 0.00035697199999999707, 0.0003585140000000042, 0.00035694399999999793, 0.00035852799999999685, 0.00036104099999999945, 0.0003591670000000005, 0.0003581250000000008, 0.0003859169999999995, 0.0003610979999999972, 0.0003563889999999986, 0.0003574029999999992, 0.0003589579999999995, 0.00035709700000000066, 0.0003588329999999959, 0.0003582359999999979, 0.00035858400000000207, 0.0003857499999999972, 0.00035744400000000537, 0.00035648599999999614, 0.0003573050000000022, 0.0003565140000000022, 0.00038586100000000123]</msg>
<status status="PASS" starttime="20201029 12:47:13.074" endtime="20201029 12:47:13.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.069" endtime="20201029 12:47:13.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:13.081" endtime="20201029 12:47:13.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.079" endtime="20201029 12:47:13.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.078" endtime="20201029 12:47:13.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.699" endtime="20201029 12:47:13.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.698" endtime="20201029 12:47:13.102"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.111" endtime="20201029 12:47:13.146"></status>
</kw>
<msg timestamp="20201029 12:47:13.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.109" endtime="20201029 12:47:13.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.148" endtime="20201029 12:47:13.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.150" endtime="20201029 12:47:13.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.106" endtime="20201029 12:47:13.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.104" endtime="20201029 12:47:13.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.160" endtime="20201029 12:47:13.450"></status>
</kw>
<msg timestamp="20201029 12:47:13.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022769208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.158" endtime="20201029 12:47:13.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022769208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.454" endtime="20201029 12:47:13.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.463" endtime="20201029 12:47:13.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.155" endtime="20201029 12:47:13.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.154" endtime="20201029 12:47:13.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:13.469" level="INFO">${RESULT} = [{'diff': 0.0003775409999999986}, {'diff': 0.00035715299999999894}, {'diff': 0.0003604999999999997}, {'diff': 0.00035654200000000136}, {'diff': 0.0003612079999999983}, {'diff': 0.00035920799999999975}...</msg>
<status status="PASS" starttime="20201029 12:47:13.466" endtime="20201029 12:47:13.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:13.474" level="INFO">${ACCURACY} = {'diff': [0.0003775409999999986, 0.00035715299999999894, 0.0003604999999999997, 0.00035654200000000136, 0.0003612079999999983, 0.00035920799999999975, 0.0003851529999999992, 0.00035777799999999957, 0....</msg>
<status status="PASS" starttime="20201029 12:47:13.470" endtime="20201029 12:47:13.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.478" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:47:13.477" endtime="20201029 12:47:13.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.481" level="INFO">VALUE: [0.0003775409999999986, 0.00035715299999999894, 0.0003604999999999997, 0.00035654200000000136, 0.0003612079999999983, 0.00035920799999999975, 0.0003851529999999992, 0.00035777799999999957, 0.0003610830000000016, 0.00038640300000000044, 0.00035782000000000175, 0.00038526399999999975, 0.00038588900000000037, 0.00035659799999999964, 0.0003596810000000006, 0.00038598600000000136, 0.0003607090000000007, 0.00038654100000000066, 0.00038586100000000123, 0.00036024999999999946, 0.00035632000000000025, 0.00035679199999999814, 0.00036102799999999935, 0.0003863200000000025, 0.00038552800000000303, 0.00035637499999999905, 0.00035843099999999933, 0.00035848599999999814, 0.00038519400000000537, 0.00035926400000000497, 0.0003594309999999934, 0.0003587779999999971, 0.0003564029999999982, 0.00038540299999999944, 0.0003610000000000002, 0.0003563609999999995, 0.00035944400000000043, 0.0003582779999999966, 0.0003576389999999999, 0.0003857090000000049, 0.00038519500000000484, 0.0003592920000000041, 0.00036019500000000065, 0.000361054999999999, 0.00035723699999999636, 0.0003569730000000035, 0.00035959800000000264, 0.0003588339999999954, 0.0003579999999999972, 0.00035995799999999356]</msg>
<status status="PASS" starttime="20201029 12:47:13.479" endtime="20201029 12:47:13.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.475" endtime="20201029 12:47:13.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:13.487" endtime="20201029 12:47:13.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.485" endtime="20201029 12:47:13.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.484" endtime="20201029 12:47:13.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.103" endtime="20201029 12:47:13.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.102" endtime="20201029 12:47:13.508"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.517" endtime="20201029 12:47:13.553"></status>
</kw>
<msg timestamp="20201029 12:47:13.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.515" endtime="20201029 12:47:13.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.555" endtime="20201029 12:47:13.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.557" endtime="20201029 12:47:13.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.513" endtime="20201029 12:47:13.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.510" endtime="20201029 12:47:13.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.566" endtime="20201029 12:47:13.860"></status>
</kw>
<msg timestamp="20201029 12:47:13.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023422847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.565" endtime="20201029 12:47:13.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023422847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.864" endtime="20201029 12:47:13.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.872" endtime="20201029 12:47:13.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.562" endtime="20201029 12:47:13.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.560" endtime="20201029 12:47:13.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:13.879" level="INFO">${RESULT} = [{'diff': 0.0003692640000000011}, {'diff': 0.0003564440000000009}, {'diff': 0.0003566530000000019}, {'diff': 0.00035624999999999893}, {'diff': 0.0003602359999999999}, {'diff': 0.00035830499999999973},...</msg>
<status status="PASS" starttime="20201029 12:47:13.876" endtime="20201029 12:47:13.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:13.886" level="INFO">${ACCURACY} = {'diff': [0.0003692640000000011, 0.0003564440000000009, 0.0003566530000000019, 0.00035624999999999893, 0.0003602359999999999, 0.00035830499999999973, 0.0003856390000000001, 0.0003578470000000014, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:13.880" endtime="20201029 12:47:13.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.891" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:47:13.890" endtime="20201029 12:47:13.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.894" level="INFO">VALUE: [0.0003692640000000011, 0.0003564440000000009, 0.0003566530000000019, 0.00035624999999999893, 0.0003602359999999999, 0.00035830499999999973, 0.0003856390000000001, 0.0003578470000000014, 0.00035811100000000123, 0.0003596940000000007, 0.0003595830000000001, 0.00035952700000000185, 0.00038608300000000234, 0.0003854299999999991, 0.0003849999999999999, 0.0003591390000000014, 0.00035888800000000165, 0.00038491599999999904, 0.0003859719999999983, 0.0003607079999999978, 0.00038658299999999937, 0.00038562500000000055, 0.0003576939999999987, 0.0003593190000000038, 0.0003603889999999957, 0.00035741699999999876, 0.0003599580000000005, 0.00035776399999999653, 0.0003855139999999965, 0.00036043000000000186, 0.0003851529999999992, 0.0003605269999999994, 0.00038606899999999583, 0.00035737500000000005, 0.0003585700000000025, 0.0003576389999999999, 0.00038572199999999807, 0.0003588470000000024, 0.0003568470000000004, 0.0003588890000000011, 0.000356972000000004, 0.0003859169999999995, 0.0003855139999999965, 0.0003582219999999983, 0.0003600830000000041, 0.0003858469999999947, 0.0003581809999999991, 0.0003575280000000028, 0.00035948599999999914, 0.00035698599999999664]</msg>
<status status="PASS" starttime="20201029 12:47:13.892" endtime="20201029 12:47:13.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.887" endtime="20201029 12:47:13.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:13.899" endtime="20201029 12:47:13.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.897" endtime="20201029 12:47:13.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.896" endtime="20201029 12:47:13.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.509" endtime="20201029 12:47:13.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.508" endtime="20201029 12:47:13.919"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.928" endtime="20201029 12:47:13.966"></status>
</kw>
<msg timestamp="20201029 12:47:13.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.927" endtime="20201029 12:47:13.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.969" endtime="20201029 12:47:13.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.973" endtime="20201029 12:47:13.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.924" endtime="20201029 12:47:13.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.922" endtime="20201029 12:47:13.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.991" endtime="20201029 12:47:14.278"></status>
</kw>
<msg timestamp="20201029 12:47:14.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023463681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023840069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.988" endtime="20201029 12:47:14.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023463681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023840069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.282" endtime="20201029 12:47:14.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.290" endtime="20201029 12:47:14.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.983" endtime="20201029 12:47:14.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.980" endtime="20201029 12:47:14.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:14.297" level="INFO">${RESULT} = [{'diff': 0.00037638799999999834}, {'diff': 0.0003605419999999984}, {'diff': 0.0003571249999999998}, {'diff': 0.0003586250000000013}, {'diff': 0.0003592640000000015}, {'diff': 0.0003864720000000023}, ...</msg>
<status status="PASS" starttime="20201029 12:47:14.294" endtime="20201029 12:47:14.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:14.301" level="INFO">${ACCURACY} = {'diff': [0.00037638799999999834, 0.0003605419999999984, 0.0003571249999999998, 0.0003586250000000013, 0.0003592640000000015, 0.0003864720000000023, 0.00035775000000000043, 0.0003568189999999978, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:14.298" endtime="20201029 12:47:14.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.306" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:47:14.305" endtime="20201029 12:47:14.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.308" level="INFO">VALUE: [0.00037638799999999834, 0.0003605419999999984, 0.0003571249999999998, 0.0003586250000000013, 0.0003592640000000015, 0.0003864720000000023, 0.00035775000000000043, 0.0003568189999999978, 0.00035705600000000143, 0.00035952799999999785, 0.0003606809999999981, 0.0003570279999999988, 0.00035959799999999917, 0.0003585000000000012, 0.00038540299999999944, 0.0003610139999999998, 0.000360361, 0.0003589030000000007, 0.0003576809999999986, 0.00038554199999999914, 0.0003599580000000005, 0.00035687499999999955, 0.000385513000000004, 0.00035641699999999776, 0.0003591940000000002, 0.0003602779999999986, 0.0003608889999999962, 0.00035944400000000043, 0.00035947199999999957, 0.0003583890000000006, 0.0003860699999999953, 0.0003569170000000052, 0.00035974999999999896, 0.00038490299999999894, 0.00036037500000000305, 0.00035719499999999765, 0.00038527799999999585, 0.0003593340000000028, 0.0003591810000000001, 0.0003572089999999972, 0.00038512500000000005, 0.00036011100000000323, 0.00035737500000000005, 0.000359346999999996, 0.000360667000000002, 0.00036073699999999986, 0.00035872200000000576, 0.00036102799999999935, 0.0003575689999999951, 0.00036037500000000305]</msg>
<status status="PASS" starttime="20201029 12:47:14.307" endtime="20201029 12:47:14.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.302" endtime="20201029 12:47:14.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:14.313" endtime="20201029 12:47:14.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.312" endtime="20201029 12:47:14.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.311" endtime="20201029 12:47:14.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.920" endtime="20201029 12:47:14.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.920" endtime="20201029 12:47:14.334"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.343" endtime="20201029 12:47:14.383"></status>
</kw>
<msg timestamp="20201029 12:47:14.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.342" endtime="20201029 12:47:14.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.384" endtime="20201029 12:47:14.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.387" endtime="20201029 12:47:14.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.339" endtime="20201029 12:47:14.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.337" endtime="20201029 12:47:14.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.396" endtime="20201029 12:47:14.683"></status>
</kw>
<msg timestamp="20201029 12:47:14.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025797014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026180986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.395" endtime="20201029 12:47:14.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025797014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026180986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.687" endtime="20201029 12:47:14.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.696" endtime="20201029 12:47:14.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.392" endtime="20201029 12:47:14.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.390" endtime="20201029 12:47:14.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:14.702" level="INFO">${RESULT} = [{'diff': 0.0003839719999999998}, {'diff': 0.00035759700000000116}, {'diff': 0.0003860140000000005}, {'diff': 0.000359667000000001}, {'diff': 0.00035695800000000097}, {'diff': 0.00038647300000000176},...</msg>
<status status="PASS" starttime="20201029 12:47:14.699" endtime="20201029 12:47:14.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:14.706" level="INFO">${ACCURACY} = {'diff': [0.0003839719999999998, 0.00035759700000000116, 0.0003860140000000005, 0.000359667000000001, 0.00035695800000000097, 0.00038647300000000176, 0.0003856659999999998, 0.000360652999999999, 0.000...</msg>
<status status="PASS" starttime="20201029 12:47:14.703" endtime="20201029 12:47:14.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.711" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:47:14.710" endtime="20201029 12:47:14.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.714" level="INFO">VALUE: [0.0003839719999999998, 0.00035759700000000116, 0.0003860140000000005, 0.000359667000000001, 0.00035695800000000097, 0.00038647300000000176, 0.0003856659999999998, 0.000360652999999999, 0.00036048600000000014, 0.0003586939999999997, 0.0003857500000000007, 0.0003860560000000027, 0.00035930500000000073, 0.00035915200000000147, 0.0003595700000000035, 0.0003611109999999973, 0.0003855970000000014, 0.00035641699999999776, 0.0003858479999999942, 0.00036004099999999845, 0.00035893000000000036, 0.000386611000000002, 0.0003601250000000028, 0.0003860560000000027, 0.00035855500000000345, 0.00035747199999999757, 0.0003581809999999991, 0.0003565410000000019, 0.0003593890000000016, 0.00035674999999999596, 0.0003612220000000013, 0.00035754200000000236, 0.0003606940000000017, 0.00038570899999999797, 0.0003858750000000008, 0.00035677800000000204, 0.0003607779999999991, 0.00035965300000000144, 0.0003589299999999934, 0.00035798599999999764, 0.00035724999999999646, 0.0003854729999999973, 0.00035748599999999714, 0.00035776399999999653, 0.0003586809999999996, 0.0003865139999999975, 0.00036009700000000366, 0.00036098600000000064, 0.00038570899999999797, 0.00035980599999999724]</msg>
<status status="PASS" starttime="20201029 12:47:14.712" endtime="20201029 12:47:14.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.707" endtime="20201029 12:47:14.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:14.720" endtime="20201029 12:47:14.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.718" endtime="20201029 12:47:14.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.717" endtime="20201029 12:47:14.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.335" endtime="20201029 12:47:14.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.335" endtime="20201029 12:47:14.741"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.750" endtime="20201029 12:47:14.784"></status>
</kw>
<msg timestamp="20201029 12:47:14.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.748" endtime="20201029 12:47:14.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.786" endtime="20201029 12:47:14.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.788" endtime="20201029 12:47:14.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.745" endtime="20201029 12:47:14.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.743" endtime="20201029 12:47:14.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.798" endtime="20201029 12:47:15.084"></status>
</kw>
<msg timestamp="20201029 12:47:15.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021335125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.796" endtime="20201029 12:47:15.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021335125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.089" endtime="20201029 12:47:15.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.097" endtime="20201029 12:47:15.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.794" endtime="20201029 12:47:15.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.792" endtime="20201029 12:47:15.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.104" level="INFO">${RESULT} = [{'diff': 0.0003831939999999999}, {'diff': 0.00036024999999999946}, {'diff': 0.00035792999999999936}, {'diff': 0.0003859720000000018}, {'diff': 0.00036045799999999753}, {'diff': 0.0003585969999999987}...</msg>
<status status="PASS" starttime="20201029 12:47:15.100" endtime="20201029 12:47:15.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:15.109" level="INFO">${ACCURACY} = {'diff': [0.0003831939999999999, 0.00036024999999999946, 0.00035792999999999936, 0.0003859720000000018, 0.00036045799999999753, 0.0003585969999999987, 0.0003598609999999995, 0.00038588900000000037, 0....</msg>
<status status="PASS" starttime="20201029 12:47:15.105" endtime="20201029 12:47:15.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.113" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:47:15.112" endtime="20201029 12:47:15.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.116" level="INFO">VALUE: [0.0003831939999999999, 0.00036024999999999946, 0.00035792999999999936, 0.0003859720000000018, 0.00036045799999999753, 0.0003585969999999987, 0.0003598609999999995, 0.00038588900000000037, 0.0003599020000000022, 0.0003593060000000002, 0.00038548600000000086, 0.000360361, 0.00035911100000000223, 0.00035833399999999835, 0.00035912499999999833, 0.0003608750000000001, 0.0003568060000000012, 0.00036084700000000094, 0.00035937500000000205, 0.00036076399999999953, 0.00035793099999999883, 0.0003572220000000008, 0.00038588900000000037, 0.00035665299999999844, 0.0003588329999999994, 0.00035897199999999907, 0.0003610689999999986, 0.0003571809999999981, 0.00038530500000000245, 0.0003867499999999982, 0.00038518099999999833, 0.0003572359999999969, 0.0003864300000000001, 0.00036037500000000305, 0.0003865840000000023, 0.0003583190000000028, 0.0003867640000000047, 0.0003866949999999994, 0.0003564720000000035, 0.0003860970000000019, 0.0003564159999999983, 0.00036109700000000466, 0.0003569860000000036, 0.0003577219999999978, 0.0003577359999999974, 0.0003610419999999989, 0.0003610830000000051, 0.00038568099999999883, 0.00035669499999999715, 0.00036044400000000143]</msg>
<status status="PASS" starttime="20201029 12:47:15.115" endtime="20201029 12:47:15.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.110" endtime="20201029 12:47:15.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.121" endtime="20201029 12:47:15.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.120" endtime="20201029 12:47:15.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.118" endtime="20201029 12:47:15.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.742" endtime="20201029 12:47:15.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.741" endtime="20201029 12:47:15.142"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.151" endtime="20201029 12:47:15.186"></status>
</kw>
<msg timestamp="20201029 12:47:15.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.149" endtime="20201029 12:47:15.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.187" endtime="20201029 12:47:15.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.190" endtime="20201029 12:47:15.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.147" endtime="20201029 12:47:15.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.145" endtime="20201029 12:47:15.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.199" endtime="20201029 12:47:15.488"></status>
</kw>
<msg timestamp="20201029 12:47:15.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.198" endtime="20201029 12:47:15.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.492" endtime="20201029 12:47:15.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.500" endtime="20201029 12:47:15.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.195" endtime="20201029 12:47:15.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.193" endtime="20201029 12:47:15.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.507" level="INFO">${RESULT} = [{'diff': 0.0003579999999999972}, {'diff': 0.00035723600000000036}, {'diff': 0.00038598600000000136}, {'diff': 0.00036020800000000075}, {'diff': 0.0003578890000000001}, {'diff': 0.00035733300000000134...</msg>
<status status="PASS" starttime="20201029 12:47:15.504" endtime="20201029 12:47:15.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:15.511" level="INFO">${ACCURACY} = {'diff': [0.0003579999999999972, 0.00035723600000000036, 0.00038598600000000136, 0.00036020800000000075, 0.0003578890000000001, 0.00035733300000000134, 0.00036034700000000044, 0.00035870799999999925, ...</msg>
<status status="PASS" starttime="20201029 12:47:15.508" endtime="20201029 12:47:15.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.516" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:47:15.515" endtime="20201029 12:47:15.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.518" level="INFO">VALUE: [0.0003579999999999972, 0.00035723600000000036, 0.00038598600000000136, 0.00036020800000000075, 0.0003578890000000001, 0.00035733300000000134, 0.00036034700000000044, 0.00035870799999999925, 0.0003609169999999988, 0.0003591940000000002, 0.0003572220000000008, 0.000360555000000002, 0.00035697200000000054, 0.0003581250000000008, 0.00035777799999999957, 0.000358360999999998, 0.00038488899999999937, 0.000385319999999998, 0.0003860699999999988, 0.00036029200000000164, 0.0003582770000000006, 0.000358958999999999, 0.00035751399999999975, 0.0003566800000000016, 0.00038512500000000005, 0.0003575410000000029, 0.0003578890000000001, 0.00035837500000000105, 0.0003609309999999949, 0.00038556900000000227, 0.0003603340000000038, 0.00035977800000000504, 0.0003597219999999998, 0.00035842999999999986, 0.0003585549999999965, 0.0003605969999999972, 0.00035880599999999624, 0.00038551400000000347, 0.0003602220000000003, 0.00035836200000000096, 0.0003859169999999995, 0.00035911100000000223, 0.00035770799999999825, 0.00038525000000000365, 0.0003581250000000008, 0.00038575000000000415, 0.00038630500000000345, 0.0003561530000000049, 0.0003856529999999997, 0.0003599999999999992]</msg>
<status status="PASS" starttime="20201029 12:47:15.517" endtime="20201029 12:47:15.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.512" endtime="20201029 12:47:15.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.524" endtime="20201029 12:47:15.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.522" endtime="20201029 12:47:15.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.521" endtime="20201029 12:47:15.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.143" endtime="20201029 12:47:15.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.142" endtime="20201029 12:47:15.544"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.553" endtime="20201029 12:47:15.597"></status>
</kw>
<msg timestamp="20201029 12:47:15.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.552" endtime="20201029 12:47:15.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.599" endtime="20201029 12:47:15.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.601" endtime="20201029 12:47:15.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.549" endtime="20201029 12:47:15.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.547" endtime="20201029 12:47:15.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.611" endtime="20201029 12:47:15.897"></status>
</kw>
<msg timestamp="20201029 12:47:15.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026392347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026772236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.609" endtime="20201029 12:47:15.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026392347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026772236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.901" endtime="20201029 12:47:15.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.910" endtime="20201029 12:47:15.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.607" endtime="20201029 12:47:15.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.605" endtime="20201029 12:47:15.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.916" level="INFO">${RESULT} = [{'diff': 0.0003798890000000013}, {'diff': 0.000384917000000002}, {'diff': 0.00038488899999999937}, {'diff': 0.00038513800000000015}, {'diff': 0.0003598749999999991}, {'diff': 0.0003594030000000012}, ...</msg>
<status status="PASS" starttime="20201029 12:47:15.913" endtime="20201029 12:47:15.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:15.921" level="INFO">${ACCURACY} = {'diff': [0.0003798890000000013, 0.000384917000000002, 0.00038488899999999937, 0.00038513800000000015, 0.0003598749999999991, 0.0003594030000000012, 0.000357666999999999, 0.00038562500000000055, 0.000...</msg>
<status status="PASS" starttime="20201029 12:47:15.917" endtime="20201029 12:47:15.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.925" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:47:15.924" endtime="20201029 12:47:15.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.928" level="INFO">VALUE: [0.0003798890000000013, 0.000384917000000002, 0.00038488899999999937, 0.00038513800000000015, 0.0003598749999999991, 0.0003594030000000012, 0.000357666999999999, 0.00038562500000000055, 0.00035702699999999934, 0.00038598600000000136, 0.0003595420000000009, 0.00035909799999999867, 0.0003855970000000014, 0.00035794399999999893, 0.0003598889999999952, 0.00035694399999999793, 0.0003862499999999977, 0.00038505599999999474, 0.0003588199999999958, 0.00035650000000000265, 0.0003585549999999965, 0.0003858750000000008, 0.0003606109999999968, 0.00035627700000000206, 0.0003863189999999961, 0.00035977800000000504, 0.00035893100000000677, 0.0003578329999999949, 0.0003609030000000027, 0.00038583400000000156, 0.0003595140000000052, 0.00035866600000000054, 0.00038534700000000116, 0.00038547200000000476, 0.00035659700000000016, 0.00035977800000000504, 0.0003856529999999997, 0.00036065200000000297, 0.0003579029999999997, 0.00035869499999999915, 0.00035748599999999714, 0.0003849439999999982, 0.0003568889999999991, 0.0003564019999999987, 0.0003571669999999985, 0.0003583470000000019, 0.0003596800000000011, 0.00035866600000000054, 0.00035931899999999684, 0.0003862499999999977]</msg>
<status status="PASS" starttime="20201029 12:47:15.926" endtime="20201029 12:47:15.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.921" endtime="20201029 12:47:15.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.934" endtime="20201029 12:47:15.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.932" endtime="20201029 12:47:15.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.931" endtime="20201029 12:47:15.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.545" endtime="20201029 12:47:15.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.545" endtime="20201029 12:47:15.955"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.964" endtime="20201029 12:47:16.001"></status>
</kw>
<msg timestamp="20201029 12:47:16.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.962" endtime="20201029 12:47:16.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.002" endtime="20201029 12:47:16.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.005" endtime="20201029 12:47:16.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.959" endtime="20201029 12:47:16.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.957" endtime="20201029 12:47:16.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.014" endtime="20201029 12:47:16.301"></status>
</kw>
<msg timestamp="20201029 12:47:16.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022941958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023314986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.013" endtime="20201029 12:47:16.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022941958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023314986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.305" endtime="20201029 12:47:16.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.314" endtime="20201029 12:47:16.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.010" endtime="20201029 12:47:16.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.008" endtime="20201029 12:47:16.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.321" level="INFO">${RESULT} = [{'diff': 0.00037302800000000094}, {'diff': 0.0003577229999999973}, {'diff': 0.0003587229999999983}, {'diff': 0.00035705600000000143}, {'diff': 0.0003569029999999987}, {'diff': 0.0003603890000000026},...</msg>
<status status="PASS" starttime="20201029 12:47:16.317" endtime="20201029 12:47:16.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:16.330" level="INFO">${ACCURACY} = {'diff': [0.00037302800000000094, 0.0003577229999999973, 0.0003587229999999983, 0.00035705600000000143, 0.0003569029999999987, 0.0003603890000000026, 0.0003862780000000003, 0.0003593329999999999, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:16.324" endtime="20201029 12:47:16.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.337" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:47:16.335" endtime="20201029 12:47:16.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.341" level="INFO">VALUE: [0.00037302800000000094, 0.0003577229999999973, 0.0003587229999999983, 0.00035705600000000143, 0.0003569029999999987, 0.0003603890000000026, 0.0003862780000000003, 0.0003593329999999999, 0.00035673600000000333, 0.00035797199999999807, 0.00038605499999999973, 0.00035727800000000254, 0.0003614029999999997, 0.0003599020000000022, 0.00035713900000000284, 0.0003572220000000008, 0.00036061199999999974, 0.0003861530000000002, 0.0003601940000000012, 0.0003576800000000026, 0.000359054999999997, 0.0003606800000000021, 0.00035691600000000226, 0.00036048600000000014, 0.00038556900000000227, 0.00035890299999999375, 0.000386013999999997, 0.00035791699999999926, 0.00038658300000000284, 0.00038584800000000113, 0.00038670899999999897, 0.0003572219999999973, 0.0003610000000000002, 0.0003573060000000017, 0.0003565139999999953, 0.000359667000000001, 0.00038540299999999944, 0.00036067999999999517, 0.0003581390000000004, 0.0003866939999999999, 0.0003603890000000026, 0.0003854860000000043, 0.0003589999999999982, 0.0003611109999999973, 0.0003578060000000022, 0.0003607220000000008, 0.00038607000000000224, 0.000358763000000005, 0.00035658400000000007, 0.0003588329999999959]</msg>
<status status="PASS" starttime="20201029 12:47:16.338" endtime="20201029 12:47:16.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.331" endtime="20201029 12:47:16.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:16.350" endtime="20201029 12:47:16.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.347" endtime="20201029 12:47:16.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.345" endtime="20201029 12:47:16.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.956" endtime="20201029 12:47:16.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.955" endtime="20201029 12:47:16.371"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.380" endtime="20201029 12:47:16.417"></status>
</kw>
<msg timestamp="20201029 12:47:16.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.379" endtime="20201029 12:47:16.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.419" endtime="20201029 12:47:16.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.421" endtime="20201029 12:47:16.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.376" endtime="20201029 12:47:16.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.374" endtime="20201029 12:47:16.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.431" endtime="20201029 12:47:16.718"></status>
</kw>
<msg timestamp="20201029 12:47:16.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023573694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023947875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.429" endtime="20201029 12:47:16.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023573694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023947875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.723" endtime="20201029 12:47:16.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.731" endtime="20201029 12:47:16.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.426" endtime="20201029 12:47:16.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.425" endtime="20201029 12:47:16.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.738" level="INFO">${RESULT} = [{'diff': 0.0003741810000000012}, {'diff': 0.0003605970000000007}, {'diff': 0.000357569000000002}, {'diff': 0.00036029100000000217}, {'diff': 0.0003568189999999978}, {'diff': 0.00035947199999999957}, ...</msg>
<status status="PASS" starttime="20201029 12:47:16.734" endtime="20201029 12:47:16.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:16.742" level="INFO">${ACCURACY} = {'diff': [0.0003741810000000012, 0.0003605970000000007, 0.000357569000000002, 0.00036029100000000217, 0.0003568189999999978, 0.00035947199999999957, 0.0003593060000000002, 0.00036112500000000033, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:16.739" endtime="20201029 12:47:16.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.746" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:47:16.745" endtime="20201029 12:47:16.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.749" level="INFO">VALUE: [0.0003741810000000012, 0.0003605970000000007, 0.000357569000000002, 0.00036029100000000217, 0.0003568189999999978, 0.00035947199999999957, 0.0003593060000000002, 0.00036112500000000033, 0.000356861, 0.0003854170000000025, 0.00035706899999999805, 0.0003576809999999986, 0.00038562500000000055, 0.0003593619999999985, 0.00035811100000000123, 0.0003582770000000006, 0.00035961099999999926, 0.00035927800000000107, 0.00035629199999999764, 0.00035655600000000093, 0.00035654200000000136, 0.0003853200000000015, 0.00035709700000000066, 0.0003576940000000056, 0.0003607220000000008, 0.00035705600000000143, 0.000359458, 0.000386207999999999, 0.00035904099999999745, 0.00035724999999999646, 0.00035698599999999664, 0.0003580689999999956, 0.00035845800000000594, 0.00035815299999999994, 0.00035765299999999944, 0.0003609169999999953, 0.0003572779999999956, 0.00035697199999999707, 0.00035758400000000107, 0.0003569999999999962, 0.00038557000000000174, 0.0003567359999999964, 0.000356375000000006, 0.00035750000000000365, 0.0003610559999999985, 0.0003599999999999992, 0.00035677800000000204, 0.0003585419999999964, 0.0003580969999999947, 0.0003862629999999978]</msg>
<status status="PASS" starttime="20201029 12:47:16.748" endtime="20201029 12:47:16.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.743" endtime="20201029 12:47:16.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:16.754" endtime="20201029 12:47:16.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.753" endtime="20201029 12:47:16.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.751" endtime="20201029 12:47:16.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.372" endtime="20201029 12:47:16.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.372" endtime="20201029 12:47:16.775"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.784" endtime="20201029 12:47:16.820"></status>
</kw>
<msg timestamp="20201029 12:47:16.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.782" endtime="20201029 12:47:16.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.821" endtime="20201029 12:47:16.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.824" endtime="20201029 12:47:16.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.780" endtime="20201029 12:47:16.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.778" endtime="20201029 12:47:16.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.833" endtime="20201029 12:47:17.120"></status>
</kw>
<msg timestamp="20201029 12:47:17.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021572847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.831" endtime="20201029 12:47:17.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021572847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.124" endtime="20201029 12:47:17.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.132" endtime="20201029 12:47:17.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.829" endtime="20201029 12:47:17.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.827" endtime="20201029 12:47:17.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.139" level="INFO">${RESULT} = [{'diff': 0.0003698060000000003}, {'diff': 0.000386305}, {'diff': 0.0003595139999999983}, {'diff': 0.0003597359999999994}, {'diff': 0.00036117999999999914}, {'diff': 0.00036024999999999946}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 12:47:17.136" endtime="20201029 12:47:17.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:17.143" level="INFO">${ACCURACY} = {'diff': [0.0003698060000000003, 0.000386305, 0.0003595139999999983, 0.0003597359999999994, 0.00036117999999999914, 0.00036024999999999946, 0.0003589999999999982, 0.00035855600000000293, 0.00038569399...</msg>
<status status="PASS" starttime="20201029 12:47:17.140" endtime="20201029 12:47:17.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.148" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:47:17.147" endtime="20201029 12:47:17.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.151" level="INFO">VALUE: [0.0003698060000000003, 0.000386305, 0.0003595139999999983, 0.0003597359999999994, 0.00036117999999999914, 0.00036024999999999946, 0.0003589999999999982, 0.00035855600000000293, 0.0003856939999999989, 0.00035819400000000265, 0.0003572089999999972, 0.0003595969999999997, 0.0003590139999999978, 0.0003585410000000004, 0.00038640300000000044, 0.000360667000000002, 0.0003854859999999974, 0.0003580000000000007, 0.00035643000000000133, 0.0003590139999999978, 0.00038595799999999875, 0.000360458000000001, 0.00035811100000000123, 0.000359360999999999, 0.0003855689999999988, 0.00038612500000000105, 0.00036036099999999655, 0.000386013999999997, 0.0003856949999999984, 0.00035705500000000195, 0.0003603890000000026, 0.00035672200000000376, 0.00036043000000000186, 0.00035711100000000023, 0.00035845800000000594, 0.00035831899999999584, 0.00035993000000000136, 0.0003582779999999966, 0.0003851110000000005, 0.00035665199999999897, 0.000357861000000001, 0.000356861, 0.00035993100000000083, 0.000360346999999997, 0.00035643100000000427, 0.00036052799999999885, 0.00035715299999999894, 0.00035726400000000297, 0.000356861, 0.0003851529999999992]</msg>
<status status="PASS" starttime="20201029 12:47:17.149" endtime="20201029 12:47:17.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.144" endtime="20201029 12:47:17.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:17.156" endtime="20201029 12:47:17.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.155" endtime="20201029 12:47:17.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.154" endtime="20201029 12:47:17.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.776" endtime="20201029 12:47:17.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.775" endtime="20201029 12:47:17.177"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.186" endtime="20201029 12:47:17.220"></status>
</kw>
<msg timestamp="20201029 12:47:17.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.185" endtime="20201029 12:47:17.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.222" endtime="20201029 12:47:17.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.224" endtime="20201029 12:47:17.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.182" endtime="20201029 12:47:17.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.180" endtime="20201029 12:47:17.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.234" endtime="20201029 12:47:17.521"></status>
</kw>
<msg timestamp="20201029 12:47:17.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021237556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021598556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.232" endtime="20201029 12:47:17.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021237556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021598556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.525" endtime="20201029 12:47:17.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.533" endtime="20201029 12:47:17.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.230" endtime="20201029 12:47:17.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.228" endtime="20201029 12:47:17.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.539" level="INFO">${RESULT} = [{'diff': 0.0003610000000000002}, {'diff': 0.0003581250000000008}, {'diff': 0.0003581669999999995}, {'diff': 0.00036076300000000006}, {'diff': 0.00038598600000000136}, {'diff': 0.0003591670000000005},...</msg>
<status status="PASS" starttime="20201029 12:47:17.536" endtime="20201029 12:47:17.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:17.547" level="INFO">${ACCURACY} = {'diff': [0.0003610000000000002, 0.0003581250000000008, 0.0003581669999999995, 0.00036076300000000006, 0.00038598600000000136, 0.0003591670000000005, 0.0003569310000000013, 0.0003583059999999992, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:17.540" endtime="20201029 12:47:17.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.551" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:47:17.550" endtime="20201029 12:47:17.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.553" level="INFO">VALUE: [0.0003610000000000002, 0.0003581250000000008, 0.0003581669999999995, 0.00036076300000000006, 0.00038598600000000136, 0.0003591670000000005, 0.0003569310000000013, 0.0003583059999999992, 0.00035933399999999935, 0.00035786200000000046, 0.00035815299999999994, 0.00036074999999999996, 0.0003859720000000018, 0.0003587090000000022, 0.00035744500000000137, 0.0003605139999999993, 0.00035866600000000054, 0.00035687499999999955, 0.0003593060000000002, 0.00035920799999999975, 0.0003858329999999986, 0.0003861390000000006, 0.0003599299999999979, 0.00035729099999999916, 0.0003605549999999985, 0.0003608200000000013, 0.00035770799999999825, 0.0003596950000000036, 0.0003599999999999992, 0.0003610559999999985, 0.00035958399999999613, 0.00035908299999999616, 0.00035770799999999825, 0.0003566249999999993, 0.00035826400000000397, 0.0003599450000000004, 0.00035870799999999925, 0.0003572500000000034, 0.0003581390000000004, 0.00038531999999999456, 0.0003577500000000039, 0.00038567999999999936, 0.000358958999999999, 0.0003861520000000007, 0.0003572920000000021, 0.00036091700000000226, 0.0003570280000000023, 0.0003568340000000003, 0.00035894399999999993, 0.0003584030000000002]</msg>
<status status="PASS" starttime="20201029 12:47:17.552" endtime="20201029 12:47:17.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.547" endtime="20201029 12:47:17.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:17.558" endtime="20201029 12:47:17.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.557" endtime="20201029 12:47:17.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.556" endtime="20201029 12:47:17.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.178" endtime="20201029 12:47:17.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.178" endtime="20201029 12:47:17.579"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.588" endtime="20201029 12:47:17.623"></status>
</kw>
<msg timestamp="20201029 12:47:17.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.586" endtime="20201029 12:47:17.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.625" endtime="20201029 12:47:17.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.627" endtime="20201029 12:47:17.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.584" endtime="20201029 12:47:17.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.581" endtime="20201029 12:47:17.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.636" endtime="20201029 12:47:17.940"></status>
</kw>
<msg timestamp="20201029 12:47:17.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021323625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.635" endtime="20201029 12:47:17.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021323625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.945" endtime="20201029 12:47:17.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.952" endtime="20201029 12:47:17.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.632" endtime="20201029 12:47:17.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.630" endtime="20201029 12:47:17.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.959" level="INFO">${RESULT} = [{'diff': 0.00036977800000000116}, {'diff': 0.00035848599999999814}, {'diff': 0.00038516699999999876}, {'diff': 0.00036061100000000026}, {'diff': 0.00038626400000000075}, {'diff': 0.000358764000000001...</msg>
<status status="PASS" starttime="20201029 12:47:17.956" endtime="20201029 12:47:17.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:17.963" level="INFO">${ACCURACY} = {'diff': [0.00036977800000000116, 0.00035848599999999814, 0.00038516699999999876, 0.00036061100000000026, 0.00038626400000000075, 0.000358764000000001, 0.0003860000000000009, 0.0003580000000000007, 0....</msg>
<status status="PASS" starttime="20201029 12:47:17.960" endtime="20201029 12:47:17.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.967" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:47:17.966" endtime="20201029 12:47:17.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.970" level="INFO">VALUE: [0.00036977800000000116, 0.00035848599999999814, 0.00038516699999999876, 0.00036061100000000026, 0.00038626400000000075, 0.000358764000000001, 0.0003860000000000009, 0.0003580000000000007, 0.00038516699999999876, 0.00035811099999999776, 0.000385514, 0.00035879200000000014, 0.00036122199999999785, 0.00036048600000000014, 0.00038552799999999957, 0.00036070800000000125, 0.00036098600000000064, 0.0003599999999999992, 0.0003573190000000018, 0.00036106999999999806, 0.00035848599999999814, 0.00036066699999999854, 0.0003851659999999993, 0.00038626300000000127, 0.00038512500000000005, 0.0003588059999999997, 0.0003585830000000026, 0.00035969500000000015, 0.00035886200000000146, 0.000359569000000004, 0.00035974999999999896, 0.00035820799999999875, 0.00035847199999999857, 0.00035912499999999486, 0.0003603749999999961, 0.0003857639999999968, 0.0003574869999999966, 0.0003864309999999996, 0.00038594499999999865, 0.0003600419999999979, 0.00035691699999999826, 0.0003863469999999952, 0.00038523599999999714, 0.00035841699999999976, 0.00038534700000000116, 0.0003585140000000042, 0.0003853750000000003, 0.00035669499999999715, 0.00035638900000000556, 0.00035748599999999714]</msg>
<status status="PASS" starttime="20201029 12:47:17.968" endtime="20201029 12:47:17.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.964" endtime="20201029 12:47:17.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:17.975" endtime="20201029 12:47:17.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.973" endtime="20201029 12:47:17.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.972" endtime="20201029 12:47:17.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.580" endtime="20201029 12:47:17.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.579" endtime="20201029 12:47:17.995"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.004" endtime="20201029 12:47:18.040"></status>
</kw>
<msg timestamp="20201029 12:47:18.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.002" endtime="20201029 12:47:18.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.042" endtime="20201029 12:47:18.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.044" endtime="20201029 12:47:18.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.000" endtime="20201029 12:47:18.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.998" endtime="20201029 12:47:18.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.053" endtime="20201029 12:47:18.339"></status>
</kw>
<msg timestamp="20201029 12:47:18.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.052" endtime="20201029 12:47:18.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.343" endtime="20201029 12:47:18.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.351" endtime="20201029 12:47:18.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.049" endtime="20201029 12:47:18.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.047" endtime="20201029 12:47:18.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:18.357" level="INFO">${RESULT} = [{'diff': 0.00036116599999999957}, {'diff': 0.00038558299999999837}, {'diff': 0.0003608610000000005}, {'diff': 0.00035870799999999925}, {'diff': 0.00038672199999999907}, {'diff': 0.0003564859999999996...</msg>
<status status="PASS" starttime="20201029 12:47:18.354" endtime="20201029 12:47:18.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:18.361" level="INFO">${ACCURACY} = {'diff': [0.00036116599999999957, 0.00038558299999999837, 0.0003608610000000005, 0.00035870799999999925, 0.00038672199999999907, 0.0003564859999999996, 0.0003594449999999999, 0.00038536100000000073, 0...</msg>
<status status="PASS" starttime="20201029 12:47:18.358" endtime="20201029 12:47:18.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.366" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:47:18.365" endtime="20201029 12:47:18.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.368" level="INFO">VALUE: [0.00036116599999999957, 0.00038558299999999837, 0.0003608610000000005, 0.00035870799999999925, 0.00038672199999999907, 0.0003564859999999996, 0.0003594449999999999, 0.00038536100000000073, 0.0003603190000000013, 0.0003858889999999969, 0.000356569000000001, 0.0003564029999999982, 0.0003575140000000032, 0.000385611000000001, 0.0003866520000000012, 0.000357167000000002, 0.0003583749999999976, 0.00038668000000000036, 0.00038648600000000186, 0.00035679199999999814, 0.0003864450000000026, 0.0003598190000000008, 0.00038662500000000155, 0.00035879200000000014, 0.00038590299999999994, 0.000359667000000001, 0.0003592909999999977, 0.0003861660000000003, 0.0003577909999999962, 0.00036011100000000323, 0.00038638900000000087, 0.00036080599999999824, 0.00035797199999999807, 0.00035966600000000154, 0.0003601250000000028, 0.000358667, 0.0003861110000000015, 0.0003866949999999994, 0.0003570280000000023, 0.0003857079999999985, 0.0003589999999999982, 0.00035737500000000005, 0.0003583890000000006, 0.0003866390000000011, 0.0003571249999999998, 0.0003603610000000035, 0.000360458000000001, 0.00038536100000000073, 0.00038586100000000123, 0.0003605129999999998]</msg>
<status status="PASS" starttime="20201029 12:47:18.367" endtime="20201029 12:47:18.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.362" endtime="20201029 12:47:18.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:18.374" endtime="20201029 12:47:18.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.372" endtime="20201029 12:47:18.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.371" endtime="20201029 12:47:18.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.996" endtime="20201029 12:47:18.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.996" endtime="20201029 12:47:18.395"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.403" endtime="20201029 12:47:18.441"></status>
</kw>
<msg timestamp="20201029 12:47:18.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.402" endtime="20201029 12:47:18.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.443" endtime="20201029 12:47:18.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.445" endtime="20201029 12:47:18.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.399" endtime="20201029 12:47:18.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.397" endtime="20201029 12:47:18.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.454" endtime="20201029 12:47:18.739"></status>
</kw>
<msg timestamp="20201029 12:47:18.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024645944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025007722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.453" endtime="20201029 12:47:18.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024645944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025007722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.744" endtime="20201029 12:47:18.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.751" endtime="20201029 12:47:18.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.450" endtime="20201029 12:47:18.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.449" endtime="20201029 12:47:18.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:18.758" level="INFO">${RESULT} = [{'diff': 0.0003617780000000001}, {'diff': 0.00036079199999999867}, {'diff': 0.0003599999999999992}, {'diff': 0.0003589449999999994}, {'diff': 0.0003590130000000018}, {'diff': 0.00035765199999999997},...</msg>
<status status="PASS" starttime="20201029 12:47:18.755" endtime="20201029 12:47:18.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:18.766" level="INFO">${ACCURACY} = {'diff': [0.0003617780000000001, 0.00036079199999999867, 0.0003599999999999992, 0.0003589449999999994, 0.0003590130000000018, 0.00035765199999999997, 0.00038622199999999857, 0.00036098600000000064, 0....</msg>
<status status="PASS" starttime="20201029 12:47:18.760" endtime="20201029 12:47:18.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.773" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:47:18.771" endtime="20201029 12:47:18.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.777" level="INFO">VALUE: [0.0003617780000000001, 0.00036079199999999867, 0.0003599999999999992, 0.0003589449999999994, 0.0003590130000000018, 0.00035765199999999997, 0.00038622199999999857, 0.00036098600000000064, 0.0003580419999999994, 0.0003565830000000006, 0.00035647200000000004, 0.0003583890000000006, 0.00035909799999999867, 0.0003566389999999989, 0.00035827800000000007, 0.0003591529999999975, 0.0003565419999999979, 0.0003590420000000004, 0.0003575830000000016, 0.00035679199999999467, 0.0003600969999999967, 0.00035673600000000333, 0.0003863750000000013, 0.0003583339999999949, 0.0003599020000000022, 0.00035933300000000334, 0.00038583400000000156, 0.00036080499999999877, 0.00035722200000000426, 0.0003569029999999987, 0.0003561950000000036, 0.00035990299999999475, 0.0003603329999999974, 0.0003610139999999998, 0.00038568099999999883, 0.0003567920000000016, 0.00035897199999999907, 0.00035924999999999846, 0.00035618000000000455, 0.00035947199999999957, 0.0003575280000000028, 0.0003863750000000013, 0.00035744500000000484, 0.00035647199999999657, 0.000360959000000001, 0.00038584700000000166, 0.00035676400000000247, 0.00038644499999999915, 0.0003579999999999972, 0.0003587920000000036]</msg>
<status status="PASS" starttime="20201029 12:47:18.775" endtime="20201029 12:47:18.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.768" endtime="20201029 12:47:18.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:18.784" endtime="20201029 12:47:18.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.783" endtime="20201029 12:47:18.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.781" endtime="20201029 12:47:18.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.396" endtime="20201029 12:47:18.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.395" endtime="20201029 12:47:18.806"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.814" endtime="20201029 12:47:18.848"></status>
</kw>
<msg timestamp="20201029 12:47:18.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.813" endtime="20201029 12:47:18.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.850" endtime="20201029 12:47:18.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.852" endtime="20201029 12:47:18.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.810" endtime="20201029 12:47:18.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.808" endtime="20201029 12:47:18.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.861" endtime="20201029 12:47:19.148"></status>
</kw>
<msg timestamp="20201029 12:47:19.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020511028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020883444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.860" endtime="20201029 12:47:19.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020511028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020883444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.152" endtime="20201029 12:47:19.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.160" endtime="20201029 12:47:19.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.857" endtime="20201029 12:47:19.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.855" endtime="20201029 12:47:19.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.167" level="INFO">${RESULT} = [{'diff': 0.0003724160000000004}, {'diff': 0.0003562920000000011}, {'diff': 0.0003601389999999989}, {'diff': 0.0003570280000000023}, {'diff': 0.0003580549999999995}, {'diff': 0.00036076399999999953}, ...</msg>
<status status="PASS" starttime="20201029 12:47:19.164" endtime="20201029 12:47:19.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:19.171" level="INFO">${ACCURACY} = {'diff': [0.0003724160000000004, 0.0003562920000000011, 0.0003601389999999989, 0.0003570280000000023, 0.0003580549999999995, 0.00036076399999999953, 0.000358764000000001, 0.00035824999999999746, 0.000...</msg>
<status status="PASS" starttime="20201029 12:47:19.168" endtime="20201029 12:47:19.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.175" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:47:19.174" endtime="20201029 12:47:19.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.178" level="INFO">VALUE: [0.0003724160000000004, 0.0003562920000000011, 0.0003601389999999989, 0.0003570280000000023, 0.0003580549999999995, 0.00036076399999999953, 0.000358764000000001, 0.00035824999999999746, 0.00038568099999999883, 0.00035925000000000193, 0.00036070800000000125, 0.00035755599999999846, 0.00035894399999999993, 0.0003864859999999984, 0.0003607360000000004, 0.00036040199999999925, 0.00038588900000000037, 0.0003585000000000012, 0.0003606940000000017, 0.000356554999999998, 0.0003561249999999988, 0.00035866600000000054, 0.0003849719999999973, 0.0003575830000000016, 0.0003601939999999977, 0.00036026399999999903, 0.00038595799999999875, 0.00038548600000000086, 0.0003604299999999984, 0.000356457999999997, 0.00035633300000000034, 0.00036062499999999637, 0.00036044499999999396, 0.00035913899999999443, 0.0003582219999999983, 0.00038606899999999583, 0.0003579029999999997, 0.00035705500000000195, 0.00035630499999999427, 0.0003603470000000039, 0.0003864309999999996, 0.0003586250000000013, 0.00038530500000000245, 0.00036113899999999644, 0.00035891700000000026, 0.00035981899999999734, 0.0003859860000000048, 0.0003594589999999995, 0.00038568099999999883, 0.000356555999999994]</msg>
<status status="PASS" starttime="20201029 12:47:19.176" endtime="20201029 12:47:19.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.172" endtime="20201029 12:47:19.179"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:19.183" endtime="20201029 12:47:19.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.181" endtime="20201029 12:47:19.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.180" endtime="20201029 12:47:19.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.807" endtime="20201029 12:47:19.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.806" endtime="20201029 12:47:19.203"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.212" endtime="20201029 12:47:19.250"></status>
</kw>
<msg timestamp="20201029 12:47:19.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.210" endtime="20201029 12:47:19.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.251" endtime="20201029 12:47:19.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.254" endtime="20201029 12:47:19.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.208" endtime="20201029 12:47:19.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.206" endtime="20201029 12:47:19.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.263" endtime="20201029 12:47:19.548"></status>
</kw>
<msg timestamp="20201029 12:47:19.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024932917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0253015, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:19.261" endtime="20201029 12:47:19.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024932917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0253015, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:19.552" endtime="20201029 12:47:19.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.560" endtime="20201029 12:47:19.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.259" endtime="20201029 12:47:19.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.257" endtime="20201029 12:47:19.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.567" level="INFO">${RESULT} = [{'diff': 0.0003685830000000022}, {'diff': 0.0003590410000000009}, {'diff': 0.0003580829999999986}, {'diff': 0.0003584440000000029}, {'diff': 0.0003585280000000003}, {'diff': 0.0003600139999999988}, {...</msg>
<status status="PASS" starttime="20201029 12:47:19.564" endtime="20201029 12:47:19.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:19.571" level="INFO">${ACCURACY} = {'diff': [0.0003685830000000022, 0.0003590410000000009, 0.0003580829999999986, 0.0003584440000000029, 0.0003585280000000003, 0.0003600139999999988, 0.00038544400000000215, 0.00035709700000000066, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:19.568" endtime="20201029 12:47:19.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.575" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:47:19.574" endtime="20201029 12:47:19.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.577" level="INFO">VALUE: [0.0003685830000000022, 0.0003590410000000009, 0.0003580829999999986, 0.0003584440000000029, 0.0003585280000000003, 0.0003600139999999988, 0.00038544400000000215, 0.00035709700000000066, 0.0003600840000000001, 0.00038533400000000106, 0.00035927800000000107, 0.00035906900000000005, 0.00035887500000000155, 0.00035775000000000043, 0.00035825000000000093, 0.00035856999999999903, 0.0003600000000000027, 0.00035832000000000225, 0.00035793099999999883, 0.0003583340000000018, 0.00038506899999999483, 0.00038494499999999765, 0.0003851939999999984, 0.0003595139999999983, 0.00035750000000000365, 0.0003588749999999946, 0.0003588329999999959, 0.0003854719999999978, 0.0003612230000000008, 0.0003594999999999987, 0.0003578339999999944, 0.00038573599999999764, 0.0003605830000000046, 0.000359667000000001, 0.0003860970000000019, 0.0003569029999999987, 0.00036058299999999766, 0.00038488899999999937, 0.0003571390000000063, 0.0003582779999999966, 0.0003568190000000013, 0.000359667000000001, 0.00035824999999999746, 0.0003863609999999948, 0.0003599030000000017, 0.000359458, 0.00036080599999999824, 0.00035637499999999905, 0.00035843099999999933, 0.00038612500000000105]</msg>
<status status="PASS" starttime="20201029 12:47:19.576" endtime="20201029 12:47:19.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.571" endtime="20201029 12:47:19.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:19.583" endtime="20201029 12:47:19.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.582" endtime="20201029 12:47:19.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.581" endtime="20201029 12:47:19.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.204" endtime="20201029 12:47:19.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.204" endtime="20201029 12:47:19.604"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.613" endtime="20201029 12:47:19.648"></status>
</kw>
<msg timestamp="20201029 12:47:19.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.611" endtime="20201029 12:47:19.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.649" endtime="20201029 12:47:19.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.652" endtime="20201029 12:47:19.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.609" endtime="20201029 12:47:19.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.607" endtime="20201029 12:47:19.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.661" endtime="20201029 12:47:19.956"></status>
</kw>
<msg timestamp="20201029 12:47:19.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021391222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.659" endtime="20201029 12:47:19.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021391222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.965" endtime="20201029 12:47:19.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.983" endtime="20201029 12:47:19.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.657" endtime="20201029 12:47:19.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.655" endtime="20201029 12:47:19.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.996" level="INFO">${RESULT} = [{'diff': 0.0003686799999999997}, {'diff': 0.0003603060000000012}, {'diff': 0.0003853330000000016}, {'diff': 0.00038526399999999975}, {'diff': 0.00036011099999999976}, {'diff': 0.00036080499999999877}...</msg>
<status status="PASS" starttime="20201029 12:47:19.990" endtime="20201029 12:47:19.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:20.007" level="INFO">${ACCURACY} = {'diff': [0.0003686799999999997, 0.0003603060000000012, 0.0003853330000000016, 0.00038526399999999975, 0.00036011099999999976, 0.00036080499999999877, 0.0003590839999999991, 0.0003567090000000002, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:19.999" endtime="20201029 12:47:20.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.012" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:47:20.011" endtime="20201029 12:47:20.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.015" level="INFO">VALUE: [0.0003686799999999997, 0.0003603060000000012, 0.0003853330000000016, 0.00038526399999999975, 0.00036011099999999976, 0.00036080499999999877, 0.0003590839999999991, 0.0003567090000000002, 0.0003859589999999982, 0.0003857779999999998, 0.00035984699999999994, 0.00035611099999999923, 0.00035668100000000105, 0.0003851940000000019, 0.00035979200000000114, 0.0003860420000000031, 0.0003573610000000005, 0.00035784699999999794, 0.0003576250000000003, 0.0003610419999999989, 0.0003851110000000005, 0.00038540299999999944, 0.00036006900000000105, 0.00035897299999999854, 0.00038494400000000165, 0.0003566110000000032, 0.00038594400000000265, 0.000357569000000002, 0.00035752799999999585, 0.0003562500000000024, 0.0003563889999999986, 0.00036026399999999903, 0.000360555999999998, 0.0003569170000000052, 0.000360346999999997, 0.00035827800000000354, 0.0003607360000000004, 0.00038516699999999876, 0.0003860970000000019, 0.00035648599999999614, 0.00036091700000000226, 0.0003606940000000017, 0.0003566389999999989, 0.00038540299999999944, 0.0003861530000000002, 0.0003588890000000011, 0.0003863750000000013, 0.0003856529999999997, 0.0003599030000000017, 0.00035719499999999765]</msg>
<status status="PASS" starttime="20201029 12:47:20.013" endtime="20201029 12:47:20.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.008" endtime="20201029 12:47:20.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:20.019" endtime="20201029 12:47:20.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.018" endtime="20201029 12:47:20.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.017" endtime="20201029 12:47:20.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.605" endtime="20201029 12:47:20.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.604" endtime="20201029 12:47:20.040"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.049" endtime="20201029 12:47:20.084"></status>
</kw>
<msg timestamp="20201029 12:47:20.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.047" endtime="20201029 12:47:20.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.086" endtime="20201029 12:47:20.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.088" endtime="20201029 12:47:20.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.045" endtime="20201029 12:47:20.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.043" endtime="20201029 12:47:20.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.097" endtime="20201029 12:47:20.385"></status>
</kw>
<msg timestamp="20201029 12:47:20.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022357278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.096" endtime="20201029 12:47:20.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022357278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.389" endtime="20201029 12:47:20.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.397" endtime="20201029 12:47:20.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.093" endtime="20201029 12:47:20.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.092" endtime="20201029 12:47:20.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:20.404" level="INFO">${RESULT} = [{'diff': 0.00038105600000000114}, {'diff': 0.0003602359999999999}, {'diff': 0.00035641600000000176}, {'diff': 0.00035747199999999757}, {'diff': 0.00035823600000000136}, {'diff': 0.0003602780000000020...</msg>
<status status="PASS" starttime="20201029 12:47:20.400" endtime="20201029 12:47:20.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:20.408" level="INFO">${ACCURACY} = {'diff': [0.00038105600000000114, 0.0003602359999999999, 0.00035641600000000176, 0.00035747199999999757, 0.00035823600000000136, 0.00036027800000000207, 0.00035920799999999975, 0.000357666999999999, 0...</msg>
<status status="PASS" starttime="20201029 12:47:20.405" endtime="20201029 12:47:20.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.413" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:47:20.412" endtime="20201029 12:47:20.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.416" level="INFO">VALUE: [0.00038105600000000114, 0.0003602359999999999, 0.00035641600000000176, 0.00035747199999999757, 0.00035823600000000136, 0.00036027800000000207, 0.00035920799999999975, 0.000357666999999999, 0.00035661099999999973, 0.0003568050000000017, 0.00035655600000000093, 0.0003862500000000012, 0.00035727799999999907, 0.00036079199999999867, 0.00035979199999999767, 0.0003573189999999983, 0.00035895900000000244, 0.0003564159999999983, 0.0003561800000000011, 0.00038513800000000015, 0.00036048600000000014, 0.0003590969999999992, 0.0003853339999999976, 0.0003581939999999992, 0.00036106999999999806, 0.0003862640000000042, 0.000360054999999998, 0.0003578339999999944, 0.0003585270000000043, 0.0003862090000000054, 0.00035783300000000184, 0.0003584590000000054, 0.0003565139999999953, 0.0003852919999999954, 0.0003584999999999977, 0.000357457999999998, 0.00038538899999999987, 0.0003612220000000013, 0.0003849309999999981, 0.0003850420000000021, 0.00036084799999999695, 0.000360070000000004, 0.00035870799999999925, 0.00035986099999999605, 0.00036058299999999766, 0.00035913899999999443, 0.0003854719999999978, 0.0003590689999999966, 0.00035652799999999485, 0.00035687499999999955]</msg>
<status status="PASS" starttime="20201029 12:47:20.414" endtime="20201029 12:47:20.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.409" endtime="20201029 12:47:20.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:20.421" endtime="20201029 12:47:20.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.419" endtime="20201029 12:47:20.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.418" endtime="20201029 12:47:20.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.041" endtime="20201029 12:47:20.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.041" endtime="20201029 12:47:20.442"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.450" endtime="20201029 12:47:20.486"></status>
</kw>
<msg timestamp="20201029 12:47:20.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.449" endtime="20201029 12:47:20.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.488" endtime="20201029 12:47:20.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.490" endtime="20201029 12:47:20.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.446" endtime="20201029 12:47:20.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.444" endtime="20201029 12:47:20.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.499" endtime="20201029 12:47:20.784"></status>
</kw>
<msg timestamp="20201029 12:47:20.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022914986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.497" endtime="20201029 12:47:20.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022914986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.788" endtime="20201029 12:47:20.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.796" endtime="20201029 12:47:20.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.495" endtime="20201029 12:47:20.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.493" endtime="20201029 12:47:20.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:20.802" level="INFO">${RESULT} = [{'diff': 0.00038640299999999697}, {'diff': 0.00038519500000000137}, {'diff': 0.00035901400000000125}, {'diff': 0.00035998599999999964}, {'diff': 0.00035805600000000243}, {'diff': 0.000361195000000001...</msg>
<status status="PASS" starttime="20201029 12:47:20.799" endtime="20201029 12:47:20.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:20.806" level="INFO">${ACCURACY} = {'diff': [0.00038640299999999697, 0.00038519500000000137, 0.00035901400000000125, 0.00035998599999999964, 0.00035805600000000243, 0.00036119500000000165, 0.00035693000000000183, 0.00038659699999999894...</msg>
<status status="PASS" starttime="20201029 12:47:20.803" endtime="20201029 12:47:20.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.810" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:47:20.809" endtime="20201029 12:47:20.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.813" level="INFO">VALUE: [0.00038640299999999697, 0.00038519500000000137, 0.00035901400000000125, 0.00035998599999999964, 0.00035805600000000243, 0.00036119500000000165, 0.00035693000000000183, 0.00038659699999999894, 0.0003852779999999993, 0.00036102799999999935, 0.00038668000000000036, 0.00035650000000000265, 0.0003598609999999995, 0.0003597089999999997, 0.00035994400000000093, 0.000360959000000001, 0.00035941700000000076, 0.00035961100000000273, 0.00036112500000000033, 0.0003597089999999997, 0.0003570279999999988, 0.00038612500000000105, 0.00036074999999999996, 0.00035983300000000384, 0.00035702799999999535, 0.0003591669999999936, 0.00038634700000000216, 0.00038545799999999825, 0.00035787500000000055, 0.00035897199999999907, 0.0003579029999999997, 0.0003574159999999993, 0.0003607779999999991, 0.00038618099999999933, 0.000356457999999997, 0.00035695800000000444, 0.0003607779999999991, 0.0003604590000000005, 0.00035659700000000016, 0.00038672199999999907, 0.0003860970000000019, 0.0003611670000000025, 0.0003867780000000043, 0.0003605700000000045, 0.00035750000000000365, 0.00035981899999999734, 0.00035947299999999904, 0.00038599999999999746, 0.00035895800000000644, 0.0003611250000000038]</msg>
<status status="PASS" starttime="20201029 12:47:20.811" endtime="20201029 12:47:20.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.807" endtime="20201029 12:47:20.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:20.819" endtime="20201029 12:47:20.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.817" endtime="20201029 12:47:20.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.816" endtime="20201029 12:47:20.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.443" endtime="20201029 12:47:20.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.442" endtime="20201029 12:47:20.839"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.848" endtime="20201029 12:47:20.883"></status>
</kw>
<msg timestamp="20201029 12:47:20.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.846" endtime="20201029 12:47:20.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.884" endtime="20201029 12:47:20.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.887" endtime="20201029 12:47:20.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.844" endtime="20201029 12:47:20.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.842" endtime="20201029 12:47:20.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.896" endtime="20201029 12:47:21.180"></status>
</kw>
<msg timestamp="20201029 12:47:21.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.894" endtime="20201029 12:47:21.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.184" endtime="20201029 12:47:21.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.192" endtime="20201029 12:47:21.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.891" endtime="20201029 12:47:21.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.890" endtime="20201029 12:47:21.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.199" level="INFO">${RESULT} = [{'diff': 0.00037065299999999857}, {'diff': 0.00038530500000000245}, {'diff': 0.0003854299999999991}, {'diff': 0.00038559699999999794}, {'diff': 0.0003857919999999994}, {'diff': 0.0003610139999999998}...</msg>
<status status="PASS" starttime="20201029 12:47:21.196" endtime="20201029 12:47:21.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:21.206" level="INFO">${ACCURACY} = {'diff': [0.00037065299999999857, 0.00038530500000000245, 0.0003854299999999991, 0.00038559699999999794, 0.0003857919999999994, 0.0003610139999999998, 0.00035915300000000094, 0.00036084700000000094, 0...</msg>
<status status="PASS" starttime="20201029 12:47:21.200" endtime="20201029 12:47:21.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.211" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:47:21.210" endtime="20201029 12:47:21.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.213" level="INFO">VALUE: [0.00037065299999999857, 0.00038530500000000245, 0.0003854299999999991, 0.00038559699999999794, 0.0003857919999999994, 0.0003610139999999998, 0.00035915300000000094, 0.00036084700000000094, 0.00036074999999999996, 0.00036120800000000175, 0.00035741699999999876, 0.00035925000000000193, 0.00035879200000000014, 0.0003595969999999997, 0.0003612360000000009, 0.00036019500000000065, 0.00038658299999999937, 0.0003604999999999997, 0.00035891700000000026, 0.00035923699999999836, 0.0003574860000000006, 0.0003578060000000022, 0.00036020800000000075, 0.00035929200000000064, 0.0003563469999999999, 0.000356861, 0.0003572080000000047, 0.00035687499999999955, 0.00035969500000000015, 0.00035783300000000184, 0.0003595140000000052, 0.00038586199999999377, 0.0003598890000000021, 0.0003580689999999956, 0.00038636100000000173, 0.0003567229999999963, 0.0003850420000000021, 0.0003596250000000023, 0.0003567920000000016, 0.00038622199999999857, 0.00038527699999999637, 0.0003855550000000027, 0.00036008299999999716, 0.0003564029999999982, 0.00038618099999999933, 0.0003603190000000048, 0.0003603199999999973, 0.00035993100000000083, 0.0003849719999999973, 0.00035694500000000434]</msg>
<status status="PASS" starttime="20201029 12:47:21.212" endtime="20201029 12:47:21.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.207" endtime="20201029 12:47:21.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:21.218" endtime="20201029 12:47:21.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.216" endtime="20201029 12:47:21.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.215" endtime="20201029 12:47:21.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.840" endtime="20201029 12:47:21.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.840" endtime="20201029 12:47:21.239"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.247" endtime="20201029 12:47:21.287"></status>
</kw>
<msg timestamp="20201029 12:47:21.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.246" endtime="20201029 12:47:21.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.288" endtime="20201029 12:47:21.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.291" endtime="20201029 12:47:21.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.243" endtime="20201029 12:47:21.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.241" endtime="20201029 12:47:21.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.299" endtime="20201029 12:47:21.587"></status>
</kw>
<msg timestamp="20201029 12:47:21.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024226042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024611375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.298" endtime="20201029 12:47:21.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024226042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024611375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.591" endtime="20201029 12:47:21.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.599" endtime="20201029 12:47:21.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.295" endtime="20201029 12:47:21.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.294" endtime="20201029 12:47:21.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.605" level="INFO">${RESULT} = [{'diff': 0.0003853330000000016}, {'diff': 0.0003566110000000032}, {'diff': 0.0003586380000000014}, {'diff': 0.0003566670000000015}, {'diff': 0.000385514}, {'diff': 0.0003590000000000017}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 12:47:21.602" endtime="20201029 12:47:21.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:21.609" level="INFO">${ACCURACY} = {'diff': [0.0003853330000000016, 0.0003566110000000032, 0.0003586380000000014, 0.0003566670000000015, 0.000385514, 0.0003590000000000017, 0.00038588900000000037, 0.00035637499999999905, 0.000357055000...</msg>
<status status="PASS" starttime="20201029 12:47:21.606" endtime="20201029 12:47:21.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.614" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:47:21.613" endtime="20201029 12:47:21.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.616" level="INFO">VALUE: [0.0003853330000000016, 0.0003566110000000032, 0.0003586380000000014, 0.0003566670000000015, 0.000385514, 0.0003590000000000017, 0.00038588900000000037, 0.00035637499999999905, 0.00035705500000000195, 0.00038508300000000134, 0.00038604199999999964, 0.00035633300000000034, 0.0003855000000000004, 0.0003581669999999995, 0.0003581120000000007, 0.0003564159999999983, 0.00038498600000000036, 0.0003572220000000008, 0.0003851810000000018, 0.00038538899999999987, 0.00035709800000000014, 0.00038538899999999987, 0.00035858299999999566, 0.00035688799999999965, 0.00038517999999999886, 0.00038602700000000406, 0.00035655500000000145, 0.0003595419999999974, 0.0003855000000000039, 0.00035724999999999646, 0.00035943100000000033, 0.0003602090000000002, 0.00038625000000000465, 0.00038536100000000073, 0.00036048600000000014, 0.0003850840000000008, 0.00035624999999999546, 0.00035673600000000333, 0.0003609030000000027, 0.00038634700000000216, 0.0003574999999999967, 0.000385804999999996, 0.00038557000000000174, 0.0003571249999999998, 0.00038636100000000173, 0.00038525000000000365, 0.0003585140000000042, 0.0003581809999999991, 0.0003584030000000002, 0.0003568340000000003]</msg>
<status status="PASS" starttime="20201029 12:47:21.615" endtime="20201029 12:47:21.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.610" endtime="20201029 12:47:21.617"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:21.621" endtime="20201029 12:47:21.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.619" endtime="20201029 12:47:21.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.618" endtime="20201029 12:47:21.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.240" endtime="20201029 12:47:21.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.239" endtime="20201029 12:47:21.642"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.650" endtime="20201029 12:47:21.687"></status>
</kw>
<msg timestamp="20201029 12:47:21.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.649" endtime="20201029 12:47:21.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.689" endtime="20201029 12:47:21.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.691" endtime="20201029 12:47:21.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.646" endtime="20201029 12:47:21.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.644" endtime="20201029 12:47:21.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.700" endtime="20201029 12:47:21.985"></status>
</kw>
<msg timestamp="20201029 12:47:21.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023614833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.699" endtime="20201029 12:47:21.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023614833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.989" endtime="20201029 12:47:21.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.997" endtime="20201029 12:47:21.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.696" endtime="20201029 12:47:21.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.694" endtime="20201029 12:47:22.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.004" level="INFO">${RESULT} = [{'diff': 0.0003811799999999983}, {'diff': 0.0003573889999999996}, {'diff': 0.0003572639999999995}, {'diff': 0.0003573610000000005}, {'diff': 0.0003582640000000005}, {'diff': 0.00038562500000000055}, ...</msg>
<status status="PASS" starttime="20201029 12:47:22.001" endtime="20201029 12:47:22.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:22.008" level="INFO">${ACCURACY} = {'diff': [0.0003811799999999983, 0.0003573889999999996, 0.0003572639999999995, 0.0003573610000000005, 0.0003582640000000005, 0.00038562500000000055, 0.00038590299999999994, 0.0003862500000000012, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:22.005" endtime="20201029 12:47:22.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.012" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:47:22.011" endtime="20201029 12:47:22.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.015" level="INFO">VALUE: [0.0003811799999999983, 0.0003573889999999996, 0.0003572639999999995, 0.0003573610000000005, 0.0003582640000000005, 0.00038562500000000055, 0.00038590299999999994, 0.0003862500000000012, 0.0003852360000000006, 0.00036094499999999793, 0.00035761100000000073, 0.00035869499999999915, 0.00035975000000000243, 0.00035938899999999815, 0.0003592640000000015, 0.00035687499999999955, 0.00035647200000000004, 0.000356861, 0.0003863329999999991, 0.0003569579999999975, 0.0003562080000000002, 0.00036002799999999835, 0.00035698599999999664, 0.00035926399999999803, 0.0003854719999999978, 0.00035861100000000173, 0.00038512500000000005, 0.0003583470000000019, 0.0003577219999999978, 0.00036063899999999594, 0.0003563889999999986, 0.0003573480000000004, 0.00036024999999999946, 0.00035893099999999983, 0.0003852639999999963, 0.0003577089999999977, 0.0003580280000000033, 0.0003854860000000043, 0.00036074999999999996, 0.00035758400000000107, 0.00038651400000000447, 0.00035654200000000136, 0.0003857230000000045, 0.0003864309999999996, 0.0003567920000000016, 0.0003603749999999961, 0.00035633300000000034, 0.00038599999999999746, 0.0003576799999999991, 0.00036048600000000014]</msg>
<status status="PASS" starttime="20201029 12:47:22.013" endtime="20201029 12:47:22.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.008" endtime="20201029 12:47:22.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:22.025" endtime="20201029 12:47:22.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.023" endtime="20201029 12:47:22.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.022" endtime="20201029 12:47:22.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.643" endtime="20201029 12:47:22.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.642" endtime="20201029 12:47:22.045"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.054" endtime="20201029 12:47:22.089"></status>
</kw>
<msg timestamp="20201029 12:47:22.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.052" endtime="20201029 12:47:22.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.090" endtime="20201029 12:47:22.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.093" endtime="20201029 12:47:22.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.050" endtime="20201029 12:47:22.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.048" endtime="20201029 12:47:22.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.102" endtime="20201029 12:47:22.387"></status>
</kw>
<msg timestamp="20201029 12:47:22.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021495458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.100" endtime="20201029 12:47:22.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021495458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.391" endtime="20201029 12:47:22.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.399" endtime="20201029 12:47:22.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.098" endtime="20201029 12:47:22.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.096" endtime="20201029 12:47:22.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.405" level="INFO">${RESULT} = [{'diff': 0.00037255600000000305}, {'diff': 0.00036012499999999933}, {'diff': 0.0003598890000000021}, {'diff': 0.0003592640000000015}, {'diff': 0.00038580599999999896}, {'diff': 0.00035676400000000247...</msg>
<status status="PASS" starttime="20201029 12:47:22.402" endtime="20201029 12:47:22.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:22.410" level="INFO">${ACCURACY} = {'diff': [0.00037255600000000305, 0.00036012499999999933, 0.0003598890000000021, 0.0003592640000000015, 0.00038580599999999896, 0.00035676400000000247, 0.0003604999999999997, 0.0003589160000000008, 0....</msg>
<status status="PASS" starttime="20201029 12:47:22.406" endtime="20201029 12:47:22.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.415" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:47:22.414" endtime="20201029 12:47:22.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.417" level="INFO">VALUE: [0.00037255600000000305, 0.00036012499999999933, 0.0003598890000000021, 0.0003592640000000015, 0.00038580599999999896, 0.00035676400000000247, 0.0003604999999999997, 0.0003589160000000008, 0.000359764000000002, 0.0003571809999999981, 0.00038640300000000044, 0.0003855550000000027, 0.0003610000000000002, 0.0003860699999999988, 0.0003572769999999996, 0.000385820000000002, 0.00035687499999999955, 0.0003588329999999994, 0.0003864589999999987, 0.0003593190000000003, 0.00036129199999999917, 0.00035663900000000234, 0.0003862500000000012, 0.000358973000000002, 0.000385514, 0.00035706999999999753, 0.00035911100000000223, 0.0003569029999999987, 0.00035656999999999356, 0.0003589030000000007, 0.0003600419999999979, 0.0003608470000000044, 0.00035948599999999914, 0.00036063899999999594, 0.0003570280000000023, 0.00035912499999999486, 0.0003859299999999996, 0.0003605969999999972, 0.0003853200000000015, 0.0003608469999999975, 0.00038666700000000026, 0.00035644500000000384, 0.0003584030000000002, 0.00035843099999999933, 0.0003570280000000023, 0.00035787500000000055, 0.00038523599999999714, 0.0003604999999999997, 0.0003571249999999998, 0.00035737500000000005]</msg>
<status status="PASS" starttime="20201029 12:47:22.416" endtime="20201029 12:47:22.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.411" endtime="20201029 12:47:22.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:22.422" endtime="20201029 12:47:22.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.421" endtime="20201029 12:47:22.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.419" endtime="20201029 12:47:22.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.046" endtime="20201029 12:47:22.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.046" endtime="20201029 12:47:22.443"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.453" endtime="20201029 12:47:22.491"></status>
</kw>
<msg timestamp="20201029 12:47:22.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.451" endtime="20201029 12:47:22.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.492" endtime="20201029 12:47:22.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.495" endtime="20201029 12:47:22.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.448" endtime="20201029 12:47:22.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.446" endtime="20201029 12:47:22.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.504" endtime="20201029 12:47:22.790"></status>
</kw>
<msg timestamp="20201029 12:47:22.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025686028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026071764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.502" endtime="20201029 12:47:22.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025686028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026071764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.794" endtime="20201029 12:47:22.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.802" endtime="20201029 12:47:22.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.499" endtime="20201029 12:47:22.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.498" endtime="20201029 12:47:22.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.808" level="INFO">${RESULT} = [{'diff': 0.0003857360000000011}, {'diff': 0.0003564999999999992}, {'diff': 0.00035825000000000093}, {'diff': 0.00035623600000000283}, {'diff': 0.00038562500000000055}, {'diff': 0.00035847200000000204...</msg>
<status status="PASS" starttime="20201029 12:47:22.805" endtime="20201029 12:47:22.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:22.812" level="INFO">${ACCURACY} = {'diff': [0.0003857360000000011, 0.0003564999999999992, 0.00035825000000000093, 0.00035623600000000283, 0.00038562500000000055, 0.00035847200000000204, 0.00038512500000000005, 0.00036097300000000054, ...</msg>
<status status="PASS" starttime="20201029 12:47:22.809" endtime="20201029 12:47:22.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.817" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:47:22.816" endtime="20201029 12:47:22.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.819" level="INFO">VALUE: [0.0003857360000000011, 0.0003564999999999992, 0.00035825000000000093, 0.00035623600000000283, 0.00038562500000000055, 0.00035847200000000204, 0.00038512500000000005, 0.00036097300000000054, 0.0003583470000000019, 0.00035665200000000244, 0.00035917999999999714, 0.00035651399999999875, 0.0003607909999999992, 0.00038540299999999944, 0.0003563060000000007, 0.00035941700000000076, 0.0003575140000000032, 0.0003577229999999973, 0.00038609699999999497, 0.00035815200000000047, 0.0003567089999999967, 0.0003598190000000043, 0.0003577370000000038, 0.00038609699999999497, 0.00036074999999999996, 0.0003853330000000016, 0.00035866600000000054, 0.000385319000000002, 0.0003859719999999983, 0.0003864719999999988, 0.00035677800000000204, 0.000356457999999997, 0.0003582500000000044, 0.0003852499999999967, 0.0003600559999999975, 0.000358667, 0.0003607909999999992, 0.00036069399999999474, 0.00036005500000000495, 0.0003569730000000035, 0.0003583610000000015, 0.0003565269999999954, 0.0003861530000000002, 0.00035991700000000126, 0.0003856659999999998, 0.00038538899999999987, 0.00036044400000000143, 0.0003584999999999977, 0.000385305999999995, 0.0003571389999999994]</msg>
<status status="PASS" starttime="20201029 12:47:22.818" endtime="20201029 12:47:22.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.813" endtime="20201029 12:47:22.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:22.824" endtime="20201029 12:47:22.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.823" endtime="20201029 12:47:22.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.821" endtime="20201029 12:47:22.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.444" endtime="20201029 12:47:22.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.444" endtime="20201029 12:47:22.845"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.853" endtime="20201029 12:47:22.893"></status>
</kw>
<msg timestamp="20201029 12:47:22.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.852" endtime="20201029 12:47:22.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.895" endtime="20201029 12:47:22.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.897" endtime="20201029 12:47:22.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.849" endtime="20201029 12:47:22.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.847" endtime="20201029 12:47:22.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.906" endtime="20201029 12:47:23.193"></status>
</kw>
<msg timestamp="20201029 12:47:23.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025799792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026156014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.905" endtime="20201029 12:47:23.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025799792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026156014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.197" endtime="20201029 12:47:23.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.205" endtime="20201029 12:47:23.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.902" endtime="20201029 12:47:23.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.901" endtime="20201029 12:47:23.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:23.211" level="INFO">${RESULT} = [{'diff': 0.00035622200000000326}, {'diff': 0.00035679100000000213}, {'diff': 0.000358667}, {'diff': 0.00035870799999999925}, {'diff': 0.00036027800000000207}, {'diff': 0.00035844399999999943}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:47:23.208" endtime="20201029 12:47:23.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:23.215" level="INFO">${ACCURACY} = {'diff': [0.00035622200000000326, 0.00035679100000000213, 0.000358667, 0.00035870799999999925, 0.00036027800000000207, 0.00035844399999999943, 0.00035769400000000215, 0.0003864589999999987, 0.00036009...</msg>
<status status="PASS" starttime="20201029 12:47:23.212" endtime="20201029 12:47:23.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.220" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:47:23.219" endtime="20201029 12:47:23.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.222" level="INFO">VALUE: [0.00035622200000000326, 0.00035679100000000213, 0.000358667, 0.00035870799999999925, 0.00036027800000000207, 0.00035844399999999943, 0.00035769400000000215, 0.0003864589999999987, 0.0003600970000000002, 0.00038604199999999964, 0.0003581939999999992, 0.0003594020000000017, 0.00035905599999999996, 0.0003607360000000004, 0.0003596390000000019, 0.00036036099999999655, 0.0003856939999999989, 0.00035654200000000136, 0.0003850000000000034, 0.0003854719999999978, 0.0003589030000000007, 0.0003573190000000018, 0.00035886099999999505, 0.00035958299999999666, 0.00038599999999999746, 0.0003598889999999952, 0.0003598190000000043, 0.00038613800000000115, 0.00038601400000000397, 0.0003565140000000022, 0.0003859309999999991, 0.000356958999999997, 0.0003853049999999955, 0.00035861100000000173, 0.0003599999999999992, 0.0003607769999999996, 0.0003587359999999984, 0.0003854439999999987, 0.00036015300000000194, 0.0003583610000000015, 0.00035943000000000086, 0.000360959000000001, 0.0003600689999999976, 0.0003586800000000001, 0.00035845800000000594, 0.00035908399999999563, 0.0003591250000000018, 0.00036108299999999816, 0.0003581390000000004, 0.0003577229999999973]</msg>
<status status="PASS" starttime="20201029 12:47:23.221" endtime="20201029 12:47:23.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.216" endtime="20201029 12:47:23.224"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:23.228" endtime="20201029 12:47:23.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.226" endtime="20201029 12:47:23.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.225" endtime="20201029 12:47:23.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.846" endtime="20201029 12:47:23.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.845" endtime="20201029 12:47:23.249"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.257" endtime="20201029 12:47:23.299"></status>
</kw>
<msg timestamp="20201029 12:47:23.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.256" endtime="20201029 12:47:23.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.301" endtime="20201029 12:47:23.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.303" endtime="20201029 12:47:23.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.253" endtime="20201029 12:47:23.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.251" endtime="20201029 12:47:23.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.312" endtime="20201029 12:47:23.611"></status>
</kw>
<msg timestamp="20201029 12:47:23.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023896458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024259861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.311" endtime="20201029 12:47:23.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023896458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024259861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.620" endtime="20201029 12:47:23.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.635" endtime="20201029 12:47:23.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.308" endtime="20201029 12:47:23.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.306" endtime="20201029 12:47:23.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:23.642" level="INFO">${RESULT} = [{'diff': 0.0003634030000000017}, {'diff': 0.00035905599999999996}, {'diff': 0.0003858750000000008}, {'diff': 0.00035905599999999996}, {'diff': 0.00036086099999999705}, {'diff': 0.0003597909999999982}...</msg>
<status status="PASS" starttime="20201029 12:47:23.639" endtime="20201029 12:47:23.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:23.647" level="INFO">${ACCURACY} = {'diff': [0.0003634030000000017, 0.00035905599999999996, 0.0003858750000000008, 0.00035905599999999996, 0.00036086099999999705, 0.0003597909999999982, 0.0003570279999999988, 0.0003861939999999994, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:23.643" endtime="20201029 12:47:23.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.651" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:47:23.650" endtime="20201029 12:47:23.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.654" level="INFO">VALUE: [0.0003634030000000017, 0.00035905599999999996, 0.0003858750000000008, 0.00035905599999999996, 0.00036086099999999705, 0.0003597909999999982, 0.0003570279999999988, 0.0003861939999999994, 0.00035825000000000093, 0.0003849720000000008, 0.0003582640000000005, 0.0003861530000000002, 0.00035677800000000204, 0.00035677800000000204, 0.0003594159999999978, 0.0003855130000000005, 0.00038604199999999964, 0.0003591390000000014, 0.00035834699999999844, 0.0003583329999999989, 0.00038590200000000047, 0.00035733300000000134, 0.0003575139999999963, 0.0003854719999999978, 0.00038584700000000166, 0.0003595689999999971, 0.00036016600000000204, 0.0003573610000000005, 0.0003591800000000006, 0.0003573199999999943, 0.0003606800000000021, 0.00035782000000000175, 0.0003564449999999969, 0.00035797299999999754, 0.00036074999999999996, 0.0003579999999999972, 0.0003863750000000013, 0.0003862639999999973, 0.00036111100000000423, 0.0003569159999999988, 0.0003579029999999997, 0.0003567920000000016, 0.00035932000000000325, 0.0003578470000000014, 0.0003864589999999987, 0.00038556900000000227, 0.00038569500000000534, 0.000385416999999999, 0.0003582080000000057, 0.00035976399999999853]</msg>
<status status="PASS" starttime="20201029 12:47:23.652" endtime="20201029 12:47:23.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.648" endtime="20201029 12:47:23.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:23.659" endtime="20201029 12:47:23.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.657" endtime="20201029 12:47:23.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.656" endtime="20201029 12:47:23.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.250" endtime="20201029 12:47:23.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.249" endtime="20201029 12:47:23.679"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.688" endtime="20201029 12:47:23.722"></status>
</kw>
<msg timestamp="20201029 12:47:23.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.686" endtime="20201029 12:47:23.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.723" endtime="20201029 12:47:23.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.726" endtime="20201029 12:47:23.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.684" endtime="20201029 12:47:23.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.682" endtime="20201029 12:47:23.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.735" endtime="20201029 12:47:24.021"></status>
</kw>
<msg timestamp="20201029 12:47:24.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020131556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020518028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.733" endtime="20201029 12:47:24.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020131556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020518028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.025" endtime="20201029 12:47:24.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.033" endtime="20201029 12:47:24.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.731" endtime="20201029 12:47:24.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.729" endtime="20201029 12:47:24.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.040" level="INFO">${RESULT} = [{'diff': 0.0003864720000000023}, {'diff': 0.0003609169999999988}, {'diff': 0.00035993100000000083}, {'diff': 0.00035947199999999957}, {'diff': 0.0003585000000000012}, {'diff': 0.0003607360000000004},...</msg>
<status status="PASS" starttime="20201029 12:47:24.037" endtime="20201029 12:47:24.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:24.044" level="INFO">${ACCURACY} = {'diff': [0.0003864720000000023, 0.0003609169999999988, 0.00035993100000000083, 0.00035947199999999957, 0.0003585000000000012, 0.0003607360000000004, 0.00035684699999999694, 0.0003595000000000022, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:24.041" endtime="20201029 12:47:24.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.048" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:47:24.047" endtime="20201029 12:47:24.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.051" level="INFO">VALUE: [0.0003864720000000023, 0.0003609169999999988, 0.00035993100000000083, 0.00035947199999999957, 0.0003585000000000012, 0.0003607360000000004, 0.00035684699999999694, 0.0003595000000000022, 0.0003608329999999979, 0.00035791699999999926, 0.00035729199999999864, 0.00038541599999999954, 0.0003864580000000027, 0.00035987500000000255, 0.00035647200000000004, 0.0003584870000000011, 0.0003864450000000026, 0.0003610689999999986, 0.00038637499999999783, 0.00036007000000000053, 0.0003563750000000025, 0.00038512500000000005, 0.00035952700000000185, 0.0003592779999999976, 0.0003573610000000005, 0.00036012499999999933, 0.0003588609999999985, 0.0003565830000000006, 0.00035775000000000043, 0.0003853610000000042, 0.00035908400000000257, 0.0003581250000000008, 0.0003576809999999986, 0.0003863060000000029, 0.00038611099999999454, 0.000357569000000002, 0.00035866600000000054, 0.00038651400000000447, 0.00035738800000000015, 0.0003863339999999951, 0.000385722000000005, 0.00038497300000000373, 0.00038617999999999986, 0.00036109700000000466, 0.0003607360000000004, 0.00035650000000000265, 0.0003597920000000046, 0.0003587089999999987, 0.00035976399999999853, 0.00036109700000000466]</msg>
<status status="PASS" starttime="20201029 12:47:24.049" endtime="20201029 12:47:24.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.045" endtime="20201029 12:47:24.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.056" endtime="20201029 12:47:24.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.054" endtime="20201029 12:47:24.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.053" endtime="20201029 12:47:24.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.680" endtime="20201029 12:47:24.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.680" endtime="20201029 12:47:24.076"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.085" endtime="20201029 12:47:24.123"></status>
</kw>
<msg timestamp="20201029 12:47:24.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.083" endtime="20201029 12:47:24.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.125" endtime="20201029 12:47:24.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.127" endtime="20201029 12:47:24.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.081" endtime="20201029 12:47:24.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.079" endtime="20201029 12:47:24.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.136" endtime="20201029 12:47:24.439"></status>
</kw>
<msg timestamp="20201029 12:47:24.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025085236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025462514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.135" endtime="20201029 12:47:24.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025085236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025462514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.444" endtime="20201029 12:47:24.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.452" endtime="20201029 12:47:24.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.132" endtime="20201029 12:47:24.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.130" endtime="20201029 12:47:24.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.458" level="INFO">${RESULT} = [{'diff': 0.00037727799999999825}, {'diff': 0.00035961099999999926}, {'diff': 0.0003611389999999999}, {'diff': 0.00035825000000000093}, {'diff': 0.00035984699999999994}, {'diff': 0.0003601940000000012...</msg>
<status status="PASS" starttime="20201029 12:47:24.455" endtime="20201029 12:47:24.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:24.462" level="INFO">${ACCURACY} = {'diff': [0.00037727799999999825, 0.00035961099999999926, 0.0003611389999999999, 0.00035825000000000093, 0.00035984699999999994, 0.0003601940000000012, 0.00036086099999999705, 0.0003863469999999987, 0...</msg>
<status status="PASS" starttime="20201029 12:47:24.459" endtime="20201029 12:47:24.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.467" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:47:24.466" endtime="20201029 12:47:24.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.470" level="INFO">VALUE: [0.00037727799999999825, 0.00035961099999999926, 0.0003611389999999999, 0.00035825000000000093, 0.00035984699999999994, 0.0003601940000000012, 0.00036086099999999705, 0.0003863469999999987, 0.00035711100000000023, 0.00035745900000000094, 0.00035815299999999994, 0.00036093000000000236, 0.0003851800000000023, 0.0003611939999999987, 0.0003580829999999986, 0.0003579159999999998, 0.00036115300000000294, 0.00035674999999999596, 0.000385319000000002, 0.0003609030000000027, 0.0003592089999999992, 0.000356666999999998, 0.0003602090000000002, 0.0003610000000000002, 0.00038599999999999746, 0.00038566699999999926, 0.00035979199999999767, 0.0003601940000000012, 0.0003580280000000033, 0.00038486100000000023, 0.00035722200000000426, 0.0003858060000000024, 0.0003862360000000051, 0.00035952799999999785, 0.000359070000000003, 0.0003609580000000015, 0.00038612500000000105, 0.0003563190000000008, 0.00035894399999999993, 0.00035930499999999727, 0.0003600139999999988, 0.00035961100000000273, 0.00035744399999999843, 0.0003576389999999999, 0.00035916600000000104, 0.00035669499999999715, 0.00035819499999999865, 0.0003861110000000015, 0.0003573889999999996, 0.00035709700000000066]</msg>
<status status="PASS" starttime="20201029 12:47:24.468" endtime="20201029 12:47:24.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.463" endtime="20201029 12:47:24.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.476" endtime="20201029 12:47:24.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.474" endtime="20201029 12:47:24.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.473" endtime="20201029 12:47:24.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.077" endtime="20201029 12:47:24.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.077" endtime="20201029 12:47:24.497"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.505" endtime="20201029 12:47:24.542"></status>
</kw>
<msg timestamp="20201029 12:47:24.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.504" endtime="20201029 12:47:24.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.543" endtime="20201029 12:47:24.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.546" endtime="20201029 12:47:24.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.501" endtime="20201029 12:47:24.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.499" endtime="20201029 12:47:24.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.555" endtime="20201029 12:47:24.841"></status>
</kw>
<msg timestamp="20201029 12:47:24.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022137958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.553" endtime="20201029 12:47:24.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022137958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.845" endtime="20201029 12:47:24.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.853" endtime="20201029 12:47:24.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.550" endtime="20201029 12:47:24.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.549" endtime="20201029 12:47:24.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.860" level="INFO">${RESULT} = [{'diff': 0.00037422200000000044}, {'diff': 0.00036011099999999976}, {'diff': 0.00038641600000000054}, {'diff': 0.000356861}, {'diff': 0.0003579029999999997}, {'diff': 0.0003856529999999997}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:47:24.857" endtime="20201029 12:47:24.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:24.867" level="INFO">${ACCURACY} = {'diff': [0.00037422200000000044, 0.00036011099999999976, 0.00038641600000000054, 0.000356861, 0.0003579029999999997, 0.0003856529999999997, 0.00035944399999999696, 0.00035627799999999807, 0.000356874...</msg>
<status status="PASS" starttime="20201029 12:47:24.861" endtime="20201029 12:47:24.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.871" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:47:24.870" endtime="20201029 12:47:24.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.874" level="INFO">VALUE: [0.00037422200000000044, 0.00036011099999999976, 0.00038641600000000054, 0.000356861, 0.0003579029999999997, 0.0003856529999999997, 0.00035944399999999696, 0.00035627799999999807, 0.00035687499999999955, 0.00035627800000000154, 0.0003589999999999982, 0.00038638900000000087, 0.00035930500000000073, 0.00035751399999999975, 0.0003584310000000028, 0.0003859580000000022, 0.00035682000000000075, 0.0003595830000000001, 0.0003613750000000006, 0.00035856899999999955, 0.0003584860000000016, 0.00036112500000000033, 0.0003857919999999994, 0.00035941700000000076, 0.0003612360000000009, 0.00038552700000000356, 0.0003587089999999987, 0.00038604199999999617, 0.00035829199999999617, 0.000359346999999996, 0.0003609169999999953, 0.0003571940000000051, 0.00035765299999999944, 0.0003867910000000044, 0.00038645799999999925, 0.0003604030000000022, 0.0003867770000000048, 0.00035683300000000084, 0.0003860420000000031, 0.00038637499999999436, 0.000360667000000002, 0.0003596940000000007, 0.0003610139999999998, 0.0003860269999999971, 0.0003591250000000018, 0.0003584999999999977, 0.00038608300000000234, 0.00036136099999999755, 0.0003589579999999995, 0.00036017999999999467]</msg>
<status status="PASS" starttime="20201029 12:47:24.873" endtime="20201029 12:47:24.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.868" endtime="20201029 12:47:24.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.879" endtime="20201029 12:47:24.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.877" endtime="20201029 12:47:24.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.876" endtime="20201029 12:47:24.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.498" endtime="20201029 12:47:24.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.497" endtime="20201029 12:47:24.900"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.908" endtime="20201029 12:47:24.943"></status>
</kw>
<msg timestamp="20201029 12:47:24.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.907" endtime="20201029 12:47:24.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.944" endtime="20201029 12:47:24.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.947" endtime="20201029 12:47:24.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.904" endtime="20201029 12:47:24.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.902" endtime="20201029 12:47:24.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.956" endtime="20201029 12:47:25.243"></status>
</kw>
<msg timestamp="20201029 12:47:25.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020854611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021214736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.954" endtime="20201029 12:47:25.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020854611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021214736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.247" endtime="20201029 12:47:25.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.255" endtime="20201029 12:47:25.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.952" endtime="20201029 12:47:25.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.950" endtime="20201029 12:47:25.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:25.261" level="INFO">${RESULT} = [{'diff': 0.0003601250000000028}, {'diff': 0.0003857919999999994}, {'diff': 0.00036076399999999953}, {'diff': 0.0003866530000000007}, {'diff': 0.0003565279999999983}, {'diff': 0.0003591389999999979}, ...</msg>
<status status="PASS" starttime="20201029 12:47:25.258" endtime="20201029 12:47:25.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:25.265" level="INFO">${ACCURACY} = {'diff': [0.0003601250000000028, 0.0003857919999999994, 0.00036076399999999953, 0.0003866530000000007, 0.0003565279999999983, 0.0003591389999999979, 0.00038534700000000116, 0.0003587090000000022, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:25.262" endtime="20201029 12:47:25.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.270" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:47:25.269" endtime="20201029 12:47:25.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.272" level="INFO">VALUE: [0.0003601250000000028, 0.0003857919999999994, 0.00036076399999999953, 0.0003866530000000007, 0.0003565279999999983, 0.0003591389999999979, 0.00038534700000000116, 0.0003587090000000022, 0.0003566249999999993, 0.0003856390000000001, 0.0003599580000000005, 0.0003859720000000018, 0.0003589579999999995, 0.00036098600000000064, 0.0003851519999999997, 0.00035851400000000075, 0.00035830499999999973, 0.0003591670000000005, 0.0003854719999999978, 0.000356763999999999, 0.00036069500000000115, 0.00035977800000000157, 0.00035832000000000225, 0.00038619500000000237, 0.0003569310000000013, 0.0003864309999999996, 0.00038534700000000116, 0.00035773600000000086, 0.00035700000000000315, 0.0003852640000000032, 0.00035677800000000204, 0.0003610139999999998, 0.00035874999999999796, 0.0003588190000000033, 0.0003573610000000005, 0.00036080499999999877, 0.00038588900000000037, 0.00038529099999999594, 0.0003592219999999993, 0.00038597200000000526, 0.0003610000000000002, 0.00035829199999999617, 0.000385416999999999, 0.00035777800000000304, 0.00035858399999999513, 0.0003565549999999945, 0.00035829199999999617, 0.0003578050000000027, 0.00035759700000000116, 0.000359555999999997]</msg>
<status status="PASS" starttime="20201029 12:47:25.271" endtime="20201029 12:47:25.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.266" endtime="20201029 12:47:25.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:25.277" endtime="20201029 12:47:25.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.276" endtime="20201029 12:47:25.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.275" endtime="20201029 12:47:25.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.900" endtime="20201029 12:47:25.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.900" endtime="20201029 12:47:25.298"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.307" endtime="20201029 12:47:25.344"></status>
</kw>
<msg timestamp="20201029 12:47:25.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.305" endtime="20201029 12:47:25.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.346" endtime="20201029 12:47:25.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.348" endtime="20201029 12:47:25.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.302" endtime="20201029 12:47:25.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.300" endtime="20201029 12:47:25.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.357" endtime="20201029 12:47:25.644"></status>
</kw>
<msg timestamp="20201029 12:47:25.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024370556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024736583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.356" endtime="20201029 12:47:25.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024370556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024736583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.648" endtime="20201029 12:47:25.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.656" endtime="20201029 12:47:25.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.353" endtime="20201029 12:47:25.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.352" endtime="20201029 12:47:25.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:25.662" level="INFO">${RESULT} = [{'diff': 0.00036602699999999794}, {'diff': 0.0003592640000000015}, {'diff': 0.0003594030000000012}, {'diff': 0.00035970800000000025}, {'diff': 0.00035952799999999785}, {'diff': 0.0003598330000000004}...</msg>
<status status="PASS" starttime="20201029 12:47:25.659" endtime="20201029 12:47:25.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:25.666" level="INFO">${ACCURACY} = {'diff': [0.00036602699999999794, 0.0003592640000000015, 0.0003594030000000012, 0.00035970800000000025, 0.00035952799999999785, 0.0003598330000000004, 0.0003565270000000023, 0.0003598609999999995, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:25.663" endtime="20201029 12:47:25.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.670" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:47:25.669" endtime="20201029 12:47:25.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.673" level="INFO">VALUE: [0.00036602699999999794, 0.0003592640000000015, 0.0003594030000000012, 0.00035970800000000025, 0.00035952799999999785, 0.0003598330000000004, 0.0003565270000000023, 0.0003598609999999995, 0.00035876299999999806, 0.0003604450000000009, 0.0003561669999999975, 0.00038612500000000105, 0.00038569500000000187, 0.00035736199999999996, 0.0003598200000000003, 0.00038586099999999776, 0.0003856109999999975, 0.0003575839999999976, 0.0003573060000000017, 0.0003859859999999979, 0.00035879199999999667, 0.00035872200000000576, 0.0003610139999999998, 0.0003861390000000006, 0.0003855970000000014, 0.00035898599999999864, 0.00035955600000000393, 0.000385319000000002, 0.0003593889999999947, 0.0003607090000000007, 0.00035600000000000215, 0.00035615299999999794, 0.00038523599999999714, 0.0003601940000000012, 0.00036076399999999953, 0.00035897299999999854, 0.00035679199999999467, 0.00035809700000000166, 0.0003574860000000041, 0.00035795800000000544, 0.0003564720000000035, 0.00035627700000000206, 0.00038501400000000296, 0.0003584449999999989, 0.0003576799999999991, 0.0003570140000000027, 0.0003576250000000003, 0.00036093100000000183, 0.00036024999999999946, 0.00035734799999999345]</msg>
<status status="PASS" starttime="20201029 12:47:25.671" endtime="20201029 12:47:25.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.667" endtime="20201029 12:47:25.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:25.679" endtime="20201029 12:47:25.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.677" endtime="20201029 12:47:25.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.676" endtime="20201029 12:47:25.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.299" endtime="20201029 12:47:25.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.298" endtime="20201029 12:47:25.699"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.708" endtime="20201029 12:47:25.747"></status>
</kw>
<msg timestamp="20201029 12:47:25.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.706" endtime="20201029 12:47:25.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.749" endtime="20201029 12:47:25.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.751" endtime="20201029 12:47:25.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.704" endtime="20201029 12:47:25.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.702" endtime="20201029 12:47:25.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.760" endtime="20201029 12:47:26.046"></status>
</kw>
<msg timestamp="20201029 12:47:26.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024949097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025317417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.759" endtime="20201029 12:47:26.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024949097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025317417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.050" endtime="20201029 12:47:26.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.058" endtime="20201029 12:47:26.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.756" endtime="20201029 12:47:26.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.755" endtime="20201029 12:47:26.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.065" level="INFO">${RESULT} = [{'diff': 0.00036831999999999837}, {'diff': 0.00036112499999999687}, {'diff': 0.00035765299999999944}, {'diff': 0.0003575829999999981}, {'diff': 0.0003593890000000016}, {'diff': 0.0003568889999999991}...</msg>
<status status="PASS" starttime="20201029 12:47:26.061" endtime="20201029 12:47:26.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:26.069" level="INFO">${ACCURACY} = {'diff': [0.00036831999999999837, 0.00036112499999999687, 0.00035765299999999944, 0.0003575829999999981, 0.0003593890000000016, 0.0003568889999999991, 0.00038630599999999946, 0.0003598609999999995, 0....</msg>
<status status="PASS" starttime="20201029 12:47:26.066" endtime="20201029 12:47:26.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.074" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:47:26.073" endtime="20201029 12:47:26.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.076" level="INFO">VALUE: [0.00036831999999999837, 0.00036112499999999687, 0.00035765299999999944, 0.0003575829999999981, 0.0003593890000000016, 0.0003568889999999991, 0.00038630599999999946, 0.0003598609999999995, 0.00038680599999999996, 0.0003596389999999984, 0.0003601670000000015, 0.00036052799999999885, 0.0003574029999999992, 0.0003572639999999995, 0.0003598330000000004, 0.00035661099999999973, 0.0003584030000000002, 0.0003581669999999995, 0.00035802799999999635, 0.00036020800000000075, 0.0003854580000000052, 0.0003606250000000033, 0.0003861110000000015, 0.00035690300000000563, 0.00035718000000000555, 0.000385820000000002, 0.0003603470000000039, 0.00035861100000000173, 0.0003859859999999979, 0.000357972000000005, 0.00038636100000000173, 0.00036125000000000046, 0.0003598619999999955, 0.000361054999999999, 0.0003862780000000038, 0.0003584300000000068, 0.0003576250000000003, 0.0003588480000000019, 0.0003608890000000031, 0.0003864859999999984, 0.0003575549999999955, 0.0003566799999999981, 0.0003580830000000021, 0.0003595689999999971, 0.0003587779999999971, 0.00035758400000000107, 0.000358457999999999, 0.00036119399999999524, 0.00036009700000000366, 0.000357070000000001]</msg>
<status status="PASS" starttime="20201029 12:47:26.075" endtime="20201029 12:47:26.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.070" endtime="20201029 12:47:26.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.081" endtime="20201029 12:47:26.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.080" endtime="20201029 12:47:26.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.079" endtime="20201029 12:47:26.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.700" endtime="20201029 12:47:26.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.700" endtime="20201029 12:47:26.102"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.111" endtime="20201029 12:47:26.149"></status>
</kw>
<msg timestamp="20201029 12:47:26.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.109" endtime="20201029 12:47:26.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.151" endtime="20201029 12:47:26.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.153" endtime="20201029 12:47:26.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.107" endtime="20201029 12:47:26.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.105" endtime="20201029 12:47:26.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.162" endtime="20201029 12:47:26.448"></status>
</kw>
<msg timestamp="20201029 12:47:26.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023942056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024322444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.160" endtime="20201029 12:47:26.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023942056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024322444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.452" endtime="20201029 12:47:26.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.460" endtime="20201029 12:47:26.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.158" endtime="20201029 12:47:26.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.156" endtime="20201029 12:47:26.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.467" level="INFO">${RESULT} = [{'diff': 0.00038038799999999887}, {'diff': 0.0003858190000000025}, {'diff': 0.000357554999999999}, {'diff': 0.000357457999999998}, {'diff': 0.00035683300000000084}, {'diff': 0.0003609580000000015}, {...</msg>
<status status="PASS" starttime="20201029 12:47:26.464" endtime="20201029 12:47:26.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:26.471" level="INFO">${ACCURACY} = {'diff': [0.00038038799999999887, 0.0003858190000000025, 0.000357554999999999, 0.000357457999999998, 0.00035683300000000084, 0.0003609580000000015, 0.00035841699999999976, 0.000386514000000001, 0.0003...</msg>
<status status="PASS" starttime="20201029 12:47:26.468" endtime="20201029 12:47:26.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.475" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:47:26.474" endtime="20201029 12:47:26.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.478" level="INFO">VALUE: [0.00038038799999999887, 0.0003858190000000025, 0.000357554999999999, 0.000357457999999998, 0.00035683300000000084, 0.0003609580000000015, 0.00035841699999999976, 0.000386514000000001, 0.00035724999999999993, 0.00035870799999999925, 0.0003860840000000018, 0.0003604029999999987, 0.00038544499999999815, 0.0003605419999999984, 0.0003594299999999974, 0.00035923600000000236, 0.00038634700000000216, 0.00035957000000000003, 0.00035811100000000123, 0.00035866600000000054, 0.00036005500000000495, 0.00035676399999999553, 0.00035765299999999944, 0.0003859169999999995, 0.00035850000000000465, 0.00035718000000000555, 0.00035636199999999896, 0.00035950000000000565, 0.00038641600000000054, 0.0003854299999999991, 0.0003611940000000022, 0.00038527799999999585, 0.0003582089999999982, 0.00038525000000000365, 0.00036033300000000434, 0.00036041599999999535, 0.0003601810000000011, 0.00038518099999999833, 0.0003607920000000056, 0.0003563050000000012, 0.00035911100000000223, 0.0003853750000000003, 0.0003856390000000001, 0.00035880599999999624, 0.0003577219999999978, 0.00036040299999999525, 0.0003595689999999971, 0.0003592080000000067, 0.00036013899999999543, 0.0003865699999999958]</msg>
<status status="PASS" starttime="20201029 12:47:26.476" endtime="20201029 12:47:26.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.472" endtime="20201029 12:47:26.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.483" endtime="20201029 12:47:26.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.481" endtime="20201029 12:47:26.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.480" endtime="20201029 12:47:26.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.103" endtime="20201029 12:47:26.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.103" endtime="20201029 12:47:26.504"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.513" endtime="20201029 12:47:26.551"></status>
</kw>
<msg timestamp="20201029 12:47:26.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.511" endtime="20201029 12:47:26.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.552" endtime="20201029 12:47:26.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.555" endtime="20201029 12:47:26.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.509" endtime="20201029 12:47:26.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.506" endtime="20201029 12:47:26.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.564" endtime="20201029 12:47:26.850"></status>
</kw>
<msg timestamp="20201029 12:47:26.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024716014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025076375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.562" endtime="20201029 12:47:26.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024716014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025076375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.854" endtime="20201029 12:47:26.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.862" endtime="20201029 12:47:26.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.559" endtime="20201029 12:47:26.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.558" endtime="20201029 12:47:26.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.869" level="INFO">${RESULT} = [{'diff': 0.000360361}, {'diff': 0.0003855559999999987}, {'diff': 0.00036008299999999716}, {'diff': 0.0003595969999999997}, {'diff': 0.0003595969999999997}, {'diff': 0.000357666999999999}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 12:47:26.866" endtime="20201029 12:47:26.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:26.873" level="INFO">${ACCURACY} = {'diff': [0.000360361, 0.0003855559999999987, 0.00036008299999999716, 0.0003595969999999997, 0.0003595969999999997, 0.000357666999999999, 0.00036066699999999854, 0.0003582359999999979, 0.0003572220000...</msg>
<status status="PASS" starttime="20201029 12:47:26.870" endtime="20201029 12:47:26.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.877" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:47:26.876" endtime="20201029 12:47:26.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.880" level="INFO">VALUE: [0.000360361, 0.0003855559999999987, 0.00036008299999999716, 0.0003595969999999997, 0.0003595969999999997, 0.000357666999999999, 0.00036066699999999854, 0.0003582359999999979, 0.0003572220000000008, 0.0003609450000000014, 0.00036048600000000014, 0.00035943100000000033, 0.00035997200000000007, 0.00036044499999999743, 0.00035988899999999865, 0.0003564999999999992, 0.0003573480000000004, 0.00035781899999999534, 0.0003593329999999964, 0.00036005500000000495, 0.0003860000000000044, 0.0003855699999999948, 0.00035673600000000333, 0.0003576389999999999, 0.0003607779999999991, 0.0003604020000000027, 0.0003581109999999943, 0.00035697199999999707, 0.00038616699999999976, 0.00036065300000000244, 0.0003590280000000043, 0.0003595419999999974, 0.0003569029999999987, 0.00035804200000000286, 0.0003861530000000002, 0.0003581950000000056, 0.00035737500000000005, 0.0003603890000000026, 0.00035677800000000204, 0.00038616699999999976, 0.00036080499999999877, 0.0003597920000000046, 0.0003564170000000047, 0.0003605830000000046, 0.00038502800000000253, 0.0003854309999999986, 0.00038629099999999694, 0.0003598060000000042, 0.00036091700000000226, 0.00038590299999999994]</msg>
<status status="PASS" starttime="20201029 12:47:26.879" endtime="20201029 12:47:26.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.874" endtime="20201029 12:47:26.882"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.886" endtime="20201029 12:47:26.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.884" endtime="20201029 12:47:26.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.883" endtime="20201029 12:47:26.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.505" endtime="20201029 12:47:26.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.504" endtime="20201029 12:47:26.906"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.915" endtime="20201029 12:47:26.952"></status>
</kw>
<msg timestamp="20201029 12:47:26.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.913" endtime="20201029 12:47:26.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.954" endtime="20201029 12:47:26.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.956" endtime="20201029 12:47:26.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.911" endtime="20201029 12:47:26.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.909" endtime="20201029 12:47:26.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.965" endtime="20201029 12:47:27.250"></status>
</kw>
<msg timestamp="20201029 12:47:27.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023615417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023975514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.964" endtime="20201029 12:47:27.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023615417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023975514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.254" endtime="20201029 12:47:27.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.262" endtime="20201029 12:47:27.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.961" endtime="20201029 12:47:27.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.959" endtime="20201029 12:47:27.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.269" level="INFO">${RESULT} = [{'diff': 0.0003600970000000002}, {'diff': 0.00038554099999999966}, {'diff': 0.0003569869999999996}, {'diff': 0.0003580279999999998}, {'diff': 0.0003575000000000002}, {'diff': 0.00035948599999999914},...</msg>
<status status="PASS" starttime="20201029 12:47:27.266" endtime="20201029 12:47:27.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:27.275" level="INFO">${ACCURACY} = {'diff': [0.0003600970000000002, 0.00038554099999999966, 0.0003569869999999996, 0.0003580279999999998, 0.0003575000000000002, 0.00035948599999999914, 0.0003849590000000007, 0.0003604450000000009, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:27.270" endtime="20201029 12:47:27.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.284" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:47:27.282" endtime="20201029 12:47:27.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.289" level="INFO">VALUE: [0.0003600970000000002, 0.00038554099999999966, 0.0003569869999999996, 0.0003580279999999998, 0.0003575000000000002, 0.00035948599999999914, 0.0003849590000000007, 0.0003604450000000009, 0.00035777799999999957, 0.00035865200000000097, 0.0003585419999999999, 0.0003577219999999978, 0.00038572199999999807, 0.0003603749999999996, 0.00036061100000000026, 0.00036116699999999904, 0.00035875000000000143, 0.00035773600000000086, 0.00036020800000000075, 0.00035742999999999886, 0.00035937500000000205, 0.0003579590000000049, 0.0003598329999999969, 0.0003580689999999956, 0.00035920799999999975, 0.0003564720000000035, 0.00038608300000000234, 0.00035819499999999865, 0.0003568050000000017, 0.0003598890000000021, 0.00038602800000000353, 0.0003856390000000001, 0.00036054099999999895, 0.0003852360000000041, 0.0003865550000000037, 0.0003852220000000045, 0.0003852640000000032, 0.00035930499999999727, 0.000357958999999998, 0.00038516699999999876, 0.0003593470000000029, 0.0003849450000000046, 0.00035926400000000497, 0.0003610000000000002, 0.0003573610000000005, 0.0003589020000000012, 0.00036112499999999687, 0.00036016600000000204, 0.00038525000000000365, 0.00035844500000000584]</msg>
<status status="PASS" starttime="20201029 12:47:27.286" endtime="20201029 12:47:27.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.277" endtime="20201029 12:47:27.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:27.306" endtime="20201029 12:47:27.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.303" endtime="20201029 12:47:27.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.300" endtime="20201029 12:47:27.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.907" endtime="20201029 12:47:27.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.907" endtime="20201029 12:47:27.330"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.348" endtime="20201029 12:47:27.384"></status>
</kw>
<msg timestamp="20201029 12:47:27.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.345" endtime="20201029 12:47:27.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.385" endtime="20201029 12:47:27.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.388" endtime="20201029 12:47:27.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.340" endtime="20201029 12:47:27.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.335" endtime="20201029 12:47:27.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.397" endtime="20201029 12:47:27.686"></status>
</kw>
<msg timestamp="20201029 12:47:27.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034686889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035049264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.395" endtime="20201029 12:47:27.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034686889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035049264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.690" endtime="20201029 12:47:27.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.698" endtime="20201029 12:47:27.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.393" endtime="20201029 12:47:27.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.391" endtime="20201029 12:47:27.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.705" level="INFO">${RESULT} = [{'diff': 0.0003623749999999981}, {'diff': 0.00035950000000000565}, {'diff': 0.0003598340000000033}, {'diff': 0.00038590299999999994}, {'diff': 0.00035856999999999556}, {'diff': 0.0003862780000000038}...</msg>
<status status="PASS" starttime="20201029 12:47:27.701" endtime="20201029 12:47:27.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:27.709" level="INFO">${ACCURACY} = {'diff': [0.0003623749999999981, 0.00035950000000000565, 0.0003598340000000033, 0.00038590299999999994, 0.00035856999999999556, 0.0003862780000000038, 0.00036024999999999946, 0.0003605269999999994, 0....</msg>
<status status="PASS" starttime="20201029 12:47:27.706" endtime="20201029 12:47:27.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.713" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:47:27.712" endtime="20201029 12:47:27.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.716" level="INFO">VALUE: [0.0003623749999999981, 0.00035950000000000565, 0.0003598340000000033, 0.00038590299999999994, 0.00035856999999999556, 0.0003862780000000038, 0.00036024999999999946, 0.0003605269999999994, 0.0003589160000000008, 0.0003866390000000011, 0.0003573060000000017, 0.00036006999999999706, 0.00036125000000000046, 0.0003855829999999949, 0.00035924999999999846, 0.00035676399999999553, 0.000360667000000002, 0.0003579029999999997, 0.000356763000000003, 0.0003574019999999997, 0.00035695800000000444, 0.00036111100000000423, 0.00035694500000000434, 0.0003610000000000002, 0.00035679199999999467, 0.00035837500000000105, 0.00036026400000000597, 0.000357958999999998, 0.00036115300000000294, 0.00036043000000000186, 0.00035644399999999743, 0.0003608469999999975, 0.0003566389999999989, 0.0003609729999999936, 0.0003567769999999956, 0.0003608470000000044, 0.00035698599999999664, 0.0003587359999999984, 0.0003579449999999984, 0.0003574170000000057, 0.0003600140000000057, 0.0003866390000000011, 0.00038579200000000285, 0.00035937500000000205, 0.0003575410000000029, 0.0003855970000000014, 0.00035808400000000157, 0.0003608749999999966, 0.000358457999999999, 0.0003576389999999999]</msg>
<status status="PASS" starttime="20201029 12:47:27.714" endtime="20201029 12:47:27.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.709" endtime="20201029 12:47:27.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:27.721" endtime="20201029 12:47:27.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.719" endtime="20201029 12:47:27.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.718" endtime="20201029 12:47:27.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.332" endtime="20201029 12:47:27.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.331" endtime="20201029 12:47:27.741"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.750" endtime="20201029 12:47:27.790"></status>
</kw>
<msg timestamp="20201029 12:47:27.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.749" endtime="20201029 12:47:27.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.792" endtime="20201029 12:47:27.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.794" endtime="20201029 12:47:27.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.746" endtime="20201029 12:47:27.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.744" endtime="20201029 12:47:27.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.803" endtime="20201029 12:47:28.094"></status>
</kw>
<msg timestamp="20201029 12:47:28.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.802" endtime="20201029 12:47:28.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.104" endtime="20201029 12:47:28.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.123" endtime="20201029 12:47:28.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.799" endtime="20201029 12:47:28.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.798" endtime="20201029 12:47:28.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.137" level="INFO">${RESULT} = [{'diff': 0.0003567920000000016}, {'diff': 0.000361152}, {'diff': 0.0003571249999999998}, {'diff': 0.00036088899999999965}, {'diff': 0.00035801400000000025}, {'diff': 0.00035727799999999907}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:47:28.130" endtime="20201029 12:47:28.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:28.146" level="INFO">${ACCURACY} = {'diff': [0.0003567920000000016, 0.000361152, 0.0003571249999999998, 0.00036088899999999965, 0.00035801400000000025, 0.00035727799999999907, 0.000357666999999999, 0.0003580279999999998, 0.000358110999...</msg>
<status status="PASS" starttime="20201029 12:47:28.139" endtime="20201029 12:47:28.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.156" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:47:28.154" endtime="20201029 12:47:28.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.162" level="INFO">VALUE: [0.0003567920000000016, 0.000361152, 0.0003571249999999998, 0.00036088899999999965, 0.00035801400000000025, 0.00035727799999999907, 0.000357666999999999, 0.0003580279999999998, 0.00035811099999999776, 0.00035852799999999685, 0.0003577080000000017, 0.0003591670000000005, 0.00035773600000000086, 0.0003857360000000011, 0.00038520800000000147, 0.0003573610000000005, 0.00038586100000000123, 0.00035861099999999826, 0.0003592089999999992, 0.0003852500000000002, 0.0003856109999999975, 0.0003597220000000033, 0.00035833300000000234, 0.0003579159999999998, 0.0003565419999999944, 0.000385611000000001, 0.0003858750000000008, 0.0003592920000000041, 0.00035724999999999646, 0.0003576250000000003, 0.00035827800000000354, 0.0003603199999999973, 0.0003857910000000034, 0.000359667000000001, 0.00035644500000000384, 0.00036098600000000064, 0.00035894399999999993, 0.0003596810000000006, 0.00038612500000000105, 0.0003571809999999981, 0.00035858400000000207, 0.0003569590000000039, 0.00036102799999999935, 0.00035908400000000257, 0.0003602779999999986, 0.00035708400000000057, 0.00035948599999999914, 0.00035926399999999803, 0.00035674999999999596, 0.0003858750000000008]</msg>
<status status="PASS" starttime="20201029 12:47:28.159" endtime="20201029 12:47:28.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.148" endtime="20201029 12:47:28.166"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:28.175" endtime="20201029 12:47:28.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.171" endtime="20201029 12:47:28.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.168" endtime="20201029 12:47:28.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.742" endtime="20201029 12:47:28.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.742" endtime="20201029 12:47:28.196"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.205" endtime="20201029 12:47:28.244"></status>
</kw>
<msg timestamp="20201029 12:47:28.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.204" endtime="20201029 12:47:28.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.245" endtime="20201029 12:47:28.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.248" endtime="20201029 12:47:28.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.201" endtime="20201029 12:47:28.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.199" endtime="20201029 12:47:28.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.257" endtime="20201029 12:47:28.543"></status>
</kw>
<msg timestamp="20201029 12:47:28.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025103111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025472944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.256" endtime="20201029 12:47:28.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025103111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025472944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.548" endtime="20201029 12:47:28.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.556" endtime="20201029 12:47:28.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.253" endtime="20201029 12:47:28.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.251" endtime="20201029 12:47:28.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.563" level="INFO">${RESULT} = [{'diff': 0.00036983299999999997}, {'diff': 0.00035929200000000064}, {'diff': 0.0003580409999999999}, {'diff': 0.00035711100000000023}, {'diff': 0.00038602800000000007}, {'diff': 0.0003583469999999984...</msg>
<status status="PASS" starttime="20201029 12:47:28.559" endtime="20201029 12:47:28.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:28.570" level="INFO">${ACCURACY} = {'diff': [0.00036983299999999997, 0.00035929200000000064, 0.0003580409999999999, 0.00035711100000000023, 0.00038602800000000007, 0.00035834699999999844, 0.00035923600000000236, 0.00035954099999999795,...</msg>
<status status="PASS" starttime="20201029 12:47:28.564" endtime="20201029 12:47:28.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.575" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 12:47:28.574" endtime="20201029 12:47:28.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.578" level="INFO">VALUE: [0.00036983299999999997, 0.00035929200000000064, 0.0003580409999999999, 0.00035711100000000023, 0.00038602800000000007, 0.00035834699999999844, 0.00035923600000000236, 0.00035954099999999795, 0.0003865559999999997, 0.00035758400000000107, 0.00038636100000000173, 0.0003867910000000009, 0.00038636099999999826, 0.00038666700000000026, 0.0003862499999999977, 0.000359861999999999, 0.0003568609999999965, 0.00035723600000000383, 0.000359346999999996, 0.00035800000000000415, 0.0003588340000000023, 0.000359054999999997, 0.0003596940000000007, 0.0003859169999999995, 0.0003859859999999979, 0.0003583050000000032, 0.0003864300000000001, 0.0003852499999999967, 0.000358457999999999, 0.0003588060000000032, 0.0003585139999999973, 0.0003577229999999973, 0.0003581250000000008, 0.0003854580000000052, 0.00038549999999999696, 0.0003600969999999967, 0.0003577920000000026, 0.0003579020000000002, 0.00035966600000000154, 0.00036086099999999705, 0.00035965300000000144, 0.0003859439999999992, 0.0003566389999999989, 0.0003860409999999967, 0.0003611109999999973, 0.00038606899999999583, 0.0003864719999999988, 0.00035979199999999767, 0.0003859719999999983, 0.0003855139999999965]</msg>
<status status="PASS" starttime="20201029 12:47:28.576" endtime="20201029 12:47:28.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.571" endtime="20201029 12:47:28.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:28.583" endtime="20201029 12:47:28.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.581" endtime="20201029 12:47:28.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.580" endtime="20201029 12:47:28.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.197" endtime="20201029 12:47:28.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.197" endtime="20201029 12:47:28.604"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.613" endtime="20201029 12:47:28.650"></status>
</kw>
<msg timestamp="20201029 12:47:28.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.611" endtime="20201029 12:47:28.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.652" endtime="20201029 12:47:28.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.655" endtime="20201029 12:47:28.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.609" endtime="20201029 12:47:28.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.606" endtime="20201029 12:47:28.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.664" endtime="20201029 12:47:28.951"></status>
</kw>
<msg timestamp="20201029 12:47:28.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024393458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024760639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.662" endtime="20201029 12:47:28.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024393458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024760639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.955" endtime="20201029 12:47:28.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.964" endtime="20201029 12:47:28.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.660" endtime="20201029 12:47:28.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.658" endtime="20201029 12:47:28.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.970" level="INFO">${RESULT} = [{'diff': 0.00036718100000000115}, {'diff': 0.00038644499999999915}, {'diff': 0.0003591670000000005}, {'diff': 0.0003580419999999994}, {'diff': 0.0003594030000000012}, {'diff': 0.00035855599999999946}...</msg>
<status status="PASS" starttime="20201029 12:47:28.967" endtime="20201029 12:47:28.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:28.974" level="INFO">${ACCURACY} = {'diff': [0.00036718100000000115, 0.00038644499999999915, 0.0003591670000000005, 0.0003580419999999994, 0.0003594030000000012, 0.00035855599999999946, 0.00038541599999999954, 0.000357861000000001, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:28.971" endtime="20201029 12:47:28.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.979" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 12:47:28.978" endtime="20201029 12:47:28.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.982" level="INFO">VALUE: [0.00036718100000000115, 0.00038644499999999915, 0.0003591670000000005, 0.0003580419999999994, 0.0003594030000000012, 0.00035855599999999946, 0.00038541599999999954, 0.000357861000000001, 0.00035683300000000084, 0.00035713900000000284, 0.0003859169999999995, 0.00038655500000000023, 0.0003593890000000016, 0.0003578470000000014, 0.00035691700000000173, 0.00035733300000000134, 0.00038584800000000113, 0.0003594169999999973, 0.0003861390000000006, 0.00035819499999999865, 0.0003608469999999975, 0.00038656899999999633, 0.0003579020000000002, 0.0003597779999999981, 0.00035793100000000577, 0.0003856939999999989, 0.00038536100000000073, 0.00038649999999999796, 0.00036002799999999835, 0.00035852799999999685, 0.0003605689999999981, 0.0003584860000000051, 0.00035998599999999964, 0.00035766700000000595, 0.0003598469999999965, 0.00035902799999999735, 0.00035997200000000007, 0.00036098600000000064, 0.00035994400000000093, 0.0003605830000000046, 0.00035694400000000487, 0.0003566390000000058, 0.00035877800000000404, 0.0003591390000000014, 0.0003865560000000032, 0.00038640300000000044, 0.0003599999999999992, 0.0003592909999999977, 0.00036005600000000443, 0.00035793099999999883]</msg>
<status status="PASS" starttime="20201029 12:47:28.980" endtime="20201029 12:47:28.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.975" endtime="20201029 12:47:28.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:28.987" endtime="20201029 12:47:29.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.985" endtime="20201029 12:47:29.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.984" endtime="20201029 12:47:29.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.605" endtime="20201029 12:47:29.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.604" endtime="20201029 12:47:29.008"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.017" endtime="20201029 12:47:29.058"></status>
</kw>
<msg timestamp="20201029 12:47:29.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.015" endtime="20201029 12:47:29.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.059" endtime="20201029 12:47:29.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.062" endtime="20201029 12:47:29.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.013" endtime="20201029 12:47:29.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.010" endtime="20201029 12:47:29.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.071" endtime="20201029 12:47:29.357"></status>
</kw>
<msg timestamp="20201029 12:47:29.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027411708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027773083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.070" endtime="20201029 12:47:29.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027411708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027773083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.361" endtime="20201029 12:47:29.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.370" endtime="20201029 12:47:29.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.067" endtime="20201029 12:47:29.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.065" endtime="20201029 12:47:29.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.376" level="INFO">${RESULT} = [{'diff': 0.0003613750000000006}, {'diff': 0.0003567219999999968}, {'diff': 0.00035891700000000026}, {'diff': 0.00036074999999999996}, {'diff': 0.0003610000000000002}, {'diff': 0.0003600970000000002},...</msg>
<status status="PASS" starttime="20201029 12:47:29.373" endtime="20201029 12:47:29.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:29.381" level="INFO">${ACCURACY} = {'diff': [0.0003613750000000006, 0.0003567219999999968, 0.00035891700000000026, 0.00036074999999999996, 0.0003610000000000002, 0.0003600970000000002, 0.00035841699999999976, 0.00038626400000000075, 0....</msg>
<status status="PASS" starttime="20201029 12:47:29.377" endtime="20201029 12:47:29.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.385" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 12:47:29.384" endtime="20201029 12:47:29.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.388" level="INFO">VALUE: [0.0003613750000000006, 0.0003567219999999968, 0.00035891700000000026, 0.00036074999999999996, 0.0003610000000000002, 0.0003600970000000002, 0.00035841699999999976, 0.00038626400000000075, 0.0003568329999999974, 0.00035673599999999986, 0.00035740199999999625, 0.00035924999999999846, 0.0003589579999999995, 0.00038556900000000227, 0.00035761100000000073, 0.00038530500000000245, 0.0003572089999999972, 0.00035959700000000316, 0.0003589449999999994, 0.00035909700000000266, 0.000386417, 0.0003593470000000029, 0.00035723600000000383, 0.0003865829999999959, 0.00035782000000000175, 0.000356861, 0.0003567359999999964, 0.00035798599999999764, 0.000385611000000001, 0.00035687499999999955, 0.00035766700000000595, 0.00036011100000000323, 0.0003601940000000012, 0.00038655499999999676, 0.00038634800000000163, 0.0003579029999999997, 0.0003591109999999953, 0.0003566950000000041, 0.000360458000000001, 0.00035769499999999815, 0.00035820799999999875, 0.000385319000000002, 0.0003585139999999973, 0.00036115200000000347, 0.00035909800000000214, 0.00035926399999999803, 0.00038520800000000494, 0.00038573599999999764, 0.0003610000000000002, 0.000357457999999998]</msg>
<status status="PASS" starttime="20201029 12:47:29.386" endtime="20201029 12:47:29.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.381" endtime="20201029 12:47:29.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:29.394" endtime="20201029 12:47:29.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.392" endtime="20201029 12:47:29.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.391" endtime="20201029 12:47:29.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.009" endtime="20201029 12:47:29.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.008" endtime="20201029 12:47:29.415"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.424" endtime="20201029 12:47:29.460"></status>
</kw>
<msg timestamp="20201029 12:47:29.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.422" endtime="20201029 12:47:29.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.461" endtime="20201029 12:47:29.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.464" endtime="20201029 12:47:29.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.419" endtime="20201029 12:47:29.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.417" endtime="20201029 12:47:29.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.473" endtime="20201029 12:47:29.759"></status>
</kw>
<msg timestamp="20201029 12:47:29.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022309653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.472" endtime="20201029 12:47:29.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022309653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.764" endtime="20201029 12:47:29.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.772" endtime="20201029 12:47:29.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.469" endtime="20201029 12:47:29.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.467" endtime="20201029 12:47:29.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.778" level="INFO">${RESULT} = [{'diff': 0.00036025000000000293}, {'diff': 0.00038511199999999995}, {'diff': 0.0003573889999999996}, {'diff': 0.0003599160000000018}, {'diff': 0.00035644500000000037}, {'diff': 0.0003598479999999994}...</msg>
<status status="PASS" starttime="20201029 12:47:29.775" endtime="20201029 12:47:29.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:29.784" level="INFO">${ACCURACY} = {'diff': [0.00036025000000000293, 0.00038511199999999995, 0.0003573889999999996, 0.0003599160000000018, 0.00035644500000000037, 0.0003598479999999994, 0.0003563609999999995, 0.0003594999999999987, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:29.779" endtime="20201029 12:47:29.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.788" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 12:47:29.787" endtime="20201029 12:47:29.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.791" level="INFO">VALUE: [0.00036025000000000293, 0.00038511199999999995, 0.0003573889999999996, 0.0003599160000000018, 0.00035644500000000037, 0.0003598479999999994, 0.0003563609999999995, 0.0003594999999999987, 0.0003566119999999992, 0.0003610559999999985, 0.00035997299999999954, 0.000360346999999997, 0.00035858400000000207, 0.00035898599999999864, 0.0003580279999999998, 0.00038520899999999747, 0.00036012499999999933, 0.000357666999999999, 0.0003608610000000005, 0.00035683300000000084, 0.0003582219999999983, 0.0003563190000000008, 0.0003567220000000003, 0.000357764, 0.00035975000000000243, 0.0003565280000000018, 0.00035730499999999527, 0.00038625000000000465, 0.00035733300000000134, 0.00035822200000000526, 0.0003601390000000024, 0.0003602779999999986, 0.0003572779999999956, 0.0003608749999999966, 0.0003585410000000039, 0.000386013999999997, 0.0003853750000000003, 0.00035794500000000534, 0.0003583470000000019, 0.00036052799999999885, 0.0003611390000000034, 0.0003858330000000021, 0.00035629100000000163, 0.0003567219999999968, 0.00036027800000000554, 0.00038652800000000404, 0.0003575270000000033, 0.00035791699999999926, 0.0003576389999999999, 0.0003577500000000039]</msg>
<status status="PASS" starttime="20201029 12:47:29.789" endtime="20201029 12:47:29.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.784" endtime="20201029 12:47:29.792"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:29.796" endtime="20201029 12:47:29.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.794" endtime="20201029 12:47:29.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.793" endtime="20201029 12:47:29.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.416" endtime="20201029 12:47:29.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.415" endtime="20201029 12:47:29.817"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.826" endtime="20201029 12:47:29.861"></status>
</kw>
<msg timestamp="20201029 12:47:29.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.824" endtime="20201029 12:47:29.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.863" endtime="20201029 12:47:29.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.866" endtime="20201029 12:47:29.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.822" endtime="20201029 12:47:29.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.819" endtime="20201029 12:47:29.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.875" endtime="20201029 12:47:30.162"></status>
</kw>
<msg timestamp="20201029 12:47:30.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.874" endtime="20201029 12:47:30.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.166" endtime="20201029 12:47:30.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.174" endtime="20201029 12:47:30.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.871" endtime="20201029 12:47:30.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.869" endtime="20201029 12:47:30.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.181" level="INFO">${RESULT} = [{'diff': 0.00036676400000000206}, {'diff': 0.00038526300000000027}, {'diff': 0.00035674999999999943}, {'diff': 0.00035851400000000075}, {'diff': 0.00036102799999999935}, {'diff': 0.000386193999999999...</msg>
<status status="PASS" starttime="20201029 12:47:30.178" endtime="20201029 12:47:30.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:30.185" level="INFO">${ACCURACY} = {'diff': [0.00036676400000000206, 0.00038526300000000027, 0.00035674999999999943, 0.00035851400000000075, 0.00036102799999999935, 0.0003861939999999994, 0.00035659700000000016, 0.00035654200000000136,...</msg>
<status status="PASS" starttime="20201029 12:47:30.182" endtime="20201029 12:47:30.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.190" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 12:47:30.189" endtime="20201029 12:47:30.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.193" level="INFO">VALUE: [0.00036676400000000206, 0.00038526300000000027, 0.00035674999999999943, 0.00035851400000000075, 0.00036102799999999935, 0.0003861939999999994, 0.00035659700000000016, 0.00035654200000000136, 0.00038562500000000055, 0.0003865689999999998, 0.00035677799999999857, 0.0003566249999999993, 0.0003583470000000019, 0.00036094400000000193, 0.0003577080000000017, 0.000356861, 0.00038591600000000004, 0.00036029199999999817, 0.0003588470000000024, 0.000386514000000001, 0.00035837500000000105, 0.0003594999999999987, 0.00038666700000000026, 0.00035993100000000083, 0.0003596389999999984, 0.00036061100000000373, 0.00038555599999999524, 0.00035674999999999596, 0.00035640300000000513, 0.0003567080000000042, 0.00035874999999999796, 0.0003854860000000043, 0.0003851529999999992, 0.0003573610000000005, 0.00036084799999999695, 0.00036130599999999874, 0.0003862639999999973, 0.00035883300000000284, 0.0003862499999999977, 0.0003589160000000008, 0.0003856389999999932, 0.00035965300000000144, 0.0003864719999999988, 0.0003861110000000015, 0.00035893099999999983, 0.00036030599999999774, 0.0003602359999999999, 0.0003577500000000039, 0.00038623599999999814, 0.0003599580000000005]</msg>
<status status="PASS" starttime="20201029 12:47:30.191" endtime="20201029 12:47:30.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.186" endtime="20201029 12:47:30.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:30.198" endtime="20201029 12:47:30.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.196" endtime="20201029 12:47:30.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.195" endtime="20201029 12:47:30.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.818" endtime="20201029 12:47:30.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.817" endtime="20201029 12:47:30.218"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.228" endtime="20201029 12:47:30.263"></status>
</kw>
<msg timestamp="20201029 12:47:30.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.226" endtime="20201029 12:47:30.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.265" endtime="20201029 12:47:30.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.267" endtime="20201029 12:47:30.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.223" endtime="20201029 12:47:30.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.221" endtime="20201029 12:47:30.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.277" endtime="20201029 12:47:30.563"></status>
</kw>
<msg timestamp="20201029 12:47:30.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022380389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022766833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.275" endtime="20201029 12:47:30.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022380389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022766833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.567" endtime="20201029 12:47:30.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.575" endtime="20201029 12:47:30.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.272" endtime="20201029 12:47:30.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.270" endtime="20201029 12:47:30.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.582" level="INFO">${RESULT} = [{'diff': 0.0003864439999999997}, {'diff': 0.000356861}, {'diff': 0.00036079199999999867}, {'diff': 0.00035894399999999993}, {'diff': 0.00036037500000000305}, {'diff': 0.00035943100000000033}, {'diff'...</msg>
<status status="PASS" starttime="20201029 12:47:30.579" endtime="20201029 12:47:30.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:30.586" level="INFO">${ACCURACY} = {'diff': [0.0003864439999999997, 0.000356861, 0.00036079199999999867, 0.00035894399999999993, 0.00036037500000000305, 0.00035943100000000033, 0.000360667000000002, 0.00035797199999999807, 0.0003593329...</msg>
<status status="PASS" starttime="20201029 12:47:30.583" endtime="20201029 12:47:30.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.591" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 12:47:30.590" endtime="20201029 12:47:30.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.594" level="INFO">VALUE: [0.0003864439999999997, 0.000356861, 0.00036079199999999867, 0.00035894399999999993, 0.00036037500000000305, 0.00035943100000000033, 0.000360667000000002, 0.00035797199999999807, 0.0003593329999999999, 0.0003577089999999977, 0.0003586809999999996, 0.000361054999999999, 0.00035940199999999825, 0.00035697199999999707, 0.00035873600000000186, 0.0003865270000000011, 0.0003581250000000008, 0.00035727700000000306, 0.0003601670000000015, 0.00038576400000000025, 0.0003851110000000005, 0.00035819499999999865, 0.0003602220000000003, 0.0003571250000000033, 0.0003853750000000003, 0.00038595900000000516, 0.0003572920000000021, 0.0003583610000000015, 0.00035936099999999555, 0.000359070000000003, 0.00038619500000000584, 0.00035877800000000404, 0.0003570830000000011, 0.0003611250000000038, 0.0003593340000000028, 0.000360555999999998, 0.0003600689999999976, 0.00035977800000000504, 0.000358667, 0.0003603610000000035, 0.000356861, 0.0003573470000000009, 0.0003602359999999999, 0.00035687499999999955, 0.0003608470000000044, 0.0003578469999999945, 0.0003865279999999971, 0.00035804200000000286, 0.00038656900000000327, 0.0003581799999999996]</msg>
<status status="PASS" starttime="20201029 12:47:30.592" endtime="20201029 12:47:30.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.587" endtime="20201029 12:47:30.596"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:30.600" endtime="20201029 12:47:30.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.598" endtime="20201029 12:47:30.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.597" endtime="20201029 12:47:30.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.219" endtime="20201029 12:47:30.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.219" endtime="20201029 12:47:30.620"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.629" endtime="20201029 12:47:30.665"></status>
</kw>
<msg timestamp="20201029 12:47:30.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.628" endtime="20201029 12:47:30.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.666" endtime="20201029 12:47:30.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.669" endtime="20201029 12:47:30.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.625" endtime="20201029 12:47:30.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.623" endtime="20201029 12:47:30.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.678" endtime="20201029 12:47:30.965"></status>
</kw>
<msg timestamp="20201029 12:47:30.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.677" endtime="20201029 12:47:30.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.969" endtime="20201029 12:47:30.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.977" endtime="20201029 12:47:30.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.674" endtime="20201029 12:47:30.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.672" endtime="20201029 12:47:30.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.984" level="INFO">${RESULT} = [{'diff': 0.00038504199999999864}, {'diff': 0.0003864439999999997}, {'diff': 0.0003585410000000004}, {'diff': 0.0003606940000000017}, {'diff': 0.0003587779999999971}, {'diff': 0.0003850139999999995}, ...</msg>
<status status="PASS" starttime="20201029 12:47:30.980" endtime="20201029 12:47:30.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:30.989" level="INFO">${ACCURACY} = {'diff': [0.00038504199999999864, 0.0003864439999999997, 0.0003585410000000004, 0.0003606940000000017, 0.0003587779999999971, 0.0003850139999999995, 0.00036122199999999785, 0.0003605139999999993, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:30.985" endtime="20201029 12:47:30.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.994" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 12:47:30.992" endtime="20201029 12:47:30.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.996" level="INFO">VALUE: [0.00038504199999999864, 0.0003864439999999997, 0.0003585410000000004, 0.0003606940000000017, 0.0003587779999999971, 0.0003850139999999995, 0.00036122199999999785, 0.0003605139999999993, 0.00035784699999999794, 0.00035632000000000025, 0.0003609169999999988, 0.00038572199999999807, 0.0003854439999999987, 0.00036054099999999895, 0.00038570900000000144, 0.00035783399999999785, 0.00035637499999999905, 0.0003593199999999998, 0.0003575279999999993, 0.00035605600000000043, 0.000360361, 0.0003584449999999989, 0.0003856949999999984, 0.00035841699999999976, 0.0003581939999999992, 0.0003605689999999981, 0.0003562500000000024, 0.0003863750000000013, 0.0003865560000000032, 0.00038651299999999805, 0.0003861390000000006, 0.00035743099999999833, 0.0003566249999999993, 0.0003587229999999983, 0.00035937500000000205, 0.0003862639999999973, 0.0003612090000000012, 0.00035737500000000005, 0.0003861939999999994, 0.00038551400000000347, 0.00038584700000000166, 0.00036102799999999935, 0.00035819499999999865, 0.0003591800000000006, 0.0003861660000000003, 0.0003586939999999997, 0.0003567359999999964, 0.00038659699999999547, 0.0003865409999999972, 0.00035630499999999427]</msg>
<status status="PASS" starttime="20201029 12:47:30.995" endtime="20201029 12:47:30.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.990" endtime="20201029 12:47:30.997"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:31.001" endtime="20201029 12:47:31.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.000" endtime="20201029 12:47:31.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.998" endtime="20201029 12:47:31.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.621" endtime="20201029 12:47:31.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.621" endtime="20201029 12:47:31.022"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.031" endtime="20201029 12:47:31.068"></status>
</kw>
<msg timestamp="20201029 12:47:31.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.030" endtime="20201029 12:47:31.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.069" endtime="20201029 12:47:31.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.072" endtime="20201029 12:47:31.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.027" endtime="20201029 12:47:31.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.025" endtime="20201029 12:47:31.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.081" endtime="20201029 12:47:31.368"></status>
</kw>
<msg timestamp="20201029 12:47:31.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022777042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.080" endtime="20201029 12:47:31.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022777042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.372" endtime="20201029 12:47:31.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.380" endtime="20201029 12:47:31.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.077" endtime="20201029 12:47:31.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.075" endtime="20201029 12:47:31.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:31.387" level="INFO">${RESULT} = [{'diff': 0.0003642230000000003}, {'diff': 0.00035841699999999976}, {'diff': 0.0003564310000000008}, {'diff': 0.0003599450000000004}, {'diff': 0.00035775000000000043}, {'diff': 0.0003596810000000006},...</msg>
<status status="PASS" starttime="20201029 12:47:31.384" endtime="20201029 12:47:31.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:31.391" level="INFO">${ACCURACY} = {'diff': [0.0003642230000000003, 0.00035841699999999976, 0.0003564310000000008, 0.0003599450000000004, 0.00035775000000000043, 0.0003596810000000006, 0.00035705600000000143, 0.00035948599999999914, 0....</msg>
<status status="PASS" starttime="20201029 12:47:31.388" endtime="20201029 12:47:31.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.396" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 12:47:31.395" endtime="20201029 12:47:31.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.398" level="INFO">VALUE: [0.0003642230000000003, 0.00035841699999999976, 0.0003564310000000008, 0.0003599450000000004, 0.00035775000000000043, 0.0003596810000000006, 0.00035705600000000143, 0.00035948599999999914, 0.00038598600000000136, 0.0003569999999999997, 0.00035917999999999714, 0.0003582359999999979, 0.00036029199999999817, 0.00038531899999999855, 0.00035938899999999815, 0.0003854580000000017, 0.00036102799999999935, 0.0003567080000000007, 0.00036112500000000033, 0.0003602359999999999, 0.00035786200000000046, 0.00035779099999999966, 0.0003568340000000003, 0.0003599450000000004, 0.0003577500000000039, 0.000358667, 0.0003576389999999999, 0.00038595799999999875, 0.0003591120000000017, 0.0003563889999999986, 0.00035659799999999964, 0.0003850970000000009, 0.00036048600000000014, 0.00038558300000000184, 0.0003563479999999994, 0.0003593889999999947, 0.00036048600000000014, 0.0003588470000000024, 0.0003563609999999995, 0.00035850000000000465, 0.0003566939999999977, 0.0003857780000000033, 0.00035855600000000293, 0.00038572199999999807, 0.0003609309999999949, 0.0003572769999999961, 0.00035722200000000426, 0.00035808299999999516, 0.0003852220000000045, 0.00035842999999999986]</msg>
<status status="PASS" starttime="20201029 12:47:31.397" endtime="20201029 12:47:31.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.392" endtime="20201029 12:47:31.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:31.404" endtime="20201029 12:47:31.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.402" endtime="20201029 12:47:31.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.401" endtime="20201029 12:47:31.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.023" endtime="20201029 12:47:31.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.023" endtime="20201029 12:47:31.425"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.435" endtime="20201029 12:47:31.474"></status>
</kw>
<msg timestamp="20201029 12:47:31.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.433" endtime="20201029 12:47:31.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.476" endtime="20201029 12:47:31.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.479" endtime="20201029 12:47:31.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.429" endtime="20201029 12:47:31.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.427" endtime="20201029 12:47:31.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.488" endtime="20201029 12:47:31.775"></status>
</kw>
<msg timestamp="20201029 12:47:31.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027035639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027417181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.486" endtime="20201029 12:47:31.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027035639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027417181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.779" endtime="20201029 12:47:31.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.788" endtime="20201029 12:47:31.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.484" endtime="20201029 12:47:31.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.482" endtime="20201029 12:47:31.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:31.794" level="INFO">${RESULT} = [{'diff': 0.0003815419999999986}, {'diff': 0.0003571389999999994}, {'diff': 0.00035815200000000047}, {'diff': 0.00035626400000000197}, {'diff': 0.0003597219999999998}, {'diff': 0.00035836200000000096}...</msg>
<status status="PASS" starttime="20201029 12:47:31.791" endtime="20201029 12:47:31.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:31.798" level="INFO">${ACCURACY} = {'diff': [0.0003815419999999986, 0.0003571389999999994, 0.00035815200000000047, 0.00035626400000000197, 0.0003597219999999998, 0.00035836200000000096, 0.0003566249999999993, 0.000360555999999998, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:31.795" endtime="20201029 12:47:31.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.803" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 12:47:31.802" endtime="20201029 12:47:31.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.806" level="INFO">VALUE: [0.0003815419999999986, 0.0003571389999999994, 0.00035815200000000047, 0.00035626400000000197, 0.0003597219999999998, 0.00035836200000000096, 0.0003566249999999993, 0.000360555999999998, 0.00035737500000000005, 0.0003586250000000013, 0.0003858750000000008, 0.00035800000000000415, 0.0003567080000000042, 0.0003611659999999961, 0.0003590139999999978, 0.00035638900000000556, 0.00036043100000000133, 0.00038518099999999833, 0.00036120800000000175, 0.000359054999999997, 0.0003854299999999991, 0.0003605139999999993, 0.00035902799999999735, 0.0003582359999999979, 0.00038666700000000026, 0.00038562500000000055, 0.00038549999999999696, 0.0003588050000000037, 0.00038516699999999876, 0.0003611810000000021, 0.00036109700000000466, 0.0003862919999999964, 0.00035822200000000526, 0.00038656899999999633, 0.0003864729999999983, 0.0003576799999999991, 0.0003867640000000047, 0.0003595830000000036, 0.0003579029999999997, 0.0003613329999999984, 0.0003864439999999997, 0.0003600969999999967, 0.00038627699999999737, 0.00036037500000000305, 0.000357070000000001, 0.0003585689999999961, 0.00035669499999999715, 0.0003577359999999974, 0.00038613800000000115, 0.0003860409999999967]</msg>
<status status="PASS" starttime="20201029 12:47:31.804" endtime="20201029 12:47:31.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.799" endtime="20201029 12:47:31.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:31.812" endtime="20201029 12:47:31.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.810" endtime="20201029 12:47:31.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.809" endtime="20201029 12:47:31.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.426" endtime="20201029 12:47:31.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.425" endtime="20201029 12:47:31.833"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.842" endtime="20201029 12:47:31.876"></status>
</kw>
<msg timestamp="20201029 12:47:31.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.840" endtime="20201029 12:47:31.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.877" endtime="20201029 12:47:31.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.880" endtime="20201029 12:47:31.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.838" endtime="20201029 12:47:31.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.835" endtime="20201029 12:47:31.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.889" endtime="20201029 12:47:32.175"></status>
</kw>
<msg timestamp="20201029 12:47:32.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020863, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021233028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:31.888" endtime="20201029 12:47:32.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020863, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021233028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:32.179" endtime="20201029 12:47:32.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.188" endtime="20201029 12:47:32.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.885" endtime="20201029 12:47:32.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.883" endtime="20201029 12:47:32.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:32.195" level="INFO">${RESULT} = [{'diff': 0.0003700280000000014}, {'diff': 0.0003591389999999979}, {'diff': 0.00035848599999999814}, {'diff': 0.00035880500000000023}, {'diff': 0.00035979200000000114}, {'diff': 0.00036038899999999915...</msg>
<status status="PASS" starttime="20201029 12:47:32.191" endtime="20201029 12:47:32.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:32.202" level="INFO">${ACCURACY} = {'diff': [0.0003700280000000014, 0.0003591389999999979, 0.00035848599999999814, 0.00035880500000000023, 0.00035979200000000114, 0.00036038899999999915, 0.00035994499999999693, 0.0003854720000000013, 0...</msg>
<status status="PASS" starttime="20201029 12:47:32.196" endtime="20201029 12:47:32.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.207" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 12:47:32.206" endtime="20201029 12:47:32.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.210" level="INFO">VALUE: [0.0003700280000000014, 0.0003591389999999979, 0.00035848599999999814, 0.00035880500000000023, 0.00035979200000000114, 0.00036038899999999915, 0.00035994499999999693, 0.0003854720000000013, 0.00035979199999999767, 0.00035891700000000026, 0.00035792999999999936, 0.00035919499999999965, 0.0003601389999999989, 0.0003851949999999979, 0.00035773700000000033, 0.00036061100000000026, 0.0003610139999999998, 0.0003611529999999995, 0.0003568470000000004, 0.00036062499999999983, 0.0003587770000000011, 0.00035919499999999965, 0.0003848749999999998, 0.0003852909999999994, 0.0003597359999999994, 0.00035909799999999867, 0.00035991700000000126, 0.0003856529999999997, 0.0003849719999999973, 0.0003856390000000001, 0.0003580690000000025, 0.00036069500000000115, 0.0003864450000000061, 0.0003589020000000012, 0.0003589449999999994, 0.0003610689999999986, 0.00036052799999999885, 0.0003861390000000006, 0.00035844399999999943, 0.0003587359999999984, 0.0003854859999999974, 0.00035769499999999815, 0.0003850279999999956, 0.000356861, 0.00035884799999999495, 0.0003849859999999969, 0.0003595700000000035, 0.0003571799999999986, 0.0003604999999999997, 0.00038558300000000184]</msg>
<status status="PASS" starttime="20201029 12:47:32.208" endtime="20201029 12:47:32.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.203" endtime="20201029 12:47:32.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:32.215" endtime="20201029 12:47:32.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.213" endtime="20201029 12:47:32.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.212" endtime="20201029 12:47:32.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.834" endtime="20201029 12:47:32.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.833" endtime="20201029 12:47:32.236"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.245" endtime="20201029 12:47:32.287"></status>
</kw>
<msg timestamp="20201029 12:47:32.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.243" endtime="20201029 12:47:32.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.289" endtime="20201029 12:47:32.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.292" endtime="20201029 12:47:32.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.240" endtime="20201029 12:47:32.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.238" endtime="20201029 12:47:32.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.301" endtime="20201029 12:47:32.588"></status>
</kw>
<msg timestamp="20201029 12:47:32.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024698306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025056792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.299" endtime="20201029 12:47:32.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024698306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025056792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.593" endtime="20201029 12:47:32.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.601" endtime="20201029 12:47:32.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.297" endtime="20201029 12:47:32.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.295" endtime="20201029 12:47:32.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:32.608" level="INFO">${RESULT} = [{'diff': 0.0003584860000000016}, {'diff': 0.0003565419999999979}, {'diff': 0.00038658299999999937}, {'diff': 0.00035694500000000087}, {'diff': 0.0003865689999999998}, {'diff': 0.00035705599999999796}...</msg>
<status status="PASS" starttime="20201029 12:47:32.605" endtime="20201029 12:47:32.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:32.612" level="INFO">${ACCURACY} = {'diff': [0.0003584860000000016, 0.0003565419999999979, 0.00038658299999999937, 0.00035694500000000087, 0.0003865689999999998, 0.00035705599999999796, 0.0003608200000000013, 0.0003598749999999991, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:32.609" endtime="20201029 12:47:32.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.617" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 12:47:32.616" endtime="20201029 12:47:32.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.619" level="INFO">VALUE: [0.0003584860000000016, 0.0003565419999999979, 0.00038658299999999937, 0.00035694500000000087, 0.0003865689999999998, 0.00035705599999999796, 0.0003608200000000013, 0.0003598749999999991, 0.0003571379999999999, 0.00038568099999999883, 0.00035856899999999955, 0.0003572219999999973, 0.0003604029999999987, 0.0003578470000000014, 0.00038630599999999946, 0.00038608299999999887, 0.0003602640000000025, 0.00035793000000000283, 0.00038538899999999987, 0.0003568190000000013, 0.0003857079999999985, 0.0003850980000000004, 0.0003580969999999947, 0.0003600269999999989, 0.00036077700000000656, 0.00036119500000000165, 0.00035876400000000447, 0.0003609030000000027, 0.0003864719999999988, 0.00035747199999999757, 0.0003613470000000049, 0.00038554199999999567, 0.00035723600000000383, 0.00036125000000000046, 0.0003865560000000032, 0.00036115200000000347, 0.00036069399999999474, 0.0003595969999999962, 0.00038666700000000026, 0.00035894399999999993, 0.00035692999999999836, 0.0003566389999999989, 0.0003588890000000011, 0.0003575280000000028, 0.00035974999999999896, 0.00038618099999999933, 0.0003611380000000039, 0.00035798599999999764, 0.00035665299999999844, 0.00038588900000000037]</msg>
<status status="PASS" starttime="20201029 12:47:32.618" endtime="20201029 12:47:32.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.613" endtime="20201029 12:47:32.621"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:32.625" endtime="20201029 12:47:32.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.623" endtime="20201029 12:47:32.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.622" endtime="20201029 12:47:32.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.237" endtime="20201029 12:47:32.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.236" endtime="20201029 12:47:32.645"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.655" endtime="20201029 12:47:32.689"></status>
</kw>
<msg timestamp="20201029 12:47:32.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.653" endtime="20201029 12:47:32.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.691" endtime="20201029 12:47:32.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.694" endtime="20201029 12:47:32.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.650" endtime="20201029 12:47:32.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.648" endtime="20201029 12:47:32.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.703" endtime="20201029 12:47:32.989"></status>
</kw>
<msg timestamp="20201029 12:47:32.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022018931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.701" endtime="20201029 12:47:32.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022018931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.993" endtime="20201029 12:47:33.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.002" endtime="20201029 12:47:33.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.699" endtime="20201029 12:47:33.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.697" endtime="20201029 12:47:33.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:33.008" level="INFO">${RESULT} = [{'diff': 0.00036076300000000006}, {'diff': 0.00038540299999999944}, {'diff': 0.00038623599999999814}, {'diff': 0.0003586519999999975}, {'diff': 0.00035827800000000007}, {'diff': 0.0003611389999999999...</msg>
<status status="PASS" starttime="20201029 12:47:33.005" endtime="20201029 12:47:33.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:33.013" level="INFO">${ACCURACY} = {'diff': [0.00036076300000000006, 0.00038540299999999944, 0.00038623599999999814, 0.0003586519999999975, 0.00035827800000000007, 0.0003611389999999999, 0.0003562219999999998, 0.00038649999999999796, 0...</msg>
<status status="PASS" starttime="20201029 12:47:33.009" endtime="20201029 12:47:33.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.017" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 12:47:33.016" endtime="20201029 12:47:33.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.020" level="INFO">VALUE: [0.00036076300000000006, 0.00038540299999999944, 0.00038623599999999814, 0.0003586519999999975, 0.00035827800000000007, 0.0003611389999999999, 0.0003562219999999998, 0.00038649999999999796, 0.0003572080000000012, 0.0003588890000000011, 0.0003571379999999999, 0.0003584730000000015, 0.0003857360000000011, 0.0003856390000000001, 0.0003858330000000021, 0.00035930500000000073, 0.00036029200000000164, 0.0003610139999999998, 0.0003855559999999987, 0.0003581939999999992, 0.0003564859999999996, 0.00035845800000000247, 0.0003594449999999999, 0.0003566389999999989, 0.000356666999999998, 0.0003850550000000022, 0.0003581939999999992, 0.0003566389999999989, 0.00038520899999999747, 0.00035976399999999853, 0.0003578470000000014, 0.0003605549999999985, 0.00035665299999999844, 0.0003857639999999968, 0.00036016600000000204, 0.0003582779999999966, 0.00035943000000000086, 0.0003566379999999994, 0.00035687499999999955, 0.00036020800000000075, 0.00038502800000000253, 0.0003572359999999969, 0.0003571530000000059, 0.00036030499999999827, 0.0003858059999999955, 0.0003608469999999975, 0.00035720799999999775, 0.00036037500000000305, 0.00035647199999999657, 0.00035905600000000343]</msg>
<status status="PASS" starttime="20201029 12:47:33.018" endtime="20201029 12:47:33.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.014" endtime="20201029 12:47:33.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:33.026" endtime="20201029 12:47:33.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.024" endtime="20201029 12:47:33.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.023" endtime="20201029 12:47:33.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.646" endtime="20201029 12:47:33.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.646" endtime="20201029 12:47:33.047"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.056" endtime="20201029 12:47:33.092"></status>
</kw>
<msg timestamp="20201029 12:47:33.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.054" endtime="20201029 12:47:33.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.094" endtime="20201029 12:47:33.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.096" endtime="20201029 12:47:33.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.052" endtime="20201029 12:47:33.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.049" endtime="20201029 12:47:33.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.106" endtime="20201029 12:47:33.391"></status>
</kw>
<msg timestamp="20201029 12:47:33.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0228895, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:33.104" endtime="20201029 12:47:33.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0228895, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:33.395" endtime="20201029 12:47:33.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.404" endtime="20201029 12:47:33.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.101" endtime="20201029 12:47:33.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.100" endtime="20201029 12:47:33.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:33.410" level="INFO">${RESULT} = [{'diff': 0.0003821809999999988}, {'diff': 0.0003849859999999969}, {'diff': 0.0003865699999999993}, {'diff': 0.0003561530000000014}, {'diff': 0.0003571249999999998}, {'diff': 0.0003574310000000018}, {...</msg>
<status status="PASS" starttime="20201029 12:47:33.407" endtime="20201029 12:47:33.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:33.416" level="INFO">${ACCURACY} = {'diff': [0.0003821809999999988, 0.0003849859999999969, 0.0003865699999999993, 0.0003561530000000014, 0.0003571249999999998, 0.0003574310000000018, 0.0003563609999999995, 0.0003863880000000014, 0.0003...</msg>
<status status="PASS" starttime="20201029 12:47:33.411" endtime="20201029 12:47:33.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.420" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 12:47:33.419" endtime="20201029 12:47:33.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.423" level="INFO">VALUE: [0.0003821809999999988, 0.0003849859999999969, 0.0003865699999999993, 0.0003561530000000014, 0.0003571249999999998, 0.0003574310000000018, 0.0003563609999999995, 0.0003863880000000014, 0.00036052799999999885, 0.00035695800000000097, 0.00038649999999999796, 0.0003591810000000001, 0.00038527699999999984, 0.0003863329999999991, 0.0003581120000000007, 0.00036047200000000057, 0.0003597359999999994, 0.00036088899999999965, 0.0003600830000000006, 0.0003605970000000007, 0.00035740300000000266, 0.00036080599999999824, 0.0003599999999999992, 0.00035784699999999794, 0.0003605139999999993, 0.0003582359999999979, 0.0003598749999999956, 0.0003583470000000019, 0.0003605139999999993, 0.0003597779999999981, 0.00038672199999999907, 0.0003859860000000048, 0.0003855560000000022, 0.0003605139999999993, 0.0003571669999999985, 0.0003577219999999978, 0.00035936099999999555, 0.00036037500000000305, 0.0003581390000000004, 0.0003595549999999975, 0.000358346999999995, 0.0003852499999999967, 0.0003609859999999937, 0.00036016600000000204, 0.0003853750000000003, 0.00036008299999999716, 0.00036013899999999543, 0.00038543000000000605, 0.0003589579999999995, 0.00036026399999999903]</msg>
<status status="PASS" starttime="20201029 12:47:33.421" endtime="20201029 12:47:33.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.416" endtime="20201029 12:47:33.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:33.428" endtime="20201029 12:47:33.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.426" endtime="20201029 12:47:33.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.425" endtime="20201029 12:47:33.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.048" endtime="20201029 12:47:33.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.047" endtime="20201029 12:47:33.449"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.458" endtime="20201029 12:47:33.495"></status>
</kw>
<msg timestamp="20201029 12:47:33.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.456" endtime="20201029 12:47:33.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.496" endtime="20201029 12:47:33.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.499" endtime="20201029 12:47:33.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.454" endtime="20201029 12:47:33.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.451" endtime="20201029 12:47:33.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.508" endtime="20201029 12:47:33.795"></status>
</kw>
<msg timestamp="20201029 12:47:33.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022778514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.507" endtime="20201029 12:47:33.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022778514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.799" endtime="20201029 12:47:33.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.808" endtime="20201029 12:47:33.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.504" endtime="20201029 12:47:33.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.502" endtime="20201029 12:47:33.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:33.815" level="INFO">${RESULT} = [{'diff': 0.00036618100000000015}, {'diff': 0.0003565140000000022}, {'diff': 0.00038572199999999807}, {'diff': 0.0003602359999999999}, {'diff': 0.0003609580000000015}, {'diff': 0.00038536100000000073}...</msg>
<status status="PASS" starttime="20201029 12:47:33.811" endtime="20201029 12:47:33.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:33.819" level="INFO">${ACCURACY} = {'diff': [0.00036618100000000015, 0.0003565140000000022, 0.00038572199999999807, 0.0003602359999999999, 0.0003609580000000015, 0.00038536100000000073, 0.0003576389999999999, 0.0003573889999999996, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:33.816" endtime="20201029 12:47:33.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.824" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 12:47:33.822" endtime="20201029 12:47:33.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.826" level="INFO">VALUE: [0.00036618100000000015, 0.0003565140000000022, 0.00038572199999999807, 0.0003602359999999999, 0.0003609580000000015, 0.00038536100000000073, 0.0003576389999999999, 0.0003573889999999996, 0.0003569310000000013, 0.0003595000000000022, 0.00035983399999999985, 0.00035623600000000283, 0.00035898599999999864, 0.0003597089999999997, 0.00035806899999999905, 0.00035813799999999743, 0.0003593329999999999, 0.00035629199999999764, 0.0003609030000000027, 0.00035797199999999807, 0.0003864300000000001, 0.0003571249999999998, 0.000358667, 0.0003852780000000028, 0.0003609160000000028, 0.0003588890000000011, 0.0003596109999999958, 0.00035670799999999725, 0.00036048600000000014, 0.0003608889999999962, 0.0003576950000000051, 0.00035765299999999944, 0.000385804999999996, 0.00038606900000000277, 0.0003858330000000021, 0.00035700000000000315, 0.00036047200000000057, 0.0003849719999999973, 0.000357666999999999, 0.0003569730000000035, 0.00035812499999999386, 0.00035629100000000163, 0.0003572219999999973, 0.0003602909999999987, 0.0003610969999999977, 0.00038562500000000055, 0.00036120800000000175, 0.0003570830000000011, 0.0003561809999999971, 0.00036069500000000115]</msg>
<status status="PASS" starttime="20201029 12:47:33.825" endtime="20201029 12:47:33.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.820" endtime="20201029 12:47:33.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:33.831" endtime="20201029 12:47:33.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.830" endtime="20201029 12:47:33.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.828" endtime="20201029 12:47:33.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.450" endtime="20201029 12:47:33.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.449" endtime="20201029 12:47:33.852"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.861" endtime="20201029 12:47:33.900"></status>
</kw>
<msg timestamp="20201029 12:47:33.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.860" endtime="20201029 12:47:33.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.902" endtime="20201029 12:47:33.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.905" endtime="20201029 12:47:33.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.857" endtime="20201029 12:47:33.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.855" endtime="20201029 12:47:33.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.914" endtime="20201029 12:47:34.200"></status>
</kw>
<msg timestamp="20201029 12:47:34.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026119167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026496472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.912" endtime="20201029 12:47:34.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026119167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026496472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.205" endtime="20201029 12:47:34.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.213" endtime="20201029 12:47:34.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.910" endtime="20201029 12:47:34.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.908" endtime="20201029 12:47:34.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:34.220" level="INFO">${RESULT} = [{'diff': 0.0003773050000000014}, {'diff': 0.00036079199999999867}, {'diff': 0.0003575969999999977}, {'diff': 0.00035687499999999955}, {'diff': 0.0003868050000000005}, {'diff': 0.00036030500000000173}...</msg>
<status status="PASS" starttime="20201029 12:47:34.216" endtime="20201029 12:47:34.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:34.224" level="INFO">${ACCURACY} = {'diff': [0.0003773050000000014, 0.00036079199999999867, 0.0003575969999999977, 0.00035687499999999955, 0.0003868050000000005, 0.00036030500000000173, 0.0003587769999999976, 0.00036080499999999877, 0....</msg>
<status status="PASS" starttime="20201029 12:47:34.221" endtime="20201029 12:47:34.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.228" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 12:47:34.227" endtime="20201029 12:47:34.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.231" level="INFO">VALUE: [0.0003773050000000014, 0.00036079199999999867, 0.0003575969999999977, 0.00035687499999999955, 0.0003868050000000005, 0.00036030500000000173, 0.0003587769999999976, 0.00036080499999999877, 0.0003589579999999995, 0.00038534700000000116, 0.0003584449999999989, 0.0003850689999999983, 0.000385304999999999, 0.0003606940000000017, 0.00035980499999999777, 0.0003587219999999988, 0.00036091700000000226, 0.0003585140000000042, 0.0003611390000000034, 0.0003593890000000016, 0.00036040299999999525, 0.00038672199999999907, 0.00035880599999999624, 0.0003597909999999982, 0.0003565830000000006, 0.00036112499999999687, 0.00036032000000000425, 0.00035866600000000054, 0.00036097200000000107, 0.000359458, 0.0003580419999999959, 0.0003591670000000005, 0.00035955500000000445, 0.0003612779999999996, 0.0003852639999999963, 0.0003864300000000001, 0.000385820000000002, 0.0003852919999999954, 0.00036052799999999885, 0.0003586250000000013, 0.00035642999999999786, 0.0003605139999999993, 0.0003858190000000025, 0.0003595700000000035, 0.00035791699999999926, 0.0003865139999999975, 0.000356457999999997, 0.000359458, 0.00038627799999999685, 0.00036047200000000057]</msg>
<status status="PASS" starttime="20201029 12:47:34.230" endtime="20201029 12:47:34.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.225" endtime="20201029 12:47:34.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:34.237" endtime="20201029 12:47:34.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.235" endtime="20201029 12:47:34.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.234" endtime="20201029 12:47:34.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.853" endtime="20201029 12:47:34.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.853" endtime="20201029 12:47:34.258"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.267" endtime="20201029 12:47:34.302"></status>
</kw>
<msg timestamp="20201029 12:47:34.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.265" endtime="20201029 12:47:34.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.304" endtime="20201029 12:47:34.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.306" endtime="20201029 12:47:34.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.263" endtime="20201029 12:47:34.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.260" endtime="20201029 12:47:34.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.316" endtime="20201029 12:47:34.602"></status>
</kw>
<msg timestamp="20201029 12:47:34.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022310833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.314" endtime="20201029 12:47:34.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022310833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.606" endtime="20201029 12:47:34.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.615" endtime="20201029 12:47:34.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.311" endtime="20201029 12:47:34.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.310" endtime="20201029 12:47:34.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:34.622" level="INFO">${RESULT} = [{'diff': 0.0003657230000000018}, {'diff': 0.00035923600000000236}, {'diff': 0.0003607770000000031}, {'diff': 0.00035827800000000007}, {'diff': 0.0003604999999999997}, {'diff': 0.0003858750000000008},...</msg>
<status status="PASS" starttime="20201029 12:47:34.619" endtime="20201029 12:47:34.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:34.628" level="INFO">${ACCURACY} = {'diff': [0.0003657230000000018, 0.00035923600000000236, 0.0003607770000000031, 0.00035827800000000007, 0.0003604999999999997, 0.0003858750000000008, 0.00035905599999999996, 0.00038536100000000073, 0....</msg>
<status status="PASS" starttime="20201029 12:47:34.623" endtime="20201029 12:47:34.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.632" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 12:47:34.631" endtime="20201029 12:47:34.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.635" level="INFO">VALUE: [0.0003657230000000018, 0.00035923600000000236, 0.0003607770000000031, 0.00035827800000000007, 0.0003604999999999997, 0.0003858750000000008, 0.00035905599999999996, 0.00038536100000000073, 0.00038645799999999925, 0.000359652999999998, 0.000359652999999998, 0.0003593470000000029, 0.00035673599999999986, 0.0003563339999999998, 0.0003588329999999994, 0.0003862499999999977, 0.0003849999999999999, 0.0003596250000000023, 0.0003581950000000021, 0.00038576400000000025, 0.00035677799999999857, 0.0003606939999999982, 0.0003608610000000005, 0.0003863750000000013, 0.00035912499999999486, 0.0003579860000000046, 0.00036059800000000364, 0.00035634700000000685, 0.0003572500000000034, 0.00038591600000000004, 0.00035954099999999795, 0.00036009700000000366, 0.0003863200000000025, 0.00035841699999999976, 0.0003860420000000031, 0.0003606390000000029, 0.000358569000000003, 0.0003852780000000028, 0.00035980599999999724, 0.0003865279999999971, 0.0003862640000000042, 0.0003607230000000003, 0.00038516699999999876, 0.0003607090000000007, 0.0003852499999999967, 0.0003612230000000008, 0.00038567999999999936, 0.0003852499999999967, 0.0003864309999999996, 0.000356375000000006]</msg>
<status status="PASS" starttime="20201029 12:47:34.633" endtime="20201029 12:47:34.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.628" endtime="20201029 12:47:34.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:34.644" endtime="20201029 12:47:34.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.642" endtime="20201029 12:47:34.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.637" endtime="20201029 12:47:34.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.259" endtime="20201029 12:47:34.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.258" endtime="20201029 12:47:34.668"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.688" endtime="20201029 12:47:34.724"></status>
</kw>
<msg timestamp="20201029 12:47:34.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.685" endtime="20201029 12:47:34.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.725" endtime="20201029 12:47:34.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.728" endtime="20201029 12:47:34.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.679" endtime="20201029 12:47:34.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.674" endtime="20201029 12:47:34.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.737" endtime="20201029 12:47:35.029"></status>
</kw>
<msg timestamp="20201029 12:47:35.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037042472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037406736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.736" endtime="20201029 12:47:35.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037042472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037406736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.034" endtime="20201029 12:47:35.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.042" endtime="20201029 12:47:35.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.733" endtime="20201029 12:47:35.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.731" endtime="20201029 12:47:35.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:35.049" level="INFO">${RESULT} = [{'diff': 0.00036426400000000303}, {'diff': 0.00035647199999999657}, {'diff': 0.0003602359999999999}, {'diff': 0.0003598329999999969}, {'diff': 0.00035970800000000025}, {'diff': 0.00038502800000000253...</msg>
<status status="PASS" starttime="20201029 12:47:35.046" endtime="20201029 12:47:35.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:35.053" level="INFO">${ACCURACY} = {'diff': [0.00036426400000000303, 0.00035647199999999657, 0.0003602359999999999, 0.0003598329999999969, 0.00035970800000000025, 0.00038502800000000253, 0.0003608469999999975, 0.0003597219999999998, 0....</msg>
<status status="PASS" starttime="20201029 12:47:35.050" endtime="20201029 12:47:35.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.057" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 12:47:35.056" endtime="20201029 12:47:35.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.060" level="INFO">VALUE: [0.00036426400000000303, 0.00035647199999999657, 0.0003602359999999999, 0.0003598329999999969, 0.00035970800000000025, 0.00038502800000000253, 0.0003608469999999975, 0.0003597219999999998, 0.00035998599999999964, 0.0003855000000000039, 0.00035998599999999964, 0.0003580559999999955, 0.0003588340000000023, 0.0003569170000000052, 0.0003579020000000002, 0.0003855269999999966, 0.0003566810000000045, 0.00035776399999999653, 0.0003862639999999973, 0.00038533299999999465, 0.0003610969999999977, 0.00036097200000000107, 0.000360346999999997, 0.00035637499999999905, 0.000357861000000001, 0.0003569029999999987, 0.00035705600000000143, 0.00038557000000000174, 0.00035848599999999814, 0.0003862499999999977, 0.0003565270000000023, 0.0003575140000000032, 0.00035844399999999943, 0.00036080499999999877, 0.0003855840000000013, 0.0003857360000000046, 0.0003569170000000052, 0.0003851389999999996, 0.0003601109999999963, 0.00035920799999999975, 0.0003612360000000009, 0.00035826400000000397, 0.0003565830000000006, 0.0003575410000000029, 0.00035680599999999424, 0.00035670799999999725, 0.00036050000000000665, 0.00038552800000000303, 0.00035908299999999616, 0.00035879199999999667]</msg>
<status status="PASS" starttime="20201029 12:47:35.058" endtime="20201029 12:47:35.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.054" endtime="20201029 12:47:35.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:35.065" endtime="20201029 12:47:35.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.063" endtime="20201029 12:47:35.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.062" endtime="20201029 12:47:35.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.669" endtime="20201029 12:47:35.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.668" endtime="20201029 12:47:35.086"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.094" endtime="20201029 12:47:35.132"></status>
</kw>
<msg timestamp="20201029 12:47:35.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.093" endtime="20201029 12:47:35.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.133" endtime="20201029 12:47:35.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.136" endtime="20201029 12:47:35.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.090" endtime="20201029 12:47:35.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.088" endtime="20201029 12:47:35.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.145" endtime="20201029 12:47:35.450"></status>
</kw>
<msg timestamp="20201029 12:47:35.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023462, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02383025, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:47:35.143" endtime="20201029 12:47:35.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023462, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02383025, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:47:35.454" endtime="20201029 12:47:35.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.462" endtime="20201029 12:47:35.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.141" endtime="20201029 12:47:35.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.139" endtime="20201029 12:47:35.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:35.469" level="INFO">${RESULT} = [{'diff': 0.0003682500000000005}, {'diff': 0.00035956900000000055}, {'diff': 0.0003575969999999977}, {'diff': 0.00035741699999999876}, {'diff': 0.0003858469999999982}, {'diff': 0.00038498600000000036}...</msg>
<status status="PASS" starttime="20201029 12:47:35.466" endtime="20201029 12:47:35.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:35.473" level="INFO">${ACCURACY} = {'diff': [0.0003682500000000005, 0.00035956900000000055, 0.0003575969999999977, 0.00035741699999999876, 0.0003858469999999982, 0.00038498600000000036, 0.0003584030000000002, 0.000358764000000001, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:35.470" endtime="20201029 12:47:35.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.477" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 12:47:35.476" endtime="20201029 12:47:35.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.480" level="INFO">VALUE: [0.0003682500000000005, 0.00035956900000000055, 0.0003575969999999977, 0.00035741699999999876, 0.0003858469999999982, 0.00038498600000000036, 0.0003584030000000002, 0.000358764000000001, 0.00035705600000000143, 0.0003607909999999992, 0.0003578480000000009, 0.0003852500000000002, 0.00038612500000000105, 0.00036076399999999953, 0.0003851529999999992, 0.0003574029999999992, 0.00038538899999999987, 0.00035875000000000143, 0.00038627700000000084, 0.000356861, 0.00035643099999999733, 0.0003610689999999986, 0.0003580969999999947, 0.000359555999999997, 0.00035776399999999653, 0.0003596659999999946, 0.00036052799999999885, 0.00036047200000000057, 0.00036093100000000183, 0.00036027800000000554, 0.00035998599999999964, 0.0003587229999999983, 0.0003598480000000029, 0.0003586939999999997, 0.0003575280000000028, 0.00035633400000000676, 0.00038572199999999807, 0.00038536100000000073, 0.00036061100000000373, 0.0003590139999999978, 0.0003568889999999991, 0.0003602359999999999, 0.0003593749999999951, 0.00036111100000000423, 0.0003566939999999977, 0.0003591810000000001, 0.00035658400000000007, 0.00035858399999999513, 0.0003568050000000017, 0.0003850560000000017]</msg>
<status status="PASS" starttime="20201029 12:47:35.479" endtime="20201029 12:47:35.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.474" endtime="20201029 12:47:35.482"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:35.486" endtime="20201029 12:47:35.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.484" endtime="20201029 12:47:35.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.483" endtime="20201029 12:47:35.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.087" endtime="20201029 12:47:35.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.086" endtime="20201029 12:47:35.507"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.515" endtime="20201029 12:47:35.553"></status>
</kw>
<msg timestamp="20201029 12:47:35.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.514" endtime="20201029 12:47:35.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.555" endtime="20201029 12:47:35.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.557" endtime="20201029 12:47:35.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.511" endtime="20201029 12:47:35.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.509" endtime="20201029 12:47:35.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.566" endtime="20201029 12:47:35.852"></status>
</kw>
<msg timestamp="20201029 12:47:35.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024547417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024916264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.565" endtime="20201029 12:47:35.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024547417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024916264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.856" endtime="20201029 12:47:35.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.864" endtime="20201029 12:47:35.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.562" endtime="20201029 12:47:35.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.560" endtime="20201029 12:47:35.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:35.871" level="INFO">${RESULT} = [{'diff': 0.000368847000000002}, {'diff': 0.00036080499999999877}, {'diff': 0.0003864719999999988}, {'diff': 0.0003571809999999981}, {'diff': 0.0003566670000000015}, {'diff': 0.00038565300000000316}, ...</msg>
<status status="PASS" starttime="20201029 12:47:35.868" endtime="20201029 12:47:35.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:35.878" level="INFO">${ACCURACY} = {'diff': [0.000368847000000002, 0.00036080499999999877, 0.0003864719999999988, 0.0003571809999999981, 0.0003566670000000015, 0.00038565300000000316, 0.00035641699999999776, 0.0003597219999999998, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:35.872" endtime="20201029 12:47:35.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.883" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 12:47:35.882" endtime="20201029 12:47:35.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.885" level="INFO">VALUE: [0.000368847000000002, 0.00036080499999999877, 0.0003864719999999988, 0.0003571809999999981, 0.0003566670000000015, 0.00038565300000000316, 0.00035641699999999776, 0.0003597219999999998, 0.00036062499999999983, 0.0003853750000000003, 0.00038648700000000133, 0.00038586100000000123, 0.0003848469999999972, 0.0003593329999999999, 0.0003578199999999983, 0.00035984699999999994, 0.00035993000000000136, 0.00036029200000000164, 0.00035870799999999925, 0.00035659700000000016, 0.000360959000000001, 0.00035950000000000565, 0.0003583890000000006, 0.0003582500000000044, 0.0003605139999999993, 0.00035634700000000685, 0.00035929199999999717, 0.00036002799999999835, 0.0003582500000000044, 0.00035862499999999436, 0.000360569000000005, 0.0003605139999999993, 0.00038597300000000473, 0.0003610559999999985, 0.00035655500000000145, 0.0003603199999999973, 0.00036016600000000204, 0.0003600559999999975, 0.0003856659999999998, 0.00036002799999999835, 0.00035929199999999717, 0.00035698599999999664, 0.00035726399999999603, 0.00035965300000000144, 0.00036048600000000014, 0.00035929199999999717, 0.00035993100000000083, 0.00035861100000000173, 0.0003605419999999984, 0.00035658400000000007]</msg>
<status status="PASS" starttime="20201029 12:47:35.884" endtime="20201029 12:47:35.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.879" endtime="20201029 12:47:35.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:35.890" endtime="20201029 12:47:35.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.889" endtime="20201029 12:47:35.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.888" endtime="20201029 12:47:35.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.507" endtime="20201029 12:47:35.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.507" endtime="20201029 12:47:35.911"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.920" endtime="20201029 12:47:35.955"></status>
</kw>
<msg timestamp="20201029 12:47:35.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.918" endtime="20201029 12:47:35.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.956" endtime="20201029 12:47:35.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.959" endtime="20201029 12:47:35.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.916" endtime="20201029 12:47:35.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.914" endtime="20201029 12:47:35.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.968" endtime="20201029 12:47:36.254"></status>
</kw>
<msg timestamp="20201029 12:47:36.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022248514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.966" endtime="20201029 12:47:36.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022248514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.259" endtime="20201029 12:47:36.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.267" endtime="20201029 12:47:36.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.964" endtime="20201029 12:47:36.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.962" endtime="20201029 12:47:36.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:36.273" level="INFO">${RESULT} = [{'diff': 0.00037883300000000203}, {'diff': 0.00036007000000000053}, {'diff': 0.0003601670000000015}, {'diff': 0.0003593749999999986}, {'diff': 0.0003575839999999976}, {'diff': 0.0003860000000000009},...</msg>
<status status="PASS" starttime="20201029 12:47:36.270" endtime="20201029 12:47:36.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:36.277" level="INFO">${ACCURACY} = {'diff': [0.00037883300000000203, 0.00036007000000000053, 0.0003601670000000015, 0.0003593749999999986, 0.0003575839999999976, 0.0003860000000000009, 0.0003610969999999977, 0.00035926399999999803, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:36.274" endtime="20201029 12:47:36.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.282" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 12:47:36.281" endtime="20201029 12:47:36.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.284" level="INFO">VALUE: [0.00037883300000000203, 0.00036007000000000053, 0.0003601670000000015, 0.0003593749999999986, 0.0003575839999999976, 0.0003860000000000009, 0.0003610969999999977, 0.00035926399999999803, 0.00035823600000000136, 0.0003583470000000019, 0.00035947200000000304, 0.00035915300000000094, 0.0003580279999999998, 0.00036074999999999996, 0.0003590830000000031, 0.00035658400000000007, 0.0003581390000000004, 0.00035952799999999785, 0.000385110999999997, 0.0003561250000000023, 0.00036108299999999816, 0.0003852919999999989, 0.00035682000000000075, 0.0003566249999999993, 0.00038507000000000124, 0.00035683399999999685, 0.0003600830000000041, 0.00036004099999999845, 0.0003601390000000024, 0.00038568099999999883, 0.00038602800000000353, 0.00035887500000000155, 0.00038588900000000037, 0.0003585419999999964, 0.00035831899999999584, 0.0003567500000000029, 0.00035970800000000025, 0.00036058299999999766, 0.0003595280000000048, 0.0003579999999999972, 0.0003579860000000046, 0.0003585419999999964, 0.0003571939999999982, 0.0003576810000000055, 0.0003563060000000007, 0.0003570830000000011, 0.0003563609999999995, 0.0003592359999999989, 0.00035770799999999825, 0.0003595419999999974]</msg>
<status status="PASS" starttime="20201029 12:47:36.283" endtime="20201029 12:47:36.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.278" endtime="20201029 12:47:36.286"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:36.289" endtime="20201029 12:47:36.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.288" endtime="20201029 12:47:36.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.287" endtime="20201029 12:47:36.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.912" endtime="20201029 12:47:36.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.911" endtime="20201029 12:47:36.310"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.319" endtime="20201029 12:47:36.358"></status>
</kw>
<msg timestamp="20201029 12:47:36.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.317" endtime="20201029 12:47:36.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.359" endtime="20201029 12:47:36.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.362" endtime="20201029 12:47:36.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.315" endtime="20201029 12:47:36.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.312" endtime="20201029 12:47:36.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.371" endtime="20201029 12:47:36.657"></status>
</kw>
<msg timestamp="20201029 12:47:36.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024950986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025316903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.369" endtime="20201029 12:47:36.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024950986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025316903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.661" endtime="20201029 12:47:36.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.669" endtime="20201029 12:47:36.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.367" endtime="20201029 12:47:36.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.365" endtime="20201029 12:47:36.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:36.676" level="INFO">${RESULT} = [{'diff': 0.0003659170000000003}, {'diff': 0.0003588059999999997}, {'diff': 0.00035925000000000193}, {'diff': 0.0003860279999999966}, {'diff': 0.0003591389999999979}, {'diff': 0.00036061100000000026},...</msg>
<status status="PASS" starttime="20201029 12:47:36.673" endtime="20201029 12:47:36.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:36.680" level="INFO">${ACCURACY} = {'diff': [0.0003659170000000003, 0.0003588059999999997, 0.00035925000000000193, 0.0003860279999999966, 0.0003591389999999979, 0.00036061100000000026, 0.00035811100000000123, 0.0003858199999999985, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:36.677" endtime="20201029 12:47:36.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.685" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 12:47:36.684" endtime="20201029 12:47:36.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.687" level="INFO">VALUE: [0.0003659170000000003, 0.0003588059999999997, 0.00035925000000000193, 0.0003860279999999966, 0.0003591389999999979, 0.00036061100000000026, 0.00035811100000000123, 0.0003858199999999985, 0.0003611389999999999, 0.00038545799999999825, 0.0003611389999999999, 0.0003585969999999987, 0.0003863750000000013, 0.00035883300000000284, 0.00036033400000000035, 0.0003605970000000007, 0.0003600689999999976, 0.0003860840000000018, 0.0003577359999999974, 0.0003862499999999977, 0.00036011100000000323, 0.0003564590000000034, 0.00035924999999999846, 0.00035677800000000204, 0.00035855600000000293, 0.00038656900000000327, 0.00036026399999999903, 0.0003581809999999991, 0.0003849859999999969, 0.0003608749999999966, 0.00036069500000000115, 0.00036024999999999946, 0.00035851300000000474, 0.0003606109999999968, 0.0003596940000000007, 0.00038502800000000253, 0.0003566809999999976, 0.0003584720000000055, 0.000356666999999998, 0.00035826399999999703, 0.0003608469999999975, 0.0003563469999999999, 0.000358861000000002, 0.00035641699999999776, 0.00038588900000000037, 0.0003582920000000031, 0.0003858060000000024, 0.0003607909999999992, 0.000386207999999999, 0.0003860840000000018]</msg>
<status status="PASS" starttime="20201029 12:47:36.686" endtime="20201029 12:47:36.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.681" endtime="20201029 12:47:36.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:36.693" endtime="20201029 12:47:36.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.692" endtime="20201029 12:47:36.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.690" endtime="20201029 12:47:36.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.311" endtime="20201029 12:47:36.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.310" endtime="20201029 12:47:36.714"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.723" endtime="20201029 12:47:36.764"></status>
</kw>
<msg timestamp="20201029 12:47:36.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.721" endtime="20201029 12:47:36.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.766" endtime="20201029 12:47:36.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.768" endtime="20201029 12:47:36.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.718" endtime="20201029 12:47:36.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.716" endtime="20201029 12:47:36.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.778" endtime="20201029 12:47:37.064"></status>
</kw>
<msg timestamp="20201029 12:47:37.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022935208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023313958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.776" endtime="20201029 12:47:37.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022935208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023313958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.068" endtime="20201029 12:47:37.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.076" endtime="20201029 12:47:37.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.774" endtime="20201029 12:47:37.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.772" endtime="20201029 12:47:37.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:37.083" level="INFO">${RESULT} = [{'diff': 0.0003787500000000006}, {'diff': 0.00035841699999999976}, {'diff': 0.0003611939999999987}, {'diff': 0.000360151999999999}, {'diff': 0.0003603749999999996}, {'diff': 0.00038541599999999954}, ...</msg>
<status status="PASS" starttime="20201029 12:47:37.080" endtime="20201029 12:47:37.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:37.088" level="INFO">${ACCURACY} = {'diff': [0.0003787500000000006, 0.00035841699999999976, 0.0003611939999999987, 0.000360151999999999, 0.0003603749999999996, 0.00038541599999999954, 0.00036080599999999824, 0.00038530500000000245, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:37.084" endtime="20201029 12:47:37.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.092" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 12:47:37.091" endtime="20201029 12:47:37.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.095" level="INFO">VALUE: [0.0003787500000000006, 0.00035841699999999976, 0.0003611939999999987, 0.000360151999999999, 0.0003603749999999996, 0.00038541599999999954, 0.00036080599999999824, 0.00038530500000000245, 0.0003603749999999996, 0.000357861000000001, 0.00036038899999999915, 0.0003857639999999968, 0.0003850139999999995, 0.0003581250000000008, 0.000357764, 0.00038572200000000154, 0.00036024999999999946, 0.0003591670000000005, 0.0003580549999999995, 0.00035941700000000076, 0.00038540299999999944, 0.0003590410000000009, 0.0003564440000000009, 0.00038558300000000184, 0.00036136099999999755, 0.00038540299999999944, 0.00036095899999999403, 0.0003603749999999961, 0.0003576250000000003, 0.000386417, 0.0003585280000000038, 0.00035737500000000005, 0.00038673599999999864, 0.0003586250000000013, 0.0003571249999999998, 0.00035930599999999674, 0.0003858330000000021, 0.00036011100000000323, 0.00035708400000000057, 0.0003598890000000021, 0.0003857780000000033, 0.00038579200000000285, 0.000360943999999995, 0.0003857639999999968, 0.0003567779999999951, 0.00035716599999999904, 0.00038588900000000037, 0.00035691699999999826, 0.00035709700000000066, 0.00038594499999999865]</msg>
<status status="PASS" starttime="20201029 12:47:37.093" endtime="20201029 12:47:37.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.088" endtime="20201029 12:47:37.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:37.100" endtime="20201029 12:47:37.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.098" endtime="20201029 12:47:37.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.097" endtime="20201029 12:47:37.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.715" endtime="20201029 12:47:37.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.714" endtime="20201029 12:47:37.120"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.129" endtime="20201029 12:47:37.166"></status>
</kw>
<msg timestamp="20201029 12:47:37.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.128" endtime="20201029 12:47:37.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.168" endtime="20201029 12:47:37.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.170" endtime="20201029 12:47:37.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.125" endtime="20201029 12:47:37.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.123" endtime="20201029 12:47:37.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.179" endtime="20201029 12:47:37.466"></status>
</kw>
<msg timestamp="20201029 12:47:37.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023351486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023737208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.178" endtime="20201029 12:47:37.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023351486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023737208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.470" endtime="20201029 12:47:37.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.478" endtime="20201029 12:47:37.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.175" endtime="20201029 12:47:37.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.173" endtime="20201029 12:47:37.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:37.485" level="INFO">${RESULT} = [{'diff': 0.00038572199999999807}, {'diff': 0.0003855000000000004}, {'diff': 0.0003855840000000013}, {'diff': 0.0003607090000000007}, {'diff': 0.0003572639999999995}, {'diff': 0.00035665299999999844},...</msg>
<status status="PASS" starttime="20201029 12:47:37.482" endtime="20201029 12:47:37.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:37.489" level="INFO">${ACCURACY} = {'diff': [0.00038572199999999807, 0.0003855000000000004, 0.0003855840000000013, 0.0003607090000000007, 0.0003572639999999995, 0.00035665299999999844, 0.00035794399999999893, 0.00035851400000000075, 0....</msg>
<status status="PASS" starttime="20201029 12:47:37.486" endtime="20201029 12:47:37.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.493" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 12:47:37.492" endtime="20201029 12:47:37.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.496" level="INFO">VALUE: [0.00038572199999999807, 0.0003855000000000004, 0.0003855840000000013, 0.0003607090000000007, 0.0003572639999999995, 0.00035665299999999844, 0.00035794399999999893, 0.00035851400000000075, 0.0003579999999999972, 0.0003591390000000014, 0.0003566950000000006, 0.0003578190000000023, 0.0003565700000000005, 0.00036044399999999796, 0.0003607220000000008, 0.00035673599999999986, 0.0003600420000000014, 0.00035832000000000225, 0.0003573480000000004, 0.0003865279999999971, 0.00035830499999999973, 0.0003565830000000006, 0.0003866939999999999, 0.0003584860000000051, 0.00035987500000000255, 0.00035677800000000204, 0.00036098600000000064, 0.00035843099999999933, 0.00036047200000000057, 0.00038631999999999556, 0.00038651400000000447, 0.00035927700000000506, 0.000360458000000001, 0.00035759700000000116, 0.0003855420000000026, 0.0003866949999999994, 0.00038672299999999854, 0.0003597920000000046, 0.0003610000000000002, 0.00038672299999999854, 0.00035809800000000114, 0.0003853060000000019, 0.0003600139999999988, 0.00038586100000000123, 0.0003606390000000029, 0.00035816600000000004, 0.000358346999999995, 0.0003611800000000026, 0.0003599860000000066, 0.0003865970000000024]</msg>
<status status="PASS" starttime="20201029 12:47:37.495" endtime="20201029 12:47:37.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.490" endtime="20201029 12:47:37.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:37.501" endtime="20201029 12:47:37.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.499" endtime="20201029 12:47:37.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.498" endtime="20201029 12:47:37.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.121" endtime="20201029 12:47:37.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.121" endtime="20201029 12:47:37.522"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.531" endtime="20201029 12:47:37.568"></status>
</kw>
<msg timestamp="20201029 12:47:37.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.529" endtime="20201029 12:47:37.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.569" endtime="20201029 12:47:37.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.572" endtime="20201029 12:47:37.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.527" endtime="20201029 12:47:37.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.524" endtime="20201029 12:47:37.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.581" endtime="20201029 12:47:37.867"></status>
</kw>
<msg timestamp="20201029 12:47:37.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024086222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02446225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:37.580" endtime="20201029 12:47:37.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024086222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02446225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:37.871" endtime="20201029 12:47:37.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.879" endtime="20201029 12:47:37.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.577" endtime="20201029 12:47:37.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.575" endtime="20201029 12:47:37.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:37.885" level="INFO">${RESULT} = [{'diff': 0.0003760280000000005}, {'diff': 0.0003568189999999978}, {'diff': 0.0003850420000000021}, {'diff': 0.0003610840000000011}, {'diff': 0.0003570830000000011}, {'diff': 0.00035930500000000073}, ...</msg>
<status status="PASS" starttime="20201029 12:47:37.882" endtime="20201029 12:47:37.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:37.890" level="INFO">${ACCURACY} = {'diff': [0.0003760280000000005, 0.0003568189999999978, 0.0003850420000000021, 0.0003610840000000011, 0.0003570830000000011, 0.00035930500000000073, 0.00035869499999999915, 0.00038640200000000097, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:37.887" endtime="20201029 12:47:37.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.894" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 12:47:37.893" endtime="20201029 12:47:37.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.897" level="INFO">VALUE: [0.0003760280000000005, 0.0003568189999999978, 0.0003850420000000021, 0.0003610840000000011, 0.0003570830000000011, 0.00035930500000000073, 0.00035869499999999915, 0.00038640200000000097, 0.0003580549999999995, 0.0003861390000000006, 0.00036080599999999824, 0.0003861530000000002, 0.0003564859999999996, 0.00035809700000000166, 0.0003563190000000008, 0.0003584160000000003, 0.00035880500000000023, 0.0003598190000000008, 0.0003854309999999986, 0.00035893000000000036, 0.00035952799999999785, 0.00038562500000000055, 0.0003849450000000046, 0.000356457999999997, 0.0003590419999999969, 0.00035676399999999553, 0.0003597920000000046, 0.0003565830000000006, 0.00038529200000000235, 0.0003858750000000008, 0.00035941700000000076, 0.0003587370000000048, 0.0003562779999999946, 0.00038638900000000087, 0.00035965300000000144, 0.0003851939999999984, 0.00036029199999999817, 0.00038648699999999786, 0.0003599020000000022, 0.0003595419999999974, 0.00035765299999999944, 0.00035641699999999776, 0.00036026400000000597, 0.00035888800000000165, 0.00038629099999999694, 0.0003582089999999982, 0.000385319000000002, 0.00035755500000000245, 0.00036015300000000194, 0.000357346999999994]</msg>
<status status="PASS" starttime="20201029 12:47:37.895" endtime="20201029 12:47:37.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.891" endtime="20201029 12:47:37.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:37.906" endtime="20201029 12:47:37.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.905" endtime="20201029 12:47:37.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.904" endtime="20201029 12:47:37.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.523" endtime="20201029 12:47:37.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.522" endtime="20201029 12:47:37.927"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.936" endtime="20201029 12:47:37.970"></status>
</kw>
<msg timestamp="20201029 12:47:37.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.935" endtime="20201029 12:47:37.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.972" endtime="20201029 12:47:37.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.975" endtime="20201029 12:47:37.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.932" endtime="20201029 12:47:37.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.930" endtime="20201029 12:47:37.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.984" endtime="20201029 12:47:38.270"></status>
</kw>
<msg timestamp="20201029 12:47:38.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020430306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020799194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.982" endtime="20201029 12:47:38.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020430306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020799194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.274" endtime="20201029 12:47:38.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.282" endtime="20201029 12:47:38.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.980" endtime="20201029 12:47:38.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.978" endtime="20201029 12:47:38.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:38.289" level="INFO">${RESULT} = [{'diff': 0.00036888800000000124}, {'diff': 0.0003562080000000002}, {'diff': 0.00038612500000000105}, {'diff': 0.0003585000000000012}, {'diff': 0.0003574860000000006}, {'diff': 0.00035961099999999926}...</msg>
<status status="PASS" starttime="20201029 12:47:38.286" endtime="20201029 12:47:38.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:38.294" level="INFO">${ACCURACY} = {'diff': [0.00036888800000000124, 0.0003562080000000002, 0.00038612500000000105, 0.0003585000000000012, 0.0003574860000000006, 0.00035961099999999926, 0.00038609699999999844, 0.00035720799999999775, 0...</msg>
<status status="PASS" starttime="20201029 12:47:38.290" endtime="20201029 12:47:38.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.298" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 12:47:38.297" endtime="20201029 12:47:38.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.301" level="INFO">VALUE: [0.00036888800000000124, 0.0003562080000000002, 0.00038612500000000105, 0.0003585000000000012, 0.0003574860000000006, 0.00035961099999999926, 0.00038609699999999844, 0.00035720799999999775, 0.00035957000000000003, 0.0003850139999999995, 0.000360054999999998, 0.0003574870000000001, 0.0003851519999999997, 0.0003585280000000003, 0.00035818100000000255, 0.00038638900000000087, 0.00035957000000000003, 0.0003859439999999992, 0.00035629099999999816, 0.00036004099999999845, 0.0003859859999999979, 0.00036026399999999903, 0.0003574860000000006, 0.0003573189999999983, 0.0003598330000000004, 0.00035859800000000164, 0.00038654200000000014, 0.000359458, 0.00036065300000000244, 0.00036052799999999885, 0.0003600139999999988, 0.0003597500000000059, 0.00035747299999999704, 0.00036081899999999834, 0.0003575549999999955, 0.0003564170000000047, 0.00035715299999999894, 0.00035676299999999606, 0.00038541599999999954, 0.000358457999999999, 0.00038551400000000347, 0.00036074999999999996, 0.0003592089999999992, 0.0003588190000000033, 0.0003566809999999976, 0.0003570270000000028, 0.00035659700000000016, 0.000359458, 0.0003852640000000032, 0.0003584720000000055]</msg>
<status status="PASS" starttime="20201029 12:47:38.299" endtime="20201029 12:47:38.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.295" endtime="20201029 12:47:38.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:38.306" endtime="20201029 12:47:38.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.304" endtime="20201029 12:47:38.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.303" endtime="20201029 12:47:38.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.928" endtime="20201029 12:47:38.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.928" endtime="20201029 12:47:38.327"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.335" endtime="20201029 12:47:38.372"></status>
</kw>
<msg timestamp="20201029 12:47:38.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.334" endtime="20201029 12:47:38.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.374" endtime="20201029 12:47:38.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.376" endtime="20201029 12:47:38.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.331" endtime="20201029 12:47:38.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.329" endtime="20201029 12:47:38.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.386" endtime="20201029 12:47:38.672"></status>
</kw>
<msg timestamp="20201029 12:47:38.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022961125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023323014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.384" endtime="20201029 12:47:38.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022961125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023323014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.677" endtime="20201029 12:47:38.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.685" endtime="20201029 12:47:38.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.381" endtime="20201029 12:47:38.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.380" endtime="20201029 12:47:38.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:38.692" level="INFO">${RESULT} = [{'diff': 0.00036188900000000065}, {'diff': 0.00038566699999999926}, {'diff': 0.00035691700000000173}, {'diff': 0.00035744500000000137}, {'diff': 0.00036130599999999874}, {'diff': 0.000357736000000000...</msg>
<status status="PASS" starttime="20201029 12:47:38.689" endtime="20201029 12:47:38.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:38.696" level="INFO">${ACCURACY} = {'diff': [0.00036188900000000065, 0.00038566699999999926, 0.00035691700000000173, 0.00035744500000000137, 0.00036130599999999874, 0.00035773600000000086, 0.00035952799999999785, 0.00036047200000000057...</msg>
<status status="PASS" starttime="20201029 12:47:38.693" endtime="20201029 12:47:38.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.700" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 12:47:38.699" endtime="20201029 12:47:38.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.703" level="INFO">VALUE: [0.00036188900000000065, 0.00038566699999999926, 0.00035691700000000173, 0.00035744500000000137, 0.00036130599999999874, 0.00035773600000000086, 0.00035952799999999785, 0.00036047200000000057, 0.0003858750000000008, 0.00035884699999999894, 0.00035947199999999957, 0.0003569310000000013, 0.000360652999999999, 0.0003592779999999976, 0.00035879200000000014, 0.00038588900000000037, 0.0003574029999999992, 0.00035827800000000007, 0.00036012499999999933, 0.00038513800000000015, 0.0003857919999999994, 0.00035708400000000057, 0.0003584440000000029, 0.0003851519999999997, 0.000360458000000001, 0.0003854860000000043, 0.0003587909999999972, 0.0003594589999999995, 0.0003597779999999981, 0.0003860980000000014, 0.0003576809999999986, 0.00035897299999999854, 0.0003605700000000045, 0.0003856939999999989, 0.0003610000000000002, 0.00035644400000000437, 0.0003595979999999957, 0.00035829199999999617, 0.00035697299999999654, 0.00035873600000000533, 0.00035841699999999976, 0.00038645799999999925, 0.0003852360000000041, 0.0003865970000000024, 0.0003865699999999958, 0.0003856520000000002, 0.00035998599999999964, 0.0003858330000000021, 0.0003865550000000037, 0.0003597219999999998]</msg>
<status status="PASS" starttime="20201029 12:47:38.701" endtime="20201029 12:47:38.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.697" endtime="20201029 12:47:38.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:38.708" endtime="20201029 12:47:38.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.706" endtime="20201029 12:47:38.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.705" endtime="20201029 12:47:38.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.328" endtime="20201029 12:47:38.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.327" endtime="20201029 12:47:38.729"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.737" endtime="20201029 12:47:38.774"></status>
</kw>
<msg timestamp="20201029 12:47:38.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.736" endtime="20201029 12:47:38.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.775" endtime="20201029 12:47:38.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.778" endtime="20201029 12:47:38.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.733" endtime="20201029 12:47:38.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.731" endtime="20201029 12:47:38.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.787" endtime="20201029 12:47:39.073"></status>
</kw>
<msg timestamp="20201029 12:47:39.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022938097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.786" endtime="20201029 12:47:39.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022938097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.077" endtime="20201029 12:47:39.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.085" endtime="20201029 12:47:39.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.783" endtime="20201029 12:47:39.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.781" endtime="20201029 12:47:39.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:39.092" level="INFO">${RESULT} = [{'diff': 0.0003616109999999978}, {'diff': 0.0003851389999999996}, {'diff': 0.00035920799999999975}, {'diff': 0.00035713900000000284}, {'diff': 0.0003864300000000001}, {'diff': 0.00038508399999999735}...</msg>
<status status="PASS" starttime="20201029 12:47:39.089" endtime="20201029 12:47:39.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:39.096" level="INFO">${ACCURACY} = {'diff': [0.0003616109999999978, 0.0003851389999999996, 0.00035920799999999975, 0.00035713900000000284, 0.0003864300000000001, 0.00038508399999999735, 0.00038690300000000094, 0.0003572639999999995, 0....</msg>
<status status="PASS" starttime="20201029 12:47:39.093" endtime="20201029 12:47:39.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.100" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 12:47:39.099" endtime="20201029 12:47:39.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.103" level="INFO">VALUE: [0.0003616109999999978, 0.0003851389999999996, 0.00035920799999999975, 0.00035713900000000284, 0.0003864300000000001, 0.00038508399999999735, 0.00038690300000000094, 0.0003572639999999995, 0.00036012499999999933, 0.0003607779999999991, 0.000356973, 0.0003595969999999997, 0.00035997200000000007, 0.000386207999999999, 0.0003857779999999998, 0.00038658299999999937, 0.0003588890000000011, 0.00035920799999999975, 0.00035661099999999973, 0.00035659700000000016, 0.00035787500000000055, 0.0003572639999999995, 0.0003611109999999973, 0.00035662500000000624, 0.00035837500000000105, 0.0003595269999999984, 0.00035765199999999997, 0.0003585830000000026, 0.0003860560000000027, 0.00035974999999999896, 0.000357861000000001, 0.0003565140000000022, 0.0003584030000000002, 0.00035854099999999695, 0.00038672199999999907, 0.00038630500000000345, 0.0003585979999999947, 0.00035779199999999567, 0.0003573050000000022, 0.000356457999999997, 0.00035870799999999925, 0.0003862639999999973, 0.000360555999999998, 0.00035847199999999857, 0.00035691699999999826, 0.0003603889999999957, 0.000386611000000002, 0.00035887500000000155, 0.00035737500000000005, 0.0003582779999999966]</msg>
<status status="PASS" starttime="20201029 12:47:39.101" endtime="20201029 12:47:39.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.097" endtime="20201029 12:47:39.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:39.108" endtime="20201029 12:47:39.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.107" endtime="20201029 12:47:39.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.106" endtime="20201029 12:47:39.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.729" endtime="20201029 12:47:39.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.729" endtime="20201029 12:47:39.129"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.138" endtime="20201029 12:47:39.176"></status>
</kw>
<msg timestamp="20201029 12:47:39.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.137" endtime="20201029 12:47:39.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.177" endtime="20201029 12:47:39.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.180" endtime="20201029 12:47:39.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.134" endtime="20201029 12:47:39.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.132" endtime="20201029 12:47:39.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.189" endtime="20201029 12:47:39.478"></status>
</kw>
<msg timestamp="20201029 12:47:39.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024037028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024393333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.187" endtime="20201029 12:47:39.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024037028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024393333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.482" endtime="20201029 12:47:39.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.490" endtime="20201029 12:47:39.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.185" endtime="20201029 12:47:39.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.183" endtime="20201029 12:47:39.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:39.497" level="INFO">${RESULT} = [{'diff': 0.0003563050000000012}, {'diff': 0.00035862499999999783}, {'diff': 0.00035866599999999707}, {'diff': 0.0003562920000000011}, {'diff': 0.0003863750000000013}, {'diff': 0.0003848749999999998},...</msg>
<status status="PASS" starttime="20201029 12:47:39.494" endtime="20201029 12:47:39.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:39.505" level="INFO">${ACCURACY} = {'diff': [0.0003563050000000012, 0.00035862499999999783, 0.00035866599999999707, 0.0003562920000000011, 0.0003863750000000013, 0.0003848749999999998, 0.00035845900000000194, 0.0003562219999999998, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:39.498" endtime="20201029 12:47:39.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.509" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 12:47:39.508" endtime="20201029 12:47:39.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.512" level="INFO">VALUE: [0.0003563050000000012, 0.00035862499999999783, 0.00035866599999999707, 0.0003562920000000011, 0.0003863750000000013, 0.0003848749999999998, 0.00035845900000000194, 0.0003562219999999998, 0.0003566800000000016, 0.00038638900000000087, 0.0003574029999999992, 0.00035962499999999883, 0.00035879200000000014, 0.00038505499999999873, 0.0003576950000000016, 0.0003858339999999981, 0.0003590280000000008, 0.0003582359999999979, 0.0003581250000000008, 0.00035966599999999807, 0.0003575139999999963, 0.0003573190000000018, 0.00036076399999999953, 0.000360054999999998, 0.00035652799999999485, 0.0003592359999999989, 0.0003606949999999942, 0.00035937500000000205, 0.0003588480000000019, 0.00035948599999999914, 0.00035997200000000007, 0.00038569400000000587, 0.0003584589999999985, 0.00035709700000000066, 0.00035977800000000504, 0.00035737500000000005, 0.0003574589999999975, 0.00038630500000000345, 0.00038504199999999517, 0.00035797199999999807, 0.0003859299999999996, 0.0003860699999999953, 0.00035722200000000426, 0.00035656999999999356, 0.0003863200000000025, 0.00038623599999999814, 0.0003584030000000002, 0.00038569400000000587, 0.000358555999999996, 0.00038508300000000134]</msg>
<status status="PASS" starttime="20201029 12:47:39.510" endtime="20201029 12:47:39.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.506" endtime="20201029 12:47:39.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:39.517" endtime="20201029 12:47:39.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.515" endtime="20201029 12:47:39.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.514" endtime="20201029 12:47:39.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.130" endtime="20201029 12:47:39.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.130" endtime="20201029 12:47:39.537"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.546" endtime="20201029 12:47:39.582"></status>
</kw>
<msg timestamp="20201029 12:47:39.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.545" endtime="20201029 12:47:39.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.584" endtime="20201029 12:47:39.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.586" endtime="20201029 12:47:39.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.542" endtime="20201029 12:47:39.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.540" endtime="20201029 12:47:39.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.596" endtime="20201029 12:47:39.927"></status>
</kw>
<msg timestamp="20201029 12:47:39.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022883083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02324975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:39.594" endtime="20201029 12:47:39.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022883083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02324975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:39.932" endtime="20201029 12:47:39.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.940" endtime="20201029 12:47:39.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.591" endtime="20201029 12:47:39.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.590" endtime="20201029 12:47:39.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:39.946" level="INFO">${RESULT} = [{'diff': 0.0003666670000000011}, {'diff': 0.0003850559999999982}, {'diff': 0.0003858469999999982}, {'diff': 0.000356763999999999}, {'diff': 0.00035716599999999904}, {'diff': 0.0003595139999999983}, {...</msg>
<status status="PASS" starttime="20201029 12:47:39.943" endtime="20201029 12:47:39.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:39.950" level="INFO">${ACCURACY} = {'diff': [0.0003666670000000011, 0.0003850559999999982, 0.0003858469999999982, 0.000356763999999999, 0.00035716599999999904, 0.0003595139999999983, 0.00038554199999999914, 0.00035683300000000084, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:39.947" endtime="20201029 12:47:39.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.955" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 12:47:39.954" endtime="20201029 12:47:39.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.957" level="INFO">VALUE: [0.0003666670000000011, 0.0003850559999999982, 0.0003858469999999982, 0.000356763999999999, 0.00035716599999999904, 0.0003595139999999983, 0.00038554199999999914, 0.00035683300000000084, 0.00035829100000000016, 0.00035888899999999765, 0.00035683300000000084, 0.000359360999999999, 0.0003592770000000016, 0.0003570690000000015, 0.0003573610000000005, 0.0003858049999999995, 0.00035727799999999907, 0.000386514000000001, 0.0003862499999999977, 0.00038570800000000197, 0.00035811100000000123, 0.00038634700000000216, 0.0003589999999999982, 0.0003591109999999953, 0.00038634800000000163, 0.00035882000000000275, 0.0003857770000000038, 0.00035658400000000007, 0.00035897199999999907, 0.0003569019999999992, 0.0003602359999999999, 0.0003603890000000026, 0.0003595689999999971, 0.00035897299999999854, 0.00035794399999999893, 0.0003610139999999998, 0.0003566799999999981, 0.00035837500000000105, 0.00038607000000000224, 0.00038527799999999585, 0.0003571249999999998, 0.00038534700000000116, 0.0003586800000000001, 0.00038547200000000476, 0.00035633300000000034, 0.0003580969999999947, 0.00038541599999999954, 0.00035893000000000036, 0.0003600690000000045, 0.00035897199999999907]</msg>
<status status="PASS" starttime="20201029 12:47:39.956" endtime="20201029 12:47:39.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.951" endtime="20201029 12:47:39.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:39.962" endtime="20201029 12:47:39.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.961" endtime="20201029 12:47:39.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.960" endtime="20201029 12:47:39.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.538" endtime="20201029 12:47:39.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.538" endtime="20201029 12:47:39.984"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.993" endtime="20201029 12:47:40.034"></status>
</kw>
<msg timestamp="20201029 12:47:40.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.991" endtime="20201029 12:47:40.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.036" endtime="20201029 12:47:40.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.038" endtime="20201029 12:47:40.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.988" endtime="20201029 12:47:40.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.986" endtime="20201029 12:47:40.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.047" endtime="20201029 12:47:40.332"></status>
</kw>
<msg timestamp="20201029 12:47:40.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023595292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023971403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.046" endtime="20201029 12:47:40.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023595292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023971403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.337" endtime="20201029 12:47:40.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.345" endtime="20201029 12:47:40.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.043" endtime="20201029 12:47:40.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.042" endtime="20201029 12:47:40.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:40.351" level="INFO">${RESULT} = [{'diff': 0.0003761109999999984}, {'diff': 0.00035779199999999914}, {'diff': 0.00036079200000000214}, {'diff': 0.00038652800000000057}, {'diff': 0.0003865689999999998}, {'diff': 0.0003861939999999994}...</msg>
<status status="PASS" starttime="20201029 12:47:40.348" endtime="20201029 12:47:40.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:40.356" level="INFO">${ACCURACY} = {'diff': [0.0003761109999999984, 0.00035779199999999914, 0.00036079200000000214, 0.00038652800000000057, 0.0003865689999999998, 0.0003861939999999994, 0.0003855970000000014, 0.0003563609999999995, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:40.352" endtime="20201029 12:47:40.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.360" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 12:47:40.359" endtime="20201029 12:47:40.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.363" level="INFO">VALUE: [0.0003761109999999984, 0.00035779199999999914, 0.00036079200000000214, 0.00038652800000000057, 0.0003865689999999998, 0.0003861939999999994, 0.0003855970000000014, 0.0003563609999999995, 0.00038527699999999984, 0.0003606809999999981, 0.00038518099999999833, 0.0003600139999999988, 0.00035777799999999957, 0.00035677799999999857, 0.00035938899999999815, 0.00038630599999999946, 0.00035687499999999955, 0.0003868469999999992, 0.0003851110000000005, 0.00038548600000000086, 0.00038622200000000204, 0.000386207999999999, 0.00036040299999999525, 0.0003853750000000003, 0.0003593190000000038, 0.0003594299999999939, 0.0003608470000000044, 0.00036056999999999756, 0.00035915300000000094, 0.00038551299999999705, 0.0003605139999999993, 0.0003592219999999993, 0.0003574029999999992, 0.00036116600000000304, 0.00036002799999999835, 0.0003566799999999981, 0.0003864859999999984, 0.00035791699999999926, 0.0003605139999999993, 0.00036047200000000057, 0.0003591940000000002, 0.00036108399999999763, 0.00035848599999999814, 0.0003579579999999985, 0.00036091599999999585, 0.00036113899999999644, 0.000360070000000004, 0.00038572199999999807, 0.00038541599999999954, 0.00035691699999999826]</msg>
<status status="PASS" starttime="20201029 12:47:40.361" endtime="20201029 12:47:40.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.357" endtime="20201029 12:47:40.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:40.368" endtime="20201029 12:47:40.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.366" endtime="20201029 12:47:40.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.365" endtime="20201029 12:47:40.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.985" endtime="20201029 12:47:40.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.984" endtime="20201029 12:47:40.389"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.397" endtime="20201029 12:47:40.432"></status>
</kw>
<msg timestamp="20201029 12:47:40.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.396" endtime="20201029 12:47:40.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.433" endtime="20201029 12:47:40.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.436" endtime="20201029 12:47:40.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.393" endtime="20201029 12:47:40.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.391" endtime="20201029 12:47:40.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.445" endtime="20201029 12:47:40.731"></status>
</kw>
<msg timestamp="20201029 12:47:40.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020729056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021112847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.443" endtime="20201029 12:47:40.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020729056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021112847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.735" endtime="20201029 12:47:40.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.743" endtime="20201029 12:47:40.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.441" endtime="20201029 12:47:40.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.439" endtime="20201029 12:47:40.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:40.750" level="INFO">${RESULT} = [{'diff': 0.0003837910000000014}, {'diff': 0.00035775000000000043}, {'diff': 0.00036097200000000107}, {'diff': 0.00035980500000000123}, {'diff': 0.00036109800000000067}, {'diff': 0.0003595420000000009...</msg>
<status status="PASS" starttime="20201029 12:47:40.747" endtime="20201029 12:47:40.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:40.754" level="INFO">${ACCURACY} = {'diff': [0.0003837910000000014, 0.00035775000000000043, 0.00036097200000000107, 0.00035980500000000123, 0.00036109800000000067, 0.0003595420000000009, 0.00035929200000000064, 0.00035627799999999807, ...</msg>
<status status="PASS" starttime="20201029 12:47:40.751" endtime="20201029 12:47:40.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.758" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 12:47:40.757" endtime="20201029 12:47:40.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.761" level="INFO">VALUE: [0.0003837910000000014, 0.00035775000000000043, 0.00036097200000000107, 0.00035980500000000123, 0.00036109800000000067, 0.0003595420000000009, 0.00035929200000000064, 0.00035627799999999807, 0.00035794399999999893, 0.00035965300000000144, 0.00035784699999999794, 0.0003588890000000011, 0.0003850550000000022, 0.0003863060000000029, 0.0003564159999999983, 0.00035934699999999944, 0.0003592359999999989, 0.00035670799999999725, 0.00035905599999999996, 0.0003587359999999984, 0.00038502799999999907, 0.0003587219999999988, 0.0003850550000000022, 0.0003600830000000006, 0.0003568060000000012, 0.00035977800000000157, 0.0003601800000000016, 0.00035829199999999964, 0.0003849720000000008, 0.00035748599999999714, 0.00035742999999999886, 0.00035662500000000624, 0.0003568479999999999, 0.000386013999999997, 0.0003586250000000013, 0.00036026399999999903, 0.00035965300000000144, 0.0003573190000000018, 0.0003572370000000033, 0.00038649999999999796, 0.000359667000000001, 0.00036111100000000423, 0.0003861530000000002, 0.00038627799999999685, 0.0003607220000000008, 0.00038547200000000476, 0.0003572359999999969, 0.00036016600000000204, 0.000356473000000003, 0.00035694399999999793]</msg>
<status status="PASS" starttime="20201029 12:47:40.759" endtime="20201029 12:47:40.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.755" endtime="20201029 12:47:40.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:40.766" endtime="20201029 12:47:40.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.764" endtime="20201029 12:47:40.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.763" endtime="20201029 12:47:40.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.390" endtime="20201029 12:47:40.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.389" endtime="20201029 12:47:40.787"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.795" endtime="20201029 12:47:40.833"></status>
</kw>
<msg timestamp="20201029 12:47:40.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.794" endtime="20201029 12:47:40.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.835" endtime="20201029 12:47:40.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.837" endtime="20201029 12:47:40.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.791" endtime="20201029 12:47:40.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.789" endtime="20201029 12:47:40.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.847" endtime="20201029 12:47:41.133"></status>
</kw>
<msg timestamp="20201029 12:47:41.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024731208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025116042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.845" endtime="20201029 12:47:41.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024731208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025116042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.137" endtime="20201029 12:47:41.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.145" endtime="20201029 12:47:41.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.842" endtime="20201029 12:47:41.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.841" endtime="20201029 12:47:41.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:41.152" level="INFO">${RESULT} = [{'diff': 0.00038483400000000056}, {'diff': 0.00036020800000000075}, {'diff': 0.0003608750000000001}, {'diff': 0.0003573329999999979}, {'diff': 0.0003596940000000007}, {'diff': 0.00036079199999999867}...</msg>
<status status="PASS" starttime="20201029 12:47:41.149" endtime="20201029 12:47:41.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:41.156" level="INFO">${ACCURACY} = {'diff': [0.00038483400000000056, 0.00036020800000000075, 0.0003608750000000001, 0.0003573329999999979, 0.0003596940000000007, 0.00036079199999999867, 0.00035815299999999994, 0.00035983399999999985, 0...</msg>
<status status="PASS" starttime="20201029 12:47:41.153" endtime="20201029 12:47:41.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.160" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 12:47:41.159" endtime="20201029 12:47:41.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.164" level="INFO">VALUE: [0.00038483400000000056, 0.00036020800000000075, 0.0003608750000000001, 0.0003573329999999979, 0.0003596940000000007, 0.00036079199999999867, 0.00035815299999999994, 0.00035983399999999985, 0.0003851110000000005, 0.00035924999999999846, 0.0003580280000000033, 0.00036106999999999806, 0.000358667, 0.0003580829999999986, 0.0003853330000000016, 0.00035674999999999943, 0.00038595799999999875, 0.0003607359999999969, 0.000385013999999996, 0.00035797199999999807, 0.0003855840000000013, 0.00036002799999999835, 0.0003567359999999964, 0.00036088800000000365, 0.0003859859999999979, 0.00035815299999999994, 0.00035893000000000036, 0.00036074999999999996, 0.00038658300000000284, 0.00036044400000000143, 0.0003596390000000019, 0.000386013999999997, 0.0003583890000000006, 0.0003611109999999973, 0.0003594020000000017, 0.00035782000000000175, 0.00035804200000000286, 0.000360070000000004, 0.00036026400000000597, 0.000361054999999999, 0.0003861390000000006, 0.00038637499999999436, 0.0003581809999999991, 0.0003611940000000022, 0.00035923699999999836, 0.0003577779999999961, 0.00035994400000000093, 0.0003604030000000022, 0.0003577500000000039, 0.00036091700000000226]</msg>
<status status="PASS" starttime="20201029 12:47:41.162" endtime="20201029 12:47:41.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.157" endtime="20201029 12:47:41.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:41.169" endtime="20201029 12:47:41.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.167" endtime="20201029 12:47:41.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.166" endtime="20201029 12:47:41.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.788" endtime="20201029 12:47:41.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.787" endtime="20201029 12:47:41.190"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.198" endtime="20201029 12:47:41.235"></status>
</kw>
<msg timestamp="20201029 12:47:41.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.197" endtime="20201029 12:47:41.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.237" endtime="20201029 12:47:41.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.239" endtime="20201029 12:47:41.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.194" endtime="20201029 12:47:41.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.192" endtime="20201029 12:47:41.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.248" endtime="20201029 12:47:41.534"></status>
</kw>
<msg timestamp="20201029 12:47:41.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023675931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024043625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.247" endtime="20201029 12:47:41.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023675931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024043625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.538" endtime="20201029 12:47:41.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.546" endtime="20201029 12:47:41.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.244" endtime="20201029 12:47:41.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.243" endtime="20201029 12:47:41.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:41.553" level="INFO">${RESULT} = [{'diff': 0.00036769399999999827}, {'diff': 0.0003594860000000026}, {'diff': 0.0003860560000000027}, {'diff': 0.00035829100000000016}, {'diff': 0.00036083400000000085}, {'diff': 0.00038645799999999925...</msg>
<status status="PASS" starttime="20201029 12:47:41.550" endtime="20201029 12:47:41.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:41.558" level="INFO">${ACCURACY} = {'diff': [0.00036769399999999827, 0.0003594860000000026, 0.0003860560000000027, 0.00035829100000000016, 0.00036083400000000085, 0.00038645799999999925, 0.00035744399999999843, 0.0003584860000000016, 0...</msg>
<status status="PASS" starttime="20201029 12:47:41.554" endtime="20201029 12:47:41.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.562" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 12:47:41.561" endtime="20201029 12:47:41.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.565" level="INFO">VALUE: [0.00036769399999999827, 0.0003594860000000026, 0.0003860560000000027, 0.00035829100000000016, 0.00036083400000000085, 0.00038645799999999925, 0.00035744399999999843, 0.0003584860000000016, 0.0003569999999999997, 0.0003857079999999985, 0.0003855559999999987, 0.0003862500000000012, 0.00035654200000000136, 0.0003583329999999989, 0.000358360999999998, 0.00038517999999999886, 0.00035793099999999883, 0.0003579579999999985, 0.00035766599999999954, 0.00038602800000000007, 0.000358054999999996, 0.00038518099999999833, 0.00035829199999999617, 0.0003563889999999986, 0.0003569159999999988, 0.0003568060000000012, 0.00035754200000000236, 0.00035715299999999894, 0.00036066600000000254, 0.00035705500000000195, 0.0003585969999999952, 0.00036043100000000133, 0.0003610979999999972, 0.000386013999999997, 0.00035826400000000397, 0.000360458000000001, 0.00035676399999999553, 0.0003850550000000022, 0.0003572920000000021, 0.00036029199999999817, 0.0003596529999999945, 0.00038506899999999483, 0.0003603329999999974, 0.0003573889999999996, 0.00035965300000000144, 0.0003569579999999975, 0.0003609450000000014, 0.00035937500000000205, 0.00038620800000000594, 0.0003567089999999967]</msg>
<status status="PASS" starttime="20201029 12:47:41.564" endtime="20201029 12:47:41.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.559" endtime="20201029 12:47:41.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:41.570" endtime="20201029 12:47:41.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.568" endtime="20201029 12:47:41.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.567" endtime="20201029 12:47:41.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.190" endtime="20201029 12:47:41.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.190" endtime="20201029 12:47:41.591"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.599" endtime="20201029 12:47:41.638"></status>
</kw>
<msg timestamp="20201029 12:47:41.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.598" endtime="20201029 12:47:41.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.639" endtime="20201029 12:47:41.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.642" endtime="20201029 12:47:41.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.595" endtime="20201029 12:47:41.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.593" endtime="20201029 12:47:41.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.651" endtime="20201029 12:47:41.938"></status>
</kw>
<msg timestamp="20201029 12:47:41.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024432014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024809764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.649" endtime="20201029 12:47:41.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024432014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024809764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.942" endtime="20201029 12:47:41.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.950" endtime="20201029 12:47:41.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.647" endtime="20201029 12:47:41.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.645" endtime="20201029 12:47:41.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:41.957" level="INFO">${RESULT} = [{'diff': 0.0003777500000000031}, {'diff': 0.0003578199999999983}, {'diff': 0.000359555999999997}, {'diff': 0.00035923699999999836}, {'diff': 0.0003562639999999985}, {'diff': 0.0003599580000000005}, {...</msg>
<status status="PASS" starttime="20201029 12:47:41.954" endtime="20201029 12:47:41.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:41.961" level="INFO">${ACCURACY} = {'diff': [0.0003777500000000031, 0.0003578199999999983, 0.000359555999999997, 0.00035923699999999836, 0.0003562639999999985, 0.0003599580000000005, 0.00035977800000000157, 0.0003604159999999988, 0.000...</msg>
<status status="PASS" starttime="20201029 12:47:41.958" endtime="20201029 12:47:41.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.965" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 12:47:41.964" endtime="20201029 12:47:41.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.968" level="INFO">VALUE: [0.0003777500000000031, 0.0003578199999999983, 0.000359555999999997, 0.00035923699999999836, 0.0003562639999999985, 0.0003599580000000005, 0.00035977800000000157, 0.0003604159999999988, 0.0003591670000000005, 0.00036076300000000006, 0.0003595839999999996, 0.00038638900000000087, 0.0003573189999999983, 0.00038626400000000075, 0.0003573889999999996, 0.00035774999999999696, 0.000385416999999999, 0.0003611389999999999, 0.00038520900000000094, 0.0003597219999999998, 0.00035727800000000254, 0.000356958999999997, 0.00038583400000000156, 0.0003580139999999968, 0.00035804099999999645, 0.0003600140000000057, 0.0003577920000000026, 0.0003597779999999981, 0.0003579020000000002, 0.0003613329999999984, 0.00036006999999999706, 0.00035665299999999844, 0.00035765199999999997, 0.00035926399999999803, 0.00035852799999999685, 0.00038666700000000026, 0.00038627799999999685, 0.0003582779999999966, 0.00035650000000000265, 0.0003588340000000023, 0.00038573700000000405, 0.00036048600000000014, 0.00035638900000000556, 0.0003591670000000005, 0.00035866600000000054, 0.0003600830000000041, 0.0003583340000000018, 0.00035669499999999715, 0.0003866949999999994, 0.0003601940000000012]</msg>
<status status="PASS" starttime="20201029 12:47:41.967" endtime="20201029 12:47:41.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.962" endtime="20201029 12:47:41.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:41.973" endtime="20201029 12:47:41.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.971" endtime="20201029 12:47:41.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.970" endtime="20201029 12:47:41.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.592" endtime="20201029 12:47:41.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.591" endtime="20201029 12:47:41.994"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.003" endtime="20201029 12:47:42.040"></status>
</kw>
<msg timestamp="20201029 12:47:42.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.001" endtime="20201029 12:47:42.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.041" endtime="20201029 12:47:42.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.044" endtime="20201029 12:47:42.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.998" endtime="20201029 12:47:42.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.996" endtime="20201029 12:47:42.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.053" endtime="20201029 12:47:42.339"></status>
</kw>
<msg timestamp="20201029 12:47:42.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023228014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023606903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.051" endtime="20201029 12:47:42.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023228014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023606903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.343" endtime="20201029 12:47:42.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.351" endtime="20201029 12:47:42.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.049" endtime="20201029 12:47:42.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.047" endtime="20201029 12:47:42.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:42.358" level="INFO">${RESULT} = [{'diff': 0.00037888899999999684}, {'diff': 0.00035983399999999985}, {'diff': 0.0003564859999999996}, {'diff': 0.00035811100000000123}, {'diff': 0.000385514}, {'diff': 0.00035687499999999955}, {'diff'...</msg>
<status status="PASS" starttime="20201029 12:47:42.355" endtime="20201029 12:47:42.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:42.362" level="INFO">${ACCURACY} = {'diff': [0.00037888899999999684, 0.00035983399999999985, 0.0003564859999999996, 0.00035811100000000123, 0.000385514, 0.00035687499999999955, 0.00035787500000000055, 0.00038554199999999914, 0.00035648...</msg>
<status status="PASS" starttime="20201029 12:47:42.359" endtime="20201029 12:47:42.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.366" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 12:47:42.365" endtime="20201029 12:47:42.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.369" level="INFO">VALUE: [0.00037888899999999684, 0.00035983399999999985, 0.0003564859999999996, 0.00035811100000000123, 0.000385514, 0.00035687499999999955, 0.00035787500000000055, 0.00038554199999999914, 0.0003564859999999996, 0.00035873600000000186, 0.00035661099999999973, 0.0003861390000000006, 0.0003576389999999999, 0.00035743099999999833, 0.00036057000000000103, 0.0003609159999999993, 0.0003569860000000001, 0.0003591810000000001, 0.000386514000000001, 0.0003863469999999987, 0.0003591389999999979, 0.0003576250000000003, 0.00035881899999999634, 0.0003572359999999969, 0.0003588340000000023, 0.0003595549999999975, 0.0003854440000000056, 0.00035848599999999814, 0.00038663800000000165, 0.0003854719999999978, 0.0003610139999999998, 0.0003865550000000037, 0.0003592359999999989, 0.0003857079999999985, 0.00036044400000000143, 0.00035852799999999685, 0.00036070800000000125, 0.0003856529999999997, 0.00035741699999999876, 0.00036076300000000006, 0.0003593890000000016, 0.00036029199999999817, 0.0003573470000000009, 0.0003579020000000002, 0.00035963899999999493, 0.00035777800000000304, 0.0003862919999999964, 0.000359458, 0.0003582359999999979, 0.0003607220000000008]</msg>
<status status="PASS" starttime="20201029 12:47:42.367" endtime="20201029 12:47:42.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.363" endtime="20201029 12:47:42.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:42.375" endtime="20201029 12:47:42.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.373" endtime="20201029 12:47:42.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.372" endtime="20201029 12:47:42.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.995" endtime="20201029 12:47:42.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.994" endtime="20201029 12:47:42.395"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.404" endtime="20201029 12:47:42.443"></status>
</kw>
<msg timestamp="20201029 12:47:42.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.403" endtime="20201029 12:47:42.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.444" endtime="20201029 12:47:42.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.447" endtime="20201029 12:47:42.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.400" endtime="20201029 12:47:42.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.398" endtime="20201029 12:47:42.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.456" endtime="20201029 12:47:42.741"></status>
</kw>
<msg timestamp="20201029 12:47:42.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023619889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023980056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.454" endtime="20201029 12:47:42.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023619889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023980056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.745" endtime="20201029 12:47:42.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.753" endtime="20201029 12:47:42.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.452" endtime="20201029 12:47:42.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.450" endtime="20201029 12:47:42.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:42.759" level="INFO">${RESULT} = [{'diff': 0.00036016699999999804}, {'diff': 0.0003852919999999989}, {'diff': 0.00036067999999999864}, {'diff': 0.0003590420000000004}, {'diff': 0.00035812499999999733}, {'diff': 0.00035694399999999793...</msg>
<status status="PASS" starttime="20201029 12:47:42.756" endtime="20201029 12:47:42.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:42.764" level="INFO">${ACCURACY} = {'diff': [0.00036016699999999804, 0.0003852919999999989, 0.00036067999999999864, 0.0003590420000000004, 0.00035812499999999733, 0.00035694399999999793, 0.0003587359999999984, 0.00038538899999999987, 0...</msg>
<status status="PASS" starttime="20201029 12:47:42.760" endtime="20201029 12:47:42.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.769" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 12:47:42.768" endtime="20201029 12:47:42.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.771" level="INFO">VALUE: [0.00036016699999999804, 0.0003852919999999989, 0.00036067999999999864, 0.0003590420000000004, 0.00035812499999999733, 0.00035694399999999793, 0.0003587359999999984, 0.00038538899999999987, 0.00038548600000000086, 0.00038566700000000273, 0.00035811199999999724, 0.00035894399999999993, 0.0003580549999999995, 0.0003581950000000021, 0.00035669400000000115, 0.00035636199999999896, 0.0003862919999999999, 0.00035755600000000193, 0.0003576809999999986, 0.0003590139999999978, 0.0003595000000000022, 0.00035936099999999555, 0.0003587370000000048, 0.00038534700000000116, 0.0003610130000000003, 0.0003606810000000016, 0.00038579099999999644, 0.00038530500000000245, 0.0003564029999999982, 0.0003589030000000007, 0.0003573610000000005, 0.0003564170000000047, 0.0003589030000000007, 0.00036058299999999766, 0.00035829100000000363, 0.0003580689999999956, 0.00035787500000000055, 0.00035929199999999717, 0.0003854859999999974, 0.0003580139999999968, 0.00035904099999999745, 0.00035737500000000005, 0.0003586809999999996, 0.0003597769999999986, 0.0003602359999999999, 0.0003866939999999999, 0.0003604590000000005, 0.00038630500000000345, 0.00035887500000000155, 0.00035977800000000504]</msg>
<status status="PASS" starttime="20201029 12:47:42.770" endtime="20201029 12:47:42.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.765" endtime="20201029 12:47:42.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:42.776" endtime="20201029 12:47:42.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.775" endtime="20201029 12:47:42.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.774" endtime="20201029 12:47:42.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.396" endtime="20201029 12:47:42.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.396" endtime="20201029 12:47:42.797"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.806" endtime="20201029 12:47:42.843"></status>
</kw>
<msg timestamp="20201029 12:47:42.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.804" endtime="20201029 12:47:42.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.844" endtime="20201029 12:47:42.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.847" endtime="20201029 12:47:42.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.802" endtime="20201029 12:47:42.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.800" endtime="20201029 12:47:42.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.856" endtime="20201029 12:47:43.142"></status>
</kw>
<msg timestamp="20201029 12:47:43.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023866417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024224361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.854" endtime="20201029 12:47:43.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023866417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024224361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.146" endtime="20201029 12:47:43.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.155" endtime="20201029 12:47:43.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.852" endtime="20201029 12:47:43.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.850" endtime="20201029 12:47:43.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:43.161" level="INFO">${RESULT} = [{'diff': 0.00035794399999999893}, {'diff': 0.000385207999999998}, {'diff': 0.0003595269999999984}, {'diff': 0.0003566389999999989}, {'diff': 0.00035997200000000007}, {'diff': 0.0003607220000000008}, ...</msg>
<status status="PASS" starttime="20201029 12:47:43.158" endtime="20201029 12:47:43.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:43.165" level="INFO">${ACCURACY} = {'diff': [0.00035794399999999893, 0.000385207999999998, 0.0003595269999999984, 0.0003566389999999989, 0.00035997200000000007, 0.0003607220000000008, 0.00036031899999999784, 0.00035829199999999964, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:43.162" endtime="20201029 12:47:43.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.170" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 12:47:43.169" endtime="20201029 12:47:43.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.172" level="INFO">VALUE: [0.00035794399999999893, 0.000385207999999998, 0.0003595269999999984, 0.0003566389999999989, 0.00035997200000000007, 0.0003607220000000008, 0.00036031899999999784, 0.00035829199999999964, 0.00035994499999999693, 0.0003581390000000004, 0.00035724999999999993, 0.0003598609999999995, 0.00035873600000000186, 0.0003588329999999994, 0.000357070000000001, 0.000358861000000002, 0.0003599029999999982, 0.0003585000000000012, 0.00038658300000000284, 0.0003858049999999995, 0.00035645800000000394, 0.00035961100000000273, 0.0003608469999999975, 0.000360070000000004, 0.0003579029999999997, 0.0003865139999999975, 0.0003610419999999989, 0.00038666700000000026, 0.0003581390000000004, 0.0003569159999999988, 0.0003859719999999983, 0.00035659799999999964, 0.0003563469999999999, 0.0003571390000000063, 0.000359943999999994, 0.0003864439999999997, 0.0003596109999999958, 0.0003608329999999979, 0.0003578470000000014, 0.0003854439999999987, 0.00035676399999999553, 0.00036048600000000014, 0.00035924999999999846, 0.0003860839999999949, 0.00035666599999999854, 0.00038649999999999796, 0.000360054999999998, 0.0003610000000000002, 0.00035669499999999715, 0.0003564999999999957]</msg>
<status status="PASS" starttime="20201029 12:47:43.171" endtime="20201029 12:47:43.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.166" endtime="20201029 12:47:43.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:43.181" endtime="20201029 12:47:43.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.179" endtime="20201029 12:47:43.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.178" endtime="20201029 12:47:43.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.798" endtime="20201029 12:47:43.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.797" endtime="20201029 12:47:43.202"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.210" endtime="20201029 12:47:43.249"></status>
</kw>
<msg timestamp="20201029 12:47:43.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.209" endtime="20201029 12:47:43.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.251" endtime="20201029 12:47:43.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.254" endtime="20201029 12:47:43.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.206" endtime="20201029 12:47:43.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.204" endtime="20201029 12:47:43.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.263" endtime="20201029 12:47:43.549"></status>
</kw>
<msg timestamp="20201029 12:47:43.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026223736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026606694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.261" endtime="20201029 12:47:43.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026223736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026606694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.554" endtime="20201029 12:47:43.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.562" endtime="20201029 12:47:43.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.259" endtime="20201029 12:47:43.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.257" endtime="20201029 12:47:43.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:43.568" level="INFO">${RESULT} = [{'diff': 0.0003829579999999992}, {'diff': 0.00035832000000000225}, {'diff': 0.00035873600000000186}, {'diff': 0.0003582080000000022}, {'diff': 0.00038562500000000055}, {'diff': 0.00038584799999999767...</msg>
<status status="PASS" starttime="20201029 12:47:43.565" endtime="20201029 12:47:43.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:43.572" level="INFO">${ACCURACY} = {'diff': [0.0003829579999999992, 0.00035832000000000225, 0.00035873600000000186, 0.0003582080000000022, 0.00038562500000000055, 0.00038584799999999767, 0.00038617999999999986, 0.0003585969999999987, 0...</msg>
<status status="PASS" starttime="20201029 12:47:43.569" endtime="20201029 12:47:43.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.577" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 12:47:43.576" endtime="20201029 12:47:43.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.579" level="INFO">VALUE: [0.0003829579999999992, 0.00035832000000000225, 0.00035873600000000186, 0.0003582080000000022, 0.00038562500000000055, 0.00038584799999999767, 0.00038617999999999986, 0.0003585969999999987, 0.0003581809999999991, 0.00035851400000000075, 0.00038645799999999925, 0.00038594400000000265, 0.0003849160000000025, 0.00036056999999999756, 0.00035977700000000556, 0.0003853620000000002, 0.00035915200000000147, 0.000358555999999996, 0.00035666700000000495, 0.00035792999999999936, 0.00036056999999999756, 0.00035948599999999914, 0.00035719499999999765, 0.00035732000000000125, 0.0003589999999999982, 0.00035676400000000247, 0.0003585979999999947, 0.00035952799999999785, 0.0003602220000000003, 0.00036093000000000236, 0.0003612220000000013, 0.00035920799999999975, 0.00036079199999999867, 0.00035722300000000373, 0.0003854859999999974, 0.0003589449999999994, 0.00035954099999999795, 0.00038540299999999944, 0.00035811100000000123, 0.00038594499999999865, 0.00038525000000000365, 0.000358667, 0.0003568470000000004, 0.0003595419999999974, 0.0003575700000000015, 0.0003610000000000002, 0.00035974999999999896, 0.00038601400000000397, 0.000356457999999997, 0.00035737500000000005]</msg>
<status status="PASS" starttime="20201029 12:47:43.578" endtime="20201029 12:47:43.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.573" endtime="20201029 12:47:43.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:43.585" endtime="20201029 12:47:43.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.584" endtime="20201029 12:47:43.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.582" endtime="20201029 12:47:43.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.203" endtime="20201029 12:47:43.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.202" endtime="20201029 12:47:43.606"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.615" endtime="20201029 12:47:43.653"></status>
</kw>
<msg timestamp="20201029 12:47:43.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.613" endtime="20201029 12:47:43.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.654" endtime="20201029 12:47:43.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.657" endtime="20201029 12:47:43.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.610" endtime="20201029 12:47:43.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.608" endtime="20201029 12:47:43.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.666" endtime="20201029 12:47:43.951"></status>
</kw>
<msg timestamp="20201029 12:47:43.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023744444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024116972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.664" endtime="20201029 12:47:43.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023744444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024116972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.955" endtime="20201029 12:47:43.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.963" endtime="20201029 12:47:43.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.661" endtime="20201029 12:47:43.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.660" endtime="20201029 12:47:43.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:43.970" level="INFO">${RESULT} = [{'diff': 0.00037252800000000044}, {'diff': 0.0003570830000000011}, {'diff': 0.00035827800000000007}, {'diff': 0.0003586390000000009}, {'diff': 0.0003856390000000001}, {'diff': 0.00035619400000000065}...</msg>
<status status="PASS" starttime="20201029 12:47:43.966" endtime="20201029 12:47:43.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:43.974" level="INFO">${ACCURACY} = {'diff': [0.00037252800000000044, 0.0003570830000000011, 0.00035827800000000007, 0.0003586390000000009, 0.0003856390000000001, 0.00035619400000000065, 0.00038519500000000137, 0.0003585000000000012, 0....</msg>
<status status="PASS" starttime="20201029 12:47:43.970" endtime="20201029 12:47:43.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.979" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 12:47:43.978" endtime="20201029 12:47:43.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.981" level="INFO">VALUE: [0.00037252800000000044, 0.0003570830000000011, 0.00035827800000000007, 0.0003586390000000009, 0.0003856390000000001, 0.00035619400000000065, 0.00038519500000000137, 0.0003585000000000012, 0.00035926399999999803, 0.0003571389999999994, 0.0003858330000000021, 0.00036062499999999983, 0.0003851529999999992, 0.00035695900000000044, 0.0003588470000000024, 0.000357569000000002, 0.00035637499999999905, 0.00035825000000000093, 0.0003574860000000006, 0.00038511199999999995, 0.00035965200000000197, 0.0003598329999999969, 0.0003602359999999999, 0.0003861110000000015, 0.00035626400000000197, 0.0003598060000000042, 0.0003590269999999979, 0.00038629200000000335, 0.0003604999999999997, 0.00035683300000000084, 0.00038544499999999815, 0.00035632000000000025, 0.0003857079999999985, 0.000359555999999997, 0.00036002799999999835, 0.0003573060000000017, 0.00038618099999999933, 0.0003567370000000028, 0.00035800000000000415, 0.00038606899999999583, 0.00035874999999999796, 0.0003858750000000008, 0.0003856519999999933, 0.0003581390000000004, 0.0003568050000000017, 0.00038523599999999714, 0.00038502800000000253, 0.00035687499999999955, 0.00035998599999999964, 0.00035915300000000094]</msg>
<status status="PASS" starttime="20201029 12:47:43.980" endtime="20201029 12:47:43.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.975" endtime="20201029 12:47:43.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:43.987" endtime="20201029 12:47:44.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.985" endtime="20201029 12:47:44.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.984" endtime="20201029 12:47:44.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.607" endtime="20201029 12:47:44.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.606" endtime="20201029 12:47:44.008"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.016" endtime="20201029 12:47:44.054"></status>
</kw>
<msg timestamp="20201029 12:47:44.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.015" endtime="20201029 12:47:44.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.056" endtime="20201029 12:47:44.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.058" endtime="20201029 12:47:44.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.012" endtime="20201029 12:47:44.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.010" endtime="20201029 12:47:44.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.067" endtime="20201029 12:47:44.359"></status>
</kw>
<msg timestamp="20201029 12:47:44.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024243875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024619194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.066" endtime="20201029 12:47:44.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024243875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024619194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.364" endtime="20201029 12:47:44.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.372" endtime="20201029 12:47:44.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.063" endtime="20201029 12:47:44.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.061" endtime="20201029 12:47:44.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:44.378" level="INFO">${RESULT} = [{'diff': 0.00037531899999999896}, {'diff': 0.00035952700000000185}, {'diff': 0.0003580000000000007}, {'diff': 0.0003603060000000012}, {'diff': 0.0003858330000000021}, {'diff': 0.00035984699999999994}...</msg>
<status status="PASS" starttime="20201029 12:47:44.375" endtime="20201029 12:47:44.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:44.382" level="INFO">${ACCURACY} = {'diff': [0.00037531899999999896, 0.00035952700000000185, 0.0003580000000000007, 0.0003603060000000012, 0.0003858330000000021, 0.00035984699999999994, 0.00035894399999999993, 0.00038540199999999997, 0...</msg>
<status status="PASS" starttime="20201029 12:47:44.379" endtime="20201029 12:47:44.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.387" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 12:47:44.386" endtime="20201029 12:47:44.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.390" level="INFO">VALUE: [0.00037531899999999896, 0.00035952700000000185, 0.0003580000000000007, 0.0003603060000000012, 0.0003858330000000021, 0.00035984699999999994, 0.00035894399999999993, 0.00038540199999999997, 0.0003853750000000003, 0.0003598340000000033, 0.00035779099999999966, 0.00035823600000000136, 0.00035775000000000043, 0.0003855980000000009, 0.00036116699999999904, 0.00038566699999999926, 0.000358457999999999, 0.0003595280000000013, 0.00035856899999999955, 0.00035623600000000283, 0.0003568889999999991, 0.0003576389999999999, 0.0003587779999999971, 0.00035666700000000495, 0.00038538899999999987, 0.0003584030000000002, 0.00035920799999999975, 0.0003865279999999971, 0.00035655500000000145, 0.00038573599999999764, 0.00036102799999999935, 0.0003606940000000017, 0.0003591250000000018, 0.0003861390000000006, 0.0003605969999999972, 0.00035855500000000345, 0.0003859309999999991, 0.0003588470000000024, 0.00035654099999999495, 0.0003850970000000009, 0.0003579579999999985, 0.00035793099999999883, 0.00038549999999999696, 0.0003578329999999949, 0.0003562920000000011, 0.0003605549999999985, 0.00038536100000000073, 0.00036112499999999687, 0.00036041700000000176, 0.00036093100000000183]</msg>
<status status="PASS" starttime="20201029 12:47:44.388" endtime="20201029 12:47:44.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.383" endtime="20201029 12:47:44.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:44.395" endtime="20201029 12:47:44.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.393" endtime="20201029 12:47:44.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.392" endtime="20201029 12:47:44.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.008" endtime="20201029 12:47:44.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.008" endtime="20201029 12:47:44.416"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.424" endtime="20201029 12:47:44.465"></status>
</kw>
<msg timestamp="20201029 12:47:44.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.423" endtime="20201029 12:47:44.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.467" endtime="20201029 12:47:44.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.469" endtime="20201029 12:47:44.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.420" endtime="20201029 12:47:44.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.418" endtime="20201029 12:47:44.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.478" endtime="20201029 12:47:44.765"></status>
</kw>
<msg timestamp="20201029 12:47:44.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023039597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023408875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.477" endtime="20201029 12:47:44.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023039597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023408875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.769" endtime="20201029 12:47:44.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.777" endtime="20201029 12:47:44.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.474" endtime="20201029 12:47:44.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.473" endtime="20201029 12:47:44.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:44.783" level="INFO">${RESULT} = [{'diff': 0.00036927800000000066}, {'diff': 0.00035811099999999776}, {'diff': 0.00036094400000000193}, {'diff': 0.0003852919999999989}, {'diff': 0.0003612230000000008}, {'diff': 0.00035677700000000256...</msg>
<status status="PASS" starttime="20201029 12:47:44.780" endtime="20201029 12:47:44.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:44.788" level="INFO">${ACCURACY} = {'diff': [0.00036927800000000066, 0.00035811099999999776, 0.00036094400000000193, 0.0003852919999999989, 0.0003612230000000008, 0.00035677700000000256, 0.0003580000000000007, 0.0003566670000000015, 0....</msg>
<status status="PASS" starttime="20201029 12:47:44.784" endtime="20201029 12:47:44.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.792" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 12:47:44.791" endtime="20201029 12:47:44.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.795" level="INFO">VALUE: [0.00036927800000000066, 0.00035811099999999776, 0.00036094400000000193, 0.0003852919999999989, 0.0003612230000000008, 0.00035677700000000256, 0.0003580000000000007, 0.0003566670000000015, 0.0003857909999999999, 0.0003862910000000004, 0.00035723699999999983, 0.00035773600000000086, 0.00035751399999999975, 0.0003857780000000033, 0.00035782000000000175, 0.00038587499999999733, 0.00035669400000000115, 0.00035890199999999775, 0.0003563890000000021, 0.000385416999999999, 0.00035780499999999923, 0.0003863889999999974, 0.0003864439999999997, 0.0003571940000000051, 0.0003574869999999966, 0.00035919499999999965, 0.0003612360000000009, 0.00038609699999999497, 0.00038612500000000105, 0.00038619500000000584, 0.000357555999999995, 0.00036109700000000466, 0.00038518099999999833, 0.0003593890000000016, 0.0003582229999999978, 0.00035970800000000025, 0.0003593329999999964, 0.00036113899999999644, 0.0003594449999999999, 0.00035783300000000184, 0.00035843099999999933, 0.0003595419999999974, 0.0003595700000000035, 0.00038654199999999667, 0.00036070800000000125, 0.00035648700000000255, 0.0003859169999999995, 0.00036024999999999946, 0.0003598470000000034, 0.00035815299999999994]</msg>
<status status="PASS" starttime="20201029 12:47:44.793" endtime="20201029 12:47:44.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.788" endtime="20201029 12:47:44.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:44.801" endtime="20201029 12:47:44.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.799" endtime="20201029 12:47:44.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.798" endtime="20201029 12:47:44.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.417" endtime="20201029 12:47:44.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.416" endtime="20201029 12:47:44.822"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.830" endtime="20201029 12:47:44.867"></status>
</kw>
<msg timestamp="20201029 12:47:44.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.829" endtime="20201029 12:47:44.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.869" endtime="20201029 12:47:44.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.871" endtime="20201029 12:47:44.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.826" endtime="20201029 12:47:44.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.824" endtime="20201029 12:47:44.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.881" endtime="20201029 12:47:45.169"></status>
</kw>
<msg timestamp="20201029 12:47:45.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023887625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024264986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.879" endtime="20201029 12:47:45.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023887625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024264986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.173" endtime="20201029 12:47:45.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.181" endtime="20201029 12:47:45.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.876" endtime="20201029 12:47:45.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.875" endtime="20201029 12:47:45.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:45.188" level="INFO">${RESULT} = [{'diff': 0.00037736099999999967}, {'diff': 0.0003586939999999997}, {'diff': 0.0003581250000000008}, {'diff': 0.0003563190000000008}, {'diff': 0.00035877800000000057}, {'diff': 0.00038517999999999886}...</msg>
<status status="PASS" starttime="20201029 12:47:45.185" endtime="20201029 12:47:45.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:45.193" level="INFO">${ACCURACY} = {'diff': [0.00037736099999999967, 0.0003586939999999997, 0.0003581250000000008, 0.0003563190000000008, 0.00035877800000000057, 0.00038517999999999886, 0.00036061100000000026, 0.00035966599999999807, 0...</msg>
<status status="PASS" starttime="20201029 12:47:45.189" endtime="20201029 12:47:45.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.198" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 12:47:45.197" endtime="20201029 12:47:45.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.201" level="INFO">VALUE: [0.00037736099999999967, 0.0003586939999999997, 0.0003581250000000008, 0.0003563190000000008, 0.00035877800000000057, 0.00038517999999999886, 0.00036061100000000026, 0.00035966599999999807, 0.0003607779999999991, 0.00036034700000000044, 0.0003577220000000013, 0.000357764, 0.0003563060000000007, 0.0003859299999999996, 0.00038558300000000184, 0.0003861530000000002, 0.0003596800000000011, 0.00035981899999999734, 0.0003852370000000001, 0.00035806999999999506, 0.0003864309999999996, 0.00035970800000000025, 0.00035677800000000204, 0.00038627799999999685, 0.00038661200000000145, 0.0003570419999999949, 0.0003583339999999949, 0.0003585129999999978, 0.00035820799999999875, 0.0003865970000000024, 0.000359861000000003, 0.0003593610000000025, 0.000385722000000005, 0.0003853330000000016, 0.00035919499999999965, 0.00036109700000000466, 0.00035976399999999853, 0.00035944400000000043, 0.00035847199999999857, 0.0003601669999999946, 0.00036015300000000194, 0.0003864859999999984, 0.0003564029999999982, 0.00035908400000000257, 0.00038629099999999694, 0.0003594999999999987, 0.00038668099999999983, 0.0003612360000000009, 0.000359346999999996, 0.0003565280000000018]</msg>
<status status="PASS" starttime="20201029 12:47:45.199" endtime="20201029 12:47:45.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.194" endtime="20201029 12:47:45.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:45.206" endtime="20201029 12:47:45.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.204" endtime="20201029 12:47:45.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.203" endtime="20201029 12:47:45.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.823" endtime="20201029 12:47:45.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.822" endtime="20201029 12:47:45.227"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.236" endtime="20201029 12:47:45.272"></status>
</kw>
<msg timestamp="20201029 12:47:45.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.234" endtime="20201029 12:47:45.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.276" endtime="20201029 12:47:45.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.281" endtime="20201029 12:47:45.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.231" endtime="20201029 12:47:45.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.229" endtime="20201029 12:47:45.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.301" endtime="20201029 12:47:45.599"></status>
</kw>
<msg timestamp="20201029 12:47:45.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020779444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021140153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.298" endtime="20201029 12:47:45.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020779444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021140153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.603" endtime="20201029 12:47:45.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.612" endtime="20201029 12:47:45.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.292" endtime="20201029 12:47:45.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.288" endtime="20201029 12:47:45.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:45.618" level="INFO">${RESULT} = [{'diff': 0.00036070899999999725}, {'diff': 0.0003862500000000012}, {'diff': 0.000385319999999998}, {'diff': 0.00035779100000000313}, {'diff': 0.0003612079999999983}, {'diff': 0.00035754200000000236},...</msg>
<status status="PASS" starttime="20201029 12:47:45.615" endtime="20201029 12:47:45.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:45.623" level="INFO">${ACCURACY} = {'diff': [0.00036070899999999725, 0.0003862500000000012, 0.000385319999999998, 0.00035779100000000313, 0.0003612079999999983, 0.00035754200000000236, 0.0003580839999999981, 0.00035874999999999796, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:45.619" endtime="20201029 12:47:45.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.627" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 12:47:45.626" endtime="20201029 12:47:45.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.630" level="INFO">VALUE: [0.00036070899999999725, 0.0003862500000000012, 0.000385319999999998, 0.00035779100000000313, 0.0003612079999999983, 0.00035754200000000236, 0.0003580839999999981, 0.00035874999999999796, 0.00038612500000000105, 0.0003588329999999994, 0.0003607360000000004, 0.0003568470000000004, 0.0003866939999999999, 0.00035701399999999925, 0.000357569000000002, 0.00038590299999999994, 0.00038520900000000094, 0.000360652999999999, 0.00035693000000000183, 0.0003586809999999996, 0.00035705600000000143, 0.0003584030000000002, 0.00035947200000000304, 0.0003566950000000006, 0.0003586380000000014, 0.0003866109999999985, 0.00038545799999999825, 0.0003580279999999998, 0.0003866949999999994, 0.00038584800000000113, 0.00035822300000000473, 0.00035979199999999767, 0.00038525000000000365, 0.00035970800000000025, 0.0003589999999999982, 0.00035793099999999883, 0.0003570140000000027, 0.0003594019999999948, 0.00035941700000000076, 0.00036102799999999935, 0.00036084799999999695, 0.00038640200000000097, 0.0003570689999999946, 0.0003867639999999978, 0.0003601109999999963, 0.00035726399999999603, 0.0003578340000000013, 0.00035926399999999803, 0.000386417, 0.0003591390000000014]</msg>
<status status="PASS" starttime="20201029 12:47:45.628" endtime="20201029 12:47:45.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.623" endtime="20201029 12:47:45.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:45.635" endtime="20201029 12:47:45.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.633" endtime="20201029 12:47:45.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.632" endtime="20201029 12:47:45.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.228" endtime="20201029 12:47:45.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.227" endtime="20201029 12:47:45.656"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.665" endtime="20201029 12:47:45.703"></status>
</kw>
<msg timestamp="20201029 12:47:45.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.663" endtime="20201029 12:47:45.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.704" endtime="20201029 12:47:45.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.707" endtime="20201029 12:47:45.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.661" endtime="20201029 12:47:45.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.658" endtime="20201029 12:47:45.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.716" endtime="20201029 12:47:46.002"></status>
</kw>
<msg timestamp="20201029 12:47:46.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023888264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024265861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.715" endtime="20201029 12:47:46.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023888264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024265861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.006" endtime="20201029 12:47:46.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.015" endtime="20201029 12:47:46.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.712" endtime="20201029 12:47:46.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.710" endtime="20201029 12:47:46.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:46.021" level="INFO">${RESULT} = [{'diff': 0.00037759700000000035}, {'diff': 0.000358360999999998}, {'diff': 0.0003611389999999999}, {'diff': 0.00035851400000000075}, {'diff': 0.00035979100000000167}, {'diff': 0.0003565280000000018},...</msg>
<status status="PASS" starttime="20201029 12:47:46.018" endtime="20201029 12:47:46.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:46.026" level="INFO">${ACCURACY} = {'diff': [0.00037759700000000035, 0.000358360999999998, 0.0003611389999999999, 0.00035851400000000075, 0.00035979100000000167, 0.0003565280000000018, 0.0003564859999999996, 0.0003608329999999979, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:46.023" endtime="20201029 12:47:46.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.030" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 12:47:46.029" endtime="20201029 12:47:46.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.033" level="INFO">VALUE: [0.00037759700000000035, 0.000358360999999998, 0.0003611389999999999, 0.00035851400000000075, 0.00035979100000000167, 0.0003565280000000018, 0.0003564859999999996, 0.0003608329999999979, 0.00035761100000000073, 0.0003592219999999993, 0.0003568060000000012, 0.0003586809999999996, 0.00035959799999999917, 0.0003587219999999988, 0.00035823700000000083, 0.0003851110000000005, 0.0003611939999999987, 0.0003864859999999984, 0.0003608339999999974, 0.0003565280000000018, 0.00035930499999999727, 0.00038579099999999644, 0.0003606390000000029, 0.00038640300000000044, 0.00035993100000000083, 0.00038588900000000037, 0.0003864439999999997, 0.000360152999999995, 0.00035643100000000427, 0.0003600689999999976, 0.0003858750000000008, 0.0003852369999999966, 0.0003594160000000013, 0.00038519400000000537, 0.00035916600000000104, 0.00035655600000000093, 0.0003609020000000032, 0.00035897199999999907, 0.0003599869999999991, 0.00035959700000000316, 0.0003859860000000048, 0.00036052799999999885, 0.0003586529999999935, 0.00035948599999999914, 0.0003585549999999965, 0.00036026399999999903, 0.0003589999999999982, 0.00038566699999999926, 0.0003854719999999978, 0.000359555999999997]</msg>
<status status="PASS" starttime="20201029 12:47:46.031" endtime="20201029 12:47:46.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.027" endtime="20201029 12:47:46.035"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:46.039" endtime="20201029 12:47:46.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.037" endtime="20201029 12:47:46.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.036" endtime="20201029 12:47:46.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.657" endtime="20201029 12:47:46.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.656" endtime="20201029 12:47:46.060"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.069" endtime="20201029 12:47:46.104"></status>
</kw>
<msg timestamp="20201029 12:47:46.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.067" endtime="20201029 12:47:46.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.105" endtime="20201029 12:47:46.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.108" endtime="20201029 12:47:46.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.065" endtime="20201029 12:47:46.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.062" endtime="20201029 12:47:46.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.117" endtime="20201029 12:47:46.403"></status>
</kw>
<msg timestamp="20201029 12:47:46.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022178736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.116" endtime="20201029 12:47:46.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022178736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.407" endtime="20201029 12:47:46.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.415" endtime="20201029 12:47:46.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.113" endtime="20201029 12:47:46.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.111" endtime="20201029 12:47:46.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:46.422" level="INFO">${RESULT} = [{'diff': 0.00036352800000000185}, {'diff': 0.0003603749999999996}, {'diff': 0.0003592089999999992}, {'diff': 0.0003573889999999996}, {'diff': 0.0003564310000000008}, {'diff': 0.0003563890000000021}, ...</msg>
<status status="PASS" starttime="20201029 12:47:46.419" endtime="20201029 12:47:46.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:46.427" level="INFO">${ACCURACY} = {'diff': [0.00036352800000000185, 0.0003603749999999996, 0.0003592089999999992, 0.0003573889999999996, 0.0003564310000000008, 0.0003563890000000021, 0.00036116599999999957, 0.00038634700000000216, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:46.423" endtime="20201029 12:47:46.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.432" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 12:47:46.431" endtime="20201029 12:47:46.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.434" level="INFO">VALUE: [0.00036352800000000185, 0.0003603749999999996, 0.0003592089999999992, 0.0003573889999999996, 0.0003564310000000008, 0.0003563890000000021, 0.00036116599999999957, 0.00038634700000000216, 0.0003603190000000013, 0.0003851810000000018, 0.00035770799999999825, 0.0003562089999999997, 0.0003583890000000006, 0.0003581799999999996, 0.0003858469999999982, 0.000356861, 0.0003609580000000015, 0.00035743000000000233, 0.00036091700000000226, 0.0003600830000000006, 0.00038595799999999875, 0.0003857500000000007, 0.00038590299999999994, 0.00035787500000000055, 0.000360361, 0.000385625000000004, 0.00035808400000000157, 0.00036098600000000064, 0.00035906999999999606, 0.0003582219999999983, 0.0003567769999999956, 0.00038608300000000234, 0.0003575700000000015, 0.0003865829999999959, 0.0003849020000000064, 0.00038581999999999506, 0.00038517999999999886, 0.00038588900000000037, 0.00038536100000000073, 0.0003571389999999994, 0.0003859169999999995, 0.0003601390000000024, 0.00038544499999999815, 0.00035781899999999534, 0.0003592769999999981, 0.0003607909999999992, 0.0003864859999999984, 0.0003859309999999991, 0.0003854299999999991, 0.00035997200000000007]</msg>
<status status="PASS" starttime="20201029 12:47:46.433" endtime="20201029 12:47:46.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.428" endtime="20201029 12:47:46.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:46.440" endtime="20201029 12:47:46.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.438" endtime="20201029 12:47:46.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.437" endtime="20201029 12:47:46.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.061" endtime="20201029 12:47:46.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.060" endtime="20201029 12:47:46.460"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.469" endtime="20201029 12:47:46.505"></status>
</kw>
<msg timestamp="20201029 12:47:46.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.468" endtime="20201029 12:47:46.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.507" endtime="20201029 12:47:46.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.509" endtime="20201029 12:47:46.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.465" endtime="20201029 12:47:46.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.463" endtime="20201029 12:47:46.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.519" endtime="20201029 12:47:46.806"></status>
</kw>
<msg timestamp="20201029 12:47:46.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022984625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023361181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.517" endtime="20201029 12:47:46.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022984625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023361181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.811" endtime="20201029 12:47:46.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.819" endtime="20201029 12:47:46.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.514" endtime="20201029 12:47:46.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.513" endtime="20201029 12:47:46.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:46.826" level="INFO">${RESULT} = [{'diff': 0.0003765560000000001}, {'diff': 0.0003575409999999994}, {'diff': 0.0003600550000000015}, {'diff': 0.00038559699999999794}, {'diff': 0.00035825000000000093}, {'diff': 0.00035997200000000007}...</msg>
<status status="PASS" starttime="20201029 12:47:46.822" endtime="20201029 12:47:46.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:46.830" level="INFO">${ACCURACY} = {'diff': [0.0003765560000000001, 0.0003575409999999994, 0.0003600550000000015, 0.00038559699999999794, 0.00035825000000000093, 0.00035997200000000007, 0.00038508399999999735, 0.0003590000000000017, 0....</msg>
<status status="PASS" starttime="20201029 12:47:46.827" endtime="20201029 12:47:46.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.835" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 12:47:46.833" endtime="20201029 12:47:46.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.837" level="INFO">VALUE: [0.0003765560000000001, 0.0003575409999999994, 0.0003600550000000015, 0.00038559699999999794, 0.00035825000000000093, 0.00035997200000000007, 0.00038508399999999735, 0.0003590000000000017, 0.0003563190000000008, 0.0003584310000000028, 0.0003569860000000001, 0.00036097200000000107, 0.0003571530000000024, 0.00038590299999999994, 0.0003570280000000023, 0.000360652999999999, 0.00035775000000000043, 0.0003598749999999991, 0.00035991700000000126, 0.0003592359999999989, 0.00035895800000000297, 0.0003865139999999975, 0.0003588470000000024, 0.00038576300000000424, 0.00035984799999999595, 0.00035659700000000016, 0.0003596940000000007, 0.00035993100000000083, 0.0003859169999999995, 0.0003566950000000041, 0.0003593879999999952, 0.00035852799999999685, 0.0003859439999999992, 0.00035811100000000123, 0.00035774999999999696, 0.0003850269999999961, 0.00035747199999999757, 0.000357054999999995, 0.00036102799999999935, 0.00035891700000000026, 0.0003573470000000009, 0.00038507000000000124, 0.00038495799999999775, 0.00036112499999999687, 0.00035847199999999857, 0.0003563339999999998, 0.0003600419999999979, 0.000358667, 0.00035819499999999865, 0.0003591390000000014]</msg>
<status status="PASS" starttime="20201029 12:47:46.836" endtime="20201029 12:47:46.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.831" endtime="20201029 12:47:46.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:46.842" endtime="20201029 12:47:46.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.841" endtime="20201029 12:47:46.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.839" endtime="20201029 12:47:46.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.461" endtime="20201029 12:47:46.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.461" endtime="20201029 12:47:46.863"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.872" endtime="20201029 12:47:46.915"></status>
</kw>
<msg timestamp="20201029 12:47:46.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.871" endtime="20201029 12:47:46.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.916" endtime="20201029 12:47:46.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.919" endtime="20201029 12:47:46.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.868" endtime="20201029 12:47:46.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.866" endtime="20201029 12:47:46.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.928" endtime="20201029 12:47:47.215"></status>
</kw>
<msg timestamp="20201029 12:47:47.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027207139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027580028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.927" endtime="20201029 12:47:47.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027207139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027580028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.219" endtime="20201029 12:47:47.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.228" endtime="20201029 12:47:47.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.924" endtime="20201029 12:47:47.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.922" endtime="20201029 12:47:47.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:47.234" level="INFO">${RESULT} = [{'diff': 0.0003728889999999978}, {'diff': 0.000358861000000002}, {'diff': 0.0003596810000000006}, {'diff': 0.0003568060000000012}, {'diff': 0.0003593190000000003}, {'diff': 0.0003609450000000014}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:47.231" endtime="20201029 12:47:47.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:47.239" level="INFO">${ACCURACY} = {'diff': [0.0003728889999999978, 0.000358861000000002, 0.0003596810000000006, 0.0003568060000000012, 0.0003593190000000003, 0.0003609450000000014, 0.00035820799999999875, 0.0003591950000000031, 0.0003...</msg>
<status status="PASS" starttime="20201029 12:47:47.235" endtime="20201029 12:47:47.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.243" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 12:47:47.242" endtime="20201029 12:47:47.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.246" level="INFO">VALUE: [0.0003728889999999978, 0.000358861000000002, 0.0003596810000000006, 0.0003568060000000012, 0.0003593190000000003, 0.0003609450000000014, 0.00035820799999999875, 0.0003591950000000031, 0.0003854720000000013, 0.00036047200000000057, 0.000359652999999998, 0.00035883300000000284, 0.0003859580000000057, 0.00035774999999999696, 0.00036079199999999867, 0.00036041700000000176, 0.00035744500000000484, 0.00038534700000000116, 0.0003601810000000011, 0.00035831899999999584, 0.0003596250000000023, 0.00036026400000000597, 0.00035786099999999404, 0.0003862220000000055, 0.0003576950000000051, 0.0003859580000000057, 0.0003853330000000016, 0.0003862639999999973, 0.00036090299999999575, 0.0003608889999999962, 0.00038508300000000134, 0.00038651400000000447, 0.00035943100000000033, 0.0003851939999999984, 0.00038519500000000484, 0.00035980499999999777, 0.0003570139999999958, 0.00035888800000000165, 0.00035933300000000334, 0.0003860000000000044, 0.0003592359999999989, 0.000357666999999999, 0.00035644399999999743, 0.0003581390000000004, 0.00038606899999999583, 0.00035861100000000173, 0.00035643100000000427, 0.0003577089999999977, 0.0003859299999999996, 0.00035980599999999724]</msg>
<status status="PASS" starttime="20201029 12:47:47.244" endtime="20201029 12:47:47.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.239" endtime="20201029 12:47:47.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:47.252" endtime="20201029 12:47:47.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.250" endtime="20201029 12:47:47.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.249" endtime="20201029 12:47:47.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.864" endtime="20201029 12:47:47.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.864" endtime="20201029 12:47:47.273"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.282" endtime="20201029 12:47:47.320"></status>
</kw>
<msg timestamp="20201029 12:47:47.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.280" endtime="20201029 12:47:47.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.321" endtime="20201029 12:47:47.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.324" endtime="20201029 12:47:47.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.277" endtime="20201029 12:47:47.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.275" endtime="20201029 12:47:47.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.333" endtime="20201029 12:47:47.620"></status>
</kw>
<msg timestamp="20201029 12:47:47.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024651125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02500975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:47.332" endtime="20201029 12:47:47.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024651125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02500975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:47.624" endtime="20201029 12:47:47.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.633" endtime="20201029 12:47:47.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.329" endtime="20201029 12:47:47.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.327" endtime="20201029 12:47:47.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:47.639" level="INFO">${RESULT} = [{'diff': 0.0003586250000000013}, {'diff': 0.0003604030000000022}, {'diff': 0.0003599999999999992}, {'diff': 0.0003563750000000025}, {'diff': 0.00038519500000000137}, {'diff': 0.00038626400000000075},...</msg>
<status status="PASS" starttime="20201029 12:47:47.636" endtime="20201029 12:47:47.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:47.645" level="INFO">${ACCURACY} = {'diff': [0.0003586250000000013, 0.0003604030000000022, 0.0003599999999999992, 0.0003563750000000025, 0.00038519500000000137, 0.00038626400000000075, 0.00038605499999999973, 0.0003861660000000003, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:47.640" endtime="20201029 12:47:47.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.649" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 12:47:47.648" endtime="20201029 12:47:47.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.652" level="INFO">VALUE: [0.0003586250000000013, 0.0003604030000000022, 0.0003599999999999992, 0.0003563750000000025, 0.00038519500000000137, 0.00038626400000000075, 0.00038605499999999973, 0.0003861660000000003, 0.0003855689999999988, 0.00038523599999999714, 0.0003859309999999991, 0.0003855130000000005, 0.0003854300000000026, 0.00036034700000000044, 0.00038538899999999987, 0.0003590280000000008, 0.0003859300000000031, 0.00035780499999999923, 0.000359943999999994, 0.0003574029999999992, 0.00035869499999999915, 0.00035647299999999604, 0.00035720900000000416, 0.00035687499999999955, 0.00035991599999999485, 0.0003590140000000047, 0.00035977800000000504, 0.00035844399999999943, 0.0003584030000000002, 0.0003587219999999988, 0.00038520800000000494, 0.0003573340000000008, 0.0003568470000000004, 0.0003858189999999956, 0.00035741699999999876, 0.0003848619999999997, 0.00035842999999999986, 0.0003857919999999959, 0.0003610000000000002, 0.00035636199999999896, 0.0003609450000000014, 0.0003585269999999974, 0.0003598749999999956, 0.0003574029999999992, 0.00036047200000000057, 0.0003579020000000002, 0.000386417, 0.00035998599999999964, 0.00035874999999999796, 0.00038623599999999814]</msg>
<status status="PASS" starttime="20201029 12:47:47.650" endtime="20201029 12:47:47.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.645" endtime="20201029 12:47:47.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:47.657" endtime="20201029 12:47:47.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.655" endtime="20201029 12:47:47.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.654" endtime="20201029 12:47:47.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.274" endtime="20201029 12:47:47.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.273" endtime="20201029 12:47:47.678"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.687" endtime="20201029 12:47:47.721"></status>
</kw>
<msg timestamp="20201029 12:47:47.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.685" endtime="20201029 12:47:47.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.723" endtime="20201029 12:47:47.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.726" endtime="20201029 12:47:47.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.683" endtime="20201029 12:47:47.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.680" endtime="20201029 12:47:47.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.735" endtime="20201029 12:47:48.024"></status>
</kw>
<msg timestamp="20201029 12:47:48.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021409431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.733" endtime="20201029 12:47:48.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021409431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.028" endtime="20201029 12:47:48.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.037" endtime="20201029 12:47:48.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.731" endtime="20201029 12:47:48.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.729" endtime="20201029 12:47:48.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:48.043" level="INFO">${RESULT} = [{'diff': 0.0003560830000000001}, {'diff': 0.00035911099999999876}, {'diff': 0.00035879200000000014}, {'diff': 0.00036061100000000026}, {'diff': 0.0003580000000000007}, {'diff': 0.0003857360000000011}...</msg>
<status status="PASS" starttime="20201029 12:47:48.040" endtime="20201029 12:47:48.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:48.047" level="INFO">${ACCURACY} = {'diff': [0.0003560830000000001, 0.00035911099999999876, 0.00035879200000000014, 0.00036061100000000026, 0.0003580000000000007, 0.0003857360000000011, 0.0003572219999999973, 0.00035695900000000044, 0....</msg>
<status status="PASS" starttime="20201029 12:47:48.044" endtime="20201029 12:47:48.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.052" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 12:47:48.051" endtime="20201029 12:47:48.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.055" level="INFO">VALUE: [0.0003560830000000001, 0.00035911099999999876, 0.00035879200000000014, 0.00036061100000000026, 0.0003580000000000007, 0.0003857360000000011, 0.0003572219999999973, 0.00035695900000000044, 0.000385611000000001, 0.00036044399999999796, 0.00035866600000000054, 0.00036011099999999976, 0.00035965300000000144, 0.00035984699999999994, 0.0003585410000000004, 0.0003587090000000022, 0.00035765199999999997, 0.00035970800000000025, 0.00038508299999999787, 0.00036041700000000176, 0.00038545799999999825, 0.0003585829999999991, 0.00038580599999999896, 0.0003583059999999992, 0.0003578050000000027, 0.0003595139999999983, 0.00035811099999999776, 0.000359667000000001, 0.0003599019999999953, 0.00035943000000000086, 0.00038556899999999533, 0.0003575549999999955, 0.0003606390000000029, 0.00038622299999999804, 0.00035848599999999814, 0.00035794399999999893, 0.0003609030000000027, 0.0003596940000000007, 0.00035998599999999964, 0.0003850279999999956, 0.0003855970000000014, 0.00035837500000000105, 0.00035819499999999865, 0.00035855500000000345, 0.0003604999999999997, 0.0003856939999999989, 0.0003594030000000012, 0.00035654099999999495, 0.00035776400000000347, 0.00038522199999999757]</msg>
<status status="PASS" starttime="20201029 12:47:48.053" endtime="20201029 12:47:48.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.048" endtime="20201029 12:47:48.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:48.060" endtime="20201029 12:47:48.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.058" endtime="20201029 12:47:48.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.057" endtime="20201029 12:47:48.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.679" endtime="20201029 12:47:48.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.678" endtime="20201029 12:47:48.081"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.090" endtime="20201029 12:47:48.128"></status>
</kw>
<msg timestamp="20201029 12:47:48.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.088" endtime="20201029 12:47:48.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.130" endtime="20201029 12:47:48.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.132" endtime="20201029 12:47:48.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.086" endtime="20201029 12:47:48.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.083" endtime="20201029 12:47:48.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.142" endtime="20201029 12:47:48.427"></status>
</kw>
<msg timestamp="20201029 12:47:48.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025487389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025869167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.140" endtime="20201029 12:47:48.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025487389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025869167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.431" endtime="20201029 12:47:48.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.439" endtime="20201029 12:47:48.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.137" endtime="20201029 12:47:48.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.136" endtime="20201029 12:47:48.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:48.446" level="INFO">${RESULT} = [{'diff': 0.0003817779999999993}, {'diff': 0.00035795800000000197}, {'diff': 0.00035759800000000064}, {'diff': 0.0003600420000000014}, {'diff': 0.00035888899999999765}, {'diff': 0.0003588479999999984}...</msg>
<status status="PASS" starttime="20201029 12:47:48.443" endtime="20201029 12:47:48.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:48.450" level="INFO">${ACCURACY} = {'diff': [0.0003817779999999993, 0.00035795800000000197, 0.00035759800000000064, 0.0003600420000000014, 0.00035888899999999765, 0.0003588479999999984, 0.00035724999999999993, 0.00036088899999999965, 0...</msg>
<status status="PASS" starttime="20201029 12:47:48.447" endtime="20201029 12:47:48.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.455" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 12:47:48.454" endtime="20201029 12:47:48.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.457" level="INFO">VALUE: [0.0003817779999999993, 0.00035795800000000197, 0.00035759800000000064, 0.0003600420000000014, 0.00035888899999999765, 0.0003588479999999984, 0.00035724999999999993, 0.00036088899999999965, 0.00035727799999999907, 0.0003568470000000004, 0.00038516700000000223, 0.0003576939999999987, 0.0003583329999999989, 0.0003601250000000028, 0.00035891700000000026, 0.00035763900000000334, 0.0003566390000000058, 0.0003610559999999985, 0.00035792999999999936, 0.00038590299999999994, 0.0003576530000000064, 0.0003858189999999956, 0.0003610139999999998, 0.000360361999999996, 0.00036030499999999827, 0.0003563609999999995, 0.0003859860000000048, 0.00035715199999999947, 0.00035755600000000193, 0.0003864439999999997, 0.0003573610000000005, 0.0003599580000000005, 0.00036016600000000204, 0.00035811100000000123, 0.00035876399999999753, 0.0003857079999999985, 0.0003601109999999963, 0.0003561940000000041, 0.00035811100000000123, 0.0003566249999999993, 0.00038605599999999574, 0.00035644399999999743, 0.0003857499999999972, 0.00035820799999999875, 0.0003580140000000037, 0.0003855420000000026, 0.0003857499999999972, 0.000360361999999996, 0.00035969500000000015, 0.0003571799999999986]</msg>
<status status="PASS" starttime="20201029 12:47:48.456" endtime="20201029 12:47:48.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.451" endtime="20201029 12:47:48.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:48.467" endtime="20201029 12:47:48.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.466" endtime="20201029 12:47:48.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.465" endtime="20201029 12:47:48.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.082" endtime="20201029 12:47:48.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.081" endtime="20201029 12:47:48.488"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.497" endtime="20201029 12:47:48.536"></status>
</kw>
<msg timestamp="20201029 12:47:48.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.496" endtime="20201029 12:47:48.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.538" endtime="20201029 12:47:48.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.540" endtime="20201029 12:47:48.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.493" endtime="20201029 12:47:48.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.491" endtime="20201029 12:47:48.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.550" endtime="20201029 12:47:48.836"></status>
</kw>
<msg timestamp="20201029 12:47:48.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024814819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025189528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.548" endtime="20201029 12:47:48.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024814819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025189528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.840" endtime="20201029 12:47:48.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.849" endtime="20201029 12:47:48.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.545" endtime="20201029 12:47:48.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.544" endtime="20201029 12:47:48.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:48.856" level="INFO">${RESULT} = [{'diff': 0.00037470900000000085}, {'diff': 0.0003576389999999999}, {'diff': 0.00035984699999999994}, {'diff': 0.0003857779999999998}, {'diff': 0.00035993000000000136}, {'diff': 0.00035879200000000014...</msg>
<status status="PASS" starttime="20201029 12:47:48.852" endtime="20201029 12:47:48.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:48.861" level="INFO">${ACCURACY} = {'diff': [0.00037470900000000085, 0.0003576389999999999, 0.00035984699999999994, 0.0003857779999999998, 0.00035993000000000136, 0.00035879200000000014, 0.0003578890000000001, 0.0003856949999999984, 0....</msg>
<status status="PASS" starttime="20201029 12:47:48.857" endtime="20201029 12:47:48.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.865" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 12:47:48.864" endtime="20201029 12:47:48.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.868" level="INFO">VALUE: [0.00037470900000000085, 0.0003576389999999999, 0.00035984699999999994, 0.0003857779999999998, 0.00035993000000000136, 0.00035879200000000014, 0.0003578890000000001, 0.0003856949999999984, 0.000356666999999998, 0.00035994400000000093, 0.0003564999999999992, 0.0003590830000000031, 0.0003576389999999999, 0.0003565830000000006, 0.00035637499999999905, 0.0003599999999999992, 0.00038619500000000237, 0.0003571809999999981, 0.00035963899999999493, 0.0003565700000000005, 0.0003593879999999952, 0.00038518100000000527, 0.00038625000000000465, 0.0003608329999999979, 0.00035754099999999595, 0.0003861949999999989, 0.0003576250000000003, 0.0003572219999999973, 0.00038593000000000655, 0.0003590559999999965, 0.00038536100000000073, 0.00035937500000000205, 0.0003581390000000004, 0.00036043100000000133, 0.0003859299999999996, 0.00035927800000000454, 0.00038620899999999847, 0.0003607220000000008, 0.0003604450000000009, 0.00038569400000000587, 0.00035837500000000105, 0.0003855139999999965, 0.0003864719999999988, 0.0003600690000000045, 0.00036029199999999817, 0.0003589160000000008, 0.00038572299999999754, 0.0003584160000000003, 0.00035811100000000123, 0.0003866660000000008]</msg>
<status status="PASS" starttime="20201029 12:47:48.866" endtime="20201029 12:47:48.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.862" endtime="20201029 12:47:48.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:48.873" endtime="20201029 12:47:48.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.871" endtime="20201029 12:47:48.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.870" endtime="20201029 12:47:48.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.489" endtime="20201029 12:47:48.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.489" endtime="20201029 12:47:48.894"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.903" endtime="20201029 12:47:48.942"></status>
</kw>
<msg timestamp="20201029 12:47:48.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.901" endtime="20201029 12:47:48.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.944" endtime="20201029 12:47:48.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.946" endtime="20201029 12:47:48.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.899" endtime="20201029 12:47:48.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.897" endtime="20201029 12:47:48.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.956" endtime="20201029 12:47:49.243"></status>
</kw>
<msg timestamp="20201029 12:47:49.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021089319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021464403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.955" endtime="20201029 12:47:49.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021089319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021464403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.248" endtime="20201029 12:47:49.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.256" endtime="20201029 12:47:49.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.952" endtime="20201029 12:47:49.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.950" endtime="20201029 12:47:49.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:49.263" level="INFO">${RESULT} = [{'diff': 0.0003750840000000012}, {'diff': 0.0003596940000000007}, {'diff': 0.0003856529999999997}, {'diff': 0.0003604719999999971}, {'diff': 0.0003587770000000011}, {'diff': 0.0003865279999999971}, {...</msg>
<status status="PASS" starttime="20201029 12:47:49.259" endtime="20201029 12:47:49.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:49.267" level="INFO">${ACCURACY} = {'diff': [0.0003750840000000012, 0.0003596940000000007, 0.0003856529999999997, 0.0003604719999999971, 0.0003587770000000011, 0.0003865279999999971, 0.0003865689999999998, 0.0003566249999999993, 0.0003...</msg>
<status status="PASS" starttime="20201029 12:47:49.264" endtime="20201029 12:47:49.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.271" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 12:47:49.270" endtime="20201029 12:47:49.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.274" level="INFO">VALUE: [0.0003750840000000012, 0.0003596940000000007, 0.0003856529999999997, 0.0003604719999999971, 0.0003587770000000011, 0.0003865279999999971, 0.0003865689999999998, 0.0003566249999999993, 0.000358555, 0.0003566670000000015, 0.00035929100000000116, 0.0003600970000000002, 0.00035956900000000055, 0.0003584860000000016, 0.000356875000000003, 0.00035727799999999907, 0.00038649999999999796, 0.00035811100000000123, 0.000356666999999998, 0.0003853200000000015, 0.0003857079999999985, 0.00035820799999999875, 0.00035645800000000047, 0.00038618099999999933, 0.0003853620000000002, 0.00035929200000000064, 0.0003590000000000017, 0.0003595000000000022, 0.00038562500000000055, 0.00035654200000000136, 0.00035812499999999386, 0.00038536100000000073, 0.00035774999999999696, 0.0003856390000000001, 0.0003566389999999989, 0.0003596810000000006, 0.0003859439999999992, 0.00035782000000000175, 0.0003588060000000032, 0.00035644400000000437, 0.00035620799999999675, 0.00035779100000000313, 0.0003863189999999961, 0.00035854200000000336, 0.00036087500000000355, 0.0003610139999999998, 0.0003591109999999953, 0.00035622300000000273, 0.0003585700000000025, 0.00035618000000000455]</msg>
<status status="PASS" starttime="20201029 12:47:49.273" endtime="20201029 12:47:49.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.268" endtime="20201029 12:47:49.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:49.279" endtime="20201029 12:47:49.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.278" endtime="20201029 12:47:49.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.276" endtime="20201029 12:47:49.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.895" endtime="20201029 12:47:49.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.894" endtime="20201029 12:47:49.300"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.309" endtime="20201029 12:47:49.344"></status>
</kw>
<msg timestamp="20201029 12:47:49.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.308" endtime="20201029 12:47:49.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.346" endtime="20201029 12:47:49.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.348" endtime="20201029 12:47:49.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.305" endtime="20201029 12:47:49.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.303" endtime="20201029 12:47:49.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.358" endtime="20201029 12:47:49.644"></status>
</kw>
<msg timestamp="20201029 12:47:49.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022260319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.356" endtime="20201029 12:47:49.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022260319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.648" endtime="20201029 12:47:49.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.656" endtime="20201029 12:47:49.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.354" endtime="20201029 12:47:49.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.352" endtime="20201029 12:47:49.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:49.663" level="INFO">${RESULT} = [{'diff': 0.00035887500000000155}, {'diff': 0.00036070800000000125}, {'diff': 0.00035711100000000023}, {'diff': 0.0003562639999999985}, {'diff': 0.0003853750000000003}, {'diff': 0.00038552799999999957...</msg>
<status status="PASS" starttime="20201029 12:47:49.660" endtime="20201029 12:47:49.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:49.667" level="INFO">${ACCURACY} = {'diff': [0.00035887500000000155, 0.00036070800000000125, 0.00035711100000000023, 0.0003562639999999985, 0.0003853750000000003, 0.00038552799999999957, 0.00035772300000000076, 0.0003592090000000027, 0...</msg>
<status status="PASS" starttime="20201029 12:47:49.664" endtime="20201029 12:47:49.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.672" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 12:47:49.671" endtime="20201029 12:47:49.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.674" level="INFO">VALUE: [0.00035887500000000155, 0.00036070800000000125, 0.00035711100000000023, 0.0003562639999999985, 0.0003853750000000003, 0.00038552799999999957, 0.00035772300000000076, 0.0003592090000000027, 0.0003590829999999996, 0.0003581380000000009, 0.000358958999999999, 0.0003578340000000013, 0.00035679199999999814, 0.00035642999999999786, 0.00035819400000000265, 0.0003566249999999993, 0.0003578480000000009, 0.00035829100000000016, 0.0003581799999999996, 0.0003578890000000001, 0.0003590829999999996, 0.0003575000000000002, 0.0003864719999999988, 0.00038568099999999883, 0.00038520899999999747, 0.0003854170000000025, 0.0003562219999999963, 0.0003596390000000019, 0.0003567920000000016, 0.00035697199999999707, 0.0003570410000000024, 0.0003592779999999976, 0.00035673600000000333, 0.00035865300000000044, 0.0003610140000000067, 0.00036112499999999687, 0.0003857079999999985, 0.0003605689999999981, 0.00038633299999999565, 0.0003583060000000027, 0.0003849859999999969, 0.0003573060000000017, 0.00035974999999999896, 0.00035700000000000315, 0.00035973699999999886, 0.00038586100000000123, 0.00035797199999999807, 0.00038541599999999954, 0.00036037500000000305, 0.0003568060000000012]</msg>
<status status="PASS" starttime="20201029 12:47:49.673" endtime="20201029 12:47:49.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.668" endtime="20201029 12:47:49.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:49.680" endtime="20201029 12:47:49.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.679" endtime="20201029 12:47:49.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.678" endtime="20201029 12:47:49.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.301" endtime="20201029 12:47:49.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.300" endtime="20201029 12:47:49.701"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.710" endtime="20201029 12:47:49.746"></status>
</kw>
<msg timestamp="20201029 12:47:49.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.709" endtime="20201029 12:47:49.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.747" endtime="20201029 12:47:49.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.750" endtime="20201029 12:47:49.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.706" endtime="20201029 12:47:49.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.704" endtime="20201029 12:47:49.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.760" endtime="20201029 12:47:50.046"></status>
</kw>
<msg timestamp="20201029 12:47:50.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023021556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.758" endtime="20201029 12:47:50.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023021556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.050" endtime="20201029 12:47:50.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.060" endtime="20201029 12:47:50.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.755" endtime="20201029 12:47:50.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.754" endtime="20201029 12:47:50.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:50.067" level="INFO">${RESULT} = [{'diff': 0.0003850139999999995}, {'diff': 0.000359667000000001}, {'diff': 0.00036009799999999967}, {'diff': 0.00035856999999999903}, {'diff': 0.00038638900000000087}, {'diff': 0.0003591120000000017},...</msg>
<status status="PASS" starttime="20201029 12:47:50.064" endtime="20201029 12:47:50.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:50.072" level="INFO">${ACCURACY} = {'diff': [0.0003850139999999995, 0.000359667000000001, 0.00036009799999999967, 0.00035856999999999903, 0.00038638900000000087, 0.0003591120000000017, 0.00036105600000000196, 0.00036102799999999935, 0....</msg>
<status status="PASS" starttime="20201029 12:47:50.068" endtime="20201029 12:47:50.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.077" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 12:47:50.076" endtime="20201029 12:47:50.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.079" level="INFO">VALUE: [0.0003850139999999995, 0.000359667000000001, 0.00036009799999999967, 0.00035856999999999903, 0.00038638900000000087, 0.0003591120000000017, 0.00036105600000000196, 0.00036102799999999935, 0.0003594589999999995, 0.0003861810000000028, 0.00038654200000000014, 0.00035998599999999964, 0.0003601389999999989, 0.0003862500000000012, 0.00035869499999999915, 0.0003864859999999984, 0.00035704200000000186, 0.00035783300000000184, 0.0003574449999999979, 0.00038536100000000073, 0.00036026399999999903, 0.00035851400000000075, 0.0003610139999999998, 0.000360652999999999, 0.00035642999999999786, 0.0003563050000000012, 0.00035862499999999436, 0.0003593060000000037, 0.00035970800000000025, 0.00038533299999999465, 0.00038538899999999987, 0.0003850409999999957, 0.00035854200000000336, 0.0003568889999999991, 0.0003584860000000051, 0.00035647199999999657, 0.00035679100000000213, 0.0003561669999999975, 0.00038499999999999646, 0.00035929199999999717, 0.0003584020000000007, 0.0003587370000000048, 0.00038584800000000113, 0.00035897199999999907, 0.0003568190000000013, 0.0003564860000000031, 0.0003860970000000019, 0.0003610689999999986, 0.0003597219999999998, 0.00036043100000000133]</msg>
<status status="PASS" starttime="20201029 12:47:50.078" endtime="20201029 12:47:50.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.073" endtime="20201029 12:47:50.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:50.085" endtime="20201029 12:47:50.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.083" endtime="20201029 12:47:50.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.082" endtime="20201029 12:47:50.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.702" endtime="20201029 12:47:50.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.702" endtime="20201029 12:47:50.105"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.114" endtime="20201029 12:47:50.153"></status>
</kw>
<msg timestamp="20201029 12:47:50.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.113" endtime="20201029 12:47:50.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.155" endtime="20201029 12:47:50.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.157" endtime="20201029 12:47:50.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.110" endtime="20201029 12:47:50.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.108" endtime="20201029 12:47:50.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.167" endtime="20201029 12:47:50.455"></status>
</kw>
<msg timestamp="20201029 12:47:50.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025449764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025813194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.165" endtime="20201029 12:47:50.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025449764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025813194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.459" endtime="20201029 12:47:50.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.467" endtime="20201029 12:47:50.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.163" endtime="20201029 12:47:50.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.161" endtime="20201029 12:47:50.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:50.474" level="INFO">${RESULT} = [{'diff': 0.0003634300000000014}, {'diff': 0.00035930500000000073}, {'diff': 0.0003571389999999994}, {'diff': 0.0003852230000000005}, {'diff': 0.00035691700000000173}, {'diff': 0.00036024999999999946}...</msg>
<status status="PASS" starttime="20201029 12:47:50.471" endtime="20201029 12:47:50.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:50.478" level="INFO">${ACCURACY} = {'diff': [0.0003634300000000014, 0.00035930500000000073, 0.0003571389999999994, 0.0003852230000000005, 0.00035691700000000173, 0.00036024999999999946, 0.00038619500000000237, 0.00038602800000000007, 0...</msg>
<status status="PASS" starttime="20201029 12:47:50.475" endtime="20201029 12:47:50.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.483" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 12:47:50.482" endtime="20201029 12:47:50.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.485" level="INFO">VALUE: [0.0003634300000000014, 0.00035930500000000073, 0.0003571389999999994, 0.0003852230000000005, 0.00035691700000000173, 0.00036024999999999946, 0.00038619500000000237, 0.00038602800000000007, 0.00038637499999999783, 0.0003588199999999993, 0.00038522299999999704, 0.0003607090000000007, 0.00035729099999999916, 0.00035644500000000037, 0.0003598330000000004, 0.00036097200000000454, 0.0003576250000000003, 0.00038494499999999765, 0.00035809700000000166, 0.00038595799999999875, 0.00035774999999999696, 0.000358861000000002, 0.00035804200000000286, 0.0003861530000000002, 0.00038534800000000063, 0.00035836099999999455, 0.00036030499999999827, 0.0003858609999999943, 0.00036102799999999935, 0.00038597300000000473, 0.0003571249999999998, 0.0003588890000000011, 0.00036115200000000347, 0.00038604199999999617, 0.0003862499999999977, 0.0003562359999999959, 0.0003855550000000027, 0.0003607230000000003, 0.0003862499999999977, 0.00036037500000000305, 0.00038607000000000224, 0.00036011100000000323, 0.0003601250000000028, 0.00035993000000000136, 0.0003576389999999999, 0.0003608470000000044, 0.00035791699999999926, 0.00035924999999999846, 0.0003571939999999982, 0.00038480500000000195]</msg>
<status status="PASS" starttime="20201029 12:47:50.484" endtime="20201029 12:47:50.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.479" endtime="20201029 12:47:50.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:50.491" endtime="20201029 12:47:50.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.489" endtime="20201029 12:47:50.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.488" endtime="20201029 12:47:50.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.106" endtime="20201029 12:47:50.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.106" endtime="20201029 12:47:50.511"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.520" endtime="20201029 12:47:50.561"></status>
</kw>
<msg timestamp="20201029 12:47:50.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.519" endtime="20201029 12:47:50.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.562" endtime="20201029 12:47:50.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.565" endtime="20201029 12:47:50.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.516" endtime="20201029 12:47:50.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.514" endtime="20201029 12:47:50.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.574" endtime="20201029 12:47:50.861"></status>
</kw>
<msg timestamp="20201029 12:47:50.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026367833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026733986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.573" endtime="20201029 12:47:50.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026367833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026733986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.865" endtime="20201029 12:47:50.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.874" endtime="20201029 12:47:50.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.570" endtime="20201029 12:47:50.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.568" endtime="20201029 12:47:50.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:50.880" level="INFO">${RESULT} = [{'diff': 0.000366153000000001}, {'diff': 0.00038511199999999995}, {'diff': 0.00038638900000000087}, {'diff': 0.0003595420000000009}, {'diff': 0.0003860689999999993}, {'diff': 0.00035797200000000154},...</msg>
<status status="PASS" starttime="20201029 12:47:50.877" endtime="20201029 12:47:50.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:50.885" level="INFO">${ACCURACY} = {'diff': [0.000366153000000001, 0.00038511199999999995, 0.00038638900000000087, 0.0003595420000000009, 0.0003860689999999993, 0.00035797200000000154, 0.0003562769999999986, 0.00035787500000000055, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:50.881" endtime="20201029 12:47:50.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.889" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 12:47:50.888" endtime="20201029 12:47:50.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.892" level="INFO">VALUE: [0.000366153000000001, 0.00038511199999999995, 0.00038638900000000087, 0.0003595420000000009, 0.0003860689999999993, 0.00035797200000000154, 0.0003562769999999986, 0.00035787500000000055, 0.0003573059999999982, 0.0003573610000000005, 0.0003583890000000006, 0.0003564859999999996, 0.00036112499999999687, 0.00038545799999999825, 0.00036015300000000194, 0.0003564720000000035, 0.0003610269999999999, 0.00038494499999999765, 0.00035655500000000145, 0.0003578060000000022, 0.00035711100000000023, 0.0003591390000000014, 0.0003862639999999973, 0.00035687499999999955, 0.00035676400000000247, 0.0003858750000000008, 0.00038526300000000374, 0.0003847910000000024, 0.0003859439999999992, 0.00038556900000000227, 0.00036093100000000183, 0.0003589030000000007, 0.00038508300000000134, 0.00035626399999999503, 0.0003591380000000019, 0.00035755600000000193, 0.0003580969999999947, 0.00038595799999999875, 0.0003569300000000053, 0.0003863339999999951, 0.0003588469999999955, 0.0003592779999999976, 0.00038599999999999746, 0.0003608469999999975, 0.0003569300000000053, 0.00036047200000000057, 0.000360667000000002, 0.00035815299999999994, 0.0003852640000000032, 0.00036081899999999834]</msg>
<status status="PASS" starttime="20201029 12:47:50.890" endtime="20201029 12:47:50.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.885" endtime="20201029 12:47:50.894"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:50.898" endtime="20201029 12:47:50.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.896" endtime="20201029 12:47:50.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.895" endtime="20201029 12:47:50.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.512" endtime="20201029 12:47:50.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.512" endtime="20201029 12:47:50.919"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.928" endtime="20201029 12:47:50.962"></status>
</kw>
<msg timestamp="20201029 12:47:50.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.926" endtime="20201029 12:47:50.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.964" endtime="20201029 12:47:50.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.966" endtime="20201029 12:47:50.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.923" endtime="20201029 12:47:50.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.921" endtime="20201029 12:47:50.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.976" endtime="20201029 12:47:51.262"></status>
</kw>
<msg timestamp="20201029 12:47:51.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021201236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021571472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.974" endtime="20201029 12:47:51.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021201236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021571472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.266" endtime="20201029 12:47:51.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.274" endtime="20201029 12:47:51.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.971" endtime="20201029 12:47:51.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.970" endtime="20201029 12:47:51.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:51.281" level="INFO">${RESULT} = [{'diff': 0.00037023600000000295}, {'diff': 0.0003572090000000007}, {'diff': 0.0003564859999999996}, {'diff': 0.00038654200000000014}, {'diff': 0.00035825000000000093}, {'diff': 0.0003577220000000013}...</msg>
<status status="PASS" starttime="20201029 12:47:51.278" endtime="20201029 12:47:51.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:51.286" level="INFO">${ACCURACY} = {'diff': [0.00037023600000000295, 0.0003572090000000007, 0.0003564859999999996, 0.00038654200000000014, 0.00035825000000000093, 0.0003577220000000013, 0.0003601810000000011, 0.00035987500000000255, 0....</msg>
<status status="PASS" starttime="20201029 12:47:51.282" endtime="20201029 12:47:51.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.291" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 12:47:51.289" endtime="20201029 12:47:51.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.293" level="INFO">VALUE: [0.00037023600000000295, 0.0003572090000000007, 0.0003564859999999996, 0.00038654200000000014, 0.00035825000000000093, 0.0003577220000000013, 0.0003601810000000011, 0.00035987500000000255, 0.0003564999999999992, 0.0003566939999999977, 0.0003852919999999989, 0.00035791699999999926, 0.0003854170000000025, 0.00038652800000000057, 0.0003561950000000001, 0.0003590410000000009, 0.00035893000000000036, 0.00038530500000000245, 0.00036080599999999824, 0.0003868339999999991, 0.00035805599999999896, 0.0003611109999999973, 0.00038545799999999825, 0.000360361, 0.0003581939999999992, 0.00038620800000000247, 0.0003604590000000005, 0.0003863750000000013, 0.0003580689999999956, 0.000360959000000001, 0.00038606899999999583, 0.00036012499999999587, 0.0003594589999999995, 0.0003583060000000027, 0.00036119500000000165, 0.0003855420000000026, 0.00038668000000000036, 0.00035963799999999546, 0.0003582920000000031, 0.0003594589999999995, 0.0003571940000000051, 0.0003587089999999987, 0.00035847199999999857, 0.00035795800000000544, 0.0003852919999999954, 0.00035820799999999875, 0.00035822200000000526, 0.0003589030000000007, 0.00035787500000000055, 0.00036032000000000425]</msg>
<status status="PASS" starttime="20201029 12:47:51.292" endtime="20201029 12:47:51.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.287" endtime="20201029 12:47:51.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:51.298" endtime="20201029 12:47:51.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.297" endtime="20201029 12:47:51.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.295" endtime="20201029 12:47:51.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.920" endtime="20201029 12:47:51.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.919" endtime="20201029 12:47:51.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.658" endtime="20201029 12:47:51.319"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:10.581" endtime="20201029 12:47:51.320" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:46:28.013" endtime="20201029 12:47:51.324"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.377" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:47:51.385" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:47:52.605" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:47:51.376" endtime="20201029 12:47:52.606"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.611" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:47:52.608" endtime="20201029 12:47:52.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.374" endtime="20201029 12:47:52.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:52.618" endtime="20201029 12:47:52.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.615" endtime="20201029 12:47:52.804"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.816" endtime="20201029 12:47:52.837"></status>
</kw>
<msg timestamp="20201029 12:47:52.837" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.815" endtime="20201029 12:47:52.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.840" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.838" endtime="20201029 12:47:52.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.843" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:52.841" endtime="20201029 12:47:52.844"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:52.812" endtime="20201029 12:47:52.844"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:52.810" endtime="20201029 12:47:52.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.809" endtime="20201029 12:47:52.845"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:52.849" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:52.848" endtime="20201029 12:47:52.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.846" endtime="20201029 12:47:52.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.808" endtime="20201029 12:47:52.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.807" endtime="20201029 12:47:52.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.851" endtime="20201029 12:47:52.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.806" endtime="20201029 12:47:52.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.854" endtime="20201029 12:47:52.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.805" endtime="20201029 12:47:52.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.373" endtime="20201029 12:47:52.856"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:52.862" endtime="20201029 12:47:52.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.861" endtime="20201029 12:47:52.883"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.907" endtime="20201029 12:47:52.927"></status>
</kw>
<msg timestamp="20201029 12:47:52.928" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.905" endtime="20201029 12:47:52.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.930" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.929" endtime="20201029 12:47:52.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.934" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:52.931" endtime="20201029 12:47:52.935"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:52.901" endtime="20201029 12:47:52.935"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:52.895" endtime="20201029 12:47:52.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.892" endtime="20201029 12:47:52.936"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:52.940" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:52.939" endtime="20201029 12:47:52.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.937" endtime="20201029 12:47:52.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.891" endtime="20201029 12:47:52.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.889" endtime="20201029 12:47:52.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.942" endtime="20201029 12:47:52.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.886" endtime="20201029 12:47:52.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.883" endtime="20201029 12:47:52.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.859" endtime="20201029 12:47:52.945"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.953" endtime="20201029 12:47:59.070"></status>
</kw>
<msg timestamp="20201029 12:47:59.072" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.952" endtime="20201029 12:47:59.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.079" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.075" endtime="20201029 12:47:59.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.082" endtime="20201029 12:47:59.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.949" endtime="20201029 12:47:59.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.947" endtime="20201029 12:47:59.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:59.093" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201029 12:47:59.089" endtime="20201029 12:47:59.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.103" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:59.101" endtime="20201029 12:47:59.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.108" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:47:59.106" endtime="20201029 12:47:59.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.095" endtime="20201029 12:47:59.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.118" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:59.116" endtime="20201029 12:47:59.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.123" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:47:59.121" endtime="20201029 12:47:59.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.111" endtime="20201029 12:47:59.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.134" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:47:59.131" endtime="20201029 12:47:59.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.138" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:47:59.136" endtime="20201029 12:47:59.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.126" endtime="20201029 12:47:59.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.155" endtime="20201029 12:47:59.461"></status>
</kw>
<msg timestamp="20201029 12:47:59.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084955097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.184748667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:59.151" endtime="20201029 12:47:59.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084955097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.184748667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:59.465" endtime="20201029 12:47:59.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.474" endtime="20201029 12:47:59.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.145" endtime="20201029 12:47:59.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.142" endtime="20201029 12:47:59.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:47:59.480" level="INFO">${FILTERED} = [{'diff': 0.09979357000000001}, {'diff': 0.09965647300000002}, {'diff': 0.09968886100000002}, {'diff': 0.099683611}, {'diff': 0.09966747199999998}, {'diff': 0.09969412500000008}, {'diff': 0.0996980980...</msg>
<status status="PASS" starttime="20201029 12:47:59.477" endtime="20201029 12:47:59.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:59.485" level="INFO">${RESULT} = {'diff': [0.09979357000000001, 0.09965647300000002, 0.09968886100000002, 0.099683611, 0.09966747199999998, 0.09969412500000008, 0.09969809800000007, 0.09970338899999998, 0.09968494399999994, 0.0996600...</msg>
<status status="PASS" starttime="20201029 12:47:59.481" endtime="20201029 12:47:59.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.489" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:47:59.488" endtime="20201029 12:47:59.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.491" level="INFO">VALUE: [0.09979357000000001, 0.09965647300000002, 0.09968886100000002, 0.099683611, 0.09966747199999998, 0.09969412500000008, 0.09969809800000007, 0.09970338899999998, 0.09968494399999994, 0.09966005499999997, 0.09970020800000001, 0.09970902799999992, 0.09972379100000017, 0.09971508299999998, 0.09966918000000002, 0.09970048599999992, 0.09968952800000008, 0.09967863899999996, 0.09968366700000009, 0.0996671389999999, 0.09968362499999994, 0.09971438899999985, 0.099685472, 0.09968052799999993, 0.09966302800000015, 0.09971811100000005, 0.09968883300000009, 0.09969066699999996, 0.09969200000000011, 0.09969509700000012, 0.09972097300000016, 0.09971791699999999, 0.09970313899999983, 0.09970358399999979, 0.09965807000000027, 0.099704778, 0.09970542999999976, 0.09973491700000015, 0.09971590299999988, 0.09967333400000022, 0.09968638900000037, 0.09969201400000038, 0.09968162500000055, 0.09968877799999998, 0.0996791659999996, 0.09970570800000012, 0.09973408300000042, 0.09971826399999983, 0.09968511200000041, 0.09966307000000008, 0.09969033399999994]</msg>
<status status="PASS" starttime="20201029 12:47:59.490" endtime="20201029 12:47:59.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.485" endtime="20201029 12:47:59.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.945" endtime="20201029 12:47:59.493"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:52.857" endtime="20201029 12:47:59.494" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:59.500" endtime="20201029 12:47:59.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.499" endtime="20201029 12:47:59.520"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.535" endtime="20201029 12:47:59.554"></status>
</kw>
<msg timestamp="20201029 12:47:59.555" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.533" endtime="20201029 12:47:59.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.557" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.556" endtime="20201029 12:47:59.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.560" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:59.559" endtime="20201029 12:47:59.561"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:59.531" endtime="20201029 12:47:59.561"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:59.528" endtime="20201029 12:47:59.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.526" endtime="20201029 12:47:59.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:59.566" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:59.566" endtime="20201029 12:47:59.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.563" endtime="20201029 12:47:59.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.525" endtime="20201029 12:47:59.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.524" endtime="20201029 12:47:59.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.568" endtime="20201029 12:47:59.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.523" endtime="20201029 12:47:59.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.521" endtime="20201029 12:47:59.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.497" endtime="20201029 12:47:59.571"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.580" endtime="20201029 12:48:05.692"></status>
</kw>
<msg timestamp="20201029 12:48:05.693" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.578" endtime="20201029 12:48:05.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.697" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.694" endtime="20201029 12:48:05.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.699" endtime="20201029 12:48:05.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.575" endtime="20201029 12:48:05.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.573" endtime="20201029 12:48:05.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:05.705" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201029 12:48:05.703" endtime="20201029 12:48:05.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.711" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:05.710" endtime="20201029 12:48:05.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.714" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:05.713" endtime="20201029 12:48:05.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.707" endtime="20201029 12:48:05.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.722" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:05.720" endtime="20201029 12:48:05.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.725" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:05.724" endtime="20201029 12:48:05.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.716" endtime="20201029 12:48:05.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.730" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:05.729" endtime="20201029 12:48:05.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.732" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:48:05.731" endtime="20201029 12:48:05.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.726" endtime="20201029 12:48:05.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.740" endtime="20201029 12:48:06.034"></status>
</kw>
<msg timestamp="20201029 12:48:06.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073768167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173568583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:05.738" endtime="20201029 12:48:06.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073768167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173568583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:06.039" endtime="20201029 12:48:06.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.047" endtime="20201029 12:48:06.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.735" endtime="20201029 12:48:06.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.734" endtime="20201029 12:48:06.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:06.054" level="INFO">${FILTERED} = [{'diff': 0.099800416}, {'diff': 0.099679097}, {'diff': 0.09968525}, {'diff': 0.09968712500000004}, {'diff': 0.09966969500000006}, {'diff': 0.09969337500000008}, {'diff': 0.09971316699999999}, {'diff'...</msg>
<status status="PASS" starttime="20201029 12:48:06.050" endtime="20201029 12:48:06.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:06.058" level="INFO">${RESULT} = {'diff': [0.099800416, 0.099679097, 0.09968525, 0.09968712500000004, 0.09966969500000006, 0.09969337500000008, 0.09971316699999999, 0.09971393000000006, 0.09967630599999999, 0.09968291699999998, 0.099...</msg>
<status status="PASS" starttime="20201029 12:48:06.055" endtime="20201029 12:48:06.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.063" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:06.062" endtime="20201029 12:48:06.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.065" level="INFO">VALUE: [0.099800416, 0.099679097, 0.09968525, 0.09968712500000004, 0.09966969500000006, 0.09969337500000008, 0.09971316699999999, 0.09971393000000006, 0.09967630599999999, 0.09968291699999998, 0.09971858400000011, 0.09969452800000012, 0.09970306900000003, 0.09968870799999996, 0.09966706899999989, 0.09968677799999992, 0.09971562499999997, 0.0997011940000001, 0.09967818100000003, 0.09964894499999999, 0.09968184800000035, 0.09967133399999994, 0.09970994499999986, 0.09968418099999976, 0.09966080500000007, 0.09971197300000023, 0.09968401399999971, 0.09967968100000002, 0.09967980500000007, 0.09966480499999975, 0.09970118099999992, 0.09970029200000008, 0.09968555499999976, 0.09969911100000006, 0.09969005600000003, 0.09970188899999988, 0.0996978340000001, 0.09969008400000012, 0.0997083889999999, 0.09966669399999972, 0.09969459700000005, 0.09969895800000028, 0.09972047200000045, 0.09968401400000015, 0.09968184700000027, 0.09970529100000025, 0.09969741700000068, 0.09967993100000072, 0.09968570799999998, 0.09966997199999916, 0.09972699999999968]</msg>
<status status="PASS" starttime="20201029 12:48:06.064" endtime="20201029 12:48:06.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.059" endtime="20201029 12:48:06.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.572" endtime="20201029 12:48:06.067"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:59.495" endtime="20201029 12:48:06.068" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:06.074" endtime="20201029 12:48:06.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.073" endtime="20201029 12:48:06.095"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.108" endtime="20201029 12:48:06.125"></status>
</kw>
<msg timestamp="20201029 12:48:06.126" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.106" endtime="20201029 12:48:06.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.128" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.127" endtime="20201029 12:48:06.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.131" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:06.130" endtime="20201029 12:48:06.132"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:06.104" endtime="20201029 12:48:06.133"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:06.101" endtime="20201029 12:48:06.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.100" endtime="20201029 12:48:06.134"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:06.137" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:06.137" endtime="20201029 12:48:06.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.135" endtime="20201029 12:48:06.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.099" endtime="20201029 12:48:06.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.098" endtime="20201029 12:48:06.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.139" endtime="20201029 12:48:06.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.097" endtime="20201029 12:48:06.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.095" endtime="20201029 12:48:06.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.072" endtime="20201029 12:48:06.142"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.152" endtime="20201029 12:48:12.266"></status>
</kw>
<msg timestamp="20201029 12:48:12.267" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.150" endtime="20201029 12:48:12.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.273" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:12.269" endtime="20201029 12:48:12.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.275" endtime="20201029 12:48:12.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.146" endtime="20201029 12:48:12.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.144" endtime="20201029 12:48:12.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:12.292" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201029 12:48:12.283" endtime="20201029 12:48:12.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.301" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:12.299" endtime="20201029 12:48:12.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.306" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:12.304" endtime="20201029 12:48:12.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.294" endtime="20201029 12:48:12.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.317" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:12.314" endtime="20201029 12:48:12.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.321" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:12.319" endtime="20201029 12:48:12.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.309" endtime="20201029 12:48:12.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.332" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:12.329" endtime="20201029 12:48:12.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.336" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:48:12.334" endtime="20201029 12:48:12.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.324" endtime="20201029 12:48:12.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.350" endtime="20201029 12:48:12.648"></status>
</kw>
<msg timestamp="20201029 12:48:12.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07112575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.170895736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:12.349" endtime="20201029 12:48:12.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07112575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.170895736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:12.652" endtime="20201029 12:48:12.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.661" endtime="20201029 12:48:12.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.343" endtime="20201029 12:48:12.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.340" endtime="20201029 12:48:12.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:12.667" level="INFO">${FILTERED} = [{'diff': 0.09976998599999999}, {'diff': 0.09970425}, {'diff': 0.099703987}, {'diff': 0.09972379200000003}, {'diff': 0.09968533299999999}, {'diff': 0.09970154200000003}, {'diff': 0.09971652799999997},...</msg>
<status status="PASS" starttime="20201029 12:48:12.664" endtime="20201029 12:48:12.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:12.674" level="INFO">${RESULT} = {'diff': [0.09976998599999999, 0.09970425, 0.099703987, 0.09972379200000003, 0.09968533299999999, 0.09970154200000003, 0.09971652799999997, 0.09969194400000003, 0.09968862499999998, 0.0996503470000000...</msg>
<status status="PASS" starttime="20201029 12:48:12.668" endtime="20201029 12:48:12.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.679" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:12.678" endtime="20201029 12:48:12.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.681" level="INFO">VALUE: [0.09976998599999999, 0.09970425, 0.099703987, 0.09972379200000003, 0.09968533299999999, 0.09970154200000003, 0.09971652799999997, 0.09969194400000003, 0.09968862499999998, 0.09965034700000008, 0.09967390300000001, 0.09968104200000005, 0.09968738900000007, 0.09968290299999993, 0.0996448889999999, 0.0996957220000001, 0.099671222, 0.09967856899999994, 0.09968252799999999, 0.09966729099999982, 0.09971320800000028, 0.09970673599999991, 0.09970162500000024, 0.09967658400000001, 0.09965368099999994, 0.09967818000000017, 0.09970355500000005, 0.09972647199999995, 0.099724653, 0.0996532499999998, 0.09967227800000034, 0.0996815980000001, 0.09967977800000005, 0.09970044399999978, 0.09965206900000023, 0.0996809169999997, 0.09972427799999961, 0.09970117999999983, 0.09971448599999988, 0.0996835690000002, 0.09970215299999996, 0.09969084799999983, 0.09971008399999981, 0.0996913199999998, 0.09969005600000003, 0.09972122200000033, 0.0997236810000004, 0.09972680500000042, 0.09969475000000028, 0.09966101300000041, 0.09971812499999988]</msg>
<status status="PASS" starttime="20201029 12:48:12.680" endtime="20201029 12:48:12.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.675" endtime="20201029 12:48:12.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.143" endtime="20201029 12:48:12.683"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:06.069" endtime="20201029 12:48:12.684" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:12.690" endtime="20201029 12:48:12.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.689" endtime="20201029 12:48:12.710"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.724" endtime="20201029 12:48:12.741"></status>
</kw>
<msg timestamp="20201029 12:48:12.742" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:12.722" endtime="20201029 12:48:12.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.745" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:12.743" endtime="20201029 12:48:12.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.749" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:12.746" endtime="20201029 12:48:12.749"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:12.720" endtime="20201029 12:48:12.750"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:12.717" endtime="20201029 12:48:12.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.716" endtime="20201029 12:48:12.751"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:12.755" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:12.754" endtime="20201029 12:48:12.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.751" endtime="20201029 12:48:12.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.715" endtime="20201029 12:48:12.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.714" endtime="20201029 12:48:12.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.756" endtime="20201029 12:48:12.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.713" endtime="20201029 12:48:12.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.711" endtime="20201029 12:48:12.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.687" endtime="20201029 12:48:12.759"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.768" endtime="20201029 12:48:18.881"></status>
</kw>
<msg timestamp="20201029 12:48:18.883" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:12.766" endtime="20201029 12:48:18.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.888" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:18.885" endtime="20201029 12:48:18.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.890" endtime="20201029 12:48:18.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.763" endtime="20201029 12:48:18.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.761" endtime="20201029 12:48:18.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:18.902" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201029 12:48:18.898" endtime="20201029 12:48:18.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.912" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:18.909" endtime="20201029 12:48:18.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.916" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:18.914" endtime="20201029 12:48:18.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.904" endtime="20201029 12:48:18.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.927" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:18.925" endtime="20201029 12:48:18.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.931" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:18.929" endtime="20201029 12:48:18.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.920" endtime="20201029 12:48:18.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.942" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:18.940" endtime="20201029 12:48:18.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.946" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:48:18.944" endtime="20201029 12:48:18.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.935" endtime="20201029 12:48:18.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.963" endtime="20201029 12:48:19.269"></status>
</kw>
<msg timestamp="20201029 12:48:19.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072020528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.171781681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:18.959" endtime="20201029 12:48:19.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072020528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.171781681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:19.273" endtime="20201029 12:48:19.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.281" endtime="20201029 12:48:19.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.954" endtime="20201029 12:48:19.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.950" endtime="20201029 12:48:19.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:19.288" level="INFO">${FILTERED} = [{'diff': 0.09976115299999999}, {'diff': 0.09974048599999999}, {'diff': 0.09970473600000002}, {'diff': 0.09969536099999998}, {'diff': 0.09967111099999998}, {'diff': 0.099745223}, {'diff': 0.0997356950...</msg>
<status status="PASS" starttime="20201029 12:48:19.285" endtime="20201029 12:48:19.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:19.293" level="INFO">${RESULT} = {'diff': [0.09976115299999999, 0.09974048599999999, 0.09970473600000002, 0.09969536099999998, 0.09967111099999998, 0.099745223, 0.09973569500000001, 0.09970643099999998, 0.099704652, 0.099694264000000...</msg>
<status status="PASS" starttime="20201029 12:48:19.289" endtime="20201029 12:48:19.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.299" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:19.297" endtime="20201029 12:48:19.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.302" level="INFO">VALUE: [0.09976115299999999, 0.09974048599999999, 0.09970473600000002, 0.09969536099999998, 0.09967111099999998, 0.099745223, 0.09973569500000001, 0.09970643099999998, 0.099704652, 0.09969426400000003, 0.0997142499999999, 0.09973040299999991, 0.09971288900000008, 0.09970659699999995, 0.099673028, 0.09972667999999985, 0.09974547200000017, 0.09972240199999982, 0.09969766700000005, 0.09970122300000006, 0.09970547299999977, 0.09968369499999996, 0.09969116700000002, 0.0996960549999999, 0.09966225000000017, 0.09968769500000008, 0.09970911100000013, 0.09972068099999998, 0.09968245899999983, 0.09967177800000027, 0.09973166599999983, 0.09971252799999997, 0.09969258400000003, 0.09971606999999993, 0.09969261100000004, 0.0997352359999999, 0.09969526400000017, 0.09968573600000008, 0.09970754199999998, 0.09969433299999952, 0.09972531900000003, 0.09972905500000007, 0.09971597200000026, 0.0996838750000002, 0.0996524860000001, 0.09971126400000063, 0.09968505500000013, 0.09969963900000067, 0.09970916700000032, 0.09969020800000017, 0.09969562499999984]</msg>
<status status="PASS" starttime="20201029 12:48:19.300" endtime="20201029 12:48:19.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.294" endtime="20201029 12:48:19.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.760" endtime="20201029 12:48:19.304"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:12.685" endtime="20201029 12:48:19.305" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:19.314" endtime="20201029 12:48:19.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.312" endtime="20201029 12:48:19.335"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.349" endtime="20201029 12:48:19.369"></status>
</kw>
<msg timestamp="20201029 12:48:19.369" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.348" endtime="20201029 12:48:19.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.372" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.370" endtime="20201029 12:48:19.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.375" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:19.373" endtime="20201029 12:48:19.375"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:19.345" endtime="20201029 12:48:19.376"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:19.341" endtime="20201029 12:48:19.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.340" endtime="20201029 12:48:19.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:19.381" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:19.380" endtime="20201029 12:48:19.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.378" endtime="20201029 12:48:19.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.339" endtime="20201029 12:48:19.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.339" endtime="20201029 12:48:19.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.382" endtime="20201029 12:48:19.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.337" endtime="20201029 12:48:19.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.335" endtime="20201029 12:48:19.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.310" endtime="20201029 12:48:19.385"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.394" endtime="20201029 12:48:25.503"></status>
</kw>
<msg timestamp="20201029 12:48:25.504" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.392" endtime="20201029 12:48:25.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.510" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.506" endtime="20201029 12:48:25.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.512" endtime="20201029 12:48:25.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.389" endtime="20201029 12:48:25.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.387" endtime="20201029 12:48:25.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:25.524" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201029 12:48:25.519" endtime="20201029 12:48:25.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.533" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:25.531" endtime="20201029 12:48:25.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.538" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:25.536" endtime="20201029 12:48:25.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.526" endtime="20201029 12:48:25.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.548" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:25.546" endtime="20201029 12:48:25.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.553" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:25.551" endtime="20201029 12:48:25.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.541" endtime="20201029 12:48:25.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.565" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:25.562" endtime="20201029 12:48:25.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.572" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:48:25.567" endtime="20201029 12:48:25.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.557" endtime="20201029 12:48:25.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.582" endtime="20201029 12:48:25.879"></status>
</kw>
<msg timestamp="20201029 12:48:25.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069353875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169190806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:25.581" endtime="20201029 12:48:25.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069353875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169190806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:25.883" endtime="20201029 12:48:25.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.891" endtime="20201029 12:48:25.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.578" endtime="20201029 12:48:25.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.575" endtime="20201029 12:48:25.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:25.897" level="INFO">${FILTERED} = [{'diff': 0.099836931}, {'diff': 0.099721597}, {'diff': 0.09977965300000002}, {'diff': 0.09973886100000001}, {'diff': 0.09973590300000001}, {'diff': 0.09973566600000006}, {'diff': 0.09976337499999999}...</msg>
<status status="PASS" starttime="20201029 12:48:25.894" endtime="20201029 12:48:25.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:25.901" level="INFO">${RESULT} = {'diff': [0.099836931, 0.099721597, 0.09977965300000002, 0.09973886100000001, 0.09973590300000001, 0.09973566600000006, 0.09976337499999999, 0.099726541, 0.09972105600000003, 0.09969461099999999, 0.09...</msg>
<status status="PASS" starttime="20201029 12:48:25.898" endtime="20201029 12:48:25.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.905" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:25.904" endtime="20201029 12:48:25.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.908" level="INFO">VALUE: [0.099836931, 0.099721597, 0.09977965300000002, 0.09973886100000001, 0.09973590300000001, 0.09973566600000006, 0.09976337499999999, 0.099726541, 0.09972105600000003, 0.09969461099999999, 0.09971766699999995, 0.09972418100000002, 0.09972363900000003, 0.09972108400000002, 0.099693209, 0.09973950000000009, 0.09976030599999985, 0.09972990300000006, 0.09972659699999986, 0.09969225000000015, 0.09973080600000017, 0.09971009800000008, 0.09971841700000006, 0.09971183299999975, 0.09968340200000014, 0.09974163899999988, 0.09972630599999999, 0.09973687499999961, 0.09971541700000008, 0.09975084800000023, 0.09969665300000008, 0.09973081899999992, 0.09974716699999986, 0.09975768000000018, 0.09970837499999963, 0.09973413800000008, 0.09972702700000013, 0.09972908299999972, 0.09975026400000031, 0.09969041599999962, 0.09972944400000028, 0.09973854199999987, 0.09972611199999992, 0.09972258400000023, 0.09969580500000053, 0.09976233300000015, 0.09973080599999928, 0.09972807000000028, 0.09971923600000032, 0.09971597200000026, 0.09972855499999955]</msg>
<status status="PASS" starttime="20201029 12:48:25.907" endtime="20201029 12:48:25.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.902" endtime="20201029 12:48:25.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.386" endtime="20201029 12:48:25.910"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:19.307" endtime="20201029 12:48:25.911" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:25.917" endtime="20201029 12:48:25.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.916" endtime="20201029 12:48:25.937"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.950" endtime="20201029 12:48:25.969"></status>
</kw>
<msg timestamp="20201029 12:48:25.970" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.948" endtime="20201029 12:48:25.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.972" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.971" endtime="20201029 12:48:25.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.975" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:25.973" endtime="20201029 12:48:25.976"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:25.946" endtime="20201029 12:48:25.976"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:25.943" endtime="20201029 12:48:25.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.942" endtime="20201029 12:48:25.977"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:25.981" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:25.980" endtime="20201029 12:48:25.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.978" endtime="20201029 12:48:25.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.941" endtime="20201029 12:48:25.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.941" endtime="20201029 12:48:25.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.983" endtime="20201029 12:48:25.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.939" endtime="20201029 12:48:25.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.938" endtime="20201029 12:48:25.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.914" endtime="20201029 12:48:25.985"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.994" endtime="20201029 12:48:32.103"></status>
</kw>
<msg timestamp="20201029 12:48:32.104" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.992" endtime="20201029 12:48:32.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.109" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:32.106" endtime="20201029 12:48:32.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.111" endtime="20201029 12:48:32.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.989" endtime="20201029 12:48:32.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.987" endtime="20201029 12:48:32.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:32.122" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201029 12:48:32.118" endtime="20201029 12:48:32.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.130" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:32.128" endtime="20201029 12:48:32.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.135" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:32.133" endtime="20201029 12:48:32.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.124" endtime="20201029 12:48:32.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.143" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:32.141" endtime="20201029 12:48:32.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.145" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:32.144" endtime="20201029 12:48:32.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.138" endtime="20201029 12:48:32.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.149" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:32.148" endtime="20201029 12:48:32.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.151" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:48:32.150" endtime="20201029 12:48:32.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.146" endtime="20201029 12:48:32.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.158" endtime="20201029 12:48:32.455"></status>
</kw>
<msg timestamp="20201029 12:48:32.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068365236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168125875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:32.157" endtime="20201029 12:48:32.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068365236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168125875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:32.459" endtime="20201029 12:48:32.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.467" endtime="20201029 12:48:32.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.154" endtime="20201029 12:48:32.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.153" endtime="20201029 12:48:32.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:32.473" level="INFO">${FILTERED} = [{'diff': 0.09976063900000001}, {'diff': 0.09968542999999999}, {'diff': 0.09972220800000003}, {'diff': 0.09971131899999996}, {'diff': 0.09970916699999993}, {'diff': 0.09970040300000005}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201029 12:48:32.470" endtime="20201029 12:48:32.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:32.478" level="INFO">${RESULT} = {'diff': [0.09976063900000001, 0.09968542999999999, 0.09972220800000003, 0.09971131899999996, 0.09970916699999993, 0.09970040300000005, 0.09972030499999995, 0.09969280600000008, 0.09971663900000005, 0...</msg>
<status status="PASS" starttime="20201029 12:48:32.474" endtime="20201029 12:48:32.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.482" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:32.481" endtime="20201029 12:48:32.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.484" level="INFO">VALUE: [0.09976063900000001, 0.09968542999999999, 0.09972220800000003, 0.09971131899999996, 0.09970916699999993, 0.09970040300000005, 0.09972030499999995, 0.09969280600000008, 0.09971663900000005, 0.09965983299999992, 0.09969484700000009, 0.09969216600000008, 0.09969226399999997, 0.09970840200000008, 0.09966831899999984, 0.09970359699999998, 0.0997006530000002, 0.09971793100000004, 0.09971967999999998, 0.0997034440000002, 0.09971351399999984, 0.09971008300000017, 0.0997365969999997, 0.09973057000000018, 0.09966756900000018, 0.09970163900000006, 0.09971867999999962, 0.09971898600000006, 0.09972984700000032, 0.099699486, 0.09969088900000012, 0.09973598699999986, 0.09971505599999997, 0.09972765299999997, 0.09966304199999998, 0.09969754099999983, 0.09970373600000038, 0.0996867779999997, 0.0996953610000002, 0.09966958300000028, 0.0996862080000005, 0.099689111, 0.09968799999999955, 0.09969470799999947, 0.0996897360000002, 0.09970084800000034, 0.09971141699999997, 0.0996981520000002, 0.09969884699999998, 0.09973615299999938, 0.09969444499999991]</msg>
<status status="PASS" starttime="20201029 12:48:32.483" endtime="20201029 12:48:32.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.479" endtime="20201029 12:48:32.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.986" endtime="20201029 12:48:32.486"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:25.912" endtime="20201029 12:48:32.487" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:47:51.332" endtime="20201029 12:48:32.493"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 12:45:41.925" endtime="20201029 12:48:32.525"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
