<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 12:42:29.647" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:42:30.237" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:42:30.245" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:42:31.488" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:42:30.236" endtime="20201029 12:42:31.489"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:42:31.491" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:42:31.490" endtime="20201029 12:42:31.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:30.234" endtime="20201029 12:42:31.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:31.494" endtime="20201029 12:42:31.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.493" endtime="20201029 12:42:31.733"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:31.745" endtime="20201029 12:42:31.765"></status>
</kw>
<msg timestamp="20201029 12:42:31.767" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:31.744" endtime="20201029 12:42:31.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:31.779" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:31.772" endtime="20201029 12:42:31.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:31.789" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:31.783" endtime="20201029 12:42:31.790"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:31.741" endtime="20201029 12:42:31.792"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:31.739" endtime="20201029 12:42:31.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.738" endtime="20201029 12:42:31.795"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:31.806" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:31.804" endtime="20201029 12:42:31.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.798" endtime="20201029 12:42:31.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.737" endtime="20201029 12:42:31.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.736" endtime="20201029 12:42:31.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:31.813" endtime="20201029 12:42:31.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.735" endtime="20201029 12:42:31.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:31.818" endtime="20201029 12:42:31.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.733" endtime="20201029 12:42:31.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:30.233" endtime="20201029 12:42:31.820"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:31.827" endtime="20201029 12:42:31.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.825" endtime="20201029 12:42:31.847"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:31.860" endtime="20201029 12:42:31.874"></status>
</kw>
<msg timestamp="20201029 12:42:31.874" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:31.859" endtime="20201029 12:42:31.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:31.877" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:31.875" endtime="20201029 12:42:31.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:31.880" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:31.878" endtime="20201029 12:42:31.880"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:31.856" endtime="20201029 12:42:31.881"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:31.854" endtime="20201029 12:42:31.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.852" endtime="20201029 12:42:31.882"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:31.885" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:31.885" endtime="20201029 12:42:31.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.883" endtime="20201029 12:42:31.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.851" endtime="20201029 12:42:31.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.851" endtime="20201029 12:42:31.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:31.887" endtime="20201029 12:42:31.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.849" endtime="20201029 12:42:31.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.848" endtime="20201029 12:42:31.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.824" endtime="20201029 12:42:31.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:31.897" endtime="20201029 12:42:31.908"></status>
</kw>
<msg timestamp="20201029 12:42:31.909" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:31.895" endtime="20201029 12:42:31.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:31.911" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:31.910" endtime="20201029 12:42:31.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:31.912" endtime="20201029 12:42:31.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.892" endtime="20201029 12:42:31.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.891" endtime="20201029 12:42:31.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:31.918" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:42:31.917" endtime="20201029 12:42:31.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:31.920" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 12:42:31.920" endtime="20201029 12:42:31.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.915" endtime="20201029 12:42:31.921"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:31.821" endtime="20201029 12:42:31.922" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:42:29.760" endtime="20201029 12:42:31.924"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:42:31.975" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:42:31.983" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:42:33.207" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:42:31.973" endtime="20201029 12:42:33.208"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:42:33.213" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:42:33.211" endtime="20201029 12:42:33.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.972" endtime="20201029 12:42:33.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:33.220" endtime="20201029 12:42:33.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.217" endtime="20201029 12:42:33.498"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:33.513" endtime="20201029 12:42:33.529"></status>
</kw>
<msg timestamp="20201029 12:42:33.529" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:33.511" endtime="20201029 12:42:33.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:33.532" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:33.530" endtime="20201029 12:42:33.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:33.535" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:33.533" endtime="20201029 12:42:33.535"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:33.509" endtime="20201029 12:42:33.536"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:33.506" endtime="20201029 12:42:33.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.504" endtime="20201029 12:42:33.537"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:33.541" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:33.540" endtime="20201029 12:42:33.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.538" endtime="20201029 12:42:33.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.503" endtime="20201029 12:42:33.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.502" endtime="20201029 12:42:33.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:33.542" endtime="20201029 12:42:33.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.500" endtime="20201029 12:42:33.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:33.545" endtime="20201029 12:42:33.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.499" endtime="20201029 12:42:33.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.971" endtime="20201029 12:42:33.547"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:33.554" endtime="20201029 12:42:33.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.552" endtime="20201029 12:42:33.574"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:33.587" endtime="20201029 12:42:33.600"></status>
</kw>
<msg timestamp="20201029 12:42:33.601" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:33.585" endtime="20201029 12:42:33.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:33.604" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:33.602" endtime="20201029 12:42:33.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:33.607" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:33.605" endtime="20201029 12:42:33.607"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:33.583" endtime="20201029 12:42:33.608"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:33.581" endtime="20201029 12:42:33.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.579" endtime="20201029 12:42:33.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:33.612" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:33.612" endtime="20201029 12:42:33.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.609" endtime="20201029 12:42:33.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.579" endtime="20201029 12:42:33.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.578" endtime="20201029 12:42:33.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:33.614" endtime="20201029 12:42:33.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.576" endtime="20201029 12:42:33.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.575" endtime="20201029 12:42:33.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.550" endtime="20201029 12:42:33.617"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:33.625" endtime="20201029 12:42:33.635"></status>
</kw>
<msg timestamp="20201029 12:42:33.636" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:33.624" endtime="20201029 12:42:33.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:33.638" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:33.637" endtime="20201029 12:42:33.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:33.639" endtime="20201029 12:42:33.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.621" endtime="20201029 12:42:33.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.619" endtime="20201029 12:42:33.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:33.648" endtime="20201029 12:42:33.918"></status>
</kw>
<msg timestamp="20201029 12:42:33.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062138028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062138569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:33.647" endtime="20201029 12:42:33.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:33.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062138028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062138569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:33.921" endtime="20201029 12:42:33.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:33.927" endtime="20201029 12:42:33.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.644" endtime="20201029 12:42:33.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.642" endtime="20201029 12:42:33.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:33.933" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 2.819000000001126e-06}, {'diff': 2.8340000000001697e-06}, {'diff': 3.361000000000336e-06}, {'diff': 3.4449999999977554e-06}, {'diff': 3.26400000000282e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:42:33.930" endtime="20201029 12:42:33.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:33.937" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 2.819000000001126e-06, 2.8340000000001697e-06, 3.361000000000336e-06, 3.4449999999977554e-06, 3.26400000000282e-06, 3.1810000000048744e-06, 2.9579999999973516e-06, 2.9...</msg>
<status status="PASS" starttime="20201029 12:42:33.934" endtime="20201029 12:42:33.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:33.941" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:33.940" endtime="20201029 12:42:33.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:33.943" level="INFO">VALUE: [5.409999999997361e-07, 2.819000000001126e-06, 2.8340000000001697e-06, 3.361000000000336e-06, 3.4449999999977554e-06, 3.26400000000282e-06, 3.1810000000048744e-06, 2.9579999999973516e-06, 2.9999999999960614e-06, 3.4029999999990457e-06, 2.972999999996395e-06, 3.347000000000766e-06, 2.8889999999989757e-06, 3.347000000000766e-06, 2.5000000000025002e-06, 3.1389999999992257e-06, 3.361000000000336e-06, 3.01400000000257e-06, 2.901999999999072e-06, 3.4310000000051244e-06, 3.0410000000022364e-06, 2.7219999999966715e-06, 3.388000000000002e-06, 2.6939999999975317e-06, 2.887999999999502e-06]</msg>
<status status="PASS" starttime="20201029 12:42:33.942" endtime="20201029 12:42:33.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.937" endtime="20201029 12:42:33.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.618" endtime="20201029 12:42:33.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.618" endtime="20201029 12:42:33.945"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:33.953" endtime="20201029 12:42:33.963"></status>
</kw>
<msg timestamp="20201029 12:42:33.964" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:33.951" endtime="20201029 12:42:33.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:33.966" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:33.965" endtime="20201029 12:42:33.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:33.967" endtime="20201029 12:42:33.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.948" endtime="20201029 12:42:33.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.947" endtime="20201029 12:42:33.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:33.977" endtime="20201029 12:42:34.264"></status>
</kw>
<msg timestamp="20201029 12:42:34.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062138028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062138569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:33.975" endtime="20201029 12:42:34.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:34.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062138028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062138569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:34.269" endtime="20201029 12:42:34.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:34.277" endtime="20201029 12:42:34.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.973" endtime="20201029 12:42:34.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.971" endtime="20201029 12:42:34.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:34.284" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 2.819000000001126e-06}, {'diff': 2.8340000000001697e-06}, {'diff': 3.361000000000336e-06}, {'diff': 3.4449999999977554e-06}, {'diff': 3.26400000000282e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:42:34.280" endtime="20201029 12:42:34.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:34.288" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 2.819000000001126e-06, 2.8340000000001697e-06, 3.361000000000336e-06, 3.4449999999977554e-06, 3.26400000000282e-06, 3.1810000000048744e-06, 2.9579999999973516e-06, 2.9...</msg>
<status status="PASS" starttime="20201029 12:42:34.285" endtime="20201029 12:42:34.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:34.292" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:34.291" endtime="20201029 12:42:34.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:34.296" level="INFO">VALUE: [5.409999999997361e-07, 2.819000000001126e-06, 2.8340000000001697e-06, 3.361000000000336e-06, 3.4449999999977554e-06, 3.26400000000282e-06, 3.1810000000048744e-06, 2.9579999999973516e-06, 2.9999999999960614e-06, 3.4029999999990457e-06, 2.972999999996395e-06, 3.347000000000766e-06, 2.8889999999989757e-06, 3.347000000000766e-06, 2.5000000000025002e-06, 3.1389999999992257e-06, 3.361000000000336e-06, 3.01400000000257e-06, 2.901999999999072e-06, 3.4310000000051244e-06, 3.0410000000022364e-06, 2.7219999999966715e-06, 3.388000000000002e-06, 2.6939999999975317e-06, 2.887999999999502e-06, 0.31817307, 3.083999999986542e-06, 3.028000000016018e-06, 3.4309999999981855e-06, 2.8340000000071086e-06, 2.8750000000132836e-06, 3.0829999999593127e-06, 3.276999999968222e-06, 2.9440000000047206e-06, 2.431000000024941e-06, 3.4169999999500433e-06, 3.0279999999605067e-06, 2.6949999999970053e-06, 3.0689999999666817e-06, 3.179999999991523e-06, 3.2919999999880822e-06, 3.0549999999740507e-06, 2.9169999999911767e-06, 2.8750000000132836e-06, 3.3469999999868882e-06, 2.6800000000326563e-06, 3.3469999999868882e-06, 3.014000000023387e-06, 2.9029999999985456e-06, 2.7499999999958114e-06, 3.208000000032296e-06]</msg>
<status status="PASS" starttime="20201029 12:42:34.294" endtime="20201029 12:42:34.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:34.289" endtime="20201029 12:42:34.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.945" endtime="20201029 12:42:34.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.945" endtime="20201029 12:42:34.297"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:34.305" endtime="20201029 12:42:34.314"></status>
</kw>
<msg timestamp="20201029 12:42:34.315" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:34.304" endtime="20201029 12:42:34.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:34.317" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:34.316" endtime="20201029 12:42:34.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:34.318" endtime="20201029 12:42:34.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:34.301" endtime="20201029 12:42:34.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:34.299" endtime="20201029 12:42:34.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:34.330" endtime="20201029 12:42:34.626"></status>
</kw>
<msg timestamp="20201029 12:42:34.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062208583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062211472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:34.328" endtime="20201029 12:42:34.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:34.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062208583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062211472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:34.631" endtime="20201029 12:42:34.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:34.641" endtime="20201029 12:42:34.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:34.324" endtime="20201029 12:42:34.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:34.322" endtime="20201029 12:42:34.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:34.648" level="INFO">${RESULT} = [{'diff': 2.8889999999989757e-06}, {'diff': 3.347000000000766e-06}, {'diff': 2.5000000000025002e-06}, {'diff': 3.1389999999992257e-06}, {'diff': 3.361000000000336e-06}, {'diff': 3.01400000000257e-06},...</msg>
<status status="PASS" starttime="20201029 12:42:34.644" endtime="20201029 12:42:34.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:34.654" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.8889999999989757e-06, 3.347000000000766e-06, 2.5000000000025002e-06, 3.1389999999992257e-06, 3.361000000000336e-06, 3.01400000000257e-06, 2.901999999999072e-06, 3.4310000000051244e-06, 3.0...</msg>
<status status="PASS" starttime="20201029 12:42:34.649" endtime="20201029 12:42:34.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:34.658" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:34.657" endtime="20201029 12:42:34.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:34.661" level="INFO">VALUE: [2.8889999999989757e-06, 3.347000000000766e-06, 2.5000000000025002e-06, 3.1389999999992257e-06, 3.361000000000336e-06, 3.01400000000257e-06, 2.901999999999072e-06, 3.4310000000051244e-06, 3.0410000000022364e-06, 2.7219999999966715e-06, 3.388000000000002e-06, 2.6939999999975317e-06, 2.887999999999502e-06, 0.31817307, 3.083999999986542e-06, 3.028000000016018e-06, 3.4309999999981855e-06, 2.8340000000071086e-06, 2.8750000000132836e-06, 3.0829999999593127e-06, 3.276999999968222e-06, 2.9440000000047206e-06, 2.431000000024941e-06, 3.4169999999500433e-06, 3.0279999999605067e-06, 2.6949999999970053e-06, 3.0689999999666817e-06, 3.179999999991523e-06, 3.2919999999880822e-06, 3.0549999999740507e-06, 2.9169999999911767e-06, 2.8750000000132836e-06, 3.3469999999868882e-06, 2.6800000000326563e-06, 3.3469999999868882e-06, 3.014000000023387e-06, 2.9029999999985456e-06, 2.7499999999958114e-06, 3.208000000032296e-06, 3.152999999977979e-06, 3.318999999946115e-06, 2.9440000000047206e-06, 3.083999999931031e-06, 3.056000000056791e-06, 2.9859999999271025e-06, 2.931000000039319e-06, 3.000000000086267e-06, 2.931000000039319e-06, 2.9159999999084363e-06, 2.7779999999255622e-06, 3.290999999960853e-06, 2.8750000000687947e-06, 2.8189999999872484e-06, 2.596999999937566e-06, 2.7220000000660605e-06, 2.9999999999752447e-06, 2.7360000000031803e-06, 3.5139999999822535e-06, 3.179999999991523e-06, 3.124999999992717e-06, 2.7639999999884424e-06, 3.097999999979173e-06, 2.6810000000043743e-06, 2.8329999999243682e-06]</msg>
<status status="PASS" starttime="20201029 12:42:34.660" endtime="20201029 12:42:34.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:34.654" endtime="20201029 12:42:34.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:34.298" endtime="20201029 12:42:34.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:34.298" endtime="20201029 12:42:34.663"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:34.674" endtime="20201029 12:42:34.685"></status>
</kw>
<msg timestamp="20201029 12:42:34.685" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:34.672" endtime="20201029 12:42:34.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:34.689" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:34.687" endtime="20201029 12:42:34.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:34.691" endtime="20201029 12:42:34.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:34.669" endtime="20201029 12:42:34.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:34.666" endtime="20201029 12:42:34.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:34.703" endtime="20201029 12:42:35.005"></status>
</kw>
<msg timestamp="20201029 12:42:35.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.380531014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.380534042, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:34.701" endtime="20201029 12:42:35.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:35.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.380531014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.380534042, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:35.011" endtime="20201029 12:42:35.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:35.021" endtime="20201029 12:42:35.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:34.697" endtime="20201029 12:42:35.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:34.694" endtime="20201029 12:42:35.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:35.027" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.0689999999666817e-06}, {'diff': 3.179999999991523e-06}, {'diff': 3.2919999999880822e-06}, {'diff': 3.0549999999740507e-06}, {'diff': 2.9169999999911767e-06}, {'diff': 2.875000...</msg>
<status status="PASS" starttime="20201029 12:42:35.024" endtime="20201029 12:42:35.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:35.032" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.0689999999666817e-06, 3.179999999991523e-06, 3.2919999999880822e-06, 3.0549999999740507e-06, 2.9169999999911767e-06, 2.8750000000132836e-06, 3.3469999999868882e-06, 2.6800000000326563e-...</msg>
<status status="PASS" starttime="20201029 12:42:35.028" endtime="20201029 12:42:35.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:35.037" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:35.036" endtime="20201029 12:42:35.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:35.039" level="INFO">VALUE: [0, 3.0689999999666817e-06, 3.179999999991523e-06, 3.2919999999880822e-06, 3.0549999999740507e-06, 2.9169999999911767e-06, 2.8750000000132836e-06, 3.3469999999868882e-06, 2.6800000000326563e-06, 3.3469999999868882e-06, 3.014000000023387e-06, 2.9029999999985456e-06, 2.7499999999958114e-06, 3.208000000032296e-06, 3.152999999977979e-06, 3.318999999946115e-06, 2.9440000000047206e-06, 3.083999999931031e-06, 3.056000000056791e-06, 2.9859999999271025e-06, 2.931000000039319e-06, 3.000000000086267e-06, 2.931000000039319e-06, 2.9159999999084363e-06, 2.7779999999255622e-06, 3.290999999960853e-06, 2.8750000000687947e-06, 2.8189999999872484e-06, 2.596999999937566e-06, 2.7220000000660605e-06, 2.9999999999752447e-06, 2.7360000000031803e-06, 3.5139999999822535e-06, 3.179999999991523e-06, 3.124999999992717e-06, 2.7639999999884424e-06, 3.097999999979173e-06, 2.6810000000043743e-06, 2.8329999999243682e-06, 5.409999999095305e-07, 3.014000000023387e-06, 3.152999999977979e-06, 2.569999999924022e-06, 2.791999999862682e-06, 3.111000000055597e-06, 3.2229999999966452e-06, 3.014000000023387e-06, 3.152000000117283e-06, 3.304999999897973e-06, 3.1250000001037392e-06, 3.041000000036931e-06, 3.319999999806811e-06, 2.8480000000552508e-06, 2.666999999956232e-06, 3.111000000055597e-06, 3.097000000007455e-06, 2.6660000000955364e-06, 2.9859999999271025e-06, 3.2370000000447874e-06, 3.459000000205492e-06, 2.583999999972164e-06, 2.9449999998654164e-06, 3.235999999962047e-06, 3.2090000001705477e-06]</msg>
<status status="PASS" starttime="20201029 12:42:35.038" endtime="20201029 12:42:35.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.033" endtime="20201029 12:42:35.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:34.663" endtime="20201029 12:42:35.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:34.663" endtime="20201029 12:42:35.041"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:35.050" endtime="20201029 12:42:35.059"></status>
</kw>
<msg timestamp="20201029 12:42:35.060" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:35.047" endtime="20201029 12:42:35.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:35.062" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:35.061" endtime="20201029 12:42:35.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:35.063" endtime="20201029 12:42:35.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.045" endtime="20201029 12:42:35.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.043" endtime="20201029 12:42:35.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:35.077" endtime="20201029 12:42:35.378"></status>
</kw>
<msg timestamp="20201029 12:42:35.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.723834208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.723837083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:35.075" endtime="20201029 12:42:35.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:35.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.723834208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.723837083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:35.383" endtime="20201029 12:42:35.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:35.393" endtime="20201029 12:42:35.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.071" endtime="20201029 12:42:35.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.069" endtime="20201029 12:42:35.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:35.400" level="INFO">${RESULT} = [{'diff': 2.8750000000687947e-06}, {'diff': 2.8189999999872484e-06}, {'diff': 2.596999999937566e-06}, {'diff': 2.7220000000660605e-06}, {'diff': 2.9999999999752447e-06}, {'diff': 2.7360000000031803e-0...</msg>
<status status="PASS" starttime="20201029 12:42:35.396" endtime="20201029 12:42:35.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:35.405" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.8750000000687947e-06, 2.8189999999872484e-06, 2.596999999937566e-06, 2.7220000000660605e-06, 2.9999999999752447e-06, 2.7360000000031803e-06, 3.5139999999822535e-06, 3.179999999991523e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:35.401" endtime="20201029 12:42:35.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:35.410" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:35.409" endtime="20201029 12:42:35.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:35.412" level="INFO">VALUE: [2.8750000000687947e-06, 2.8189999999872484e-06, 2.596999999937566e-06, 2.7220000000660605e-06, 2.9999999999752447e-06, 2.7360000000031803e-06, 3.5139999999822535e-06, 3.179999999991523e-06, 3.124999999992717e-06, 2.7639999999884424e-06, 3.097999999979173e-06, 2.6810000000043743e-06, 2.8329999999243682e-06, 5.409999999095305e-07, 3.014000000023387e-06, 3.152999999977979e-06, 2.569999999924022e-06, 2.791999999862682e-06, 3.111000000055597e-06, 3.2229999999966452e-06, 3.014000000023387e-06, 3.152000000117283e-06, 3.304999999897973e-06, 3.1250000001037392e-06, 3.041000000036931e-06, 3.319999999806811e-06, 2.8480000000552508e-06, 2.666999999956232e-06, 3.111000000055597e-06, 3.097000000007455e-06, 2.6660000000955364e-06, 2.9859999999271025e-06, 3.2370000000447874e-06, 3.459000000205492e-06, 2.583999999972164e-06, 2.9449999998654164e-06, 3.235999999962047e-06, 3.2090000001705477e-06, 0.3651383330000002, 3.152999999977979e-06, 2.986000000149147e-06, 2.9729999999617007e-06, 2.9449999998654164e-06, 2.889000000116937e-06, 2.569000000063326e-06, 2.7780000000365845e-06, 2.9999999999752447e-06, 3.430999999887163e-06, 2.806000000132869e-06, 3.194999999900361e-06, 2.8610000000206526e-06, 3.028000000071529e-06, 2.8750000000687947e-06, 2.8889999998948923e-06, 2.8050000000501285e-06, 2.931000000039319e-06, 3.111000000055597e-06, 3.250000000010189e-06, 2.6670000001782768e-06, 3.111000000055597e-06, 3.028000000071529e-06, 3.4719999999488493e-06, 3.1249999998816946e-06, 2.9029999999430345e-06]</msg>
<status status="PASS" starttime="20201029 12:42:35.411" endtime="20201029 12:42:35.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.406" endtime="20201029 12:42:35.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.042" endtime="20201029 12:42:35.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.041" endtime="20201029 12:42:35.414"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:35.422" endtime="20201029 12:42:35.431"></status>
</kw>
<msg timestamp="20201029 12:42:35.432" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:35.420" endtime="20201029 12:42:35.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:35.434" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:35.433" endtime="20201029 12:42:35.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:35.435" endtime="20201029 12:42:35.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.418" endtime="20201029 12:42:35.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.416" endtime="20201029 12:42:35.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:35.444" endtime="20201029 12:42:35.744"></status>
</kw>
<msg timestamp="20201029 12:42:35.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.082160514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.082163708, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:35.443" endtime="20201029 12:42:35.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:35.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.082160514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.082163708, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:35.749" endtime="20201029 12:42:35.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:35.759" endtime="20201029 12:42:35.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.440" endtime="20201029 12:42:35.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.439" endtime="20201029 12:42:35.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:35.766" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.8480000000552508e-06}, {'diff': 2.666999999956232e-06}, {'diff': 3.111000000055597e-06}, {'diff': 3.097000000007455e-06}, {'diff': 2.6660000000955364e-06}, {'diff': 2.98599999...</msg>
<status status="PASS" starttime="20201029 12:42:35.763" endtime="20201029 12:42:35.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:35.773" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.8480000000552508e-06, 2.666999999956232e-06, 3.111000000055597e-06, 3.097000000007455e-06, 2.6660000000955364e-06, 2.9859999999271025e-06, 3.2370000000447874e-06, 3.459000000205492e-06,...</msg>
<status status="PASS" starttime="20201029 12:42:35.767" endtime="20201029 12:42:35.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:35.778" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:35.777" endtime="20201029 12:42:35.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:35.780" level="INFO">VALUE: [0, 2.8480000000552508e-06, 2.666999999956232e-06, 3.111000000055597e-06, 3.097000000007455e-06, 2.6660000000955364e-06, 2.9859999999271025e-06, 3.2370000000447874e-06, 3.459000000205492e-06, 2.583999999972164e-06, 2.9449999998654164e-06, 3.235999999962047e-06, 3.2090000001705477e-06, 0.3651383330000002, 3.152999999977979e-06, 2.986000000149147e-06, 2.9729999999617007e-06, 2.9449999998654164e-06, 2.889000000116937e-06, 2.569000000063326e-06, 2.7780000000365845e-06, 2.9999999999752447e-06, 3.430999999887163e-06, 2.806000000132869e-06, 3.194999999900361e-06, 2.8610000000206526e-06, 3.028000000071529e-06, 2.8750000000687947e-06, 2.8889999998948923e-06, 2.8050000000501285e-06, 2.931000000039319e-06, 3.111000000055597e-06, 3.250000000010189e-06, 2.6670000001782768e-06, 3.111000000055597e-06, 3.028000000071529e-06, 3.4719999999488493e-06, 3.1249999998816946e-06, 2.9029999999430345e-06, 5.419999999922709e-07, 2.6250000000338503e-06, 3.4859999999969915e-06, 2.972000000101005e-06, 2.6530000001301346e-06, 2.9859999999271025e-06, 2.972000000101005e-06, 3.0549999998630284e-06, 3.097000000007455e-06, 2.638999999859948e-06, 2.9449999998654164e-06, 2.8050000000501285e-06, 2.8880000000341965e-06, 3.2639999998362867e-06, 3.194000000039665e-06, 3.138999999929837e-06, 3.514000000093276e-06, 2.723000000148801e-06, 3.0689999999111706e-06, 2.916000000130481e-06, 2.9580000000528628e-06, 2.6250000000338503e-06, 2.9169999999911767e-06, 2.9440000000047206e-06, 3.1250000001037392e-06]</msg>
<status status="PASS" starttime="20201029 12:42:35.779" endtime="20201029 12:42:35.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.774" endtime="20201029 12:42:35.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.415" endtime="20201029 12:42:35.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.414" endtime="20201029 12:42:35.782"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:35.790" endtime="20201029 12:42:35.800"></status>
</kw>
<msg timestamp="20201029 12:42:35.800" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:35.788" endtime="20201029 12:42:35.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:35.803" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:35.801" endtime="20201029 12:42:35.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:35.804" endtime="20201029 12:42:35.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.785" endtime="20201029 12:42:35.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.784" endtime="20201029 12:42:35.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:35.813" endtime="20201029 12:42:36.108"></status>
</kw>
<msg timestamp="20201029 12:42:36.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.447446069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.447449097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:35.811" endtime="20201029 12:42:36.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:36.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.447446069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.447449097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:36.114" endtime="20201029 12:42:36.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:36.125" endtime="20201029 12:42:36.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.809" endtime="20201029 12:42:36.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.807" endtime="20201029 12:42:36.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:36.134" level="INFO">${RESULT} = [{'diff': 3.028000000071529e-06}, {'diff': 2.8750000000687947e-06}, {'diff': 2.8889999998948923e-06}, {'diff': 2.8050000000501285e-06}, {'diff': 2.931000000039319e-06}, {'diff': 3.111000000055597e-06}...</msg>
<status status="PASS" starttime="20201029 12:42:36.130" endtime="20201029 12:42:36.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:36.139" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.028000000071529e-06, 2.8750000000687947e-06, 2.8889999998948923e-06, 2.8050000000501285e-06, 2.931000000039319e-06, 3.111000000055597e-06, 3.250000000010189e-06, 2.6670000001782768e-06, 3....</msg>
<status status="PASS" starttime="20201029 12:42:36.135" endtime="20201029 12:42:36.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:36.145" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:36.143" endtime="20201029 12:42:36.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:36.149" level="INFO">VALUE: [3.028000000071529e-06, 2.8750000000687947e-06, 2.8889999998948923e-06, 2.8050000000501285e-06, 2.931000000039319e-06, 3.111000000055597e-06, 3.250000000010189e-06, 2.6670000001782768e-06, 3.111000000055597e-06, 3.028000000071529e-06, 3.4719999999488493e-06, 3.1249999998816946e-06, 2.9029999999430345e-06, 5.419999999922709e-07, 2.6250000000338503e-06, 3.4859999999969915e-06, 2.972000000101005e-06, 2.6530000001301346e-06, 2.9859999999271025e-06, 2.972000000101005e-06, 3.0549999998630284e-06, 3.097000000007455e-06, 2.638999999859948e-06, 2.9449999998654164e-06, 2.8050000000501285e-06, 2.8880000000341965e-06, 3.2639999998362867e-06, 3.194000000039665e-06, 3.138999999929837e-06, 3.514000000093276e-06, 2.723000000148801e-06, 3.0689999999111706e-06, 2.916000000130481e-06, 2.9580000000528628e-06, 2.6250000000338503e-06, 2.9169999999911767e-06, 2.9440000000047206e-06, 3.1250000001037392e-06, 0.3577415420000001, 2.6250000000338503e-06, 3.1809999998522187e-06, 2.9719999998789604e-06, 2.847999999833206e-06, 3.3619999997291927e-06, 2.889000000116937e-06, 2.7639999999884424e-06, 2.7639999999884424e-06, 3.1250000001037392e-06, 3.263999999614242e-06, 3.1529999997559344e-06, 2.9580000000528628e-06, 3.069999999993911e-06, 2.9029999999430345e-06, 2.9440000002267652e-06, 2.6110000002077527e-06, 3.5689999999810595e-06, 3.5000000000451337e-06, 2.569000000285371e-06, 3.138999999929837e-06, 2.889000000116937e-06, 3.111999999916293e-06, 3.02799999962744e-06, 2.8610000000206526e-06, 2.8329999999243682e-06]</msg>
<status status="PASS" starttime="20201029 12:42:36.146" endtime="20201029 12:42:36.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.140" endtime="20201029 12:42:36.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.783" endtime="20201029 12:42:36.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:35.782" endtime="20201029 12:42:36.151"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:36.160" endtime="20201029 12:42:36.170"></status>
</kw>
<msg timestamp="20201029 12:42:36.170" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:36.158" endtime="20201029 12:42:36.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:36.172" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:36.171" endtime="20201029 12:42:36.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:36.173" endtime="20201029 12:42:36.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.155" endtime="20201029 12:42:36.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.153" endtime="20201029 12:42:36.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:36.183" endtime="20201029 12:42:36.489"></status>
</kw>
<msg timestamp="20201029 12:42:36.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.810491694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.810494583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:36.181" endtime="20201029 12:42:36.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:36.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.810491694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.810494583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:36.494" endtime="20201029 12:42:36.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:36.512" endtime="20201029 12:42:36.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.178" endtime="20201029 12:42:36.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.177" endtime="20201029 12:42:36.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:36.519" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.2639999998362867e-06}, {'diff': 3.194000000039665e-06}, {'diff': 3.138999999929837e-06}, {'diff': 3.514000000093276e-06}, {'diff': 2.723000000148801e-06}, {'diff': 3.068999999...</msg>
<status status="PASS" starttime="20201029 12:42:36.516" endtime="20201029 12:42:36.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:36.525" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.2639999998362867e-06, 3.194000000039665e-06, 3.138999999929837e-06, 3.514000000093276e-06, 2.723000000148801e-06, 3.0689999999111706e-06, 2.916000000130481e-06, 2.9580000000528628e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:36.520" endtime="20201029 12:42:36.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:36.530" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:36.528" endtime="20201029 12:42:36.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:36.532" level="INFO">VALUE: [0, 3.2639999998362867e-06, 3.194000000039665e-06, 3.138999999929837e-06, 3.514000000093276e-06, 2.723000000148801e-06, 3.0689999999111706e-06, 2.916000000130481e-06, 2.9580000000528628e-06, 2.6250000000338503e-06, 2.9169999999911767e-06, 2.9440000000047206e-06, 3.1250000001037392e-06, 0.3577415420000001, 2.6250000000338503e-06, 3.1809999998522187e-06, 2.9719999998789604e-06, 2.847999999833206e-06, 3.3619999997291927e-06, 2.889000000116937e-06, 2.7639999999884424e-06, 2.7639999999884424e-06, 3.1250000001037392e-06, 3.263999999614242e-06, 3.1529999997559344e-06, 2.9580000000528628e-06, 3.069999999993911e-06, 2.9029999999430345e-06, 2.9440000002267652e-06, 2.6110000002077527e-06, 3.5689999999810595e-06, 3.5000000000451337e-06, 2.569000000285371e-06, 3.138999999929837e-06, 2.889000000116937e-06, 3.111999999916293e-06, 3.02799999962744e-06, 2.8610000000206526e-06, 2.8329999999243682e-06, 5.419999999922709e-07, 2.708000000239963e-06, 3.2220000001359494e-06, 3.1110000002776417e-06, 2.9719999998789604e-06, 3.2920000001546157e-06, 3.0560000001678134e-06, 2.52800000000164e-06, 3.3059999999807133e-06, 2.5830000001114684e-06, 3.2220000001359494e-06, 2.681000000226419e-06, 2.735999999892158e-06, 2.750000000162345e-06, 3.0560000001678134e-06, 3.1250000001037392e-06, 2.846999999750466e-06, 2.7499999997182556e-06, 2.8059999999108243e-06, 3.6250000001736282e-06, 2.846999999750466e-06, 2.9029999999430345e-06, 3.069999999993911e-06, 2.8610000000206526e-06, 3.3059999999807133e-06]</msg>
<status status="PASS" starttime="20201029 12:42:36.531" endtime="20201029 12:42:36.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.526" endtime="20201029 12:42:36.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.152" endtime="20201029 12:42:36.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.151" endtime="20201029 12:42:36.534"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:36.541" endtime="20201029 12:42:36.551"></status>
</kw>
<msg timestamp="20201029 12:42:36.552" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:36.540" endtime="20201029 12:42:36.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:36.554" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:36.553" endtime="20201029 12:42:36.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:36.555" endtime="20201029 12:42:36.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.537" endtime="20201029 12:42:36.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.536" endtime="20201029 12:42:36.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:36.564" endtime="20201029 12:42:36.877"></status>
</kw>
<msg timestamp="20201029 12:42:36.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.168377611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.168380958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:36.563" endtime="20201029 12:42:36.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:36.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.168377611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.168380958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:36.882" endtime="20201029 12:42:36.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:36.892" endtime="20201029 12:42:36.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.560" endtime="20201029 12:42:36.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.559" endtime="20201029 12:42:36.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:36.901" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.069999999993911e-06}, {'diff': 2.9029999999430345e-06}, {'diff': 2.9440000002267652e-06}, {'diff': 2.6110000002077527e-06}, {'diff': 3.5689999999810595e-06}, {'diff': 3.500000...</msg>
<status status="PASS" starttime="20201029 12:42:36.895" endtime="20201029 12:42:36.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:36.914" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.069999999993911e-06, 2.9029999999430345e-06, 2.9440000002267652e-06, 2.6110000002077527e-06, 3.5689999999810595e-06, 3.5000000000451337e-06, 2.569000000285371e-06, 3.138999999929837e-06...</msg>
<status status="PASS" starttime="20201029 12:42:36.903" endtime="20201029 12:42:36.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:36.922" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:36.920" endtime="20201029 12:42:36.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:36.927" level="INFO">VALUE: [0, 3.069999999993911e-06, 2.9029999999430345e-06, 2.9440000002267652e-06, 2.6110000002077527e-06, 3.5689999999810595e-06, 3.5000000000451337e-06, 2.569000000285371e-06, 3.138999999929837e-06, 2.889000000116937e-06, 3.111999999916293e-06, 3.02799999962744e-06, 2.8610000000206526e-06, 2.8329999999243682e-06, 5.419999999922709e-07, 2.708000000239963e-06, 3.2220000001359494e-06, 3.1110000002776417e-06, 2.9719999998789604e-06, 3.2920000001546157e-06, 3.0560000001678134e-06, 2.52800000000164e-06, 3.3059999999807133e-06, 2.5830000001114684e-06, 3.2220000001359494e-06, 2.681000000226419e-06, 2.735999999892158e-06, 2.750000000162345e-06, 3.0560000001678134e-06, 3.1250000001037392e-06, 2.846999999750466e-06, 2.7499999997182556e-06, 2.8059999999108243e-06, 3.6250000001736282e-06, 2.846999999750466e-06, 2.9029999999430345e-06, 3.069999999993911e-06, 2.8610000000206526e-06, 3.3059999999807133e-06, 0.3707064299999998, 2.9580000000528628e-06, 3.0269999999887887e-06, 3.304999999897973e-06, 3.167000000026121e-06, 3.12499999965965e-06, 3.1250000001037392e-06, 3.167000000026121e-06, 3.013000000162691e-06, 3.2920000001546157e-06, 2.6950000000525165e-06, 2.9029999999430345e-06, 3.3889999997427367e-06, 2.9449999998654164e-06, 3.1950000001224055e-06, 3.028000000071529e-06, 2.847000000194555e-06, 3.1530000002000236e-06, 3.1950000001224055e-06, 2.735999999892158e-06, 2.52800000000164e-06, 3.3190000001681597e-06, 3.235999999962047e-06, 2.985999999705058e-06, 2.4450000002396166e-06]</msg>
<status status="PASS" starttime="20201029 12:42:36.924" endtime="20201029 12:42:36.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.915" endtime="20201029 12:42:36.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.535" endtime="20201029 12:42:36.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.534" endtime="20201029 12:42:36.931"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:36.947" endtime="20201029 12:42:36.960"></status>
</kw>
<msg timestamp="20201029 12:42:36.961" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:36.944" endtime="20201029 12:42:36.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:36.966" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:36.963" endtime="20201029 12:42:36.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:36.968" endtime="20201029 12:42:36.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.938" endtime="20201029 12:42:36.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.935" endtime="20201029 12:42:36.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:36.989" endtime="20201029 12:42:37.300"></status>
</kw>
<msg timestamp="20201029 12:42:37.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.528381681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.528384417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:36.985" endtime="20201029 12:42:37.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:37.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.528381681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.528384417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:37.305" endtime="20201029 12:42:37.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:37.315" endtime="20201029 12:42:37.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.978" endtime="20201029 12:42:37.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.974" endtime="20201029 12:42:37.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:37.322" level="INFO">${RESULT} = [{'diff': 2.735999999892158e-06}, {'diff': 2.750000000162345e-06}, {'diff': 3.0560000001678134e-06}, {'diff': 3.1250000001037392e-06}, {'diff': 2.846999999750466e-06}, {'diff': 2.7499999997182556e-06}...</msg>
<status status="PASS" starttime="20201029 12:42:37.318" endtime="20201029 12:42:37.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:37.327" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.735999999892158e-06, 2.750000000162345e-06, 3.0560000001678134e-06, 3.1250000001037392e-06, 2.846999999750466e-06, 2.7499999997182556e-06, 2.8059999999108243e-06, 3.6250000001736282e-06, 2...</msg>
<status status="PASS" starttime="20201029 12:42:37.323" endtime="20201029 12:42:37.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:37.331" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:37.330" endtime="20201029 12:42:37.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:37.334" level="INFO">VALUE: [2.735999999892158e-06, 2.750000000162345e-06, 3.0560000001678134e-06, 3.1250000001037392e-06, 2.846999999750466e-06, 2.7499999997182556e-06, 2.8059999999108243e-06, 3.6250000001736282e-06, 2.846999999750466e-06, 2.9029999999430345e-06, 3.069999999993911e-06, 2.8610000000206526e-06, 3.3059999999807133e-06, 0.3707064299999998, 2.9580000000528628e-06, 3.0269999999887887e-06, 3.304999999897973e-06, 3.167000000026121e-06, 3.12499999965965e-06, 3.1250000001037392e-06, 3.167000000026121e-06, 3.013000000162691e-06, 3.2920000001546157e-06, 2.6950000000525165e-06, 2.9029999999430345e-06, 3.3889999997427367e-06, 2.9449999998654164e-06, 3.1950000001224055e-06, 3.028000000071529e-06, 2.847000000194555e-06, 3.1530000002000236e-06, 3.1950000001224055e-06, 2.735999999892158e-06, 2.52800000000164e-06, 3.3190000001681597e-06, 3.235999999962047e-06, 2.985999999705058e-06, 2.4450000002396166e-06, 0.396632334, 3.208999999948503e-06, 3.2640000000583314e-06, 2.708999999878614e-06, 3.2499999997881446e-06, 3.139000000373926e-06, 3.4719999999488493e-06, 3.3609999996464524e-06, 2.916000000130481e-06, 3.0140000002454315e-06, 2.569999999924022e-06, 2.9170000002132213e-06, 3.277999999884429e-06, 3.1809999998522187e-06, 3.1109999998335525e-06, 3.097000000007455e-06, 3.1659999999433808e-06, 2.693999999969776e-06, 2.8610000000206526e-06, 3.152000000117283e-06, 2.985999999705058e-06, 2.735999999892158e-06, 2.9449999998654164e-06, 3.0980000000901953e-06, 2.805000000272173e-06, 3.082999999737268e-06]</msg>
<status status="PASS" starttime="20201029 12:42:37.332" endtime="20201029 12:42:37.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:37.328" endtime="20201029 12:42:37.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.932" endtime="20201029 12:42:37.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.931" endtime="20201029 12:42:37.336"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:37.344" endtime="20201029 12:42:37.354"></status>
</kw>
<msg timestamp="20201029 12:42:37.354" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:37.342" endtime="20201029 12:42:37.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:37.356" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:37.355" endtime="20201029 12:42:37.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:37.358" endtime="20201029 12:42:37.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:37.340" endtime="20201029 12:42:37.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:37.338" endtime="20201029 12:42:37.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:37.366" endtime="20201029 12:42:37.684"></status>
</kw>
<msg timestamp="20201029 12:42:37.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.899238417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.899241194, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:37.365" endtime="20201029 12:42:37.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:37.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.899238417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.899241194, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:37.692" endtime="20201029 12:42:37.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:37.706" endtime="20201029 12:42:37.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:37.362" endtime="20201029 12:42:37.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:37.361" endtime="20201029 12:42:37.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:37.726" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.9449999998654164e-06}, {'diff': 3.1950000001224055e-06}, {'diff': 3.028000000071529e-06}, {'diff': 2.847000000194555e-06}, {'diff': 3.1530000002000236e-06}, {'diff': 3.1950000...</msg>
<status status="PASS" starttime="20201029 12:42:37.717" endtime="20201029 12:42:37.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:37.741" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.9449999998654164e-06, 3.1950000001224055e-06, 3.028000000071529e-06, 2.847000000194555e-06, 3.1530000002000236e-06, 3.1950000001224055e-06, 2.735999999892158e-06, 2.52800000000164e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:37.729" endtime="20201029 12:42:37.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:37.753" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:37.750" endtime="20201029 12:42:37.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:37.760" level="INFO">VALUE: [0, 2.9449999998654164e-06, 3.1950000001224055e-06, 3.028000000071529e-06, 2.847000000194555e-06, 3.1530000002000236e-06, 3.1950000001224055e-06, 2.735999999892158e-06, 2.52800000000164e-06, 3.3190000001681597e-06, 3.235999999962047e-06, 2.985999999705058e-06, 2.4450000002396166e-06, 0.396632334, 3.208999999948503e-06, 3.2640000000583314e-06, 2.708999999878614e-06, 3.2499999997881446e-06, 3.139000000373926e-06, 3.4719999999488493e-06, 3.3609999996464524e-06, 2.916000000130481e-06, 3.0140000002454315e-06, 2.569999999924022e-06, 2.9170000002132213e-06, 3.277999999884429e-06, 3.1809999998522187e-06, 3.1109999998335525e-06, 3.097000000007455e-06, 3.1659999999433808e-06, 2.693999999969776e-06, 2.8610000000206526e-06, 3.152000000117283e-06, 2.985999999705058e-06, 2.735999999892158e-06, 2.9449999998654164e-06, 3.0980000000901953e-06, 2.805000000272173e-06, 3.082999999737268e-06, 5.419999999922709e-07, 2.708000000239963e-06, 3.389000000186826e-06, 3.0980000000901953e-06, 2.7639999999884424e-06, 2.916999999769132e-06, 3.193999999595576e-06, 3.1379999998470964e-06, 2.8189999996541815e-06, 2.846999999750466e-06, 2.693999999969776e-06, 3.2910000000718753e-06, 2.8750000002908394e-06, 2.916000000130481e-06, 3.2910000000718753e-06, 2.931000000039319e-06, 2.9729999999617007e-06, 2.916999999769132e-06, 2.7220000000660605e-06, 3.138999999929837e-06, 3.347999999903095e-06, 2.9170000002132213e-06, 2.6949999996084273e-06, 3.235999999962047e-06, 2.8889999996728477e-06]</msg>
<status status="PASS" starttime="20201029 12:42:37.756" endtime="20201029 12:42:37.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:37.744" endtime="20201029 12:42:37.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:37.337" endtime="20201029 12:42:37.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:37.336" endtime="20201029 12:42:37.765"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:37.788" endtime="20201029 12:42:37.801"></status>
</kw>
<msg timestamp="20201029 12:42:37.802" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:37.783" endtime="20201029 12:42:37.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:37.807" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:37.804" endtime="20201029 12:42:37.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:37.808" endtime="20201029 12:42:37.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:37.776" endtime="20201029 12:42:37.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:37.771" endtime="20201029 12:42:37.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:37.818" endtime="20201029 12:42:38.130"></status>
</kw>
<msg timestamp="20201029 12:42:38.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.296018833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.296022014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:37.816" endtime="20201029 12:42:38.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:38.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.296018833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.296022014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:38.135" endtime="20201029 12:42:38.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:38.145" endtime="20201029 12:42:38.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:37.813" endtime="20201029 12:42:38.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:37.811" endtime="20201029 12:42:38.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:38.152" level="INFO">${RESULT} = [{'diff': 3.1809999998522187e-06}, {'diff': 3.1109999998335525e-06}, {'diff': 3.097000000007455e-06}, {'diff': 3.1659999999433808e-06}, {'diff': 2.693999999969776e-06}, {'diff': 2.8610000000206526e-06...</msg>
<status status="PASS" starttime="20201029 12:42:38.149" endtime="20201029 12:42:38.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:38.157" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.1809999998522187e-06, 3.1109999998335525e-06, 3.097000000007455e-06, 3.1659999999433808e-06, 2.693999999969776e-06, 2.8610000000206526e-06, 3.152000000117283e-06, 2.985999999705058e-06, 2....</msg>
<status status="PASS" starttime="20201029 12:42:38.153" endtime="20201029 12:42:38.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:38.161" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:38.160" endtime="20201029 12:42:38.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:38.164" level="INFO">VALUE: [3.1809999998522187e-06, 3.1109999998335525e-06, 3.097000000007455e-06, 3.1659999999433808e-06, 2.693999999969776e-06, 2.8610000000206526e-06, 3.152000000117283e-06, 2.985999999705058e-06, 2.735999999892158e-06, 2.9449999998654164e-06, 3.0980000000901953e-06, 2.805000000272173e-06, 3.082999999737268e-06, 5.419999999922709e-07, 2.708000000239963e-06, 3.389000000186826e-06, 3.0980000000901953e-06, 2.7639999999884424e-06, 2.916999999769132e-06, 3.193999999595576e-06, 3.1379999998470964e-06, 2.8189999996541815e-06, 2.846999999750466e-06, 2.693999999969776e-06, 3.2910000000718753e-06, 2.8750000002908394e-06, 2.916000000130481e-06, 3.2910000000718753e-06, 2.931000000039319e-06, 2.9729999999617007e-06, 2.916999999769132e-06, 2.7220000000660605e-06, 3.138999999929837e-06, 3.347999999903095e-06, 2.9170000002132213e-06, 2.6949999996084273e-06, 3.235999999962047e-06, 2.8889999996728477e-06, 0.4374159310000003, 3.3750000003607283e-06, 2.9299999999565784e-06, 2.735999999892158e-06, 3.097000000451544e-06, 2.87499999984675e-06, 3.097000000451544e-06, 2.5560000000979244e-06, 3.3469999998203548e-06, 3.2079999998657627e-06, 2.9590000005796924e-06, 3.000000000419334e-06, 2.693999999969776e-06, 3.0139999998013423e-06, 3.042000000341716e-06, 3.1800000002135675e-06, 3.055000000529162e-06, 2.9720000007671388e-06, 2.9999999995311555e-06, 2.9719999998789604e-06, 2.986000000149147e-06, 2.7219999996219713e-06, 3.5419999999675156e-06, 2.819999999736922e-06, 3.042000000341716e-06, 2.8609999995765634e-06]</msg>
<status status="PASS" starttime="20201029 12:42:38.162" endtime="20201029 12:42:38.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.158" endtime="20201029 12:42:38.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:37.768" endtime="20201029 12:42:38.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:37.766" endtime="20201029 12:42:38.165"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:38.174" endtime="20201029 12:42:38.183"></status>
</kw>
<msg timestamp="20201029 12:42:38.184" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:38.172" endtime="20201029 12:42:38.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:38.186" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:38.185" endtime="20201029 12:42:38.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:38.188" endtime="20201029 12:42:38.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.169" endtime="20201029 12:42:38.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.167" endtime="20201029 12:42:38.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:38.197" endtime="20201029 12:42:38.516"></status>
</kw>
<msg timestamp="20201029 12:42:38.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.682178056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.682181028, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:38.195" endtime="20201029 12:42:38.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:38.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.682178056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.682181028, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:38.531" endtime="20201029 12:42:38.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:38.554" endtime="20201029 12:42:38.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.193" endtime="20201029 12:42:38.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.191" endtime="20201029 12:42:38.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:38.570" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.916000000130481e-06}, {'diff': 3.2910000000718753e-06}, {'diff': 2.931000000039319e-06}, {'diff': 2.9729999999617007e-06}, {'diff': 2.916999999769132e-06}, {'diff': 2.72200000...</msg>
<status status="PASS" starttime="20201029 12:42:38.562" endtime="20201029 12:42:38.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:38.582" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.916000000130481e-06, 3.2910000000718753e-06, 2.931000000039319e-06, 2.9729999999617007e-06, 2.916999999769132e-06, 2.7220000000660605e-06, 3.138999999929837e-06, 3.347999999903095e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:38.572" endtime="20201029 12:42:38.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:38.591" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:38.589" endtime="20201029 12:42:38.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:38.596" level="INFO">VALUE: [0, 2.916000000130481e-06, 3.2910000000718753e-06, 2.931000000039319e-06, 2.9729999999617007e-06, 2.916999999769132e-06, 2.7220000000660605e-06, 3.138999999929837e-06, 3.347999999903095e-06, 2.9170000002132213e-06, 2.6949999996084273e-06, 3.235999999962047e-06, 2.8889999996728477e-06, 0.4374159310000003, 3.3750000003607283e-06, 2.9299999999565784e-06, 2.735999999892158e-06, 3.097000000451544e-06, 2.87499999984675e-06, 3.097000000451544e-06, 2.5560000000979244e-06, 3.3469999998203548e-06, 3.2079999998657627e-06, 2.9590000005796924e-06, 3.000000000419334e-06, 2.693999999969776e-06, 3.0139999998013423e-06, 3.042000000341716e-06, 3.1800000002135675e-06, 3.055000000529162e-06, 2.9720000007671388e-06, 2.9999999995311555e-06, 2.9719999998789604e-06, 2.986000000149147e-06, 2.7219999996219713e-06, 3.5419999999675156e-06, 2.819999999736922e-06, 3.042000000341716e-06, 2.8609999995765634e-06, 5.409999994654413e-07, 3.4309999996651186e-06, 2.9170000006573105e-06, 3.3889999997427367e-06, 3.055999999723724e-06, 3.3050000007861513e-06, 3.040999999370797e-06, 3.055000000529162e-06, 2.485999999635169e-06, 3.3469999998203548e-06, 2.986000000149147e-06, 2.5280000004457293e-06, 3.1109999998335525e-06, 3.401999999930183e-06, 3.1250000001037392e-06, 3.1949999996783163e-06, 2.666999999512143e-06, 3.235999999517958e-06, 2.596999999937566e-06, 2.931000000039319e-06, 2.72300000059289e-06, 3.124999999215561e-06, 3.1529999997559344e-06, 3.1389999994857476e-06, 3.3330000004383464e-06]</msg>
<status status="PASS" starttime="20201029 12:42:38.593" endtime="20201029 12:42:38.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.584" endtime="20201029 12:42:38.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.166" endtime="20201029 12:42:38.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.166" endtime="20201029 12:42:38.600"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:38.616" endtime="20201029 12:42:38.628"></status>
</kw>
<msg timestamp="20201029 12:42:38.628" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:38.613" endtime="20201029 12:42:38.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:38.631" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:38.630" endtime="20201029 12:42:38.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:38.632" endtime="20201029 12:42:38.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.607" endtime="20201029 12:42:38.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.604" endtime="20201029 12:42:38.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:38.642" endtime="20201029 12:42:38.952"></status>
</kw>
<msg timestamp="20201029 12:42:38.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.119740292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.119743306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:38.640" endtime="20201029 12:42:38.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:38.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.119740292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.119743306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:38.957" endtime="20201029 12:42:38.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:38.967" endtime="20201029 12:42:38.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.638" endtime="20201029 12:42:38.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.636" endtime="20201029 12:42:38.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:38.974" level="INFO">${RESULT} = [{'diff': 3.0139999998013423e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.1800000002135675e-06}, {'diff': 3.055000000529162e-06}, {'diff': 2.9720000007671388e-06}, {'diff': 2.9999999995311555e-06...</msg>
<status status="PASS" starttime="20201029 12:42:38.971" endtime="20201029 12:42:38.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:38.980" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.0139999998013423e-06, 3.042000000341716e-06, 3.1800000002135675e-06, 3.055000000529162e-06, 2.9720000007671388e-06, 2.9999999995311555e-06, 2.9719999998789604e-06, 2.986000000149147e-06, 2...</msg>
<status status="PASS" starttime="20201029 12:42:38.975" endtime="20201029 12:42:38.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:38.984" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:38.983" endtime="20201029 12:42:38.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:38.987" level="INFO">VALUE: [3.0139999998013423e-06, 3.042000000341716e-06, 3.1800000002135675e-06, 3.055000000529162e-06, 2.9720000007671388e-06, 2.9999999995311555e-06, 2.9719999998789604e-06, 2.986000000149147e-06, 2.7219999996219713e-06, 3.5419999999675156e-06, 2.819999999736922e-06, 3.042000000341716e-06, 2.8609999995765634e-06, 5.409999994654413e-07, 3.4309999996651186e-06, 2.9170000006573105e-06, 3.3889999997427367e-06, 3.055999999723724e-06, 3.3050000007861513e-06, 3.040999999370797e-06, 3.055000000529162e-06, 2.485999999635169e-06, 3.3469999998203548e-06, 2.986000000149147e-06, 2.5280000004457293e-06, 3.1109999998335525e-06, 3.401999999930183e-06, 3.1250000001037392e-06, 3.1949999996783163e-06, 2.666999999512143e-06, 3.235999999517958e-06, 2.596999999937566e-06, 2.931000000039319e-06, 2.72300000059289e-06, 3.124999999215561e-06, 3.1529999997559344e-06, 3.1389999994857476e-06, 3.3330000004383464e-06, 0.4319218469999999, 2.8340000000071086e-06, 3.0969999995633657e-06, 3.527000000502767e-06, 2.457999999982974e-06, 3.0139999998013423e-06, 3.1529999997559344e-06, 3.028000000071529e-06, 3.1530000006441128e-06, 3.1659999999433808e-06, 2.986000000149147e-06, 3.22300000021869e-06, 2.666000000317581e-06, 3.4300000004705566e-06, 3.4309999996651186e-06, 2.87499999984675e-06, 2.6250000004779395e-06, 3.2360000004061362e-06, 2.8329999999243682e-06, 2.6809999997823297e-06, 3.0830000001813573e-06, 3.443999999852565e-06, 2.555999999209746e-06, 3.1940000004837543e-06, 3.0560000006119026e-06, 3.3330000004383464e-06]</msg>
<status status="PASS" starttime="20201029 12:42:38.985" endtime="20201029 12:42:38.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.981" endtime="20201029 12:42:38.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.601" endtime="20201029 12:42:38.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.600" endtime="20201029 12:42:38.988"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:38.996" endtime="20201029 12:42:39.007"></status>
</kw>
<msg timestamp="20201029 12:42:39.007" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:38.994" endtime="20201029 12:42:39.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:39.010" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:39.008" endtime="20201029 12:42:39.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:39.011" endtime="20201029 12:42:39.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.992" endtime="20201029 12:42:39.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.990" endtime="20201029 12:42:39.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:39.020" endtime="20201029 12:42:39.334"></status>
</kw>
<msg timestamp="20201029 12:42:39.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.495559694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.495562431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:39.018" endtime="20201029 12:42:39.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:39.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.495559694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.495562431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:39.339" endtime="20201029 12:42:39.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:39.349" endtime="20201029 12:42:39.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.016" endtime="20201029 12:42:39.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.014" endtime="20201029 12:42:39.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:39.356" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.401999999930183e-06}, {'diff': 3.1250000001037392e-06}, {'diff': 3.1949999996783163e-06}, {'diff': 2.666999999512143e-06}, {'diff': 3.235999999517958e-06}, {'diff': 2.59699999...</msg>
<status status="PASS" starttime="20201029 12:42:39.352" endtime="20201029 12:42:39.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:39.361" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.401999999930183e-06, 3.1250000001037392e-06, 3.1949999996783163e-06, 2.666999999512143e-06, 3.235999999517958e-06, 2.596999999937566e-06, 2.931000000039319e-06, 2.72300000059289e-06, 3....</msg>
<status status="PASS" starttime="20201029 12:42:39.357" endtime="20201029 12:42:39.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:39.365" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:39.364" endtime="20201029 12:42:39.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:39.368" level="INFO">VALUE: [0, 3.401999999930183e-06, 3.1250000001037392e-06, 3.1949999996783163e-06, 2.666999999512143e-06, 3.235999999517958e-06, 2.596999999937566e-06, 2.931000000039319e-06, 2.72300000059289e-06, 3.124999999215561e-06, 3.1529999997559344e-06, 3.1389999994857476e-06, 3.3330000004383464e-06, 0.4319218469999999, 2.8340000000071086e-06, 3.0969999995633657e-06, 3.527000000502767e-06, 2.457999999982974e-06, 3.0139999998013423e-06, 3.1529999997559344e-06, 3.028000000071529e-06, 3.1530000006441128e-06, 3.1659999999433808e-06, 2.986000000149147e-06, 3.22300000021869e-06, 2.666000000317581e-06, 3.4300000004705566e-06, 3.4309999996651186e-06, 2.87499999984675e-06, 2.6250000004779395e-06, 3.2360000004061362e-06, 2.8329999999243682e-06, 2.6809999997823297e-06, 3.0830000001813573e-06, 3.443999999852565e-06, 2.555999999209746e-06, 3.1940000004837543e-06, 3.0560000006119026e-06, 3.3330000004383464e-06, 5.420000004363601e-07, 2.8329999999243682e-06, 3.0139999998013423e-06, 2.87499999984675e-06, 3.111000000721731e-06, 3.2079999998657627e-06, 2.9299999999565784e-06, 2.7220000005101497e-06, 3.2640000000583314e-06, 3.401999999930183e-06, 2.986000000149147e-06, 3.1109999998335525e-06, 3.2499999997881446e-06, 2.7910000000019863e-06, 3.3610000000905416e-06, 3.2640000000583314e-06, 3.332999999550168e-06, 2.638999999859948e-06, 2.7219999996219713e-06, 2.7220000005101497e-06, 3.22300000021869e-06, 3.2640000000583314e-06, 2.735999999892158e-06, 3.2220000001359494e-06, 2.81900000054236e-06]</msg>
<status status="PASS" starttime="20201029 12:42:39.366" endtime="20201029 12:42:39.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.362" endtime="20201029 12:42:39.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.989" endtime="20201029 12:42:39.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:38.989" endtime="20201029 12:42:39.369"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:39.378" endtime="20201029 12:42:39.388"></status>
</kw>
<msg timestamp="20201029 12:42:39.388" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:39.376" endtime="20201029 12:42:39.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:39.391" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:39.389" endtime="20201029 12:42:39.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:39.392" endtime="20201029 12:42:39.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.373" endtime="20201029 12:42:39.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.371" endtime="20201029 12:42:39.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:39.401" endtime="20201029 12:42:39.718"></status>
</kw>
<msg timestamp="20201029 12:42:39.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.927630292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.927633722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:39.399" endtime="20201029 12:42:39.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:39.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.927630292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.927633722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:39.723" endtime="20201029 12:42:39.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:39.741" endtime="20201029 12:42:39.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.397" endtime="20201029 12:42:39.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.395" endtime="20201029 12:42:39.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:39.749" level="INFO">${RESULT} = [{'diff': 3.4300000004705566e-06}, {'diff': 3.4309999996651186e-06}, {'diff': 2.87499999984675e-06}, {'diff': 2.6250000004779395e-06}, {'diff': 3.2360000004061362e-06}, {'diff': 2.8329999999243682e-06...</msg>
<status status="PASS" starttime="20201029 12:42:39.745" endtime="20201029 12:42:39.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:39.754" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.4300000004705566e-06, 3.4309999996651186e-06, 2.87499999984675e-06, 2.6250000004779395e-06, 3.2360000004061362e-06, 2.8329999999243682e-06, 2.6809999997823297e-06, 3.0830000001813573e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:39.750" endtime="20201029 12:42:39.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:39.758" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:39.757" endtime="20201029 12:42:39.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:39.761" level="INFO">VALUE: [3.4300000004705566e-06, 3.4309999996651186e-06, 2.87499999984675e-06, 2.6250000004779395e-06, 3.2360000004061362e-06, 2.8329999999243682e-06, 2.6809999997823297e-06, 3.0830000001813573e-06, 3.443999999852565e-06, 2.555999999209746e-06, 3.1940000004837543e-06, 3.0560000006119026e-06, 3.3330000004383464e-06, 5.420000004363601e-07, 2.8329999999243682e-06, 3.0139999998013423e-06, 2.87499999984675e-06, 3.111000000721731e-06, 3.2079999998657627e-06, 2.9299999999565784e-06, 2.7220000005101497e-06, 3.2640000000583314e-06, 3.401999999930183e-06, 2.986000000149147e-06, 3.1109999998335525e-06, 3.2499999997881446e-06, 2.7910000000019863e-06, 3.3610000000905416e-06, 3.2640000000583314e-06, 3.332999999550168e-06, 2.638999999859948e-06, 2.7219999996219713e-06, 2.7220000005101497e-06, 3.22300000021869e-06, 3.2640000000583314e-06, 2.735999999892158e-06, 3.2220000001359494e-06, 2.81900000054236e-06, 0.37161061100000037, 2.9719999998789604e-06, 2.6799999996995894e-06, 2.9450000003095056e-06, 3.2640000000583314e-06, 2.7079999993517845e-06, 3.4580000001227518e-06, 2.77799999981454e-06, 3.3200000002509e-06, 2.9440000002267652e-06, 2.8480000002772954e-06, 2.4999999999053557e-06, 3.1250000001037392e-06, 3.41600000020037e-06, 3.097999999646106e-06, 3.1389999994857476e-06, 3.0140000006895207e-06, 3.028000000071529e-06, 3.1809999994081295e-06, 2.943999999338587e-06, 2.7910000000019863e-06, 3.2220000001359494e-06, 3.5280000005855072e-06, 2.569000000285371e-06, 2.986000000149147e-06, 3.2360000004061362e-06]</msg>
<status status="PASS" starttime="20201029 12:42:39.759" endtime="20201029 12:42:39.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.755" endtime="20201029 12:42:39.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.370" endtime="20201029 12:42:39.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.370" endtime="20201029 12:42:39.763"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:39.770" endtime="20201029 12:42:39.780"></status>
</kw>
<msg timestamp="20201029 12:42:39.780" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:39.769" endtime="20201029 12:42:39.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:39.783" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:39.781" endtime="20201029 12:42:39.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:39.784" endtime="20201029 12:42:39.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.766" endtime="20201029 12:42:39.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.765" endtime="20201029 12:42:39.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:39.793" endtime="20201029 12:42:40.105"></status>
</kw>
<msg timestamp="20201029 12:42:40.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.296798722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.296801972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:39.791" endtime="20201029 12:42:40.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.296798722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.296801972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:40.110" endtime="20201029 12:42:40.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.121" endtime="20201029 12:42:40.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.789" endtime="20201029 12:42:40.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.787" endtime="20201029 12:42:40.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:40.128" level="INFO">${RESULT} = [{'diff': 3.2499999997881446e-06}, {'diff': 2.7910000000019863e-06}, {'diff': 3.3610000000905416e-06}, {'diff': 3.2640000000583314e-06}, {'diff': 3.332999999550168e-06}, {'diff': 2.638999999859948e-06...</msg>
<status status="PASS" starttime="20201029 12:42:40.124" endtime="20201029 12:42:40.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:40.133" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.2499999997881446e-06, 2.7910000000019863e-06, 3.3610000000905416e-06, 3.2640000000583314e-06, 3.332999999550168e-06, 2.638999999859948e-06, 2.7219999996219713e-06, 2.7220000005101497e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:40.129" endtime="20201029 12:42:40.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.137" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:40.136" endtime="20201029 12:42:40.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.140" level="INFO">VALUE: [3.2499999997881446e-06, 2.7910000000019863e-06, 3.3610000000905416e-06, 3.2640000000583314e-06, 3.332999999550168e-06, 2.638999999859948e-06, 2.7219999996219713e-06, 2.7220000005101497e-06, 3.22300000021869e-06, 3.2640000000583314e-06, 2.735999999892158e-06, 3.2220000001359494e-06, 2.81900000054236e-06, 0.37161061100000037, 2.9719999998789604e-06, 2.6799999996995894e-06, 2.9450000003095056e-06, 3.2640000000583314e-06, 2.7079999993517845e-06, 3.4580000001227518e-06, 2.77799999981454e-06, 3.3200000002509e-06, 2.9440000002267652e-06, 2.8480000002772954e-06, 2.4999999999053557e-06, 3.1250000001037392e-06, 3.41600000020037e-06, 3.097999999646106e-06, 3.1389999994857476e-06, 3.0140000006895207e-06, 3.028000000071529e-06, 3.1809999994081295e-06, 2.943999999338587e-06, 2.7910000000019863e-06, 3.2220000001359494e-06, 3.5280000005855072e-06, 2.569000000285371e-06, 2.986000000149147e-06, 3.2360000004061362e-06, 3.1109999998335525e-06, 2.735999999892158e-06, 2.8480000002772954e-06, 3.2919999997105265e-06, 2.6670000004003214e-06, 2.986000000149147e-06, 3.2640000000583314e-06, 3.0139999998013423e-06, 2.901999999416205e-06, 3.1109999998335525e-06, 3.0830000001813573e-06, 3.167000000026121e-06, 3.527999999697329e-06, 3.4309999996651186e-06, 2.666999999512143e-06, 3.278000000328518e-06, 3.332999999550168e-06, 2.986000000149147e-06, 2.931000000039319e-06, 3.042000000341716e-06, 3.208999999948503e-06, 2.9729999999617007e-06, 3.1380000002911856e-06, 2.9029999994989453e-06, 3.1529999997559344e-06]</msg>
<status status="PASS" starttime="20201029 12:42:40.138" endtime="20201029 12:42:40.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.134" endtime="20201029 12:42:40.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.763" endtime="20201029 12:42:40.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.763" endtime="20201029 12:42:40.141"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.149" endtime="20201029 12:42:40.158"></status>
</kw>
<msg timestamp="20201029 12:42:40.159" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:40.148" endtime="20201029 12:42:40.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.161" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:40.160" endtime="20201029 12:42:40.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.162" endtime="20201029 12:42:40.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.145" endtime="20201029 12:42:40.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.143" endtime="20201029 12:42:40.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.172" endtime="20201029 12:42:40.484"></status>
</kw>
<msg timestamp="20201029 12:42:40.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.668556694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.668559806, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:40.171" endtime="20201029 12:42:40.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.668556694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.668559806, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:40.489" endtime="20201029 12:42:40.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.500" endtime="20201029 12:42:40.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.167" endtime="20201029 12:42:40.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.165" endtime="20201029 12:42:40.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:40.506" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.41600000020037e-06}, {'diff': 3.097999999646106e-06}, {'diff': 3.1389999994857476e-06}, {'diff': 3.0140000006895207e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.180999999...</msg>
<status status="PASS" starttime="20201029 12:42:40.503" endtime="20201029 12:42:40.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:40.511" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.41600000020037e-06, 3.097999999646106e-06, 3.1389999994857476e-06, 3.0140000006895207e-06, 3.028000000071529e-06, 3.1809999994081295e-06, 2.943999999338587e-06, 2.7910000000019863e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:40.507" endtime="20201029 12:42:40.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.516" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:40.515" endtime="20201029 12:42:40.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.519" level="INFO">VALUE: [0, 3.41600000020037e-06, 3.097999999646106e-06, 3.1389999994857476e-06, 3.0140000006895207e-06, 3.028000000071529e-06, 3.1809999994081295e-06, 2.943999999338587e-06, 2.7910000000019863e-06, 3.2220000001359494e-06, 3.5280000005855072e-06, 2.569000000285371e-06, 2.986000000149147e-06, 3.2360000004061362e-06, 3.1109999998335525e-06, 2.735999999892158e-06, 2.8480000002772954e-06, 3.2919999997105265e-06, 2.6670000004003214e-06, 2.986000000149147e-06, 3.2640000000583314e-06, 3.0139999998013423e-06, 2.901999999416205e-06, 3.1109999998335525e-06, 3.0830000001813573e-06, 3.167000000026121e-06, 3.527999999697329e-06, 3.4309999996651186e-06, 2.666999999512143e-06, 3.278000000328518e-06, 3.332999999550168e-06, 2.986000000149147e-06, 2.931000000039319e-06, 3.042000000341716e-06, 3.208999999948503e-06, 2.9729999999617007e-06, 3.1380000002911856e-06, 2.9029999994989453e-06, 3.1529999997559344e-06, 5.419999995481817e-07, 3.1659999999433808e-06, 3.22300000021869e-06, 2.9999999995311555e-06, 2.819999999736922e-06, 2.7090000003227033e-06, 3.0269999999887887e-06, 3.2640000000583314e-06, 3.5000000000451337e-06, 2.4860000005233474e-06, 3.2919999997105265e-06, 2.693999999969776e-06, 3.4449999999353054e-06, 3.0689999999111706e-06, 3.2220000001359494e-06, 2.570000000368111e-06, 2.6109999993195743e-06, 3.0140000006895207e-06, 3.0560000006119026e-06, 3.3469999998203548e-06, 2.7220000005101497e-06, 3.0139999998013423e-06, 3.262999999975591e-06, 3.1250000001037392e-06, 3.1529999997559344e-06]</msg>
<status status="PASS" starttime="20201029 12:42:40.517" endtime="20201029 12:42:40.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.512" endtime="20201029 12:42:40.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.142" endtime="20201029 12:42:40.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.142" endtime="20201029 12:42:40.521"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.528" endtime="20201029 12:42:40.538"></status>
</kw>
<msg timestamp="20201029 12:42:40.538" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:40.527" endtime="20201029 12:42:40.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.541" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:40.540" endtime="20201029 12:42:40.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.542" endtime="20201029 12:42:40.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.524" endtime="20201029 12:42:40.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.523" endtime="20201029 12:42:40.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.552" endtime="20201029 12:42:40.864"></status>
</kw>
<msg timestamp="20201029 12:42:40.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.050295153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.050298681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:40.550" endtime="20201029 12:42:40.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.050295153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.050298681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:40.869" endtime="20201029 12:42:40.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.880" endtime="20201029 12:42:40.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.548" endtime="20201029 12:42:40.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.546" endtime="20201029 12:42:40.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:40.886" level="INFO">${RESULT} = [{'diff': 3.527999999697329e-06}, {'diff': 3.4309999996651186e-06}, {'diff': 2.666999999512143e-06}, {'diff': 3.278000000328518e-06}, {'diff': 3.332999999550168e-06}, {'diff': 2.986000000149147e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:42:40.883" endtime="20201029 12:42:40.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:40.892" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.527999999697329e-06, 3.4309999996651186e-06, 2.666999999512143e-06, 3.278000000328518e-06, 3.332999999550168e-06, 2.986000000149147e-06, 2.931000000039319e-06, 3.042000000341716e-06, 3.208...</msg>
<status status="PASS" starttime="20201029 12:42:40.887" endtime="20201029 12:42:40.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.896" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:40.895" endtime="20201029 12:42:40.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.899" level="INFO">VALUE: [3.527999999697329e-06, 3.4309999996651186e-06, 2.666999999512143e-06, 3.278000000328518e-06, 3.332999999550168e-06, 2.986000000149147e-06, 2.931000000039319e-06, 3.042000000341716e-06, 3.208999999948503e-06, 2.9729999999617007e-06, 3.1380000002911856e-06, 2.9029999994989453e-06, 3.1529999997559344e-06, 5.419999995481817e-07, 3.1659999999433808e-06, 3.22300000021869e-06, 2.9999999995311555e-06, 2.819999999736922e-06, 2.7090000003227033e-06, 3.0269999999887887e-06, 3.2640000000583314e-06, 3.5000000000451337e-06, 2.4860000005233474e-06, 3.2919999997105265e-06, 2.693999999969776e-06, 3.4449999999353054e-06, 3.0689999999111706e-06, 3.2220000001359494e-06, 2.570000000368111e-06, 2.6109999993195743e-06, 3.0140000006895207e-06, 3.0560000006119026e-06, 3.3469999998203548e-06, 2.7220000005101497e-06, 3.0139999998013423e-06, 3.262999999975591e-06, 3.1250000001037392e-06, 3.1529999997559344e-06, 0.36716180600000037, 2.443999999712787e-06, 3.2499999997881446e-06, 3.4170000002831102e-06, 2.9579999996087736e-06, 2.8329999999243682e-06, 3.2360000004061362e-06, 2.5839999997501195e-06, 2.7920000000847267e-06, 2.986000000149147e-06, 2.9440000002267652e-06, 3.097000000451544e-06, 3.3469999998203548e-06, 3.0969999995633657e-06, 3.0830000001813573e-06, 2.9859999992609687e-06, 3.069999999993911e-06, 3.290999999627786e-06, 2.5839999997501195e-06, 3.2640000000583314e-06, 3.0139999998013423e-06, 3.1800000002135675e-06, 2.889000000116937e-06, 2.6809999997823297e-06, 3.278000000328518e-06, 2.693999999969776e-06]</msg>
<status status="PASS" starttime="20201029 12:42:40.897" endtime="20201029 12:42:40.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.893" endtime="20201029 12:42:40.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.521" endtime="20201029 12:42:40.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.521" endtime="20201029 12:42:40.900"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.908" endtime="20201029 12:42:40.918"></status>
</kw>
<msg timestamp="20201029 12:42:40.918" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:40.906" endtime="20201029 12:42:40.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.921" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:40.919" endtime="20201029 12:42:40.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.922" endtime="20201029 12:42:40.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.904" endtime="20201029 12:42:40.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.902" endtime="20201029 12:42:40.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.933" endtime="20201029 12:42:41.250"></status>
</kw>
<msg timestamp="20201029 12:42:41.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.418936917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.418939792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:40.931" endtime="20201029 12:42:41.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.418936917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.418939792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:41.256" endtime="20201029 12:42:41.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.266" endtime="20201029 12:42:41.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.927" endtime="20201029 12:42:41.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.925" endtime="20201029 12:42:41.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:41.273" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.0689999999111706e-06}, {'diff': 3.2220000001359494e-06}, {'diff': 2.570000000368111e-06}, {'diff': 2.6109999993195743e-06}, {'diff': 3.0140000006895207e-06}, {'diff': 3.056000...</msg>
<status status="PASS" starttime="20201029 12:42:41.269" endtime="20201029 12:42:41.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:41.278" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.0689999999111706e-06, 3.2220000001359494e-06, 2.570000000368111e-06, 2.6109999993195743e-06, 3.0140000006895207e-06, 3.0560000006119026e-06, 3.3469999998203548e-06, 2.7220000005101497e-...</msg>
<status status="PASS" starttime="20201029 12:42:41.274" endtime="20201029 12:42:41.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.282" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:41.281" endtime="20201029 12:42:41.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.284" level="INFO">VALUE: [0, 3.0689999999111706e-06, 3.2220000001359494e-06, 2.570000000368111e-06, 2.6109999993195743e-06, 3.0140000006895207e-06, 3.0560000006119026e-06, 3.3469999998203548e-06, 2.7220000005101497e-06, 3.0139999998013423e-06, 3.262999999975591e-06, 3.1250000001037392e-06, 3.1529999997559344e-06, 0.36716180600000037, 2.443999999712787e-06, 3.2499999997881446e-06, 3.4170000002831102e-06, 2.9579999996087736e-06, 2.8329999999243682e-06, 3.2360000004061362e-06, 2.5839999997501195e-06, 2.7920000000847267e-06, 2.986000000149147e-06, 2.9440000002267652e-06, 3.097000000451544e-06, 3.3469999998203548e-06, 3.0969999995633657e-06, 3.0830000001813573e-06, 2.9859999992609687e-06, 3.069999999993911e-06, 3.290999999627786e-06, 2.5839999997501195e-06, 3.2640000000583314e-06, 3.0139999998013423e-06, 3.1800000002135675e-06, 2.889000000116937e-06, 2.6809999997823297e-06, 3.278000000328518e-06, 2.693999999969776e-06, 5.419999995481817e-07, 3.055999999723724e-06, 3.292000000598705e-06, 2.916999999769132e-06, 2.9299999999565784e-06, 3.1530000006441128e-06, 3.347000000708533e-06, 3.4449999999353054e-06, 2.6110000002077527e-06, 3.028000000071529e-06, 3.652000000187172e-06, 3.042000000341716e-06, 2.457999999982974e-06, 2.9170000006573105e-06, 3.2360000004061362e-06, 2.7499999992741664e-06, 3.0549999996409838e-06, 3.0969999995633657e-06, 3.0830000001813573e-06, 3.069999999993911e-06, 2.638999999859948e-06, 3.0969999995633657e-06, 2.6809999997823297e-06, 2.638999999859948e-06, 2.986000000149147e-06]</msg>
<status status="PASS" starttime="20201029 12:42:41.283" endtime="20201029 12:42:41.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.279" endtime="20201029 12:42:41.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.901" endtime="20201029 12:42:41.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.901" endtime="20201029 12:42:41.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:33.617" endtime="20201029 12:42:41.286"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:33.548" endtime="20201029 12:42:41.287" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:41.293" endtime="20201029 12:42:41.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.292" endtime="20201029 12:42:41.313"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.327" endtime="20201029 12:42:41.341"></status>
</kw>
<msg timestamp="20201029 12:42:41.342" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:41.326" endtime="20201029 12:42:41.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.345" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:41.343" endtime="20201029 12:42:41.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.348" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:41.346" endtime="20201029 12:42:41.348"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:41.323" endtime="20201029 12:42:41.349"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:41.321" endtime="20201029 12:42:41.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.320" endtime="20201029 12:42:41.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:41.353" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:41.352" endtime="20201029 12:42:41.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.350" endtime="20201029 12:42:41.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.319" endtime="20201029 12:42:41.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.318" endtime="20201029 12:42:41.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.355" endtime="20201029 12:42:41.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.316" endtime="20201029 12:42:41.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.314" endtime="20201029 12:42:41.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.291" endtime="20201029 12:42:41.358"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.366" endtime="20201029 12:42:41.378"></status>
</kw>
<msg timestamp="20201029 12:42:41.378" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:41.365" endtime="20201029 12:42:41.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.381" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:41.379" endtime="20201029 12:42:41.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.382" endtime="20201029 12:42:41.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.362" endtime="20201029 12:42:41.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.360" endtime="20201029 12:42:41.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.392" endtime="20201029 12:42:41.673"></status>
</kw>
<msg timestamp="20201029 12:42:41.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063961819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063963083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:41.390" endtime="20201029 12:42:41.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063961819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063963083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:41.678" endtime="20201029 12:42:41.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.686" endtime="20201029 12:42:41.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.386" endtime="20201029 12:42:41.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.385" endtime="20201029 12:42:41.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:41.693" level="INFO">${RESULT} = [{'diff': 1.26400000000082e-06}, {'diff': 8.18999999999126e-07}, {'diff': 8.199999999985996e-07}, {'diff': 7.919999999994598e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.199999999985996e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 12:42:41.689" endtime="20201029 12:42:41.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:41.697" level="INFO">${OVERHEAD} = {'diff': [1.26400000000082e-06, 8.18999999999126e-07, 8.199999999985996e-07, 7.919999999994598e-07, 8.469999999982658e-07, 8.199999999985996e-07, 8.18999999999126e-07, 8.200000000124774e-07, 8.1899999...</msg>
<status status="PASS" starttime="20201029 12:42:41.694" endtime="20201029 12:42:41.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.701" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:41.700" endtime="20201029 12:42:41.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.704" level="INFO">VALUE: [1.26400000000082e-06, 8.18999999999126e-07, 8.199999999985996e-07, 7.919999999994598e-07, 8.469999999982658e-07, 8.199999999985996e-07, 8.18999999999126e-07, 8.200000000124774e-07, 8.18999999999126e-07, 8.199999999985996e-07, 8.330000000056348e-07, 8.060000000059686e-07, 8.469999999982658e-07, 7.909999999999862e-07, 8.18999999999126e-07, 8.330000000056348e-07, 8.479999999977395e-07, 8.340000000051084e-07, 7.909999999999862e-07, 8.330000000056348e-07, 8.330000000056348e-07, 8.199999999985996e-07, 8.340000000051084e-07, 8.32999999991757e-07, 8.060000000059686e-07, 8.470000000121436e-07, 8.330000000056348e-07, 8.200000000124774e-07, 8.479999999977395e-07, 8.32999999991757e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.340000000051084e-07, 8.469999999982658e-07, 8.18999999999126e-07, 7.780000000068288e-07, 8.32999999991757e-07, 8.32999999991757e-07, 8.32999999991757e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.18999999999126e-07, 8.18999999999126e-07, 8.18999999999126e-07, 8.200000000124774e-07, 8.330000000056348e-07, 8.18999999999126e-07, 8.339999999912306e-07]</msg>
<status status="PASS" starttime="20201029 12:42:41.702" endtime="20201029 12:42:41.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.698" endtime="20201029 12:42:41.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.359" endtime="20201029 12:42:41.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.359" endtime="20201029 12:42:41.705"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.714" endtime="20201029 12:42:41.725"></status>
</kw>
<msg timestamp="20201029 12:42:41.726" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:41.712" endtime="20201029 12:42:41.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.728" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:41.727" endtime="20201029 12:42:41.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.730" endtime="20201029 12:42:41.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.709" endtime="20201029 12:42:41.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.707" endtime="20201029 12:42:41.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.739" endtime="20201029 12:42:42.044"></status>
</kw>
<msg timestamp="20201029 12:42:42.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064050431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064051264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:41.737" endtime="20201029 12:42:42.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064050431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064051264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:42.049" endtime="20201029 12:42:42.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.059" endtime="20201029 12:42:42.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.734" endtime="20201029 12:42:42.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.733" endtime="20201029 12:42:42.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:42.066" level="INFO">${RESULT} = [{'diff': 8.32999999991757e-07}, {'diff': 8.32999999991757e-07}, {'diff': 8.32999999991757e-07}, {'diff': 8.18999999999126e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.469999999982658e-07}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:42:42.063" endtime="20201029 12:42:42.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:42.072" level="INFO">${OVERHEAD} = {'diff': [8.32999999991757e-07, 8.32999999991757e-07, 8.32999999991757e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.18999999999126e-07, 8.189999999...</msg>
<status status="PASS" starttime="20201029 12:42:42.067" endtime="20201029 12:42:42.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.076" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:42.075" endtime="20201029 12:42:42.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.079" level="INFO">VALUE: [8.32999999991757e-07, 8.32999999991757e-07, 8.32999999991757e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.18999999999126e-07, 8.18999999999126e-07, 8.18999999999126e-07, 8.200000000124774e-07, 8.330000000056348e-07, 8.18999999999126e-07, 8.339999999912306e-07, 1.360999999977519e-06, 8.470000000260214e-07, 8.189999999852482e-07, 7.919999999717042e-07, 8.200000000124774e-07, 7.779999999790732e-07, 8.189999999852482e-07, 8.329999999778792e-07, 8.200000000124774e-07, 8.330000000333904e-07, 8.479999999977395e-07, 8.469999999705102e-07, 8.340000000051084e-07, 8.200000000124774e-07, 8.470000000260214e-07, 8.469999999705102e-07, 8.340000000051084e-07, 7.639999999864422e-07, 8.340000000051084e-07, 8.329999999778792e-07, 8.060000000198464e-07, 8.470000000260214e-07, 8.200000000124774e-07, 8.329999999778792e-07, 8.750000000112834e-07, 7.909999999999862e-07, 8.329999999778792e-07, 8.190000000407593e-07, 8.329999999778792e-07, 8.470000000260214e-07, 8.329999999778792e-07, 8.330000000333904e-07, 8.609999999631412e-07, 8.340000000051084e-07, 8.339999999495973e-07, 8.330000000333904e-07, 8.189999999852482e-07, 8.049999999926172e-07, 7.770000000073551e-07, 8.329999999778792e-07, 8.330000000333904e-07, 8.340000000051084e-07, 8.200000000124774e-07, 8.330000000333904e-07, 8.479999999977395e-07, 8.199999999569663e-07, 8.060000000198464e-07, 8.469999999705102e-07, 8.189999999852482e-07, 8.329999999778792e-07]</msg>
<status status="PASS" starttime="20201029 12:42:42.077" endtime="20201029 12:42:42.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.073" endtime="20201029 12:42:42.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.706" endtime="20201029 12:42:42.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.706" endtime="20201029 12:42:42.080"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.088" endtime="20201029 12:42:42.100"></status>
</kw>
<msg timestamp="20201029 12:42:42.100" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:42.087" endtime="20201029 12:42:42.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.103" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:42.101" endtime="20201029 12:42:42.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.104" endtime="20201029 12:42:42.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.084" endtime="20201029 12:42:42.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.082" endtime="20201029 12:42:42.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.113" endtime="20201029 12:42:42.416"></status>
</kw>
<msg timestamp="20201029 12:42:42.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.403635306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.403636125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:42.111" endtime="20201029 12:42:42.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.403635306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.403636125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:42.421" endtime="20201029 12:42:42.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.431" endtime="20201029 12:42:42.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.109" endtime="20201029 12:42:42.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.107" endtime="20201029 12:42:42.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:42.438" level="INFO">${RESULT} = [{'diff': 8.189999999852482e-07}, {'diff': 8.049999999926172e-07}, {'diff': 7.770000000073551e-07}, {'diff': 8.329999999778792e-07}, {'diff': 8.330000000333904e-07}, {'diff': 8.340000000051084e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:42.434" endtime="20201029 12:42:42.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:42.445" level="INFO">${OVERHEAD} = {'diff': [8.189999999852482e-07, 8.049999999926172e-07, 7.770000000073551e-07, 8.329999999778792e-07, 8.330000000333904e-07, 8.340000000051084e-07, 8.200000000124774e-07, 8.330000000333904e-07, 8.4799...</msg>
<status status="PASS" starttime="20201029 12:42:42.439" endtime="20201029 12:42:42.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.450" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:42.449" endtime="20201029 12:42:42.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.452" level="INFO">VALUE: [8.189999999852482e-07, 8.049999999926172e-07, 7.770000000073551e-07, 8.329999999778792e-07, 8.330000000333904e-07, 8.340000000051084e-07, 8.200000000124774e-07, 8.330000000333904e-07, 8.479999999977395e-07, 8.199999999569663e-07, 8.060000000198464e-07, 8.469999999705102e-07, 8.189999999852482e-07, 8.329999999778792e-07, 1.236000000015558e-06, 8.329999999778792e-07, 8.339999999495973e-07, 8.329999999778792e-07, 7.910000000554973e-07, 8.469999999149991e-07, 8.329999999778792e-07, 8.470000000260214e-07, 8.329999999778792e-07, 8.329999999778792e-07, 8.18999999929737e-07, 8.329999999778792e-07, 8.329999999778792e-07, 8.199999999014551e-07, 8.330000000889015e-07, 8.750000000112834e-07, 8.889999999484033e-07, 8.200000000124774e-07, 8.339999999495973e-07, 8.479999999977395e-07, 8.18999999929737e-07, 8.469999999149991e-07, 8.059999999643352e-07, 8.470000000260214e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.200000000124774e-07, 8.18999999929737e-07, 8.339999999495973e-07, 8.18999999929737e-07, 8.329999999778792e-07, 8.329999999778792e-07, 8.470000000260214e-07, 8.190000000407593e-07, 8.329999999778792e-07, 8.329999999778792e-07, 8.329999999778792e-07, 8.470000000260214e-07, 8.190000000407593e-07, 8.199999999014551e-07, 8.329999999778792e-07, 8.200000000124774e-07, 8.200000000124774e-07, 8.750000000112834e-07, 8.330000000889015e-07, 8.329999999778792e-07, 8.470000000260214e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.339999999495973e-07]</msg>
<status status="PASS" starttime="20201029 12:42:42.451" endtime="20201029 12:42:42.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.446" endtime="20201029 12:42:42.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.081" endtime="20201029 12:42:42.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.081" endtime="20201029 12:42:42.454"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.462" endtime="20201029 12:42:42.473"></status>
</kw>
<msg timestamp="20201029 12:42:42.473" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:42.460" endtime="20201029 12:42:42.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.476" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:42.474" endtime="20201029 12:42:42.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.477" endtime="20201029 12:42:42.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.458" endtime="20201029 12:42:42.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.456" endtime="20201029 12:42:42.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.486" endtime="20201029 12:42:42.798"></status>
</kw>
<msg timestamp="20201029 12:42:42.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.766980556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.766981389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:42.484" endtime="20201029 12:42:42.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.766980556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.766981389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:42.803" endtime="20201029 12:42:42.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.815" endtime="20201029 12:42:42.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.482" endtime="20201029 12:42:42.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.480" endtime="20201029 12:42:42.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:42.823" level="INFO">${RESULT} = [{'diff': 8.329999999778792e-07}, {'diff': 8.470000000260214e-07}, {'diff': 8.190000000407593e-07}, {'diff': 8.199999999014551e-07}, {'diff': 8.329999999778792e-07}, {'diff': 8.200000000124774e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:42.820" endtime="20201029 12:42:42.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:42.828" level="INFO">${OVERHEAD} = {'diff': [8.329999999778792e-07, 8.470000000260214e-07, 8.190000000407593e-07, 8.199999999014551e-07, 8.329999999778792e-07, 8.200000000124774e-07, 8.200000000124774e-07, 8.750000000112834e-07, 8.3300...</msg>
<status status="PASS" starttime="20201029 12:42:42.824" endtime="20201029 12:42:42.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.833" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:42.832" endtime="20201029 12:42:42.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.835" level="INFO">VALUE: [8.329999999778792e-07, 8.470000000260214e-07, 8.190000000407593e-07, 8.199999999014551e-07, 8.329999999778792e-07, 8.200000000124774e-07, 8.200000000124774e-07, 8.750000000112834e-07, 8.330000000889015e-07, 8.329999999778792e-07, 8.470000000260214e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.339999999495973e-07, 1.2920000000971044e-06, 7.920000000272154e-07, 8.339999999495973e-07, 8.470000001370437e-07, 8.200000001234997e-07, 8.339999999495973e-07, 8.339999999495973e-07, 8.190000000407593e-07, 8.200000001234997e-07, 9.029999998855232e-07, 8.189999998187147e-07, 8.190000000407593e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.190000000407593e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.330000000889015e-07, 8.339999999495973e-07, 8.469999999149991e-07, 8.609999999631412e-07, 8.609999999631412e-07, 8.469999999149991e-07, 8.190000000407593e-07, 8.609999999631412e-07, 8.190000000407593e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.609999999631412e-07, 8.330000000889015e-07, 8.190000000407593e-07, 8.199999999014551e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.329999998668569e-07, 8.330000000889015e-07, 8.470000001370437e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.609999999631412e-07, 8.329999998668569e-07, 8.330000000889015e-07, 8.339999999495973e-07, 8.750000000112834e-07, 8.330000000889015e-07]</msg>
<status status="PASS" starttime="20201029 12:42:42.834" endtime="20201029 12:42:42.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.829" endtime="20201029 12:42:42.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.455" endtime="20201029 12:42:42.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.454" endtime="20201029 12:42:42.837"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.845" endtime="20201029 12:42:42.857"></status>
</kw>
<msg timestamp="20201029 12:42:42.857" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:42.844" endtime="20201029 12:42:42.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.860" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:42.858" endtime="20201029 12:42:42.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.861" endtime="20201029 12:42:42.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.840" endtime="20201029 12:42:42.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.839" endtime="20201029 12:42:42.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.870" endtime="20201029 12:42:43.173"></status>
</kw>
<msg timestamp="20201029 12:42:43.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.130245875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.130246694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:42.868" endtime="20201029 12:42:43.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.130245875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.130246694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:43.178" endtime="20201029 12:42:43.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.188" endtime="20201029 12:42:43.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.866" endtime="20201029 12:42:43.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.864" endtime="20201029 12:42:43.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:43.195" level="INFO">${RESULT} = [{'diff': 8.190000000407593e-07}, {'diff': 8.329999998668569e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.470000001370437e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.199999999014551e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:43.192" endtime="20201029 12:42:43.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:43.201" level="INFO">${OVERHEAD} = {'diff': [8.190000000407593e-07, 8.329999998668569e-07, 8.330000000889015e-07, 8.470000001370437e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.6099...</msg>
<status status="PASS" starttime="20201029 12:42:43.196" endtime="20201029 12:42:43.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.205" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:43.204" endtime="20201029 12:42:43.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.208" level="INFO">VALUE: [8.190000000407593e-07, 8.329999998668569e-07, 8.330000000889015e-07, 8.470000001370437e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.609999999631412e-07, 8.329999998668569e-07, 8.330000000889015e-07, 8.339999999495973e-07, 8.750000000112834e-07, 8.330000000889015e-07, 1.2780000000489622e-06, 8.049999999926172e-07, 8.200000001234997e-07, 8.469999999149991e-07, 8.609999999631412e-07, 8.189999998187147e-07, 8.470000001370437e-07, 8.199999999014551e-07, 8.479999999977395e-07, 8.199999999014551e-07, 8.330000000889015e-07, 8.750000000112834e-07, 8.469999999149991e-07, 8.329999998668569e-07, 8.200000001234997e-07, 8.199999999014551e-07, 8.330000000889015e-07, 8.470000001370437e-07, 8.199999999014551e-07, 8.340000001716419e-07, 8.609999999631412e-07, 8.329999998668569e-07, 7.90999999944475e-07, 8.469999999149991e-07, 8.060000000753575e-07, 9.029999998855232e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.339999999495973e-07, 8.339999999495973e-07, 8.190000000407593e-07, 8.060000000753575e-07, 8.060000000753575e-07, 8.190000000407593e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.470000001370437e-07, 8.340000001716419e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.469999999149991e-07, 8.189999998187147e-07, 8.330000000889015e-07, 7.920000000272154e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.339999999495973e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.330000000889015e-07]</msg>
<status status="PASS" starttime="20201029 12:42:43.206" endtime="20201029 12:42:43.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.202" endtime="20201029 12:42:43.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.837" endtime="20201029 12:42:43.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.837" endtime="20201029 12:42:43.209"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.217" endtime="20201029 12:42:43.229"></status>
</kw>
<msg timestamp="20201029 12:42:43.229" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.216" endtime="20201029 12:42:43.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.231" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.230" endtime="20201029 12:42:43.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.233" endtime="20201029 12:42:43.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.213" endtime="20201029 12:42:43.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.211" endtime="20201029 12:42:43.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.242" endtime="20201029 12:42:43.525"></status>
</kw>
<msg timestamp="20201029 12:42:43.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.503883028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.503883875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:43.240" endtime="20201029 12:42:43.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.503883028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.503883875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:43.530" endtime="20201029 12:42:43.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.542" endtime="20201029 12:42:43.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.237" endtime="20201029 12:42:43.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.236" endtime="20201029 12:42:43.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:43.551" level="INFO">${RESULT} = [{'diff': 8.470000001370437e-07}, {'diff': 8.340000001716419e-07}, {'diff': 8.190000000407593e-07}, {'diff': 8.339999999495973e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.189999998187147e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:43.547" endtime="20201029 12:42:43.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:43.557" level="INFO">${OVERHEAD} = {'diff': [8.470000001370437e-07, 8.340000001716419e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.469999999149991e-07, 8.189999998187147e-07, 8.330000000889015e-07, 7.920000000272154e-07, 8.4799...</msg>
<status status="PASS" starttime="20201029 12:42:43.552" endtime="20201029 12:42:43.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.561" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:43.560" endtime="20201029 12:42:43.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.564" level="INFO">VALUE: [8.470000001370437e-07, 8.340000001716419e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.469999999149991e-07, 8.189999998187147e-07, 8.330000000889015e-07, 7.920000000272154e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.339999999495973e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.330000000889015e-07, 1.291000000014364e-06, 8.469999999149991e-07, 8.340000001716419e-07, 8.329999998668569e-07, 8.049999999926172e-07, 8.890000000594256e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.049999999926172e-07, 8.470000001370437e-07, 8.329999998668569e-07, 8.339999999495973e-07, 8.330000000889015e-07, 8.059999998533129e-07, 8.200000001234997e-07, 8.049999999926172e-07, 8.330000000889015e-07, 8.479999999977395e-07, 8.340000001716419e-07, 8.190000000407593e-07, 8.049999999926172e-07, 8.329999998668569e-07, 8.609999999631412e-07, 8.750000000112834e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.190000000407593e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.200000001234997e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.339999999495973e-07, 8.479999999977395e-07, 8.750000000112834e-07, 8.330000000889015e-07, 8.190000000407593e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.469999999149991e-07, 8.060000000753575e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.329999998668569e-07, 8.329999998668569e-07]</msg>
<status status="PASS" starttime="20201029 12:42:43.563" endtime="20201029 12:42:43.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.558" endtime="20201029 12:42:43.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.210" endtime="20201029 12:42:43.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.210" endtime="20201029 12:42:43.566"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.574" endtime="20201029 12:42:43.585"></status>
</kw>
<msg timestamp="20201029 12:42:43.585" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.572" endtime="20201029 12:42:43.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.588" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.586" endtime="20201029 12:42:43.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.589" endtime="20201029 12:42:43.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.569" endtime="20201029 12:42:43.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.568" endtime="20201029 12:42:43.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.600" endtime="20201029 12:42:43.904"></status>
</kw>
<msg timestamp="20201029 12:42:43.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.866017319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.866018167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:43.597" endtime="20201029 12:42:43.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.866017319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.866018167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:43.909" endtime="20201029 12:42:43.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.919" endtime="20201029 12:42:43.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.595" endtime="20201029 12:42:43.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.593" endtime="20201029 12:42:43.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:43.926" level="INFO">${RESULT} = [{'diff': 8.479999999977395e-07}, {'diff': 8.750000000112834e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.190000000407593e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.330000000889015e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:43.922" endtime="20201029 12:42:43.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:43.931" level="INFO">${OVERHEAD} = {'diff': [8.479999999977395e-07, 8.750000000112834e-07, 8.330000000889015e-07, 8.190000000407593e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.469999999149991e-07, 8.0600...</msg>
<status status="PASS" starttime="20201029 12:42:43.927" endtime="20201029 12:42:43.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.935" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:43.934" endtime="20201029 12:42:43.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.939" level="INFO">VALUE: [8.479999999977395e-07, 8.750000000112834e-07, 8.330000000889015e-07, 8.190000000407593e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.469999999149991e-07, 8.060000000753575e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.329999998668569e-07, 8.329999998668569e-07, 1.2919999998750598e-06, 8.469999999149991e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.19000000262804e-07, 8.189999998187147e-07, 8.339999997275527e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.189999998187147e-07, 8.19000000262804e-07, 8.340000001716419e-07, 8.330000000889015e-07, 9.15999999850925e-07, 8.469999999149991e-07, 8.339999997275527e-07, 9.030000001075678e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.340000001716419e-07, 8.470000003590883e-07, 8.199999999014551e-07, 8.189999998187147e-07, 8.189999998187147e-07, 8.189999998187147e-07, 8.469999999149991e-07, 8.330000000889015e-07, 7.910000001665196e-07, 8.340000001716419e-07, 8.479999999977395e-07, 8.340000001716419e-07, 8.340000001716419e-07, 8.479999999977395e-07, 8.330000000889015e-07, 8.470000003590883e-07, 8.330000000889015e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.340000001716419e-07]</msg>
<status status="PASS" starttime="20201029 12:42:43.937" endtime="20201029 12:42:43.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.932" endtime="20201029 12:42:43.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.566" endtime="20201029 12:42:43.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.566" endtime="20201029 12:42:43.942"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.952" endtime="20201029 12:42:43.963"></status>
</kw>
<msg timestamp="20201029 12:42:43.964" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.950" endtime="20201029 12:42:43.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.968" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.965" endtime="20201029 12:42:43.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.969" endtime="20201029 12:42:43.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.948" endtime="20201029 12:42:43.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.945" endtime="20201029 12:42:43.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.980" endtime="20201029 12:42:44.296"></status>
</kw>
<msg timestamp="20201029 12:42:44.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.213185125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.213185958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:43.978" endtime="20201029 12:42:44.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.213185125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.213185958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:44.301" endtime="20201029 12:42:44.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.311" endtime="20201029 12:42:44.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.975" endtime="20201029 12:42:44.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.974" endtime="20201029 12:42:44.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:44.319" level="INFO">${RESULT} = [{'diff': 8.330000000889015e-07}, {'diff': 7.910000001665196e-07}, {'diff': 8.340000001716419e-07}, {'diff': 8.479999999977395e-07}, {'diff': 8.340000001716419e-07}, {'diff': 8.340000001716419e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:44.315" endtime="20201029 12:42:44.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:44.325" level="INFO">${OVERHEAD} = {'diff': [8.330000000889015e-07, 7.910000001665196e-07, 8.340000001716419e-07, 8.479999999977395e-07, 8.340000001716419e-07, 8.340000001716419e-07, 8.479999999977395e-07, 8.330000000889015e-07, 8.4700...</msg>
<status status="PASS" starttime="20201029 12:42:44.320" endtime="20201029 12:42:44.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.329" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:44.328" endtime="20201029 12:42:44.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.332" level="INFO">VALUE: [8.330000000889015e-07, 7.910000001665196e-07, 8.340000001716419e-07, 8.479999999977395e-07, 8.340000001716419e-07, 8.340000001716419e-07, 8.479999999977395e-07, 8.330000000889015e-07, 8.470000003590883e-07, 8.330000000889015e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.340000001716419e-07, 1.3189999998886037e-06, 8.479999999977395e-07, 8.200000003455443e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.189999998187147e-07, 8.200000003455443e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.340000001716419e-07, 8.049999999926172e-07, 8.330000000889015e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.049999999926172e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.059999996312683e-07, 8.199999999014551e-07, 8.060000000753575e-07, 8.340000001716419e-07, 8.340000001716419e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.199999999014551e-07, 8.199999999014551e-07, 8.479999999977395e-07, 8.329999996448123e-07, 8.340000001716419e-07, 8.610000001851859e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.060000000753575e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.469999999149991e-07, 8.470000003590883e-07, 8.049999999926172e-07, 8.330000000889015e-07, 8.189999998187147e-07, 8.330000000889015e-07]</msg>
<status status="PASS" starttime="20201029 12:42:44.330" endtime="20201029 12:42:44.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.326" endtime="20201029 12:42:44.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.943" endtime="20201029 12:42:44.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.942" endtime="20201029 12:42:44.334"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.342" endtime="20201029 12:42:44.353"></status>
</kw>
<msg timestamp="20201029 12:42:44.353" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:44.340" endtime="20201029 12:42:44.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.356" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:44.354" endtime="20201029 12:42:44.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.357" endtime="20201029 12:42:44.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.337" endtime="20201029 12:42:44.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.336" endtime="20201029 12:42:44.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.366" endtime="20201029 12:42:44.679"></status>
</kw>
<msg timestamp="20201029 12:42:44.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.582236389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.582237222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:44.365" endtime="20201029 12:42:44.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.582236389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.582237222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:44.684" endtime="20201029 12:42:44.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.694" endtime="20201029 12:42:44.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.362" endtime="20201029 12:42:44.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.360" endtime="20201029 12:42:44.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:44.703" level="INFO">${RESULT} = [{'diff': 8.329999996448123e-07}, {'diff': 8.610000001851859e-07}, {'diff': 8.060000000753575e-07}, {'diff': 8.340000001716419e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.330000000889015e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:44.698" endtime="20201029 12:42:44.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:44.707" level="INFO">${OVERHEAD} = {'diff': [8.329999996448123e-07, 8.610000001851859e-07, 8.060000000753575e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.46999...</msg>
<status status="PASS" starttime="20201029 12:42:44.704" endtime="20201029 12:42:44.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.711" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:44.710" endtime="20201029 12:42:44.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.714" level="INFO">VALUE: [8.329999996448123e-07, 8.610000001851859e-07, 8.060000000753575e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.469999999149991e-07, 8.470000003590883e-07, 8.049999999926172e-07, 8.330000000889015e-07, 8.189999998187147e-07, 8.330000000889015e-07, 1.3189999998886037e-06, 8.19000000262804e-07, 8.19000000262804e-07, 8.199999999014551e-07, 8.189999998187147e-07, 8.609999997410966e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.479999999977395e-07, 8.189999998187147e-07, 8.340000001716419e-07, 8.329999996448123e-07, 8.340000001716419e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.330000000889015e-07, 8.060000000753575e-07, 8.330000000889015e-07, 8.88999999837381e-07, 8.189999998187147e-07, 8.469999999149991e-07, 8.469999999149991e-07, 7.919999998051708e-07, 8.479999999977395e-07, 8.340000001716419e-07, 8.199999999014551e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.189999998187147e-07, 8.200000003455443e-07, 8.330000000889015e-07, 8.049999999926172e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.470000003590883e-07, 8.330000000889015e-07, 8.049999999926172e-07, 8.470000003590883e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.049999999926172e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.609999997410966e-07]</msg>
<status status="PASS" starttime="20201029 12:42:44.712" endtime="20201029 12:42:44.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.708" endtime="20201029 12:42:44.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.334" endtime="20201029 12:42:44.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.334" endtime="20201029 12:42:44.715"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.723" endtime="20201029 12:42:44.734"></status>
</kw>
<msg timestamp="20201029 12:42:44.735" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:44.722" endtime="20201029 12:42:44.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.737" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:44.736" endtime="20201029 12:42:44.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.738" endtime="20201029 12:42:44.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.719" endtime="20201029 12:42:44.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.717" endtime="20201029 12:42:44.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.748" endtime="20201029 12:42:45.073"></status>
</kw>
<msg timestamp="20201029 12:42:45.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.962123139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.962123972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:44.746" endtime="20201029 12:42:45.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.962123139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.962123972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:45.078" endtime="20201029 12:42:45.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.088" endtime="20201029 12:42:45.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.743" endtime="20201029 12:42:45.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.741" endtime="20201029 12:42:45.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:45.102" level="INFO">${RESULT} = [{'diff': 8.330000000889015e-07}, {'diff': 8.049999999926172e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.19000000262804e-07}, {'diff': 8.470000003590883e-07}, {'diff': 8.330000000889015e-07}, {'...</msg>
<status status="PASS" starttime="20201029 12:42:45.099" endtime="20201029 12:42:45.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:45.107" level="INFO">${OVERHEAD} = {'diff': [8.330000000889015e-07, 8.049999999926172e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.470000003590883e-07, 8.330000000889015e-07, 8.049999999926172e-07, 8.470000003590883e-07, 8.33000...</msg>
<status status="PASS" starttime="20201029 12:42:45.103" endtime="20201029 12:42:45.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.112" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:45.110" endtime="20201029 12:42:45.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.115" level="INFO">VALUE: [8.330000000889015e-07, 8.049999999926172e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.470000003590883e-07, 8.330000000889015e-07, 8.049999999926172e-07, 8.470000003590883e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.049999999926172e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.609999997410966e-07, 1.2780000000489622e-06, 8.049999999926172e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.049999999926172e-07, 8.330000000889015e-07, 8.470000003590883e-07, 8.469999999149991e-07, 8.479999999977395e-07, 8.330000000889015e-07, 8.200000003455443e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.340000001716419e-07, 8.339999997275527e-07, 8.189999998187147e-07, 8.199999999014551e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.199999999014551e-07, 8.330000000889015e-07, 8.19000000262804e-07, 8.609999997410966e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.88999999837381e-07, 8.469999999149991e-07, 8.610000001851859e-07, 8.189999998187147e-07, 8.049999999926172e-07, 8.329999996448123e-07, 8.049999999926172e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.340000001716419e-07, 8.199999999014551e-07, 8.200000003455443e-07, 8.330000000889015e-07, 8.049999999926172e-07, 8.750000000112834e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.329999996448123e-07, 7.919999998051708e-07, 8.330000000889015e-07, 8.189999998187147e-07, 8.339999997275527e-07, 8.330000000889015e-07, 8.330000000889015e-07]</msg>
<status status="PASS" starttime="20201029 12:42:45.113" endtime="20201029 12:42:45.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.108" endtime="20201029 12:42:45.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.716" endtime="20201029 12:42:45.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.716" endtime="20201029 12:42:45.116"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.124" endtime="20201029 12:42:45.134"></status>
</kw>
<msg timestamp="20201029 12:42:45.135" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:45.122" endtime="20201029 12:42:45.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.137" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:45.136" endtime="20201029 12:42:45.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.138" endtime="20201029 12:42:45.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.120" endtime="20201029 12:42:45.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.118" endtime="20201029 12:42:45.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.147" endtime="20201029 12:42:45.470"></status>
</kw>
<msg timestamp="20201029 12:42:45.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.334009097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.334009917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:45.146" endtime="20201029 12:42:45.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.334009097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.334009917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:45.477" endtime="20201029 12:42:45.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.491" endtime="20201029 12:42:45.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.143" endtime="20201029 12:42:45.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.141" endtime="20201029 12:42:45.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:45.502" level="INFO">${RESULT} = [{'diff': 8.199999999014551e-07}, {'diff': 8.200000003455443e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.049999999926172e-07}, {'diff': 8.750000000112834e-07}, {'diff': 8.330000000889015e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:45.497" endtime="20201029 12:42:45.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:45.510" level="INFO">${OVERHEAD} = {'diff': [8.199999999014551e-07, 8.200000003455443e-07, 8.330000000889015e-07, 8.049999999926172e-07, 8.750000000112834e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.329999996448123e-07, 7.9199...</msg>
<status status="PASS" starttime="20201029 12:42:45.504" endtime="20201029 12:42:45.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.515" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:45.514" endtime="20201029 12:42:45.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.518" level="INFO">VALUE: [8.199999999014551e-07, 8.200000003455443e-07, 8.330000000889015e-07, 8.049999999926172e-07, 8.750000000112834e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.329999996448123e-07, 7.919999998051708e-07, 8.330000000889015e-07, 8.189999998187147e-07, 8.339999997275527e-07, 8.330000000889015e-07, 8.330000000889015e-07, 1.292000000319149e-06, 7.499999998827889e-07, 8.479999999977395e-07, 8.88999999837381e-07, 8.199999999014551e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.609999997410966e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.609999997410966e-07, 8.469999999149991e-07, 8.060000000753575e-07, 8.049999999926172e-07, 8.339999997275527e-07, 8.610000001851859e-07, 7.919999998051708e-07, 8.620000002679262e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.199999999014551e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.340000001716419e-07, 8.469999999149991e-07, 8.189999998187147e-07, 8.470000003590883e-07, 8.199999999014551e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.189999998187147e-07, 7.779999999790732e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.610000001851859e-07, 8.330000000889015e-07, 8.750000000112834e-07, 8.469999999149991e-07, 8.189999998187147e-07, 8.189999998187147e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.19000000262804e-07, 8.470000003590883e-07]</msg>
<status status="PASS" starttime="20201029 12:42:45.517" endtime="20201029 12:42:45.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.511" endtime="20201029 12:42:45.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.117" endtime="20201029 12:42:45.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.116" endtime="20201029 12:42:45.520"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.528" endtime="20201029 12:42:45.540"></status>
</kw>
<msg timestamp="20201029 12:42:45.540" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:45.527" endtime="20201029 12:42:45.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.543" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:45.541" endtime="20201029 12:42:45.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.544" endtime="20201029 12:42:45.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.524" endtime="20201029 12:42:45.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.522" endtime="20201029 12:42:45.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.553" endtime="20201029 12:42:45.894"></status>
</kw>
<msg timestamp="20201029 12:42:45.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.724400361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.724401194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:45.552" endtime="20201029 12:42:45.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.724400361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.724401194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:45.899" endtime="20201029 12:42:45.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.910" endtime="20201029 12:42:45.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.549" endtime="20201029 12:42:45.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.547" endtime="20201029 12:42:45.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:45.917" level="INFO">${RESULT} = [{'diff': 8.330000000889015e-07}, {'diff': 8.339999997275527e-07}, {'diff': 8.339999997275527e-07}, {'diff': 8.610000001851859e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.750000000112834e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:45.913" endtime="20201029 12:42:45.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:45.921" level="INFO">${OVERHEAD} = {'diff': [8.330000000889015e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.610000001851859e-07, 8.330000000889015e-07, 8.750000000112834e-07, 8.469999999149991e-07, 8.189999998187147e-07, 8.1899...</msg>
<status status="PASS" starttime="20201029 12:42:45.918" endtime="20201029 12:42:45.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.926" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:45.925" endtime="20201029 12:42:45.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.928" level="INFO">VALUE: [8.330000000889015e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.610000001851859e-07, 8.330000000889015e-07, 8.750000000112834e-07, 8.469999999149991e-07, 8.189999998187147e-07, 8.189999998187147e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.19000000262804e-07, 8.470000003590883e-07, 1.319999999971344e-06, 8.19000000262804e-07, 8.890000007255594e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.469999999149991e-07, 7.919999998051708e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.330000005329907e-07, 7.919999998051708e-07, 8.610000001851859e-07, 7.639999992647972e-07, 8.620000002679262e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.060000000753575e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.199999994573659e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.339999997275527e-07]</msg>
<status status="PASS" starttime="20201029 12:42:45.927" endtime="20201029 12:42:45.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.922" endtime="20201029 12:42:45.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.521" endtime="20201029 12:42:45.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.520" endtime="20201029 12:42:45.930"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.938" endtime="20201029 12:42:45.950"></status>
</kw>
<msg timestamp="20201029 12:42:45.950" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:45.936" endtime="20201029 12:42:45.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.953" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:45.951" endtime="20201029 12:42:45.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.954" endtime="20201029 12:42:45.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.933" endtime="20201029 12:42:45.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.932" endtime="20201029 12:42:45.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.963" endtime="20201029 12:42:46.287"></status>
</kw>
<msg timestamp="20201029 12:42:46.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.119160139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.119160972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:45.961" endtime="20201029 12:42:46.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.119160139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.119160972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:46.292" endtime="20201029 12:42:46.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.302" endtime="20201029 12:42:46.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.959" endtime="20201029 12:42:46.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.957" endtime="20201029 12:42:46.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:46.309" level="INFO">${RESULT} = [{'diff': 8.330000005329907e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.339999997275527e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:46.305" endtime="20201029 12:42:46.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:46.314" level="INFO">${OVERHEAD} = {'diff': [8.330000005329907e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.20000...</msg>
<status status="PASS" starttime="20201029 12:42:46.310" endtime="20201029 12:42:46.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.319" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:46.318" endtime="20201029 12:42:46.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.321" level="INFO">VALUE: [8.330000005329907e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.199999994573659e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.339999997275527e-07, 1.292000000319149e-06, 8.610000001851859e-07, 8.200000003455443e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.340000006157311e-07, 7.780000004231624e-07, 8.199999994573659e-07, 8.329999996448123e-07, 8.189999993746255e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.200000003455443e-07, 7.919999998051708e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.750000004553726e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.329999996448123e-07, 7.77999999534984e-07, 8.340000006157311e-07, 8.199999994573659e-07, 8.339999997275527e-07, 8.610000001851859e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.610000001851859e-07, 8.330000005329907e-07, 8.340000006157311e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.049999999926172e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.189999993746255e-07, 8.330000005329907e-07, 8.189999993746255e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.199999994573659e-07]</msg>
<status status="PASS" starttime="20201029 12:42:46.320" endtime="20201029 12:42:46.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.315" endtime="20201029 12:42:46.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.930" endtime="20201029 12:42:46.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.930" endtime="20201029 12:42:46.323"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.331" endtime="20201029 12:42:46.342"></status>
</kw>
<msg timestamp="20201029 12:42:46.342" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:46.329" endtime="20201029 12:42:46.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.344" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:46.343" endtime="20201029 12:42:46.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.346" endtime="20201029 12:42:46.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.327" endtime="20201029 12:42:46.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.325" endtime="20201029 12:42:46.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.354" endtime="20201029 12:42:46.662"></status>
</kw>
<msg timestamp="20201029 12:42:46.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.519048083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.519048917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:46.353" endtime="20201029 12:42:46.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.519048083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.519048917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:46.668" endtime="20201029 12:42:46.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.679" endtime="20201029 12:42:46.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.350" endtime="20201029 12:42:46.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.349" endtime="20201029 12:42:46.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:46.688" level="INFO">${RESULT} = [{'diff': 8.339999997275527e-07}, {'diff': 8.339999997275527e-07}, {'diff': 8.200000003455443e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.049999999926172e-07}, {'diff': 8.330000005329907e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:46.684" endtime="20201029 12:42:46.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:46.694" level="INFO">${OVERHEAD} = {'diff': [8.339999997275527e-07, 8.339999997275527e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.049999999926172e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.189999993746255e-07, 8.33000...</msg>
<status status="PASS" starttime="20201029 12:42:46.689" endtime="20201029 12:42:46.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.699" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:46.698" endtime="20201029 12:42:46.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.703" level="INFO">VALUE: [8.339999997275527e-07, 8.339999997275527e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.049999999926172e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.189999993746255e-07, 8.330000005329907e-07, 8.189999993746255e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.199999994573659e-07, 1.2780000000489622e-06, 8.19000000262804e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.200000003455443e-07, 9.170000003777545e-07, 8.479999999977395e-07, 8.200000003455443e-07, 8.199999994573659e-07, 8.479999999977395e-07, 8.200000003455443e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.479999999977395e-07, 8.330000005329907e-07, 8.189999993746255e-07, 8.340000006157311e-07, 8.19000000262804e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.060000000753575e-07, 8.339999997275527e-07, 8.610000001851859e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.610000001851859e-07, 8.200000003455443e-07, 8.330000005329907e-07, 8.189999993746255e-07, 8.19000000262804e-07, 8.189999993746255e-07, 8.200000003455443e-07, 8.750000004553726e-07, 8.750000004553726e-07, 8.479999999977395e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.750000004553726e-07, 8.339999997275527e-07, 8.340000006157311e-07]</msg>
<status status="PASS" starttime="20201029 12:42:46.701" endtime="20201029 12:42:46.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.695" endtime="20201029 12:42:46.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.324" endtime="20201029 12:42:46.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.323" endtime="20201029 12:42:46.705"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.714" endtime="20201029 12:42:46.726"></status>
</kw>
<msg timestamp="20201029 12:42:46.727" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:46.712" endtime="20201029 12:42:46.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.730" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:46.728" endtime="20201029 12:42:46.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.732" endtime="20201029 12:42:46.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.709" endtime="20201029 12:42:46.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.707" endtime="20201029 12:42:46.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.743" endtime="20201029 12:42:47.064"></status>
</kw>
<msg timestamp="20201029 12:42:47.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.900400806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.900401625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:46.741" endtime="20201029 12:42:47.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.900400806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.900401625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:47.070" endtime="20201029 12:42:47.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.080" endtime="20201029 12:42:47.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.738" endtime="20201029 12:42:47.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.735" endtime="20201029 12:42:47.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:47.087" level="INFO">${RESULT} = [{'diff': 8.189999993746255e-07}, {'diff': 8.200000003455443e-07}, {'diff': 8.750000004553726e-07}, {'diff': 8.750000004553726e-07}, {'diff': 8.479999999977395e-07}, {'diff': 8.330000005329907e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:47.083" endtime="20201029 12:42:47.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:47.092" level="INFO">${OVERHEAD} = {'diff': [8.189999993746255e-07, 8.200000003455443e-07, 8.750000004553726e-07, 8.750000004553726e-07, 8.479999999977395e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.19000...</msg>
<status status="PASS" starttime="20201029 12:42:47.088" endtime="20201029 12:42:47.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.096" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:47.095" endtime="20201029 12:42:47.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.099" level="INFO">VALUE: [8.189999993746255e-07, 8.200000003455443e-07, 8.750000004553726e-07, 8.750000004553726e-07, 8.479999999977395e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.750000004553726e-07, 8.339999997275527e-07, 8.340000006157311e-07, 1.3059999997011573e-06, 8.049999999926172e-07, 8.890000007255594e-07, 7.499999998827889e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.610000001851859e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.189999993746255e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.610000001851859e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.330000005329907e-07, 7.919999998051708e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.060000000753575e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.200000003455443e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.610000001851859e-07, 8.049999999926172e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.749999995671942e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.749999995671942e-07, 8.329999996448123e-07, 8.199999994573659e-07, 8.19000000262804e-07]</msg>
<status status="PASS" starttime="20201029 12:42:47.097" endtime="20201029 12:42:47.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.092" endtime="20201029 12:42:47.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.705" endtime="20201029 12:42:47.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.705" endtime="20201029 12:42:47.100"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.109" endtime="20201029 12:42:47.120"></status>
</kw>
<msg timestamp="20201029 12:42:47.120" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:47.107" endtime="20201029 12:42:47.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.123" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:47.121" endtime="20201029 12:42:47.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.124" endtime="20201029 12:42:47.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.104" endtime="20201029 12:42:47.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.102" endtime="20201029 12:42:47.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.133" endtime="20201029 12:42:47.448"></status>
</kw>
<msg timestamp="20201029 12:42:47.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.275327764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.275328569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:47.132" endtime="20201029 12:42:47.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.275327764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.275328569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:47.454" endtime="20201029 12:42:47.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.464" endtime="20201029 12:42:47.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.129" endtime="20201029 12:42:47.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.127" endtime="20201029 12:42:47.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:47.471" level="INFO">${RESULT} = [{'diff': 8.049999999926172e-07}, {'diff': 8.330000005329907e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.339999997275527e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.749999995671942e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:47.467" endtime="20201029 12:42:47.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:47.476" level="INFO">${OVERHEAD} = {'diff': [8.049999999926172e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.749999995671942e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.3300...</msg>
<status status="PASS" starttime="20201029 12:42:47.472" endtime="20201029 12:42:47.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.481" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:47.480" endtime="20201029 12:42:47.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.483" level="INFO">VALUE: [8.049999999926172e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.749999995671942e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.749999995671942e-07, 8.329999996448123e-07, 8.199999994573659e-07, 8.19000000262804e-07, 1.3059999997011573e-06, 7.919999998051708e-07, 8.049999999926172e-07, 8.340000006157311e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.199999994573659e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.329999996448123e-07, 8.329999996448123e-07, 7.920000006933492e-07, 7.77000000340422e-07, 8.189999993746255e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.340000006157311e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.189999993746255e-07, 8.339999997275527e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.049999999926172e-07, 8.060000000753575e-07, 7.77000000340422e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.479999999977395e-07, 8.329999996448123e-07, 8.199999994573659e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.610000001851859e-07, 8.470000008031775e-07, 8.339999997275527e-07]</msg>
<status status="PASS" starttime="20201029 12:42:47.482" endtime="20201029 12:42:47.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.477" endtime="20201029 12:42:47.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.101" endtime="20201029 12:42:47.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.100" endtime="20201029 12:42:47.485"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.493" endtime="20201029 12:42:47.504"></status>
</kw>
<msg timestamp="20201029 12:42:47.504" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:47.491" endtime="20201029 12:42:47.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.507" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:47.505" endtime="20201029 12:42:47.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.508" endtime="20201029 12:42:47.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.489" endtime="20201029 12:42:47.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.487" endtime="20201029 12:42:47.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.517" endtime="20201029 12:42:47.837"></status>
</kw>
<msg timestamp="20201029 12:42:47.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.659462292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.659463069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:47.515" endtime="20201029 12:42:47.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.659462292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.659463069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:47.842" endtime="20201029 12:42:47.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.852" endtime="20201029 12:42:47.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.513" endtime="20201029 12:42:47.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.511" endtime="20201029 12:42:47.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:47.859" level="INFO">${RESULT} = [{'diff': 7.77000000340422e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.339999997275527e-07}, {'diff': 8.479999999977395e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.199999994573659e-07}, {'...</msg>
<status status="PASS" starttime="20201029 12:42:47.855" endtime="20201029 12:42:47.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:47.864" level="INFO">${OVERHEAD} = {'diff': [7.77000000340422e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.479999999977395e-07, 8.329999996448123e-07, 8.199999994573659e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.33999...</msg>
<status status="PASS" starttime="20201029 12:42:47.860" endtime="20201029 12:42:47.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.869" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:47.868" endtime="20201029 12:42:47.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.871" level="INFO">VALUE: [7.77000000340422e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.479999999977395e-07, 8.329999996448123e-07, 8.199999994573659e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.610000001851859e-07, 8.470000008031775e-07, 8.339999997275527e-07, 1.292000000319149e-06, 9.030000001075678e-07, 8.330000005329907e-07, 8.199999994573659e-07, 8.339999997275527e-07, 8.479999999977395e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.470000008031775e-07, 8.199999994573659e-07, 8.469999999149991e-07, 7.769999994522436e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.060000000753575e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.750000004553726e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.469999999149991e-07, 7.77999999534984e-07, 8.469999999149991e-07, 8.199999994573659e-07, 8.19000000262804e-07, 8.189999993746255e-07, 8.339999997275527e-07, 8.610000001851859e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.340000006157311e-07, 7.640000001529756e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.619999993797478e-07, 8.340000006157311e-07, 8.329999996448123e-07, 8.189999993746255e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.329999996448123e-07]</msg>
<status status="PASS" starttime="20201029 12:42:47.870" endtime="20201029 12:42:47.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.865" endtime="20201029 12:42:47.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.486" endtime="20201029 12:42:47.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.485" endtime="20201029 12:42:47.873"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.881" endtime="20201029 12:42:47.892"></status>
</kw>
<msg timestamp="20201029 12:42:47.892" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:47.879" endtime="20201029 12:42:47.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.895" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:47.893" endtime="20201029 12:42:47.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.896" endtime="20201029 12:42:47.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.877" endtime="20201029 12:42:47.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.875" endtime="20201029 12:42:47.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.907" endtime="20201029 12:42:48.232"></status>
</kw>
<msg timestamp="20201029 12:42:48.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.032441722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.032442569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:47.905" endtime="20201029 12:42:48.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.032441722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.032442569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:48.237" endtime="20201029 12:42:48.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.247" endtime="20201029 12:42:48.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.901" endtime="20201029 12:42:48.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.899" endtime="20201029 12:42:48.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:48.254" level="INFO">${RESULT} = [{'diff': 8.469999999149991e-07}, {'diff': 8.19000000262804e-07}, {'diff': 8.340000006157311e-07}, {'diff': 7.640000001529756e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.469999999149991e-07}, {'...</msg>
<status status="PASS" starttime="20201029 12:42:48.251" endtime="20201029 12:42:48.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:48.259" level="INFO">${OVERHEAD} = {'diff': [8.469999999149991e-07, 8.19000000262804e-07, 8.340000006157311e-07, 7.640000001529756e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.619999993797478e-07, 8.340000006157311e-07, 8.32999...</msg>
<status status="PASS" starttime="20201029 12:42:48.255" endtime="20201029 12:42:48.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.263" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:48.262" endtime="20201029 12:42:48.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.266" level="INFO">VALUE: [8.469999999149991e-07, 8.19000000262804e-07, 8.340000006157311e-07, 7.640000001529756e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.619999993797478e-07, 8.340000006157311e-07, 8.329999996448123e-07, 8.189999993746255e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.329999996448123e-07, 1.3060000005893357e-06, 8.330000005329907e-07, 7.77000000340422e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.610000001851859e-07, 8.330000005329907e-07, 8.200000003455443e-07, 8.049999999926172e-07, 7.919999998051708e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.88999999837381e-07, 8.049999999926172e-07, 8.19000000262804e-07, 7.909999997224304e-07, 8.470000008031775e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.199999994573659e-07, 8.749999995671942e-07, 8.330000005329907e-07, 8.200000003455443e-07, 8.330000005329907e-07, 8.610000001851859e-07, 8.060000000753575e-07, 8.059999991871791e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.469999999149991e-07, 8.340000006157311e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.750000004553726e-07, 8.469999999149991e-07, 8.19000000262804e-07]</msg>
<status status="PASS" starttime="20201029 12:42:48.264" endtime="20201029 12:42:48.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.260" endtime="20201029 12:42:48.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.874" endtime="20201029 12:42:48.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.873" endtime="20201029 12:42:48.268"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.276" endtime="20201029 12:42:48.288"></status>
</kw>
<msg timestamp="20201029 12:42:48.288" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:48.274" endtime="20201029 12:42:48.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.291" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:48.289" endtime="20201029 12:42:48.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.292" endtime="20201029 12:42:48.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.272" endtime="20201029 12:42:48.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.270" endtime="20201029 12:42:48.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.301" endtime="20201029 12:42:48.608"></status>
</kw>
<msg timestamp="20201029 12:42:48.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.410575278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.410576139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:48.300" endtime="20201029 12:42:48.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.410575278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.410576139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:48.613" endtime="20201029 12:42:48.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.623" endtime="20201029 12:42:48.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.296" endtime="20201029 12:42:48.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.295" endtime="20201029 12:42:48.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:48.630" level="INFO">${RESULT} = [{'diff': 8.610000001851859e-07}, {'diff': 8.060000000753575e-07}, {'diff': 8.059999991871791e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.200000003455443e-07}, {'diff': 8.469999999149991e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:48.626" endtime="20201029 12:42:48.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:48.636" level="INFO">${OVERHEAD} = {'diff': [8.610000001851859e-07, 8.060000000753575e-07, 8.059999991871791e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.469999999149991e-07, 8.340000006157311e-07, 8.339999997275527e-07, 8.3300...</msg>
<status status="PASS" starttime="20201029 12:42:48.631" endtime="20201029 12:42:48.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.640" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:48.639" endtime="20201029 12:42:48.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.642" level="INFO">VALUE: [8.610000001851859e-07, 8.060000000753575e-07, 8.059999991871791e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.469999999149991e-07, 8.340000006157311e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.750000004553726e-07, 8.469999999149991e-07, 8.19000000262804e-07, 1.2780000000489622e-06, 8.060000000753575e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.470000008031775e-07, 8.189999993746255e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.200000003455443e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.610000001851859e-07, 8.330000005329907e-07, 8.749999995671942e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.479999999977395e-07, 8.329999996448123e-07, 8.340000006157311e-07, 8.19000000262804e-07, 8.610000001851859e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.479999999977395e-07, 8.339999997275527e-07, 8.199999994573659e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.199999994573659e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.469999999149991e-07, 8.339999997275527e-07, 9.030000001075678e-07, 8.329999996448123e-07, 8.479999999977395e-07, 8.049999999926172e-07, 8.749999995671942e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.200000003455443e-07, 7.780000004231624e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.060000000753575e-07]</msg>
<status status="PASS" starttime="20201029 12:42:48.641" endtime="20201029 12:42:48.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.637" endtime="20201029 12:42:48.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.269" endtime="20201029 12:42:48.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.268" endtime="20201029 12:42:48.644"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.652" endtime="20201029 12:42:48.664"></status>
</kw>
<msg timestamp="20201029 12:42:48.665" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:48.650" endtime="20201029 12:42:48.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.667" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:48.666" endtime="20201029 12:42:48.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.668" endtime="20201029 12:42:48.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.648" endtime="20201029 12:42:48.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.646" endtime="20201029 12:42:48.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.678" endtime="20201029 12:42:48.991"></status>
</kw>
<msg timestamp="20201029 12:42:48.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.795055069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.795055903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:48.676" endtime="20201029 12:42:48.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.795055069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.795055903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:48.996" endtime="20201029 12:42:49.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.006" endtime="20201029 12:42:49.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.674" endtime="20201029 12:42:49.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.672" endtime="20201029 12:42:49.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:49.013" level="INFO">${RESULT} = [{'diff': 8.339999997275527e-07}, {'diff': 9.030000001075678e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.479999999977395e-07}, {'diff': 8.049999999926172e-07}, {'diff': 8.749999995671942e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:49.009" endtime="20201029 12:42:49.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:49.017" level="INFO">${OVERHEAD} = {'diff': [8.339999997275527e-07, 9.030000001075678e-07, 8.329999996448123e-07, 8.479999999977395e-07, 8.049999999926172e-07, 8.749999995671942e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.33000...</msg>
<status status="PASS" starttime="20201029 12:42:49.014" endtime="20201029 12:42:49.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.021" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:49.020" endtime="20201029 12:42:49.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.024" level="INFO">VALUE: [8.339999997275527e-07, 9.030000001075678e-07, 8.329999996448123e-07, 8.479999999977395e-07, 8.049999999926172e-07, 8.749999995671942e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.200000003455443e-07, 7.780000004231624e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.060000000753575e-07, 1.292000000319149e-06, 8.189999993746255e-07, 8.330000005329907e-07, 8.470000008031775e-07, 8.479999999977395e-07, 8.479999999977395e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.340000006157311e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.060000000753575e-07, 8.750000004553726e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.610000001851859e-07, 8.609999992970074e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.479999999977395e-07, 8.200000003455443e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.060000000753575e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.469999999149991e-07, 7.77999999534984e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.749999995671942e-07, 8.610000001851859e-07, 8.189999993746255e-07, 8.189999993746255e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.469999999149991e-07]</msg>
<status status="PASS" starttime="20201029 12:42:49.023" endtime="20201029 12:42:49.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.018" endtime="20201029 12:42:49.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.645" endtime="20201029 12:42:49.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.644" endtime="20201029 12:42:49.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.358" endtime="20201029 12:42:49.026"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:41.288" endtime="20201029 12:42:49.026" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:49.033" endtime="20201029 12:42:49.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.032" endtime="20201029 12:42:49.053"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.069" endtime="20201029 12:42:49.083"></status>
</kw>
<msg timestamp="20201029 12:42:49.083" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.067" endtime="20201029 12:42:49.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.086" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.084" endtime="20201029 12:42:49.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.089" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:49.087" endtime="20201029 12:42:49.089"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:49.065" endtime="20201029 12:42:49.090"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:49.062" endtime="20201029 12:42:49.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.061" endtime="20201029 12:42:49.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:49.094" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:49.093" endtime="20201029 12:42:49.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.091" endtime="20201029 12:42:49.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.060" endtime="20201029 12:42:49.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.060" endtime="20201029 12:42:49.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.096" endtime="20201029 12:42:49.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.055" endtime="20201029 12:42:49.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.054" endtime="20201029 12:42:49.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.030" endtime="20201029 12:42:49.099"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.107" endtime="20201029 12:42:49.125"></status>
</kw>
<msg timestamp="20201029 12:42:49.126" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.105" endtime="20201029 12:42:49.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.128" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.127" endtime="20201029 12:42:49.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.130" endtime="20201029 12:42:49.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.103" endtime="20201029 12:42:49.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.101" endtime="20201029 12:42:49.132"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.134" endtime="20201029 12:42:49.136"></status>
</kw>
<msg timestamp="20201029 12:42:49.136" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:42:49.133" endtime="20201029 12:42:49.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.141" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:42:49.140" endtime="20201029 12:42:49.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.144" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:42:49.142" endtime="20201029 12:42:49.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.137" endtime="20201029 12:42:49.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.149" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:42:49.148" endtime="20201029 12:42:49.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.151" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:42:49.150" endtime="20201029 12:42:49.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.146" endtime="20201029 12:42:49.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.159" endtime="20201029 12:42:49.449"></status>
</kw>
<msg timestamp="20201029 12:42:49.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065984875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065988792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:49.157" endtime="20201029 12:42:49.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065984875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065988792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:49.453" endtime="20201029 12:42:49.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.462" endtime="20201029 12:42:49.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.155" endtime="20201029 12:42:49.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.153" endtime="20201029 12:42:49.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:49.469" level="INFO">${RESULT} = [{'diff': 3.9170000000060545e-06}, {'diff': 2.901999999999072e-06}, {'diff': 2.7499999999958114e-06}, {'diff': 2.847000000000266e-06}, {'diff': 2.819000000001126e-06}, {'diff': 2.819000000001126e-06},...</msg>
<status status="PASS" starttime="20201029 12:42:49.466" endtime="20201029 12:42:49.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:49.473" level="INFO">${OVERHEAD} = {'diff': [3.9170000000060545e-06, 2.901999999999072e-06, 2.7499999999958114e-06, 2.847000000000266e-06, 2.819000000001126e-06, 2.819000000001126e-06, 2.8200000000006e-06, 2.833999999993231e-06, 2.8329...</msg>
<status status="PASS" starttime="20201029 12:42:49.470" endtime="20201029 12:42:49.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.479" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:42:49.478" endtime="20201029 12:42:49.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.482" level="INFO">VALUE: [3.9170000000060545e-06, 2.901999999999072e-06, 2.7499999999958114e-06, 2.847000000000266e-06, 2.819000000001126e-06, 2.819000000001126e-06, 2.8200000000006e-06, 2.833999999993231e-06, 2.832999999993757e-06, 2.7910000000019863e-06, 2.832999999993757e-06, 2.805999999994091e-06, 2.819000000001126e-06, 2.819000000001126e-06, 2.833000000007635e-06, 2.833000000007635e-06, 2.832999999993757e-06, 2.847000000000266e-06, 2.805999999994091e-06, 2.819999999986722e-06, 2.8049999999946174e-06, 2.8340000000071086e-06, 2.79200000000146e-06, 2.832999999993757e-06, 2.847000000000266e-06, 2.805999999994091e-06, 2.819000000001126e-06, 2.7770000000093553e-06, 2.8200000000006e-06, 2.819000000001126e-06, 2.8060000000079688e-06, 2.832999999993757e-06, 2.8200000000006e-06, 2.819000000001126e-06, 2.8200000000006e-06, 2.819000000001126e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.833999999993231e-06, 2.8340000000071086e-06, 2.833999999993231e-06, 2.847000000000266e-06, 2.832999999993757e-06, 2.833000000007635e-06, 2.8200000000006e-06, 2.819000000001126e-06, 2.847000000000266e-06, 2.819000000001126e-06, 2.8200000000006e-06, 2.8200000000006e-06]</msg>
<status status="PASS" starttime="20201029 12:42:49.480" endtime="20201029 12:42:49.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.474" endtime="20201029 12:42:49.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.099" endtime="20201029 12:42:49.483"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:49.028" endtime="20201029 12:42:49.483" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:49.490" endtime="20201029 12:42:49.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.489" endtime="20201029 12:42:49.510"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.523" endtime="20201029 12:42:49.537"></status>
</kw>
<msg timestamp="20201029 12:42:49.538" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.521" endtime="20201029 12:42:49.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.540" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.539" endtime="20201029 12:42:49.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.543" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:49.541" endtime="20201029 12:42:49.543"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:49.519" endtime="20201029 12:42:49.544"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:49.517" endtime="20201029 12:42:49.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.515" endtime="20201029 12:42:49.545"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:49.549" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:49.548" endtime="20201029 12:42:49.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.546" endtime="20201029 12:42:49.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.514" endtime="20201029 12:42:49.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.514" endtime="20201029 12:42:49.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.550" endtime="20201029 12:42:49.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.513" endtime="20201029 12:42:49.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.511" endtime="20201029 12:42:49.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.488" endtime="20201029 12:42:49.553"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.563" endtime="20201029 12:42:49.609"></status>
</kw>
<msg timestamp="20201029 12:42:49.610" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.560" endtime="20201029 12:42:49.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.612" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.611" endtime="20201029 12:42:49.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.613" endtime="20201029 12:42:49.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.557" endtime="20201029 12:42:49.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.555" endtime="20201029 12:42:49.616"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.618" endtime="20201029 12:42:49.620"></status>
</kw>
<msg timestamp="20201029 12:42:49.620" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:42:49.617" endtime="20201029 12:42:49.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.624" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:42:49.623" endtime="20201029 12:42:49.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.626" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:42:49.625" endtime="20201029 12:42:49.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.621" endtime="20201029 12:42:49.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.633" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:42:49.631" endtime="20201029 12:42:49.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.635" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:42:49.634" endtime="20201029 12:42:49.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.628" endtime="20201029 12:42:49.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.644" endtime="20201029 12:42:49.933"></status>
</kw>
<msg timestamp="20201029 12:42:49.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065243917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065263931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:49.642" endtime="20201029 12:42:49.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065243917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065263931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:49.939" endtime="20201029 12:42:49.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.950" endtime="20201029 12:42:49.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.638" endtime="20201029 12:42:49.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.636" endtime="20201029 12:42:49.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:49.961" level="INFO">${RESULT} = [{'diff': 2.0013999999998755e-05}, {'diff': 1.969500000000013e-05}, {'diff': 1.968099999999362e-05}, {'diff': 1.962500000000922e-05}, {'diff': 1.9679999999994147e-05}, {'diff': 1.9707999999993286e-05}...</msg>
<status status="PASS" starttime="20201029 12:42:49.956" endtime="20201029 12:42:49.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:49.966" level="INFO">${OVERHEAD} = {'diff': [2.0013999999998755e-05, 1.969500000000013e-05, 1.968099999999362e-05, 1.962500000000922e-05, 1.9679999999994147e-05, 1.9707999999993286e-05, 1.969500000000013e-05, 1.9694000000000655e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:42:49.962" endtime="20201029 12:42:49.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.970" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 12:42:49.969" endtime="20201029 12:42:49.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.973" level="INFO">VALUE: [2.0013999999998755e-05, 1.969500000000013e-05, 1.968099999999362e-05, 1.962500000000922e-05, 1.9679999999994147e-05, 1.9707999999993286e-05, 1.969500000000013e-05, 1.9694000000000655e-05, 1.9707999999993286e-05, 1.969500000000013e-05, 1.969500000000013e-05, 1.9694000000000655e-05, 1.9679999999994147e-05, 1.9694000000000655e-05, 1.972299999999927e-05, 1.9708000000007164e-05, 1.972299999999927e-05, 1.9694000000000655e-05, 1.9707999999993286e-05, 1.9708000000007164e-05, 1.969500000000013e-05, 1.9707999999993286e-05, 1.9694000000000655e-05, 1.9679999999994147e-05, 1.969500000000013e-05, 1.9694000000000655e-05, 1.969500000000013e-05, 1.969500000000013e-05, 1.9749999999998935e-05, 1.963900000000185e-05, 1.965299999999448e-05, 1.9694000000000655e-05, 1.9721999999999795e-05, 1.969500000000013e-05, 1.9680000000008024e-05, 1.9679999999994147e-05, 1.968099999999362e-05, 1.9665999999987638e-05, 1.9694000000000655e-05, 1.9680000000008024e-05, 1.9749999999998935e-05, 1.9709000000006638e-05, 1.9680000000008024e-05, 1.9709000000006638e-05, 1.969500000000013e-05, 1.9721999999999795e-05, 1.968099999999362e-05, 1.9736000000006304e-05, 1.969500000000013e-05, 1.966700000000099e-05]</msg>
<status status="PASS" starttime="20201029 12:42:49.971" endtime="20201029 12:42:49.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.966" endtime="20201029 12:42:49.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.554" endtime="20201029 12:42:49.974"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:49.485" endtime="20201029 12:42:49.975" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:49.982" endtime="20201029 12:42:50.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.980" endtime="20201029 12:42:50.002"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.014" endtime="20201029 12:42:50.029"></status>
</kw>
<msg timestamp="20201029 12:42:50.030" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.013" endtime="20201029 12:42:50.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.032" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.031" endtime="20201029 12:42:50.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.035" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:50.034" endtime="20201029 12:42:50.036"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:50.010" endtime="20201029 12:42:50.036"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:50.008" endtime="20201029 12:42:50.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.007" endtime="20201029 12:42:50.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:50.041" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:50.040" endtime="20201029 12:42:50.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.038" endtime="20201029 12:42:50.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.006" endtime="20201029 12:42:50.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.005" endtime="20201029 12:42:50.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.044" endtime="20201029 12:42:50.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.004" endtime="20201029 12:42:50.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.002" endtime="20201029 12:42:50.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.979" endtime="20201029 12:42:50.047"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.055" endtime="20201029 12:42:50.171"></status>
</kw>
<msg timestamp="20201029 12:42:50.172" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.053" endtime="20201029 12:42:50.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.174" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.173" endtime="20201029 12:42:50.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.175" endtime="20201029 12:42:50.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.051" endtime="20201029 12:42:50.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.049" endtime="20201029 12:42:50.178"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.180" endtime="20201029 12:42:50.182"></status>
</kw>
<msg timestamp="20201029 12:42:50.182" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:42:50.179" endtime="20201029 12:42:50.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.186" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:42:50.185" endtime="20201029 12:42:50.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.188" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:42:50.187" endtime="20201029 12:42:50.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.183" endtime="20201029 12:42:50.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.193" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:42:50.192" endtime="20201029 12:42:50.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.195" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:42:50.194" endtime="20201029 12:42:50.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.190" endtime="20201029 12:42:50.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.203" endtime="20201029 12:42:50.497"></status>
</kw>
<msg timestamp="20201029 12:42:50.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066737792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066775389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:50.202" endtime="20201029 12:42:50.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066737792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066775389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:50.501" endtime="20201029 12:42:50.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.509" endtime="20201029 12:42:50.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.198" endtime="20201029 12:42:50.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.196" endtime="20201029 12:42:50.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:50.516" level="INFO">${RESULT} = [{'diff': 3.7597000000000325e-05}, {'diff': 3.716700000000461e-05}, {'diff': 3.715300000001198e-05}, {'diff': 3.7180999999997244e-05}, {'diff': 3.722200000000342e-05}, {'diff': 3.7152999999998104e-05}...</msg>
<status status="PASS" starttime="20201029 12:42:50.512" endtime="20201029 12:42:50.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:50.521" level="INFO">${OVERHEAD} = {'diff': [3.7597000000000325e-05, 3.716700000000461e-05, 3.715300000001198e-05, 3.7180999999997244e-05, 3.722200000000342e-05, 3.7152999999998104e-05, 3.716700000000461e-05, 3.7152999999998104e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:42:50.518" endtime="20201029 12:42:50.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.525" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 12:42:50.524" endtime="20201029 12:42:50.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.528" level="INFO">VALUE: [3.7597000000000325e-05, 3.716700000000461e-05, 3.715300000001198e-05, 3.7180999999997244e-05, 3.722200000000342e-05, 3.7152999999998104e-05, 3.716700000000461e-05, 3.7152999999998104e-05, 3.7166999999990735e-05, 3.720800000001079e-05, 3.716600000000514e-05, 3.715199999999863e-05, 3.713900000000547e-05, 3.716599999999126e-05, 3.716599999999126e-05, 3.7180999999997244e-05, 3.7152999999998104e-05, 3.7166999999990735e-05, 3.7166999999990735e-05, 3.717999999999777e-05, 3.713900000000547e-05, 3.716599999999126e-05, 3.7152999999998104e-05, 3.715199999999863e-05, 3.715199999999863e-05, 3.715199999999863e-05, 3.713900000000547e-05, 3.720900000001026e-05, 3.7138999999991595e-05, 3.717999999999777e-05, 3.7138999999991595e-05, 3.716700000000461e-05, 3.715200000001251e-05, 3.715199999998475e-05, 3.716600000000514e-05, 3.715300000001198e-05, 3.7152999999984226e-05, 3.716600000000514e-05, 3.7236000000023806e-05, 3.716700000000461e-05, 3.713900000001935e-05, 3.715300000001198e-05, 3.7152999999984226e-05, 3.7138999999991595e-05, 3.716700000000461e-05, 3.7180999999997244e-05, 3.716600000000514e-05, 3.717999999999777e-05, 3.713799999999212e-05, 3.717999999999777e-05]</msg>
<status status="PASS" starttime="20201029 12:42:50.526" endtime="20201029 12:42:50.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.522" endtime="20201029 12:42:50.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.047" endtime="20201029 12:42:50.529"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:49.976" endtime="20201029 12:42:50.530" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:50.537" endtime="20201029 12:42:50.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.535" endtime="20201029 12:42:50.558"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.578" endtime="20201029 12:42:50.592"></status>
</kw>
<msg timestamp="20201029 12:42:50.593" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.577" endtime="20201029 12:42:50.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.596" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.594" endtime="20201029 12:42:50.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.599" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:50.597" endtime="20201029 12:42:50.599"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:50.572" endtime="20201029 12:42:50.600"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:50.568" endtime="20201029 12:42:50.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.566" endtime="20201029 12:42:50.601"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:50.604" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:50.604" endtime="20201029 12:42:50.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.602" endtime="20201029 12:42:50.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.564" endtime="20201029 12:42:50.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.563" endtime="20201029 12:42:50.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.606" endtime="20201029 12:42:50.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.561" endtime="20201029 12:42:50.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.558" endtime="20201029 12:42:50.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.534" endtime="20201029 12:42:50.609"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.617" endtime="20201029 12:42:50.636"></status>
</kw>
<msg timestamp="20201029 12:42:50.637" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.616" endtime="20201029 12:42:50.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.639" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.638" endtime="20201029 12:42:50.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.640" endtime="20201029 12:42:50.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.613" endtime="20201029 12:42:50.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.611" endtime="20201029 12:42:50.643"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.645" endtime="20201029 12:42:50.646"></status>
</kw>
<msg timestamp="20201029 12:42:50.647" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:42:50.644" endtime="20201029 12:42:50.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.651" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:42:50.650" endtime="20201029 12:42:50.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.653" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:42:50.652" endtime="20201029 12:42:50.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.648" endtime="20201029 12:42:50.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.658" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:42:50.657" endtime="20201029 12:42:50.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.660" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:42:50.659" endtime="20201029 12:42:50.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.654" endtime="20201029 12:42:50.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.669" endtime="20201029 12:42:50.958"></status>
</kw>
<msg timestamp="20201029 12:42:50.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073485792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073486917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:50.667" endtime="20201029 12:42:50.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073485792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073486917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:50.962" endtime="20201029 12:42:50.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.970" endtime="20201029 12:42:50.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.663" endtime="20201029 12:42:50.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.661" endtime="20201029 12:42:50.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:50.977" level="INFO">${RESULT} = [{'diff': 1.1250000000045945e-06}, {'diff': 9.309999999956853e-07}, {'diff': 9.170000000030543e-07}, {'diff': 9.299999999962116e-07}, {'diff': 9.170000000030543e-07}, {'diff': 9.440000000027204e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:42:50.974" endtime="20201029 12:42:50.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:50.981" level="INFO">${OVERHEAD} = {'diff': [1.1250000000045945e-06, 9.309999999956853e-07, 9.170000000030543e-07, 9.299999999962116e-07, 9.170000000030543e-07, 9.440000000027204e-07, 9.309999999956853e-07, 9.299999999962116e-07, 8.749...</msg>
<status status="PASS" starttime="20201029 12:42:50.978" endtime="20201029 12:42:50.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.986" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 12:42:50.985" endtime="20201029 12:42:50.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.988" level="INFO">VALUE: [1.1250000000045945e-06, 9.309999999956853e-07, 9.170000000030543e-07, 9.299999999962116e-07, 9.170000000030543e-07, 9.440000000027204e-07, 9.309999999956853e-07, 9.299999999962116e-07, 8.749999999974056e-07, 9.169999999891765e-07, 9.580000000092292e-07, 9.169999999891765e-07, 9.449999999883163e-07, 9.309999999956853e-07, 9.299999999962116e-07, 9.440000000027204e-07, 9.309999999956853e-07, 9.440000000027204e-07, 9.170000000030543e-07, 9.450000000021941e-07, 9.299999999962116e-07, 9.580000000092292e-07, 9.309999999956853e-07, 9.170000000030543e-07, 9.309999999956853e-07, 9.450000000021941e-07, 9.299999999962116e-07, 9.309999999956853e-07, 8.749999999974056e-07, 9.309999999956853e-07, 9.450000000021941e-07, 9.299999999962116e-07, 9.440000000027204e-07, 9.440000000027204e-07, 9.299999999962116e-07, 9.299999999962116e-07, 9.439999999888427e-07, 9.580000000092292e-07, 9.310000000095631e-07, 9.300000000100894e-07, 9.159999999897028e-07, 9.58999999994825e-07, 9.309999999956853e-07, 9.310000000095631e-07, 9.300000000100894e-07, 9.310000000095631e-07, 9.020000000109496e-07, 9.170000000030543e-07, 9.439999999888427e-07, 9.310000000095631e-07]</msg>
<status status="PASS" starttime="20201029 12:42:50.987" endtime="20201029 12:42:50.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.982" endtime="20201029 12:42:50.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.610" endtime="20201029 12:42:50.990"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:50.531" endtime="20201029 12:42:50.990" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:50.997" endtime="20201029 12:42:51.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.995" endtime="20201029 12:42:51.017"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.031" endtime="20201029 12:42:51.044"></status>
</kw>
<msg timestamp="20201029 12:42:51.045" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.029" endtime="20201029 12:42:51.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.048" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.046" endtime="20201029 12:42:51.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.051" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:51.049" endtime="20201029 12:42:51.051"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:51.027" endtime="20201029 12:42:51.052"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:51.024" endtime="20201029 12:42:51.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.023" endtime="20201029 12:42:51.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:51.056" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:51.056" endtime="20201029 12:42:51.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.054" endtime="20201029 12:42:51.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.022" endtime="20201029 12:42:51.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.022" endtime="20201029 12:42:51.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.058" endtime="20201029 12:42:51.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.020" endtime="20201029 12:42:51.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.018" endtime="20201029 12:42:51.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.994" endtime="20201029 12:42:51.061"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.069" endtime="20201029 12:42:51.117"></status>
</kw>
<msg timestamp="20201029 12:42:51.117" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.068" endtime="20201029 12:42:51.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.120" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.118" endtime="20201029 12:42:51.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.121" endtime="20201029 12:42:51.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.065" endtime="20201029 12:42:51.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.063" endtime="20201029 12:42:51.123"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.125" endtime="20201029 12:42:51.128"></status>
</kw>
<msg timestamp="20201029 12:42:51.129" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:42:51.124" endtime="20201029 12:42:51.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.133" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:42:51.132" endtime="20201029 12:42:51.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.135" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:42:51.134" endtime="20201029 12:42:51.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.129" endtime="20201029 12:42:51.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.140" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:42:51.139" endtime="20201029 12:42:51.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.142" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:42:51.141" endtime="20201029 12:42:51.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.136" endtime="20201029 12:42:51.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.150" endtime="20201029 12:42:51.437"></status>
</kw>
<msg timestamp="20201029 12:42:51.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065590486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065599014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:51.148" endtime="20201029 12:42:51.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065590486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065599014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:51.441" endtime="20201029 12:42:51.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.450" endtime="20201029 12:42:51.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.145" endtime="20201029 12:42:51.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.143" endtime="20201029 12:42:51.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:51.458" level="INFO">${RESULT} = [{'diff': 8.527999999993763e-06}, {'diff': 8.403000000004046e-06}, {'diff': 8.403000000004046e-06}, {'diff': 8.416999999996677e-06}, {'diff': 8.375000000004906e-06}, {'diff': 8.402999999990168e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:42:51.454" endtime="20201029 12:42:51.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:51.464" level="INFO">${OVERHEAD} = {'diff': [8.527999999993763e-06, 8.403000000004046e-06, 8.403000000004046e-06, 8.416999999996677e-06, 8.375000000004906e-06, 8.402999999990168e-06, 8.403000000004046e-06, 8.403000000004046e-06, 8.4020...</msg>
<status status="PASS" starttime="20201029 12:42:51.460" endtime="20201029 12:42:51.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.470" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 12:42:51.469" endtime="20201029 12:42:51.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.473" level="INFO">VALUE: [8.527999999993763e-06, 8.403000000004046e-06, 8.403000000004046e-06, 8.416999999996677e-06, 8.375000000004906e-06, 8.402999999990168e-06, 8.403000000004046e-06, 8.403000000004046e-06, 8.402000000004572e-06, 8.388999999997537e-06, 8.403000000004046e-06, 8.416999999996677e-06, 8.375000000004906e-06, 8.416999999996677e-06, 8.403000000004046e-06, 8.403000000004046e-06, 8.444999999995817e-06, 8.403000000004046e-06, 8.403000000004046e-06, 8.402999999990168e-06, 8.388999999997537e-06, 8.361999999997871e-06, 8.347000000005766e-06, 8.416000000011081e-06, 8.417000000010555e-06, 8.375000000004906e-06, 8.375000000004906e-06, 8.443999999996343e-06, 8.403000000004046e-06, 8.402000000004572e-06, 8.403000000004046e-06, 8.388999999997537e-06, 8.403000000004046e-06, 8.403000000004046e-06, 8.416999999996677e-06, 8.415999999997203e-06, 8.443999999996343e-06, 8.388999999997537e-06, 8.360999999998397e-06, 8.416999999996677e-06, 8.403000000004046e-06, 8.388999999997537e-06, 8.403000000004046e-06, 8.416999999996677e-06, 8.403000000004046e-06, 8.388999999997537e-06, 8.444000000010221e-06, 8.403000000004046e-06, 8.388999999997537e-06, 8.402999999990168e-06]</msg>
<status status="PASS" starttime="20201029 12:42:51.472" endtime="20201029 12:42:51.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.465" endtime="20201029 12:42:51.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.062" endtime="20201029 12:42:51.475"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:50.992" endtime="20201029 12:42:51.476" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:51.484" endtime="20201029 12:42:51.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.482" endtime="20201029 12:42:51.504"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.517" endtime="20201029 12:42:51.530"></status>
</kw>
<msg timestamp="20201029 12:42:51.531" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.515" endtime="20201029 12:42:51.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.534" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.532" endtime="20201029 12:42:51.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.537" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:51.535" endtime="20201029 12:42:51.537"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:51.513" endtime="20201029 12:42:51.538"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:51.510" endtime="20201029 12:42:51.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.509" endtime="20201029 12:42:51.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:51.543" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:51.542" endtime="20201029 12:42:51.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.540" endtime="20201029 12:42:51.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.508" endtime="20201029 12:42:51.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.507" endtime="20201029 12:42:51.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.544" endtime="20201029 12:42:51.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.506" endtime="20201029 12:42:51.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.504" endtime="20201029 12:42:51.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.481" endtime="20201029 12:42:51.547"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.559" endtime="20201029 12:42:51.678"></status>
</kw>
<msg timestamp="20201029 12:42:51.679" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.557" endtime="20201029 12:42:51.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.681" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.680" endtime="20201029 12:42:51.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.682" endtime="20201029 12:42:51.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.554" endtime="20201029 12:42:51.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.549" endtime="20201029 12:42:51.685"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.687" endtime="20201029 12:42:51.689"></status>
</kw>
<msg timestamp="20201029 12:42:51.689" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:42:51.686" endtime="20201029 12:42:51.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.693" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:42:51.692" endtime="20201029 12:42:51.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.695" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:42:51.694" endtime="20201029 12:42:51.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.690" endtime="20201029 12:42:51.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.701" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:42:51.699" endtime="20201029 12:42:51.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.703" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:42:51.702" endtime="20201029 12:42:51.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.697" endtime="20201029 12:42:51.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.711" endtime="20201029 12:42:52.005"></status>
</kw>
<msg timestamp="20201029 12:42:52.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069336292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069352042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:51.709" endtime="20201029 12:42:52.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069336292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069352042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:52.009" endtime="20201029 12:42:52.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.017" endtime="20201029 12:42:52.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.706" endtime="20201029 12:42:52.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.704" endtime="20201029 12:42:52.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:52.023" level="INFO">${RESULT} = [{'diff': 1.5750000000008813e-05}, {'diff': 1.558299999999957e-05}, {'diff': 1.556900000000694e-05}, {'diff': 1.558299999999957e-05}, {'diff': 1.558400000001292e-05}, {'diff': 1.5583999999999043e-05},...</msg>
<status status="PASS" starttime="20201029 12:42:52.020" endtime="20201029 12:42:52.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:52.028" level="INFO">${OVERHEAD} = {'diff': [1.5750000000008813e-05, 1.558299999999957e-05, 1.556900000000694e-05, 1.558299999999957e-05, 1.558400000001292e-05, 1.5583999999999043e-05, 1.556900000000694e-05, 1.556900000000694e-05, 1.55...</msg>
<status status="PASS" starttime="20201029 12:42:52.024" endtime="20201029 12:42:52.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.033" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 12:42:52.032" endtime="20201029 12:42:52.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.035" level="INFO">VALUE: [1.5750000000008813e-05, 1.558299999999957e-05, 1.556900000000694e-05, 1.558299999999957e-05, 1.558400000001292e-05, 1.5583999999999043e-05, 1.556900000000694e-05, 1.556900000000694e-05, 1.5583000000013447e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.555500000000043e-05, 1.5528000000000763e-05, 1.5583999999999043e-05, 1.558299999999957e-05, 1.5569999999992534e-05, 1.558299999999957e-05, 1.5555999999999903e-05, 1.5653000000004358e-05, 1.5570000000006412e-05, 1.558299999999957e-05, 1.555500000000043e-05, 1.5570000000006412e-05, 1.5597000000006078e-05, 1.556900000000694e-05, 1.558299999999957e-05, 1.5570000000006412e-05, 1.5570000000006412e-05, 1.5583999999985165e-05, 1.5597000000006078e-05, 1.5569999999992534e-05, 1.5569999999992534e-05, 1.556899999999306e-05, 1.558400000001292e-05, 1.5597000000006078e-05, 1.5583999999985165e-05, 1.558299999998569e-05, 1.561099999999871e-05, 1.5541999999979517e-05, 1.5583000000013447e-05, 1.5569999999992534e-05, 1.5597000000006078e-05, 1.5527999999986886e-05, 1.558299999998569e-05, 1.558400000001292e-05, 1.55410000000078e-05, 1.558299999998569e-05, 1.561099999999871e-05, 1.5597000000006078e-05, 1.5596999999978323e-05]</msg>
<status status="PASS" starttime="20201029 12:42:52.034" endtime="20201029 12:42:52.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.029" endtime="20201029 12:42:52.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.548" endtime="20201029 12:42:52.037"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:51.478" endtime="20201029 12:42:52.037" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:52.044" endtime="20201029 12:42:52.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.042" endtime="20201029 12:42:52.064"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.077" endtime="20201029 12:42:52.091"></status>
</kw>
<msg timestamp="20201029 12:42:52.091" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:52.075" endtime="20201029 12:42:52.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.093" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:52.092" endtime="20201029 12:42:52.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.098" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:52.095" endtime="20201029 12:42:52.098"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:52.073" endtime="20201029 12:42:52.099"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:52.070" endtime="20201029 12:42:52.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.069" endtime="20201029 12:42:52.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:52.105" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:52.104" endtime="20201029 12:42:52.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.101" endtime="20201029 12:42:52.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.068" endtime="20201029 12:42:52.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.068" endtime="20201029 12:42:52.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.107" endtime="20201029 12:42:52.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.066" endtime="20201029 12:42:52.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.064" endtime="20201029 12:42:52.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.041" endtime="20201029 12:42:52.111"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.116" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:42:52.125" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:42:53.480" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:42:52.114" endtime="20201029 12:42:53.481"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.484" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:42:53.482" endtime="20201029 12:42:53.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.112" endtime="20201029 12:42:53.485"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:53.488" endtime="20201029 12:42:53.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.486" endtime="20201029 12:42:53.508"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.516" endtime="20201029 12:42:53.524"></status>
</kw>
<msg timestamp="20201029 12:42:53.524" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.515" endtime="20201029 12:42:53.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.527" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.525" endtime="20201029 12:42:53.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.528" endtime="20201029 12:42:53.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.512" endtime="20201029 12:42:53.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.510" endtime="20201029 12:42:53.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.537" endtime="20201029 12:42:53.828"></status>
</kw>
<msg timestamp="20201029 12:42:53.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017927875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017931889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:53.536" endtime="20201029 12:42:53.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017927875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017931889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:53.832" endtime="20201029 12:42:53.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.841" endtime="20201029 12:42:53.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.533" endtime="20201029 12:42:53.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.531" endtime="20201029 12:42:53.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:53.848" level="INFO">${PHILIP_RES} = [{'diff': 4.014000000000101e-06}, {'diff': 2.7229999999996146e-06}, {'diff': 2.7500000000027502e-06}, {'diff': 2.762999999999377e-06}, {'diff': 2.7500000000027502e-06}, {'diff': 2.735999999999711e-06}...</msg>
<status status="PASS" starttime="20201029 12:42:53.844" endtime="20201029 12:42:53.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:53.859" level="INFO">${RESULT} = {'diff': [4.014000000000101e-06, 2.7229999999996146e-06, 2.7500000000027502e-06, 2.762999999999377e-06, 2.7500000000027502e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2....</msg>
<status status="PASS" starttime="20201029 12:42:53.850" endtime="20201029 12:42:53.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.868" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:53.866" endtime="20201029 12:42:53.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.874" level="INFO">VALUE: [4.014000000000101e-06, 2.7229999999996146e-06, 2.7500000000027502e-06, 2.762999999999377e-06, 2.7500000000027502e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.737000000002654e-06, 2.749999999999281e-06, 2.76400000000232e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7500000000027502e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.708000000000571e-06, 2.7360000000031803e-06, 2.8050000000015562e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.7360000000031803e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7360000000031803e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.749999999999281e-06, 2.735999999999711e-06]</msg>
<status status="PASS" starttime="20201029 12:42:53.871" endtime="20201029 12:42:53.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.861" endtime="20201029 12:42:53.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.509" endtime="20201029 12:42:53.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.486" endtime="20201029 12:42:53.877"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:53.882" endtime="20201029 12:42:53.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.879" endtime="20201029 12:42:53.905"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.922" endtime="20201029 12:42:53.932"></status>
</kw>
<msg timestamp="20201029 12:42:53.933" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.918" endtime="20201029 12:42:53.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.938" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.935" endtime="20201029 12:42:53.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.941" endtime="20201029 12:42:53.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.913" endtime="20201029 12:42:53.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.909" endtime="20201029 12:42:53.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.954" endtime="20201029 12:42:54.241"></status>
</kw>
<msg timestamp="20201029 12:42:54.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029805111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029811986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:53.953" endtime="20201029 12:42:54.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029805111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029811986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:54.247" endtime="20201029 12:42:54.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.256" endtime="20201029 12:42:54.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.950" endtime="20201029 12:42:54.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.948" endtime="20201029 12:42:54.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:54.266" level="INFO">${PHILIP_RES} = [{'diff': 6.874999999999937e-06}, {'diff': 5.444000000000282e-06}, {'diff': 5.444999999999756e-06}, {'diff': 5.471999999999422e-06}, {'diff': 5.457999999999852e-06}, {'diff': 5.485999999998992e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:42:54.261" endtime="20201029 12:42:54.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:54.271" level="INFO">${RESULT} = {'diff': [6.874999999999937e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.431000000000186e-06, 5.4729...</msg>
<status status="PASS" starttime="20201029 12:42:54.268" endtime="20201029 12:42:54.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.276" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:54.275" endtime="20201029 12:42:54.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.280" level="INFO">VALUE: [6.874999999999937e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.431000000000186e-06, 5.472999999998895e-06, 5.472000000002891e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.458000000003321e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.556000000000311e-06, 5.4589999999993255e-06, 5.473000000002365e-06, 5.499999999998562e-06, 5.471999999999422e-06, 5.486000000002461e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.445000000003225e-06, 5.4589999999993255e-06, 5.499999999998562e-06, 5.528000000001171e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.542000000000741e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.499999999998562e-06, 5.527999999997701e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.472999999998895e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.486000000002461e-06]</msg>
<status status="PASS" starttime="20201029 12:42:54.277" endtime="20201029 12:42:54.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.273" endtime="20201029 12:42:54.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.906" endtime="20201029 12:42:54.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.878" endtime="20201029 12:42:54.282"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:54.285" endtime="20201029 12:42:54.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.284" endtime="20201029 12:42:54.305"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.314" endtime="20201029 12:42:54.323"></status>
</kw>
<msg timestamp="20201029 12:42:54.323" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.312" endtime="20201029 12:42:54.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.325" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.324" endtime="20201029 12:42:54.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.326" endtime="20201029 12:42:54.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.309" endtime="20201029 12:42:54.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.308" endtime="20201029 12:42:54.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.336" endtime="20201029 12:42:54.624"></status>
</kw>
<msg timestamp="20201029 12:42:54.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018522597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018532625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:54.334" endtime="20201029 12:42:54.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018522597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018532625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:54.629" endtime="20201029 12:42:54.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.637" endtime="20201029 12:42:54.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.332" endtime="20201029 12:42:54.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.330" endtime="20201029 12:42:54.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:54.644" level="INFO">${PHILIP_RES} = [{'diff': 1.0028000000002202e-05}, {'diff': 8.888000000002033e-06}, {'diff': 8.888999999998037e-06}, {'diff': 8.874999999998467e-06}, {'diff': 8.917000000000647e-06}, {'diff': 8.888999999998037e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:42:54.641" endtime="20201029 12:42:54.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:54.648" level="INFO">${RESULT} = {'diff': [1.0028000000002202e-05, 8.888000000002033e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.917000000000647e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.861...</msg>
<status status="PASS" starttime="20201029 12:42:54.645" endtime="20201029 12:42:54.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.653" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:54.652" endtime="20201029 12:42:54.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.656" level="INFO">VALUE: [1.0028000000002202e-05, 8.888000000002033e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.917000000000647e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.861000000002367e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.832999999999758e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.944000000000313e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.903000000001077e-06, 8.957999999999883e-06, 8.888999999998037e-06, 8.819000000000188e-06, 8.875000000001937e-06, 8.875000000001937e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.875000000001937e-06, 8.957999999999883e-06, 8.888999999998037e-06, 8.875000000001937e-06, 8.902000000001603e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.902000000001603e-06, 8.861000000002367e-06, 8.875000000001937e-06, 8.874999999998467e-06, 8.819999999999661e-06, 8.875000000001937e-06, 8.874999999998467e-06, 8.888999999998037e-06, 8.944999999999786e-06]</msg>
<status status="PASS" starttime="20201029 12:42:54.655" endtime="20201029 12:42:54.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.649" endtime="20201029 12:42:54.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.306" endtime="20201029 12:42:54.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.283" endtime="20201029 12:42:54.658"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:54.660" endtime="20201029 12:42:54.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.659" endtime="20201029 12:42:54.680"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.688" endtime="20201029 12:42:54.696"></status>
</kw>
<msg timestamp="20201029 12:42:54.696" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.686" endtime="20201029 12:42:54.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.699" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.697" endtime="20201029 12:42:54.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.700" endtime="20201029 12:42:54.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.684" endtime="20201029 12:42:54.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.682" endtime="20201029 12:42:54.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.709" endtime="20201029 12:42:54.996"></status>
</kw>
<msg timestamp="20201029 12:42:54.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017698097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017711639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:54.707" endtime="20201029 12:42:55.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017698097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017711639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.001" endtime="20201029 12:42:55.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.009" endtime="20201029 12:42:55.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.705" endtime="20201029 12:42:55.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.703" endtime="20201029 12:42:55.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:55.016" level="INFO">${PHILIP_RES} = [{'diff': 1.3542000000001803e-05}, {'diff': 1.2403000000001108e-05}, {'diff': 1.2417000000000677e-05}, {'diff': 1.2415999999997734e-05}, {'diff': 1.2403000000001108e-05}, {'diff': 1.2416000000001204e-...</msg>
<status status="PASS" starttime="20201029 12:42:55.013" endtime="20201029 12:42:55.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:55.021" level="INFO">${RESULT} = {'diff': [1.3542000000001803e-05, 1.2403000000001108e-05, 1.2417000000000677e-05, 1.2415999999997734e-05, 1.2403000000001108e-05, 1.2416000000001204e-05, 1.2431000000000247e-05, 1.2417000000000677e-05...</msg>
<status status="PASS" starttime="20201029 12:42:55.017" endtime="20201029 12:42:55.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.025" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:55.024" endtime="20201029 12:42:55.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.028" level="INFO">VALUE: [1.3542000000001803e-05, 1.2403000000001108e-05, 1.2417000000000677e-05, 1.2415999999997734e-05, 1.2403000000001108e-05, 1.2416000000001204e-05, 1.2431000000000247e-05, 1.2417000000000677e-05, 1.2416000000001204e-05, 1.2431000000000247e-05, 1.2431000000000247e-05, 1.2402000000001634e-05, 1.2431000000000247e-05, 1.2431000000000247e-05, 1.2416000000001204e-05, 1.2402999999997638e-05, 1.2417000000000677e-05, 1.2402000000001634e-05, 1.2403000000001108e-05, 1.2416999999997208e-05, 1.2402000000001634e-05, 1.2485999999999053e-05, 1.2416999999997208e-05, 1.2416000000001204e-05, 1.2431000000000247e-05, 1.2430999999996778e-05, 1.2416000000001204e-05, 1.2403000000001108e-05, 1.2417000000000677e-05, 1.2444000000000344e-05, 1.2417000000000677e-05, 1.2429999999997304e-05, 1.2430000000000774e-05, 1.2431000000000247e-05, 1.2416000000001204e-05, 1.2402999999997638e-05, 1.2417000000000677e-05, 1.2430000000000774e-05, 1.2388999999998068e-05, 1.2431000000000247e-05, 1.2457999999999914e-05, 1.2431000000000247e-05, 1.2403000000001108e-05, 1.2416000000001204e-05, 1.2417000000000677e-05, 1.2417000000000677e-05, 1.2403000000001108e-05, 1.2416999999997208e-05, 1.2403000000001108e-05, 1.2402000000001634e-05]</msg>
<status status="PASS" starttime="20201029 12:42:55.026" endtime="20201029 12:42:55.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.022" endtime="20201029 12:42:55.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.681" endtime="20201029 12:42:55.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.658" endtime="20201029 12:42:55.029"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:55.032" endtime="20201029 12:42:55.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.030" endtime="20201029 12:42:55.051"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.059" endtime="20201029 12:42:55.068"></status>
</kw>
<msg timestamp="20201029 12:42:55.068" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.058" endtime="20201029 12:42:55.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.071" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.069" endtime="20201029 12:42:55.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.072" endtime="20201029 12:42:55.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.055" endtime="20201029 12:42:55.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.053" endtime="20201029 12:42:55.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.081" endtime="20201029 12:42:55.366"></status>
</kw>
<msg timestamp="20201029 12:42:55.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017420458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017437917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.079" endtime="20201029 12:42:55.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017420458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017437917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.377" endtime="20201029 12:42:55.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.386" endtime="20201029 12:42:55.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.077" endtime="20201029 12:42:55.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.075" endtime="20201029 12:42:55.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:55.394" level="INFO">${PHILIP_RES} = [{'diff': 1.7459000000000918e-05}, {'diff': 1.629099999999814e-05}, {'diff': 1.6292000000001083e-05}, {'diff': 1.6320000000000223e-05}, {'diff': 1.627699999999857e-05}, {'diff': 1.6278000000001513e-05...</msg>
<status status="PASS" starttime="20201029 12:42:55.390" endtime="20201029 12:42:55.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:55.398" level="INFO">${RESULT} = {'diff': [1.7459000000000918e-05, 1.629099999999814e-05, 1.6292000000001083e-05, 1.6320000000000223e-05, 1.627699999999857e-05, 1.6278000000001513e-05, 1.6291999999997614e-05, 1.629099999999814e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:42:55.395" endtime="20201029 12:42:55.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.402" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:55.401" endtime="20201029 12:42:55.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.405" level="INFO">VALUE: [1.7459000000000918e-05, 1.629099999999814e-05, 1.6292000000001083e-05, 1.6320000000000223e-05, 1.627699999999857e-05, 1.6278000000001513e-05, 1.6291999999997614e-05, 1.629099999999814e-05, 1.6292000000001083e-05, 1.6291999999997614e-05, 1.6305999999997184e-05, 1.6292000000001083e-05, 1.6292000000001083e-05, 1.6278000000001513e-05, 1.6278000000001513e-05, 1.633300000000032e-05, 1.6291999999997614e-05, 1.630500000000118e-05, 1.6306000000000653e-05, 1.6306000000000653e-05, 1.629100000000161e-05, 1.6306000000000653e-05, 1.6291999999997614e-05, 1.633300000000032e-05, 1.6306000000000653e-05, 1.6291999999997614e-05, 1.631900000000075e-05, 1.6278000000001513e-05, 1.6277999999998044e-05, 1.627700000000204e-05, 1.6292000000001083e-05, 1.6306000000000653e-05, 1.629100000000161e-05, 1.6292000000001083e-05, 1.6291999999997614e-05, 1.629100000000161e-05, 1.6278000000001513e-05, 1.6291999999997614e-05, 1.629100000000161e-05, 1.6292000000001083e-05, 1.6277999999998044e-05, 1.6278000000001513e-05, 1.629100000000161e-05, 1.6291999999997614e-05, 1.6306000000000653e-05, 1.629100000000161e-05, 1.6292000000001083e-05, 1.6306000000000653e-05, 1.634699999999989e-05, 1.6277999999998044e-05]</msg>
<status status="PASS" starttime="20201029 12:42:55.403" endtime="20201029 12:42:55.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.399" endtime="20201029 12:42:55.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.052" endtime="20201029 12:42:55.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.030" endtime="20201029 12:42:55.406"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:55.409" endtime="20201029 12:42:55.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.407" endtime="20201029 12:42:55.429"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.437" endtime="20201029 12:42:55.445"></status>
</kw>
<msg timestamp="20201029 12:42:55.445" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.435" endtime="20201029 12:42:55.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.448" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.446" endtime="20201029 12:42:55.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.449" endtime="20201029 12:42:55.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.432" endtime="20201029 12:42:55.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.431" endtime="20201029 12:42:55.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.459" endtime="20201029 12:42:55.744"></status>
</kw>
<msg timestamp="20201029 12:42:55.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017434083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017455736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.457" endtime="20201029 12:42:55.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017434083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017455736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.749" endtime="20201029 12:42:55.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.758" endtime="20201029 12:42:55.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.455" endtime="20201029 12:42:55.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.453" endtime="20201029 12:42:55.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:55.766" level="INFO">${PHILIP_RES} = [{'diff': 2.165299999999995e-05}, {'diff': 2.0486000000000115e-05}, {'diff': 2.052699999999935e-05}, {'diff': 2.0472000000000545e-05}, {'diff': 2.0486000000000115e-05}, {'diff': 2.0513999999999255e-05...</msg>
<status status="PASS" starttime="20201029 12:42:55.762" endtime="20201029 12:42:55.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:55.770" level="INFO">${RESULT} = {'diff': [2.165299999999995e-05, 2.0486000000000115e-05, 2.052699999999935e-05, 2.0472000000000545e-05, 2.0486000000000115e-05, 2.0513999999999255e-05, 2.0513999999999255e-05, 2.052699999999935e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:42:55.767" endtime="20201029 12:42:55.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.774" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:55.773" endtime="20201029 12:42:55.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.777" level="INFO">VALUE: [2.165299999999995e-05, 2.0486000000000115e-05, 2.052699999999935e-05, 2.0472000000000545e-05, 2.0486000000000115e-05, 2.0513999999999255e-05, 2.0513999999999255e-05, 2.052699999999935e-05, 2.051299999999978e-05, 2.0471999999997076e-05, 2.0513999999999255e-05, 2.0527999999998825e-05, 2.0486000000000115e-05, 2.0513999999999255e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.0486000000000115e-05, 2.0513999999999255e-05, 2.0527999999998825e-05, 2.051299999999978e-05, 2.052700000000282e-05, 2.0513999999999255e-05, 2.0513999999999255e-05, 2.0486000000000115e-05, 2.0513999999999255e-05, 2.052700000000282e-05, 2.0527999999998825e-05, 2.0513999999999255e-05, 2.0542000000001864e-05, 2.0486000000000115e-05, 2.0499999999999685e-05, 2.0486000000000115e-05, 2.0513999999999255e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.0513999999999255e-05, 2.0500000000003155e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.0486000000000115e-05, 2.0513999999999255e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.051299999999978e-05, 2.0513999999999255e-05, 2.0555999999997965e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.0499999999999685e-05, 2.0514000000002724e-05]</msg>
<status status="PASS" starttime="20201029 12:42:55.776" endtime="20201029 12:42:55.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.771" endtime="20201029 12:42:55.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.429" endtime="20201029 12:42:55.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.407" endtime="20201029 12:42:55.779"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:55.782" endtime="20201029 12:42:55.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.780" endtime="20201029 12:42:55.802"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.810" endtime="20201029 12:42:55.819"></status>
</kw>
<msg timestamp="20201029 12:42:55.819" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.808" endtime="20201029 12:42:55.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.822" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.820" endtime="20201029 12:42:55.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.823" endtime="20201029 12:42:55.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.805" endtime="20201029 12:42:55.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.804" endtime="20201029 12:42:55.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.832" endtime="20201029 12:42:56.118"></status>
</kw>
<msg timestamp="20201029 12:42:56.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017442375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017468625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.830" endtime="20201029 12:42:56.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017442375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017468625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.123" endtime="20201029 12:42:56.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.132" endtime="20201029 12:42:56.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.828" endtime="20201029 12:42:56.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.826" endtime="20201029 12:42:56.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:56.138" level="INFO">${PHILIP_RES} = [{'diff': 2.6250000000001966e-05}, {'diff': 2.5082999999998662e-05}, {'diff': 2.5098000000001175e-05}, {'diff': 2.5179999999999647e-05}, {'diff': 2.506900000000256e-05}, {'diff': 2.5082999999998662e-0...</msg>
<status status="PASS" starttime="20201029 12:42:56.135" endtime="20201029 12:42:56.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:56.143" level="INFO">${RESULT} = {'diff': [2.6250000000001966e-05, 2.5082999999998662e-05, 2.5098000000001175e-05, 2.5179999999999647e-05, 2.506900000000256e-05, 2.5082999999998662e-05, 2.5068999999999092e-05, 2.5084000000001605e-05,...</msg>
<status status="PASS" starttime="20201029 12:42:56.139" endtime="20201029 12:42:56.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.148" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:56.147" endtime="20201029 12:42:56.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.150" level="INFO">VALUE: [2.6250000000001966e-05, 2.5082999999998662e-05, 2.5098000000001175e-05, 2.5179999999999647e-05, 2.506900000000256e-05, 2.5082999999998662e-05, 2.5068999999999092e-05, 2.5084000000001605e-05, 2.508300000000213e-05, 2.50970000000017e-05, 2.5082999999998662e-05, 2.5082999999998662e-05, 2.5084000000001605e-05, 2.508300000000213e-05, 2.5082999999998662e-05, 2.513900000000041e-05, 2.5082999999998662e-05, 2.5084000000001605e-05, 2.508300000000213e-05, 2.5082999999998662e-05, 2.5082999999998662e-05, 2.5082999999998662e-05, 2.5084000000001605e-05, 2.508300000000213e-05, 2.50970000000017e-05, 2.5096999999998232e-05, 2.512500000000084e-05, 2.5098000000001175e-05, 2.5070000000002035e-05, 2.511100000000127e-05, 2.512500000000084e-05, 2.5084000000001605e-05, 2.5112000000000745e-05, 2.5042000000002895e-05, 2.5056000000002465e-05, 2.5082999999998662e-05, 2.5084000000001605e-05, 2.5084000000001605e-05, 2.508300000000213e-05, 2.5096999999998232e-05, 2.5096999999998232e-05, 2.5084000000001605e-05, 2.5084000000001605e-05, 2.508300000000213e-05, 2.5082999999998662e-05, 2.5096999999998232e-05, 2.5084000000001605e-05, 2.5098000000001175e-05, 2.508300000000213e-05, 2.5068999999999092e-05]</msg>
<status status="PASS" starttime="20201029 12:42:56.149" endtime="20201029 12:42:56.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.144" endtime="20201029 12:42:56.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.802" endtime="20201029 12:42:56.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.780" endtime="20201029 12:42:56.152"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:56.154" endtime="20201029 12:42:56.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.153" endtime="20201029 12:42:56.174"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.182" endtime="20201029 12:42:56.191"></status>
</kw>
<msg timestamp="20201029 12:42:56.192" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.180" endtime="20201029 12:42:56.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.194" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.193" endtime="20201029 12:42:56.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.195" endtime="20201029 12:42:56.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.178" endtime="20201029 12:42:56.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.176" endtime="20201029 12:42:56.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.205" endtime="20201029 12:42:56.493"></status>
</kw>
<msg timestamp="20201029 12:42:56.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017398542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017429722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.203" endtime="20201029 12:42:56.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017398542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017429722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.498" endtime="20201029 12:42:56.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.506" endtime="20201029 12:42:56.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.200" endtime="20201029 12:42:56.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.199" endtime="20201029 12:42:56.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:56.513" level="INFO">${PHILIP_RES} = [{'diff': 3.118000000000218e-05}, {'diff': 3.0027999999997917e-05}, {'diff': 3.0042000000000957e-05}, {'diff': 3.0028000000001387e-05}, {'diff': 3.0028000000001387e-05}, {'diff': 3.0042000000000957e-0...</msg>
<status status="PASS" starttime="20201029 12:42:56.510" endtime="20201029 12:42:56.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:56.517" level="INFO">${RESULT} = {'diff': [3.118000000000218e-05, 3.0027999999997917e-05, 3.0042000000000957e-05, 3.0028000000001387e-05, 3.0028000000001387e-05, 3.0042000000000957e-05, 3.0042000000000957e-05, 3.0027000000001913e-05,...</msg>
<status status="PASS" starttime="20201029 12:42:56.514" endtime="20201029 12:42:56.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.521" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:56.520" endtime="20201029 12:42:56.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.524" level="INFO">VALUE: [3.118000000000218e-05, 3.0027999999997917e-05, 3.0042000000000957e-05, 3.0028000000001387e-05, 3.0028000000001387e-05, 3.0042000000000957e-05, 3.0042000000000957e-05, 3.0027000000001913e-05, 3.0042000000000957e-05, 3.0042000000000957e-05, 2.9999999999998778e-05, 3.0040999999998014e-05, 3.0027999999997917e-05, 2.9985999999999208e-05, 3.0054999999997584e-05, 3.0096999999999763e-05, 2.9972000000003107e-05, 3.0027999999997917e-05, 3.0055000000001053e-05, 3.0014000000001817e-05, 3.0042000000000957e-05, 3.0014000000001817e-05, 3.0041000000001483e-05, 3.0042000000000957e-05, 3.0027999999997917e-05, 3.0013999999998348e-05, 3.0027999999997917e-05, 3.0027999999997917e-05, 3.0013999999998348e-05, 3.0040999999998014e-05, 3.0042000000000957e-05, 3.0070000000000097e-05, 3.0042000000000957e-05, 3.0041000000001483e-05, 3.0014000000001817e-05, 3.0056000000000527e-05, 3.0041000000001483e-05, 3.0042000000000957e-05, 3.0028000000001387e-05, 3.0028000000001387e-05, 3.0026999999998444e-05, 3.0027999999997917e-05, 3.0027999999997917e-05, 3.0013999999998348e-05, 3.0027999999997917e-05, 3.0042000000000957e-05, 3.0013999999998348e-05, 3.0041000000001483e-05, 3.0014000000001817e-05, 3.0042000000000957e-05]</msg>
<status status="PASS" starttime="20201029 12:42:56.522" endtime="20201029 12:42:56.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.518" endtime="20201029 12:42:56.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.174" endtime="20201029 12:42:56.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.152" endtime="20201029 12:42:56.525"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:56.527" endtime="20201029 12:42:56.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.526" endtime="20201029 12:42:56.547"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.555" endtime="20201029 12:42:56.565"></status>
</kw>
<msg timestamp="20201029 12:42:56.566" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.554" endtime="20201029 12:42:56.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.568" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.567" endtime="20201029 12:42:56.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.569" endtime="20201029 12:42:56.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.551" endtime="20201029 12:42:56.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.549" endtime="20201029 12:42:56.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.580" endtime="20201029 12:42:56.867"></status>
</kw>
<msg timestamp="20201029 12:42:56.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017515778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017552222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.578" endtime="20201029 12:42:56.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017515778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017552222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.871" endtime="20201029 12:42:56.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.880" endtime="20201029 12:42:56.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.575" endtime="20201029 12:42:56.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.573" endtime="20201029 12:42:56.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:56.886" level="INFO">${PHILIP_RES} = [{'diff': 3.644400000000006e-05}, {'diff': 3.529199999999927e-05}, {'diff': 3.531999999999841e-05}, {'diff': 3.5318999999998935e-05}, {'diff': 3.529200000000274e-05}, {'diff': 3.532000000000188e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:42:56.883" endtime="20201029 12:42:56.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:56.890" level="INFO">${RESULT} = {'diff': [3.644400000000006e-05, 3.529199999999927e-05, 3.531999999999841e-05, 3.5318999999998935e-05, 3.529200000000274e-05, 3.532000000000188e-05, 3.5319000000002404e-05, 3.5304999999999365e-05, 3.5...</msg>
<status status="PASS" starttime="20201029 12:42:56.887" endtime="20201029 12:42:56.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.895" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:56.894" endtime="20201029 12:42:56.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.898" level="INFO">VALUE: [3.644400000000006e-05, 3.529199999999927e-05, 3.531999999999841e-05, 3.5318999999998935e-05, 3.529200000000274e-05, 3.532000000000188e-05, 3.5319000000002404e-05, 3.5304999999999365e-05, 3.532000000000188e-05, 3.5318999999998935e-05, 3.5318999999998935e-05, 3.529199999999927e-05, 3.530599999999884e-05, 3.5290999999999795e-05, 3.529199999999927e-05, 3.5318999999998935e-05, 3.5319000000002404e-05, 3.52779999999997e-05, 3.530600000000231e-05, 3.5318999999998935e-05, 3.531999999999841e-05, 3.529199999999927e-05, 3.5304999999999365e-05, 3.530599999999884e-05, 3.530599999999884e-05, 3.5290999999999795e-05, 3.531999999999841e-05, 3.529199999999927e-05, 3.5319000000002404e-05, 3.5333000000001974e-05, 3.530599999999884e-05, 3.5318999999998935e-05, 3.529199999999927e-05, 3.530599999999884e-05, 3.5318999999998935e-05, 3.5346999999998074e-05, 3.530599999999884e-05, 3.5346999999998074e-05, 3.5318999999998935e-05, 3.530600000000231e-05, 3.5305000000002834e-05, 3.5305000000002834e-05, 3.5361000000001114e-05, 3.5333000000001974e-05, 3.52779999999997e-05, 3.530599999999884e-05, 3.529199999999927e-05, 3.5318999999998935e-05, 3.526400000000013e-05, 3.530599999999884e-05]</msg>
<status status="PASS" starttime="20201029 12:42:56.896" endtime="20201029 12:42:56.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.891" endtime="20201029 12:42:56.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.548" endtime="20201029 12:42:56.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.525" endtime="20201029 12:42:56.900"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:56.902" endtime="20201029 12:42:56.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.901" endtime="20201029 12:42:56.922"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.931" endtime="20201029 12:42:56.940"></status>
</kw>
<msg timestamp="20201029 12:42:56.940" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.929" endtime="20201029 12:42:56.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.943" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.941" endtime="20201029 12:42:56.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.944" endtime="20201029 12:42:56.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.926" endtime="20201029 12:42:56.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.924" endtime="20201029 12:42:56.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.954" endtime="20201029 12:42:57.240"></status>
</kw>
<msg timestamp="20201029 12:42:57.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017739847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017781944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.952" endtime="20201029 12:42:57.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017739847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017781944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:57.244" endtime="20201029 12:42:57.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.252" endtime="20201029 12:42:57.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.950" endtime="20201029 12:42:57.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.947" endtime="20201029 12:42:57.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:57.259" level="INFO">${PHILIP_RES} = [{'diff': 4.2097000000001356e-05}, {'diff': 4.092999999999805e-05}, {'diff': 4.0945000000000564e-05}, {'diff': 4.0930999999997525e-05}, {'diff': 4.093000000000152e-05}, {'diff': 4.092999999999805e-05}...</msg>
<status status="PASS" starttime="20201029 12:42:57.256" endtime="20201029 12:42:57.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:57.264" level="INFO">${RESULT} = {'diff': [4.2097000000001356e-05, 4.092999999999805e-05, 4.0945000000000564e-05, 4.0930999999997525e-05, 4.093000000000152e-05, 4.092999999999805e-05, 4.0917000000001424e-05, 4.095800000000066e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:42:57.260" endtime="20201029 12:42:57.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.268" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:57.267" endtime="20201029 12:42:57.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.271" level="INFO">VALUE: [4.2097000000001356e-05, 4.092999999999805e-05, 4.0945000000000564e-05, 4.0930999999997525e-05, 4.093000000000152e-05, 4.092999999999805e-05, 4.0917000000001424e-05, 4.095800000000066e-05, 4.093000000000152e-05, 4.091599999999848e-05, 4.0945000000000564e-05, 4.095800000000066e-05, 4.095800000000066e-05, 4.0930999999997525e-05, 4.0931000000000994e-05, 4.094399999999762e-05, 4.094400000000109e-05, 4.0945000000000564e-05, 4.0931000000000994e-05, 4.095800000000066e-05, 4.09859999999998e-05, 4.0931000000000994e-05, 4.0931000000000994e-05, 4.090199999999891e-05, 4.094400000000109e-05, 4.0931000000000994e-05, 4.0888999999998815e-05, 4.094400000000109e-05, 4.0930999999997525e-05, 4.0959000000000134e-05, 4.097200000000023e-05, 4.090200000000238e-05, 4.0944999999997095e-05, 4.0931000000000994e-05, 4.100000000000284e-05, 4.095800000000066e-05, 4.0931000000000994e-05, 4.0931000000000994e-05, 4.095800000000066e-05, 4.0945000000000564e-05, 4.0945000000000564e-05, 4.0916999999997955e-05, 4.09859999999998e-05, 4.0930999999997525e-05, 4.0945000000000564e-05, 4.092999999999805e-05, 4.091600000000195e-05, 4.0945000000000564e-05, 4.0945000000000564e-05, 4.094399999999762e-05]</msg>
<status status="PASS" starttime="20201029 12:42:57.269" endtime="20201029 12:42:57.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.265" endtime="20201029 12:42:57.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.923" endtime="20201029 12:42:57.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.900" endtime="20201029 12:42:57.272"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:57.275" endtime="20201029 12:42:57.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.273" endtime="20201029 12:42:57.295"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.303" endtime="20201029 12:42:57.313"></status>
</kw>
<msg timestamp="20201029 12:42:57.313" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.301" endtime="20201029 12:42:57.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.316" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.314" endtime="20201029 12:42:57.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.317" endtime="20201029 12:42:57.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.299" endtime="20201029 12:42:57.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.297" endtime="20201029 12:42:57.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.326" endtime="20201029 12:42:57.611"></status>
</kw>
<msg timestamp="20201029 12:42:57.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017735167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01778325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:57.325" endtime="20201029 12:42:57.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017735167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01778325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:57.615" endtime="20201029 12:42:57.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.624" endtime="20201029 12:42:57.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.322" endtime="20201029 12:42:57.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.321" endtime="20201029 12:42:57.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:57.631" level="INFO">${PHILIP_RES} = [{'diff': 4.808300000000085e-05}, {'diff': 4.690199999999797e-05}, {'diff': 4.695799999999972e-05}, {'diff': 4.691600000000101e-05}, {'diff': 4.691600000000101e-05}, {'diff': 4.690199999999797e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:42:57.628" endtime="20201029 12:42:57.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:57.635" level="INFO">${RESULT} = {'diff': [4.808300000000085e-05, 4.690199999999797e-05, 4.695799999999972e-05, 4.691600000000101e-05, 4.691600000000101e-05, 4.690199999999797e-05, 4.6917000000000486e-05, 4.694400000000015e-05, 4.698...</msg>
<status status="PASS" starttime="20201029 12:42:57.632" endtime="20201029 12:42:57.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.640" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:57.639" endtime="20201029 12:42:57.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.642" level="INFO">VALUE: [4.808300000000085e-05, 4.690199999999797e-05, 4.695799999999972e-05, 4.691600000000101e-05, 4.691600000000101e-05, 4.690199999999797e-05, 4.6917000000000486e-05, 4.694400000000015e-05, 4.698599999999886e-05, 4.6917000000000486e-05, 4.6931000000000056e-05, 4.698599999999886e-05, 4.6903000000000916e-05, 4.691699999999702e-05, 4.6917000000000486e-05, 4.697199999999929e-05, 4.6944999999999626e-05, 4.687499999999831e-05, 4.6903000000000916e-05, 4.6931000000000056e-05, 4.691699999999702e-05, 4.686099999999874e-05, 4.6903000000000916e-05, 4.6875000000001776e-05, 4.693000000000058e-05, 4.693000000000058e-05, 4.6889000000001346e-05, 4.693000000000058e-05, 4.687499999999831e-05, 4.691600000000101e-05, 4.6889000000001346e-05, 4.6917000000000486e-05, 4.6931000000000056e-05, 4.6917000000000486e-05, 4.6903000000000916e-05, 4.6931000000000056e-05, 4.691699999999702e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.6917000000000486e-05, 4.691699999999702e-05, 4.6903000000000916e-05, 4.6931000000000056e-05, 4.6944999999999626e-05, 4.690299999999745e-05, 4.6917000000000486e-05, 4.694400000000015e-05, 4.693000000000058e-05, 4.691599999999754e-05, 4.693000000000058e-05]</msg>
<status status="PASS" starttime="20201029 12:42:57.641" endtime="20201029 12:42:57.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.636" endtime="20201029 12:42:57.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.295" endtime="20201029 12:42:57.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.273" endtime="20201029 12:42:57.644"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:57.646" endtime="20201029 12:42:57.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.645" endtime="20201029 12:42:57.666"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.674" endtime="20201029 12:42:57.684"></status>
</kw>
<msg timestamp="20201029 12:42:57.685" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.673" endtime="20201029 12:42:57.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.687" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.686" endtime="20201029 12:42:57.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.688" endtime="20201029 12:42:57.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.670" endtime="20201029 12:42:57.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.668" endtime="20201029 12:42:57.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.698" endtime="20201029 12:42:57.990"></status>
</kw>
<msg timestamp="20201029 12:42:57.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017694444, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:42:57.697" endtime="20201029 12:42:57.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017694444, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:42:57.994" endtime="20201029 12:42:58.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.003" endtime="20201029 12:42:58.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.694" endtime="20201029 12:42:58.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.693" endtime="20201029 12:42:58.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:58.010" level="INFO">${PHILIP_RES} = [{'diff': 5.4444000000000714e-05}, {'diff': 5.330500000000002e-05}, {'diff': 5.331899999999959e-05}, {'diff': 5.329100000000045e-05}, {'diff': 5.327800000000035e-05}, {'diff': 5.326400000000078e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:42:58.006" endtime="20201029 12:42:58.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:58.014" level="INFO">${RESULT} = {'diff': [5.4444000000000714e-05, 5.330500000000002e-05, 5.331899999999959e-05, 5.329100000000045e-05, 5.327800000000035e-05, 5.326400000000078e-05, 5.326400000000078e-05, 5.333299999999916e-05, 5.326...</msg>
<status status="PASS" starttime="20201029 12:42:58.011" endtime="20201029 12:42:58.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.018" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:58.017" endtime="20201029 12:42:58.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.021" level="INFO">VALUE: [5.4444000000000714e-05, 5.330500000000002e-05, 5.331899999999959e-05, 5.329100000000045e-05, 5.327800000000035e-05, 5.326400000000078e-05, 5.326400000000078e-05, 5.333299999999916e-05, 5.326400000000078e-05, 5.323700000000112e-05, 5.3263999999997313e-05, 5.3249999999997744e-05, 5.327800000000035e-05, 5.326400000000078e-05, 5.327800000000035e-05, 5.327700000000088e-05, 5.334699999999873e-05, 5.3193999999999464e-05, 5.326400000000078e-05, 5.329199999999992e-05, 5.330599999999949e-05, 5.326400000000078e-05, 5.327700000000088e-05, 5.327800000000035e-05, 5.329199999999992e-05, 5.330599999999949e-05, 5.3277999999996883e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.320899999999851e-05, 5.326300000000131e-05, 5.329199999999992e-05, 5.327800000000035e-05, 5.3221999999998604e-05, 5.329199999999992e-05, 5.333300000000263e-05, 5.327700000000088e-05, 5.327700000000088e-05, 5.323600000000164e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.3277999999996883e-05, 5.326299999999784e-05, 5.326400000000078e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.323600000000164e-05, 5.329199999999992e-05, 5.327800000000035e-05]</msg>
<status status="PASS" starttime="20201029 12:42:58.019" endtime="20201029 12:42:58.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.015" endtime="20201029 12:42:58.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.667" endtime="20201029 12:42:58.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.644" endtime="20201029 12:42:58.023"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:58.025" endtime="20201029 12:42:58.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.024" endtime="20201029 12:42:58.045"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.053" endtime="20201029 12:42:58.065"></status>
</kw>
<msg timestamp="20201029 12:42:58.065" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.052" endtime="20201029 12:42:58.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.068" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.066" endtime="20201029 12:42:58.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.069" endtime="20201029 12:42:58.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.049" endtime="20201029 12:42:58.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.047" endtime="20201029 12:42:58.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.078" endtime="20201029 12:42:58.363"></status>
</kw>
<msg timestamp="20201029 12:42:58.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017824625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017885764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.077" endtime="20201029 12:42:58.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017824625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017885764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.368" endtime="20201029 12:42:58.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.376" endtime="20201029 12:42:58.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.074" endtime="20201029 12:42:58.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.072" endtime="20201029 12:42:58.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:58.383" level="INFO">${PHILIP_RES} = [{'diff': 6.113899999999825e-05}, {'diff': 5.9957999999998846e-05}, {'diff': 6.0000000000001025e-05}, {'diff': 6.0000000000001025e-05}, {'diff': 5.9957999999998846e-05}, {'diff': 5.9929999999999706e-0...</msg>
<status status="PASS" starttime="20201029 12:42:58.379" endtime="20201029 12:42:58.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:58.388" level="INFO">${RESULT} = {'diff': [6.113899999999825e-05, 5.9957999999998846e-05, 6.0000000000001025e-05, 6.0000000000001025e-05, 5.9957999999998846e-05, 5.9929999999999706e-05, 5.9972000000001885e-05, 5.9957999999998846e-05,...</msg>
<status status="PASS" starttime="20201029 12:42:58.383" endtime="20201029 12:42:58.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.392" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:58.391" endtime="20201029 12:42:58.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.394" level="INFO">VALUE: [6.113899999999825e-05, 5.9957999999998846e-05, 6.0000000000001025e-05, 6.0000000000001025e-05, 5.9957999999998846e-05, 5.9929999999999706e-05, 5.9972000000001885e-05, 5.9957999999998846e-05, 5.991699999999961e-05, 5.9971999999998415e-05, 5.9943999999999276e-05, 5.9957999999998846e-05, 5.9971999999998415e-05, 5.9957999999998846e-05, 5.9957999999998846e-05, 5.9986000000001455e-05, 5.9971999999998415e-05, 5.9972000000001885e-05, 5.9943999999999276e-05, 5.9943999999999276e-05, 6.0028000000000165e-05, 5.9971999999998415e-05, 5.9958000000002315e-05, 5.9957999999998846e-05, 5.9957999999998846e-05, 5.9943999999999276e-05, 5.9957999999998846e-05, 5.9957999999998846e-05, 5.9957999999998846e-05, 5.9972000000001885e-05, 5.9916000000000136e-05, 5.9986000000001455e-05, 5.9958000000002315e-05, 5.9957999999998846e-05, 5.988900000000047e-05, 5.9957999999998846e-05, 5.9958000000002315e-05, 5.9957999999998846e-05, 5.9958000000002315e-05, 5.9972000000001885e-05, 5.9957999999998846e-05, 5.9958000000002315e-05, 5.991699999999961e-05, 5.991699999999961e-05, 5.9957999999998846e-05, 5.9943999999999276e-05, 6.004100000000026e-05, 5.9971999999998415e-05, 5.9986000000001455e-05, 6.0014000000000595e-05]</msg>
<status status="PASS" starttime="20201029 12:42:58.393" endtime="20201029 12:42:58.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.388" endtime="20201029 12:42:58.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.046" endtime="20201029 12:42:58.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.023" endtime="20201029 12:42:58.396"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:58.398" endtime="20201029 12:42:58.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.397" endtime="20201029 12:42:58.418"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.426" endtime="20201029 12:42:58.438"></status>
</kw>
<msg timestamp="20201029 12:42:58.439" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.425" endtime="20201029 12:42:58.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.441" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.440" endtime="20201029 12:42:58.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.443" endtime="20201029 12:42:58.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.422" endtime="20201029 12:42:58.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.420" endtime="20201029 12:42:58.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.452" endtime="20201029 12:42:58.738"></status>
</kw>
<msg timestamp="20201029 12:42:58.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017588708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017656847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.450" endtime="20201029 12:42:58.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017588708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017656847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.742" endtime="20201029 12:42:58.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.751" endtime="20201029 12:42:58.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.447" endtime="20201029 12:42:58.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.446" endtime="20201029 12:42:58.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:58.758" level="INFO">${PHILIP_RES} = [{'diff': 6.813899999999831e-05}, {'diff': 6.701400000000066e-05}, {'diff': 6.700000000000109e-05}, {'diff': 6.700000000000109e-05}, {'diff': 6.701400000000066e-05}, {'diff': 6.700000000000109e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:42:58.755" endtime="20201029 12:42:58.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:58.762" level="INFO">${RESULT} = {'diff': [6.813899999999831e-05, 6.701400000000066e-05, 6.700000000000109e-05, 6.700000000000109e-05, 6.701400000000066e-05, 6.700000000000109e-05, 6.701400000000066e-05, 6.701400000000066e-05, 6.6986...</msg>
<status status="PASS" starttime="20201029 12:42:58.759" endtime="20201029 12:42:58.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.767" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:58.766" endtime="20201029 12:42:58.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.769" level="INFO">VALUE: [6.813899999999831e-05, 6.701400000000066e-05, 6.700000000000109e-05, 6.700000000000109e-05, 6.701400000000066e-05, 6.700000000000109e-05, 6.701400000000066e-05, 6.701400000000066e-05, 6.698600000000152e-05, 6.698600000000152e-05, 6.700000000000109e-05, 6.700000000000109e-05, 6.700000000000109e-05, 6.700000000000109e-05, 6.698600000000152e-05, 6.701400000000066e-05, 6.698600000000152e-05, 6.697200000000195e-05, 6.701400000000066e-05, 6.697300000000142e-05, 6.700000000000109e-05, 6.698600000000152e-05, 6.701400000000066e-05, 6.702700000000075e-05, 6.701400000000066e-05, 6.702800000000023e-05, 6.691699999999967e-05, 6.701400000000066e-05, 6.702800000000023e-05, 6.697200000000195e-05, 6.700000000000109e-05, 6.700000000000109e-05, 6.698600000000152e-05, 6.698600000000152e-05, 6.700000000000109e-05, 6.701300000000118e-05, 6.701300000000118e-05, 6.699999999999762e-05, 6.699999999999762e-05, 6.699999999999762e-05, 6.699999999999762e-05, 6.699999999999762e-05, 6.694399999999934e-05, 6.694399999999934e-05, 6.695899999999838e-05, 6.699999999999762e-05, 6.692999999999977e-05, 6.698699999999752e-05, 6.699999999999762e-05, 6.701399999999719e-05]</msg>
<status status="PASS" starttime="20201029 12:42:58.768" endtime="20201029 12:42:58.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.763" endtime="20201029 12:42:58.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.419" endtime="20201029 12:42:58.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.396" endtime="20201029 12:42:58.771"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:58.773" endtime="20201029 12:42:58.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.772" endtime="20201029 12:42:58.793"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.802" endtime="20201029 12:42:58.814"></status>
</kw>
<msg timestamp="20201029 12:42:58.814" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.800" endtime="20201029 12:42:58.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.817" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.815" endtime="20201029 12:42:58.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.818" endtime="20201029 12:42:58.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.797" endtime="20201029 12:42:58.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.795" endtime="20201029 12:42:58.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.828" endtime="20201029 12:42:59.113"></status>
</kw>
<msg timestamp="20201029 12:42:59.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018917236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018992778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.826" endtime="20201029 12:42:59.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018917236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018992778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.117" endtime="20201029 12:42:59.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.125" endtime="20201029 12:42:59.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.823" endtime="20201029 12:42:59.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.822" endtime="20201029 12:42:59.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:59.133" level="INFO">${PHILIP_RES} = [{'diff': 7.554199999999789e-05}, {'diff': 7.438899999999762e-05}, {'diff': 7.437499999999805e-05}, {'diff': 7.430600000000315e-05}, {'diff': 7.438900000000109e-05}, {'diff': 7.437500000000152e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:42:59.129" endtime="20201029 12:42:59.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:59.139" level="INFO">${RESULT} = {'diff': [7.554199999999789e-05, 7.438899999999762e-05, 7.437499999999805e-05, 7.430600000000315e-05, 7.438900000000109e-05, 7.437500000000152e-05, 7.438900000000109e-05, 7.438900000000109e-05, 7.4388...</msg>
<status status="PASS" starttime="20201029 12:42:59.134" endtime="20201029 12:42:59.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.145" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:59.144" endtime="20201029 12:42:59.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.148" level="INFO">VALUE: [7.554199999999789e-05, 7.438899999999762e-05, 7.437499999999805e-05, 7.430600000000315e-05, 7.438900000000109e-05, 7.437500000000152e-05, 7.438900000000109e-05, 7.438900000000109e-05, 7.438899999999762e-05, 7.437499999999805e-05, 7.437499999999805e-05, 7.440300000000066e-05, 7.440300000000066e-05, 7.440300000000066e-05, 7.437500000000152e-05, 7.440200000000119e-05, 7.437500000000152e-05, 7.440300000000066e-05, 7.437499999999805e-05, 7.438899999999762e-05, 7.437500000000152e-05, 7.437500000000152e-05, 7.437500000000152e-05, 7.440300000000066e-05, 7.437500000000152e-05, 7.438900000000109e-05, 7.437499999999805e-05, 7.436199999999796e-05, 7.438899999999762e-05, 7.436099999999848e-05, 7.441700000000023e-05, 7.437500000000152e-05, 7.445799999999947e-05, 7.437499999999805e-05, 7.438799999999815e-05, 7.438900000000109e-05, 7.438899999999762e-05, 7.440300000000066e-05, 7.438900000000109e-05, 7.437500000000152e-05, 7.44309999999998e-05, 7.438900000000109e-05, 7.437500000000152e-05, 7.437499999999805e-05, 7.438899999999762e-05, 7.440300000000066e-05, 7.438799999999815e-05, 7.438900000000109e-05, 7.444499999999937e-05, 7.438900000000109e-05]</msg>
<status status="PASS" starttime="20201029 12:42:59.146" endtime="20201029 12:42:59.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.140" endtime="20201029 12:42:59.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.793" endtime="20201029 12:42:59.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.771" endtime="20201029 12:42:59.152"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:59.155" endtime="20201029 12:42:59.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.154" endtime="20201029 12:42:59.175"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.184" endtime="20201029 12:42:59.196"></status>
</kw>
<msg timestamp="20201029 12:42:59.196" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.182" endtime="20201029 12:42:59.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.199" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.197" endtime="20201029 12:42:59.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.200" endtime="20201029 12:42:59.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.179" endtime="20201029 12:42:59.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.178" endtime="20201029 12:42:59.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.209" endtime="20201029 12:42:59.494"></status>
</kw>
<msg timestamp="20201029 12:42:59.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018279347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018362625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.207" endtime="20201029 12:42:59.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018279347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018362625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.498" endtime="20201029 12:42:59.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.507" endtime="20201029 12:42:59.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.205" endtime="20201029 12:42:59.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.203" endtime="20201029 12:42:59.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:59.513" level="INFO">${PHILIP_RES} = [{'diff': 8.327799999999913e-05}, {'diff': 8.21390000000019e-05}, {'diff': 8.212500000000234e-05}, {'diff': 8.2152000000002e-05}, {'diff': 8.213899999999844e-05}, {'diff': 8.209699999999973e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:42:59.510" endtime="20201029 12:42:59.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:59.518" level="INFO">${RESULT} = {'diff': [8.327799999999913e-05, 8.21390000000019e-05, 8.212500000000234e-05, 8.2152000000002e-05, 8.213899999999844e-05, 8.209699999999973e-05, 8.212499999999887e-05, 8.2152999999998e-05, 8.212499999...</msg>
<status status="PASS" starttime="20201029 12:42:59.514" endtime="20201029 12:42:59.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.523" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:59.522" endtime="20201029 12:42:59.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.525" level="INFO">VALUE: [8.327799999999913e-05, 8.21390000000019e-05, 8.212500000000234e-05, 8.2152000000002e-05, 8.213899999999844e-05, 8.209699999999973e-05, 8.212499999999887e-05, 8.2152999999998e-05, 8.212499999999887e-05, 8.220800000000028e-05, 8.212500000000234e-05, 8.216600000000157e-05, 8.212500000000234e-05, 8.218100000000061e-05, 8.213899999999844e-05, 8.216699999999758e-05, 8.213799999999896e-05, 8.2152999999998e-05, 8.213899999999844e-05, 8.212500000000234e-05, 8.20970000000032e-05, 8.2152000000002e-05, 8.21390000000019e-05, 8.21390000000019e-05, 8.20979999999992e-05, 8.2152999999998e-05, 8.213899999999844e-05, 8.2152999999998e-05, 8.212499999999887e-05, 8.218100000000061e-05, 8.21390000000019e-05, 8.215300000000147e-05, 8.21390000000019e-05, 8.212499999999887e-05, 8.216699999999758e-05, 8.212499999999887e-05, 8.213899999999844e-05, 8.212499999999887e-05, 8.212499999999887e-05, 8.215199999999853e-05, 8.21390000000019e-05, 8.215300000000147e-05, 8.21390000000019e-05, 8.215300000000147e-05, 8.21390000000019e-05, 8.212499999999887e-05, 8.2152999999998e-05, 8.213799999999896e-05, 8.213899999999844e-05, 8.213899999999844e-05]</msg>
<status status="PASS" starttime="20201029 12:42:59.524" endtime="20201029 12:42:59.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.519" endtime="20201029 12:42:59.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.176" endtime="20201029 12:42:59.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.153" endtime="20201029 12:42:59.527"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:59.529" endtime="20201029 12:42:59.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.528" endtime="20201029 12:42:59.549"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.558" endtime="20201029 12:42:59.570"></status>
</kw>
<msg timestamp="20201029 12:42:59.570" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.556" endtime="20201029 12:42:59.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.573" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.571" endtime="20201029 12:42:59.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.574" endtime="20201029 12:42:59.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.553" endtime="20201029 12:42:59.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.551" endtime="20201029 12:42:59.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.583" endtime="20201029 12:42:59.868"></status>
</kw>
<msg timestamp="20201029 12:42:59.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018302083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018393486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.581" endtime="20201029 12:42:59.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018302083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018393486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.873" endtime="20201029 12:42:59.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.881" endtime="20201029 12:42:59.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.579" endtime="20201029 12:42:59.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.577" endtime="20201029 12:42:59.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:42:59.887" level="INFO">${PHILIP_RES} = [{'diff': 9.140300000000032e-05}, {'diff': 9.022200000000091e-05}, {'diff': 9.023599999999701e-05}, {'diff': 9.025000000000005e-05}, {'diff': 9.023600000000048e-05}, {'diff': 9.023599999999701e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:42:59.884" endtime="20201029 12:42:59.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:59.892" level="INFO">${RESULT} = {'diff': [9.140300000000032e-05, 9.022200000000091e-05, 9.023599999999701e-05, 9.025000000000005e-05, 9.023600000000048e-05, 9.023599999999701e-05, 9.019400000000177e-05, 9.029199999999876e-05, 9.0207...</msg>
<status status="PASS" starttime="20201029 12:42:59.888" endtime="20201029 12:42:59.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.896" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 12:42:59.895" endtime="20201029 12:42:59.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.898" level="INFO">VALUE: [9.140300000000032e-05, 9.022200000000091e-05, 9.023599999999701e-05, 9.025000000000005e-05, 9.023600000000048e-05, 9.023599999999701e-05, 9.019400000000177e-05, 9.029199999999876e-05, 9.020799999999787e-05, 9.025000000000005e-05, 9.022300000000039e-05, 9.023599999999701e-05, 9.023600000000048e-05, 9.029199999999876e-05, 9.025000000000005e-05, 9.025000000000005e-05, 9.023600000000048e-05, 9.022200000000091e-05, 9.019500000000125e-05, 9.022199999999744e-05, 9.022200000000091e-05, 9.026399999999962e-05, 9.023600000000048e-05, 9.022200000000091e-05, 9.023600000000048e-05, 9.031899999999843e-05, 9.023600000000048e-05, 9.01670000000021e-05, 9.023600000000048e-05, 9.025000000000005e-05, 9.019400000000177e-05, 9.026400000000309e-05, 9.023699999999996e-05, 9.025000000000005e-05, 9.022200000000091e-05, 9.017999999999873e-05, 9.025000000000005e-05, 9.023599999999701e-05, 9.027799999999919e-05, 9.027799999999919e-05, 9.023600000000048e-05, 9.023600000000048e-05, 9.022199999999744e-05, 9.023699999999996e-05, 9.023600000000048e-05, 9.026399999999962e-05, 9.022200000000091e-05, 9.023699999999996e-05, 9.025000000000005e-05, 9.023600000000048e-05]</msg>
<status status="PASS" starttime="20201029 12:42:59.897" endtime="20201029 12:42:59.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.892" endtime="20201029 12:42:59.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.549" endtime="20201029 12:42:59.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.527" endtime="20201029 12:42:59.900"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:59.902" endtime="20201029 12:42:59.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.901" endtime="20201029 12:42:59.922"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.931" endtime="20201029 12:42:59.943"></status>
</kw>
<msg timestamp="20201029 12:42:59.944" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.929" endtime="20201029 12:42:59.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.946" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.945" endtime="20201029 12:42:59.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.947" endtime="20201029 12:42:59.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.927" endtime="20201029 12:42:59.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.924" endtime="20201029 12:42:59.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.957" endtime="20201029 12:43:00.244"></status>
</kw>
<msg timestamp="20201029 12:43:00.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018064597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018164431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.956" endtime="20201029 12:43:00.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018064597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018164431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:00.248" endtime="20201029 12:43:00.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.256" endtime="20201029 12:43:00.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.953" endtime="20201029 12:43:00.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.951" endtime="20201029 12:43:00.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:00.263" level="INFO">${PHILIP_RES} = [{'diff': 9.983400000000003e-05}, {'diff': 9.872300000000195e-05}, {'diff': 9.873599999999857e-05}, {'diff': 9.869499999999934e-05}, {'diff': 9.86800000000003e-05}, {'diff': 9.86800000000003e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:00.260" endtime="20201029 12:43:00.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:00.267" level="INFO">${RESULT} = {'diff': [9.983400000000003e-05, 9.872300000000195e-05, 9.873599999999857e-05, 9.869499999999934e-05, 9.86800000000003e-05, 9.86800000000003e-05, 9.86670000000002e-05, 9.869399999999987e-05, 9.8666000...</msg>
<status status="PASS" starttime="20201029 12:43:00.264" endtime="20201029 12:43:00.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.272" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:00.270" endtime="20201029 12:43:00.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.274" level="INFO">VALUE: [9.983400000000003e-05, 9.872300000000195e-05, 9.873599999999857e-05, 9.869499999999934e-05, 9.86800000000003e-05, 9.86800000000003e-05, 9.86670000000002e-05, 9.869399999999987e-05, 9.866600000000073e-05, 9.86670000000002e-05, 9.867999999999683e-05, 9.86800000000003e-05, 9.868099999999977e-05, 9.86800000000003e-05, 9.865200000000116e-05, 9.869499999999934e-05, 9.865300000000063e-05, 9.86800000000003e-05, 9.868099999999977e-05, 9.866600000000073e-05, 9.868099999999977e-05, 9.868100000000324e-05, 9.866599999999726e-05, 9.869399999999987e-05, 9.868099999999977e-05, 9.866600000000073e-05, 9.868099999999977e-05, 9.868099999999977e-05, 9.86800000000003e-05, 9.868099999999977e-05, 9.870899999999891e-05, 9.869399999999987e-05, 9.869499999999934e-05, 9.869500000000281e-05, 9.86800000000003e-05, 9.86670000000002e-05, 9.869499999999934e-05, 9.86800000000003e-05, 9.869499999999934e-05, 9.869499999999934e-05, 9.865200000000116e-05, 9.868099999999977e-05, 9.868099999999977e-05, 9.86800000000003e-05, 9.873599999999857e-05, 9.868099999999977e-05, 9.86800000000003e-05, 9.868100000000324e-05, 9.86670000000002e-05, 9.872200000000247e-05]</msg>
<status status="PASS" starttime="20201029 12:43:00.273" endtime="20201029 12:43:00.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.268" endtime="20201029 12:43:00.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.923" endtime="20201029 12:43:00.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.900" endtime="20201029 12:43:00.276"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:00.279" endtime="20201029 12:43:00.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.277" endtime="20201029 12:43:00.299"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.307" endtime="20201029 12:43:00.321"></status>
</kw>
<msg timestamp="20201029 12:43:00.322" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.306" endtime="20201029 12:43:00.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.324" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.323" endtime="20201029 12:43:00.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.325" endtime="20201029 12:43:00.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.303" endtime="20201029 12:43:00.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.301" endtime="20201029 12:43:00.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.334" endtime="20201029 12:43:00.620"></status>
</kw>
<msg timestamp="20201029 12:43:00.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018377722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018486347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:00.333" endtime="20201029 12:43:00.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018377722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018486347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:00.624" endtime="20201029 12:43:00.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.632" endtime="20201029 12:43:00.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.330" endtime="20201029 12:43:00.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.329" endtime="20201029 12:43:00.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:00.639" level="INFO">${PHILIP_RES} = [{'diff': 0.00010862500000000108}, {'diff': 0.00010748600000000039}, {'diff': 0.00010749999999999996}, {'diff': 0.00010754199999999867}, {'diff': 0.00010747199999999735}, {'diff': 0.000107472000000000...</msg>
<status status="PASS" starttime="20201029 12:43:00.636" endtime="20201029 12:43:00.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:00.644" level="INFO">${RESULT} = {'diff': [0.00010862500000000108, 0.00010748600000000039, 0.00010749999999999996, 0.00010754199999999867, 0.00010747199999999735, 0.00010747200000000082, 0.00010748600000000039, 0.00010748600000000039...</msg>
<status status="PASS" starttime="20201029 12:43:00.640" endtime="20201029 12:43:00.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.648" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:00.647" endtime="20201029 12:43:00.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.650" level="INFO">VALUE: [0.00010862500000000108, 0.00010748600000000039, 0.00010749999999999996, 0.00010754199999999867, 0.00010747199999999735, 0.00010747200000000082, 0.00010748600000000039, 0.00010748600000000039, 0.00010745800000000125, 0.00010749999999999996, 0.00010754199999999867, 0.00010747300000000029, 0.0001075279999999991, 0.00010747199999999735, 0.00010747299999999682, 0.00010748600000000039, 0.00010751399999999953, 0.00010747200000000082, 0.00010747200000000082, 0.00010751399999999953, 0.00010741600000000254, 0.00010749999999999996, 0.00010748600000000039, 0.00010748600000000039, 0.00010741700000000201, 0.00010745800000000125, 0.00010744499999999768, 0.00010744400000000168, 0.00010748600000000039, 0.00010744500000000115, 0.0001075279999999991, 0.00010747200000000082, 0.00010745799999999778, 0.00010748599999999692, 0.00010748699999999986, 0.00010747200000000082, 0.00010740299999999897, 0.00010747200000000082, 0.00010747200000000082, 0.00010748699999999986, 0.00010747200000000082, 0.00010745900000000072, 0.00010748600000000039, 0.0001073889999999994, 0.00010747300000000029, 0.00010748600000000039, 0.00010748600000000039, 0.00010742999999999864, 0.00010754099999999919, 0.00010741700000000201]</msg>
<status status="PASS" starttime="20201029 12:43:00.649" endtime="20201029 12:43:00.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.644" endtime="20201029 12:43:00.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.299" endtime="20201029 12:43:00.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.277" endtime="20201029 12:43:00.652"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:00.662" endtime="20201029 12:43:00.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.653" endtime="20201029 12:43:00.682"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.690" endtime="20201029 12:43:00.704"></status>
</kw>
<msg timestamp="20201029 12:43:00.705" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.689" endtime="20201029 12:43:00.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.707" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.706" endtime="20201029 12:43:00.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.709" endtime="20201029 12:43:00.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.686" endtime="20201029 12:43:00.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.684" endtime="20201029 12:43:00.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.721" endtime="20201029 12:43:01.008"></status>
</kw>
<msg timestamp="20201029 12:43:01.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0177665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017884278, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:00.719" endtime="20201029 12:43:01.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0177665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017884278, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:01.012" endtime="20201029 12:43:01.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.020" endtime="20201029 12:43:01.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.715" endtime="20201029 12:43:01.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.712" endtime="20201029 12:43:01.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:01.028" level="INFO">${PHILIP_RES} = [{'diff': 0.00011777799999999894}, {'diff': 0.00011658400000000291}, {'diff': 0.00011666699999999738}, {'diff': 0.00011665300000000128}, {'diff': 0.00011665200000000181}, {'diff': 0.000116666000000001...</msg>
<status status="PASS" starttime="20201029 12:43:01.025" endtime="20201029 12:43:01.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:01.032" level="INFO">${RESULT} = {'diff': [0.00011777799999999894, 0.00011658400000000291, 0.00011666699999999738, 0.00011665300000000128, 0.00011665200000000181, 0.00011666600000000138, 0.00011666699999999738, 0.00011666700000000085...</msg>
<status status="PASS" starttime="20201029 12:43:01.029" endtime="20201029 12:43:01.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.036" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:01.035" endtime="20201029 12:43:01.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.039" level="INFO">VALUE: [0.00011777799999999894, 0.00011658400000000291, 0.00011666699999999738, 0.00011665300000000128, 0.00011665200000000181, 0.00011666600000000138, 0.00011666699999999738, 0.00011666700000000085, 0.00011665300000000128, 0.00011666700000000085, 0.00011665299999999781, 0.00011670800000000009, 0.00011666600000000138, 0.00011663799999999877, 0.00011665299999999781, 0.00011663900000000171, 0.00011662500000000214, 0.00011663899999999824, 0.00011662499999999867, 0.00011663900000000171, 0.00011663900000000171, 0.00011665199999999834, 0.00011665199999999834, 0.00011666700000000085, 0.00011662499999999867, 0.00011668100000000042, 0.00011666700000000085, 0.00011666700000000085, 0.00011665300000000128, 0.00011663899999999824, 0.00011665200000000181, 0.00011663900000000171, 0.00011665299999999781, 0.00011663899999999824, 0.0001166109999999991, 0.00011665300000000128, 0.00011665299999999781, 0.00011665300000000128, 0.00011663900000000171, 0.00011665199999999834, 0.00011667999999999748, 0.00011662499999999867, 0.0001165690000000004, 0.00011666700000000085, 0.00011663899999999824, 0.00011662499999999867, 0.00011662500000000214, 0.00011663799999999877, 0.00011663799999999877, 0.00011663900000000171]</msg>
<status status="PASS" starttime="20201029 12:43:01.037" endtime="20201029 12:43:01.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.033" endtime="20201029 12:43:01.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.683" endtime="20201029 12:43:01.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.652" endtime="20201029 12:43:01.041"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:01.043" endtime="20201029 12:43:01.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.041" endtime="20201029 12:43:01.063"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.071" endtime="20201029 12:43:01.086"></status>
</kw>
<msg timestamp="20201029 12:43:01.087" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.069" endtime="20201029 12:43:01.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.089" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.088" endtime="20201029 12:43:01.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.091" endtime="20201029 12:43:01.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.067" endtime="20201029 12:43:01.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.065" endtime="20201029 12:43:01.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.100" endtime="20201029 12:43:01.386"></status>
</kw>
<msg timestamp="20201029 12:43:01.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017703736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017831056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:01.099" endtime="20201029 12:43:01.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017703736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017831056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:01.390" endtime="20201029 12:43:01.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.398" endtime="20201029 12:43:01.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.096" endtime="20201029 12:43:01.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.095" endtime="20201029 12:43:01.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:01.405" level="INFO">${PHILIP_RES} = [{'diff': 0.0001273200000000002}, {'diff': 0.00012615199999999743}, {'diff': 0.0001261390000000008}, {'diff': 0.0001261390000000008}, {'diff': 0.00012616699999999995}, {'diff': 0.0001261390000000008},...</msg>
<status status="PASS" starttime="20201029 12:43:01.402" endtime="20201029 12:43:01.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:01.409" level="INFO">${RESULT} = {'diff': [0.0001273200000000002, 0.00012615199999999743, 0.0001261390000000008, 0.0001261390000000008, 0.00012616699999999995, 0.0001261390000000008, 0.00012615300000000038, 0.00012615199999999743, 0....</msg>
<status status="PASS" starttime="20201029 12:43:01.406" endtime="20201029 12:43:01.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.413" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:01.412" endtime="20201029 12:43:01.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.416" level="INFO">VALUE: [0.0001273200000000002, 0.00012615199999999743, 0.0001261390000000008, 0.0001261390000000008, 0.00012616699999999995, 0.0001261390000000008, 0.00012615300000000038, 0.00012615199999999743, 0.00012616699999999995, 0.0001260689999999995, 0.00012618099999999952, 0.0001261520000000009, 0.00012612500000000124, 0.00012612500000000124, 0.0001261390000000008, 0.00012613799999999786, 0.0001261390000000008, 0.0001261520000000009, 0.0001261390000000008, 0.0001261390000000008, 0.00012609699999999863, 0.00012612499999999777, 0.00012616699999999995, 0.00012616600000000047, 0.0001261390000000008, 0.00012611200000000114, 0.0001261390000000008, 0.00012615300000000038, 0.00012612499999999777, 0.00012615300000000038, 0.00012615300000000038, 0.00012615300000000038, 0.00012616699999999995, 0.00012615300000000038, 0.00012615300000000038, 0.0001261529999999969, 0.0001261529999999969, 0.00012612500000000124, 0.0001261390000000008, 0.0001261390000000008, 0.00012612500000000124, 0.00012618000000000004, 0.00012615300000000038, 0.00012612500000000124, 0.0001261390000000008, 0.00012615300000000038, 0.00012618100000000299, 0.00012616699999999995, 0.0001261390000000008, 0.00012612499999999777]</msg>
<status status="PASS" starttime="20201029 12:43:01.414" endtime="20201029 12:43:01.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.410" endtime="20201029 12:43:01.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.063" endtime="20201029 12:43:01.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.041" endtime="20201029 12:43:01.419"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:01.421" endtime="20201029 12:43:01.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.419" endtime="20201029 12:43:01.441"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.449" endtime="20201029 12:43:01.464"></status>
</kw>
<msg timestamp="20201029 12:43:01.464" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.447" endtime="20201029 12:43:01.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.467" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.465" endtime="20201029 12:43:01.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.468" endtime="20201029 12:43:01.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.445" endtime="20201029 12:43:01.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.443" endtime="20201029 12:43:01.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.477" endtime="20201029 12:43:01.773"></status>
</kw>
<msg timestamp="20201029 12:43:01.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017486833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017624, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:01.475" endtime="20201029 12:43:01.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017486833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017624, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:01.782" endtime="20201029 12:43:01.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.800" endtime="20201029 12:43:01.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.473" endtime="20201029 12:43:01.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.471" endtime="20201029 12:43:01.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:01.813" level="INFO">${PHILIP_RES} = [{'diff': 0.00013716700000000054}, {'diff': 0.0001360000000000007}, {'diff': 0.0001359719999999981}, {'diff': 0.0001359719999999981}, {'diff': 0.00013598600000000113}, {'diff': 0.0001360000000000007},...</msg>
<status status="PASS" starttime="20201029 12:43:01.807" endtime="20201029 12:43:01.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:01.823" level="INFO">${RESULT} = {'diff': [0.00013716700000000054, 0.0001360000000000007, 0.0001359719999999981, 0.0001359719999999981, 0.00013598600000000113, 0.0001360000000000007, 0.00013602799999999984, 0.00013598599999999766, 0....</msg>
<status status="PASS" starttime="20201029 12:43:01.815" endtime="20201029 12:43:01.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.831" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:01.830" endtime="20201029 12:43:01.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.833" level="INFO">VALUE: [0.00013716700000000054, 0.0001360000000000007, 0.0001359719999999981, 0.0001359719999999981, 0.00013598600000000113, 0.0001360000000000007, 0.00013602799999999984, 0.00013598599999999766, 0.00013601400000000027, 0.0001360000000000007, 0.0001360000000000007, 0.0001360000000000007, 0.00013594400000000242, 0.00013598600000000113, 0.00013598599999999766, 0.00013598600000000113, 0.00013598600000000113, 0.0001360000000000007, 0.00013598599999999766, 0.0001360000000000007, 0.00013597300000000104, 0.0001359719999999981, 0.0001360419999999994, 0.00013597200000000156, 0.00013597200000000156, 0.0001360139999999968, 0.00013608399999999812, 0.00013601400000000027, 0.0001360000000000007, 0.00013598599999999766, 0.0001360000000000007, 0.0001360549999999995, 0.00013602799999999984, 0.00013599999999999723, 0.00013598600000000113, 0.00013598600000000113, 0.00013598599999999766, 0.00013598599999999766, 0.0001360000000000007, 0.0001360130000000008, 0.00013604099999999994, 0.00013602799999999984, 0.00013602700000000037, 0.00013598599999999766, 0.00013599999999999723, 0.0001360000000000007, 0.00013597300000000104, 0.0001360000000000007, 0.0001360000000000007, 0.0001360000000000007]</msg>
<status status="PASS" starttime="20201029 12:43:01.832" endtime="20201029 12:43:01.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.825" endtime="20201029 12:43:01.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.441" endtime="20201029 12:43:01.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.419" endtime="20201029 12:43:01.835"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:01.837" endtime="20201029 12:43:01.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.836" endtime="20201029 12:43:01.858"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.865" endtime="20201029 12:43:01.881"></status>
</kw>
<msg timestamp="20201029 12:43:01.882" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.864" endtime="20201029 12:43:01.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.884" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.883" endtime="20201029 12:43:01.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.885" endtime="20201029 12:43:01.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.861" endtime="20201029 12:43:01.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.860" endtime="20201029 12:43:01.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.894" endtime="20201029 12:43:02.181"></status>
</kw>
<msg timestamp="20201029 12:43:02.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017604014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017751361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:01.893" endtime="20201029 12:43:02.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017604014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017751361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:02.185" endtime="20201029 12:43:02.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.193" endtime="20201029 12:43:02.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.890" endtime="20201029 12:43:02.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.889" endtime="20201029 12:43:02.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:02.200" level="INFO">${PHILIP_RES} = [{'diff': 0.00014734699999999906}, {'diff': 0.0001462090000000013}, {'diff': 0.00014626299999999717}, {'diff': 0.0001461939999999988}, {'diff': 0.00014620799999999837}, {'diff': 0.00014620799999999837...</msg>
<status status="PASS" starttime="20201029 12:43:02.197" endtime="20201029 12:43:02.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:02.204" level="INFO">${RESULT} = {'diff': [0.00014734699999999906, 0.0001462090000000013, 0.00014626299999999717, 0.0001461939999999988, 0.00014620799999999837, 0.00014620799999999837, 0.000146139, 0.00014620799999999837, 0.000146209...</msg>
<status status="PASS" starttime="20201029 12:43:02.201" endtime="20201029 12:43:02.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.208" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:02.207" endtime="20201029 12:43:02.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.211" level="INFO">VALUE: [0.00014734699999999906, 0.0001462090000000013, 0.00014626299999999717, 0.0001461939999999988, 0.00014620799999999837, 0.00014620799999999837, 0.000146139, 0.00014620799999999837, 0.0001462090000000013, 0.0001461800000000027, 0.00014616599999999966, 0.00014622300000000088, 0.00014620799999999837, 0.0001461939999999988, 0.00014619499999999827, 0.00014626400000000012, 0.00014620799999999837, 0.00014625000000000055, 0.0001462090000000013, 0.00014623600000000098, 0.00014618100000000217, 0.0001462220000000014, 0.00014617999999999923, 0.00014626400000000012, 0.00014623699999999698, 0.00014622199999999794, 0.00014620799999999837, 0.00014619499999999827, 0.0001462220000000014, 0.00014620800000000184, 0.00014622300000000088, 0.00014619400000000227, 0.00014620799999999837, 0.00014620899999999784, 0.00014622199999999794, 0.00014616699999999913, 0.00014629199999999926, 0.00014619500000000174, 0.0001462220000000014, 0.00014619400000000227, 0.0001462090000000013, 0.000146139, 0.00014620799999999837, 0.00014620899999999784, 0.0001461939999999988, 0.00014620799999999837, 0.0001461809999999987, 0.00014620800000000184, 0.0001462220000000014, 0.0001462090000000013]</msg>
<status status="PASS" starttime="20201029 12:43:02.209" endtime="20201029 12:43:02.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.205" endtime="20201029 12:43:02.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.858" endtime="20201029 12:43:02.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.835" endtime="20201029 12:43:02.212"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:02.215" endtime="20201029 12:43:02.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.213" endtime="20201029 12:43:02.235"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.243" endtime="20201029 12:43:02.258"></status>
</kw>
<msg timestamp="20201029 12:43:02.259" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.241" endtime="20201029 12:43:02.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.261" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.260" endtime="20201029 12:43:02.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.262" endtime="20201029 12:43:02.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.239" endtime="20201029 12:43:02.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.237" endtime="20201029 12:43:02.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.272" endtime="20201029 12:43:02.564"></status>
</kw>
<msg timestamp="20201029 12:43:02.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017534083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017692014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:02.271" endtime="20201029 12:43:02.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017534083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017692014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:02.573" endtime="20201029 12:43:02.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.591" endtime="20201029 12:43:02.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.268" endtime="20201029 12:43:02.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.266" endtime="20201029 12:43:02.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:02.609" level="INFO">${PHILIP_RES} = [{'diff': 0.00015793100000000004}, {'diff': 0.00015680499999999944}, {'diff': 0.00015679199999999935}, {'diff': 0.00015677799999999978}, {'diff': 0.00015683300000000205}, {'diff': 0.000156805999999998...</msg>
<status status="PASS" starttime="20201029 12:43:02.598" endtime="20201029 12:43:02.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:02.627" level="INFO">${RESULT} = {'diff': [0.00015793100000000004, 0.00015680499999999944, 0.00015679199999999935, 0.00015677799999999978, 0.00015683300000000205, 0.00015680599999999892, 0.00015677799999999978, 0.00015672300000000097...</msg>
<status status="PASS" starttime="20201029 12:43:02.615" endtime="20201029 12:43:02.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.641" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:02.639" endtime="20201029 12:43:02.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.645" level="INFO">VALUE: [0.00015793100000000004, 0.00015680499999999944, 0.00015679199999999935, 0.00015677799999999978, 0.00015683300000000205, 0.00015680599999999892, 0.00015677799999999978, 0.00015672300000000097, 0.00015677799999999978, 0.00015677799999999978, 0.0001567640000000002, 0.0001567640000000002, 0.00015679200000000282, 0.0001567640000000002, 0.0001567640000000002, 0.00015677799999999978, 0.00015677799999999978, 0.0001567640000000002, 0.00015679099999999987, 0.0001567770000000003, 0.00015680599999999892, 0.0001567770000000003, 0.00015679200000000282, 0.0001567640000000002, 0.00015677799999999978, 0.0001567640000000002, 0.00015677799999999978, 0.0001568610000000012, 0.0001567640000000002, 0.0001567640000000002, 0.00015679099999999987, 0.00015677799999999978, 0.00015676399999999674, 0.00015681899999999901, 0.0001567640000000002, 0.00015677799999999978, 0.00015677699999999684, 0.00015679200000000282, 0.0001567640000000002, 0.00015676300000000074, 0.00015677799999999978, 0.0001567640000000002, 0.00015684700000000162, 0.00015679199999999935, 0.00015679199999999935, 0.00015675000000000064, 0.00015679199999999935, 0.00015679199999999935, 0.00015681899999999901, 0.00015679199999999935]</msg>
<status status="PASS" starttime="20201029 12:43:02.643" endtime="20201029 12:43:02.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.629" endtime="20201029 12:43:02.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.235" endtime="20201029 12:43:02.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.213" endtime="20201029 12:43:02.649"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:02.652" endtime="20201029 12:43:02.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.650" endtime="20201029 12:43:02.673"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.687" endtime="20201029 12:43:02.706"></status>
</kw>
<msg timestamp="20201029 12:43:02.706" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.684" endtime="20201029 12:43:02.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.710" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.708" endtime="20201029 12:43:02.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.712" endtime="20201029 12:43:02.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.680" endtime="20201029 12:43:02.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.677" endtime="20201029 12:43:02.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.726" endtime="20201029 12:43:03.014"></status>
</kw>
<msg timestamp="20201029 12:43:03.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024794125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024962917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:02.724" endtime="20201029 12:43:03.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024794125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024962917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:03.018" endtime="20201029 12:43:03.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.026" endtime="20201029 12:43:03.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.720" endtime="20201029 12:43:03.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.718" endtime="20201029 12:43:03.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:03.032" level="INFO">${PHILIP_RES} = [{'diff': 0.00016879200000000094}, {'diff': 0.00016768099999999939}, {'diff': 0.00016769399999999948}, {'diff': 0.00016762499999999764}, {'diff': 0.0001676389999999972}, {'diff': 0.0001676389999999972...</msg>
<status status="PASS" starttime="20201029 12:43:03.029" endtime="20201029 12:43:03.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:03.037" level="INFO">${RESULT} = {'diff': [0.00016879200000000094, 0.00016768099999999939, 0.00016769399999999948, 0.00016762499999999764, 0.0001676389999999972, 0.0001676389999999972, 0.0001676799999999999, 0.00016770800000000252, 0...</msg>
<status status="PASS" starttime="20201029 12:43:03.033" endtime="20201029 12:43:03.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.042" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:03.041" endtime="20201029 12:43:03.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.044" level="INFO">VALUE: [0.00016879200000000094, 0.00016768099999999939, 0.00016769399999999948, 0.00016762499999999764, 0.0001676389999999972, 0.0001676389999999972, 0.0001676799999999999, 0.00016770800000000252, 0.00016768100000000286, 0.0001676799999999999, 0.00016776399999999733, 0.00016765300000000025, 0.00016768099999999939, 0.00016769399999999948, 0.00016769499999999896, 0.00016770899999999853, 0.00016770799999999905, 0.00016773600000000166, 0.00016766699999999982, 0.00016769399999999948, 0.00016765300000000025, 0.00016769499999999896, 0.00016770799999999905, 0.0001676799999999999, 0.00016769400000000295, 0.00016768099999999939, 0.0001676799999999999, 0.00016770799999999905, 0.00016765300000000025, 0.00016768099999999939, 0.00016763900000000068, 0.00016768099999999939, 0.00016770799999999905, 0.00016770799999999905, 0.00016766699999999982, 0.00016768100000000286, 0.00016770799999999558, 0.0001676660000000038, 0.00016766699999999635, 0.00016769400000000295, 0.00016767999999999644, 0.00016775000000000123, 0.00016768099999999592, 0.00016762500000000458, 0.00016766699999999635, 0.00016762499999999764, 0.00016766699999999635, 0.00016768000000000338, 0.000167709000000002, 0.00016773600000000166]</msg>
<status status="PASS" starttime="20201029 12:43:03.043" endtime="20201029 12:43:03.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.038" endtime="20201029 12:43:03.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.674" endtime="20201029 12:43:03.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.649" endtime="20201029 12:43:03.046"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:03.048" endtime="20201029 12:43:03.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.047" endtime="20201029 12:43:03.068"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.076" endtime="20201029 12:43:03.094"></status>
</kw>
<msg timestamp="20201029 12:43:03.094" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.075" endtime="20201029 12:43:03.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.097" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.095" endtime="20201029 12:43:03.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.098" endtime="20201029 12:43:03.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.072" endtime="20201029 12:43:03.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.070" endtime="20201029 12:43:03.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.107" endtime="20201029 12:43:03.409"></status>
</kw>
<msg timestamp="20201029 12:43:03.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017592667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017772792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:03.105" endtime="20201029 12:43:03.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017592667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017772792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:03.419" endtime="20201029 12:43:03.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.437" endtime="20201029 12:43:03.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.103" endtime="20201029 12:43:03.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.101" endtime="20201029 12:43:03.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:03.446" level="INFO">${PHILIP_RES} = [{'diff': 0.00018012499999999973}, {'diff': 0.00017894400000000033}, {'diff': 0.0001789579999999999}, {'diff': 0.0001789449999999998}, {'diff': 0.00017893100000000023}, {'diff': 0.00017888899999999805...</msg>
<status status="PASS" starttime="20201029 12:43:03.443" endtime="20201029 12:43:03.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:03.450" level="INFO">${RESULT} = {'diff': [0.00018012499999999973, 0.00017894400000000033, 0.0001789579999999999, 0.0001789449999999998, 0.00017893100000000023, 0.00017888899999999805, 0.00017897199999999946, 0.0001789449999999998, 0...</msg>
<status status="PASS" starttime="20201029 12:43:03.447" endtime="20201029 12:43:03.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.454" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:03.453" endtime="20201029 12:43:03.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.457" level="INFO">VALUE: [0.00018012499999999973, 0.00017894400000000033, 0.0001789579999999999, 0.0001789449999999998, 0.00017893100000000023, 0.00017888899999999805, 0.00017897199999999946, 0.0001789449999999998, 0.00017893100000000023, 0.00017891599999999772, 0.00017894400000000033, 0.00017895899999999937, 0.00017897200000000293, 0.00017894400000000033, 0.00017897199999999946, 0.0001789449999999998, 0.00017902699999999827, 0.0001789579999999999, 0.00017894500000000327, 0.00017888900000000152, 0.00017897199999999946, 0.0001789579999999999, 0.00017893100000000023, 0.00017895899999999937, 0.00017888900000000152, 0.00017893000000000076, 0.0001789449999999998, 0.00017901399999999817, 0.0001789999999999986, 0.00017894400000000033, 0.0001789579999999999, 0.0001789579999999999, 0.00017898700000000198, 0.0001789579999999999, 0.00017895899999999937, 0.00017891700000000066, 0.00017893000000000076, 0.00017900000000000207, 0.00017897199999999946, 0.00017893100000000023, 0.00017893100000000023, 0.0001789579999999999, 0.00017900000000000207, 0.00017893100000000023, 0.00017894399999999686, 0.00017894400000000033, 0.00017893100000000023, 0.00017894500000000327, 0.00017894400000000033, 0.00017891600000000119]</msg>
<status status="PASS" starttime="20201029 12:43:03.455" endtime="20201029 12:43:03.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.451" endtime="20201029 12:43:03.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.069" endtime="20201029 12:43:03.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.046" endtime="20201029 12:43:03.459"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:03.461" endtime="20201029 12:43:03.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.460" endtime="20201029 12:43:03.481"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.489" endtime="20201029 12:43:03.508"></status>
</kw>
<msg timestamp="20201029 12:43:03.508" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.488" endtime="20201029 12:43:03.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.511" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.509" endtime="20201029 12:43:03.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.512" endtime="20201029 12:43:03.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.485" endtime="20201029 12:43:03.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.483" endtime="20201029 12:43:03.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.522" endtime="20201029 12:43:03.807"></status>
</kw>
<msg timestamp="20201029 12:43:03.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017520556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01771225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:03.520" endtime="20201029 12:43:03.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017520556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01771225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:03.811" endtime="20201029 12:43:03.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.819" endtime="20201029 12:43:03.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.517" endtime="20201029 12:43:03.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.516" endtime="20201029 12:43:03.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:03.826" level="INFO">${PHILIP_RES} = [{'diff': 0.0001916939999999992}, {'diff': 0.00019055500000000197}, {'diff': 0.00019055500000000197}, {'diff': 0.0001905549999999985}, {'diff': 0.00019056999999999755}, {'diff': 0.00019054200000000188...</msg>
<status status="PASS" starttime="20201029 12:43:03.822" endtime="20201029 12:43:03.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:03.830" level="INFO">${RESULT} = {'diff': [0.0001916939999999992, 0.00019055500000000197, 0.00019055500000000197, 0.0001905549999999985, 0.00019056999999999755, 0.00019054200000000188, 0.00019052799999999884, 0.0001905549999999985, 0...</msg>
<status status="PASS" starttime="20201029 12:43:03.826" endtime="20201029 12:43:03.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.834" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:03.833" endtime="20201029 12:43:03.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.836" level="INFO">VALUE: [0.0001916939999999992, 0.00019055500000000197, 0.00019055500000000197, 0.0001905549999999985, 0.00019056999999999755, 0.00019054200000000188, 0.00019052799999999884, 0.0001905549999999985, 0.00019056900000000154, 0.0001905830000000011, 0.00019055600000000145, 0.00019056999999999755, 0.00019057000000000102, 0.00019055600000000145, 0.00019059800000000016, 0.00019055600000000145, 0.00019054200000000188, 0.00019055599999999798, 0.00019055599999999798, 0.00019061199999999973, 0.00019055600000000145, 0.00019056999999999755, 0.00019057000000000102, 0.00019055600000000145, 0.00019055600000000145, 0.00019055599999999798, 0.00019058400000000059, 0.00019057000000000102, 0.00019058400000000059, 0.00019055599999999798, 0.00019055600000000145, 0.00019055600000000145, 0.00019047200000000056, 0.00019061099999999678, 0.00019058400000000059, 0.00019059700000000068, 0.00019056999999999755, 0.00019055600000000145, 0.00019054200000000188, 0.00019056999999999755, 0.00019055600000000145, 0.00019057000000000102, 0.00019057000000000102, 0.00019055599999999798, 0.00019056900000000154, 0.00019055500000000197, 0.0001905419999999984, 0.0001905549999999985, 0.00019055500000000197, 0.00019055500000000197]</msg>
<status status="PASS" starttime="20201029 12:43:03.835" endtime="20201029 12:43:03.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.830" endtime="20201029 12:43:03.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.482" endtime="20201029 12:43:03.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.459" endtime="20201029 12:43:03.839"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:03.841" endtime="20201029 12:43:03.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.840" endtime="20201029 12:43:03.861"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.869" endtime="20201029 12:43:03.889"></status>
</kw>
<msg timestamp="20201029 12:43:03.889" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.868" endtime="20201029 12:43:03.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.891" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.890" endtime="20201029 12:43:03.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.893" endtime="20201029 12:43:03.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.865" endtime="20201029 12:43:03.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.863" endtime="20201029 12:43:03.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.902" endtime="20201029 12:43:04.188"></status>
</kw>
<msg timestamp="20201029 12:43:04.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018015083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018218681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:03.900" endtime="20201029 12:43:04.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018015083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018218681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.192" endtime="20201029 12:43:04.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.200" endtime="20201029 12:43:04.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.897" endtime="20201029 12:43:04.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.896" endtime="20201029 12:43:04.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:04.206" level="INFO">${PHILIP_RES} = [{'diff': 0.00020359799999999928}, {'diff': 0.0002025550000000001}, {'diff': 0.00020251400000000086}, {'diff': 0.00020255600000000304}, {'diff': 0.00020261099999999838}, {'diff': 0.000202542}, {'diff'...</msg>
<status status="PASS" starttime="20201029 12:43:04.203" endtime="20201029 12:43:04.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:04.211" level="INFO">${RESULT} = {'diff': [0.00020359799999999928, 0.0002025550000000001, 0.00020251400000000086, 0.00020255600000000304, 0.00020261099999999838, 0.000202542, 0.00020252700000000096, 0.000202542, 0.0002025559999999995...</msg>
<status status="PASS" starttime="20201029 12:43:04.207" endtime="20201029 12:43:04.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.216" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:04.215" endtime="20201029 12:43:04.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.218" level="INFO">VALUE: [0.00020359799999999928, 0.0002025550000000001, 0.00020251400000000086, 0.00020255600000000304, 0.00020261099999999838, 0.000202542, 0.00020252700000000096, 0.000202542, 0.00020255599999999957, 0.0002025000000000013, 0.00020252700000000096, 0.00020252799999999696, 0.00020252800000000043, 0.00020259700000000228, 0.0002025550000000001, 0.000202542, 0.000202542, 0.00020255599999999957, 0.00020254100000000053, 0.00020252800000000043, 0.00020248600000000172, 0.000202542, 0.00020261099999999838, 0.000202542, 0.000202542, 0.000202542, 0.00020254099999999706, 0.0002025550000000001, 0.00020256999999999914, 0.00020252799999999696, 0.0002025550000000001, 0.00020252800000000043, 0.00020256999999999914, 0.00020255600000000304, 0.0002025000000000013, 0.00020254100000000053, 0.00020249999999999782, 0.00020248600000000172, 0.000202542, 0.00020254100000000053, 0.000202542, 0.0002025969999999988, 0.000202542, 0.00020254100000000053, 0.000202542, 0.00020252800000000043, 0.000202542, 0.00020254100000000053, 0.00020255599999999957, 0.00020255599999999957]</msg>
<status status="PASS" starttime="20201029 12:43:04.217" endtime="20201029 12:43:04.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.212" endtime="20201029 12:43:04.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.862" endtime="20201029 12:43:04.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.839" endtime="20201029 12:43:04.220"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:04.222" endtime="20201029 12:43:04.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.221" endtime="20201029 12:43:04.242"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.251" endtime="20201029 12:43:04.270"></status>
</kw>
<msg timestamp="20201029 12:43:04.271" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.249" endtime="20201029 12:43:04.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.273" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.272" endtime="20201029 12:43:04.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.274" endtime="20201029 12:43:04.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.246" endtime="20201029 12:43:04.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.244" endtime="20201029 12:43:04.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.283" endtime="20201029 12:43:04.570"></status>
</kw>
<msg timestamp="20201029 12:43:04.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017835903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018051903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.282" endtime="20201029 12:43:04.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017835903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018051903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.574" endtime="20201029 12:43:04.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.582" endtime="20201029 12:43:04.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.279" endtime="20201029 12:43:04.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.278" endtime="20201029 12:43:04.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:04.589" level="INFO">${PHILIP_RES} = [{'diff': 0.0002160000000000009}, {'diff': 0.00021486100000000022}, {'diff': 0.00021486100000000022}, {'diff': 0.00021482000000000098}, {'diff': 0.00021483300000000108}, {'diff': 0.0002147909999999989...</msg>
<status status="PASS" starttime="20201029 12:43:04.585" endtime="20201029 12:43:04.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:04.593" level="INFO">${RESULT} = {'diff': [0.0002160000000000009, 0.00021486100000000022, 0.00021486100000000022, 0.00021482000000000098, 0.00021483300000000108, 0.0002147909999999989, 0.00021486100000000022, 0.00021484700000000065, ...</msg>
<status status="PASS" starttime="20201029 12:43:04.590" endtime="20201029 12:43:04.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.597" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:04.596" endtime="20201029 12:43:04.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.599" level="INFO">VALUE: [0.0002160000000000009, 0.00021486100000000022, 0.00021486100000000022, 0.00021482000000000098, 0.00021483300000000108, 0.0002147909999999989, 0.00021486100000000022, 0.00021484700000000065, 0.00021486100000000022, 0.0002148060000000014, 0.0002148749999999998, 0.00021486100000000022, 0.00021484700000000065, 0.00021486100000000022, 0.00021486100000000022, 0.00021484699999999718, 0.00021484800000000012, 0.0002148749999999998, 0.00021484699999999718, 0.0002149169999999985, 0.00021491700000000197, 0.0002148749999999998, 0.00021484700000000065, 0.00021491700000000197, 0.0002148619999999997, 0.00021484700000000065, 0.00021484699999999718, 0.0002148749999999998, 0.00021486100000000022, 0.00021486100000000022, 0.00021493000000000206, 0.00021486200000000316, 0.00021484700000000065, 0.00021486100000000022, 0.00021484700000000065, 0.00021484700000000065, 0.00021484699999999718, 0.00021486100000000022, 0.0002147779999999988, 0.00021486099999999675, 0.00021486100000000022, 0.00021486100000000022, 0.00021484700000000065, 0.00021484700000000065, 0.00021484699999999718, 0.00021484800000000012, 0.0002147909999999989, 0.0002148749999999998, 0.00021486100000000022, 0.00021486100000000022]</msg>
<status status="PASS" starttime="20201029 12:43:04.598" endtime="20201029 12:43:04.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.594" endtime="20201029 12:43:04.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.243" endtime="20201029 12:43:04.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.220" endtime="20201029 12:43:04.601"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:04.604" endtime="20201029 12:43:04.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.602" endtime="20201029 12:43:04.624"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.632" endtime="20201029 12:43:04.652"></status>
</kw>
<msg timestamp="20201029 12:43:04.653" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.630" endtime="20201029 12:43:04.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.655" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.654" endtime="20201029 12:43:04.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.656" endtime="20201029 12:43:04.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.628" endtime="20201029 12:43:04.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.626" endtime="20201029 12:43:04.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.667" endtime="20201029 12:43:04.956"></status>
</kw>
<msg timestamp="20201029 12:43:04.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01801475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018243444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:04.665" endtime="20201029 12:43:04.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01801475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018243444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:04.960" endtime="20201029 12:43:04.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.968" endtime="20201029 12:43:04.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.662" endtime="20201029 12:43:04.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.661" endtime="20201029 12:43:04.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:04.975" level="INFO">${PHILIP_RES} = [{'diff': 0.0002286940000000015}, {'diff': 0.00022752800000000115}, {'diff': 0.0002274719999999994}, {'diff': 0.00022754200000000072}, {'diff': 0.00022755600000000029}, {'diff': 0.00022754100000000124...</msg>
<status status="PASS" starttime="20201029 12:43:04.971" endtime="20201029 12:43:04.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:04.979" level="INFO">${RESULT} = {'diff': [0.0002286940000000015, 0.00022752800000000115, 0.0002274719999999994, 0.00022754200000000072, 0.00022755600000000029, 0.00022754100000000124, 0.0002275550000000008, 0.00022752800000000115, 0...</msg>
<status status="PASS" starttime="20201029 12:43:04.976" endtime="20201029 12:43:04.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.983" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:04.982" endtime="20201029 12:43:04.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.985" level="INFO">VALUE: [0.0002286940000000015, 0.00022752800000000115, 0.0002274719999999994, 0.00022754200000000072, 0.00022755600000000029, 0.00022754100000000124, 0.0002275550000000008, 0.00022752800000000115, 0.00022755600000000029, 0.00022754200000000072, 0.000227500000000002, 0.00022754200000000072, 0.0002275269999999982, 0.00022752799999999768, 0.00022751400000000158, 0.00022751400000000158, 0.00022752800000000115, 0.0002275139999999981, 0.00022754099999999777, 0.00022752700000000167, 0.00022759699999999952, 0.00022752800000000115, 0.00022755600000000029, 0.0002275139999999981, 0.00022748600000000244, 0.00022752700000000167, 0.00022745799999999983, 0.00022748599999999897, 0.00022758299999999995, 0.00022751400000000158, 0.00022754200000000072, 0.0002275139999999981, 0.0002275269999999982, 0.00022754100000000124, 0.00022748699999999844, 0.0002275139999999981, 0.0002275139999999981, 0.00022752800000000115, 0.00022756999999999986, 0.00022752700000000167, 0.00022752799999999768, 0.00022751400000000158, 0.00022752800000000115, 0.00022752800000000115, 0.00022744400000000026, 0.0002275139999999981, 0.0002275269999999982, 0.00022751400000000158, 0.00022752800000000115, 0.00022754199999999725]</msg>
<status status="PASS" starttime="20201029 12:43:04.984" endtime="20201029 12:43:04.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.980" endtime="20201029 12:43:04.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.624" endtime="20201029 12:43:04.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.602" endtime="20201029 12:43:04.988"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:04.990" endtime="20201029 12:43:05.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.989" endtime="20201029 12:43:05.010"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.019" endtime="20201029 12:43:05.040"></status>
</kw>
<msg timestamp="20201029 12:43:05.040" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.017" endtime="20201029 12:43:05.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.042" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.041" endtime="20201029 12:43:05.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.044" endtime="20201029 12:43:05.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.015" endtime="20201029 12:43:05.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.013" endtime="20201029 12:43:05.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.053" endtime="20201029 12:43:05.338"></status>
</kw>
<msg timestamp="20201029 12:43:05.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017852958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018094639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.051" endtime="20201029 12:43:05.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017852958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018094639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.342" endtime="20201029 12:43:05.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.350" endtime="20201029 12:43:05.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.049" endtime="20201029 12:43:05.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.047" endtime="20201029 12:43:05.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:05.357" level="INFO">${PHILIP_RES} = [{'diff': 0.00024168100000000053}, {'diff': 0.0002405559999999994}, {'diff': 0.0002405409999999969}, {'diff': 0.0002405559999999994}, {'diff': 0.00024054100000000037}, {'diff': 0.00024054100000000037}...</msg>
<status status="PASS" starttime="20201029 12:43:05.354" endtime="20201029 12:43:05.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:05.362" level="INFO">${RESULT} = {'diff': [0.00024168100000000053, 0.0002405559999999994, 0.0002405409999999969, 0.0002405559999999994, 0.00024054100000000037, 0.00024054100000000037, 0.00024054199999999984, 0.00024054100000000037, 0...</msg>
<status status="PASS" starttime="20201029 12:43:05.358" endtime="20201029 12:43:05.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.366" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:05.365" endtime="20201029 12:43:05.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.369" level="INFO">VALUE: [0.00024168100000000053, 0.0002405559999999994, 0.0002405409999999969, 0.0002405559999999994, 0.00024054100000000037, 0.00024054100000000037, 0.00024054199999999984, 0.00024054100000000037, 0.00024054199999999984, 0.00024054199999999984, 0.00024050000000000113, 0.00024055600000000288, 0.00024055499999999994, 0.00024055499999999994, 0.00024050000000000113, 0.00024055499999999994, 0.00024054199999999984, 0.00024054199999999984, 0.00024055499999999994, 0.00024054199999999984, 0.00024059700000000211, 0.0002405559999999994, 0.00024054199999999984, 0.0002405409999999969, 0.00024058400000000202, 0.00024054199999999984, 0.00024054100000000037, 0.0002405420000000033, 0.00024054100000000037, 0.00024054199999999984, 0.00024054199999999984, 0.0002405140000000007, 0.00024054199999999984, 0.0002405559999999994, 0.00024052800000000027, 0.00024054199999999984, 0.00024054100000000037, 0.00024054199999999984, 0.0002405559999999994, 0.00024054100000000037, 0.00024055600000000288, 0.00024054100000000037, 0.00024054199999999984, 0.0002405559999999994, 0.00024054100000000037, 0.0002405140000000007, 0.0002405559999999994, 0.00024045800000000242, 0.00024059699999999865, 0.00024054199999999984]</msg>
<status status="PASS" starttime="20201029 12:43:05.367" endtime="20201029 12:43:05.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.363" endtime="20201029 12:43:05.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.011" endtime="20201029 12:43:05.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.988" endtime="20201029 12:43:05.370"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:05.373" endtime="20201029 12:43:05.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.371" endtime="20201029 12:43:05.393"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.401" endtime="20201029 12:43:05.423"></status>
</kw>
<msg timestamp="20201029 12:43:05.423" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.399" endtime="20201029 12:43:05.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.425" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.424" endtime="20201029 12:43:05.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.427" endtime="20201029 12:43:05.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.397" endtime="20201029 12:43:05.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.395" endtime="20201029 12:43:05.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.436" endtime="20201029 12:43:05.722"></status>
</kw>
<msg timestamp="20201029 12:43:05.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017869569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018124653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.434" endtime="20201029 12:43:05.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017869569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018124653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.726" endtime="20201029 12:43:05.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.734" endtime="20201029 12:43:05.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.432" endtime="20201029 12:43:05.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.430" endtime="20201029 12:43:05.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:05.741" level="INFO">${PHILIP_RES} = [{'diff': 0.00025508400000000264}, {'diff': 0.00025400000000000075}, {'diff': 0.0002539440000000025}, {'diff': 0.0002539579999999986}, {'diff': 0.00025391699999999934}, {'diff': 0.00025391699999999934...</msg>
<status status="PASS" starttime="20201029 12:43:05.738" endtime="20201029 12:43:05.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:05.745" level="INFO">${RESULT} = {'diff': [0.00025508400000000264, 0.00025400000000000075, 0.0002539440000000025, 0.0002539579999999986, 0.00025391699999999934, 0.00025391699999999934, 0.0002539309999999989, 0.00025394500000000195, 0...</msg>
<status status="PASS" starttime="20201029 12:43:05.742" endtime="20201029 12:43:05.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.749" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:05.748" endtime="20201029 12:43:05.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.752" level="INFO">VALUE: [0.00025508400000000264, 0.00025400000000000075, 0.0002539440000000025, 0.0002539579999999986, 0.00025391699999999934, 0.00025391699999999934, 0.0002539309999999989, 0.00025394500000000195, 0.0002539300000000029, 0.00025392999999999943, 0.00025392999999999943, 0.000253943999999999, 0.0002538890000000002, 0.0002539170000000028, 0.0002539170000000028, 0.00025391699999999934, 0.00025392999999999943, 0.00025397199999999814, 0.00025391599999999986, 0.00025390300000000324, 0.00025394500000000195, 0.0002539590000000015, 0.00025397199999999814, 0.00025401300000000085, 0.00025392999999999943, 0.0002539440000000025, 0.0002539720000000016, 0.00025394500000000195, 0.0002539309999999989, 0.0002540140000000003, 0.00025391699999999934, 0.00025392999999999943, 0.00025387500000000063, 0.00025391599999999986, 0.000253943999999999, 0.0002539309999999989, 0.0002539309999999989, 0.0002539730000000011, 0.0002539440000000025, 0.00025391599999999986, 0.00025392999999999943, 0.00025391599999999986, 0.0002539309999999989, 0.00025390300000000324, 0.00025391699999999934, 0.00025387500000000063, 0.0002539309999999989, 0.0002539579999999986, 0.00025394400000000594, 0.00025392999999999943]</msg>
<status status="PASS" starttime="20201029 12:43:05.750" endtime="20201029 12:43:05.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.746" endtime="20201029 12:43:05.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.393" endtime="20201029 12:43:05.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.371" endtime="20201029 12:43:05.762"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:05.765" endtime="20201029 12:43:05.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.763" endtime="20201029 12:43:05.785"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.793" endtime="20201029 12:43:05.815"></status>
</kw>
<msg timestamp="20201029 12:43:05.815" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.791" endtime="20201029 12:43:05.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.818" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.816" endtime="20201029 12:43:05.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.819" endtime="20201029 12:43:05.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.789" endtime="20201029 12:43:05.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.787" endtime="20201029 12:43:05.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.829" endtime="20201029 12:43:06.115"></status>
</kw>
<msg timestamp="20201029 12:43:06.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017558792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017827639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.827" endtime="20201029 12:43:06.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017558792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017827639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.119" endtime="20201029 12:43:06.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.127" endtime="20201029 12:43:06.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.825" endtime="20201029 12:43:06.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.823" endtime="20201029 12:43:06.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:06.134" level="INFO">${PHILIP_RES} = [{'diff': 0.00026884699999999914}, {'diff': 0.000267721999999998}, {'diff': 0.00026770799999999845}, {'diff': 0.00026765200000000017}, {'diff': 0.0002676799999999993}, {'diff': 0.00026765299999999964}...</msg>
<status status="PASS" starttime="20201029 12:43:06.130" endtime="20201029 12:43:06.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:06.138" level="INFO">${RESULT} = {'diff': [0.00026884699999999914, 0.000267721999999998, 0.00026770799999999845, 0.00026765200000000017, 0.0002676799999999993, 0.00026765299999999964, 0.00026766599999999974, 0.0002676670000000027, 0....</msg>
<status status="PASS" starttime="20201029 12:43:06.135" endtime="20201029 12:43:06.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.142" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:06.141" endtime="20201029 12:43:06.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.144" level="INFO">VALUE: [0.00026884699999999914, 0.000267721999999998, 0.00026770799999999845, 0.00026765200000000017, 0.0002676799999999993, 0.00026765299999999964, 0.00026766599999999974, 0.0002676670000000027, 0.00026765299999999964, 0.00026765299999999964, 0.00026765299999999964, 0.00026763900000000007, 0.00026765299999999964, 0.0002676669999999992, 0.0002676670000000027, 0.0002676670000000027, 0.00026765299999999964, 0.0002676669999999992, 0.0002676250000000005, 0.0002676669999999992, 0.00026773600000000106, 0.00026765299999999964, 0.0002676530000000031, 0.0002676809999999988, 0.0002676669999999992, 0.0002676669999999992, 0.00026765299999999964, 0.0002676669999999992, 0.00026763900000000007, 0.0002676670000000027, 0.0002676939999999989, 0.00026765299999999964, 0.0002676799999999993, 0.0002676669999999992, 0.00026765299999999964, 0.00026763900000000007, 0.00026765299999999964, 0.00026765200000000017, 0.00026766599999999974, 0.00026766599999999974, 0.0002676380000000006, 0.0002676799999999993, 0.00026766599999999974, 0.00026765200000000017, 0.00026765200000000017, 0.00026763900000000007, 0.00026766599999999627, 0.00026766599999999974, 0.00026765299999999964, 0.00026765299999999964]</msg>
<status status="PASS" starttime="20201029 12:43:06.143" endtime="20201029 12:43:06.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.139" endtime="20201029 12:43:06.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.785" endtime="20201029 12:43:06.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.763" endtime="20201029 12:43:06.147"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:06.149" endtime="20201029 12:43:06.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.148" endtime="20201029 12:43:06.169"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.177" endtime="20201029 12:43:06.200"></status>
</kw>
<msg timestamp="20201029 12:43:06.201" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.176" endtime="20201029 12:43:06.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.203" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.202" endtime="20201029 12:43:06.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.204" endtime="20201029 12:43:06.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.173" endtime="20201029 12:43:06.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.171" endtime="20201029 12:43:06.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.213" endtime="20201029 12:43:06.501"></status>
</kw>
<msg timestamp="20201029 12:43:06.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017813278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018096181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.212" endtime="20201029 12:43:06.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017813278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018096181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.505" endtime="20201029 12:43:06.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.514" endtime="20201029 12:43:06.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.209" endtime="20201029 12:43:06.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.208" endtime="20201029 12:43:06.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:06.520" level="INFO">${PHILIP_RES} = [{'diff': 0.000282903000000001}, {'diff': 0.00028175000000000075}, {'diff': 0.00028169500000000194}, {'diff': 0.0002817499999999973}, {'diff': 0.00028172199999999814}, {'diff': 0.0002817220000000016},...</msg>
<status status="PASS" starttime="20201029 12:43:06.517" endtime="20201029 12:43:06.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:06.525" level="INFO">${RESULT} = {'diff': [0.000282903000000001, 0.00028175000000000075, 0.00028169500000000194, 0.0002817499999999973, 0.00028172199999999814, 0.0002817220000000016, 0.0002817220000000016, 0.0002817220000000016, 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:06.521" endtime="20201029 12:43:06.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.530" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:06.529" endtime="20201029 12:43:06.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.532" level="INFO">VALUE: [0.000282903000000001, 0.00028175000000000075, 0.00028169500000000194, 0.0002817499999999973, 0.00028172199999999814, 0.0002817220000000016, 0.0002817220000000016, 0.0002817220000000016, 0.00028172199999999814, 0.00028170799999999857, 0.0002817220000000016, 0.00028170800000000204, 0.0002817220000000016, 0.0002817640000000003, 0.0002817640000000003, 0.0002817640000000003, 0.00028175000000000075, 0.0002817220000000016, 0.0002817360000000012, 0.0002817359999999977, 0.00028170799999999857, 0.00028175000000000075, 0.0002817220000000016, 0.00028175000000000075, 0.0002817360000000012, 0.00028172199999999814, 0.00028172199999999814, 0.00028180499999999956, 0.00028175000000000075, 0.00028169500000000194, 0.00028172199999999814, 0.0002817499999999973, 0.0002816809999999989, 0.000281791, 0.0002817360000000012, 0.0002817359999999977, 0.0002817359999999977, 0.000281693999999999, 0.0002817220000000016, 0.000281791, 0.00028170799999999857, 0.00028172199999999814, 0.0002817360000000012, 0.00028175000000000075, 0.0002817359999999977, 0.00028173600000000465, 0.00028173600000000465, 0.0002817500000000042, 0.00028173600000000465, 0.0002817499999999973]</msg>
<status status="PASS" starttime="20201029 12:43:06.531" endtime="20201029 12:43:06.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.526" endtime="20201029 12:43:06.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.170" endtime="20201029 12:43:06.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.147" endtime="20201029 12:43:06.534"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:06.536" endtime="20201029 12:43:06.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.535" endtime="20201029 12:43:06.556"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.564" endtime="20201029 12:43:06.588"></status>
</kw>
<msg timestamp="20201029 12:43:06.589" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.563" endtime="20201029 12:43:06.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.591" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.590" endtime="20201029 12:43:06.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.592" endtime="20201029 12:43:06.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.560" endtime="20201029 12:43:06.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.558" endtime="20201029 12:43:06.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.601" endtime="20201029 12:43:06.890"></status>
</kw>
<msg timestamp="20201029 12:43:06.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017873083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018170389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.600" endtime="20201029 12:43:06.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017873083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018170389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.894" endtime="20201029 12:43:06.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.902" endtime="20201029 12:43:06.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.597" endtime="20201029 12:43:06.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.595" endtime="20201029 12:43:06.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:06.909" level="INFO">${PHILIP_RES} = [{'diff': 0.0002973059999999972}, {'diff': 0.000296165999999997}, {'diff': 0.0002961660000000005}, {'diff': 0.00029616699999999996}, {'diff': 0.00029616699999999996}, {'diff': 0.00029616699999999996},...</msg>
<status status="PASS" starttime="20201029 12:43:06.905" endtime="20201029 12:43:06.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:06.913" level="INFO">${RESULT} = {'diff': [0.0002973059999999972, 0.000296165999999997, 0.0002961660000000005, 0.00029616699999999996, 0.00029616699999999996, 0.00029616699999999996, 0.000296165999999997, 0.0002961660000000005, 0.000...</msg>
<status status="PASS" starttime="20201029 12:43:06.910" endtime="20201029 12:43:06.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.918" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:06.916" endtime="20201029 12:43:06.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.920" level="INFO">VALUE: [0.0002973059999999972, 0.000296165999999997, 0.0002961660000000005, 0.00029616699999999996, 0.00029616699999999996, 0.00029616699999999996, 0.000296165999999997, 0.0002961660000000005, 0.0002961530000000004, 0.00029616699999999996, 0.00029616699999999996, 0.0002961379999999979, 0.0002960980000000016, 0.00029616699999999996, 0.0002961530000000004, 0.00029613899999999735, 0.0002961530000000004, 0.00029616699999999996, 0.0002961530000000004, 0.00029619500000000257, 0.00029623599999999833, 0.0002961939999999996, 0.00029616699999999996, 0.00029616699999999996, 0.00029622199999999876, 0.00029618000000000005, 0.00029616699999999996, 0.0002961530000000004, 0.00029616699999999996, 0.000296165999999997, 0.00029618000000000005, 0.0002961530000000004, 0.00029616699999999996, 0.0002961530000000004, 0.00029615199999999745, 0.0002961530000000004, 0.00029618099999999953, 0.0002961109999999982, 0.00029623599999999833, 0.0002961660000000005, 0.00029616699999999996, 0.0002961390000000008, 0.00029616699999999996, 0.0002961660000000005, 0.0002961660000000005, 0.00029616699999999996, 0.00029618099999999953, 0.00029618000000000005, 0.0002961939999999996, 0.00029616699999999996]</msg>
<status status="PASS" starttime="20201029 12:43:06.919" endtime="20201029 12:43:06.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.914" endtime="20201029 12:43:06.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.557" endtime="20201029 12:43:06.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.534" endtime="20201029 12:43:06.922"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:06.925" endtime="20201029 12:43:06.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.923" endtime="20201029 12:43:06.945"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.953" endtime="20201029 12:43:06.978"></status>
</kw>
<msg timestamp="20201029 12:43:06.979" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.952" endtime="20201029 12:43:06.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.981" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.980" endtime="20201029 12:43:06.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.982" endtime="20201029 12:43:06.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.949" endtime="20201029 12:43:06.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.947" endtime="20201029 12:43:06.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.992" endtime="20201029 12:43:07.278"></status>
</kw>
<msg timestamp="20201029 12:43:07.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017607514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017919625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.991" endtime="20201029 12:43:07.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017607514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017919625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.282" endtime="20201029 12:43:07.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.290" endtime="20201029 12:43:07.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.988" endtime="20201029 12:43:07.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.986" endtime="20201029 12:43:07.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:07.297" level="INFO">${PHILIP_RES} = [{'diff': 0.00031211100000000033}, {'diff': 0.00031095899999999954}, {'diff': 0.0003109440000000005}, {'diff': 0.00031094499999999997}, {'diff': 0.0003109440000000005}, {'diff': 0.00031094499999999997...</msg>
<status status="PASS" starttime="20201029 12:43:07.293" endtime="20201029 12:43:07.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:07.301" level="INFO">${RESULT} = {'diff': [0.00031211100000000033, 0.00031095899999999954, 0.0003109440000000005, 0.00031094499999999997, 0.0003109440000000005, 0.00031094499999999997, 0.0003109440000000005, 0.00031095800000000007, 0...</msg>
<status status="PASS" starttime="20201029 12:43:07.298" endtime="20201029 12:43:07.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.305" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:07.304" endtime="20201029 12:43:07.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.307" level="INFO">VALUE: [0.00031211100000000033, 0.00031095899999999954, 0.0003109440000000005, 0.00031094499999999997, 0.0003109440000000005, 0.00031094499999999997, 0.0003109440000000005, 0.00031095800000000007, 0.00031095800000000007, 0.00031095800000000007, 0.00031095899999999954, 0.00031100000000000225, 0.0003109029999999978, 0.0003109440000000005, 0.0003109729999999991, 0.0003110140000000018, 0.0003109999999999988, 0.00031092999999999746, 0.00031094499999999997, 0.0003109440000000005, 0.0003109310000000004, 0.0003109029999999978, 0.00031097199999999964, 0.00031090300000000126, 0.00031097199999999964, 0.00031094499999999997, 0.00031097199999999964, 0.00031095899999999954, 0.00031095800000000007, 0.00031094499999999997, 0.00031095800000000007, 0.00031090300000000126, 0.0003109720000000031, 0.00031091700000000083, 0.00031094399999999703, 0.00031095800000000007, 0.0003109440000000005, 0.00031093000000000093, 0.00031097199999999964, 0.00031095800000000007, 0.0003109720000000031, 0.00031095800000000007, 0.0003109310000000004, 0.0003109999999999988, 0.0003109870000000056, 0.00031090300000000126, 0.00031090300000000126, 0.0003109859999999992, 0.00031102800000000486, 0.00031097199999999964]</msg>
<status status="PASS" starttime="20201029 12:43:07.306" endtime="20201029 12:43:07.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.302" endtime="20201029 12:43:07.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.946" endtime="20201029 12:43:07.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.923" endtime="20201029 12:43:07.310"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:07.312" endtime="20201029 12:43:07.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.311" endtime="20201029 12:43:07.332"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.340" endtime="20201029 12:43:07.365"></status>
</kw>
<msg timestamp="20201029 12:43:07.365" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.339" endtime="20201029 12:43:07.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.368" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.367" endtime="20201029 12:43:07.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.369" endtime="20201029 12:43:07.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.336" endtime="20201029 12:43:07.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.334" endtime="20201029 12:43:07.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.378" endtime="20201029 12:43:07.670"></status>
</kw>
<msg timestamp="20201029 12:43:07.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017641736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017968986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.377" endtime="20201029 12:43:07.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017641736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017968986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.674" endtime="20201029 12:43:07.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.682" endtime="20201029 12:43:07.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.374" endtime="20201029 12:43:07.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.372" endtime="20201029 12:43:07.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:07.688" level="INFO">${PHILIP_RES} = [{'diff': 0.0003272499999999977}, {'diff': 0.00032604099999999914}, {'diff': 0.0003260970000000009}, {'diff': 0.0003260970000000009}, {'diff': 0.00032606999999999775}, {'diff': 0.00032609800000000036}...</msg>
<status status="PASS" starttime="20201029 12:43:07.685" endtime="20201029 12:43:07.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:07.693" level="INFO">${RESULT} = {'diff': [0.0003272499999999977, 0.00032604099999999914, 0.0003260970000000009, 0.0003260970000000009, 0.00032606999999999775, 0.00032609800000000036, 0.0003260840000000008, 0.0003260840000000008, 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:07.689" endtime="20201029 12:43:07.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.698" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:07.696" endtime="20201029 12:43:07.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.700" level="INFO">VALUE: [0.0003272499999999977, 0.00032604099999999914, 0.0003260970000000009, 0.0003260970000000009, 0.00032606999999999775, 0.00032609800000000036, 0.0003260840000000008, 0.0003260840000000008, 0.00032602799999999904, 0.0003261389999999996, 0.0003260970000000009, 0.00032608299999999785, 0.0003260700000000012, 0.0003260830000000013, 0.0003260969999999974, 0.0003260970000000009, 0.00032611100000000046, 0.00032611100000000046, 0.00032608299999999785, 0.0003260830000000013, 0.0003260970000000009, 0.0003260970000000009, 0.00032608299999999785, 0.0003260970000000009, 0.0003260840000000008, 0.00032606999999999775, 0.0003261389999999996, 0.00032609800000000036, 0.0003260840000000008, 0.00032609800000000036, 0.00032611100000000046, 0.00032608299999999785, 0.0003260830000000013, 0.0003260830000000013, 0.0003260970000000009, 0.00032608299999999785, 0.00032611100000000046, 0.0003260830000000013, 0.00032611100000000046, 0.0003260689999999983, 0.00032608299999999785, 0.0003260270000000065, 0.0003260830000000048, 0.00032609700000000436, 0.0003260419999999986, 0.0003260549999999987, 0.0003260839999999973, 0.0003260559999999982, 0.0003260700000000047, 0.00032608400000000426]</msg>
<status status="PASS" starttime="20201029 12:43:07.699" endtime="20201029 12:43:07.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.694" endtime="20201029 12:43:07.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.333" endtime="20201029 12:43:07.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.310" endtime="20201029 12:43:07.702"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:07.704" endtime="20201029 12:43:07.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.703" endtime="20201029 12:43:07.724"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.732" endtime="20201029 12:43:07.758"></status>
</kw>
<msg timestamp="20201029 12:43:07.759" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.731" endtime="20201029 12:43:07.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.761" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.760" endtime="20201029 12:43:07.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.762" endtime="20201029 12:43:07.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.728" endtime="20201029 12:43:07.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.726" endtime="20201029 12:43:07.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.772" endtime="20201029 12:43:08.058"></status>
</kw>
<msg timestamp="20201029 12:43:08.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01757525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017917958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:07.770" endtime="20201029 12:43:08.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01757525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017917958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:08.062" endtime="20201029 12:43:08.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.071" endtime="20201029 12:43:08.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.767" endtime="20201029 12:43:08.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.766" endtime="20201029 12:43:08.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:08.077" level="INFO">${PHILIP_RES} = [{'diff': 0.0003427080000000006}, {'diff': 0.0003415139999999976}, {'diff': 0.00034155500000000033}, {'diff': 0.0003415689999999999}, {'diff': 0.0003415699999999994}, {'diff': 0.0003416249999999982}, ...</msg>
<status status="PASS" starttime="20201029 12:43:08.074" endtime="20201029 12:43:08.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:08.081" level="INFO">${RESULT} = {'diff': [0.0003427080000000006, 0.0003415139999999976, 0.00034155500000000033, 0.0003415689999999999, 0.0003415699999999994, 0.0003416249999999982, 0.0003415409999999973, 0.0003415689999999999, 0.000...</msg>
<status status="PASS" starttime="20201029 12:43:08.078" endtime="20201029 12:43:08.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.085" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:08.084" endtime="20201029 12:43:08.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.088" level="INFO">VALUE: [0.0003427080000000006, 0.0003415139999999976, 0.00034155500000000033, 0.0003415689999999999, 0.0003415699999999994, 0.0003416249999999982, 0.0003415409999999973, 0.0003415689999999999, 0.0003415689999999999, 0.00034158399999999894, 0.0003415559999999998, 0.00034158299999999947, 0.0003415689999999999, 0.0003415689999999999, 0.0003415689999999999, 0.0003415559999999998, 0.00034159699999999904, 0.00034155500000000033, 0.0003415689999999999, 0.0003415689999999999, 0.00034158399999999894, 0.0003415559999999998, 0.00034158299999999947, 0.0003415689999999999, 0.0003415970000000025, 0.0003415559999999998, 0.0003415699999999994, 0.00034158399999999894, 0.00034158299999999947, 0.0003415689999999999, 0.0003415689999999999, 0.00034157000000000284, 0.0003416110000000021, 0.0003415689999999999, 0.00034155500000000033, 0.0003415689999999999, 0.00034158299999999947, 0.00034158399999999894, 0.0003415699999999994, 0.00034156900000000684, 0.0003415689999999999, 0.0003415689999999999, 0.0003415699999999994, 0.00034158399999999894, 0.0003415699999999994, 0.0003415689999999999, 0.0003415689999999999, 0.0003415689999999999, 0.0003415699999999994, 0.00034158399999999894]</msg>
<status status="PASS" starttime="20201029 12:43:08.086" endtime="20201029 12:43:08.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.082" endtime="20201029 12:43:08.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.725" endtime="20201029 12:43:08.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.702" endtime="20201029 12:43:08.090"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:08.092" endtime="20201029 12:43:08.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.091" endtime="20201029 12:43:08.112"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.120" endtime="20201029 12:43:08.146"></status>
</kw>
<msg timestamp="20201029 12:43:08.147" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.119" endtime="20201029 12:43:08.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.149" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.148" endtime="20201029 12:43:08.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.151" endtime="20201029 12:43:08.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.116" endtime="20201029 12:43:08.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.114" endtime="20201029 12:43:08.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.160" endtime="20201029 12:43:08.446"></status>
</kw>
<msg timestamp="20201029 12:43:08.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017814944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018173528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.159" endtime="20201029 12:43:08.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017814944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018173528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.451" endtime="20201029 12:43:08.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.459" endtime="20201029 12:43:08.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.156" endtime="20201029 12:43:08.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.155" endtime="20201029 12:43:08.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:08.465" level="INFO">${PHILIP_RES} = [{'diff': 0.00035858400000000207}, {'diff': 0.0003574029999999992}, {'diff': 0.00035737500000000005}, {'diff': 0.00035738800000000015}, {'diff': 0.00035740300000000266}, {'diff': 0.0003574030000000026...</msg>
<status status="PASS" starttime="20201029 12:43:08.462" endtime="20201029 12:43:08.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:08.469" level="INFO">${RESULT} = {'diff': [0.00035858400000000207, 0.0003574029999999992, 0.00035737500000000005, 0.00035738800000000015, 0.00035740300000000266, 0.00035740300000000266, 0.0003574029999999992, 0.00035742999999999886, ...</msg>
<status status="PASS" starttime="20201029 12:43:08.466" endtime="20201029 12:43:08.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.474" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:08.473" endtime="20201029 12:43:08.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.476" level="INFO">VALUE: [0.00035858400000000207, 0.0003574029999999992, 0.00035737500000000005, 0.00035738800000000015, 0.00035740300000000266, 0.00035740300000000266, 0.0003574029999999992, 0.00035742999999999886, 0.0003574019999999997, 0.0003574029999999992, 0.0003573889999999996, 0.00035741699999999876, 0.0003574159999999993, 0.00035741700000000223, 0.0003573340000000008, 0.0003574029999999992, 0.0003574019999999997, 0.0003574029999999992, 0.0003574029999999992, 0.00035741699999999876, 0.0003574029999999992, 0.0003573470000000009, 0.0003574310000000018, 0.00035741699999999876, 0.0003573889999999996, 0.0003574019999999997, 0.00035740300000000266, 0.0003574310000000018, 0.0003574029999999992, 0.0003574159999999993, 0.0003574029999999992, 0.0003574029999999992, 0.00035741699999999876, 0.0003574029999999992, 0.0003573890000000031, 0.0003573889999999996, 0.0003574029999999992, 0.0003573889999999996, 0.0003573610000000005, 0.0003574029999999992, 0.0003573470000000009, 0.0003574029999999992, 0.0003573889999999996, 0.0003573889999999996, 0.00035747299999999704, 0.00035741699999999876, 0.00035741699999999876, 0.0003574019999999997, 0.0003574029999999992, 0.00035741699999999876]</msg>
<status status="PASS" starttime="20201029 12:43:08.475" endtime="20201029 12:43:08.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.470" endtime="20201029 12:43:08.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.112" endtime="20201029 12:43:08.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.090" endtime="20201029 12:43:08.479"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:08.481" endtime="20201029 12:43:08.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.480" endtime="20201029 12:43:08.501"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.509" endtime="20201029 12:43:08.537"></status>
</kw>
<msg timestamp="20201029 12:43:08.537" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.507" endtime="20201029 12:43:08.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.540" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.538" endtime="20201029 12:43:08.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.541" endtime="20201029 12:43:08.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.505" endtime="20201029 12:43:08.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.503" endtime="20201029 12:43:08.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.550" endtime="20201029 12:43:08.836"></status>
</kw>
<msg timestamp="20201029 12:43:08.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01748775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0178625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:08.548" endtime="20201029 12:43:08.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01748775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0178625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:08.840" endtime="20201029 12:43:08.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.848" endtime="20201029 12:43:08.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.546" endtime="20201029 12:43:08.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.544" endtime="20201029 12:43:08.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:08.854" level="INFO">${PHILIP_RES} = [{'diff': 0.0003747500000000001}, {'diff': 0.00037362499999999896}, {'diff': 0.0003736109999999994}, {'diff': 0.00037365300000000157}, {'diff': 0.0003735969999999998}, {'diff': 0.0003736109999999994},...</msg>
<status status="PASS" starttime="20201029 12:43:08.851" endtime="20201029 12:43:08.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:08.859" level="INFO">${RESULT} = {'diff': [0.0003747500000000001, 0.00037362499999999896, 0.0003736109999999994, 0.00037365300000000157, 0.0003735969999999998, 0.0003736109999999994, 0.0003736109999999994, 0.0003735969999999998, 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:08.855" endtime="20201029 12:43:08.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.864" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:08.863" endtime="20201029 12:43:08.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.866" level="INFO">VALUE: [0.0003747500000000001, 0.00037362499999999896, 0.0003736109999999994, 0.00037365300000000157, 0.0003735969999999998, 0.0003736109999999994, 0.0003736109999999994, 0.0003735969999999998, 0.0003736109999999994, 0.00037352800000000144, 0.0003735979999999993, 0.0003735839999999997, 0.00037362499999999896, 0.0003735969999999998, 0.0003736109999999994, 0.00037361199999999886, 0.0003735969999999998, 0.0003736109999999994, 0.00037362500000000243, 0.00037361200000000233, 0.0003735690000000007, 0.00037363899999999853, 0.00037366600000000166, 0.00037362500000000243, 0.00037358300000000025, 0.0003736109999999994, 0.0003736109999999994, 0.0003735839999999997, 0.0003735969999999998, 0.00037361100000000286, 0.00037362499999999896, 0.0003735969999999998, 0.00037362499999999896, 0.00037362500000000243, 0.00037359699999999635, 0.0003735840000000032, 0.00037361200000000233, 0.00037362500000000243, 0.0003735970000000033, 0.0003736109999999959, 0.00037361100000000286, 0.00037359699999999635, 0.00037361100000000286, 0.0003735970000000033, 0.0003736109999999959, 0.00037355499999999764, 0.00037359699999999635, 0.00037359699999999635, 0.00037359800000000276, 0.00037359699999999635]</msg>
<status status="PASS" starttime="20201029 12:43:08.865" endtime="20201029 12:43:08.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.860" endtime="20201029 12:43:08.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.502" endtime="20201029 12:43:08.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.479" endtime="20201029 12:43:08.868"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:08.871" endtime="20201029 12:43:08.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.869" endtime="20201029 12:43:08.890"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.898" endtime="20201029 12:43:08.926"></status>
</kw>
<msg timestamp="20201029 12:43:08.927" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.897" endtime="20201029 12:43:08.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.929" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.928" endtime="20201029 12:43:08.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.930" endtime="20201029 12:43:08.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.894" endtime="20201029 12:43:08.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.892" endtime="20201029 12:43:08.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.940" endtime="20201029 12:43:09.227"></status>
</kw>
<msg timestamp="20201029 12:43:09.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017456681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017847986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.938" endtime="20201029 12:43:09.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017456681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017847986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.231" endtime="20201029 12:43:09.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.239" endtime="20201029 12:43:09.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.935" endtime="20201029 12:43:09.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.934" endtime="20201029 12:43:09.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:09.246" level="INFO">${PHILIP_RES} = [{'diff': 0.00039130499999999804}, {'diff': 0.00039015200000000125}, {'diff': 0.0003901250000000016}, {'diff': 0.0003901670000000003}, {'diff': 0.0003901670000000003}, {'diff': 0.0003901389999999977},...</msg>
<status status="PASS" starttime="20201029 12:43:09.242" endtime="20201029 12:43:09.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:09.250" level="INFO">${RESULT} = {'diff': [0.00039130499999999804, 0.00039015200000000125, 0.0003901250000000016, 0.0003901670000000003, 0.0003901670000000003, 0.0003901389999999977, 0.0003901670000000003, 0.0003901530000000007, 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:09.247" endtime="20201029 12:43:09.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.254" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:09.253" endtime="20201029 12:43:09.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.256" level="INFO">VALUE: [0.00039130499999999804, 0.00039015200000000125, 0.0003901250000000016, 0.0003901670000000003, 0.0003901670000000003, 0.0003901389999999977, 0.0003901670000000003, 0.0003901530000000007, 0.0003902219999999991, 0.000390111000000002, 0.00039013900000000115, 0.0003901530000000007, 0.0003901519999999978, 0.0003901799999999969, 0.0003901389999999977, 0.0003901530000000007, 0.00039013900000000115, 0.0003901250000000016, 0.0003901530000000007, 0.00039015299999999725, 0.0003901389999999977, 0.0003901530000000007, 0.00039020900000000247, 0.00039015200000000125, 0.00039013900000000115, 0.00039015200000000125, 0.00039020799999999953, 0.00039013900000000115, 0.0003901249999999981, 0.00039019399999999996, 0.0003901670000000003, 0.0003901249999999981, 0.0003901250000000016, 0.00039015299999999725, 0.0003901530000000042, 0.0003901519999999978, 0.00039013800000000515, 0.0003901519999999978, 0.0003901520000000047, 0.00039015299999999725, 0.000390208000000003, 0.0003901669999999968, 0.0003901389999999977, 0.0003901530000000042, 0.00039022300000000204, 0.00039012500000000505, 0.00039015299999999725, 0.000390208000000003, 0.0003901519999999978, 0.0003901249999999981]</msg>
<status status="PASS" starttime="20201029 12:43:09.255" endtime="20201029 12:43:09.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.250" endtime="20201029 12:43:09.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.891" endtime="20201029 12:43:09.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.868" endtime="20201029 12:43:09.258"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:09.261" endtime="20201029 12:43:09.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.259" endtime="20201029 12:43:09.281"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.289" endtime="20201029 12:43:09.318"></status>
</kw>
<msg timestamp="20201029 12:43:09.319" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.287" endtime="20201029 12:43:09.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.321" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.320" endtime="20201029 12:43:09.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.322" endtime="20201029 12:43:09.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.284" endtime="20201029 12:43:09.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.283" endtime="20201029 12:43:09.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.332" endtime="20201029 12:43:09.618"></status>
</kw>
<msg timestamp="20201029 12:43:09.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017621722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018029917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.331" endtime="20201029 12:43:09.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017621722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018029917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.622" endtime="20201029 12:43:09.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.631" endtime="20201029 12:43:09.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.328" endtime="20201029 12:43:09.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.327" endtime="20201029 12:43:09.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:09.637" level="INFO">${PHILIP_RES} = [{'diff': 0.0004081950000000001}, {'diff': 0.000406972999999998}, {'diff': 0.00040698599999999807}, {'diff': 0.0004069590000000019}, {'diff': 0.00040704100000000035}, {'diff': 0.0004070419999999998}, ...</msg>
<status status="PASS" starttime="20201029 12:43:09.634" endtime="20201029 12:43:09.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:09.641" level="INFO">${RESULT} = {'diff': [0.0004081950000000001, 0.000406972999999998, 0.00040698599999999807, 0.0004069590000000019, 0.00040704100000000035, 0.0004070419999999998, 0.0004070269999999973, 0.0004070419999999998, 0.000...</msg>
<status status="PASS" starttime="20201029 12:43:09.638" endtime="20201029 12:43:09.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.645" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:09.644" endtime="20201029 12:43:09.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.648" level="INFO">VALUE: [0.0004081950000000001, 0.000406972999999998, 0.00040698599999999807, 0.0004069590000000019, 0.00040704100000000035, 0.0004070419999999998, 0.0004070269999999973, 0.0004070419999999998, 0.0004070559999999994, 0.00040698599999999807, 0.0004070419999999998, 0.0004070270000000008, 0.0004070140000000007, 0.0004070970000000021, 0.0004070689999999995, 0.00040702800000000025, 0.0004070549999999999, 0.00040705600000000286, 0.00040702800000000025, 0.0004070969999999986, 0.00040702800000000025, 0.0004070269999999973, 0.00040706999999999896, 0.00040704100000000035, 0.00040699999999999764, 0.0004070419999999998, 0.0004070549999999999, 0.00040699999999999764, 0.0004070139999999972, 0.00040702800000000025, 0.00040705600000000286, 0.0004070409999999969, 0.0004070420000000033, 0.0004070409999999969, 0.0004070420000000033, 0.0004070420000000033, 0.0004070409999999969, 0.0004070420000000033, 0.0004070550000000034, 0.0004070559999999959, 0.00040705600000000286, 0.0004070409999999969, 0.0004071109999999947, 0.00040702700000000425, 0.0004070559999999959, 0.0004070420000000033, 0.00040711100000000167, 0.0004070139999999972, 0.0004070550000000034, 0.00040705600000000286]</msg>
<status status="PASS" starttime="20201029 12:43:09.646" endtime="20201029 12:43:09.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.642" endtime="20201029 12:43:09.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.281" endtime="20201029 12:43:09.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.259" endtime="20201029 12:43:09.651"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:09.653" endtime="20201029 12:43:09.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.651" endtime="20201029 12:43:09.673"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.681" endtime="20201029 12:43:09.711"></status>
</kw>
<msg timestamp="20201029 12:43:09.712" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.679" endtime="20201029 12:43:09.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.714" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.713" endtime="20201029 12:43:09.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.715" endtime="20201029 12:43:09.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.677" endtime="20201029 12:43:09.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.675" endtime="20201029 12:43:09.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.725" endtime="20201029 12:43:10.010"></status>
</kw>
<msg timestamp="20201029 12:43:10.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017500583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017926028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.723" endtime="20201029 12:43:10.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017500583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017926028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.015" endtime="20201029 12:43:10.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.023" endtime="20201029 12:43:10.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.720" endtime="20201029 12:43:10.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.719" endtime="20201029 12:43:10.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:10.029" level="INFO">${PHILIP_RES} = [{'diff': 0.000425445}, {'diff': 0.0004242770000000007}, {'diff': 0.0004242909999999968}, {'diff': 0.00042427800000000016}, {'diff': 0.0004242919999999997}, {'diff': 0.00042429100000000025}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 12:43:10.026" endtime="20201029 12:43:10.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:10.034" level="INFO">${RESULT} = {'diff': [0.000425445, 0.0004242770000000007, 0.0004242909999999968, 0.00042427800000000016, 0.0004242919999999997, 0.00042429100000000025, 0.00042427800000000016, 0.00042432000000000233, 0.0004242770...</msg>
<status status="PASS" starttime="20201029 12:43:10.030" endtime="20201029 12:43:10.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.039" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:10.038" endtime="20201029 12:43:10.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.041" level="INFO">VALUE: [0.000425445, 0.0004242770000000007, 0.0004242909999999968, 0.00042427800000000016, 0.0004242919999999997, 0.00042429100000000025, 0.00042427800000000016, 0.00042432000000000233, 0.0004242770000000007, 0.00042433300000000243, 0.0004242919999999997, 0.00042427800000000016, 0.0004242770000000007, 0.00042427800000000016, 0.00042427800000000016, 0.0004242770000000007, 0.0004242919999999997, 0.00042427800000000016, 0.00042427800000000016, 0.00042429100000000025, 0.00042427800000000016, 0.0004242640000000006, 0.00042429100000000025, 0.000424235999999998, 0.000424250000000001, 0.00042427800000000016, 0.00042426299999999764, 0.0004242919999999997, 0.0004242919999999997, 0.0004242770000000007, 0.00042427800000000016, 0.00042427800000000016, 0.0004242919999999997, 0.0004242630000000011, 0.0004242640000000006, 0.00042430600000000623, 0.00042427800000000016, 0.0004242919999999997, 0.00042427800000000016, 0.00042427800000000016, 0.00042427699999999374, 0.0004243189999999994, 0.00042427800000000016, 0.00042429100000000025, 0.0004242919999999997, 0.0004242919999999997, 0.00042427800000000016, 0.0004242770000000007, 0.0004243049999999998, 0.0004242919999999997]</msg>
<status status="PASS" starttime="20201029 12:43:10.040" endtime="20201029 12:43:10.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.035" endtime="20201029 12:43:10.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.673" endtime="20201029 12:43:10.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.651" endtime="20201029 12:43:10.043"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:10.045" endtime="20201029 12:43:10.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.044" endtime="20201029 12:43:10.065"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.073" endtime="20201029 12:43:10.105"></status>
</kw>
<msg timestamp="20201029 12:43:10.105" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.072" endtime="20201029 12:43:10.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.108" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.106" endtime="20201029 12:43:10.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.109" endtime="20201029 12:43:10.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.069" endtime="20201029 12:43:10.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.067" endtime="20201029 12:43:10.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.118" endtime="20201029 12:43:10.407"></status>
</kw>
<msg timestamp="20201029 12:43:10.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017751528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018194569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.116" endtime="20201029 12:43:10.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017751528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018194569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.411" endtime="20201029 12:43:10.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.419" endtime="20201029 12:43:10.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.114" endtime="20201029 12:43:10.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.112" endtime="20201029 12:43:10.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:10.425" level="INFO">${PHILIP_RES} = [{'diff': 0.00044304100000000166}, {'diff': 0.00044190300000000043}, {'diff': 0.000441917}, {'diff': 0.00044190300000000043}, {'diff': 0.0004419300000000001}, {'diff': 0.0004418889999999974}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:43:10.422" endtime="20201029 12:43:10.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:10.430" level="INFO">${RESULT} = {'diff': [0.00044304100000000166, 0.00044190300000000043, 0.000441917, 0.00044190300000000043, 0.0004419300000000001, 0.0004418889999999974, 0.0004418750000000013, 0.00044188900000000086, 0.0004419029...</msg>
<status status="PASS" starttime="20201029 12:43:10.426" endtime="20201029 12:43:10.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.434" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:10.433" endtime="20201029 12:43:10.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.436" level="INFO">VALUE: [0.00044304100000000166, 0.00044190300000000043, 0.000441917, 0.00044190300000000043, 0.0004419300000000001, 0.0004418889999999974, 0.0004418750000000013, 0.00044188900000000086, 0.00044190299999999696, 0.00044190300000000043, 0.00044190300000000043, 0.0004418889999999974, 0.00044184700000000215, 0.00044188900000000086, 0.0004418889999999974, 0.00044190300000000043, 0.000441917, 0.0004418889999999974, 0.00044188900000000086, 0.00044188900000000086, 0.00044188900000000086, 0.00044188900000000086, 0.0004418749999999978, 0.0004419309999999996, 0.0004418750000000013, 0.0004418750000000013, 0.0004418889999999974, 0.0004419309999999996, 0.00044188900000000086, 0.0004418609999999948, 0.0004419029999999935, 0.00044190300000000043, 0.00044188900000000086, 0.0004418750000000013, 0.00044184700000000215, 0.00044183299999999565, 0.0004419029999999935, 0.00044188900000000086, 0.0004418750000000013, 0.00044190300000000043, 0.0004418750000000013, 0.0004419450000000061, 0.00044191600000000053, 0.00044190200000000096, 0.00044194399999999967, 0.0004418750000000013, 0.00044188900000000086, 0.000441901999999994, 0.0004418469999999952, 0.00044184700000000215]</msg>
<status status="PASS" starttime="20201029 12:43:10.435" endtime="20201029 12:43:10.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.430" endtime="20201029 12:43:10.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.066" endtime="20201029 12:43:10.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.043" endtime="20201029 12:43:10.438"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:10.441" endtime="20201029 12:43:10.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.439" endtime="20201029 12:43:10.460"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.468" endtime="20201029 12:43:10.500"></status>
</kw>
<msg timestamp="20201029 12:43:10.501" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.467" endtime="20201029 12:43:10.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.505" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.502" endtime="20201029 12:43:10.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.506" endtime="20201029 12:43:10.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.464" endtime="20201029 12:43:10.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.462" endtime="20201029 12:43:10.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.516" endtime="20201029 12:43:10.801"></status>
</kw>
<msg timestamp="20201029 12:43:10.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017676667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018137681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.514" endtime="20201029 12:43:10.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017676667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018137681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.805" endtime="20201029 12:43:10.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.813" endtime="20201029 12:43:10.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.512" endtime="20201029 12:43:10.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.510" endtime="20201029 12:43:10.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:10.820" level="INFO">${PHILIP_RES} = [{'diff': 0.0004610139999999992}, {'diff': 0.00045983299999999977}, {'diff': 0.00045983299999999977}, {'diff': 0.0004598190000000002}, {'diff': 0.0004598609999999989}, {'diff': 0.00045984699999999934}...</msg>
<status status="PASS" starttime="20201029 12:43:10.817" endtime="20201029 12:43:10.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:10.824" level="INFO">${RESULT} = {'diff': [0.0004610139999999992, 0.00045983299999999977, 0.00045983299999999977, 0.0004598190000000002, 0.0004598609999999989, 0.00045984699999999934, 0.00045979100000000106, 0.00045983299999999977, 0...</msg>
<status status="PASS" starttime="20201029 12:43:10.821" endtime="20201029 12:43:10.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.829" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:10.828" endtime="20201029 12:43:10.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.831" level="INFO">VALUE: [0.0004610139999999992, 0.00045983299999999977, 0.00045983299999999977, 0.0004598190000000002, 0.0004598609999999989, 0.00045984699999999934, 0.00045979100000000106, 0.00045983299999999977, 0.0004598749999999985, 0.00045983399999999924, 0.0004598060000000001, 0.0004598199999999997, 0.00045983399999999924, 0.00045983299999999977, 0.0004597640000000014, 0.0004598190000000002, 0.00045983299999999977, 0.0004598190000000002, 0.00045983300000000324, 0.00045984699999999934, 0.00045984699999999934, 0.00045983399999999924, 0.00045983399999999924, 0.00045983399999999924, 0.0004598479999999988, 0.0004598199999999997, 0.00045983299999999977, 0.0004598470000000028, 0.00045983299999999977, 0.00045983299999999977, 0.00045983299999999977, 0.000459889000000005, 0.00045988899999999805, 0.0004598609999999989, 0.0004598609999999989, 0.00045983399999999924, 0.00045983399999999924, 0.0004598879999999986, 0.0004598199999999997, 0.0004598749999999985, 0.00045983299999999977, 0.0004598749999999985, 0.00045983299999999977, 0.00045983299999999977, 0.0004598749999999985, 0.00045984699999999934, 0.0004598609999999989, 0.00045986100000000585, 0.00045983399999999924, 0.00045983399999999924]</msg>
<status status="PASS" starttime="20201029 12:43:10.830" endtime="20201029 12:43:10.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.825" endtime="20201029 12:43:10.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.461" endtime="20201029 12:43:10.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.439" endtime="20201029 12:43:10.834"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:10.836" endtime="20201029 12:43:10.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.835" endtime="20201029 12:43:10.856"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.864" endtime="20201029 12:43:10.900"></status>
</kw>
<msg timestamp="20201029 12:43:10.900" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.863" endtime="20201029 12:43:10.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.903" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.901" endtime="20201029 12:43:10.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.904" endtime="20201029 12:43:10.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.860" endtime="20201029 12:43:10.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.858" endtime="20201029 12:43:10.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.913" endtime="20201029 12:43:11.199"></status>
</kw>
<msg timestamp="20201029 12:43:11.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017707306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018186625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.911" endtime="20201029 12:43:11.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017707306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018186625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:11.203" endtime="20201029 12:43:11.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.211" endtime="20201029 12:43:11.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.909" endtime="20201029 12:43:11.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.907" endtime="20201029 12:43:11.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:11.218" level="INFO">${PHILIP_RES} = [{'diff': 0.00047931900000000235}, {'diff': 0.0004781109999999998}, {'diff': 0.0004781249999999994}, {'diff': 0.0004781520000000025}, {'diff': 0.0004781379999999995}, {'diff': 0.0004781529999999985}, ...</msg>
<status status="PASS" starttime="20201029 12:43:11.215" endtime="20201029 12:43:11.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:11.223" level="INFO">${RESULT} = {'diff': [0.00047931900000000235, 0.0004781109999999998, 0.0004781249999999994, 0.0004781520000000025, 0.0004781379999999995, 0.0004781529999999985, 0.0004781249999999994, 0.0004781529999999985, 0.000...</msg>
<status status="PASS" starttime="20201029 12:43:11.219" endtime="20201029 12:43:11.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.227" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:11.226" endtime="20201029 12:43:11.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.230" level="INFO">VALUE: [0.00047931900000000235, 0.0004781109999999998, 0.0004781249999999994, 0.0004781520000000025, 0.0004781379999999995, 0.0004781529999999985, 0.0004781249999999994, 0.0004781529999999985, 0.00047813899999999895, 0.0004781249999999994, 0.00047813899999999895, 0.0004781390000000024, 0.00047812500000000285, 0.0004780979999999997, 0.00047813899999999895, 0.0004781109999999998, 0.0004781249999999994, 0.0004781249999999994, 0.0004781529999999985, 0.000478056000000001, 0.00047812500000000285, 0.0004781390000000024, 0.0004781529999999985, 0.0004781529999999985, 0.00047813899999999895, 0.00047813899999999895, 0.0004781669999999981, 0.0004781249999999959, 0.0004781249999999959, 0.0004781389999999955, 0.00047816700000000156, 0.0004781390000000024, 0.0004781390000000024, 0.0004781390000000024, 0.0004781660000000021, 0.0004781390000000024, 0.0004781390000000024, 0.00047812500000000285, 0.0004781390000000024, 0.0004781390000000024, 0.0004781390000000024, 0.000478153000000002, 0.00047811099999999634, 0.0004781249999999959, 0.0004781389999999955, 0.0004781249999999959, 0.00047805599999999754, 0.0004781390000000024, 0.00047818100000000113, 0.00047813800000000295]</msg>
<status status="PASS" starttime="20201029 12:43:11.228" endtime="20201029 12:43:11.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.223" endtime="20201029 12:43:11.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.857" endtime="20201029 12:43:11.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.834" endtime="20201029 12:43:11.231"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:11.234" endtime="20201029 12:43:11.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.232" endtime="20201029 12:43:11.254"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.262" endtime="20201029 12:43:11.296"></status>
</kw>
<msg timestamp="20201029 12:43:11.296" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.260" endtime="20201029 12:43:11.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.299" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.297" endtime="20201029 12:43:11.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.300" endtime="20201029 12:43:11.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.258" endtime="20201029 12:43:11.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.256" endtime="20201029 12:43:11.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.309" endtime="20201029 12:43:11.596"></status>
</kw>
<msg timestamp="20201029 12:43:11.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01751225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018010181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:11.307" endtime="20201029 12:43:11.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01751225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018010181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:11.600" endtime="20201029 12:43:11.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.608" endtime="20201029 12:43:11.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.305" endtime="20201029 12:43:11.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.303" endtime="20201029 12:43:11.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:11.614" level="INFO">${PHILIP_RES} = [{'diff': 0.0004979310000000001}, {'diff': 0.0004967919999999994}, {'diff': 0.0004967630000000008}, {'diff': 0.0004967640000000002}, {'diff': 0.0004968199999999985}, {'diff': 0.0004968059999999989}, {...</msg>
<status status="PASS" starttime="20201029 12:43:11.611" endtime="20201029 12:43:11.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:11.618" level="INFO">${RESULT} = {'diff': [0.0004979310000000001, 0.0004967919999999994, 0.0004967630000000008, 0.0004967640000000002, 0.0004968199999999985, 0.0004968059999999989, 0.0004967909999999999, 0.0004967779999999998, 0.0004...</msg>
<status status="PASS" starttime="20201029 12:43:11.615" endtime="20201029 12:43:11.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.623" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:11.622" endtime="20201029 12:43:11.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.625" level="INFO">VALUE: [0.0004979310000000001, 0.0004967919999999994, 0.0004967630000000008, 0.0004967640000000002, 0.0004968199999999985, 0.0004968059999999989, 0.0004967909999999999, 0.0004967779999999998, 0.0004967640000000002, 0.0004967779999999998, 0.0004967779999999998, 0.0004967909999999999, 0.0004968060000000024, 0.0004967919999999994, 0.0004967779999999998, 0.0004967500000000007, 0.0004967779999999998, 0.0004968329999999986, 0.0004967640000000002, 0.0004967909999999999, 0.0004967919999999994, 0.0004967640000000002, 0.0004967779999999998, 0.0004967770000000003, 0.0004967920000000028, 0.0004967499999999972, 0.0004968750000000008, 0.0004967780000000033, 0.0004967639999999968, 0.0004968060000000024, 0.0004967920000000028, 0.0004967910000000034, 0.0004967910000000034, 0.0004967920000000028, 0.0004967500000000041, 0.0004967780000000033, 0.0004967910000000034, 0.0004967780000000033, 0.0004967780000000033, 0.0004967639999999968, 0.0004967769999999969, 0.0004967639999999968, 0.0004967919999999959, 0.0004968329999999951, 0.0004967639999999968, 0.0004968479999999942, 0.0004968059999999955, 0.0004967779999999963, 0.0004967769999999969, 0.0004967919999999959]</msg>
<status status="PASS" starttime="20201029 12:43:11.624" endtime="20201029 12:43:11.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.619" endtime="20201029 12:43:11.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.254" endtime="20201029 12:43:11.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.232" endtime="20201029 12:43:11.627"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:11.630" endtime="20201029 12:43:11.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.628" endtime="20201029 12:43:11.650"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.658" endtime="20201029 12:43:11.692"></status>
</kw>
<msg timestamp="20201029 12:43:11.692" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.656" endtime="20201029 12:43:11.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.695" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.693" endtime="20201029 12:43:11.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.696" endtime="20201029 12:43:11.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.653" endtime="20201029 12:43:11.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.652" endtime="20201029 12:43:11.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.706" endtime="20201029 12:43:12.013"></status>
</kw>
<msg timestamp="20201029 12:43:12.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017533972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018050903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:11.704" endtime="20201029 12:43:12.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017533972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018050903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.022" endtime="20201029 12:43:12.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.031" endtime="20201029 12:43:12.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.702" endtime="20201029 12:43:12.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.700" endtime="20201029 12:43:12.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:12.037" level="INFO">${PHILIP_RES} = [{'diff': 0.0005169310000000017}, {'diff': 0.0005158190000000007}, {'diff': 0.000515792000000001}, {'diff': 0.0005158190000000007}, {'diff': 0.0005158059999999971}, {'diff': 0.0005158189999999972}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:12.034" endtime="20201029 12:43:12.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:12.041" level="INFO">${RESULT} = {'diff': [0.0005169310000000017, 0.0005158190000000007, 0.000515792000000001, 0.0005158190000000007, 0.0005158059999999971, 0.0005158189999999972, 0.0005157909999999981, 0.0005158060000000006, 0.00051...</msg>
<status status="PASS" starttime="20201029 12:43:12.038" endtime="20201029 12:43:12.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.046" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:12.045" endtime="20201029 12:43:12.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.049" level="INFO">VALUE: [0.0005169310000000017, 0.0005158190000000007, 0.000515792000000001, 0.0005158190000000007, 0.0005158059999999971, 0.0005158189999999972, 0.0005157909999999981, 0.0005158060000000006, 0.0005158200000000002, 0.0005158060000000006, 0.0005158050000000011, 0.0005158050000000011, 0.0005158060000000006, 0.0005158060000000006, 0.0005158049999999977, 0.0005158049999999977, 0.0005157919999999976, 0.0005158469999999998, 0.0005158190000000007, 0.0005157910000000016, 0.0005158190000000007, 0.0005157780000000015, 0.0005157780000000015, 0.0005158190000000007, 0.0005158049999999977, 0.0005157360000000027, 0.0005158060000000006, 0.0005158050000000011, 0.0005157360000000027, 0.0005158050000000011, 0.0005158060000000006, 0.0005158189999999938, 0.0005158050000000011, 0.000515792000000001, 0.0005157780000000015, 0.0005158479999999993, 0.0005158190000000007, 0.0005157910000000016, 0.0005158060000000006, 0.0005158060000000006, 0.0005158049999999942, 0.0005158190000000007, 0.0005158469999999998, 0.0005158060000000006, 0.0005158330000000003, 0.0005158330000000003, 0.0005158050000000011, 0.000515792000000001, 0.0005158060000000006, 0.0005158050000000011]</msg>
<status status="PASS" starttime="20201029 12:43:12.047" endtime="20201029 12:43:12.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.042" endtime="20201029 12:43:12.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.650" endtime="20201029 12:43:12.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.628" endtime="20201029 12:43:12.051"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:12.054" endtime="20201029 12:43:12.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.052" endtime="20201029 12:43:12.074"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.082" endtime="20201029 12:43:12.119"></status>
</kw>
<msg timestamp="20201029 12:43:12.120" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.081" endtime="20201029 12:43:12.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.122" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.121" endtime="20201029 12:43:12.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.123" endtime="20201029 12:43:12.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.078" endtime="20201029 12:43:12.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.076" endtime="20201029 12:43:12.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.132" endtime="20201029 12:43:12.418"></status>
</kw>
<msg timestamp="20201029 12:43:12.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018189569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018725889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.130" endtime="20201029 12:43:12.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018189569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018725889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.422" endtime="20201029 12:43:12.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.430" endtime="20201029 12:43:12.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.128" endtime="20201029 12:43:12.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.126" endtime="20201029 12:43:12.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:12.437" level="INFO">${PHILIP_RES} = [{'diff': 0.0005363199999999999}, {'diff': 0.000535138999999997}, {'diff': 0.000535153}, {'diff': 0.000535153}, {'diff': 0.000535153}, {'diff': 0.0005351659999999966}, {'diff': 0.0005351520000000005},...</msg>
<status status="PASS" starttime="20201029 12:43:12.434" endtime="20201029 12:43:12.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:12.442" level="INFO">${RESULT} = {'diff': [0.0005363199999999999, 0.000535138999999997, 0.000535153, 0.000535153, 0.000535153, 0.0005351659999999966, 0.0005351520000000005, 0.0005351250000000009, 0.0005352080000000023, 0.000535166000...</msg>
<status status="PASS" starttime="20201029 12:43:12.438" endtime="20201029 12:43:12.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.446" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:12.445" endtime="20201029 12:43:12.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.448" level="INFO">VALUE: [0.0005363199999999999, 0.000535138999999997, 0.000535153, 0.000535153, 0.000535153, 0.0005351659999999966, 0.0005351520000000005, 0.0005351250000000009, 0.0005352080000000023, 0.0005351660000000001, 0.0005351520000000005, 0.0005351520000000005, 0.000535138000000001, 0.000535153, 0.000535153, 0.0005351799999999997, 0.0005351669999999996, 0.000535153, 0.0005351669999999996, 0.0005351669999999996, 0.0005350970000000017, 0.000535153, 0.0005351109999999978, 0.0005351529999999965, 0.0005351670000000031, 0.0005351810000000026, 0.0005351670000000031, 0.0005351530000000035, 0.0005351249999999974, 0.0005351809999999957, 0.0005351529999999965, 0.0005351530000000035, 0.0005351530000000035, 0.0005351950000000022, 0.0005351530000000035, 0.0005351529999999965, 0.0005351659999999966, 0.0005351659999999966, 0.0005352080000000023, 0.0005351660000000036, 0.0005351660000000036, 0.0005351519999999971, 0.0005351519999999971, 0.000535138999999997, 0.0005351529999999965, 0.0005351800000000032, 0.0005351800000000032, 0.0005351530000000035, 0.0005351109999999978, 0.0005351799999999962]</msg>
<status status="PASS" starttime="20201029 12:43:12.447" endtime="20201029 12:43:12.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.442" endtime="20201029 12:43:12.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.074" endtime="20201029 12:43:12.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.052" endtime="20201029 12:43:12.450"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:12.452" endtime="20201029 12:43:12.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.451" endtime="20201029 12:43:12.472"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.480" endtime="20201029 12:43:12.518"></status>
</kw>
<msg timestamp="20201029 12:43:12.518" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.479" endtime="20201029 12:43:12.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.520" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.519" endtime="20201029 12:43:12.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.522" endtime="20201029 12:43:12.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.476" endtime="20201029 12:43:12.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.474" endtime="20201029 12:43:12.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.530" endtime="20201029 12:43:12.830"></status>
</kw>
<msg timestamp="20201029 12:43:12.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017519931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018075889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.529" endtime="20201029 12:43:12.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017519931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018075889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.835" endtime="20201029 12:43:12.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.843" endtime="20201029 12:43:12.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.526" endtime="20201029 12:43:12.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.525" endtime="20201029 12:43:12.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:12.849" level="INFO">${PHILIP_RES} = [{'diff': 0.0005559580000000022}, {'diff': 0.0005548610000000002}, {'diff': 0.0005548610000000002}, {'diff': 0.0005548609999999968}, {'diff': 0.0005548470000000007}, {'diff': 0.0005548469999999972}, {...</msg>
<status status="PASS" starttime="20201029 12:43:12.846" endtime="20201029 12:43:12.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:12.853" level="INFO">${RESULT} = {'diff': [0.0005559580000000022, 0.0005548610000000002, 0.0005548610000000002, 0.0005548609999999968, 0.0005548470000000007, 0.0005548469999999972, 0.0005548610000000002, 0.0005548749999999998, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:43:12.850" endtime="20201029 12:43:12.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.857" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:12.856" endtime="20201029 12:43:12.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.860" level="INFO">VALUE: [0.0005559580000000022, 0.0005548610000000002, 0.0005548610000000002, 0.0005548609999999968, 0.0005548470000000007, 0.0005548469999999972, 0.0005548610000000002, 0.0005548749999999998, 0.000554902999999999, 0.0005548610000000002, 0.0005548750000000033, 0.0005548749999999998, 0.0005548749999999998, 0.0005548889999999994, 0.0005548610000000002, 0.0005548610000000002, 0.0005548610000000002, 0.0005548889999999994, 0.0005548479999999967, 0.000554820000000001, 0.0005548340000000006, 0.0005548619999999997, 0.000554902999999999, 0.0005548480000000001, 0.0005548609999999968, 0.0005548480000000036, 0.0005548610000000037, 0.0005548749999999963, 0.0005548749999999963, 0.0005548609999999968, 0.0005548610000000037, 0.0005548750000000033, 0.0005548749999999963, 0.0005548749999999963, 0.000554805999999998, 0.0005548470000000041, 0.0005548610000000037, 0.0005548749999999963, 0.0005548889999999959, 0.0005548469999999972, 0.000554917000000002, 0.0005548189999999981, 0.0005548749999999963, 0.0005548749999999963, 0.0005548609999999968, 0.0005548470000000041, 0.0005549310000000016, 0.0005548749999999963, 0.0005548889999999959, 0.0005549030000000024]</msg>
<status status="PASS" starttime="20201029 12:43:12.858" endtime="20201029 12:43:12.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.854" endtime="20201029 12:43:12.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.473" endtime="20201029 12:43:12.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.450" endtime="20201029 12:43:12.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.485" endtime="20201029 12:43:12.862"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:52.039" endtime="20201029 12:43:12.862" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:42:31.929" endtime="20201029 12:43:12.871"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.939" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:12.948" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:14.170" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:12.938" endtime="20201029 12:43:14.171"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.174" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:43:14.172" endtime="20201029 12:43:14.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.937" endtime="20201029 12:43:14.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:14.177" endtime="20201029 12:43:14.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.175" endtime="20201029 12:43:14.375"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.401" endtime="20201029 12:43:14.419"></status>
</kw>
<msg timestamp="20201029 12:43:14.420" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.398" endtime="20201029 12:43:14.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.425" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.422" endtime="20201029 12:43:14.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.431" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:14.427" endtime="20201029 12:43:14.432"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:14.392" endtime="20201029 12:43:14.433"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:14.388" endtime="20201029 12:43:14.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.385" endtime="20201029 12:43:14.435"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:14.442" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:14.441" endtime="20201029 12:43:14.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.437" endtime="20201029 12:43:14.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.384" endtime="20201029 12:43:14.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.382" endtime="20201029 12:43:14.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.444" endtime="20201029 12:43:14.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.380" endtime="20201029 12:43:14.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.446" endtime="20201029 12:43:14.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.376" endtime="20201029 12:43:14.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.935" endtime="20201029 12:43:14.449"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:14.454" endtime="20201029 12:43:14.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.453" endtime="20201029 12:43:14.474"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.488" endtime="20201029 12:43:14.502"></status>
</kw>
<msg timestamp="20201029 12:43:14.503" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.486" endtime="20201029 12:43:14.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.505" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.504" endtime="20201029 12:43:14.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.508" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:14.506" endtime="20201029 12:43:14.508"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:14.484" endtime="20201029 12:43:14.509"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:14.481" endtime="20201029 12:43:14.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.480" endtime="20201029 12:43:14.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:14.514" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:14.513" endtime="20201029 12:43:14.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.511" endtime="20201029 12:43:14.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.479" endtime="20201029 12:43:14.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.479" endtime="20201029 12:43:14.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.515" endtime="20201029 12:43:14.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.477" endtime="20201029 12:43:14.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.475" endtime="20201029 12:43:14.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.452" endtime="20201029 12:43:14.518"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.529" endtime="20201029 12:43:14.542"></status>
</kw>
<msg timestamp="20201029 12:43:14.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.527" endtime="20201029 12:43:14.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.544" endtime="20201029 12:43:14.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.546" endtime="20201029 12:43:14.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.523" endtime="20201029 12:43:14.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.521" endtime="20201029 12:43:14.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.555" endtime="20201029 12:43:14.847"></status>
</kw>
<msg timestamp="20201029 12:43:14.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066745972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066748986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.554" endtime="20201029 12:43:14.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066745972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066748986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.851" endtime="20201029 12:43:14.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.860" endtime="20201029 12:43:14.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.551" endtime="20201029 12:43:14.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.549" endtime="20201029 12:43:14.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:14.866" level="INFO">${RESULT} = [{'diff': 3.0139999999956313e-06}, {'diff': 2.4170000000045544e-06}, {'diff': 2.4170000000045544e-06}, {'diff': 2.124999999991717e-06}, {'diff': 2.4170000000045544e-06}, {'diff': 2.1389999999982257e-0...</msg>
<status status="PASS" starttime="20201029 12:43:14.863" endtime="20201029 12:43:14.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:14.871" level="INFO">${ACCURACY} = {'diff': [3.0139999999956313e-06, 2.4170000000045544e-06, 2.4170000000045544e-06, 2.124999999991717e-06, 2.4170000000045544e-06, 2.1389999999982257e-06, 2.096999999992577e-06, 2.4170000000045544e-06, ...</msg>
<status status="PASS" starttime="20201029 12:43:14.868" endtime="20201029 12:43:14.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.876" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:43:14.875" endtime="20201029 12:43:14.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.879" level="INFO">VALUE: [3.0139999999956313e-06, 2.4170000000045544e-06, 2.4170000000045544e-06, 2.124999999991717e-06, 2.4170000000045544e-06, 2.1389999999982257e-06, 2.096999999992577e-06, 2.4170000000045544e-06, 2.1389999999982257e-06, 2.110999999999086e-06, 1.6249999999912168e-06, 2.8200000000006e-06, 2.1250000000055946e-06, 2.110999999999086e-06, 2.110999999999086e-06, 2.209000000003014e-06, 2.4720000000033604e-06, 2.4299999999977118e-06, 2.4299999999977118e-06, 2.124999999991717e-06, 2.1250000000055946e-06, 2.1119999999985595e-06, 2.1250000000055946e-06, 2.4029999999980456e-06, 2.4309999999971854e-06, 2.1119999999985595e-06, 1.6660000000112696e-06, 2.0839999999994197e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 2.8200000000006e-06, 1.5970000000059548e-06, 2.082999999999946e-06, 2.096999999992577e-06, 1.6389999999977256e-06, 2.0979999999920507e-06, 2.097000000006455e-06, 1.6250000000050946e-06, 2.0980000000059285e-06, 2.8200000000006e-06, 2.110999999999086e-06, 2.1530000000047345e-06, 2.4300000000115896e-06, 2.124999999991717e-06, 2.4299999999977118e-06, 2.4309999999971854e-06, 2.110999999999086e-06, 2.4169999999906766e-06, 1.6939999999965316e-06, 2.0839999999994197e-06]</msg>
<status status="PASS" starttime="20201029 12:43:14.877" endtime="20201029 12:43:14.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.872" endtime="20201029 12:43:14.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:14.883" endtime="20201029 12:43:14.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.882" endtime="20201029 12:43:14.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.881" endtime="20201029 12:43:14.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.520" endtime="20201029 12:43:14.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.519" endtime="20201029 12:43:14.904"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.912" endtime="20201029 12:43:14.926"></status>
</kw>
<msg timestamp="20201029 12:43:14.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.911" endtime="20201029 12:43:14.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.928" endtime="20201029 12:43:14.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.930" endtime="20201029 12:43:14.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.908" endtime="20201029 12:43:14.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.906" endtime="20201029 12:43:14.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.940" endtime="20201029 12:43:15.235"></status>
</kw>
<msg timestamp="20201029 12:43:15.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021407028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021410361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.938" endtime="20201029 12:43:15.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021407028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021410361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.240" endtime="20201029 12:43:15.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.248" endtime="20201029 12:43:15.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.935" endtime="20201029 12:43:15.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.933" endtime="20201029 12:43:15.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.255" level="INFO">${RESULT} = [{'diff': 3.3329999999977267e-06}, {'diff': 2.749999999999281e-06}, {'diff': 3.653000000002765e-06}, {'diff': 3.3340000000006698e-06}, {'diff': 3.333000000001196e-06}, {'diff': 3.3050000000020563e-06}...</msg>
<status status="PASS" starttime="20201029 12:43:15.251" endtime="20201029 12:43:15.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:15.260" level="INFO">${ACCURACY} = {'diff': [3.3329999999977267e-06, 2.749999999999281e-06, 3.653000000002765e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.3050000000020563e-06, 3.347000000000766e-06, 3.3480000000002397e-06, 2....</msg>
<status status="PASS" starttime="20201029 12:43:15.256" endtime="20201029 12:43:15.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.264" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:43:15.263" endtime="20201029 12:43:15.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.267" level="INFO">VALUE: [3.3329999999977267e-06, 2.749999999999281e-06, 3.653000000002765e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.3050000000020563e-06, 3.347000000000766e-06, 3.3480000000002397e-06, 2.735999999999711e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.6389999999997258e-06, 3.3340000000006698e-06, 3.0410000000022364e-06, 3.083000000000946e-06, 3.02800000000214e-06, 3.333000000001196e-06, 3.02800000000214e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.3469999999972966e-06, 3.040999999998767e-06, 3.333000000001196e-06, 2.7229999999996146e-06, 3.040999999998767e-06, 3.02800000000214e-06, 3.695000000001475e-06, 3.0279999999986706e-06, 3.3340000000006698e-06, 3.0279999999986706e-06, 3.3200000000011e-06, 2.735999999999711e-06, 3.3329999999977267e-06, 3.0279999999986706e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.04200000000171e-06, 3.3339999999972003e-06, 3.3340000000006698e-06, 3.02800000000214e-06, 3.054999999998337e-06, 2.722000000000141e-06, 3.04200000000171e-06, 3.3340000000006698e-06, 3.0279999999986706e-06, 3.333000000001196e-06, 3.0279999999986706e-06, 2.723000000003084e-06, 3.0279999999986706e-06, 3.0279999999986706e-06]</msg>
<status status="PASS" starttime="20201029 12:43:15.265" endtime="20201029 12:43:15.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.261" endtime="20201029 12:43:15.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:15.271" endtime="20201029 12:43:15.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.270" endtime="20201029 12:43:15.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.269" endtime="20201029 12:43:15.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.905" endtime="20201029 12:43:15.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.904" endtime="20201029 12:43:15.292"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.301" endtime="20201029 12:43:15.314"></status>
</kw>
<msg timestamp="20201029 12:43:15.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.299" endtime="20201029 12:43:15.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.316" endtime="20201029 12:43:15.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.318" endtime="20201029 12:43:15.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.296" endtime="20201029 12:43:15.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.294" endtime="20201029 12:43:15.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.328" endtime="20201029 12:43:15.614"></status>
</kw>
<msg timestamp="20201029 12:43:15.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021615056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.326" endtime="20201029 12:43:15.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021615056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.619" endtime="20201029 12:43:15.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.627" endtime="20201029 12:43:15.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.324" endtime="20201029 12:43:15.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.322" endtime="20201029 12:43:15.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.634" level="INFO">${RESULT} = [{'diff': 4.2359999999977416e-06}, {'diff': 3.625000000000156e-06}, {'diff': 4.5699999999988805e-06}, {'diff': 4.264000000000351e-06}, {'diff': 4.250000000000781e-06}, {'diff': 3.943999999998782e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:15.630" endtime="20201029 12:43:15.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:15.638" level="INFO">${ACCURACY} = {'diff': [4.2359999999977416e-06, 3.625000000000156e-06, 4.5699999999988805e-06, 4.264000000000351e-06, 4.250000000000781e-06, 3.943999999998782e-06, 4.555999999999311e-06, 4.236000000001211e-06, 3.88...</msg>
<status status="PASS" starttime="20201029 12:43:15.635" endtime="20201029 12:43:15.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.643" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:43:15.642" endtime="20201029 12:43:15.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.645" level="INFO">VALUE: [4.2359999999977416e-06, 3.625000000000156e-06, 4.5699999999988805e-06, 4.264000000000351e-06, 4.250000000000781e-06, 3.943999999998782e-06, 4.555999999999311e-06, 4.236000000001211e-06, 3.888999999999976e-06, 4.54200000000321e-06, 4.2499999999973115e-06, 4.222999999997645e-06, 4.000000000000531e-06, 4.263999999996881e-06, 4.555999999999311e-06, 4.568999999999407e-06, 4.250000000000781e-06, 3.6389999999997258e-06, 4.221999999998172e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.264000000000351e-06, 4.541000000000267e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.5699999999988805e-06, 3.9449999999982555e-06, 4.250000000000781e-06, 4.541000000000267e-06, 3.943999999998782e-06, 4.2499999999973115e-06, 3.958000000001821e-06, 4.250000000000781e-06, 3.931000000002155e-06, 3.958000000001821e-06, 4.277999999999921e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.569000000002876e-06, 3.9449999999982555e-06, 3.943999999998782e-06, 4.264000000000351e-06, 3.9309999999986855e-06, 4.263999999996881e-06, 4.568999999999407e-06, 4.541999999999741e-06, 3.945000000001725e-06, 3.957999999998352e-06, 4.5839999999984504e-06]</msg>
<status status="PASS" starttime="20201029 12:43:15.644" endtime="20201029 12:43:15.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.639" endtime="20201029 12:43:15.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:15.649" endtime="20201029 12:43:15.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.648" endtime="20201029 12:43:15.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.647" endtime="20201029 12:43:15.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.293" endtime="20201029 12:43:15.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.292" endtime="20201029 12:43:15.670"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.679" endtime="20201029 12:43:15.693"></status>
</kw>
<msg timestamp="20201029 12:43:15.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.677" endtime="20201029 12:43:15.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.695" endtime="20201029 12:43:15.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.698" endtime="20201029 12:43:15.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.675" endtime="20201029 12:43:15.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.673" endtime="20201029 12:43:15.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.707" endtime="20201029 12:43:15.995"></status>
</kw>
<msg timestamp="20201029 12:43:15.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.705" endtime="20201029 12:43:15.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.999" endtime="20201029 12:43:16.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.007" endtime="20201029 12:43:16.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.703" endtime="20201029 12:43:16.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.701" endtime="20201029 12:43:16.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.014" level="INFO">${RESULT} = [{'diff': 5.4589999999993255e-06}, {'diff': 4.8199999999991305e-06}, {'diff': 5.167000000000366e-06}, {'diff': 5.472999999998895e-06}, {'diff': 5.180000000000462e-06}, {'diff': 5.486000000002461e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:16.011" endtime="20201029 12:43:16.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:16.018" level="INFO">${ACCURACY} = {'diff': [5.4589999999993255e-06, 4.8199999999991305e-06, 5.167000000000366e-06, 5.472999999998895e-06, 5.180000000000462e-06, 5.486000000002461e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.2...</msg>
<status status="PASS" starttime="20201029 12:43:16.015" endtime="20201029 12:43:16.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.023" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:43:16.022" endtime="20201029 12:43:16.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.025" level="INFO">VALUE: [5.4589999999993255e-06, 4.8199999999991305e-06, 5.167000000000366e-06, 5.472999999998895e-06, 5.180000000000462e-06, 5.486000000002461e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.222000000002641e-06, 5.222000000002641e-06, 4.555999999999311e-06, 5.499999999998562e-06, 5.457999999999852e-06, 5.153000000000796e-06, 5.208000000003071e-06, 5.180999999999936e-06, 5.485999999998992e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.485999999998992e-06, 4.875000000001406e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.471999999999422e-06, 5.180999999999936e-06, 4.555999999999311e-06, 5.403000000001046e-06, 5.180000000000462e-06, 5.1799999999969926e-06, 5.500000000002031e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.180999999999936e-06, 5.471999999999422e-06, 5.486000000002461e-06, 4.889000000000976e-06, 5.471999999999422e-06, 5.194000000000032e-06, 5.471999999999422e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.180000000000462e-06, 5.472999999998895e-06, 5.180999999999936e-06, 5.166999999996896e-06, 5.207999999999602e-06, 5.485999999998992e-06, 5.485999999998992e-06]</msg>
<status status="PASS" starttime="20201029 12:43:16.024" endtime="20201029 12:43:16.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.019" endtime="20201029 12:43:16.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:16.031" endtime="20201029 12:43:16.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.029" endtime="20201029 12:43:16.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.028" endtime="20201029 12:43:16.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.671" endtime="20201029 12:43:16.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.670" endtime="20201029 12:43:16.051"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.067" endtime="20201029 12:43:16.081"></status>
</kw>
<msg timestamp="20201029 12:43:16.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.058" endtime="20201029 12:43:16.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.083" endtime="20201029 12:43:16.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.086" endtime="20201029 12:43:16.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.056" endtime="20201029 12:43:16.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.054" endtime="20201029 12:43:16.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.095" endtime="20201029 12:43:16.380"></status>
</kw>
<msg timestamp="20201029 12:43:16.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029798139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029805097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.093" endtime="20201029 12:43:16.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029798139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029805097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.384" endtime="20201029 12:43:16.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.392" endtime="20201029 12:43:16.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.091" endtime="20201029 12:43:16.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.089" endtime="20201029 12:43:16.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.399" level="INFO">${RESULT} = [{'diff': 6.9579999999978825e-06}, {'diff': 5.792000000000991e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.3479999999997705e-06}, {'diff': 5.7779999999979514e-06}...</msg>
<status status="PASS" starttime="20201029 12:43:16.396" endtime="20201029 12:43:16.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:16.404" level="INFO">${ACCURACY} = {'diff': [6.9579999999978825e-06, 5.792000000000991e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.3479999999997705e-06, 5.7779999999979514e-06, 6.388999999999007e-06, 6.097000000000047e-06, 6.3...</msg>
<status status="PASS" starttime="20201029 12:43:16.400" endtime="20201029 12:43:16.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.409" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:43:16.408" endtime="20201029 12:43:16.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.411" level="INFO">VALUE: [6.9579999999978825e-06, 5.792000000000991e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.3479999999997705e-06, 5.7779999999979514e-06, 6.388999999999007e-06, 6.097000000000047e-06, 6.388999999999007e-06, 6.0839999999999506e-06, 5.792000000000991e-06, 6.0829999999970075e-06, 6.0979999999995205e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.374999999999437e-06, 6.375000000002906e-06, 6.695000000001006e-06, 6.0979999999995205e-06, 6.417000000001616e-06, 5.764000000001851e-06, 6.374999999999437e-06, 6.097000000000047e-06, 6.069000000000907e-06, 5.471999999999422e-06, 6.7369999999997154e-06, 6.403000000002046e-06, 6.4029999999985765e-06, 6.401999999999103e-06, 6.387999999999533e-06, 6.444000000001282e-06, 6.097000000000047e-06, 6.070000000000381e-06, 5.472999999998895e-06, 6.083000000000477e-06, 6.430000000001712e-06, 6.097000000000047e-06, 6.4029999999985765e-06, 6.403000000002046e-06, 6.0979999999995205e-06, 6.347000000000297e-06, 6.083000000000477e-06, 6.431000000001186e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.319000000001157e-06, 6.417000000001616e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.4029999999985765e-06]</msg>
<status status="PASS" starttime="20201029 12:43:16.410" endtime="20201029 12:43:16.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.405" endtime="20201029 12:43:16.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:16.416" endtime="20201029 12:43:16.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.414" endtime="20201029 12:43:16.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.413" endtime="20201029 12:43:16.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.052" endtime="20201029 12:43:16.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.051" endtime="20201029 12:43:16.436"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.445" endtime="20201029 12:43:16.459"></status>
</kw>
<msg timestamp="20201029 12:43:16.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.444" endtime="20201029 12:43:16.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.461" endtime="20201029 12:43:16.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.463" endtime="20201029 12:43:16.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.441" endtime="20201029 12:43:16.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.439" endtime="20201029 12:43:16.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.472" endtime="20201029 12:43:16.761"></status>
</kw>
<msg timestamp="20201029 12:43:16.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.471" endtime="20201029 12:43:16.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.765" endtime="20201029 12:43:16.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.773" endtime="20201029 12:43:16.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.468" endtime="20201029 12:43:16.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.467" endtime="20201029 12:43:16.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.780" level="INFO">${RESULT} = [{'diff': 7.278000000002921e-06}, {'diff': 6.695000000001006e-06}, {'diff': 7.304999999999118e-06}, {'diff': 7.013999999999632e-06}, {'diff': 7.319999999998161e-06}, {'diff': 7.2779999999994516e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:16.777" endtime="20201029 12:43:16.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:16.784" level="INFO">${ACCURACY} = {'diff': [7.278000000002921e-06, 6.695000000001006e-06, 7.304999999999118e-06, 7.013999999999632e-06, 7.319999999998161e-06, 7.2779999999994516e-06, 7.0279999999992016e-06, 7.306000000002061e-06, 7.31...</msg>
<status status="PASS" starttime="20201029 12:43:16.781" endtime="20201029 12:43:16.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.789" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:43:16.788" endtime="20201029 12:43:16.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.791" level="INFO">VALUE: [7.278000000002921e-06, 6.695000000001006e-06, 7.304999999999118e-06, 7.013999999999632e-06, 7.319999999998161e-06, 7.2779999999994516e-06, 7.0279999999992016e-06, 7.306000000002061e-06, 7.319999999998161e-06, 7.5969999999980775e-06, 7.290999999999548e-06, 7.611000000001117e-06, 6.943999999998313e-06, 7.306000000002061e-06, 7.333999999997731e-06, 7.639000000000257e-06, 7.318999999998688e-06, 7.6109999999976474e-06, 7.306000000002061e-06, 7.333999999997731e-06, 7.013999999999632e-06, 7.319000000002157e-06, 6.959000000000826e-06, 7.2919999999990215e-06, 7.306000000002061e-06, 7.597000000001547e-06, 7.319999999998161e-06, 7.304999999999118e-06, 7.305999999998591e-06, 7.360999999997397e-06, 7.305999999998591e-06, 7.2919999999990215e-06, 7.319999999998161e-06, 7.625000000000687e-06, 7.013999999999632e-06, 7.318999999998688e-06, 7.014000000003101e-06, 7.000000000000062e-06, 7.319000000002157e-06, 7.000000000000062e-06, 7.319999999998161e-06, 7.305999999998591e-06, 7.332999999998258e-06, 7.319000000002157e-06, 7.319999999998161e-06, 7.236000000000742e-06, 7.625000000000687e-06, 7.318999999998688e-06, 6.9869999999999655e-06, 7.320000000001631e-06]</msg>
<status status="PASS" starttime="20201029 12:43:16.790" endtime="20201029 12:43:16.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.785" endtime="20201029 12:43:16.792"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:16.796" endtime="20201029 12:43:16.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.794" endtime="20201029 12:43:16.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.793" endtime="20201029 12:43:16.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.437" endtime="20201029 12:43:16.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.437" endtime="20201029 12:43:16.819"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.831" endtime="20201029 12:43:16.848"></status>
</kw>
<msg timestamp="20201029 12:43:16.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.829" endtime="20201029 12:43:16.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.849" endtime="20201029 12:43:16.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.852" endtime="20201029 12:43:16.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.825" endtime="20201029 12:43:16.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.822" endtime="20201029 12:43:16.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.861" endtime="20201029 12:43:17.145"></status>
</kw>
<msg timestamp="20201029 12:43:17.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030057528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030065736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.859" endtime="20201029 12:43:17.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030057528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030065736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.150" endtime="20201029 12:43:17.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.158" endtime="20201029 12:43:17.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.857" endtime="20201029 12:43:17.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.855" endtime="20201029 12:43:17.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.165" level="INFO">${RESULT} = [{'diff': 8.207999999999133e-06}, {'diff': 8.235999999998272e-06}, {'diff': 8.153000000000327e-06}, {'diff': 8.528000000000702e-06}, {'diff': 8.264000000000882e-06}, {'diff': 7.930999999999216e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:17.162" endtime="20201029 12:43:17.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:17.169" level="INFO">${ACCURACY} = {'diff': [8.207999999999133e-06, 8.235999999998272e-06, 8.153000000000327e-06, 8.528000000000702e-06, 8.264000000000882e-06, 7.930999999999216e-06, 8.541000000000798e-06, 8.236000000001742e-06, 7.9309...</msg>
<status status="PASS" starttime="20201029 12:43:17.166" endtime="20201029 12:43:17.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.173" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:43:17.172" endtime="20201029 12:43:17.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.176" level="INFO">VALUE: [8.207999999999133e-06, 8.235999999998272e-06, 8.153000000000327e-06, 8.528000000000702e-06, 8.264000000000882e-06, 7.930999999999216e-06, 8.541000000000798e-06, 8.236000000001742e-06, 7.930999999999216e-06, 8.527999999997232e-06, 8.222000000002172e-06, 8.222999999998176e-06, 8.222999999998176e-06, 8.319999999999161e-06, 8.222999999998176e-06, 7.611000000001117e-06, 8.486000000001992e-06, 7.903000000000077e-06, 8.222000000002172e-06, 7.527999999999702e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.500000000001562e-06, 8.555999999999842e-06, 8.277999999996982e-06, 8.222000000002172e-06, 7.916999999999647e-06, 8.250000000001312e-06, 8.528000000000702e-06, 7.931000000002686e-06, 8.153000000000327e-06, 8.527999999997232e-06, 8.542000000000272e-06, 8.221999999998703e-06, 8.542000000000272e-06, 8.542000000000272e-06, 8.179999999999993e-06, 7.902000000000603e-06, 8.221999999998703e-06, 8.250000000001312e-06, 8.542000000000272e-06, 7.958999999998356e-06, 8.235999999998272e-06, 8.528000000000702e-06, 8.305000000000118e-06, 7.943999999999313e-06, 8.555999999999842e-06, 8.542000000000272e-06, 8.541999999996802e-06, 8.235999999998272e-06]</msg>
<status status="PASS" starttime="20201029 12:43:17.175" endtime="20201029 12:43:17.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.170" endtime="20201029 12:43:17.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:17.182" endtime="20201029 12:43:17.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.180" endtime="20201029 12:43:17.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.179" endtime="20201029 12:43:17.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.820" endtime="20201029 12:43:17.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.819" endtime="20201029 12:43:17.202"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.211" endtime="20201029 12:43:17.225"></status>
</kw>
<msg timestamp="20201029 12:43:17.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.209" endtime="20201029 12:43:17.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.227" endtime="20201029 12:43:17.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.229" endtime="20201029 12:43:17.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.207" endtime="20201029 12:43:17.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.205" endtime="20201029 12:43:17.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.239" endtime="20201029 12:43:17.523"></status>
</kw>
<msg timestamp="20201029 12:43:17.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.237" endtime="20201029 12:43:17.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.527" endtime="20201029 12:43:17.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.535" endtime="20201029 12:43:17.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.234" endtime="20201029 12:43:17.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.233" endtime="20201029 12:43:17.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.542" level="INFO">${RESULT} = [{'diff': 9.736000000003242e-06}, {'diff': 9.445000000000286e-06}, {'diff': 8.555000000000368e-06}, {'diff': 9.152999999997857e-06}, {'diff': 9.445000000000286e-06}, {'diff': 8.542000000000272e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:17.539" endtime="20201029 12:43:17.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:17.547" level="INFO">${ACCURACY} = {'diff': [9.736000000003242e-06, 9.445000000000286e-06, 8.555000000000368e-06, 9.152999999997857e-06, 9.445000000000286e-06, 8.542000000000272e-06, 9.153000000001327e-06, 9.152000000001853e-06, 9.1529...</msg>
<status status="PASS" starttime="20201029 12:43:17.543" endtime="20201029 12:43:17.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.552" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:43:17.551" endtime="20201029 12:43:17.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.554" level="INFO">VALUE: [9.736000000003242e-06, 9.445000000000286e-06, 8.555000000000368e-06, 9.152999999997857e-06, 9.445000000000286e-06, 8.542000000000272e-06, 9.153000000001327e-06, 9.152000000001853e-06, 9.152999999997857e-06, 9.431000000000717e-06, 8.846999999999328e-06, 9.152999999997857e-06, 9.431000000000717e-06, 9.471999999999953e-06, 9.458999999999856e-06, 9.444000000000813e-06, 9.125000000002187e-06, 9.124999999998717e-06, 9.124999999998717e-06, 9.445000000000286e-06, 9.458000000000383e-06, 9.138999999998287e-06, 9.445000000000286e-06, 9.139000000001757e-06, 9.458999999999856e-06, 9.125000000002187e-06, 9.445000000000286e-06, 8.541999999996802e-06, 9.180000000000993e-06, 9.443999999997343e-06, 9.471999999999953e-06, 9.137999999998814e-06, 9.431000000000717e-06, 9.471999999999953e-06, 9.473000000002896e-06, 9.514000000002132e-06, 9.444000000000813e-06, 9.458999999999856e-06, 9.443999999997343e-06, 9.444000000000813e-06, 9.166000000001423e-06, 9.445000000000286e-06, 9.458999999999856e-06, 9.180000000000993e-06, 9.430000000001243e-06, 9.444000000000813e-06, 9.124999999998717e-06, 9.429999999997773e-06, 9.443999999997343e-06, 8.819999999999661e-06]</msg>
<status status="PASS" starttime="20201029 12:43:17.553" endtime="20201029 12:43:17.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.548" endtime="20201029 12:43:17.556"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:17.559" endtime="20201029 12:43:17.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.558" endtime="20201029 12:43:17.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.557" endtime="20201029 12:43:17.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.203" endtime="20201029 12:43:17.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.203" endtime="20201029 12:43:17.580"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.589" endtime="20201029 12:43:17.603"></status>
</kw>
<msg timestamp="20201029 12:43:17.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.587" endtime="20201029 12:43:17.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.605" endtime="20201029 12:43:17.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.607" endtime="20201029 12:43:17.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.584" endtime="20201029 12:43:17.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.582" endtime="20201029 12:43:17.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.616" endtime="20201029 12:43:17.901"></status>
</kw>
<msg timestamp="20201029 12:43:17.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021792042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.615" endtime="20201029 12:43:17.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021792042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.905" endtime="20201029 12:43:17.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.914" endtime="20201029 12:43:17.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.612" endtime="20201029 12:43:17.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.611" endtime="20201029 12:43:17.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.920" level="INFO">${RESULT} = [{'diff': 1.0320000000001162e-05}, {'diff': 1.0040999999998829e-05}, {'diff': 1.0361000000000398e-05}, {'diff': 1.0374999999999968e-05}, {'diff': 1.0374999999999968e-05}, {'diff': 1.0416999999998677e-...</msg>
<status status="PASS" starttime="20201029 12:43:17.917" endtime="20201029 12:43:17.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:17.925" level="INFO">${ACCURACY} = {'diff': [1.0320000000001162e-05, 1.0040999999998829e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0416999999998677e-05, 1.0068999999997968e-05, 9.776999999999009e-06,...</msg>
<status status="PASS" starttime="20201029 12:43:17.921" endtime="20201029 12:43:17.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.929" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:43:17.928" endtime="20201029 12:43:17.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.932" level="INFO">VALUE: [1.0320000000001162e-05, 1.0040999999998829e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0416999999998677e-05, 1.0068999999997968e-05, 9.776999999999009e-06, 1.0055000000001868e-05, 1.0083000000001008e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0361999999999871e-05, 1.0361999999999871e-05, 9.763999999998912e-06, 1.0360999999996928e-05, 1.0361999999999871e-05, 1.0361000000000398e-05, 1.0070000000000912e-05, 1.0402000000003103e-05, 1.0416999999998677e-05, 1.0374999999999968e-05, 1.0347000000000828e-05, 1.0374999999999968e-05, 1.0292000000002022e-05, 1.0361000000000398e-05, 1.0056000000001342e-05, 1.0625000000000218e-05, 1.0361000000000398e-05, 1.0056000000001342e-05, 1.0374999999999968e-05, 1.0667000000002397e-05, 1.0374999999999968e-05, 1.0680999999998497e-05, 1.0056000000001342e-05, 1.0124999999999718e-05, 9.749999999999343e-06, 1.036200000000334e-05, 1.0318999999998218e-05, 1.0055000000001868e-05, 1.0056000000001342e-05, 1.0055999999997872e-05, 1.0084000000000481e-05, 9.762999999999439e-06, 1.0680999999998497e-05, 1.0013999999999162e-05, 1.0361000000000398e-05, 1.0056000000001342e-05]</msg>
<status status="PASS" starttime="20201029 12:43:17.930" endtime="20201029 12:43:17.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.925" endtime="20201029 12:43:17.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:17.936" endtime="20201029 12:43:17.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.935" endtime="20201029 12:43:17.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.934" endtime="20201029 12:43:17.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.581" endtime="20201029 12:43:17.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.580" endtime="20201029 12:43:17.957"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.966" endtime="20201029 12:43:17.984"></status>
</kw>
<msg timestamp="20201029 12:43:17.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.964" endtime="20201029 12:43:17.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.985" endtime="20201029 12:43:17.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.988" endtime="20201029 12:43:17.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.962" endtime="20201029 12:43:17.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.960" endtime="20201029 12:43:17.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.997" endtime="20201029 12:43:18.286"></status>
</kw>
<msg timestamp="20201029 12:43:18.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024934819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024946069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.995" endtime="20201029 12:43:18.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024934819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024946069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.290" endtime="20201029 12:43:18.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.299" endtime="20201029 12:43:18.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.993" endtime="20201029 12:43:18.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.991" endtime="20201029 12:43:18.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.306" level="INFO">${RESULT} = [{'diff': 1.1250000000000843e-05}, {'diff': 1.0972000000001453e-05}, {'diff': 1.1208999999998137e-05}, {'diff': 1.0986000000001023e-05}, {'diff': 1.0985999999997553e-05}, {'diff': 1.1597000000002078e-...</msg>
<status status="PASS" starttime="20201029 12:43:18.302" endtime="20201029 12:43:18.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:18.310" level="INFO">${ACCURACY} = {'diff': [1.1250000000000843e-05, 1.0972000000001453e-05, 1.1208999999998137e-05, 1.0986000000001023e-05, 1.0985999999997553e-05, 1.1597000000002078e-05, 1.1235999999997803e-05, 1.1291999999999552e-05...</msg>
<status status="PASS" starttime="20201029 12:43:18.307" endtime="20201029 12:43:18.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.315" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:43:18.314" endtime="20201029 12:43:18.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.317" level="INFO">VALUE: [1.1250000000000843e-05, 1.0972000000001453e-05, 1.1208999999998137e-05, 1.0986000000001023e-05, 1.0985999999997553e-05, 1.1597000000002078e-05, 1.1235999999997803e-05, 1.1291999999999552e-05, 1.1291999999999552e-05, 1.0972000000001453e-05, 1.1277999999999982e-05, 1.1582999999999039e-05, 1.1264000000000413e-05, 1.1375000000000968e-05, 1.1263999999996943e-05, 1.1318999999999219e-05, 1.1070000000001912e-05, 1.0638999999999788e-05, 1.0680999999998497e-05, 1.1541999999999802e-05, 1.1263999999996943e-05, 1.0665999999999454e-05, 1.0986000000001023e-05, 1.0959000000001357e-05, 1.1277999999999982e-05, 1.0972000000001453e-05, 1.1277999999999982e-05, 1.0986000000001023e-05, 1.0971999999997983e-05, 1.0971999999997983e-05, 1.1291999999999552e-05, 1.0972000000001453e-05, 1.0665999999999454e-05, 1.1612000000001121e-05, 1.1291999999999552e-05, 1.1305000000003118e-05, 1.0986000000001023e-05, 1.1584000000001982e-05, 1.1277999999999982e-05, 1.0972000000001453e-05, 1.1596999999998608e-05, 1.1291999999999552e-05, 1.1277999999999982e-05, 1.0958999999997887e-05, 1.1250000000000843e-05, 1.1582999999999039e-05, 1.0973000000000926e-05, 1.1291999999999552e-05, 1.0973000000000926e-05, 1.1277999999999982e-05]</msg>
<status status="PASS" starttime="20201029 12:43:18.316" endtime="20201029 12:43:18.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.311" endtime="20201029 12:43:18.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:18.323" endtime="20201029 12:43:18.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.322" endtime="20201029 12:43:18.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.321" endtime="20201029 12:43:18.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.958" endtime="20201029 12:43:18.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.958" endtime="20201029 12:43:18.344"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.353" endtime="20201029 12:43:18.368"></status>
</kw>
<msg timestamp="20201029 12:43:18.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.351" endtime="20201029 12:43:18.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.369" endtime="20201029 12:43:18.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.372" endtime="20201029 12:43:18.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.349" endtime="20201029 12:43:18.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.347" endtime="20201029 12:43:18.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.381" endtime="20201029 12:43:18.669"></status>
</kw>
<msg timestamp="20201029 12:43:18.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.379" endtime="20201029 12:43:18.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.673" endtime="20201029 12:43:18.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.687" endtime="20201029 12:43:18.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.377" endtime="20201029 12:43:18.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.375" endtime="20201029 12:43:18.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.702" level="INFO">${RESULT} = [{'diff': 1.2499999999998623e-05}, {'diff': 1.1903000000000608e-05}, {'diff': 1.2486000000002523e-05}, {'diff': 1.252699999999829e-05}, {'diff': 1.251299999999872e-05}, {'diff': 1.1889000000001038e-05...</msg>
<status status="PASS" starttime="20201029 12:43:18.694" endtime="20201029 12:43:18.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:18.713" level="INFO">${ACCURACY} = {'diff': [1.2499999999998623e-05, 1.1903000000000608e-05, 1.2486000000002523e-05, 1.252699999999829e-05, 1.251299999999872e-05, 1.1889000000001038e-05, 1.2180999999999997e-05, 1.2180000000000524e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:18.704" endtime="20201029 12:43:18.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.723" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:43:18.720" endtime="20201029 12:43:18.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.728" level="INFO">VALUE: [1.2499999999998623e-05, 1.1903000000000608e-05, 1.2486000000002523e-05, 1.252699999999829e-05, 1.251299999999872e-05, 1.1889000000001038e-05, 1.2180999999999997e-05, 1.2180000000000524e-05, 1.2236000000002273e-05, 1.1902999999997138e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2194000000000094e-05, 1.2221999999999233e-05, 1.2237000000001746e-05, 1.2208999999999137e-05, 1.2499999999998623e-05, 1.2207999999999664e-05, 1.1584000000001982e-05, 1.2485999999999053e-05, 1.1888000000001564e-05, 1.1582999999999039e-05, 1.2207999999999664e-05, 1.2499999999998623e-05, 1.2194000000000094e-05, 1.2514000000001663e-05, 1.2180000000000524e-05, 1.2180000000000524e-05, 1.2528000000001233e-05, 1.2499999999998623e-05, 1.1902000000001134e-05, 1.2500000000002093e-05, 1.1889000000001038e-05, 1.2514000000001663e-05, 1.2235999999998803e-05, 1.2500000000002093e-05, 1.2499999999998623e-05, 1.2194000000000094e-05, 1.2485999999999053e-05, 1.2180000000000524e-05, 1.2153000000000858e-05, 1.2499999999998623e-05, 1.2500000000002093e-05, 1.2513999999998193e-05, 1.2236000000002273e-05, 1.2194000000000094e-05, 1.2194999999999567e-05, 1.2194000000000094e-05, 1.2499999999998623e-05, 1.2194000000000094e-05]</msg>
<status status="PASS" starttime="20201029 12:43:18.725" endtime="20201029 12:43:18.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.715" endtime="20201029 12:43:18.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:18.740" endtime="20201029 12:43:18.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.736" endtime="20201029 12:43:18.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.733" endtime="20201029 12:43:18.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.345" endtime="20201029 12:43:18.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.344" endtime="20201029 12:43:18.766"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.782" endtime="20201029 12:43:18.797"></status>
</kw>
<msg timestamp="20201029 12:43:18.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.780" endtime="20201029 12:43:18.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.798" endtime="20201029 12:43:18.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.801" endtime="20201029 12:43:18.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.776" endtime="20201029 12:43:18.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.771" endtime="20201029 12:43:18.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.810" endtime="20201029 12:43:19.099"></status>
</kw>
<msg timestamp="20201029 12:43:19.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033047042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033061069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.809" endtime="20201029 12:43:19.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033047042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033061069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.103" endtime="20201029 12:43:19.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.112" endtime="20201029 12:43:19.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.806" endtime="20201029 12:43:19.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.804" endtime="20201029 12:43:19.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.120" level="INFO">${RESULT} = [{'diff': 1.402699999999979e-05}, {'diff': 1.2805000000004618e-05}, {'diff': 1.3443999999994405e-05}, {'diff': 1.2805999999997153e-05}, {'diff': 1.3402000000002634e-05}, {'diff': 1.3111000000003148e-0...</msg>
<status status="PASS" starttime="20201029 12:43:19.116" endtime="20201029 12:43:19.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:19.124" level="INFO">${ACCURACY} = {'diff': [1.402699999999979e-05, 1.2805000000004618e-05, 1.3443999999994405e-05, 1.2805999999997153e-05, 1.3402000000002634e-05, 1.3111000000003148e-05, 1.3110999999996209e-05, 1.2861000000002898e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:19.121" endtime="20201029 12:43:19.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.129" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:43:19.128" endtime="20201029 12:43:19.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.131" level="INFO">VALUE: [1.402699999999979e-05, 1.2805000000004618e-05, 1.3443999999994405e-05, 1.2805999999997153e-05, 1.3402000000002634e-05, 1.3111000000003148e-05, 1.3110999999996209e-05, 1.2861000000002898e-05, 1.3416999999994739e-05, 1.3097999999996113e-05, 1.3125000000002718e-05, 1.3111000000003148e-05, 1.3139000000002288e-05, 1.3402999999995169e-05, 1.3486999999999527e-05, 1.3402000000002634e-05, 1.280499999999768e-05, 1.3416000000002204e-05, 1.3096999999996639e-05, 1.3110999999996209e-05, 1.3403000000002108e-05, 1.3055000000004868e-05, 1.3430000000001774e-05, 1.3333000000004258e-05, 1.3403000000002108e-05, 1.2805999999997153e-05, 1.3445000000000817e-05, 1.3486999999999527e-05, 1.2875000000002468e-05, 1.2499999999998623e-05, 1.3111000000003148e-05, 1.3125000000002718e-05, 1.3124999999995779e-05, 1.3112000000002622e-05, 1.3125000000002718e-05, 1.3486000000000054e-05, 1.3430000000001774e-05, 1.3124999999995779e-05, 1.3097999999996113e-05, 1.3083999999996543e-05, 1.3431000000001247e-05, 1.3415999999995265e-05, 1.2805999999997153e-05, 1.3417000000001678e-05, 1.3153000000001858e-05, 1.3431000000001247e-05, 1.3111000000003148e-05, 1.3402999999995169e-05, 1.280499999999768e-05, 1.2819000000004188e-05]</msg>
<status status="PASS" starttime="20201029 12:43:19.130" endtime="20201029 12:43:19.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.125" endtime="20201029 12:43:19.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:19.137" endtime="20201029 12:43:19.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.135" endtime="20201029 12:43:19.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.134" endtime="20201029 12:43:19.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.768" endtime="20201029 12:43:19.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.766" endtime="20201029 12:43:19.158"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.167" endtime="20201029 12:43:19.183"></status>
</kw>
<msg timestamp="20201029 12:43:19.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.166" endtime="20201029 12:43:19.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.187" endtime="20201029 12:43:19.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.190" endtime="20201029 12:43:19.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.163" endtime="20201029 12:43:19.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.161" endtime="20201029 12:43:19.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.202" endtime="20201029 12:43:19.492"></status>
</kw>
<msg timestamp="20201029 12:43:19.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023241181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023255792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.200" endtime="20201029 12:43:19.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023241181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023255792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.502" endtime="20201029 12:43:19.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.521" endtime="20201029 12:43:19.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.198" endtime="20201029 12:43:19.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.196" endtime="20201029 12:43:19.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.536" level="INFO">${RESULT} = [{'diff': 1.4611000000001179e-05}, {'diff': 1.4027999999999263e-05}, {'diff': 1.433299999999832e-05}, {'diff': 1.4402999999999638e-05}, {'diff': 1.4013999999999693e-05}, {'diff': 1.4348000000000832e-0...</msg>
<status status="PASS" starttime="20201029 12:43:19.530" endtime="20201029 12:43:19.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:19.546" level="INFO">${ACCURACY} = {'diff': [1.4611000000001179e-05, 1.4027999999999263e-05, 1.433299999999832e-05, 1.4402999999999638e-05, 1.4013999999999693e-05, 1.4348000000000832e-05, 1.4639000000000318e-05, 1.4347000000001359e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:19.539" endtime="20201029 12:43:19.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.555" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:43:19.553" endtime="20201029 12:43:19.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.560" level="INFO">VALUE: [1.4611000000001179e-05, 1.4027999999999263e-05, 1.433299999999832e-05, 1.4402999999999638e-05, 1.4013999999999693e-05, 1.4348000000000832e-05, 1.4639000000000318e-05, 1.4347000000001359e-05, 1.4111000000000679e-05, 1.4652999999999888e-05, 1.3957999999997944e-05, 1.4625000000000749e-05, 1.4333000000001789e-05, 1.434699999999789e-05, 1.4597000000001609e-05, 1.4041999999998833e-05, 1.4333000000001789e-05, 1.4013999999999693e-05, 1.4639000000000318e-05, 1.4333000000001789e-05, 1.4347000000001359e-05, 1.434699999999789e-05, 1.4013999999999693e-05, 1.4639000000000318e-05, 1.4333999999997793e-05, 1.4347000000001359e-05, 1.4361000000000929e-05, 1.4360999999997459e-05, 1.4652999999999888e-05, 1.4055999999998403e-05, 1.4305999999998653e-05, 1.4624999999997279e-05, 1.4333000000001789e-05, 1.4333000000001789e-05, 1.461099999999771e-05, 1.4347000000001359e-05, 1.4306000000002123e-05, 1.4277999999999513e-05, 1.4347000000001359e-05, 1.4041999999998833e-05, 1.4319999999998223e-05, 1.4334000000001262e-05, 1.4027999999999263e-05, 1.4042000000002303e-05, 1.4334000000001262e-05, 1.4333000000001789e-05, 1.4652999999999888e-05, 1.4013999999999693e-05, 1.4361000000000929e-05, 1.4667000000002928e-05]</msg>
<status status="PASS" starttime="20201029 12:43:19.557" endtime="20201029 12:43:19.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.548" endtime="20201029 12:43:19.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:19.572" endtime="20201029 12:43:19.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.569" endtime="20201029 12:43:19.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.567" endtime="20201029 12:43:19.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.159" endtime="20201029 12:43:19.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.159" endtime="20201029 12:43:19.593"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.602" endtime="20201029 12:43:19.616"></status>
</kw>
<msg timestamp="20201029 12:43:19.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.601" endtime="20201029 12:43:19.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.618" endtime="20201029 12:43:19.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.620" endtime="20201029 12:43:19.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.598" endtime="20201029 12:43:19.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.596" endtime="20201029 12:43:19.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.629" endtime="20201029 12:43:19.915"></status>
</kw>
<msg timestamp="20201029 12:43:19.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.628" endtime="20201029 12:43:19.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.919" endtime="20201029 12:43:19.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.927" endtime="20201029 12:43:19.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.625" endtime="20201029 12:43:19.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.624" endtime="20201029 12:43:19.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.934" level="INFO">${RESULT} = [{'diff': 1.5236000000001804e-05}, {'diff': 1.4652999999999888e-05}, {'diff': 1.555500000000043e-05}, {'diff': 1.5555999999999903e-05}, {'diff': 1.555499999999696e-05}, {'diff': 1.4943999999999374e-05...</msg>
<status status="PASS" starttime="20201029 12:43:19.931" endtime="20201029 12:43:19.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:19.939" level="INFO">${ACCURACY} = {'diff': [1.5236000000001804e-05, 1.4652999999999888e-05, 1.555500000000043e-05, 1.5555999999999903e-05, 1.555499999999696e-05, 1.4943999999999374e-05, 1.5569e-05, 1.5236000000001804e-05, 1.5555000000...</msg>
<status status="PASS" starttime="20201029 12:43:19.935" endtime="20201029 12:43:19.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.944" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:43:19.943" endtime="20201029 12:43:19.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.946" level="INFO">VALUE: [1.5236000000001804e-05, 1.4652999999999888e-05, 1.555500000000043e-05, 1.5555999999999903e-05, 1.555499999999696e-05, 1.4943999999999374e-05, 1.5569e-05, 1.5236000000001804e-05, 1.555500000000043e-05, 1.5250000000001374e-05, 1.5264000000000943e-05, 1.5569e-05, 1.5250000000001374e-05, 1.4958000000002414e-05, 1.527699999999757e-05, 1.562499999999828e-05, 1.4958999999998418e-05, 1.5569e-05, 1.5278000000000513e-05, 1.5249999999997904e-05, 1.5500000000001624e-05, 1.5264000000000943e-05, 1.5292000000000083e-05, 1.4944999999998848e-05, 1.5250000000001374e-05, 1.5194999999999098e-05, 1.555500000000043e-05, 1.5555999999999903e-05, 1.5235999999998334e-05, 1.5249999999997904e-05, 1.4639000000000318e-05, 1.5569999999999473e-05, 1.5249999999997904e-05, 1.527700000000104e-05, 1.562499999999828e-05, 1.4959000000001887e-05, 1.5570000000002943e-05, 1.4959000000001887e-05, 1.4929999999999805e-05, 1.5570000000002943e-05, 1.5249999999997904e-05, 1.4957999999998944e-05, 1.5278000000000513e-05, 1.5262999999998e-05, 1.5236000000001804e-05, 1.5250000000001374e-05, 1.5235999999998334e-05, 1.4945000000002318e-05, 1.529100000000061e-05, 1.5249999999997904e-05]</msg>
<status status="PASS" starttime="20201029 12:43:19.945" endtime="20201029 12:43:19.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.940" endtime="20201029 12:43:19.947"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:19.951" endtime="20201029 12:43:19.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.949" endtime="20201029 12:43:19.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.948" endtime="20201029 12:43:19.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.594" endtime="20201029 12:43:19.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.594" endtime="20201029 12:43:19.971"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.980" endtime="20201029 12:43:19.995"></status>
</kw>
<msg timestamp="20201029 12:43:19.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.979" endtime="20201029 12:43:19.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.996" endtime="20201029 12:43:19.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.999" endtime="20201029 12:43:20.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.976" endtime="20201029 12:43:20.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.974" endtime="20201029 12:43:20.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.008" endtime="20201029 12:43:20.298"></status>
</kw>
<msg timestamp="20201029 12:43:20.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.006" endtime="20201029 12:43:20.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.320" endtime="20201029 12:43:20.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.355" endtime="20201029 12:43:20.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.004" endtime="20201029 12:43:20.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.002" endtime="20201029 12:43:20.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.375" level="INFO">${RESULT} = [{'diff': 1.644499999999688e-05}, {'diff': 1.584699999999939e-05}, {'diff': 1.6485999999999584e-05}, {'diff': 1.616700000000096e-05}, {'diff': 1.563899999999785e-05}, {'diff': 1.6485999999999584e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:20.366" endtime="20201029 12:43:20.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:20.388" level="INFO">${ACCURACY} = {'diff': [1.644499999999688e-05, 1.584699999999939e-05, 1.6485999999999584e-05, 1.616700000000096e-05, 1.563899999999785e-05, 1.6485999999999584e-05, 1.6485999999999584e-05, 1.618099999999706e-05, 1.6...</msg>
<status status="PASS" starttime="20201029 12:43:20.379" endtime="20201029 12:43:20.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.398" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:43:20.396" endtime="20201029 12:43:20.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.403" level="INFO">VALUE: [1.644499999999688e-05, 1.584699999999939e-05, 1.6485999999999584e-05, 1.616700000000096e-05, 1.563899999999785e-05, 1.6485999999999584e-05, 1.6485999999999584e-05, 1.618099999999706e-05, 1.616700000000096e-05, 1.6472000000000014e-05, 1.5833999999999293e-05, 1.6486999999999058e-05, 1.6485999999999584e-05, 1.583299999999982e-05, 1.6195000000000098e-05, 1.6485999999999584e-05, 1.5833999999999293e-05, 1.6194000000000625e-05, 1.616699999999749e-05, 1.616700000000096e-05, 1.609699999999964e-05, 1.6165999999998015e-05, 1.6166000000001485e-05, 1.615300000000139e-05, 1.5485999999998584e-05, 1.6499999999999154e-05, 1.581900000000025e-05, 1.616700000000096e-05, 1.6165999999998015e-05, 1.6222999999999238e-05, 1.6195000000000098e-05, 1.6556000000000903e-05, 1.6472000000000014e-05, 1.6181000000000528e-05, 1.6485999999999584e-05, 1.616699999999749e-05, 1.6485999999999584e-05, 1.6472000000000014e-05, 1.6194000000000625e-05, 1.6181000000000528e-05, 1.6195000000000098e-05, 1.587499999999853e-05, 1.555500000000043e-05, 1.6485999999999584e-05, 1.609699999999964e-05, 1.584700000000286e-05, 1.6401999999998695e-05, 1.555500000000043e-05, 1.6181000000000528e-05, 1.615299999999792e-05]</msg>
<status status="PASS" starttime="20201029 12:43:20.400" endtime="20201029 12:43:20.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.390" endtime="20201029 12:43:20.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:20.412" endtime="20201029 12:43:20.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.409" endtime="20201029 12:43:20.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.407" endtime="20201029 12:43:20.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.972" endtime="20201029 12:43:20.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.972" endtime="20201029 12:43:20.434"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.449" endtime="20201029 12:43:20.466"></status>
</kw>
<msg timestamp="20201029 12:43:20.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.446" endtime="20201029 12:43:20.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.468" endtime="20201029 12:43:20.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.470" endtime="20201029 12:43:20.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.442" endtime="20201029 12:43:20.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.438" endtime="20201029 12:43:20.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.481" endtime="20201029 12:43:20.767"></status>
</kw>
<msg timestamp="20201029 12:43:20.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031465722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031483083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.479" endtime="20201029 12:43:20.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031465722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031483083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.771" endtime="20201029 12:43:20.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.780" endtime="20201029 12:43:20.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.476" endtime="20201029 12:43:20.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.474" endtime="20201029 12:43:20.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.786" level="INFO">${RESULT} = [{'diff': 1.736100000000046e-05}, {'diff': 1.6778000000002014e-05}, {'diff': 1.73889999999996e-05}, {'diff': 1.7415999999999265e-05}, {'diff': 1.741699999999874e-05}, {'diff': 1.73889999999996e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:20.783" endtime="20201029 12:43:20.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:20.790" level="INFO">${ACCURACY} = {'diff': [1.736100000000046e-05, 1.6778000000002014e-05, 1.73889999999996e-05, 1.7415999999999265e-05, 1.741699999999874e-05, 1.73889999999996e-05, 1.737500000000003e-05, 1.6778000000002014e-05, 1.744...</msg>
<status status="PASS" starttime="20201029 12:43:20.787" endtime="20201029 12:43:20.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.795" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:43:20.794" endtime="20201029 12:43:20.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.797" level="INFO">VALUE: [1.736100000000046e-05, 1.6778000000002014e-05, 1.73889999999996e-05, 1.7415999999999265e-05, 1.741699999999874e-05, 1.73889999999996e-05, 1.737500000000003e-05, 1.6778000000002014e-05, 1.7443999999998405e-05, 1.70969999999937e-05, 1.736100000000046e-05, 1.7098000000000113e-05, 1.704099999999542e-05, 1.7098000000000113e-05, 1.741699999999874e-05, 1.6472000000003484e-05, 1.73889999999996e-05, 1.73889999999996e-05, 1.740299999999917e-05, 1.6471999999996545e-05, 1.734700000000089e-05, 1.6778000000002014e-05, 1.712499999999978e-05, 1.734699999999395e-05, 1.7098000000000113e-05, 1.713899999999935e-05, 1.73889999999996e-05, 1.73889999999996e-05, 1.6778000000002014e-05, 1.7028000000002264e-05, 1.744499999999788e-05, 1.73889999999996e-05, 1.6763999999995505e-05, 1.709700000000064e-05, 1.7042000000001833e-05, 1.737500000000003e-05, 1.709700000000064e-05, 1.70969999999937e-05, 1.709700000000064e-05, 1.709700000000064e-05, 1.711100000000021e-05, 1.740299999999917e-05, 1.7014000000002694e-05, 1.70690000000015e-05, 1.712499999999978e-05, 1.7401999999999695e-05, 1.677700000000254e-05, 1.7084000000000543e-05, 1.708300000000107e-05, 1.740299999999917e-05]</msg>
<status status="PASS" starttime="20201029 12:43:20.796" endtime="20201029 12:43:20.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.791" endtime="20201029 12:43:20.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:20.803" endtime="20201029 12:43:20.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.801" endtime="20201029 12:43:20.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.800" endtime="20201029 12:43:20.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.436" endtime="20201029 12:43:20.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.435" endtime="20201029 12:43:20.823"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.832" endtime="20201029 12:43:20.847"></status>
</kw>
<msg timestamp="20201029 12:43:20.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.831" endtime="20201029 12:43:20.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.848" endtime="20201029 12:43:20.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.851" endtime="20201029 12:43:20.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.828" endtime="20201029 12:43:20.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.826" endtime="20201029 12:43:20.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.859" endtime="20201029 12:43:21.146"></status>
</kw>
<msg timestamp="20201029 12:43:21.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021550931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021569833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.858" endtime="20201029 12:43:21.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021550931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021569833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.150" endtime="20201029 12:43:21.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.159" endtime="20201029 12:43:21.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.855" endtime="20201029 12:43:21.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.854" endtime="20201029 12:43:21.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:21.165" level="INFO">${RESULT} = [{'diff': 1.8902000000001196e-05}, {'diff': 1.77089999999977e-05}, {'diff': 1.861099999999824e-05}, {'diff': 1.8000000000000654e-05}, {'diff': 1.8014000000000224e-05}, {'diff': 1.794499999999838e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:21.162" endtime="20201029 12:43:21.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:21.170" level="INFO">${ACCURACY} = {'diff': [1.8902000000001196e-05, 1.77089999999977e-05, 1.861099999999824e-05, 1.8000000000000654e-05, 1.8014000000000224e-05, 1.794499999999838e-05, 1.8319999999998754e-05, 1.830499999999971e-05, 1.8...</msg>
<status status="PASS" starttime="20201029 12:43:21.166" endtime="20201029 12:43:21.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.175" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:43:21.174" endtime="20201029 12:43:21.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.177" level="INFO">VALUE: [1.8902000000001196e-05, 1.77089999999977e-05, 1.861099999999824e-05, 1.8000000000000654e-05, 1.8014000000000224e-05, 1.794499999999838e-05, 1.8319999999998754e-05, 1.830499999999971e-05, 1.85829999999991e-05, 1.831899999999928e-05, 1.861099999999824e-05, 1.834700000000189e-05, 1.8305999999999184e-05, 1.8612000000001183e-05, 1.8014000000000224e-05, 1.830499999999971e-05, 1.8541999999999864e-05, 1.831899999999928e-05, 1.834700000000189e-05, 1.831900000000275e-05, 1.831900000000275e-05, 1.837500000000103e-05, 1.831899999999928e-05, 1.8014000000000224e-05, 1.830499999999971e-05, 1.8306000000002653e-05, 1.861100000000171e-05, 1.831899999999928e-05, 1.837500000000103e-05, 1.829100000000014e-05, 1.8000000000000654e-05, 1.862499999999781e-05, 1.798699999999709e-05, 1.7709000000001168e-05, 1.7985999999997615e-05, 1.8000000000000654e-05, 1.8319999999998754e-05, 1.830499999999971e-05, 1.862500000000128e-05, 1.8291999999999614e-05, 1.859699999999867e-05, 1.8291999999999614e-05, 1.8000000000000654e-05, 1.8055999999998934e-05, 1.8291999999999614e-05, 1.8014000000000224e-05, 1.8292000000003084e-05, 1.8306000000002653e-05, 1.8000000000000654e-05, 1.830499999999971e-05]</msg>
<status status="PASS" starttime="20201029 12:43:21.176" endtime="20201029 12:43:21.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.171" endtime="20201029 12:43:21.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:21.187" endtime="20201029 12:43:21.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.185" endtime="20201029 12:43:21.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.184" endtime="20201029 12:43:21.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.824" endtime="20201029 12:43:21.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.824" endtime="20201029 12:43:21.208"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.216" endtime="20201029 12:43:21.231"></status>
</kw>
<msg timestamp="20201029 12:43:21.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.215" endtime="20201029 12:43:21.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.232" endtime="20201029 12:43:21.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.235" endtime="20201029 12:43:21.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.212" endtime="20201029 12:43:21.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.210" endtime="20201029 12:43:21.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.244" endtime="20201029 12:43:21.531"></status>
</kw>
<msg timestamp="20201029 12:43:21.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.242" endtime="20201029 12:43:21.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.535" endtime="20201029 12:43:21.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.544" endtime="20201029 12:43:21.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.240" endtime="20201029 12:43:21.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.238" endtime="20201029 12:43:21.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:21.550" level="INFO">${RESULT} = [{'diff': 1.947299999999902e-05}, {'diff': 1.959700000000314e-05}, {'diff': 1.8930000000000335e-05}, {'diff': 1.9264000000001474e-05}, {'diff': 1.9528000000001294e-05}, {'diff': 1.891700000000024e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:21.547" endtime="20201029 12:43:21.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:21.554" level="INFO">${ACCURACY} = {'diff': [1.947299999999902e-05, 1.959700000000314e-05, 1.8930000000000335e-05, 1.9264000000001474e-05, 1.9528000000001294e-05, 1.891700000000024e-05, 1.956900000000053e-05, 1.8916000000000766e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:43:21.551" endtime="20201029 12:43:21.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.559" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:43:21.558" endtime="20201029 12:43:21.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.561" level="INFO">VALUE: [1.947299999999902e-05, 1.959700000000314e-05, 1.8930000000000335e-05, 1.9264000000001474e-05, 1.9528000000001294e-05, 1.891700000000024e-05, 1.956900000000053e-05, 1.8916000000000766e-05, 1.9528000000001294e-05, 1.9235999999998865e-05, 1.9263999999998005e-05, 1.9236000000002335e-05, 1.9249999999998435e-05, 1.9250000000001904e-05, 1.9222000000002765e-05, 1.9542000000000864e-05, 1.95830000000001e-05, 1.891700000000024e-05, 1.862500000000128e-05, 1.9264000000001474e-05, 1.8916000000000766e-05, 1.862500000000128e-05, 1.9471999999999545e-05, 1.9236000000002335e-05, 1.9207999999999725e-05, 1.9221999999999295e-05, 1.888899999999763e-05, 1.861099999999824e-05, 1.9223000000002238e-05, 1.9541999999997395e-05, 1.9249999999998435e-05, 1.9542000000000864e-05, 1.922299999999877e-05, 1.888899999999763e-05, 1.922299999999877e-05, 1.9542000000000864e-05, 1.952699999999835e-05, 1.9457999999999975e-05, 1.954100000000139e-05, 1.9235999999998865e-05, 1.9514000000001724e-05, 1.9528000000001294e-05, 1.8916000000000766e-05, 1.9235999999998865e-05, 1.8541999999999864e-05, 1.9221999999999295e-05, 1.9235999999998865e-05, 1.9221999999999295e-05, 1.9541999999997395e-05, 1.9235999999998865e-05]</msg>
<status status="PASS" starttime="20201029 12:43:21.560" endtime="20201029 12:43:21.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.555" endtime="20201029 12:43:21.562"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:21.566" endtime="20201029 12:43:21.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.565" endtime="20201029 12:43:21.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.563" endtime="20201029 12:43:21.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.209" endtime="20201029 12:43:21.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.208" endtime="20201029 12:43:21.587"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.595" endtime="20201029 12:43:21.614"></status>
</kw>
<msg timestamp="20201029 12:43:21.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.594" endtime="20201029 12:43:21.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.615" endtime="20201029 12:43:21.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.618" endtime="20201029 12:43:21.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.591" endtime="20201029 12:43:21.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.589" endtime="20201029 12:43:21.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.627" endtime="20201029 12:43:21.927"></status>
</kw>
<msg timestamp="20201029 12:43:21.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024864861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024885611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.625" endtime="20201029 12:43:21.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024864861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024885611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.931" endtime="20201029 12:43:21.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.940" endtime="20201029 12:43:21.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.623" endtime="20201029 12:43:21.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.621" endtime="20201029 12:43:21.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:21.946" level="INFO">${RESULT} = [{'diff': 2.0749999999999935e-05}, {'diff': 2.0514000000002724e-05}, {'diff': 2.0472000000000545e-05}, {'diff': 2.043099999999784e-05}, {'diff': 2.013900000000235e-05}, {'diff': 2.040300000000217e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:21.943" endtime="20201029 12:43:21.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:21.951" level="INFO">${ACCURACY} = {'diff': [2.0749999999999935e-05, 2.0514000000002724e-05, 2.0472000000000545e-05, 2.043099999999784e-05, 2.013900000000235e-05, 2.040300000000217e-05, 2.0069999999997035e-05, 2.011099999999974e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:43:21.947" endtime="20201029 12:43:21.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.955" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:43:21.954" endtime="20201029 12:43:21.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.957" level="INFO">VALUE: [2.0749999999999935e-05, 2.0514000000002724e-05, 2.0472000000000545e-05, 2.043099999999784e-05, 2.013900000000235e-05, 2.040300000000217e-05, 2.0069999999997035e-05, 2.011099999999974e-05, 2.013899999999888e-05, 2.012499999999931e-05, 2.041699999999827e-05, 2.013899999999888e-05, 2.045900000000045e-05, 2.012499999999931e-05, 2.013899999999888e-05, 1.9820000000000254e-05, 2.0458000000000975e-05, 2.0429999999998366e-05, 2.03890000000026e-05, 2.015299999999845e-05, 2.012499999999931e-05, 2.0472000000000545e-05, 2.044500000000088e-05, 2.013900000000235e-05, 2.015300000000192e-05, 2.016700000000149e-05, 2.013899999999888e-05, 2.015300000000192e-05, 2.043099999999784e-05, 2.0458000000000975e-05, 2.015299999999845e-05, 2.0084000000000074e-05, 2.015299999999845e-05, 1.954099999999792e-05, 1.954100000000139e-05, 2.015299999999845e-05, 2.0513999999999255e-05, 2.0458000000000975e-05, 2.0415999999998796e-05, 2.006899999999756e-05, 2.043100000000131e-05, 2.0513999999999255e-05, 2.015299999999845e-05, 2.0457999999997506e-05, 2.045900000000045e-05, 2.015299999999845e-05, 2.012499999999931e-05, 2.0444000000001405e-05, 2.044500000000088e-05, 2.040300000000217e-05]</msg>
<status status="PASS" starttime="20201029 12:43:21.956" endtime="20201029 12:43:21.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.951" endtime="20201029 12:43:21.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:21.963" endtime="20201029 12:43:21.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.962" endtime="20201029 12:43:21.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.961" endtime="20201029 12:43:21.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.588" endtime="20201029 12:43:21.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.587" endtime="20201029 12:43:21.984"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.992" endtime="20201029 12:43:22.007"></status>
</kw>
<msg timestamp="20201029 12:43:22.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.991" endtime="20201029 12:43:22.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.008" endtime="20201029 12:43:22.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.011" endtime="20201029 12:43:22.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.988" endtime="20201029 12:43:22.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.986" endtime="20201029 12:43:22.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.020" endtime="20201029 12:43:22.310"></status>
</kw>
<msg timestamp="20201029 12:43:22.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021417069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021439, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:22.018" endtime="20201029 12:43:22.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021417069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021439, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:22.315" endtime="20201029 12:43:22.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.323" endtime="20201029 12:43:22.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.016" endtime="20201029 12:43:22.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.014" endtime="20201029 12:43:22.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:22.330" level="INFO">${RESULT} = [{'diff': 2.193099999999934e-05}, {'diff': 2.07769999999996e-05}, {'diff': 2.1361999999996995e-05}, {'diff': 2.137500000000056e-05}, {'diff': 2.136099999999752e-05}, {'diff': 2.136100000000099e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:22.326" endtime="20201029 12:43:22.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:22.335" level="INFO">${ACCURACY} = {'diff': [2.193099999999934e-05, 2.07769999999996e-05, 2.1361999999996995e-05, 2.137500000000056e-05, 2.136099999999752e-05, 2.136100000000099e-05, 2.136100000000099e-05, 2.1388000000000656e-05, 2.076...</msg>
<status status="PASS" starttime="20201029 12:43:22.331" endtime="20201029 12:43:22.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.339" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:43:22.338" endtime="20201029 12:43:22.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.342" level="INFO">VALUE: [2.193099999999934e-05, 2.07769999999996e-05, 2.1361999999996995e-05, 2.137500000000056e-05, 2.136099999999752e-05, 2.136100000000099e-05, 2.136100000000099e-05, 2.1388000000000656e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.1069999999998035e-05, 2.1070000000001504e-05, 2.105499999999899e-05, 2.1362000000000464e-05, 2.137500000000056e-05, 2.137500000000056e-05, 2.1055999999998465e-05, 2.1000000000000185e-05, 2.1362000000000464e-05, 2.1000000000000185e-05, 2.1637999999997437e-05, 2.1041999999998895e-05, 2.0708000000001225e-05, 2.112500000000031e-05, 2.137500000000056e-05, 2.138900000000013e-05, 2.0749999999999935e-05, 2.10830000000016e-05, 2.0763999999999505e-05, 2.133300000000185e-05, 2.136099999999752e-05, 2.1348000000000894e-05, 2.136100000000099e-05, 2.14029999999997e-05, 2.166699999999952e-05, 2.1042000000002364e-05, 2.137500000000056e-05, 2.1013999999999755e-05, 2.1055999999998465e-05, 2.1069999999998035e-05, 2.136100000000099e-05, 2.10969999999977e-05, 2.133300000000185e-05, 2.134700000000142e-05, 2.105499999999899e-05, 2.136100000000099e-05, 2.112500000000031e-05, 2.134700000000142e-05, 2.1735999999997896e-05, 2.141699999999927e-05]</msg>
<status status="PASS" starttime="20201029 12:43:22.340" endtime="20201029 12:43:22.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.336" endtime="20201029 12:43:22.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:22.347" endtime="20201029 12:43:22.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.345" endtime="20201029 12:43:22.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.344" endtime="20201029 12:43:22.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.985" endtime="20201029 12:43:22.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.984" endtime="20201029 12:43:22.368"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.376" endtime="20201029 12:43:22.391"></status>
</kw>
<msg timestamp="20201029 12:43:22.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.375" endtime="20201029 12:43:22.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.393" endtime="20201029 12:43:22.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.395" endtime="20201029 12:43:22.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.372" endtime="20201029 12:43:22.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.370" endtime="20201029 12:43:22.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.405" endtime="20201029 12:43:22.709"></status>
</kw>
<msg timestamp="20201029 12:43:22.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.403" endtime="20201029 12:43:22.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.719" endtime="20201029 12:43:22.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.727" endtime="20201029 12:43:22.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.400" endtime="20201029 12:43:22.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.399" endtime="20201029 12:43:22.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:22.734" level="INFO">${RESULT} = [{'diff': 2.3165999999998077e-05}, {'diff': 2.197299999999805e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.2277999999997106e-05}, {'diff': 2.1971999999998576e-05}, {'diff': 2.1986000000001615e-0...</msg>
<status status="PASS" starttime="20201029 12:43:22.731" endtime="20201029 12:43:22.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:22.738" level="INFO">${ACCURACY} = {'diff': [2.3165999999998077e-05, 2.197299999999805e-05, 2.2278000000000575e-05, 2.2277999999997106e-05, 2.1971999999998576e-05, 2.1986000000001615e-05, 2.2292000000000145e-05, 2.230500000000024e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:22.735" endtime="20201029 12:43:22.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.743" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:43:22.742" endtime="20201029 12:43:22.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.745" level="INFO">VALUE: [2.3165999999998077e-05, 2.197299999999805e-05, 2.2278000000000575e-05, 2.2277999999997106e-05, 2.1971999999998576e-05, 2.1986000000001615e-05, 2.2292000000000145e-05, 2.230500000000024e-05, 2.2250000000001435e-05, 2.2555999999999965e-05, 2.229100000000067e-05, 2.1986000000001615e-05, 2.2292000000000145e-05, 2.168099999999909e-05, 2.258299999999963e-05, 2.2305999999999715e-05, 2.2319999999999285e-05, 2.2292000000000145e-05, 2.25969999999992e-05, 2.1985999999998146e-05, 2.2278000000000575e-05, 2.165299999999995e-05, 2.261100000000224e-05, 2.2292000000000145e-05, 2.1985999999998146e-05, 2.1971999999998576e-05, 2.256900000000006e-05, 2.230500000000024e-05, 2.25830000000031e-05, 2.195899999999848e-05, 2.2292000000000145e-05, 2.1971999999998576e-05, 2.258299999999963e-05, 2.1971999999998576e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.226300000000153e-05, 2.165299999999995e-05, 2.25969999999992e-05, 2.191699999999977e-05, 2.2278000000000575e-05, 2.2221999999998826e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.2583999999999105e-05, 2.2263999999997536e-05, 2.195900000000195e-05, 2.195900000000195e-05, 2.230500000000024e-05]</msg>
<status status="PASS" starttime="20201029 12:43:22.744" endtime="20201029 12:43:22.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.739" endtime="20201029 12:43:22.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:22.750" endtime="20201029 12:43:22.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.749" endtime="20201029 12:43:22.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.748" endtime="20201029 12:43:22.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.369" endtime="20201029 12:43:22.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.368" endtime="20201029 12:43:22.771"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.780" endtime="20201029 12:43:22.795"></status>
</kw>
<msg timestamp="20201029 12:43:22.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.778" endtime="20201029 12:43:22.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.797" endtime="20201029 12:43:22.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.800" endtime="20201029 12:43:22.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.775" endtime="20201029 12:43:22.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.773" endtime="20201029 12:43:22.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.809" endtime="20201029 12:43:23.094"></status>
</kw>
<msg timestamp="20201029 12:43:23.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.807" endtime="20201029 12:43:23.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.099" endtime="20201029 12:43:23.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.107" endtime="20201029 12:43:23.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.804" endtime="20201029 12:43:23.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.803" endtime="20201029 12:43:23.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:23.114" level="INFO">${RESULT} = [{'diff': 2.308300000000013e-05}, {'diff': 2.291700000000077e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.319500000000016e-05}, {'diff': 2.3194000000000686e-05}, {'diff': 2.319500000000016e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:23.110" endtime="20201029 12:43:23.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:23.118" level="INFO">${ACCURACY} = {'diff': [2.308300000000013e-05, 2.291700000000077e-05, 2.3472000000000076e-05, 2.319500000000016e-05, 2.3194000000000686e-05, 2.319500000000016e-05, 2.3193999999997217e-05, 2.3194000000000686e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:43:23.115" endtime="20201029 12:43:23.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.122" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:43:23.121" endtime="20201029 12:43:23.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.125" level="INFO">VALUE: [2.308300000000013e-05, 2.291700000000077e-05, 2.3472000000000076e-05, 2.319500000000016e-05, 2.3194000000000686e-05, 2.319500000000016e-05, 2.3193999999997217e-05, 2.3194000000000686e-05, 2.3512999999999312e-05, 2.3499999999999216e-05, 2.3513999999998786e-05, 2.319500000000016e-05, 2.294499999999991e-05, 2.3221999999999826e-05, 2.344500000000041e-05, 2.3485999999999646e-05, 2.319500000000016e-05, 2.315300000000145e-05, 2.3499999999999216e-05, 2.29030000000012e-05, 2.3485999999999646e-05, 2.3193999999997217e-05, 2.319500000000016e-05, 2.3499999999999216e-05, 2.3472000000000076e-05, 2.2901999999998257e-05, 2.3499999999999216e-05, 2.320899999999973e-05, 2.318100000000059e-05, 2.3180000000001116e-05, 2.3194000000000686e-05, 2.259700000000267e-05, 2.319500000000016e-05, 2.32229999999993e-05, 2.318100000000059e-05, 2.3513999999998786e-05, 2.3208000000000256e-05, 2.2887999999998687e-05, 2.318100000000059e-05, 2.3208000000000256e-05, 2.3208000000000256e-05, 2.319500000000016e-05, 2.3500000000002685e-05, 2.3208000000000256e-05, 2.3235999999999396e-05, 2.3208000000000256e-05, 2.3486000000003115e-05, 2.288900000000163e-05, 2.2569999999999535e-05, 2.319499999999669e-05]</msg>
<status status="PASS" starttime="20201029 12:43:23.123" endtime="20201029 12:43:23.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.119" endtime="20201029 12:43:23.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:23.131" endtime="20201029 12:43:23.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.129" endtime="20201029 12:43:23.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.128" endtime="20201029 12:43:23.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.772" endtime="20201029 12:43:23.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.771" endtime="20201029 12:43:23.151"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.160" endtime="20201029 12:43:23.175"></status>
</kw>
<msg timestamp="20201029 12:43:23.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.159" endtime="20201029 12:43:23.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.177" endtime="20201029 12:43:23.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.180" endtime="20201029 12:43:23.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.156" endtime="20201029 12:43:23.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.154" endtime="20201029 12:43:23.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.189" endtime="20201029 12:43:23.473"></status>
</kw>
<msg timestamp="20201029 12:43:23.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021771486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.187" endtime="20201029 12:43:23.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021771486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.478" endtime="20201029 12:43:23.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.486" endtime="20201029 12:43:23.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.185" endtime="20201029 12:43:23.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.183" endtime="20201029 12:43:23.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:23.493" level="INFO">${RESULT} = [{'diff': 2.440299999999923e-05}, {'diff': 2.380500000000174e-05}, {'diff': 2.444499999999794e-05}, {'diff': 2.444500000000141e-05}, {'diff': 2.40970000000007e-05}, {'diff': 2.4415999999999327e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:23.489" endtime="20201029 12:43:23.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:23.498" level="INFO">${ACCURACY} = {'diff': [2.440299999999923e-05, 2.380500000000174e-05, 2.444499999999794e-05, 2.444500000000141e-05, 2.40970000000007e-05, 2.4415999999999327e-05, 2.412499999999984e-05, 2.3499999999999216e-05, 2.433...</msg>
<status status="PASS" starttime="20201029 12:43:23.494" endtime="20201029 12:43:23.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.502" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:43:23.501" endtime="20201029 12:43:23.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.505" level="INFO">VALUE: [2.440299999999923e-05, 2.380500000000174e-05, 2.444499999999794e-05, 2.444500000000141e-05, 2.40970000000007e-05, 2.4415999999999327e-05, 2.412499999999984e-05, 2.3499999999999216e-05, 2.4334000000000855e-05, 2.44169999999988e-05, 2.441700000000227e-05, 2.411100000000027e-05, 2.3806000000001215e-05, 2.411100000000027e-05, 2.411100000000027e-05, 2.4165999999999077e-05, 2.4111999999999745e-05, 2.4348000000000425e-05, 2.411100000000027e-05, 2.44169999999988e-05, 2.412499999999984e-05, 2.4111999999999745e-05, 2.4152000000002977e-05, 2.418099999999812e-05, 2.444500000000141e-05, 2.412499999999984e-05, 2.4416000000002797e-05, 2.443100000000184e-05, 2.411100000000027e-05, 2.41109999999968e-05, 2.4166000000002547e-05, 2.4429999999998897e-05, 2.411100000000027e-05, 2.437500000000009e-05, 2.4098000000000175e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.4430000000002366e-05, 2.4098000000000175e-05, 2.440299999999923e-05, 2.443100000000184e-05, 2.3513999999998786e-05, 2.444500000000141e-05, 2.413899999999941e-05, 2.355500000000149e-05, 2.3500000000002685e-05, 2.443100000000184e-05, 2.3513999999998786e-05, 2.381900000000131e-05]</msg>
<status status="PASS" starttime="20201029 12:43:23.503" endtime="20201029 12:43:23.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.499" endtime="20201029 12:43:23.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:23.510" endtime="20201029 12:43:23.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.508" endtime="20201029 12:43:23.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.507" endtime="20201029 12:43:23.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.152" endtime="20201029 12:43:23.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.152" endtime="20201029 12:43:23.530"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.539" endtime="20201029 12:43:23.554"></status>
</kw>
<msg timestamp="20201029 12:43:23.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.538" endtime="20201029 12:43:23.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.556" endtime="20201029 12:43:23.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.558" endtime="20201029 12:43:23.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.535" endtime="20201029 12:43:23.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.533" endtime="20201029 12:43:23.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.568" endtime="20201029 12:43:23.854"></status>
</kw>
<msg timestamp="20201029 12:43:23.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021694292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.566" endtime="20201029 12:43:23.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021694292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.859" endtime="20201029 12:43:23.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.867" endtime="20201029 12:43:23.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.563" endtime="20201029 12:43:23.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.562" endtime="20201029 12:43:23.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:23.874" level="INFO">${RESULT} = [{'diff': 2.4986000000001146e-05}, {'diff': 2.5027999999999856e-05}, {'diff': 2.5291999999999676e-05}, {'diff': 2.565300000000048e-05}, {'diff': 2.5027999999999856e-05}, {'diff': 2.5346999999998482e-0...</msg>
<status status="PASS" starttime="20201029 12:43:23.871" endtime="20201029 12:43:23.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:23.878" level="INFO">${ACCURACY} = {'diff': [2.4986000000001146e-05, 2.5027999999999856e-05, 2.5291999999999676e-05, 2.565300000000048e-05, 2.5027999999999856e-05, 2.5346999999998482e-05, 2.5333999999998386e-05, 2.470900000000123e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:23.875" endtime="20201029 12:43:23.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.882" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:43:23.881" endtime="20201029 12:43:23.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.885" level="INFO">VALUE: [2.4986000000001146e-05, 2.5027999999999856e-05, 2.5291999999999676e-05, 2.565300000000048e-05, 2.5027999999999856e-05, 2.5346999999998482e-05, 2.5333999999998386e-05, 2.470900000000123e-05, 2.5040999999999952e-05, 2.534700000000195e-05, 2.5333999999998386e-05, 2.5041999999999426e-05, 2.5027000000000382e-05, 2.5027999999999856e-05, 2.563900000000091e-05, 2.5040999999999952e-05, 2.5346999999998482e-05, 2.5319999999998816e-05, 2.5305999999999246e-05, 2.5096999999998232e-05, 2.5416000000000327e-05, 2.5334000000001855e-05, 2.4750000000000466e-05, 2.534700000000195e-05, 2.537499999999762e-05, 2.5040999999999952e-05, 2.534700000000195e-05, 2.5069999999998566e-05, 2.565299999999701e-05, 2.5332999999998912e-05, 2.534700000000195e-05, 2.5333999999998386e-05, 2.5027000000000382e-05, 2.4736000000000896e-05, 2.5027999999999856e-05, 2.5040999999999952e-05, 2.536100000000152e-05, 2.540300000000023e-05, 2.534700000000195e-05, 2.4736000000000896e-05, 2.5068999999999092e-05, 2.5027999999999856e-05, 2.566700000000005e-05, 2.5318999999999342e-05, 2.4736000000000896e-05, 2.5332999999998912e-05, 2.5332999999998912e-05, 2.5333999999998386e-05, 2.4736000000000896e-05, 2.4736000000000896e-05]</msg>
<status status="PASS" starttime="20201029 12:43:23.884" endtime="20201029 12:43:23.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.879" endtime="20201029 12:43:23.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:23.890" endtime="20201029 12:43:23.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.889" endtime="20201029 12:43:23.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.887" endtime="20201029 12:43:23.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.531" endtime="20201029 12:43:23.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.531" endtime="20201029 12:43:23.911"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.919" endtime="20201029 12:43:23.936"></status>
</kw>
<msg timestamp="20201029 12:43:23.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.918" endtime="20201029 12:43:23.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.937" endtime="20201029 12:43:23.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.940" endtime="20201029 12:43:23.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.915" endtime="20201029 12:43:23.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.913" endtime="20201029 12:43:23.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.949" endtime="20201029 12:43:24.234"></status>
</kw>
<msg timestamp="20201029 12:43:24.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022695931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022722181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.947" endtime="20201029 12:43:24.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022695931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022722181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.238" endtime="20201029 12:43:24.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.247" endtime="20201029 12:43:24.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.945" endtime="20201029 12:43:24.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.943" endtime="20201029 12:43:24.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:24.254" level="INFO">${RESULT} = [{'diff': 2.6250000000001966e-05}, {'diff': 2.5624999999997872e-05}, {'diff': 2.562500000000134e-05}, {'diff': 2.6541000000001452e-05}, {'diff': 2.6235999999998927e-05}, {'diff': 2.6278000000001106e-0...</msg>
<status status="PASS" starttime="20201029 12:43:24.250" endtime="20201029 12:43:24.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:24.258" level="INFO">${ACCURACY} = {'diff': [2.6250000000001966e-05, 2.5624999999997872e-05, 2.562500000000134e-05, 2.6541000000001452e-05, 2.6235999999998927e-05, 2.6278000000001106e-05, 2.6541999999997457e-05, 2.594499999999944e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:24.254" endtime="20201029 12:43:24.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.262" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:43:24.261" endtime="20201029 12:43:24.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.265" level="INFO">VALUE: [2.6250000000001966e-05, 2.5624999999997872e-05, 2.562500000000134e-05, 2.6541000000001452e-05, 2.6235999999998927e-05, 2.6278000000001106e-05, 2.6541999999997457e-05, 2.594499999999944e-05, 2.6264000000001536e-05, 2.5957999999999537e-05, 2.619499999999969e-05, 2.6249999999998497e-05, 2.566700000000005e-05, 2.597299999999858e-05, 2.6583000000000162e-05, 2.594499999999944e-05, 2.6556000000000496e-05, 2.6235999999998927e-05, 2.5999999999998247e-05, 2.6569000000000592e-05, 2.6264000000001536e-05, 2.6569000000000592e-05, 2.6235999999998927e-05, 2.6541999999997457e-05, 2.6264000000001536e-05, 2.6264000000001536e-05, 2.6569000000000592e-05, 2.6569000000000592e-05, 2.6276999999998163e-05, 2.594499999999944e-05, 2.6263999999998067e-05, 2.6555000000001022e-05, 2.6249999999998497e-05, 2.5930000000000397e-05, 2.6278000000001106e-05, 2.6249999999998497e-05, 2.563900000000091e-05, 2.6569000000000592e-05, 2.5957999999999537e-05, 2.6235999999998927e-05, 2.590300000000073e-05, 2.6235999999998927e-05, 2.6278000000001106e-05, 2.6263999999998067e-05, 2.6556000000000496e-05, 2.5915999999997358e-05, 2.565300000000048e-05, 2.6555000000001022e-05, 2.620900000000273e-05, 2.6556000000000496e-05]</msg>
<status status="PASS" starttime="20201029 12:43:24.263" endtime="20201029 12:43:24.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.259" endtime="20201029 12:43:24.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:24.271" endtime="20201029 12:43:24.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.269" endtime="20201029 12:43:24.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.268" endtime="20201029 12:43:24.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.912" endtime="20201029 12:43:24.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.911" endtime="20201029 12:43:24.291"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.300" endtime="20201029 12:43:24.316"></status>
</kw>
<msg timestamp="20201029 12:43:24.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.298" endtime="20201029 12:43:24.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.318" endtime="20201029 12:43:24.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.321" endtime="20201029 12:43:24.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.296" endtime="20201029 12:43:24.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.294" endtime="20201029 12:43:24.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.330" endtime="20201029 12:43:24.616"></status>
</kw>
<msg timestamp="20201029 12:43:24.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.329" endtime="20201029 12:43:24.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.620" endtime="20201029 12:43:24.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.629" endtime="20201029 12:43:24.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.326" endtime="20201029 12:43:24.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.324" endtime="20201029 12:43:24.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:24.635" level="INFO">${RESULT} = [{'diff': 2.7776999999999663e-05}, {'diff': 2.6833000000000412e-05}, {'diff': 2.716699999999808e-05}, {'diff': 2.7486000000000177e-05}, {'diff': 2.6874999999999122e-05}, {'diff': 2.716700000000155e-05...</msg>
<status status="PASS" starttime="20201029 12:43:24.632" endtime="20201029 12:43:24.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:24.641" level="INFO">${ACCURACY} = {'diff': [2.7776999999999663e-05, 2.6833000000000412e-05, 2.716699999999808e-05, 2.7486000000000177e-05, 2.6874999999999122e-05, 2.716700000000155e-05, 2.716700000000155e-05, 2.6542000000000926e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:43:24.636" endtime="20201029 12:43:24.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.645" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:43:24.644" endtime="20201029 12:43:24.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.648" level="INFO">VALUE: [2.7776999999999663e-05, 2.6833000000000412e-05, 2.716699999999808e-05, 2.7486000000000177e-05, 2.6874999999999122e-05, 2.716700000000155e-05, 2.716700000000155e-05, 2.6542000000000926e-05, 2.7180000000001647e-05, 2.7194000000001217e-05, 2.7472000000000607e-05, 2.716700000000155e-05, 2.7458000000001037e-05, 2.69170000000013e-05, 2.747300000000008e-05, 2.7486000000000177e-05, 2.716699999999808e-05, 2.7166000000002077e-05, 2.7194000000001217e-05, 2.7542000000001926e-05, 2.716700000000155e-05, 2.7458000000001037e-05, 2.7472000000000607e-05, 2.7513999999999317e-05, 2.7165999999998608e-05, 2.718099999999765e-05, 2.740299999999876e-05, 2.7110999999999802e-05, 2.716700000000155e-05, 2.7097000000000232e-05, 2.715300000000198e-05, 2.6570000000000066e-05, 2.7179999999998178e-05, 2.7486000000000177e-05, 2.716699999999808e-05, 2.716699999999808e-05, 2.716699999999808e-05, 2.7472000000000607e-05, 2.6860999999999552e-05, 2.6555000000001022e-05, 2.7194000000001217e-05, 2.7222000000000357e-05, 2.7429999999998428e-05, 2.7180000000001647e-05, 2.718099999999765e-05, 2.7556000000001496e-05, 2.716700000000155e-05, 2.716700000000155e-05, 2.6554999999997553e-05, 2.718099999999765e-05]</msg>
<status status="PASS" starttime="20201029 12:43:24.646" endtime="20201029 12:43:24.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.641" endtime="20201029 12:43:24.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:24.653" endtime="20201029 12:43:24.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.651" endtime="20201029 12:43:24.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.650" endtime="20201029 12:43:24.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.292" endtime="20201029 12:43:24.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.292" endtime="20201029 12:43:24.673"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.682" endtime="20201029 12:43:24.697"></status>
</kw>
<msg timestamp="20201029 12:43:24.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.681" endtime="20201029 12:43:24.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.699" endtime="20201029 12:43:24.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.701" endtime="20201029 12:43:24.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.678" endtime="20201029 12:43:24.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.676" endtime="20201029 12:43:24.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.711" endtime="20201029 12:43:24.997"></status>
</kw>
<msg timestamp="20201029 12:43:25.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021705097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021734083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.709" endtime="20201029 12:43:25.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021705097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021734083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.001" endtime="20201029 12:43:25.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.010" endtime="20201029 12:43:25.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.706" endtime="20201029 12:43:25.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.705" endtime="20201029 12:43:25.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:25.016" level="INFO">${RESULT} = [{'diff': 2.8986000000001677e-05}, {'diff': 2.7776999999999663e-05}, {'diff': 2.8083000000001662e-05}, {'diff': 2.8402999999999762e-05}, {'diff': 2.7486000000000177e-05}, {'diff': 2.7777999999999137e-...</msg>
<status status="PASS" starttime="20201029 12:43:25.013" endtime="20201029 12:43:25.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:25.021" level="INFO">${ACCURACY} = {'diff': [2.8986000000001677e-05, 2.7776999999999663e-05, 2.8083000000001662e-05, 2.8402999999999762e-05, 2.7486000000000177e-05, 2.7777999999999137e-05, 2.8124999999996902e-05, 2.8388000000000718e-05...</msg>
<status status="PASS" starttime="20201029 12:43:25.017" endtime="20201029 12:43:25.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.025" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:43:25.024" endtime="20201029 12:43:25.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.027" level="INFO">VALUE: [2.8986000000001677e-05, 2.7776999999999663e-05, 2.8083000000001662e-05, 2.8402999999999762e-05, 2.7486000000000177e-05, 2.7777999999999137e-05, 2.8124999999996902e-05, 2.8388000000000718e-05, 2.8402999999999762e-05, 2.8083000000001662e-05, 2.8389000000000192e-05, 2.8125000000000372e-05, 2.7777999999999137e-05, 2.8098000000000706e-05, 2.8112000000000276e-05, 2.8375000000000622e-05, 2.8111000000000802e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.8068999999998623e-05, 2.8069999999998096e-05, 2.8375000000000622e-05, 2.8138999999999942e-05, 2.84170000000028e-05, 2.870900000000176e-05, 2.7776999999999663e-05, 2.7486000000000177e-05, 2.8388000000000718e-05, 2.841699999999933e-05, 2.8429999999999428e-05, 2.8415999999999858e-05, 2.8097000000001232e-05, 2.8026999999999913e-05, 2.8389000000000192e-05, 2.8375000000000622e-05, 2.84170000000028e-05, 2.8138000000000468e-05, 2.8443999999998998e-05, 2.747300000000008e-05, 2.8069000000002092e-05, 2.8443999999998998e-05, 2.8111000000000802e-05, 2.8097000000001232e-05, 2.8361000000001052e-05, 2.8083000000001662e-05, 2.8389000000000192e-05, 2.8320000000001816e-05, 2.841699999999933e-05, 2.7791999999998707e-05, 2.8083000000001662e-05]</msg>
<status status="PASS" starttime="20201029 12:43:25.026" endtime="20201029 12:43:25.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.021" endtime="20201029 12:43:25.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:25.032" endtime="20201029 12:43:25.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.031" endtime="20201029 12:43:25.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.030" endtime="20201029 12:43:25.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.674" endtime="20201029 12:43:25.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.674" endtime="20201029 12:43:25.053"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.062" endtime="20201029 12:43:25.080"></status>
</kw>
<msg timestamp="20201029 12:43:25.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.060" endtime="20201029 12:43:25.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.082" endtime="20201029 12:43:25.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.085" endtime="20201029 12:43:25.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.058" endtime="20201029 12:43:25.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.055" endtime="20201029 12:43:25.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.094" endtime="20201029 12:43:25.379"></status>
</kw>
<msg timestamp="20201029 12:43:25.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025282653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02531225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:25.092" endtime="20201029 12:43:25.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025282653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02531225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:25.384" endtime="20201029 12:43:25.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.392" endtime="20201029 12:43:25.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.090" endtime="20201029 12:43:25.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.088" endtime="20201029 12:43:25.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:25.399" level="INFO">${RESULT} = [{'diff': 2.9597000000002732e-05}, {'diff': 2.8999999999997778e-05}, {'diff': 2.898699999999768e-05}, {'diff': 2.9318999999999873e-05}, {'diff': 2.9014000000000817e-05}, {'diff': 2.8986000000001677e-0...</msg>
<status status="PASS" starttime="20201029 12:43:25.396" endtime="20201029 12:43:25.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:25.403" level="INFO">${ACCURACY} = {'diff': [2.9597000000002732e-05, 2.8999999999997778e-05, 2.898699999999768e-05, 2.9318999999999873e-05, 2.9014000000000817e-05, 2.8986000000001677e-05, 2.8693999999999248e-05, 2.9625000000001872e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:25.400" endtime="20201029 12:43:25.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.408" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:43:25.407" endtime="20201029 12:43:25.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.410" level="INFO">VALUE: [2.9597000000002732e-05, 2.8999999999997778e-05, 2.898699999999768e-05, 2.9318999999999873e-05, 2.9014000000000817e-05, 2.8986000000001677e-05, 2.8693999999999248e-05, 2.9625000000001872e-05, 2.9027999999996917e-05, 2.9028000000000387e-05, 2.9667000000000582e-05, 2.8986000000001677e-05, 2.8999999999997778e-05, 2.869499999999872e-05, 2.9291000000000733e-05, 2.9292000000000207e-05, 2.9305999999999777e-05, 2.9305999999999777e-05, 2.9639000000001442e-05, 2.9305999999999777e-05, 2.9000000000001247e-05, 2.9013999999997347e-05, 2.9319999999999347e-05, 2.9305999999999777e-05, 2.9319999999999347e-05, 2.9012999999997874e-05, 2.9318999999999873e-05, 2.9596999999999263e-05, 2.9291000000000733e-05, 2.8707999999998818e-05, 2.9319999999999347e-05, 2.9639000000001442e-05, 2.9014000000000817e-05, 2.894499999999897e-05, 2.9624999999998403e-05, 2.9292000000000207e-05, 2.8736000000001427e-05, 2.8999999999997778e-05, 2.9292000000000207e-05, 2.9305000000000303e-05, 2.9320000000002816e-05, 2.9624999999998403e-05, 2.9318999999999873e-05, 2.9319999999999347e-05, 2.9320000000002816e-05, 2.9305999999999777e-05, 2.9028000000000387e-05, 2.9319999999999347e-05, 2.9013999999997347e-05, 2.9000000000001247e-05]</msg>
<status status="PASS" starttime="20201029 12:43:25.409" endtime="20201029 12:43:25.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.404" endtime="20201029 12:43:25.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:25.416" endtime="20201029 12:43:25.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.414" endtime="20201029 12:43:25.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.413" endtime="20201029 12:43:25.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.054" endtime="20201029 12:43:25.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.053" endtime="20201029 12:43:25.437"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.445" endtime="20201029 12:43:25.460"></status>
</kw>
<msg timestamp="20201029 12:43:25.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.444" endtime="20201029 12:43:25.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.462" endtime="20201029 12:43:25.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.464" endtime="20201029 12:43:25.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.441" endtime="20201029 12:43:25.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.439" endtime="20201029 12:43:25.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.473" endtime="20201029 12:43:25.758"></status>
</kw>
<msg timestamp="20201029 12:43:25.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021673764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:25.472" endtime="20201029 12:43:25.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021673764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:25.763" endtime="20201029 12:43:25.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.771" endtime="20201029 12:43:25.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.469" endtime="20201029 12:43:25.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.468" endtime="20201029 12:43:25.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:25.778" level="INFO">${RESULT} = [{'diff': 3.0235999999999458e-05}, {'diff': 2.9638999999997973e-05}, {'diff': 3.0235999999999458e-05}, {'diff': 2.9611000000002302e-05}, {'diff': 2.9916000000001358e-05}, {'diff': 3.054200000000146e-0...</msg>
<status status="PASS" starttime="20201029 12:43:25.774" endtime="20201029 12:43:25.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:25.783" level="INFO">${ACCURACY} = {'diff': [3.0235999999999458e-05, 2.9638999999997973e-05, 3.0235999999999458e-05, 2.9611000000002302e-05, 2.9916000000001358e-05, 3.054200000000146e-05, 3.0499999999999278e-05, 3.0208000000000318e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:25.779" endtime="20201029 12:43:25.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.787" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:43:25.786" endtime="20201029 12:43:25.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.790" level="INFO">VALUE: [3.0235999999999458e-05, 2.9638999999997973e-05, 3.0235999999999458e-05, 2.9611000000002302e-05, 2.9916000000001358e-05, 3.054200000000146e-05, 3.0499999999999278e-05, 3.0208000000000318e-05, 3.0194999999996752e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.0235999999999458e-05, 3.0208000000000318e-05, 2.9610999999998833e-05, 3.052800000000189e-05, 3.0221999999999888e-05, 2.9888999999998223e-05, 2.9596999999999263e-05, 3.0221999999999888e-05, 3.0221999999999888e-05, 2.9889000000001692e-05, 3.0222000000003357e-05, 3.0153000000001512e-05, 3.023699999999893e-05, 3.054100000000198e-05, 3.02370000000024e-05, 3.0290999999998264e-05, 3.0221999999999888e-05, 3.0514000000002317e-05, 2.9944000000000498e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.0235999999999458e-05, 3.054100000000198e-05, 3.0235999999999458e-05, 3.0526999999998944e-05, 2.9902999999997792e-05, 3.0221999999999888e-05, 2.9916000000001358e-05, 2.9625000000001872e-05, 3.054200000000146e-05, 3.0235999999999458e-05, 3.0513999999998848e-05, 3.054100000000198e-05, 3.0249999999999028e-05, 3.0597999999999737e-05, 2.994499999999997e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.016599999999814e-05]</msg>
<status status="PASS" starttime="20201029 12:43:25.788" endtime="20201029 12:43:25.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.784" endtime="20201029 12:43:25.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:25.795" endtime="20201029 12:43:25.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.793" endtime="20201029 12:43:25.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.792" endtime="20201029 12:43:25.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.438" endtime="20201029 12:43:25.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.437" endtime="20201029 12:43:25.815"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.824" endtime="20201029 12:43:25.839"></status>
</kw>
<msg timestamp="20201029 12:43:25.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.822" endtime="20201029 12:43:25.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.841" endtime="20201029 12:43:25.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.843" endtime="20201029 12:43:25.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.820" endtime="20201029 12:43:25.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.818" endtime="20201029 12:43:25.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.852" endtime="20201029 12:43:26.140"></status>
</kw>
<msg timestamp="20201029 12:43:26.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.851" endtime="20201029 12:43:26.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.144" endtime="20201029 12:43:26.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.153" endtime="20201029 12:43:26.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.848" endtime="20201029 12:43:26.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.846" endtime="20201029 12:43:26.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:26.160" level="INFO">${RESULT} = [{'diff': 3.380600000000081e-05}, {'diff': 3.250000000000128e-05}, {'diff': 3.277800000000067e-05}, {'diff': 3.265300000000054e-05}, {'diff': 3.293000000000046e-05}, {'diff': 3.309800000000224e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:26.156" endtime="20201029 12:43:26.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:26.164" level="INFO">${ACCURACY} = {'diff': [3.380600000000081e-05, 3.250000000000128e-05, 3.277800000000067e-05, 3.265300000000054e-05, 3.293000000000046e-05, 3.309800000000224e-05, 3.299999999999831e-05, 3.322299999999889e-05, 3.3082...</msg>
<status status="PASS" starttime="20201029 12:43:26.161" endtime="20201029 12:43:26.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.168" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:43:26.167" endtime="20201029 12:43:26.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.171" level="INFO">VALUE: [3.380600000000081e-05, 3.250000000000128e-05, 3.277800000000067e-05, 3.265300000000054e-05, 3.293000000000046e-05, 3.309800000000224e-05, 3.299999999999831e-05, 3.322299999999889e-05, 3.3082999999999724e-05, 3.290200000000132e-05, 3.301399999999788e-05, 3.292999999999699e-05, 3.269399999999978e-05, 3.293000000000046e-05, 3.272199999999892e-05, 3.297199999999917e-05, 3.269399999999978e-05, 3.275000000000153e-05, 3.295800000000307e-05, 3.31519999999981e-05, 3.272199999999892e-05, 3.315300000000104e-05, 3.284700000000251e-05, 3.3096999999999294e-05, 3.300000000000178e-05, 3.3124999999998433e-05, 3.27640000000011e-05, 3.288900000000122e-05, 3.3068999999996684e-05, 3.276399999999763e-05, 3.2832999999999474e-05, 3.313900000000147e-05, 3.294400000000003e-05, 3.266700000000011e-05, 3.280599999999981e-05, 3.3026999999997975e-05, 3.306999999999963e-05, 3.27640000000011e-05, 3.302800000000092e-05, 3.313900000000147e-05, 3.302800000000092e-05, 3.316700000000061e-05, 3.3124999999998433e-05, 3.277800000000067e-05, 3.298599999999874e-05, 3.295900000000254e-05, 3.273700000000143e-05, 3.301399999999788e-05, 3.2846999999999044e-05, 3.293099999999993e-05]</msg>
<status status="PASS" starttime="20201029 12:43:26.169" endtime="20201029 12:43:26.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.165" endtime="20201029 12:43:26.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:26.176" endtime="20201029 12:43:26.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.174" endtime="20201029 12:43:26.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.173" endtime="20201029 12:43:26.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.816" endtime="20201029 12:43:26.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.816" endtime="20201029 12:43:26.196"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.205" endtime="20201029 12:43:26.222"></status>
</kw>
<msg timestamp="20201029 12:43:26.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.204" endtime="20201029 12:43:26.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.224" endtime="20201029 12:43:26.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.226" endtime="20201029 12:43:26.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.201" endtime="20201029 12:43:26.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.199" endtime="20201029 12:43:26.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.235" endtime="20201029 12:43:26.520"></status>
</kw>
<msg timestamp="20201029 12:43:26.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023236653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023270694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.234" endtime="20201029 12:43:26.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023236653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023270694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.525" endtime="20201029 12:43:26.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.533" endtime="20201029 12:43:26.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.231" endtime="20201029 12:43:26.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.230" endtime="20201029 12:43:26.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:26.540" level="INFO">${RESULT} = [{'diff': 3.4041000000002014e-05}, {'diff': 3.397200000000017e-05}, {'diff': 3.398599999999974e-05}, {'diff': 3.402799999999845e-05}, {'diff': 3.4069000000001154e-05}, {'diff': 3.419400000000128e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:26.536" endtime="20201029 12:43:26.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:26.544" level="INFO">${ACCURACY} = {'diff': [3.4041000000002014e-05, 3.397200000000017e-05, 3.398599999999974e-05, 3.402799999999845e-05, 3.4069000000001154e-05, 3.419400000000128e-05, 3.387500000000265e-05, 3.405600000000106e-05, 3.41...</msg>
<status status="PASS" starttime="20201029 12:43:26.541" endtime="20201029 12:43:26.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.548" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:43:26.547" endtime="20201029 12:43:26.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.551" level="INFO">VALUE: [3.4041000000002014e-05, 3.397200000000017e-05, 3.398599999999974e-05, 3.402799999999845e-05, 3.4069000000001154e-05, 3.419400000000128e-05, 3.387500000000265e-05, 3.405600000000106e-05, 3.419400000000128e-05, 3.390299999999832e-05, 3.405600000000106e-05, 3.4069000000001154e-05, 3.395900000000007e-05, 3.399999999999931e-05, 3.41250000000029e-05, 3.422200000000042e-05, 3.377800000000167e-05, 3.4054999999998115e-05, 3.423599999999999e-05, 3.380600000000081e-05, 3.400000000000278e-05, 3.369500000000025e-05, 3.416700000000161e-05, 3.404200000000149e-05, 3.370900000000329e-05, 3.40840000000002e-05, 3.386100000000308e-05, 3.402799999999845e-05, 3.397300000000311e-05, 3.379200000000124e-05, 3.4068999999997684e-05, 3.419400000000128e-05, 3.390199999999885e-05, 3.391599999999842e-05, 3.391600000000189e-05, 3.393000000000146e-05, 3.3847000000000044e-05, 3.4097000000000294e-05, 3.387500000000265e-05, 3.370800000000035e-05, 3.39580000000006e-05, 3.3833000000000474e-05, 3.39580000000006e-05, 3.39580000000006e-05, 3.3874999999999184e-05, 3.3805000000001334e-05, 3.391699999999789e-05, 3.3874999999999184e-05, 3.397200000000017e-05, 3.4124999999999434e-05]</msg>
<status status="PASS" starttime="20201029 12:43:26.549" endtime="20201029 12:43:26.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.545" endtime="20201029 12:43:26.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:26.561" endtime="20201029 12:43:26.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.559" endtime="20201029 12:43:26.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.558" endtime="20201029 12:43:26.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.197" endtime="20201029 12:43:26.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.197" endtime="20201029 12:43:26.581"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.590" endtime="20201029 12:43:26.605"></status>
</kw>
<msg timestamp="20201029 12:43:26.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.588" endtime="20201029 12:43:26.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.606" endtime="20201029 12:43:26.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.609" endtime="20201029 12:43:26.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.586" endtime="20201029 12:43:26.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.584" endtime="20201029 12:43:26.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.618" endtime="20201029 12:43:26.903"></status>
</kw>
<msg timestamp="20201029 12:43:26.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.616" endtime="20201029 12:43:26.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.907" endtime="20201029 12:43:26.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.916" endtime="20201029 12:43:26.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.614" endtime="20201029 12:43:26.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.612" endtime="20201029 12:43:26.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:26.923" level="INFO">${RESULT} = [{'diff': 3.5903000000000324e-05}, {'diff': 3.492999999999899e-05}, {'diff': 3.4832999999998004e-05}, {'diff': 3.5110999999997394e-05}, {'diff': 3.516599999999967e-05}, {'diff': 3.469400000000178e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:26.919" endtime="20201029 12:43:26.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:26.928" level="INFO">${ACCURACY} = {'diff': [3.5903000000000324e-05, 3.492999999999899e-05, 3.4832999999998004e-05, 3.5110999999997394e-05, 3.516599999999967e-05, 3.469400000000178e-05, 3.4832999999998004e-05, 3.49719999999977e-05, 3.4...</msg>
<status status="PASS" starttime="20201029 12:43:26.924" endtime="20201029 12:43:26.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.932" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:43:26.931" endtime="20201029 12:43:26.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.935" level="INFO">VALUE: [3.5903000000000324e-05, 3.492999999999899e-05, 3.4832999999998004e-05, 3.5110999999997394e-05, 3.516599999999967e-05, 3.469400000000178e-05, 3.4832999999998004e-05, 3.49719999999977e-05, 3.49580000000016e-05, 3.4875000000000184e-05, 3.494399999999856e-05, 3.4652999999999073e-05, 3.472199999999745e-05, 3.4861000000000614e-05, 3.4638999999999504e-05, 3.476399999999963e-05, 3.4888999999999754e-05, 3.4860999999997144e-05, 3.4847000000001044e-05, 3.495900000000107e-05, 3.4888999999999754e-05, 3.495799999999813e-05, 3.490300000000279e-05, 3.47779999999992e-05, 3.5026999999999975e-05, 3.506999999999816e-05, 3.5096999999997824e-05, 3.480599999999834e-05, 3.500000000000031e-05, 3.519500000000175e-05, 3.4861000000000614e-05, 3.52779999999997e-05, 3.5096999999997824e-05, 3.490300000000279e-05, 3.5110999999997394e-05, 3.490199999999985e-05, 3.4846999999997574e-05, 3.497300000000064e-05, 3.5082999999998254e-05, 3.5152999999999573e-05, 3.526400000000013e-05, 3.517999999999924e-05, 3.5125000000000434e-05, 3.5026999999999975e-05, 3.466599999999917e-05, 3.488800000000028e-05, 3.501400000000335e-05, 3.517999999999924e-05, 3.526400000000013e-05, 3.497200000000117e-05]</msg>
<status status="PASS" starttime="20201029 12:43:26.933" endtime="20201029 12:43:26.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.929" endtime="20201029 12:43:26.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:26.940" endtime="20201029 12:43:26.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.938" endtime="20201029 12:43:26.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.937" endtime="20201029 12:43:26.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.582" endtime="20201029 12:43:26.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.582" endtime="20201029 12:43:26.960"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.969" endtime="20201029 12:43:26.985"></status>
</kw>
<msg timestamp="20201029 12:43:26.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.967" endtime="20201029 12:43:26.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.987" endtime="20201029 12:43:26.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.989" endtime="20201029 12:43:26.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.965" endtime="20201029 12:43:26.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.963" endtime="20201029 12:43:26.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.998" endtime="20201029 12:43:27.286"></status>
</kw>
<msg timestamp="20201029 12:43:27.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022186306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:26.997" endtime="20201029 12:43:27.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022186306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:27.290" endtime="20201029 12:43:27.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.299" endtime="20201029 12:43:27.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.994" endtime="20201029 12:43:27.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.992" endtime="20201029 12:43:27.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:27.306" level="INFO">${RESULT} = [{'diff': 3.619399999999981e-05}, {'diff': 3.601399999999741e-05}, {'diff': 3.5903000000000324e-05}, {'diff': 3.6153000000000574e-05}, {'diff': 3.576400000000063e-05}, {'diff': 3.602800000000045e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:27.302" endtime="20201029 12:43:27.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:27.310" level="INFO">${ACCURACY} = {'diff': [3.619399999999981e-05, 3.601399999999741e-05, 3.5903000000000324e-05, 3.6153000000000574e-05, 3.576400000000063e-05, 3.602800000000045e-05, 3.594399999999956e-05, 3.582000000000238e-05, 3.57...</msg>
<status status="PASS" starttime="20201029 12:43:27.307" endtime="20201029 12:43:27.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.314" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:43:27.313" endtime="20201029 12:43:27.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.317" level="INFO">VALUE: [3.619399999999981e-05, 3.601399999999741e-05, 3.5903000000000324e-05, 3.6153000000000574e-05, 3.576400000000063e-05, 3.602800000000045e-05, 3.594399999999956e-05, 3.582000000000238e-05, 3.570900000000182e-05, 3.568000000000321e-05, 3.6096999999998824e-05, 3.5791000000000295e-05, 3.595799999999913e-05, 3.622199999999895e-05, 3.6068999999999685e-05, 3.5791000000000295e-05, 3.600000000000131e-05, 3.623599999999852e-05, 3.579199999999977e-05, 3.625000000000156e-05, 3.579199999999977e-05, 3.6153000000000574e-05, 3.6055000000000115e-05, 3.5916999999999893e-05, 3.572199999999845e-05, 3.6167000000000143e-05, 3.6110999999998394e-05, 3.567999999999974e-05, 3.600000000000131e-05, 3.604200000000002e-05, 3.595799999999913e-05, 3.5903000000000324e-05, 3.6180999999999713e-05, 3.6153000000000574e-05, 3.579199999999977e-05, 3.5653000000000074e-05, 3.6124999999997964e-05, 3.622199999999895e-05, 3.6167000000000143e-05, 3.5818999999999435e-05, 3.59589999999986e-05, 3.61520000000011e-05, 3.5916999999999893e-05, 3.5916999999999893e-05, 3.606999999999916e-05, 3.604200000000002e-05, 3.569500000000225e-05, 3.576399999999716e-05, 3.598699999999774e-05, 3.591600000000042e-05]</msg>
<status status="PASS" starttime="20201029 12:43:27.315" endtime="20201029 12:43:27.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.311" endtime="20201029 12:43:27.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:27.322" endtime="20201029 12:43:27.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.320" endtime="20201029 12:43:27.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.319" endtime="20201029 12:43:27.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.961" endtime="20201029 12:43:27.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.961" endtime="20201029 12:43:27.343"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.351" endtime="20201029 12:43:27.368"></status>
</kw>
<msg timestamp="20201029 12:43:27.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.350" endtime="20201029 12:43:27.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.370" endtime="20201029 12:43:27.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.372" endtime="20201029 12:43:27.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.347" endtime="20201029 12:43:27.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.345" endtime="20201029 12:43:27.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.381" endtime="20201029 12:43:27.667"></status>
</kw>
<msg timestamp="20201029 12:43:27.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022697778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022735028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.379" endtime="20201029 12:43:27.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022697778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022735028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.671" endtime="20201029 12:43:27.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.680" endtime="20201029 12:43:27.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.377" endtime="20201029 12:43:27.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.375" endtime="20201029 12:43:27.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:27.686" level="INFO">${RESULT} = [{'diff': 3.725000000000256e-05}, {'diff': 3.681999999999991e-05}, {'diff': 3.69719999999997e-05}, {'diff': 3.7139000000002004e-05}, {'diff': 3.7110999999999394e-05}, {'diff': 3.7181000000000713e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:27.683" endtime="20201029 12:43:27.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:27.690" level="INFO">${ACCURACY} = {'diff': [3.725000000000256e-05, 3.681999999999991e-05, 3.69719999999997e-05, 3.7139000000002004e-05, 3.7110999999999394e-05, 3.7181000000000713e-05, 3.6680999999996744e-05, 3.7167000000001144e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:43:27.687" endtime="20201029 12:43:27.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.695" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:43:27.694" endtime="20201029 12:43:27.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.697" level="INFO">VALUE: [3.725000000000256e-05, 3.681999999999991e-05, 3.69719999999997e-05, 3.7139000000002004e-05, 3.7110999999999394e-05, 3.7181000000000713e-05, 3.6680999999996744e-05, 3.7167000000001144e-05, 3.686200000000209e-05, 3.6874999999998714e-05, 3.69589999999996e-05, 3.7276999999998756e-05, 3.7083000000000255e-05, 3.7125000000002434e-05, 3.717999999999777e-05, 3.693000000000099e-05, 3.6819000000000435e-05, 3.724999999999909e-05, 3.673599999999902e-05, 3.6819000000000435e-05, 3.6860999999999144e-05, 3.691600000000142e-05, 3.7096999999999825e-05, 3.7083000000000255e-05, 3.6833000000000005e-05, 3.6902999999997854e-05, 3.673599999999902e-05, 3.6846999999999575e-05, 3.6931000000000463e-05, 3.722199999999995e-05, 3.673599999999902e-05, 3.722199999999995e-05, 3.7125000000002434e-05, 3.723599999999952e-05, 3.707000000000016e-05, 3.7167000000001144e-05, 3.674999999999859e-05, 3.704200000000102e-05, 3.694500000000003e-05, 3.679200000000077e-05, 3.7195000000000283e-05, 3.676399999999816e-05, 3.699999999999884e-05, 3.722299999999942e-05, 3.698699999999874e-05, 3.729200000000127e-05, 3.723700000000246e-05, 3.711199999999887e-05, 3.6833000000000005e-05, 3.6791000000001295e-05]</msg>
<status status="PASS" starttime="20201029 12:43:27.696" endtime="20201029 12:43:27.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.691" endtime="20201029 12:43:27.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:27.703" endtime="20201029 12:43:27.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.702" endtime="20201029 12:43:27.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.701" endtime="20201029 12:43:27.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.343" endtime="20201029 12:43:27.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.343" endtime="20201029 12:43:27.724"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.733" endtime="20201029 12:43:27.748"></status>
</kw>
<msg timestamp="20201029 12:43:27.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.731" endtime="20201029 12:43:27.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.749" endtime="20201029 12:43:27.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.752" endtime="20201029 12:43:27.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.728" endtime="20201029 12:43:27.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.726" endtime="20201029 12:43:27.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.761" endtime="20201029 12:43:28.046"></status>
</kw>
<msg timestamp="20201029 12:43:28.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021788778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.760" endtime="20201029 12:43:28.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021788778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.051" endtime="20201029 12:43:28.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.059" endtime="20201029 12:43:28.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.757" endtime="20201029 12:43:28.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.755" endtime="20201029 12:43:28.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:28.066" level="INFO">${RESULT} = [{'diff': 3.872200000000145e-05}, {'diff': 3.805600000000159e-05}, {'diff': 3.773600000000002e-05}, {'diff': 3.8041000000002545e-05}, {'diff': 3.763799999999956e-05}, {'diff': 3.7776999999999256e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:28.063" endtime="20201029 12:43:28.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:28.071" level="INFO">${ACCURACY} = {'diff': [3.872200000000145e-05, 3.805600000000159e-05, 3.773600000000002e-05, 3.8041000000002545e-05, 3.763799999999956e-05, 3.7776999999999256e-05, 3.798600000000027e-05, 3.794400000000156e-05, 3.81...</msg>
<status status="PASS" starttime="20201029 12:43:28.067" endtime="20201029 12:43:28.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.075" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:43:28.074" endtime="20201029 12:43:28.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.078" level="INFO">VALUE: [3.872200000000145e-05, 3.805600000000159e-05, 3.773600000000002e-05, 3.8041000000002545e-05, 3.763799999999956e-05, 3.7776999999999256e-05, 3.798600000000027e-05, 3.794400000000156e-05, 3.817999999999877e-05, 3.8041000000002545e-05, 3.8040999999999076e-05, 3.776399999999916e-05, 3.7819000000001435e-05, 3.7861000000000145e-05, 3.8082999999997785e-05, 3.8041000000002545e-05, 3.8055000000002115e-05, 3.8054999999998645e-05, 3.8139000000003004e-05, 3.79859999999968e-05, 3.823600000000052e-05, 3.798600000000027e-05, 3.7667000000001644e-05, 3.770799999999741e-05, 3.8167000000002144e-05, 3.802799999999898e-05, 3.832000000000141e-05, 3.795800000000113e-05, 3.8124999999999964e-05, 3.7680999999997744e-05, 3.792999999999852e-05, 3.8138999999999534e-05, 3.7680999999997744e-05, 3.804200000000202e-05, 3.7945000000001033e-05, 3.770900000000035e-05, 3.77780000000022e-05, 3.804199999999855e-05, 3.7666999999998174e-05, 3.817999999999877e-05, 3.772299999999992e-05, 3.794400000000156e-05, 3.782000000000091e-05, 3.819399999999834e-05, 3.7804999999998395e-05, 3.790199999999938e-05, 3.791599999999895e-05, 3.825000000000009e-05, 3.794400000000156e-05, 3.7847000000000575e-05]</msg>
<status status="PASS" starttime="20201029 12:43:28.076" endtime="20201029 12:43:28.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.072" endtime="20201029 12:43:28.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:28.083" endtime="20201029 12:43:28.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.081" endtime="20201029 12:43:28.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.080" endtime="20201029 12:43:28.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.725" endtime="20201029 12:43:28.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.724" endtime="20201029 12:43:28.103"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.112" endtime="20201029 12:43:28.128"></status>
</kw>
<msg timestamp="20201029 12:43:28.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.111" endtime="20201029 12:43:28.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.129" endtime="20201029 12:43:28.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.132" endtime="20201029 12:43:28.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.108" endtime="20201029 12:43:28.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.106" endtime="20201029 12:43:28.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.141" endtime="20201029 12:43:28.428"></status>
</kw>
<msg timestamp="20201029 12:43:28.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.139" endtime="20201029 12:43:28.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.432" endtime="20201029 12:43:28.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.440" endtime="20201029 12:43:28.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.137" endtime="20201029 12:43:28.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.135" endtime="20201029 12:43:28.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:28.447" level="INFO">${RESULT} = [{'diff': 3.9166999999999674e-05}, {'diff': 3.9096999999998355e-05}, {'diff': 3.873599999999755e-05}, {'diff': 3.926400000000066e-05}, {'diff': 3.875000000000059e-05}, {'diff': 3.919399999999934e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:28.444" endtime="20201029 12:43:28.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:28.451" level="INFO">${ACCURACY} = {'diff': [3.9166999999999674e-05, 3.9096999999998355e-05, 3.873599999999755e-05, 3.926400000000066e-05, 3.875000000000059e-05, 3.919399999999934e-05, 3.9054999999999646e-05, 3.923600000000152e-05, 3.9...</msg>
<status status="PASS" starttime="20201029 12:43:28.448" endtime="20201029 12:43:28.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.456" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:43:28.455" endtime="20201029 12:43:28.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.458" level="INFO">VALUE: [3.9166999999999674e-05, 3.9096999999998355e-05, 3.873599999999755e-05, 3.926400000000066e-05, 3.875000000000059e-05, 3.919399999999934e-05, 3.9054999999999646e-05, 3.923600000000152e-05, 3.9139000000000534e-05, 3.918000000000324e-05, 3.917999999999977e-05, 3.919399999999934e-05, 3.8861000000001145e-05, 3.904199999999955e-05, 3.9166999999999674e-05, 3.900000000000084e-05, 3.880599999999887e-05, 3.8639000000000034e-05, 3.8916999999999424e-05, 3.905600000000259e-05, 3.9153000000000104e-05, 3.915200000000063e-05, 3.8694999999998314e-05, 3.8902999999999854e-05, 3.9153000000000104e-05, 3.902799999999998e-05, 3.905599999999912e-05, 3.905600000000259e-05, 3.925000000000109e-05, 3.8875000000000715e-05, 3.9223000000001423e-05, 3.8902999999999854e-05, 3.8916999999999424e-05, 3.908400000000173e-05, 3.8889000000000284e-05, 3.926400000000066e-05, 3.894399999999909e-05, 3.8875000000000715e-05, 3.91660000000002e-05, 3.870799999999841e-05, 3.892999999999952e-05, 3.894399999999909e-05, 3.904200000000302e-05, 3.920799999999891e-05, 3.9083000000002255e-05, 3.870800000000188e-05, 3.875000000000059e-05, 3.873600000000102e-05, 3.904199999999955e-05, 3.8722999999997454e-05]</msg>
<status status="PASS" starttime="20201029 12:43:28.457" endtime="20201029 12:43:28.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.452" endtime="20201029 12:43:28.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:28.463" endtime="20201029 12:43:28.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.462" endtime="20201029 12:43:28.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.461" endtime="20201029 12:43:28.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.104" endtime="20201029 12:43:28.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.104" endtime="20201029 12:43:28.484"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.493" endtime="20201029 12:43:28.512"></status>
</kw>
<msg timestamp="20201029 12:43:28.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.491" endtime="20201029 12:43:28.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.514" endtime="20201029 12:43:28.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.516" endtime="20201029 12:43:28.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.489" endtime="20201029 12:43:28.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.486" endtime="20201029 12:43:28.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.525" endtime="20201029 12:43:28.811"></status>
</kw>
<msg timestamp="20201029 12:43:28.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02532625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025366958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:28.524" endtime="20201029 12:43:28.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02532625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025366958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:28.815" endtime="20201029 12:43:28.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.823" endtime="20201029 12:43:28.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.521" endtime="20201029 12:43:28.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.519" endtime="20201029 12:43:28.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:28.830" level="INFO">${RESULT} = [{'diff': 4.070799999999694e-05}, {'diff': 4.023599999999905e-05}, {'diff': 3.9902999999997385e-05}, {'diff': 3.999999999999837e-05}, {'diff': 3.9625000000001465e-05}, {'diff': 3.9832999999999535e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:28.827" endtime="20201029 12:43:28.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:28.834" level="INFO">${ACCURACY} = {'diff': [4.070799999999694e-05, 4.023599999999905e-05, 3.9902999999997385e-05, 3.999999999999837e-05, 3.9625000000001465e-05, 3.9832999999999535e-05, 3.9694999999999314e-05, 3.9832999999999535e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:43:28.831" endtime="20201029 12:43:28.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.839" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:43:28.838" endtime="20201029 12:43:28.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.841" level="INFO">VALUE: [4.070799999999694e-05, 4.023599999999905e-05, 3.9902999999997385e-05, 3.999999999999837e-05, 3.9625000000001465e-05, 3.9832999999999535e-05, 3.9694999999999314e-05, 3.9832999999999535e-05, 4.002800000000098e-05, 3.9596999999998855e-05, 3.9888999999997815e-05, 3.9736999999998024e-05, 3.958400000000223e-05, 4.033399999999951e-05, 3.975000000000159e-05, 3.9860999999998675e-05, 3.9930999999999994e-05, 3.998600000000227e-05, 3.977799999999726e-05, 4.0124999999998495e-05, 3.96660000000007e-05, 3.9903000000000854e-05, 3.9708999999998884e-05, 3.9680999999999744e-05, 3.970799999999941e-05, 4.0111000000002395e-05, 3.9818999999999966e-05, 4.0055000000000646e-05, 4.022199999999948e-05, 3.973600000000202e-05, 3.9791000000000826e-05, 4.002799999999751e-05, 3.991600000000095e-05, 3.968000000000027e-05, 3.99720000000027e-05, 3.999999999999837e-05, 3.9917000000000424e-05, 4.0125000000001965e-05, 3.9917000000000424e-05, 3.994400000000009e-05, 3.977800000000073e-05, 4.0069000000000216e-05, 3.9832999999999535e-05, 3.9695000000002784e-05, 3.981999999999944e-05, 4.0110999999998925e-05, 3.986199999999815e-05, 3.9791000000000826e-05, 3.9874999999998245e-05, 4.022199999999948e-05]</msg>
<status status="PASS" starttime="20201029 12:43:28.840" endtime="20201029 12:43:28.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.835" endtime="20201029 12:43:28.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:28.847" endtime="20201029 12:43:28.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.845" endtime="20201029 12:43:28.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.844" endtime="20201029 12:43:28.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.485" endtime="20201029 12:43:28.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.484" endtime="20201029 12:43:28.868"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.876" endtime="20201029 12:43:28.893"></status>
</kw>
<msg timestamp="20201029 12:43:28.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.875" endtime="20201029 12:43:28.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.894" endtime="20201029 12:43:28.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.897" endtime="20201029 12:43:28.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.872" endtime="20201029 12:43:28.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.870" endtime="20201029 12:43:28.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.906" endtime="20201029 12:43:29.191"></status>
</kw>
<msg timestamp="20201029 12:43:29.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022028194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022069764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.904" endtime="20201029 12:43:29.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022028194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022069764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.195" endtime="20201029 12:43:29.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.204" endtime="20201029 12:43:29.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.902" endtime="20201029 12:43:29.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.900" endtime="20201029 12:43:29.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:29.211" level="INFO">${RESULT} = [{'diff': 4.156999999999772e-05}, {'diff': 4.130600000000137e-05}, {'diff': 4.0874999999999245e-05}, {'diff': 4.1138999999999065e-05}, {'diff': 4.124999999999962e-05}, {'diff': 4.1041000000002076e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:29.207" endtime="20201029 12:43:29.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:29.216" level="INFO">${ACCURACY} = {'diff': [4.156999999999772e-05, 4.130600000000137e-05, 4.0874999999999245e-05, 4.1138999999999065e-05, 4.124999999999962e-05, 4.1041000000002076e-05, 4.105600000000112e-05, 4.099999999999937e-05, 4.1...</msg>
<status status="PASS" starttime="20201029 12:43:29.212" endtime="20201029 12:43:29.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.220" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:43:29.219" endtime="20201029 12:43:29.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.223" level="INFO">VALUE: [4.156999999999772e-05, 4.130600000000137e-05, 4.0874999999999245e-05, 4.1138999999999065e-05, 4.124999999999962e-05, 4.1041000000002076e-05, 4.105600000000112e-05, 4.099999999999937e-05, 4.1209000000000384e-05, 4.124999999999962e-05, 4.083400000000001e-05, 4.1139000000002535e-05, 4.099999999999937e-05, 4.091600000000195e-05, 4.0860999999999675e-05, 4.0790999999998356e-05, 4.09859999999998e-05, 4.1124999999999495e-05, 4.0903000000001855e-05, 4.095800000000066e-05, 4.0902999999998385e-05, 4.0818999999997496e-05, 4.119400000000134e-05, 4.1110999999999925e-05, 4.073599999999955e-05, 4.11799999999983e-05, 4.1167000000001674e-05, 4.0681000000000744e-05, 4.093000000000152e-05, 4.1124999999999495e-05, 4.1167000000001674e-05, 4.0874999999999245e-05, 4.122200000000048e-05, 4.099999999999937e-05, 4.1125000000002965e-05, 4.1167000000001674e-05, 4.070799999999694e-05, 4.1209000000000384e-05, 4.079199999999783e-05, 4.099999999999937e-05, 4.076399999999869e-05, 4.074999999999912e-05, 4.1166999999998205e-05, 4.0639000000002035e-05, 4.076399999999869e-05, 4.119400000000134e-05, 4.082000000000044e-05, 4.0959000000000134e-05, 4.0874999999999245e-05, 4.075000000000259e-05]</msg>
<status status="PASS" starttime="20201029 12:43:29.221" endtime="20201029 12:43:29.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.217" endtime="20201029 12:43:29.224"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:29.228" endtime="20201029 12:43:29.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.226" endtime="20201029 12:43:29.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.225" endtime="20201029 12:43:29.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.869" endtime="20201029 12:43:29.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.868" endtime="20201029 12:43:29.248"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.258" endtime="20201029 12:43:29.274"></status>
</kw>
<msg timestamp="20201029 12:43:29.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.256" endtime="20201029 12:43:29.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.276" endtime="20201029 12:43:29.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.278" endtime="20201029 12:43:29.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.253" endtime="20201029 12:43:29.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.251" endtime="20201029 12:43:29.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.287" endtime="20201029 12:43:29.575"></status>
</kw>
<msg timestamp="20201029 12:43:29.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023068292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023111042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.286" endtime="20201029 12:43:29.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023068292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023111042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.580" endtime="20201029 12:43:29.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.588" endtime="20201029 12:43:29.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.283" endtime="20201029 12:43:29.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.282" endtime="20201029 12:43:29.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:29.594" level="INFO">${RESULT} = [{'diff': 4.274999999999765e-05}, {'diff': 4.226300000000072e-05}, {'diff': 4.213800000000059e-05}, {'diff': 4.176399999999969e-05}, {'diff': 4.2139000000000065e-05}, {'diff': 4.222199999999801e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:29.591" endtime="20201029 12:43:29.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:29.599" level="INFO">${ACCURACY} = {'diff': [4.274999999999765e-05, 4.226300000000072e-05, 4.213800000000059e-05, 4.176399999999969e-05, 4.2139000000000065e-05, 4.222199999999801e-05, 4.172200000000098e-05, 4.1833000000001536e-05, 4.19...</msg>
<status status="PASS" starttime="20201029 12:43:29.595" endtime="20201029 12:43:29.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.603" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:43:29.602" endtime="20201029 12:43:29.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.606" level="INFO">VALUE: [4.274999999999765e-05, 4.226300000000072e-05, 4.213800000000059e-05, 4.176399999999969e-05, 4.2139000000000065e-05, 4.222199999999801e-05, 4.172200000000098e-05, 4.1833000000001536e-05, 4.197200000000123e-05, 4.1888999999999815e-05, 4.191599999999948e-05, 4.2111000000000925e-05, 4.197200000000123e-05, 4.2111000000000925e-05, 4.2111000000000925e-05, 4.223599999999758e-05, 4.1931000000001994e-05, 4.220800000000191e-05, 4.2181000000002244e-05, 4.18059999999984e-05, 4.1846999999997636e-05, 4.1888999999999815e-05, 4.195800000000166e-05, 4.1638999999999565e-05, 4.2166999999999205e-05, 4.1875000000000245e-05, 4.173599999999708e-05, 4.1709000000000884e-05, 4.2194999999998345e-05, 4.205599999999865e-05, 4.1930999999998525e-05, 4.184799999999711e-05, 4.1681000000001744e-05, 4.1723000000000454e-05, 4.166599999999923e-05, 4.176300000000022e-05, 4.1832999999998066e-05, 4.172199999999751e-05, 4.1875000000000245e-05, 4.2054999999999176e-05, 4.2125000000000495e-05, 4.1846999999997636e-05, 4.1818999999998496e-05, 4.2083000000001786e-05, 4.201399999999994e-05, 4.2097000000001356e-05, 4.1652999999999135e-05, 4.2166999999999205e-05, 4.1903000000002855e-05, 4.2139000000000065e-05]</msg>
<status status="PASS" starttime="20201029 12:43:29.604" endtime="20201029 12:43:29.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.600" endtime="20201029 12:43:29.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:29.611" endtime="20201029 12:43:29.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.609" endtime="20201029 12:43:29.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.608" endtime="20201029 12:43:29.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.249" endtime="20201029 12:43:29.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.249" endtime="20201029 12:43:29.631"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.640" endtime="20201029 12:43:29.657"></status>
</kw>
<msg timestamp="20201029 12:43:29.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.639" endtime="20201029 12:43:29.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.659" endtime="20201029 12:43:29.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.662" endtime="20201029 12:43:29.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.636" endtime="20201029 12:43:29.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.634" endtime="20201029 12:43:29.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.671" endtime="20201029 12:43:29.957"></status>
</kw>
<msg timestamp="20201029 12:43:29.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023037542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023080958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.669" endtime="20201029 12:43:29.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023037542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023080958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.961" endtime="20201029 12:43:29.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.970" endtime="20201029 12:43:29.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.667" endtime="20201029 12:43:29.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.665" endtime="20201029 12:43:29.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:29.976" level="INFO">${RESULT} = [{'diff': 4.341599999999751e-05}, {'diff': 4.3222999999998485e-05}, {'diff': 4.272199999999851e-05}, {'diff': 4.2916999999999955e-05}, {'diff': 4.325000000000162e-05}, {'diff': 4.3068999999999746e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:29.973" endtime="20201029 12:43:29.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:29.981" level="INFO">${ACCURACY} = {'diff': [4.341599999999751e-05, 4.3222999999998485e-05, 4.272199999999851e-05, 4.2916999999999955e-05, 4.325000000000162e-05, 4.3068999999999746e-05, 4.2846999999998636e-05, 4.304200000000008e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:43:29.977" endtime="20201029 12:43:29.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.985" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:43:29.984" endtime="20201029 12:43:29.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.987" level="INFO">VALUE: [4.341599999999751e-05, 4.3222999999998485e-05, 4.272199999999851e-05, 4.2916999999999955e-05, 4.325000000000162e-05, 4.3068999999999746e-05, 4.2846999999998636e-05, 4.304200000000008e-05, 4.3096999999998886e-05, 4.3167000000000205e-05, 4.301400000000094e-05, 4.3096999999998886e-05, 4.3055000000000176e-05, 4.2804999999999926e-05, 4.2861000000001676e-05, 4.3068999999999746e-05, 4.26799999999998e-05, 4.2888999999997346e-05, 4.2846999999998636e-05, 4.3096999999998886e-05, 4.2832999999999066e-05, 4.320799999999944e-05, 4.2680999999999275e-05, 4.306999999999922e-05, 4.2639000000000565e-05, 4.279199999999983e-05, 4.272199999999851e-05, 4.2708999999998415e-05, 4.291600000000048e-05, 4.29999999999979e-05, 4.290199999999744e-05, 4.301400000000094e-05, 4.3208999999998915e-05, 4.305599999999965e-05, 4.2959000000002134e-05, 4.2695000000002314e-05, 4.327800000000076e-05, 4.28059999999994e-05, 4.300000000000137e-05, 4.3041000000000607e-05, 4.290200000000091e-05, 4.302700000000104e-05, 4.305599999999965e-05, 4.301400000000094e-05, 4.269399999999937e-05, 4.294399999999962e-05, 4.2875000000001245e-05, 4.2902999999996916e-05, 4.2818999999999496e-05, 4.276399999999722e-05]</msg>
<status status="PASS" starttime="20201029 12:43:29.986" endtime="20201029 12:43:29.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.981" endtime="20201029 12:43:29.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:29.993" endtime="20201029 12:43:30.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.992" endtime="20201029 12:43:30.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.991" endtime="20201029 12:43:30.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.632" endtime="20201029 12:43:30.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.632" endtime="20201029 12:43:30.014"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.023" endtime="20201029 12:43:30.039"></status>
</kw>
<msg timestamp="20201029 12:43:30.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.021" endtime="20201029 12:43:30.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.041" endtime="20201029 12:43:30.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.043" endtime="20201029 12:43:30.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.019" endtime="20201029 12:43:30.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.016" endtime="20201029 12:43:30.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.052" endtime="20201029 12:43:30.339"></status>
</kw>
<msg timestamp="20201029 12:43:30.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022162125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.051" endtime="20201029 12:43:30.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022162125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.345" endtime="20201029 12:43:30.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.356" endtime="20201029 12:43:30.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.048" endtime="20201029 12:43:30.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.046" endtime="20201029 12:43:30.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:30.366" level="INFO">${RESULT} = [{'diff': 4.4583000000000816e-05}, {'diff': 4.407000000000022e-05}, {'diff': 4.4167000000001205e-05}, {'diff': 4.3874999999998776e-05}, {'diff': 4.4222999999999485e-05}, {'diff': 4.402800000000151e-05...</msg>
<status status="PASS" starttime="20201029 12:43:30.362" endtime="20201029 12:43:30.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:30.371" level="INFO">${ACCURACY} = {'diff': [4.4583000000000816e-05, 4.407000000000022e-05, 4.4167000000001205e-05, 4.3874999999998776e-05, 4.4222999999999485e-05, 4.402800000000151e-05, 4.36800000000008e-05, 4.3945000000000095e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:43:30.367" endtime="20201029 12:43:30.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.375" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:43:30.374" endtime="20201029 12:43:30.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.378" level="INFO">VALUE: [4.4583000000000816e-05, 4.407000000000022e-05, 4.4167000000001205e-05, 4.3874999999998776e-05, 4.4222999999999485e-05, 4.402800000000151e-05, 4.36800000000008e-05, 4.3945000000000095e-05, 4.420800000000044e-05, 4.374999999999865e-05, 4.3889000000001815e-05, 4.3639000000001565e-05, 4.38060000000004e-05, 4.3847000000003106e-05, 4.4083000000000316e-05, 4.372199999999951e-05, 4.419400000000087e-05, 4.376399999999822e-05, 4.375000000000212e-05, 4.4138999999998596e-05, 4.3819000000000496e-05, 4.3833000000000066e-05, 4.422200000000001e-05, 4.376400000000169e-05, 4.369400000000037e-05, 4.3819000000000496e-05, 4.400000000000237e-05, 4.39999999999989e-05, 4.3639000000001565e-05, 4.408299999999685e-05, 4.4110999999999456e-05, 4.400000000000237e-05, 4.38060000000004e-05, 4.3653000000001135e-05, 4.4208999999999915e-05, 4.379199999999736e-05, 4.405600000000065e-05, 4.3958999999999665e-05, 4.3902999999997916e-05, 4.3681000000000275e-05, 4.3694999999999845e-05, 4.4110999999999456e-05, 4.408399999999979e-05, 4.4152999999998166e-05, 4.3889000000001815e-05, 4.3846999999999636e-05, 4.4124999999999026e-05, 4.39999999999989e-05, 4.391600000000148e-05, 4.4110999999999456e-05]</msg>
<status status="PASS" starttime="20201029 12:43:30.376" endtime="20201029 12:43:30.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.372" endtime="20201029 12:43:30.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:30.383" endtime="20201029 12:43:30.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.381" endtime="20201029 12:43:30.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.380" endtime="20201029 12:43:30.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.015" endtime="20201029 12:43:30.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.014" endtime="20201029 12:43:30.403"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.412" endtime="20201029 12:43:30.429"></status>
</kw>
<msg timestamp="20201029 12:43:30.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.411" endtime="20201029 12:43:30.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.431" endtime="20201029 12:43:30.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.433" endtime="20201029 12:43:30.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.408" endtime="20201029 12:43:30.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.406" endtime="20201029 12:43:30.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.442" endtime="20201029 12:43:30.729"></status>
</kw>
<msg timestamp="20201029 12:43:30.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.441" endtime="20201029 12:43:30.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.733" endtime="20201029 12:43:30.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.742" endtime="20201029 12:43:30.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.438" endtime="20201029 12:43:30.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.436" endtime="20201029 12:43:30.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:30.748" level="INFO">${RESULT} = [{'diff': 4.505600000000165e-05}, {'diff': 4.498600000000033e-05}, {'diff': 4.480599999999793e-05}, {'diff': 4.476399999999922e-05}, {'diff': 4.5138999999999596e-05}, {'diff': 4.502799999999904e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:30.745" endtime="20201029 12:43:30.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:30.752" level="INFO">${ACCURACY} = {'diff': [4.505600000000165e-05, 4.498600000000033e-05, 4.480599999999793e-05, 4.476399999999922e-05, 4.5138999999999596e-05, 4.502799999999904e-05, 4.4709000000000415e-05, 4.4945000000001095e-05, 4.4...</msg>
<status status="PASS" starttime="20201029 12:43:30.749" endtime="20201029 12:43:30.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.757" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:43:30.756" endtime="20201029 12:43:30.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.759" level="INFO">VALUE: [4.505600000000165e-05, 4.498600000000033e-05, 4.480599999999793e-05, 4.476399999999922e-05, 4.5138999999999596e-05, 4.502799999999904e-05, 4.4709000000000415e-05, 4.4945000000001095e-05, 4.49999999999999e-05, 4.509799999999689e-05, 4.507000000000122e-05, 4.505599999999818e-05, 4.474999999999965e-05, 4.469400000000137e-05, 4.465199999999919e-05, 4.5013e-05, 4.5069000000001747e-05, 4.466599999999876e-05, 4.477799999999879e-05, 4.523600000000058e-05, 4.479099999999889e-05, 4.470799999999747e-05, 4.491600000000248e-05, 4.5097000000000886e-05, 4.5138999999999596e-05, 4.4889000000002816e-05, 4.5125000000000026e-05, 4.495799999999772e-05, 4.472200000000051e-05, 4.5166999999998736e-05, 4.4652999999998666e-05, 4.522200000000101e-05, 4.477799999999879e-05, 4.4888999999999346e-05, 4.504200000000208e-05, 4.4931000000001525e-05, 4.476399999999922e-05, 4.504200000000208e-05, 4.4861000000000206e-05, 4.502799999999904e-05, 4.4888999999999346e-05, 4.474999999999965e-05, 4.476399999999922e-05, 4.4931000000001525e-05, 4.5111000000000456e-05, 4.473600000000008e-05, 4.498600000000033e-05, 4.488799999999987e-05, 4.5083000000001316e-05, 4.493000000000205e-05]</msg>
<status status="PASS" starttime="20201029 12:43:30.758" endtime="20201029 12:43:30.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.753" endtime="20201029 12:43:30.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:30.765" endtime="20201029 12:43:30.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.763" endtime="20201029 12:43:30.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.762" endtime="20201029 12:43:30.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.404" endtime="20201029 12:43:30.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.404" endtime="20201029 12:43:30.785"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.794" endtime="20201029 12:43:30.811"></status>
</kw>
<msg timestamp="20201029 12:43:30.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.792" endtime="20201029 12:43:30.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.812" endtime="20201029 12:43:30.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.815" endtime="20201029 12:43:30.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.790" endtime="20201029 12:43:30.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.788" endtime="20201029 12:43:30.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.824" endtime="20201029 12:43:31.110"></status>
</kw>
<msg timestamp="20201029 12:43:31.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022613417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.822" endtime="20201029 12:43:31.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022613417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.114" endtime="20201029 12:43:31.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.123" endtime="20201029 12:43:31.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.820" endtime="20201029 12:43:31.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.818" endtime="20201029 12:43:31.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:31.129" level="INFO">${RESULT} = [{'diff': 4.648599999999836e-05}, {'diff': 4.640199999999747e-05}, {'diff': 4.5889000000000346e-05}, {'diff': 4.608299999999885e-05}, {'diff': 4.606899999999928e-05}, {'diff': 4.577799999999979e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:31.126" endtime="20201029 12:43:31.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:31.134" level="INFO">${ACCURACY} = {'diff': [4.648599999999836e-05, 4.640199999999747e-05, 4.5889000000000346e-05, 4.608299999999885e-05, 4.606899999999928e-05, 4.577799999999979e-05, 4.595800000000219e-05, 4.5847000000001636e-05, 4.58...</msg>
<status status="PASS" starttime="20201029 12:43:31.130" endtime="20201029 12:43:31.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.138" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:43:31.137" endtime="20201029 12:43:31.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.141" level="INFO">VALUE: [4.648599999999836e-05, 4.640199999999747e-05, 4.5889000000000346e-05, 4.608299999999885e-05, 4.606899999999928e-05, 4.577799999999979e-05, 4.595800000000219e-05, 4.5847000000001636e-05, 4.5875000000000776e-05, 4.6097000000001886e-05, 4.622200000000201e-05, 4.5889000000000346e-05, 4.6111000000001456e-05, 4.601400000000047e-05, 4.572199999999804e-05, 4.624999999999768e-05, 4.6166999999999736e-05, 4.604199999999961e-05, 4.5944999999998626e-05, 4.572199999999804e-05, 4.612499999999756e-05, 4.584699999999817e-05, 4.559699999999792e-05, 4.58199999999985e-05, 4.602800000000004e-05, 4.6180999999999306e-05, 4.623600000000158e-05, 4.6111000000001456e-05, 4.604199999999961e-05, 4.60000000000009e-05, 4.577799999999979e-05, 4.5889000000000346e-05, 4.606899999999928e-05, 4.561200000000043e-05, 4.615200000000069e-05, 4.5861000000001206e-05, 4.569400000000237e-05, 4.6097000000001886e-05, 4.605499999999971e-05, 4.5875000000000776e-05, 4.5652999999999666e-05, 4.617999999999983e-05, 4.592999999999958e-05, 4.605499999999971e-05, 4.61939999999994e-05, 4.620799999999897e-05, 4.599999999999743e-05, 4.623599999999811e-05, 4.5902999999999916e-05, 4.622200000000201e-05]</msg>
<status status="PASS" starttime="20201029 12:43:31.139" endtime="20201029 12:43:31.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.134" endtime="20201029 12:43:31.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:31.146" endtime="20201029 12:43:31.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.145" endtime="20201029 12:43:31.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.144" endtime="20201029 12:43:31.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.786" endtime="20201029 12:43:31.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.786" endtime="20201029 12:43:31.167"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.176" endtime="20201029 12:43:31.192"></status>
</kw>
<msg timestamp="20201029 12:43:31.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.174" endtime="20201029 12:43:31.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.194" endtime="20201029 12:43:31.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.196" endtime="20201029 12:43:31.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.172" endtime="20201029 12:43:31.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.170" endtime="20201029 12:43:31.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.205" endtime="20201029 12:43:31.491"></status>
</kw>
<msg timestamp="20201029 12:43:31.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.204" endtime="20201029 12:43:31.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.496" endtime="20201029 12:43:31.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.505" endtime="20201029 12:43:31.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.201" endtime="20201029 12:43:31.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.200" endtime="20201029 12:43:31.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:31.511" level="INFO">${RESULT} = [{'diff': 4.705499999999724e-05}, {'diff': 4.708299999999985e-05}, {'diff': 4.677800000000079e-05}, {'diff': 4.708299999999985e-05}, {'diff': 4.6903000000000916e-05}, {'diff': 4.677799999999732e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:31.508" endtime="20201029 12:43:31.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:31.516" level="INFO">${ACCURACY} = {'diff': [4.705499999999724e-05, 4.708299999999985e-05, 4.677800000000079e-05, 4.708299999999985e-05, 4.6903000000000916e-05, 4.677799999999732e-05, 4.6667000000000236e-05, 4.720799999999997e-05, 4.71...</msg>
<status status="PASS" starttime="20201029 12:43:31.512" endtime="20201029 12:43:31.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.521" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:43:31.520" endtime="20201029 12:43:31.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.523" level="INFO">VALUE: [4.705499999999724e-05, 4.708299999999985e-05, 4.677800000000079e-05, 4.708299999999985e-05, 4.6903000000000916e-05, 4.677799999999732e-05, 4.6667000000000236e-05, 4.720799999999997e-05, 4.7167000000000736e-05, 4.697199999999929e-05, 4.6708999999998946e-05, 4.677800000000079e-05, 4.705600000000018e-05, 4.6973000000002235e-05, 4.715199999999822e-05, 4.727800000000129e-05, 4.6723000000001985e-05, 4.684799999999864e-05, 4.6708999999998946e-05, 4.7139000000001596e-05, 4.705500000000071e-05, 4.681900000000003e-05, 4.71940000000004e-05, 4.6723000000001985e-05, 4.70000000000019e-05, 4.693000000000058e-05, 4.697199999999929e-05, 4.68329999999996e-05, 4.709699999999942e-05, 4.686099999999874e-05, 4.731900000000053e-05, 4.698599999999886e-05, 4.718000000000083e-05, 4.66529999999972e-05, 4.672199999999904e-05, 4.686099999999874e-05, 4.726400000000172e-05, 4.7111000000002456e-05, 4.706900000000028e-05, 4.698599999999886e-05, 4.684699999999917e-05, 4.670799999999947e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.704200000000061e-05, 4.68199999999995e-05, 4.7181000000000306e-05, 4.722199999999954e-05, 4.6709000000002415e-05, 4.713899999999813e-05]</msg>
<status status="PASS" starttime="20201029 12:43:31.522" endtime="20201029 12:43:31.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.517" endtime="20201029 12:43:31.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:31.528" endtime="20201029 12:43:31.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.527" endtime="20201029 12:43:31.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.526" endtime="20201029 12:43:31.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.168" endtime="20201029 12:43:31.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.168" endtime="20201029 12:43:31.549"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.558" endtime="20201029 12:43:31.575"></status>
</kw>
<msg timestamp="20201029 12:43:31.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.556" endtime="20201029 12:43:31.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.576" endtime="20201029 12:43:31.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.579" endtime="20201029 12:43:31.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.554" endtime="20201029 12:43:31.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.552" endtime="20201029 12:43:31.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.588" endtime="20201029 12:43:31.875"></status>
</kw>
<msg timestamp="20201029 12:43:31.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021871792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.586" endtime="20201029 12:43:31.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021871792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.879" endtime="20201029 12:43:31.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.887" endtime="20201029 12:43:31.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.584" endtime="20201029 12:43:31.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.582" endtime="20201029 12:43:31.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:31.894" level="INFO">${RESULT} = [{'diff': 4.822200000000054e-05}, {'diff': 4.829199999999839e-05}, {'diff': 4.7959000000000196e-05}, {'diff': 4.779199999999789e-05}, {'diff': 4.813899999999913e-05}, {'diff': 4.799999999999943e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:31.891" endtime="20201029 12:43:31.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:31.898" level="INFO">${ACCURACY} = {'diff': [4.822200000000054e-05, 4.829199999999839e-05, 4.7959000000000196e-05, 4.779199999999789e-05, 4.813899999999913e-05, 4.799999999999943e-05, 4.809699999999695e-05, 4.770800000000047e-05, 4.809...</msg>
<status status="PASS" starttime="20201029 12:43:31.895" endtime="20201029 12:43:31.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.902" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:43:31.901" endtime="20201029 12:43:31.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.905" level="INFO">VALUE: [4.822200000000054e-05, 4.829199999999839e-05, 4.7959000000000196e-05, 4.779199999999789e-05, 4.813899999999913e-05, 4.799999999999943e-05, 4.809699999999695e-05, 4.770800000000047e-05, 4.809700000000042e-05, 4.806900000000128e-05, 4.770800000000047e-05, 4.813899999999913e-05, 4.809700000000042e-05, 4.795800000000072e-05, 4.804099999999867e-05, 4.822200000000054e-05, 4.786099999999974e-05, 4.812499999999956e-05, 4.797200000000029e-05, 4.819399999999793e-05, 4.7931000000001056e-05, 4.790299999999845e-05, 4.772200000000004e-05, 4.784800000000311e-05, 4.804200000000161e-05, 4.805599999999771e-05, 4.822200000000054e-05, 4.788899999999888e-05, 4.7667000000001236e-05, 4.779200000000136e-05, 4.7667000000001236e-05, 4.787499999999931e-05, 4.781900000000103e-05, 4.815199999999922e-05, 4.777799999999832e-05, 4.7959000000000196e-05, 4.779099999999842e-05, 4.779100000000189e-05, 4.780499999999799e-05, 4.770800000000047e-05, 4.780499999999799e-05, 4.827700000000282e-05, 4.779099999999842e-05, 4.791599999999854e-05, 4.790299999999845e-05, 4.822200000000054e-05, 4.826399999999925e-05, 4.769399999999743e-05, 4.781900000000103e-05, 4.817999999999836e-05]</msg>
<status status="PASS" starttime="20201029 12:43:31.904" endtime="20201029 12:43:31.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.899" endtime="20201029 12:43:31.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:31.910" endtime="20201029 12:43:31.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.909" endtime="20201029 12:43:31.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.907" endtime="20201029 12:43:31.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.550" endtime="20201029 12:43:31.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.550" endtime="20201029 12:43:31.931"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.940" endtime="20201029 12:43:31.960"></status>
</kw>
<msg timestamp="20201029 12:43:31.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.938" endtime="20201029 12:43:31.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.961" endtime="20201029 12:43:31.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.964" endtime="20201029 12:43:31.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.936" endtime="20201029 12:43:31.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.934" endtime="20201029 12:43:31.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.973" endtime="20201029 12:43:32.259"></status>
</kw>
<msg timestamp="20201029 12:43:32.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025041222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025091139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.972" endtime="20201029 12:43:32.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025041222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025091139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.264" endtime="20201029 12:43:32.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.272" endtime="20201029 12:43:32.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.969" endtime="20201029 12:43:32.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.967" endtime="20201029 12:43:32.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:32.279" level="INFO">${RESULT} = [{'diff': 4.991700000000002e-05}, {'diff': 4.91529999999997e-05}, {'diff': 4.8737000000000086e-05}, {'diff': 4.91529999999997e-05}, {'diff': 4.900000000000043e-05}, {'diff': 4.892999999999911e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:32.275" endtime="20201029 12:43:32.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:32.283" level="INFO">${ACCURACY} = {'diff': [4.991700000000002e-05, 4.91529999999997e-05, 4.8737000000000086e-05, 4.91529999999997e-05, 4.900000000000043e-05, 4.892999999999911e-05, 4.917999999999936e-05, 4.901300000000053e-05, 4.92080...</msg>
<status status="PASS" starttime="20201029 12:43:32.280" endtime="20201029 12:43:32.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.287" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:43:32.286" endtime="20201029 12:43:32.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.290" level="INFO">VALUE: [4.991700000000002e-05, 4.91529999999997e-05, 4.8737000000000086e-05, 4.91529999999997e-05, 4.900000000000043e-05, 4.892999999999911e-05, 4.917999999999936e-05, 4.901300000000053e-05, 4.920800000000197e-05, 4.908299999999838e-05, 4.892999999999911e-05, 4.920800000000197e-05, 4.886100000000074e-05, 4.898600000000086e-05, 4.891599999999954e-05, 4.902799999999957e-05, 4.86529999999992e-05, 4.870800000000147e-05, 4.876399999999975e-05, 4.918099999999884e-05, 4.895799999999825e-05, 4.905599999999871e-05, 4.894499999999816e-05, 4.88330000000016e-05, 4.8707999999998e-05, 4.8959000000001196e-05, 4.898600000000086e-05, 4.898599999999739e-05, 4.927799999999982e-05, 4.8667000000002236e-05, 4.919399999999893e-05, 4.912500000000056e-05, 4.909799999999742e-05, 4.905500000000271e-05, 4.900000000000043e-05, 4.926400000000025e-05, 4.90270000000001e-05, 4.869399999999843e-05, 4.915200000000022e-05, 4.9014e-05, 4.875000000000018e-05, 4.905500000000271e-05, 4.894399999999868e-05, 4.869399999999843e-05, 4.898599999999739e-05, 4.872200000000104e-05, 4.877800000000279e-05, 4.880499999999899e-05, 4.872200000000104e-05, 4.916699999999927e-05]</msg>
<status status="PASS" starttime="20201029 12:43:32.288" endtime="20201029 12:43:32.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.284" endtime="20201029 12:43:32.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:32.296" endtime="20201029 12:43:32.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.294" endtime="20201029 12:43:32.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.293" endtime="20201029 12:43:32.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.932" endtime="20201029 12:43:32.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.931" endtime="20201029 12:43:32.317"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.325" endtime="20201029 12:43:32.342"></status>
</kw>
<msg timestamp="20201029 12:43:32.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.324" endtime="20201029 12:43:32.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.343" endtime="20201029 12:43:32.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.346" endtime="20201029 12:43:32.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.321" endtime="20201029 12:43:32.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.319" endtime="20201029 12:43:32.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.355" endtime="20201029 12:43:32.642"></status>
</kw>
<msg timestamp="20201029 12:43:32.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.353" endtime="20201029 12:43:32.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.646" endtime="20201029 12:43:32.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.654" endtime="20201029 12:43:32.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.351" endtime="20201029 12:43:32.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.349" endtime="20201029 12:43:32.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:32.661" level="INFO">${RESULT} = [{'diff': 5.015200000000122e-05}, {'diff': 4.983299999999913e-05}, {'diff': 4.970899999999848e-05}, {'diff': 4.969399999999943e-05}, {'diff': 5.011100000000199e-05}, {'diff': 5.008300000000285e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:32.658" endtime="20201029 12:43:32.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:32.666" level="INFO">${ACCURACY} = {'diff': [5.015200000000122e-05, 4.983299999999913e-05, 4.970899999999848e-05, 4.969399999999943e-05, 5.011100000000199e-05, 5.008300000000285e-05, 4.993099999999959e-05, 4.966699999999977e-05, 4.9903...</msg>
<status status="PASS" starttime="20201029 12:43:32.662" endtime="20201029 12:43:32.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.671" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:43:32.670" endtime="20201029 12:43:32.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.673" level="INFO">VALUE: [5.015200000000122e-05, 4.983299999999913e-05, 4.970899999999848e-05, 4.969399999999943e-05, 5.011100000000199e-05, 5.008300000000285e-05, 4.993099999999959e-05, 4.966699999999977e-05, 4.990300000000045e-05, 4.975000000000118e-05, 5.005599999999971e-05, 5.006999999999928e-05, 4.975000000000118e-05, 4.988900000000088e-05, 5.011099999999852e-05, 4.984799999999817e-05, 4.968099999999934e-05, 4.966600000000029e-05, 5.005500000000024e-05, 4.980499999999999e-05, 4.998600000000186e-05, 4.973600000000161e-05, 5.018000000000036e-05, 4.980499999999999e-05, 4.974999999999771e-05, 5.008299999999938e-05, 5.005500000000024e-05, 4.991600000000054e-05, 5.022199999999907e-05, 4.9707999999999e-05, 5.011100000000199e-05, 5.000000000000143e-05, 4.9667000000003236e-05, 4.9707999999999e-05, 4.983299999999913e-05, 5.011099999999852e-05, 4.9707999999999e-05, 5.022199999999907e-05, 4.994499999999916e-05, 5.002800000000057e-05, 4.990300000000045e-05, 4.965299999999673e-05, 4.98339999999986e-05, 4.980599999999946e-05, 4.993099999999959e-05, 5.002800000000057e-05, 5.008399999999885e-05, 5.004200000000014e-05, 5.006999999999928e-05, 4.977700000000085e-05]</msg>
<status status="PASS" starttime="20201029 12:43:32.672" endtime="20201029 12:43:32.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.667" endtime="20201029 12:43:32.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:32.678" endtime="20201029 12:43:32.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.677" endtime="20201029 12:43:32.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.675" endtime="20201029 12:43:32.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.318" endtime="20201029 12:43:32.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.317" endtime="20201029 12:43:32.699"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.707" endtime="20201029 12:43:32.725"></status>
</kw>
<msg timestamp="20201029 12:43:32.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.706" endtime="20201029 12:43:32.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.726" endtime="20201029 12:43:32.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.729" endtime="20201029 12:43:32.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.703" endtime="20201029 12:43:32.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.701" endtime="20201029 12:43:32.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.738" endtime="20201029 12:43:33.024"></status>
</kw>
<msg timestamp="20201029 12:43:33.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.736" endtime="20201029 12:43:33.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.029" endtime="20201029 12:43:33.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.037" endtime="20201029 12:43:33.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.734" endtime="20201029 12:43:33.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.732" endtime="20201029 12:43:33.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:33.043" level="INFO">${RESULT} = [{'diff': 5.129199999999792e-05}, {'diff': 5.108300000000038e-05}, {'diff': 5.104200000000114e-05}, {'diff': 5.088900000000188e-05}, {'diff': 5.083300000000013e-05}, {'diff': 5.113900000000213e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:33.040" endtime="20201029 12:43:33.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:33.048" level="INFO">${ACCURACY} = {'diff': [5.129199999999792e-05, 5.108300000000038e-05, 5.104200000000114e-05, 5.088900000000188e-05, 5.083300000000013e-05, 5.113900000000213e-05, 5.079199999999742e-05, 5.107000000000028e-05, 5.0833...</msg>
<status status="PASS" starttime="20201029 12:43:33.044" endtime="20201029 12:43:33.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.052" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:43:33.051" endtime="20201029 12:43:33.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.055" level="INFO">VALUE: [5.129199999999792e-05, 5.108300000000038e-05, 5.104200000000114e-05, 5.088900000000188e-05, 5.083300000000013e-05, 5.113900000000213e-05, 5.079199999999742e-05, 5.107000000000028e-05, 5.083300000000013e-05, 5.097199999999982e-05, 5.073599999999914e-05, 5.080599999999699e-05, 5.132000000000053e-05, 5.113900000000213e-05, 5.090299999999798e-05, 5.088899999999841e-05, 5.120899999999998e-05, 5.074999999999871e-05, 5.113900000000213e-05, 5.0887999999998934e-05, 5.109699999999995e-05, 5.11530000000017e-05, 5.087499999999884e-05, 5.1138000000002654e-05, 5.0708e-05, 5.102800000000157e-05, 5.0679999999997394e-05, 5.093000000000111e-05, 5.080500000000099e-05, 5.073599999999914e-05, 5.079100000000142e-05, 5.079099999999795e-05, 5.127799999999835e-05, 5.087500000000231e-05, 5.083300000000013e-05, 5.108300000000038e-05, 5.061100000000249e-05, 5.119500000000041e-05, 5.093100000000059e-05, 5.077799999999785e-05, 5.11530000000017e-05, 5.069499999999991e-05, 5.108399999999985e-05, 5.120899999999998e-05, 5.094500000000016e-05, 5.118100000000084e-05, 5.0723000000002516e-05, 5.099999999999896e-05, 5.079200000000089e-05, 5.104199999999767e-05]</msg>
<status status="PASS" starttime="20201029 12:43:33.053" endtime="20201029 12:43:33.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.049" endtime="20201029 12:43:33.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:33.060" endtime="20201029 12:43:33.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.058" endtime="20201029 12:43:33.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.057" endtime="20201029 12:43:33.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.700" endtime="20201029 12:43:33.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.699" endtime="20201029 12:43:33.080"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.089" endtime="20201029 12:43:33.107"></status>
</kw>
<msg timestamp="20201029 12:43:33.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.087" endtime="20201029 12:43:33.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.108" endtime="20201029 12:43:33.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.111" endtime="20201029 12:43:33.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.085" endtime="20201029 12:43:33.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.083" endtime="20201029 12:43:33.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.120" endtime="20201029 12:43:33.405"></status>
</kw>
<msg timestamp="20201029 12:43:33.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022777139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.118" endtime="20201029 12:43:33.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022777139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.410" endtime="20201029 12:43:33.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.418" endtime="20201029 12:43:33.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.115" endtime="20201029 12:43:33.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.114" endtime="20201029 12:43:33.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:33.425" level="INFO">${RESULT} = [{'diff': 5.1971999999997354e-05}, {'diff': 5.236100000000077e-05}, {'diff': 5.190299999999898e-05}, {'diff': 5.213900000000313e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.209800000000042e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:33.422" endtime="20201029 12:43:33.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:33.429" level="INFO">${ACCURACY} = {'diff': [5.1971999999997354e-05, 5.236100000000077e-05, 5.190299999999898e-05, 5.213900000000313e-05, 5.187499999999984e-05, 5.209800000000042e-05, 5.20409999999992e-05, 5.229200000000239e-05, 5.1847...</msg>
<status status="PASS" starttime="20201029 12:43:33.426" endtime="20201029 12:43:33.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.434" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:43:33.432" endtime="20201029 12:43:33.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.436" level="INFO">VALUE: [5.1971999999997354e-05, 5.236100000000077e-05, 5.190299999999898e-05, 5.213900000000313e-05, 5.187499999999984e-05, 5.209800000000042e-05, 5.20409999999992e-05, 5.229200000000239e-05, 5.18470000000007e-05, 5.1708000000001e-05, 5.187499999999984e-05, 5.1915999999999074e-05, 5.1679999999998394e-05, 5.205499999999877e-05, 5.188899999999941e-05, 5.1929999999998644e-05, 5.209700000000095e-05, 5.204100000000267e-05, 5.181899999999809e-05, 5.179199999999842e-05, 5.179200000000189e-05, 5.16669999999983e-05, 5.188899999999941e-05, 5.191700000000202e-05, 5.21669999999988e-05, 5.186100000000027e-05, 5.209800000000042e-05, 5.173600000000014e-05, 5.204199999999867e-05, 5.188900000000288e-05, 5.18470000000007e-05, 5.194499999999769e-05, 5.19730000000003e-05, 5.19730000000003e-05, 5.194499999999769e-05, 5.226399999999978e-05, 5.188899999999941e-05, 5.186100000000027e-05, 5.1915999999999074e-05, 5.183300000000113e-05, 5.16669999999983e-05, 5.180499999999852e-05, 5.173600000000014e-05, 5.187499999999984e-05, 5.215299999999923e-05, 5.209700000000095e-05, 5.186100000000027e-05, 5.201399999999953e-05, 5.1943999999998214e-05, 5.172200000000057e-05]</msg>
<status status="PASS" starttime="20201029 12:43:33.435" endtime="20201029 12:43:33.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.430" endtime="20201029 12:43:33.438"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:33.442" endtime="20201029 12:43:33.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.440" endtime="20201029 12:43:33.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.439" endtime="20201029 12:43:33.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.081" endtime="20201029 12:43:33.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.081" endtime="20201029 12:43:33.463"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.471" endtime="20201029 12:43:33.489"></status>
</kw>
<msg timestamp="20201029 12:43:33.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.470" endtime="20201029 12:43:33.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.490" endtime="20201029 12:43:33.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.493" endtime="20201029 12:43:33.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.467" endtime="20201029 12:43:33.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.465" endtime="20201029 12:43:33.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.502" endtime="20201029 12:43:33.789"></status>
</kw>
<msg timestamp="20201029 12:43:33.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022239917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.500" endtime="20201029 12:43:33.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022239917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.793" endtime="20201029 12:43:33.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.801" endtime="20201029 12:43:33.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.498" endtime="20201029 12:43:33.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.496" endtime="20201029 12:43:33.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:33.808" level="INFO">${RESULT} = [{'diff': 5.352699999999766e-05}, {'diff': 5.298700000000087e-05}, {'diff': 5.308299999999891e-05}, {'diff': 5.311099999999805e-05}, {'diff': 5.331899999999959e-05}, {'diff': 5.318100000000284e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:33.805" endtime="20201029 12:43:33.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:33.813" level="INFO">${ACCURACY} = {'diff': [5.352699999999766e-05, 5.298700000000087e-05, 5.308299999999891e-05, 5.311099999999805e-05, 5.331899999999959e-05, 5.318100000000284e-05, 5.30280000000001e-05, 5.2999999999997494e-05, 5.2722...</msg>
<status status="PASS" starttime="20201029 12:43:33.809" endtime="20201029 12:43:33.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.817" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:43:33.816" endtime="20201029 12:43:33.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.820" level="INFO">VALUE: [5.352699999999766e-05, 5.298700000000087e-05, 5.308299999999891e-05, 5.311099999999805e-05, 5.331899999999959e-05, 5.318100000000284e-05, 5.30280000000001e-05, 5.2999999999997494e-05, 5.272200000000157e-05, 5.297200000000182e-05, 5.290299999999998e-05, 5.309700000000195e-05, 5.304199999999967e-05, 5.298600000000139e-05, 5.277799999999985e-05, 5.322200000000207e-05, 5.270900000000148e-05, 5.298600000000139e-05, 5.284800000000117e-05, 5.305599999999924e-05, 5.279099999999995e-05, 5.319499999999894e-05, 5.298600000000139e-05, 5.313900000000066e-05, 5.2721999999998104e-05, 5.2693999999998964e-05, 5.3166000000000324e-05, 5.280600000000246e-05, 5.2693999999998964e-05, 5.287500000000084e-05, 5.320900000000198e-05, 5.284699999999823e-05, 5.3193999999999464e-05, 5.287500000000084e-05, 5.301400000000053e-05, 5.2971999999998354e-05, 5.313900000000066e-05, 5.298600000000139e-05, 5.265299999999973e-05, 5.288900000000041e-05, 5.288899999999694e-05, 5.28470000000017e-05, 5.315300000000023e-05, 5.31669999999998e-05, 5.286100000000127e-05, 5.318099999999937e-05, 5.288900000000041e-05, 5.293100000000259e-05, 5.2902000000000504e-05, 5.265299999999973e-05]</msg>
<status status="PASS" starttime="20201029 12:43:33.819" endtime="20201029 12:43:33.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.814" endtime="20201029 12:43:33.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:33.825" endtime="20201029 12:43:33.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.824" endtime="20201029 12:43:33.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.822" endtime="20201029 12:43:33.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.463" endtime="20201029 12:43:33.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.463" endtime="20201029 12:43:33.846"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.854" endtime="20201029 12:43:33.871"></status>
</kw>
<msg timestamp="20201029 12:43:33.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.853" endtime="20201029 12:43:33.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.873" endtime="20201029 12:43:33.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.875" endtime="20201029 12:43:33.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.850" endtime="20201029 12:43:33.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.848" endtime="20201029 12:43:33.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.884" endtime="20201029 12:43:34.170"></status>
</kw>
<msg timestamp="20201029 12:43:34.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021834958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.883" endtime="20201029 12:43:34.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021834958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.175" endtime="20201029 12:43:34.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.183" endtime="20201029 12:43:34.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.880" endtime="20201029 12:43:34.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.879" endtime="20201029 12:43:34.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:34.190" level="INFO">${RESULT} = [{'diff': 5.419499999999994e-05}, {'diff': 5.418100000000037e-05}, {'diff': 5.3957999999999784e-05}, {'diff': 5.4208000000000034e-05}, {'diff': 5.3721999999999104e-05}, {'diff': 5.406900000000034e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:34.186" endtime="20201029 12:43:34.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:34.194" level="INFO">${ACCURACY} = {'diff': [5.419499999999994e-05, 5.418100000000037e-05, 5.3957999999999784e-05, 5.4208000000000034e-05, 5.3721999999999104e-05, 5.406900000000034e-05, 5.38609999999988e-05, 5.3957999999999784e-05, 5.4...</msg>
<status status="PASS" starttime="20201029 12:43:34.191" endtime="20201029 12:43:34.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.198" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:43:34.197" endtime="20201029 12:43:34.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.201" level="INFO">VALUE: [5.419499999999994e-05, 5.418100000000037e-05, 5.3957999999999784e-05, 5.4208000000000034e-05, 5.3721999999999104e-05, 5.406900000000034e-05, 5.38609999999988e-05, 5.3957999999999784e-05, 5.412500000000209e-05, 5.390300000000098e-05, 5.3971999999999354e-05, 5.4208000000000034e-05, 5.381999999999956e-05, 5.405500000000077e-05, 5.390300000000098e-05, 5.41670000000008e-05, 5.3985999999998924e-05, 5.383299999999966e-05, 5.408299999999991e-05, 5.408399999999938e-05, 5.376400000000128e-05, 5.3763999999997814e-05, 5.412500000000209e-05, 5.387500000000184e-05, 5.418100000000037e-05, 5.420899999999951e-05, 5.4027999999997633e-05, 5.407000000000328e-05, 5.413899999999819e-05, 5.4249999999998744e-05, 5.408399999999938e-05, 5.402699999999816e-05, 5.3887999999998465e-05, 5.380500000000052e-05, 5.398600000000239e-05, 5.411099999999905e-05, 5.3999999999998494e-05, 5.387500000000184e-05, 5.404200000000067e-05, 5.363899999999769e-05, 5.3957999999999784e-05, 5.3693999999999964e-05, 5.40280000000011e-05, 5.3707999999999534e-05, 5.38609999999988e-05, 5.4235999999999174e-05, 5.384699999999923e-05, 5.383299999999966e-05, 5.401400000000153e-05, 5.393100000000012e-05]</msg>
<status status="PASS" starttime="20201029 12:43:34.200" endtime="20201029 12:43:34.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.195" endtime="20201029 12:43:34.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.206" endtime="20201029 12:43:34.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.204" endtime="20201029 12:43:34.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.203" endtime="20201029 12:43:34.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.847" endtime="20201029 12:43:34.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.846" endtime="20201029 12:43:34.227"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.235" endtime="20201029 12:43:34.253"></status>
</kw>
<msg timestamp="20201029 12:43:34.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.234" endtime="20201029 12:43:34.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.255" endtime="20201029 12:43:34.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.257" endtime="20201029 12:43:34.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.231" endtime="20201029 12:43:34.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.229" endtime="20201029 12:43:34.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.266" endtime="20201029 12:43:34.553"></status>
</kw>
<msg timestamp="20201029 12:43:34.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022753597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.265" endtime="20201029 12:43:34.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022753597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.557" endtime="20201029 12:43:34.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.565" endtime="20201029 12:43:34.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.262" endtime="20201029 12:43:34.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.261" endtime="20201029 12:43:34.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:34.572" level="INFO">${RESULT} = [{'diff': 5.588899999999994e-05}, {'diff': 5.516699999999833e-05}, {'diff': 5.4694000000000964e-05}, {'diff': 5.518100000000137e-05}, {'diff': 5.475000000000271e-05}, {'diff': 5.4999999999999494e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:34.569" endtime="20201029 12:43:34.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:34.576" level="INFO">${ACCURACY} = {'diff': [5.588899999999994e-05, 5.516699999999833e-05, 5.4694000000000964e-05, 5.518100000000137e-05, 5.475000000000271e-05, 5.4999999999999494e-05, 5.4707999999997065e-05, 5.487499999999937e-05, 5.4...</msg>
<status status="PASS" starttime="20201029 12:43:34.573" endtime="20201029 12:43:34.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.581" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:43:34.580" endtime="20201029 12:43:34.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.583" level="INFO">VALUE: [5.588899999999994e-05, 5.516699999999833e-05, 5.4694000000000964e-05, 5.518100000000137e-05, 5.475000000000271e-05, 5.4999999999999494e-05, 5.4707999999997065e-05, 5.487499999999937e-05, 5.465299999999826e-05, 5.502699999999916e-05, 5.470900000000001e-05, 5.4985999999999924e-05, 5.5277999999998884e-05, 5.515300000000223e-05, 5.468100000000087e-05, 5.5208000000001034e-05, 5.520900000000051e-05, 5.511199999999952e-05, 5.488899999999894e-05, 5.523699999999965e-05, 5.50280000000021e-05, 5.5208000000001034e-05, 5.4665999999998355e-05, 5.4749999999999244e-05, 5.463900000000216e-05, 5.504099999999873e-05, 5.5013999999999064e-05, 5.516699999999833e-05, 5.50549999999983e-05, 5.506900000000134e-05, 5.515300000000223e-05, 5.5041999999998203e-05, 5.4972000000000354e-05, 5.505600000000124e-05, 5.518100000000137e-05, 5.469500000000044e-05, 5.488899999999894e-05, 5.4777999999998384e-05, 5.481899999999762e-05, 5.515299999999876e-05, 5.483400000000013e-05, 5.4791999999997953e-05, 5.463900000000216e-05, 5.4999999999999494e-05, 5.46670000000013e-05, 5.497299999999983e-05, 5.4763999999998814e-05, 5.48479999999997e-05, 5.477699999999891e-05, 5.4916000000002074e-05]</msg>
<status status="PASS" starttime="20201029 12:43:34.582" endtime="20201029 12:43:34.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.577" endtime="20201029 12:43:34.585"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.589" endtime="20201029 12:43:34.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.588" endtime="20201029 12:43:34.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.586" endtime="20201029 12:43:34.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.228" endtime="20201029 12:43:34.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.227" endtime="20201029 12:43:34.610"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.619" endtime="20201029 12:43:34.635"></status>
</kw>
<msg timestamp="20201029 12:43:34.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.617" endtime="20201029 12:43:34.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.637" endtime="20201029 12:43:34.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.639" endtime="20201029 12:43:34.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.614" endtime="20201029 12:43:34.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.612" endtime="20201029 12:43:34.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.648" endtime="20201029 12:43:34.934"></status>
</kw>
<msg timestamp="20201029 12:43:34.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.647" endtime="20201029 12:43:34.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.938" endtime="20201029 12:43:34.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.946" endtime="20201029 12:43:34.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.644" endtime="20201029 12:43:34.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.643" endtime="20201029 12:43:34.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:34.953" level="INFO">${RESULT} = [{'diff': 5.613900000000019e-05}, {'diff': 5.587500000000037e-05}, {'diff': 5.6222000000001604e-05}, {'diff': 5.6000000000000494e-05}, {'diff': 5.579099999999948e-05}, {'diff': 5.580499999999905e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:34.950" endtime="20201029 12:43:34.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:34.958" level="INFO">${ACCURACY} = {'diff': [5.613900000000019e-05, 5.587500000000037e-05, 5.6222000000001604e-05, 5.6000000000000494e-05, 5.579099999999948e-05, 5.580499999999905e-05, 5.5999999999997024e-05, 5.563899999999969e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 12:43:34.954" endtime="20201029 12:43:34.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.962" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:43:34.961" endtime="20201029 12:43:34.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.965" level="INFO">VALUE: [5.613900000000019e-05, 5.587500000000037e-05, 5.6222000000001604e-05, 5.6000000000000494e-05, 5.579099999999948e-05, 5.580499999999905e-05, 5.5999999999997024e-05, 5.563899999999969e-05, 5.615299999999976e-05, 5.5750000000000244e-05, 5.583299999999819e-05, 5.5791999999998954e-05, 5.588900000000341e-05, 5.569500000000144e-05, 5.5791999999998954e-05, 5.58610000000008e-05, 5.597299999999736e-05, 5.5791999999998954e-05, 5.577800000000285e-05, 5.588899999999994e-05, 5.5791999999998954e-05, 5.609800000000095e-05, 5.581999999999809e-05, 5.605500000000277e-05, 5.573700000000015e-05, 5.609800000000095e-05, 5.601300000000059e-05, 5.5736000000000674e-05, 5.5915999999999605e-05, 5.6152000000000285e-05, 5.579100000000295e-05, 5.6208000000002034e-05, 5.5958000000001784e-05, 5.608300000000191e-05, 5.613900000000019e-05, 5.6000000000000494e-05, 5.5707999999998065e-05, 5.582000000000156e-05, 5.58610000000008e-05, 5.5722000000001104e-05, 5.605600000000224e-05, 5.591699999999908e-05, 5.5985999999997454e-05, 5.5763999999999814e-05, 5.591699999999908e-05, 5.615299999999976e-05, 5.619499999999847e-05, 5.565299999999926e-05, 5.573700000000015e-05, 5.613900000000019e-05]</msg>
<status status="PASS" starttime="20201029 12:43:34.963" endtime="20201029 12:43:34.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.959" endtime="20201029 12:43:34.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.970" endtime="20201029 12:43:34.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.968" endtime="20201029 12:43:34.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.967" endtime="20201029 12:43:34.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.611" endtime="20201029 12:43:34.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.610" endtime="20201029 12:43:34.991"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.999" endtime="20201029 12:43:35.016"></status>
</kw>
<msg timestamp="20201029 12:43:35.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.998" endtime="20201029 12:43:35.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.018" endtime="20201029 12:43:35.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.020" endtime="20201029 12:43:35.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.995" endtime="20201029 12:43:35.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.993" endtime="20201029 12:43:35.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.029" endtime="20201029 12:43:35.317"></status>
</kw>
<msg timestamp="20201029 12:43:35.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022270778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022328319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.028" endtime="20201029 12:43:35.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022270778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022328319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.321" endtime="20201029 12:43:35.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.330" endtime="20201029 12:43:35.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.025" endtime="20201029 12:43:35.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.023" endtime="20201029 12:43:35.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:35.336" level="INFO">${RESULT} = [{'diff': 5.754099999999776e-05}, {'diff': 5.73749999999984e-05}, {'diff': 5.711100000000205e-05}, {'diff': 5.704100000000073e-05}, {'diff': 5.706899999999987e-05}, {'diff': 5.690299999999704e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:35.333" endtime="20201029 12:43:35.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:35.341" level="INFO">${ACCURACY} = {'diff': [5.754099999999776e-05, 5.73749999999984e-05, 5.711100000000205e-05, 5.704100000000073e-05, 5.706899999999987e-05, 5.690299999999704e-05, 5.6749999999997774e-05, 5.7221999999999135e-05, 5.697...</msg>
<status status="PASS" starttime="20201029 12:43:35.337" endtime="20201029 12:43:35.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.346" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:43:35.344" endtime="20201029 12:43:35.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.348" level="INFO">VALUE: [5.754099999999776e-05, 5.73749999999984e-05, 5.711100000000205e-05, 5.704100000000073e-05, 5.706899999999987e-05, 5.690299999999704e-05, 5.6749999999997774e-05, 5.7221999999999135e-05, 5.6971999999998885e-05, 5.681899999999962e-05, 5.6791999999999954e-05, 5.6986000000001924e-05, 5.708299999999944e-05, 5.6778000000000384e-05, 5.6986000000001924e-05, 5.711100000000205e-05, 5.684699999999876e-05, 5.711100000000205e-05, 5.6916000000000605e-05, 5.688900000000094e-05, 5.712500000000162e-05, 5.68610000000018e-05, 5.6764000000000814e-05, 5.6999999999998024e-05, 5.715300000000076e-05, 5.70550000000003e-05, 5.6707999999999065e-05, 5.7207999999999565e-05, 5.6902000000001035e-05, 5.68610000000018e-05, 5.679099999999701e-05, 5.711099999999858e-05, 5.715300000000076e-05, 5.7263999999997844e-05, 5.666699999999983e-05, 5.6930000000000175e-05, 5.7014000000001064e-05, 5.7069999999999343e-05, 5.680600000000299e-05, 5.7069999999999343e-05, 5.690300000000051e-05, 5.6764000000000814e-05, 5.690300000000051e-05, 5.6805999999999524e-05, 5.7236000000002174e-05, 5.673700000000115e-05, 5.683400000000213e-05, 5.670899999999854e-05, 5.695899999999879e-05, 5.7014000000001064e-05]</msg>
<status status="PASS" starttime="20201029 12:43:35.347" endtime="20201029 12:43:35.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.342" endtime="20201029 12:43:35.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:35.354" endtime="20201029 12:43:35.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.352" endtime="20201029 12:43:35.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.351" endtime="20201029 12:43:35.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.992" endtime="20201029 12:43:35.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.991" endtime="20201029 12:43:35.375"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.383" endtime="20201029 12:43:35.403"></status>
</kw>
<msg timestamp="20201029 12:43:35.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.382" endtime="20201029 12:43:35.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.405" endtime="20201029 12:43:35.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.407" endtime="20201029 12:43:35.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.379" endtime="20201029 12:43:35.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.377" endtime="20201029 12:43:35.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.416" endtime="20201029 12:43:35.702"></status>
</kw>
<msg timestamp="20201029 12:43:35.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025068736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025126917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.415" endtime="20201029 12:43:35.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025068736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025126917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.706" endtime="20201029 12:43:35.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.714" endtime="20201029 12:43:35.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.412" endtime="20201029 12:43:35.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.411" endtime="20201029 12:43:35.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:35.721" level="INFO">${RESULT} = [{'diff': 5.818099999999743e-05}, {'diff': 5.7958000000000315e-05}, {'diff': 5.813900000000219e-05}, {'diff': 5.78749999999989e-05}, {'diff': 5.7971999999999885e-05}, {'diff': 5.8235999999999705e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:35.718" endtime="20201029 12:43:35.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:35.725" level="INFO">${ACCURACY} = {'diff': [5.818099999999743e-05, 5.7958000000000315e-05, 5.813900000000219e-05, 5.78749999999989e-05, 5.7971999999999885e-05, 5.8235999999999705e-05, 5.8013999999998594e-05, 5.7958000000000315e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:43:35.722" endtime="20201029 12:43:35.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.730" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:43:35.729" endtime="20201029 12:43:35.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.732" level="INFO">VALUE: [5.818099999999743e-05, 5.7958000000000315e-05, 5.813900000000219e-05, 5.78749999999989e-05, 5.7971999999999885e-05, 5.8235999999999705e-05, 5.8013999999998594e-05, 5.7958000000000315e-05, 5.7721999999999635e-05, 5.808300000000044e-05, 5.8222000000000135e-05, 5.791700000000108e-05, 5.8027999999998164e-05, 5.7805999999997054e-05, 5.8222000000000135e-05, 5.815299999999829e-05, 5.7735999999999205e-05, 5.7999999999999025e-05, 5.81810000000009e-05, 5.784799999999923e-05, 5.7806000000000524e-05, 5.804100000000173e-05, 5.765299999999779e-05, 5.7971999999999885e-05, 5.8152000000002285e-05, 5.8194000000000995e-05, 5.7750000000002244e-05, 5.7679999999997456e-05, 5.8166000000001855e-05, 5.783300000000019e-05, 5.781900000000062e-05, 5.816700000000133e-05, 5.8165999999998386e-05, 5.80550000000013e-05, 5.7999999999999025e-05, 5.7735999999999205e-05, 5.793100000000065e-05, 5.78749999999989e-05, 5.7792000000000954e-05, 5.8207999999997095e-05, 5.7806000000000524e-05, 5.8000000000002494e-05, 5.76810000000004e-05, 5.8264000000002314e-05, 5.8013999999998594e-05, 5.812499999999915e-05, 5.776300000000234e-05, 5.8083999999999913e-05, 5.772300000000258e-05, 5.78749999999989e-05]</msg>
<status status="PASS" starttime="20201029 12:43:35.731" endtime="20201029 12:43:35.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.726" endtime="20201029 12:43:35.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:35.738" endtime="20201029 12:43:35.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.736" endtime="20201029 12:43:35.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.735" endtime="20201029 12:43:35.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.376" endtime="20201029 12:43:35.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.375" endtime="20201029 12:43:35.759"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.767" endtime="20201029 12:43:35.784"></status>
</kw>
<msg timestamp="20201029 12:43:35.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.766" endtime="20201029 12:43:35.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.785" endtime="20201029 12:43:35.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.788" endtime="20201029 12:43:35.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.763" endtime="20201029 12:43:35.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.761" endtime="20201029 12:43:35.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.797" endtime="20201029 12:43:36.083"></status>
</kw>
<msg timestamp="20201029 12:43:36.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:35.795" endtime="20201029 12:43:36.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:36.087" endtime="20201029 12:43:36.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.096" endtime="20201029 12:43:36.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.793" endtime="20201029 12:43:36.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.791" endtime="20201029 12:43:36.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.102" level="INFO">${RESULT} = [{'diff': 5.988900000000047e-05}, {'diff': 5.927699999999994e-05}, {'diff': 5.895900000000079e-05}, {'diff': 5.8986000000000455e-05}, {'diff': 5.909700000000101e-05}, {'diff': 5.916700000000233e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:36.099" endtime="20201029 12:43:36.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:36.107" level="INFO">${ACCURACY} = {'diff': [5.988900000000047e-05, 5.927699999999994e-05, 5.895900000000079e-05, 5.8986000000000455e-05, 5.909700000000101e-05, 5.916700000000233e-05, 5.869500000000097e-05, 5.88619999999998e-05, 5.9180...</msg>
<status status="PASS" starttime="20201029 12:43:36.103" endtime="20201029 12:43:36.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.112" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:43:36.111" endtime="20201029 12:43:36.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.114" level="INFO">VALUE: [5.988900000000047e-05, 5.927699999999994e-05, 5.895900000000079e-05, 5.8986000000000455e-05, 5.909700000000101e-05, 5.916700000000233e-05, 5.869500000000097e-05, 5.88619999999998e-05, 5.9180000000002425e-05, 5.8680000000001925e-05, 5.915299999999929e-05, 5.905499999999883e-05, 5.904099999999926e-05, 5.8958000000001315e-05, 5.8985999999996985e-05, 5.9042000000002204e-05, 5.9165999999999386e-05, 5.9000000000000025e-05, 5.8944000000001745e-05, 5.8944000000001745e-05, 5.868099999999793e-05, 5.8722000000000635e-05, 5.862499999999965e-05, 5.9069999999997874e-05, 5.890299999999904e-05, 5.9027999999999164e-05, 5.9013999999999595e-05, 5.865299999999879e-05, 5.9236000000000705e-05, 5.9084000000000914e-05, 5.891699999999861e-05, 5.873699999999968e-05, 5.9208000000001565e-05, 5.9084000000000914e-05, 5.877699999999944e-05, 5.886100000000033e-05, 5.9179999999998956e-05, 5.8651999999999316e-05, 5.8930000000002175e-05, 5.9027999999999164e-05, 5.884700000000076e-05, 5.909699999999754e-05, 5.9013999999999595e-05, 5.8777999999998914e-05, 5.913899999999972e-05, 5.911100000000058e-05, 5.9193999999998526e-05, 5.883299999999772e-05, 5.9000000000000025e-05, 5.8777999999998914e-05]</msg>
<status status="PASS" starttime="20201029 12:43:36.113" endtime="20201029 12:43:36.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.108" endtime="20201029 12:43:36.116"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.119" endtime="20201029 12:43:36.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.118" endtime="20201029 12:43:36.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.117" endtime="20201029 12:43:36.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.760" endtime="20201029 12:43:36.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.759" endtime="20201029 12:43:36.140"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.149" endtime="20201029 12:43:36.165"></status>
</kw>
<msg timestamp="20201029 12:43:36.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.147" endtime="20201029 12:43:36.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.166" endtime="20201029 12:43:36.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.169" endtime="20201029 12:43:36.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.144" endtime="20201029 12:43:36.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.142" endtime="20201029 12:43:36.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.178" endtime="20201029 12:43:36.465"></status>
</kw>
<msg timestamp="20201029 12:43:36.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021766431, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:36.177" endtime="20201029 12:43:36.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021766431, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:36.469" endtime="20201029 12:43:36.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.478" endtime="20201029 12:43:36.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.174" endtime="20201029 12:43:36.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.172" endtime="20201029 12:43:36.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.484" level="INFO">${RESULT} = [{'diff': 6.093100000000018e-05}, {'diff': 6.033299999999922e-05}, {'diff': 5.9721999999998165e-05}, {'diff': 5.9665999999999886e-05}, {'diff': 6.018099999999943e-05}, {'diff': 6.0249999999997805e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:36.481" endtime="20201029 12:43:36.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:36.488" level="INFO">${ACCURACY} = {'diff': [6.093100000000018e-05, 6.033299999999922e-05, 5.9721999999998165e-05, 5.9665999999999886e-05, 6.018099999999943e-05, 6.0249999999997805e-05, 6.0041999999999734e-05, 5.988900000000047e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:43:36.485" endtime="20201029 12:43:36.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.493" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:43:36.492" endtime="20201029 12:43:36.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.495" level="INFO">VALUE: [6.093100000000018e-05, 6.033299999999922e-05, 5.9721999999998165e-05, 5.9665999999999886e-05, 6.018099999999943e-05, 6.0249999999997805e-05, 6.0041999999999734e-05, 5.988900000000047e-05, 5.9764000000000345e-05, 5.9721999999998165e-05, 6.012499999999768e-05, 5.9791999999999484e-05, 5.986100000000133e-05, 5.966699999999936e-05, 6.011099999999811e-05, 5.9749999999997305e-05, 5.988900000000047e-05, 5.994499999999875e-05, 5.986099999999786e-05, 6.0320000000002594e-05, 5.9707999999998596e-05, 5.968099999999893e-05, 6.0137999999997777e-05, 6.002699999999722e-05, 5.9693999999999026e-05, 5.983299999999872e-05, 5.9735999999997735e-05, 5.991699999999961e-05, 5.9916000000000136e-05, 5.980499999999958e-05, 5.9806000000002524e-05, 6.0194999999999e-05, 6.015300000000029e-05, 5.98750000000009e-05, 6.015300000000029e-05, 5.9972000000001885e-05, 6.0222000000002135e-05, 5.970900000000154e-05, 5.9805999999999054e-05, 5.9848000000001234e-05, 6.0236000000001705e-05, 6.020900000000204e-05, 5.986100000000133e-05, 5.973700000000068e-05, 5.9750000000000775e-05, 6.0069999999998874e-05, 5.9750000000000775e-05, 5.9722000000001635e-05, 6.011100000000158e-05, 5.9888000000000996e-05]</msg>
<status status="PASS" starttime="20201029 12:43:36.494" endtime="20201029 12:43:36.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.489" endtime="20201029 12:43:36.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.500" endtime="20201029 12:43:36.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.499" endtime="20201029 12:43:36.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.498" endtime="20201029 12:43:36.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.141" endtime="20201029 12:43:36.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.140" endtime="20201029 12:43:36.521"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.530" endtime="20201029 12:43:36.548"></status>
</kw>
<msg timestamp="20201029 12:43:36.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.528" endtime="20201029 12:43:36.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.549" endtime="20201029 12:43:36.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.552" endtime="20201029 12:43:36.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.526" endtime="20201029 12:43:36.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.523" endtime="20201029 12:43:36.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.561" endtime="20201029 12:43:36.847"></status>
</kw>
<msg timestamp="20201029 12:43:36.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022966097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.559" endtime="20201029 12:43:36.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022966097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.851" endtime="20201029 12:43:36.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.860" endtime="20201029 12:43:36.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.557" endtime="20201029 12:43:36.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.555" endtime="20201029 12:43:36.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.866" level="INFO">${RESULT} = [{'diff': 6.162500000000265e-05}, {'diff': 6.136100000000283e-05}, {'diff': 6.0792000000000485e-05}, {'diff': 6.090300000000104e-05}, {'diff': 6.1000000000002025e-05}, {'diff': 6.1195e-05}, {'diff': 6...</msg>
<status status="PASS" starttime="20201029 12:43:36.863" endtime="20201029 12:43:36.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:36.871" level="INFO">${ACCURACY} = {'diff': [6.162500000000265e-05, 6.136100000000283e-05, 6.0792000000000485e-05, 6.090300000000104e-05, 6.1000000000002025e-05, 6.1195e-05, 6.108399999999944e-05, 6.0833999999999194e-05, 6.086100000000...</msg>
<status status="PASS" starttime="20201029 12:43:36.867" endtime="20201029 12:43:36.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.875" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:43:36.874" endtime="20201029 12:43:36.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.878" level="INFO">VALUE: [6.162500000000265e-05, 6.136100000000283e-05, 6.0792000000000485e-05, 6.090300000000104e-05, 6.1000000000002025e-05, 6.1195e-05, 6.108399999999944e-05, 6.0833999999999194e-05, 6.086100000000233e-05, 6.0833999999999194e-05, 6.0819999999999624e-05, 6.0792000000000485e-05, 6.0901999999998097e-05, 6.12080000000001e-05, 6.116600000000139e-05, 6.0944000000000276e-05, 6.105500000000083e-05, 6.083299999999972e-05, 6.084699999999929e-05, 6.0665999999997416e-05, 6.122199999999967e-05, 6.108299999999997e-05, 6.0721999999999166e-05, 6.0999999999998555e-05, 6.127799999999795e-05, 6.0764000000001345e-05, 6.118100000000043e-05, 6.098700000000193e-05, 6.093100000000018e-05, 6.0764000000001345e-05, 6.0957999999999846e-05, 6.1013999999998125e-05, 6.0819999999999624e-05, 6.070900000000254e-05, 6.104200000000073e-05, 6.0833999999999194e-05, 6.061100000000208e-05, 6.126400000000184e-05, 6.0651999999997847e-05, 6.0680000000000456e-05, 6.122199999999967e-05, 6.116599999999792e-05, 6.1013999999998125e-05, 6.112500000000215e-05, 6.113900000000172e-05, 6.105499999999736e-05, 6.0694000000000026e-05, 6.105500000000083e-05, 6.083299999999972e-05, 6.084699999999929e-05]</msg>
<status status="PASS" starttime="20201029 12:43:36.876" endtime="20201029 12:43:36.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.872" endtime="20201029 12:43:36.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.884" endtime="20201029 12:43:36.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.882" endtime="20201029 12:43:36.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.881" endtime="20201029 12:43:36.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.522" endtime="20201029 12:43:36.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.521" endtime="20201029 12:43:36.904"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.913" endtime="20201029 12:43:36.932"></status>
</kw>
<msg timestamp="20201029 12:43:36.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.912" endtime="20201029 12:43:36.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.933" endtime="20201029 12:43:36.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.936" endtime="20201029 12:43:36.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.909" endtime="20201029 12:43:36.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.907" endtime="20201029 12:43:36.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.945" endtime="20201029 12:43:37.231"></status>
</kw>
<msg timestamp="20201029 12:43:37.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.943" endtime="20201029 12:43:37.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.235" endtime="20201029 12:43:37.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.244" endtime="20201029 12:43:37.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.941" endtime="20201029 12:43:37.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.939" endtime="20201029 12:43:37.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:37.250" level="INFO">${RESULT} = [{'diff': 6.286100000000086e-05}, {'diff': 6.177800000000191e-05}, {'diff': 6.20279999999987e-05}, {'diff': 6.209700000000054e-05}, {'diff': 6.197200000000042e-05}, {'diff': 6.232000000000112e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:37.247" endtime="20201029 12:43:37.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:37.255" level="INFO">${ACCURACY} = {'diff': [6.286100000000086e-05, 6.177800000000191e-05, 6.20279999999987e-05, 6.209700000000054e-05, 6.197200000000042e-05, 6.232000000000112e-05, 6.187499999999943e-05, 6.181999999999716e-05, 6.16670...</msg>
<status status="PASS" starttime="20201029 12:43:37.251" endtime="20201029 12:43:37.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.260" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:43:37.259" endtime="20201029 12:43:37.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.262" level="INFO">VALUE: [6.286100000000086e-05, 6.177800000000191e-05, 6.20279999999987e-05, 6.209700000000054e-05, 6.197200000000042e-05, 6.232000000000112e-05, 6.187499999999943e-05, 6.181999999999716e-05, 6.166700000000136e-05, 6.223600000000024e-05, 6.177800000000191e-05, 6.180599999999759e-05, 6.211100000000011e-05, 6.211100000000011e-05, 6.211100000000011e-05, 6.2195000000001e-05, 6.20699999999974e-05, 6.207000000000087e-05, 6.222200000000067e-05, 6.216699999999839e-05, 6.186099999999986e-05, 6.17080000000006e-05, 6.218000000000196e-05, 6.211100000000011e-05, 6.187499999999943e-05, 6.20829999999975e-05, 6.172200000000017e-05, 6.17080000000006e-05, 6.18750000000029e-05, 6.199999999999956e-05, 6.193099999999771e-05, 6.191700000000161e-05, 6.219499999999753e-05, 6.173599999999974e-05, 6.177799999999845e-05, 6.18340000000002e-05, 6.218099999999796e-05, 6.216700000000186e-05, 6.180600000000105e-05, 6.176399999999888e-05, 6.172299999999964e-05, 6.222300000000014e-05, 6.176400000000234e-05, 6.216599999999892e-05, 6.190200000000257e-05, 6.208300000000097e-05, 6.218100000000143e-05, 6.169400000000103e-05, 6.205499999999836e-05, 6.223600000000024e-05]</msg>
<status status="PASS" starttime="20201029 12:43:37.261" endtime="20201029 12:43:37.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.256" endtime="20201029 12:43:37.264"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:37.267" endtime="20201029 12:43:37.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.266" endtime="20201029 12:43:37.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.265" endtime="20201029 12:43:37.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.905" endtime="20201029 12:43:37.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.905" endtime="20201029 12:43:37.288"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.297" endtime="20201029 12:43:37.314"></status>
</kw>
<msg timestamp="20201029 12:43:37.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.295" endtime="20201029 12:43:37.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.316" endtime="20201029 12:43:37.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.318" endtime="20201029 12:43:37.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.293" endtime="20201029 12:43:37.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.291" endtime="20201029 12:43:37.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.328" endtime="20201029 12:43:37.615"></status>
</kw>
<msg timestamp="20201029 12:43:37.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.326" endtime="20201029 12:43:37.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.619" endtime="20201029 12:43:37.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.627" endtime="20201029 12:43:37.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.323" endtime="20201029 12:43:37.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.322" endtime="20201029 12:43:37.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:37.634" level="INFO">${RESULT} = [{'diff': 6.30690000000024e-05}, {'diff': 6.294499999999828e-05}, {'diff': 6.27089999999976e-05}, {'diff': 6.269499999999803e-05}, {'diff': 6.27219999999977e-05}, {'diff': 6.324999999999734e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:37.631" endtime="20201029 12:43:37.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:37.638" level="INFO">${ACCURACY} = {'diff': [6.30690000000024e-05, 6.294499999999828e-05, 6.27089999999976e-05, 6.269499999999803e-05, 6.27219999999977e-05, 6.324999999999734e-05, 6.309700000000154e-05, 6.32080000000021e-05, 6.32360000...</msg>
<status status="PASS" starttime="20201029 12:43:37.635" endtime="20201029 12:43:37.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.643" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:43:37.642" endtime="20201029 12:43:37.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.645" level="INFO">VALUE: [6.30690000000024e-05, 6.294499999999828e-05, 6.27089999999976e-05, 6.269499999999803e-05, 6.27219999999977e-05, 6.324999999999734e-05, 6.309700000000154e-05, 6.32080000000021e-05, 6.323600000000124e-05, 6.329199999999952e-05, 6.290299999999957e-05, 6.305599999999884e-05, 6.304200000000273e-05, 6.309800000000101e-05, 6.333299999999875e-05, 6.320799999999863e-05, 6.277799999999945e-05, 6.32080000000021e-05, 6.304099999999979e-05, 6.311100000000111e-05, 6.292999999999924e-05, 6.292999999999924e-05, 6.316599999999992e-05, 6.305499999999936e-05, 6.273600000000074e-05, 6.287499999999696e-05, 6.287500000000043e-05, 6.293099999999871e-05, 6.312500000000068e-05, 6.293099999999871e-05, 6.311099999999764e-05, 6.270799999999813e-05, 6.307000000000187e-05, 6.295900000000132e-05, 6.277799999999945e-05, 6.284700000000129e-05, 6.268099999999846e-05, 6.308399999999798e-05, 6.2889e-05, 6.279100000000301e-05, 6.26950000000015e-05, 6.266699999999889e-05, 6.315200000000035e-05, 6.284700000000129e-05, 6.273600000000074e-05, 6.316599999999992e-05, 6.32500000000008e-05, 6.313900000000025e-05, 6.261100000000061e-05, 6.291699999999914e-05]</msg>
<status status="PASS" starttime="20201029 12:43:37.644" endtime="20201029 12:43:37.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.639" endtime="20201029 12:43:37.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:37.650" endtime="20201029 12:43:37.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.649" endtime="20201029 12:43:37.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.648" endtime="20201029 12:43:37.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.289" endtime="20201029 12:43:37.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.289" endtime="20201029 12:43:37.671"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.680" endtime="20201029 12:43:37.698"></status>
</kw>
<msg timestamp="20201029 12:43:37.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.678" endtime="20201029 12:43:37.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.699" endtime="20201029 12:43:37.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.702" endtime="20201029 12:43:37.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.675" endtime="20201029 12:43:37.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.673" endtime="20201029 12:43:37.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.711" endtime="20201029 12:43:37.997"></status>
</kw>
<msg timestamp="20201029 12:43:38.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022871389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022935903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.709" endtime="20201029 12:43:38.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022871389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022935903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.001" endtime="20201029 12:43:38.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.010" endtime="20201029 12:43:38.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.707" endtime="20201029 12:43:38.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.705" endtime="20201029 12:43:38.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:38.016" level="INFO">${RESULT} = [{'diff': 6.451400000000163e-05}, {'diff': 6.405599999999984e-05}, {'diff': 6.402799999999723e-05}, {'diff': 6.381999999999916e-05}, {'diff': 6.368099999999946e-05}, {'diff': 6.405599999999984e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:38.013" endtime="20201029 12:43:38.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:38.020" level="INFO">${ACCURACY} = {'diff': [6.451400000000163e-05, 6.405599999999984e-05, 6.402799999999723e-05, 6.381999999999916e-05, 6.368099999999946e-05, 6.405599999999984e-05, 6.373600000000174e-05, 6.377700000000097e-05, 6.3847...</msg>
<status status="PASS" starttime="20201029 12:43:38.017" endtime="20201029 12:43:38.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.025" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:43:38.024" endtime="20201029 12:43:38.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.028" level="INFO">VALUE: [6.451400000000163e-05, 6.405599999999984e-05, 6.402799999999723e-05, 6.381999999999916e-05, 6.368099999999946e-05, 6.405599999999984e-05, 6.373600000000174e-05, 6.377700000000097e-05, 6.38479999999983e-05, 6.366600000000042e-05, 6.37219999999987e-05, 6.381899999999968e-05, 6.369399999999956e-05, 6.400000000000156e-05, 6.394400000000328e-05, 6.374999999999784e-05, 6.37080000000026e-05, 6.388899999999753e-05, 6.368099999999946e-05, 6.363900000000075e-05, 6.384700000000229e-05, 6.368100000000293e-05, 6.398599999999852e-05, 6.386100000000186e-05, 6.368099999999946e-05, 6.380500000000011e-05, 6.383399999999873e-05, 6.412499999999821e-05, 6.36950000000025e-05, 6.393000000000024e-05, 6.405599999999984e-05, 6.416599999999745e-05, 6.381899999999968e-05, 6.369399999999956e-05, 6.419400000000006e-05, 6.365200000000085e-05, 6.383300000000272e-05, 6.384699999999882e-05, 6.4276999999998e-05, 6.376400000000088e-05, 6.39439999999998e-05, 6.370799999999913e-05, 6.37500000000013e-05, 6.387500000000143e-05, 6.379200000000002e-05, 6.366699999999989e-05, 6.398599999999852e-05, 6.399999999999809e-05, 6.399999999999809e-05, 6.387500000000143e-05]</msg>
<status status="PASS" starttime="20201029 12:43:38.026" endtime="20201029 12:43:38.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.021" endtime="20201029 12:43:38.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:38.033" endtime="20201029 12:43:38.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.032" endtime="20201029 12:43:38.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.031" endtime="20201029 12:43:38.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.672" endtime="20201029 12:43:38.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.671" endtime="20201029 12:43:38.054"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.063" endtime="20201029 12:43:38.081"></status>
</kw>
<msg timestamp="20201029 12:43:38.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.061" endtime="20201029 12:43:38.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.082" endtime="20201029 12:43:38.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.085" endtime="20201029 12:43:38.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.059" endtime="20201029 12:43:38.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.056" endtime="20201029 12:43:38.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.094" endtime="20201029 12:43:38.380"></status>
</kw>
<msg timestamp="20201029 12:43:38.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.092" endtime="20201029 12:43:38.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.384" endtime="20201029 12:43:38.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.393" endtime="20201029 12:43:38.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.090" endtime="20201029 12:43:38.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.088" endtime="20201029 12:43:38.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:38.400" level="INFO">${RESULT} = [{'diff': 6.513899999999878e-05}, {'diff': 6.506900000000093e-05}, {'diff': 6.49029999999981e-05}, {'diff': 6.490300000000157e-05}, {'diff': 6.498599999999952e-05}, {'diff': 6.47500000000023e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:38.396" endtime="20201029 12:43:38.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:38.405" level="INFO">${ACCURACY} = {'diff': [6.513899999999878e-05, 6.506900000000093e-05, 6.49029999999981e-05, 6.490300000000157e-05, 6.498599999999952e-05, 6.47500000000023e-05, 6.47219999999997e-05, 6.474999999999884e-05, 6.4721999...</msg>
<status status="PASS" starttime="20201029 12:43:38.401" endtime="20201029 12:43:38.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.409" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:43:38.408" endtime="20201029 12:43:38.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.412" level="INFO">VALUE: [6.513899999999878e-05, 6.506900000000093e-05, 6.49029999999981e-05, 6.490300000000157e-05, 6.498599999999952e-05, 6.47500000000023e-05, 6.47219999999997e-05, 6.474999999999884e-05, 6.47219999999997e-05, 6.523599999999977e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.50700000000004e-05, 6.484699999999982e-05, 6.479199999999755e-05, 6.490300000000157e-05, 6.479199999999755e-05, 6.493000000000124e-05, 6.477799999999798e-05, 6.52220000000002e-05, 6.486100000000286e-05, 6.50830000000005e-05, 6.468000000000099e-05, 6.502799999999823e-05, 6.465300000000132e-05, 6.504099999999832e-05, 6.49159999999982e-05, 6.52220000000002e-05, 6.486100000000286e-05, 6.493100000000071e-05, 6.517999999999802e-05, 6.50280000000017e-05, 6.466700000000089e-05, 6.501400000000213e-05, 6.497199999999995e-05, 6.47089999999996e-05, 6.522299999999967e-05, 6.494500000000028e-05, 6.477800000000145e-05, 6.483399999999973e-05, 6.474999999999884e-05, 6.480600000000059e-05, 6.48479999999993e-05, 6.515300000000182e-05, 6.481899999999721e-05, 6.473599999999927e-05, 6.492999999999777e-05, 6.52220000000002e-05]</msg>
<status status="PASS" starttime="20201029 12:43:38.410" endtime="20201029 12:43:38.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.405" endtime="20201029 12:43:38.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:38.417" endtime="20201029 12:43:38.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.415" endtime="20201029 12:43:38.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.414" endtime="20201029 12:43:38.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.055" endtime="20201029 12:43:38.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.054" endtime="20201029 12:43:38.438"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.446" endtime="20201029 12:43:38.463"></status>
</kw>
<msg timestamp="20201029 12:43:38.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.445" endtime="20201029 12:43:38.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.465" endtime="20201029 12:43:38.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.467" endtime="20201029 12:43:38.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.442" endtime="20201029 12:43:38.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.440" endtime="20201029 12:43:38.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.476" endtime="20201029 12:43:38.763"></status>
</kw>
<msg timestamp="20201029 12:43:38.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.475" endtime="20201029 12:43:38.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.767" endtime="20201029 12:43:38.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.775" endtime="20201029 12:43:38.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.472" endtime="20201029 12:43:38.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.470" endtime="20201029 12:43:38.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:38.782" level="INFO">${RESULT} = [{'diff': 6.62220000000012e-05}, {'diff': 6.630499999999914e-05}, {'diff': 6.615299999999935e-05}, {'diff': 6.600000000000009e-05}, {'diff': 6.577799999999898e-05}, {'diff': 6.587499999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:38.779" endtime="20201029 12:43:38.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:38.786" level="INFO">${ACCURACY} = {'diff': [6.62220000000012e-05, 6.630499999999914e-05, 6.615299999999935e-05, 6.600000000000009e-05, 6.577799999999898e-05, 6.587499999999996e-05, 6.615299999999935e-05, 6.60700000000014e-05, 6.605599...</msg>
<status status="PASS" starttime="20201029 12:43:38.783" endtime="20201029 12:43:38.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.791" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:43:38.790" endtime="20201029 12:43:38.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.793" level="INFO">VALUE: [6.62220000000012e-05, 6.630499999999914e-05, 6.615299999999935e-05, 6.600000000000009e-05, 6.577799999999898e-05, 6.587499999999996e-05, 6.615299999999935e-05, 6.60700000000014e-05, 6.605599999999837e-05, 6.586100000000039e-05, 6.579099999999907e-05, 6.561100000000014e-05, 6.616699999999892e-05, 6.57639999999994e-05, 6.590300000000257e-05, 6.57220000000007e-05, 6.58480000000003e-05, 6.605500000000236e-05, 6.574999999999984e-05, 6.606899999999846e-05, 6.6277e-05, 6.580500000000211e-05, 6.57639999999994e-05, 6.60280000000027e-05, 6.568000000000199e-05, 6.586100000000039e-05, 6.605599999999837e-05, 6.5889000000003e-05, 6.580600000000159e-05, 6.605599999999837e-05, 6.611100000000064e-05, 6.620800000000163e-05, 6.611100000000064e-05, 6.616699999999892e-05, 6.584699999999735e-05, 6.604200000000227e-05, 6.581899999999821e-05, 6.62229999999972e-05, 6.566700000000189e-05, 6.62220000000012e-05, 6.579099999999907e-05, 6.586100000000039e-05, 6.600000000000009e-05, 6.601300000000018e-05, 6.593100000000171e-05, 6.598600000000052e-05, 6.565199999999938e-05, 6.619399999999859e-05, 6.586100000000039e-05, 6.593000000000224e-05]</msg>
<status status="PASS" starttime="20201029 12:43:38.792" endtime="20201029 12:43:38.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.787" endtime="20201029 12:43:38.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:38.798" endtime="20201029 12:43:38.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.797" endtime="20201029 12:43:38.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.796" endtime="20201029 12:43:38.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.438" endtime="20201029 12:43:38.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.438" endtime="20201029 12:43:38.819"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.828" endtime="20201029 12:43:38.849"></status>
</kw>
<msg timestamp="20201029 12:43:38.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.826" endtime="20201029 12:43:38.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.850" endtime="20201029 12:43:38.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.853" endtime="20201029 12:43:38.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.824" endtime="20201029 12:43:38.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.822" endtime="20201029 12:43:38.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.862" endtime="20201029 12:43:39.148"></status>
</kw>
<msg timestamp="20201029 12:43:39.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025125278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025192264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.860" endtime="20201029 12:43:39.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025125278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025192264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.152" endtime="20201029 12:43:39.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.160" endtime="20201029 12:43:39.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.858" endtime="20201029 12:43:39.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.856" endtime="20201029 12:43:39.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:39.167" level="INFO">${RESULT} = [{'diff': 6.698599999999805e-05}, {'diff': 6.701299999999771e-05}, {'diff': 6.697299999999795e-05}, {'diff': 6.684699999999835e-05}, {'diff': 6.670799999999866e-05}, {'diff': 6.698599999999805e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:39.164" endtime="20201029 12:43:39.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:39.171" level="INFO">${ACCURACY} = {'diff': [6.698599999999805e-05, 6.701299999999771e-05, 6.697299999999795e-05, 6.684699999999835e-05, 6.670799999999866e-05, 6.698599999999805e-05, 6.666599999999995e-05, 6.725000000000134e-05, 6.6999...</msg>
<status status="PASS" starttime="20201029 12:43:39.168" endtime="20201029 12:43:39.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.175" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:43:39.174" endtime="20201029 12:43:39.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.178" level="INFO">VALUE: [6.698599999999805e-05, 6.701299999999771e-05, 6.697299999999795e-05, 6.684699999999835e-05, 6.670799999999866e-05, 6.698599999999805e-05, 6.666599999999995e-05, 6.725000000000134e-05, 6.699999999999762e-05, 6.683299999999878e-05, 6.705499999999989e-05, 6.686099999999792e-05, 6.719399999999959e-05, 6.669399999999909e-05, 6.679199999999955e-05, 6.706899999999946e-05, 6.69030000000001e-05, 6.691699999999967e-05, 6.677799999999998e-05, 6.698600000000152e-05, 6.679199999999955e-05, 6.719399999999959e-05, 6.693099999999924e-05, 6.674999999999737e-05, 6.719399999999959e-05, 6.670899999999813e-05, 6.704100000000032e-05, 6.667999999999952e-05, 6.674999999999737e-05, 6.679100000000007e-05, 6.67770000000005e-05, 6.681899999999921e-05, 6.705599999999937e-05, 6.667999999999952e-05, 6.712499999999774e-05, 6.702799999999676e-05, 6.720799999999916e-05, 6.72359999999983e-05, 6.712499999999774e-05, 6.687499999999749e-05, 6.702799999999676e-05, 6.687500000000096e-05, 6.679199999999955e-05, 6.719399999999959e-05, 6.670899999999813e-05, 6.67229999999977e-05, 6.716699999999992e-05, 6.699999999999762e-05, 6.666699999999942e-05, 6.688799999999759e-05]</msg>
<status status="PASS" starttime="20201029 12:43:39.176" endtime="20201029 12:43:39.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.172" endtime="20201029 12:43:39.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:39.184" endtime="20201029 12:43:39.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.182" endtime="20201029 12:43:39.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.181" endtime="20201029 12:43:39.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.820" endtime="20201029 12:43:39.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.819" endtime="20201029 12:43:39.204"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.213" endtime="20201029 12:43:39.231"></status>
</kw>
<msg timestamp="20201029 12:43:39.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.212" endtime="20201029 12:43:39.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.232" endtime="20201029 12:43:39.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.235" endtime="20201029 12:43:39.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.209" endtime="20201029 12:43:39.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.207" endtime="20201029 12:43:39.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.244" endtime="20201029 12:43:39.530"></status>
</kw>
<msg timestamp="20201029 12:43:39.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.242" endtime="20201029 12:43:39.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.534" endtime="20201029 12:43:39.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.543" endtime="20201029 12:43:39.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.240" endtime="20201029 12:43:39.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.238" endtime="20201029 12:43:39.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:39.549" level="INFO">${RESULT} = [{'diff': 6.820899999999963e-05}, {'diff': 6.804099999999785e-05}, {'diff': 6.799999999999862e-05}, {'diff': 6.800000000000209e-05}, {'diff': 6.808300000000003e-05}, {'diff': 6.80420000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:39.546" endtime="20201029 12:43:39.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:39.554" level="INFO">${ACCURACY} = {'diff': [6.820899999999963e-05, 6.804099999999785e-05, 6.799999999999862e-05, 6.800000000000209e-05, 6.808300000000003e-05, 6.80420000000008e-05, 6.795799999999991e-05, 6.77640000000014e-05, 6.815299...</msg>
<status status="PASS" starttime="20201029 12:43:39.550" endtime="20201029 12:43:39.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.559" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:43:39.558" endtime="20201029 12:43:39.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.561" level="INFO">VALUE: [6.820899999999963e-05, 6.804099999999785e-05, 6.799999999999862e-05, 6.800000000000209e-05, 6.808300000000003e-05, 6.80420000000008e-05, 6.795799999999991e-05, 6.77640000000014e-05, 6.815299999999788e-05, 6.777799999999751e-05, 6.798599999999905e-05, 6.80559999999969e-05, 6.805600000000037e-05, 6.82359999999993e-05, 6.811100000000264e-05, 6.82229999999992e-05, 6.768099999999999e-05, 6.780600000000012e-05, 6.765299999999738e-05, 6.768099999999999e-05, 6.805500000000089e-05, 6.780499999999717e-05, 6.802699999999828e-05, 6.80969999999996e-05, 6.777800000000098e-05, 6.815299999999788e-05, 6.811099999999917e-05, 6.777800000000098e-05, 6.773600000000227e-05, 6.774999999999837e-05, 6.768000000000052e-05, 6.79030000000011e-05, 6.766700000000042e-05, 6.798599999999905e-05, 6.806999999999994e-05, 6.82090000000031e-05, 6.80420000000008e-05, 6.770899999999913e-05, 6.815300000000135e-05, 6.801399999999819e-05, 6.80839999999995e-05, 6.82229999999992e-05, 6.813899999999831e-05, 6.802699999999828e-05, 6.799999999999862e-05, 6.808300000000003e-05, 6.805499999999742e-05, 6.830500000000114e-05, 6.801400000000166e-05, 6.793000000000077e-05]</msg>
<status status="PASS" starttime="20201029 12:43:39.560" endtime="20201029 12:43:39.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.555" endtime="20201029 12:43:39.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:39.566" endtime="20201029 12:43:39.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.565" endtime="20201029 12:43:39.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.564" endtime="20201029 12:43:39.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.205" endtime="20201029 12:43:39.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.205" endtime="20201029 12:43:39.587"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.596" endtime="20201029 12:43:39.613"></status>
</kw>
<msg timestamp="20201029 12:43:39.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.594" endtime="20201029 12:43:39.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.615" endtime="20201029 12:43:39.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.618" endtime="20201029 12:43:39.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.592" endtime="20201029 12:43:39.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.590" endtime="20201029 12:43:39.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.626" endtime="20201029 12:43:39.914"></status>
</kw>
<msg timestamp="20201029 12:43:39.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021914944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02198475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:39.625" endtime="20201029 12:43:39.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021914944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02198475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:39.918" endtime="20201029 12:43:39.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.926" endtime="20201029 12:43:39.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.622" endtime="20201029 12:43:39.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.621" endtime="20201029 12:43:39.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:39.933" level="INFO">${RESULT} = [{'diff': 6.980600000000212e-05}, {'diff': 6.924999999999987e-05}, {'diff': 6.87359999999998e-05}, {'diff': 6.907000000000094e-05}, {'diff': 6.923599999999683e-05}, {'diff': 6.909800000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:39.930" endtime="20201029 12:43:39.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:39.937" level="INFO">${ACCURACY} = {'diff': [6.980600000000212e-05, 6.924999999999987e-05, 6.87359999999998e-05, 6.907000000000094e-05, 6.923599999999683e-05, 6.909800000000008e-05, 6.890299999999863e-05, 6.874999999999937e-05, 6.89729...</msg>
<status status="PASS" starttime="20201029 12:43:39.934" endtime="20201029 12:43:39.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.942" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:43:39.941" endtime="20201029 12:43:39.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.944" level="INFO">VALUE: [6.980600000000212e-05, 6.924999999999987e-05, 6.87359999999998e-05, 6.907000000000094e-05, 6.923599999999683e-05, 6.909800000000008e-05, 6.890299999999863e-05, 6.874999999999937e-05, 6.897299999999995e-05, 6.866600000000195e-05, 6.899999999999962e-05, 6.874999999999937e-05, 6.881900000000121e-05, 6.883300000000078e-05, 6.906900000000146e-05, 6.866599999999848e-05, 6.875000000000284e-05, 6.905600000000137e-05, 6.898600000000005e-05, 6.899999999999962e-05, 6.87359999999998e-05, 6.89030000000021e-05, 6.887499999999949e-05, 6.873699999999927e-05, 6.865300000000185e-05, 6.90970000000006e-05, 6.918100000000149e-05, 6.89169999999982e-05, 6.905600000000137e-05, 6.890299999999863e-05, 6.915199999999941e-05, 6.895800000000091e-05, 6.883300000000078e-05, 6.898600000000005e-05, 6.919399999999812e-05, 6.897200000000048e-05, 6.879199999999808e-05, 6.87909999999986e-05, 6.922200000000073e-05, 6.886099999999992e-05, 6.895800000000091e-05, 6.886099999999992e-05, 6.90420000000018e-05, 6.894400000000134e-05, 6.879200000000155e-05, 6.869500000000056e-05, 6.869500000000056e-05, 6.866700000000142e-05, 6.898600000000005e-05, 6.916700000000192e-05]</msg>
<status status="PASS" starttime="20201029 12:43:39.943" endtime="20201029 12:43:39.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.938" endtime="20201029 12:43:39.946"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:39.949" endtime="20201029 12:43:39.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.948" endtime="20201029 12:43:39.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.947" endtime="20201029 12:43:39.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.588" endtime="20201029 12:43:39.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.587" endtime="20201029 12:43:39.970"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.979" endtime="20201029 12:43:39.997"></status>
</kw>
<msg timestamp="20201029 12:43:39.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.977" endtime="20201029 12:43:39.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.999" endtime="20201029 12:43:40.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.001" endtime="20201029 12:43:40.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.974" endtime="20201029 12:43:40.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.972" endtime="20201029 12:43:40.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.010" endtime="20201029 12:43:40.295"></status>
</kw>
<msg timestamp="20201029 12:43:40.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023011514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023081681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.009" endtime="20201029 12:43:40.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023011514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023081681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.300" endtime="20201029 12:43:40.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.308" endtime="20201029 12:43:40.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.006" endtime="20201029 12:43:40.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.004" endtime="20201029 12:43:40.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:40.315" level="INFO">${RESULT} = [{'diff': 7.016699999999945e-05}, {'diff': 7.040200000000066e-05}, {'diff': 7.012499999999727e-05}, {'diff': 7.006899999999899e-05}, {'diff': 7.000000000000062e-05}, {'diff': 7.018099999999902e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:40.311" endtime="20201029 12:43:40.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:40.319" level="INFO">${ACCURACY} = {'diff': [7.016699999999945e-05, 7.040200000000066e-05, 7.012499999999727e-05, 7.006899999999899e-05, 7.000000000000062e-05, 7.018099999999902e-05, 6.981900000000221e-05, 7.008299999999856e-05, 7.0207...</msg>
<status status="PASS" starttime="20201029 12:43:40.316" endtime="20201029 12:43:40.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.323" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:43:40.322" endtime="20201029 12:43:40.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.326" level="INFO">VALUE: [7.016699999999945e-05, 7.040200000000066e-05, 7.012499999999727e-05, 7.006899999999899e-05, 7.000000000000062e-05, 7.018099999999902e-05, 6.981900000000221e-05, 7.008299999999856e-05, 7.020799999999869e-05, 6.999999999999715e-05, 6.990299999999963e-05, 6.970800000000166e-05, 6.977799999999951e-05, 7.013900000000031e-05, 6.987500000000049e-05, 7.000000000000062e-05, 6.976399999999994e-05, 7.030499999999967e-05, 6.977800000000298e-05, 7.020799999999869e-05, 6.981900000000221e-05, 6.963800000000034e-05, 7.012500000000074e-05, 7.005499999999942e-05, 6.990299999999963e-05, 7.008300000000203e-05, 6.998599999999758e-05, 6.984700000000135e-05, 6.990299999999963e-05, 6.970799999999819e-05, 7.008299999999856e-05, 6.998599999999758e-05, 6.994500000000181e-05, 6.980600000000212e-05, 6.969500000000156e-05, 6.99169999999992e-05, 7.004099999999985e-05, 6.979199999999908e-05, 6.990299999999963e-05, 6.97499999999969e-05, 6.976300000000046e-05, 6.966700000000242e-05, 6.972200000000123e-05, 7.030499999999967e-05, 7.016599999999998e-05, 6.97909999999996e-05, 7.012500000000074e-05, 7.005499999999942e-05, 7.009699999999813e-05, 7.026400000000044e-05]</msg>
<status status="PASS" starttime="20201029 12:43:40.324" endtime="20201029 12:43:40.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.320" endtime="20201029 12:43:40.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:40.332" endtime="20201029 12:43:40.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.330" endtime="20201029 12:43:40.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.329" endtime="20201029 12:43:40.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.971" endtime="20201029 12:43:40.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.970" endtime="20201029 12:43:40.353"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.361" endtime="20201029 12:43:40.379"></status>
</kw>
<msg timestamp="20201029 12:43:40.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.360" endtime="20201029 12:43:40.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.381" endtime="20201029 12:43:40.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.383" endtime="20201029 12:43:40.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.357" endtime="20201029 12:43:40.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.355" endtime="20201029 12:43:40.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.393" endtime="20201029 12:43:40.679"></status>
</kw>
<msg timestamp="20201029 12:43:40.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02196875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02203975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:40.391" endtime="20201029 12:43:40.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02196875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02203975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:40.684" endtime="20201029 12:43:40.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.692" endtime="20201029 12:43:40.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.388" endtime="20201029 12:43:40.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.387" endtime="20201029 12:43:40.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:40.699" level="INFO">${RESULT} = [{'diff': 7.100000000000162e-05}, {'diff': 7.127800000000101e-05}, {'diff': 7.129200000000058e-05}, {'diff': 7.095900000000238e-05}, {'diff': 7.10559999999999e-05}, {'diff': 7.115299999999741e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:40.695" endtime="20201029 12:43:40.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:40.704" level="INFO">${ACCURACY} = {'diff': [7.100000000000162e-05, 7.127800000000101e-05, 7.129200000000058e-05, 7.095900000000238e-05, 7.10559999999999e-05, 7.115299999999741e-05, 7.115300000000088e-05, 7.077700000000103e-05, 7.09020...</msg>
<status status="PASS" starttime="20201029 12:43:40.700" endtime="20201029 12:43:40.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.708" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:43:40.707" endtime="20201029 12:43:40.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.711" level="INFO">VALUE: [7.100000000000162e-05, 7.127800000000101e-05, 7.129200000000058e-05, 7.095900000000238e-05, 7.10559999999999e-05, 7.115299999999741e-05, 7.115300000000088e-05, 7.077700000000103e-05, 7.090200000000116e-05, 7.090199999999769e-05, 7.098600000000205e-05, 7.122199999999926e-05, 7.068000000000005e-05, 7.130600000000015e-05, 7.095799999999944e-05, 7.095800000000291e-05, 7.127799999999754e-05, 7.083299999999931e-05, 7.073700000000127e-05, 7.123599999999883e-05, 7.11109999999987e-05, 7.087500000000149e-05, 7.118100000000002e-05, 7.127800000000101e-05, 7.077700000000103e-05, 7.072299999999823e-05, 7.10979999999986e-05, 7.119400000000012e-05, 7.094499999999934e-05, 7.063900000000081e-05, 7.097199999999901e-05, 7.072199999999876e-05, 7.082000000000269e-05, 7.112500000000174e-05, 7.104100000000085e-05, 7.116600000000098e-05, 7.073599999999833e-05, 7.079200000000008e-05, 7.102800000000076e-05, 7.108299999999956e-05, 7.112500000000174e-05, 7.108299999999956e-05, 7.088900000000106e-05, 7.09170000000002e-05, 7.109699999999913e-05, 7.087499999999802e-05, 7.098600000000205e-05, 7.075000000000137e-05, 7.090300000000063e-05, 7.088900000000106e-05]</msg>
<status status="PASS" starttime="20201029 12:43:40.709" endtime="20201029 12:43:40.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.705" endtime="20201029 12:43:40.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:40.716" endtime="20201029 12:43:40.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.714" endtime="20201029 12:43:40.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.713" endtime="20201029 12:43:40.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.353" endtime="20201029 12:43:40.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.353" endtime="20201029 12:43:40.736"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.745" endtime="20201029 12:43:40.762"></status>
</kw>
<msg timestamp="20201029 12:43:40.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.744" endtime="20201029 12:43:40.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.763" endtime="20201029 12:43:40.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.766" endtime="20201029 12:43:40.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.741" endtime="20201029 12:43:40.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.739" endtime="20201029 12:43:40.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.775" endtime="20201029 12:43:41.063"></status>
</kw>
<msg timestamp="20201029 12:43:41.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021920847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.773" endtime="20201029 12:43:41.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021920847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.067" endtime="20201029 12:43:41.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.075" endtime="20201029 12:43:41.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.771" endtime="20201029 12:43:41.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.769" endtime="20201029 12:43:41.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:41.082" level="INFO">${RESULT} = [{'diff': 7.198599999999958e-05}, {'diff': 7.231900000000124e-05}, {'diff': 7.181900000000074e-05}, {'diff': 7.187499999999902e-05}, {'diff': 7.188899999999859e-05}, {'diff': 7.165300000000138e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:41.079" endtime="20201029 12:43:41.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:41.087" level="INFO">${ACCURACY} = {'diff': [7.198599999999958e-05, 7.231900000000124e-05, 7.181900000000074e-05, 7.187499999999902e-05, 7.188899999999859e-05, 7.165300000000138e-05, 7.212499999999927e-05, 7.180600000000065e-05, 7.1861...</msg>
<status status="PASS" starttime="20201029 12:43:41.083" endtime="20201029 12:43:41.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.091" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:43:41.090" endtime="20201029 12:43:41.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.093" level="INFO">VALUE: [7.198599999999958e-05, 7.231900000000124e-05, 7.181900000000074e-05, 7.187499999999902e-05, 7.188899999999859e-05, 7.165300000000138e-05, 7.212499999999927e-05, 7.180600000000065e-05, 7.186100000000292e-05, 7.180600000000065e-05, 7.20560000000009e-05, 7.179200000000108e-05, 7.207000000000047e-05, 7.19309999999973e-05, 7.201399999999872e-05, 7.17369999999988e-05, 7.180500000000117e-05, 7.21109999999997e-05, 7.230500000000167e-05, 7.201400000000219e-05, 7.197200000000001e-05, 7.222200000000026e-05, 7.172199999999976e-05, 7.208300000000056e-05, 7.220799999999722e-05, 7.173599999999933e-05, 7.204200000000133e-05, 7.181900000000074e-05, 7.195800000000044e-05, 7.204199999999786e-05, 7.220800000000069e-05, 7.180599999999718e-05, 7.190300000000163e-05, 7.179200000000108e-05, 7.176399999999847e-05, 7.219400000000112e-05, 7.18049999999977e-05, 7.183399999999979e-05, 7.172199999999976e-05, 7.175000000000237e-05, 7.216599999999851e-05, 7.2069000000001e-05, 7.223599999999983e-05, 7.17499999999989e-05, 7.204100000000185e-05, 7.201399999999872e-05, 7.169400000000062e-05, 7.227799999999854e-05, 7.204199999999786e-05, 7.212499999999927e-05]</msg>
<status status="PASS" starttime="20201029 12:43:41.092" endtime="20201029 12:43:41.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.087" endtime="20201029 12:43:41.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:41.099" endtime="20201029 12:43:41.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.097" endtime="20201029 12:43:41.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.096" endtime="20201029 12:43:41.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.737" endtime="20201029 12:43:41.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.737" endtime="20201029 12:43:41.119"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.128" endtime="20201029 12:43:41.146"></status>
</kw>
<msg timestamp="20201029 12:43:41.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.126" endtime="20201029 12:43:41.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.147" endtime="20201029 12:43:41.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.150" endtime="20201029 12:43:41.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.124" endtime="20201029 12:43:41.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.122" endtime="20201029 12:43:41.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.159" endtime="20201029 12:43:41.445"></status>
</kw>
<msg timestamp="20201029 12:43:41.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022709833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.157" endtime="20201029 12:43:41.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022709833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.449" endtime="20201029 12:43:41.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.457" endtime="20201029 12:43:41.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.155" endtime="20201029 12:43:41.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.153" endtime="20201029 12:43:41.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:41.464" level="INFO">${RESULT} = [{'diff': 7.313899999999984e-05}, {'diff': 7.288900000000306e-05}, {'diff': 7.322299999999726e-05}, {'diff': 7.280599999999818e-05}, {'diff': 7.280599999999818e-05}, {'diff': 7.304200000000233e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:41.461" endtime="20201029 12:43:41.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:41.469" level="INFO">${ACCURACY} = {'diff': [7.313899999999984e-05, 7.288900000000306e-05, 7.322299999999726e-05, 7.280599999999818e-05, 7.280599999999818e-05, 7.304200000000233e-05, 7.27499999999999e-05, 7.301399999999972e-05, 7.28750...</msg>
<status status="PASS" starttime="20201029 12:43:41.465" endtime="20201029 12:43:41.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.473" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:43:41.472" endtime="20201029 12:43:41.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.475" level="INFO">VALUE: [7.313899999999984e-05, 7.288900000000306e-05, 7.322299999999726e-05, 7.280599999999818e-05, 7.280599999999818e-05, 7.304200000000233e-05, 7.27499999999999e-05, 7.301399999999972e-05, 7.287500000000002e-05, 7.273600000000033e-05, 7.309700000000113e-05, 7.272299999999676e-05, 7.301399999999972e-05, 7.319500000000159e-05, 7.268099999999805e-05, 7.298700000000005e-05, 7.305599999999843e-05, 7.308300000000156e-05, 7.267999999999858e-05, 7.284700000000088e-05, 7.322200000000126e-05, 7.311099999999723e-05, 7.300000000000015e-05, 7.273600000000033e-05, 7.283300000000131e-05, 7.276399999999947e-05, 7.269399999999815e-05, 7.290299999999916e-05, 7.286100000000045e-05, 7.266699999999848e-05, 7.283299999999784e-05, 7.320900000000116e-05, 7.304199999999886e-05, 7.304100000000285e-05, 7.292999999999883e-05, 7.313800000000037e-05, 7.277800000000251e-05, 7.259800000000011e-05, 7.312500000000027e-05, 7.273600000000033e-05, 7.322199999999779e-05, 7.300000000000015e-05, 7.269400000000162e-05, 7.292999999999883e-05, 7.301399999999972e-05, 7.281900000000174e-05, 7.300000000000015e-05, 7.292999999999883e-05, 7.295800000000144e-05, 7.312500000000027e-05]</msg>
<status status="PASS" starttime="20201029 12:43:41.474" endtime="20201029 12:43:41.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.470" endtime="20201029 12:43:41.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:41.481" endtime="20201029 12:43:41.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.480" endtime="20201029 12:43:41.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.479" endtime="20201029 12:43:41.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.120" endtime="20201029 12:43:41.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.120" endtime="20201029 12:43:41.502"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.511" endtime="20201029 12:43:41.528"></status>
</kw>
<msg timestamp="20201029 12:43:41.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.509" endtime="20201029 12:43:41.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.530" endtime="20201029 12:43:41.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.532" endtime="20201029 12:43:41.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.506" endtime="20201029 12:43:41.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.504" endtime="20201029 12:43:41.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.542" endtime="20201029 12:43:41.827"></status>
</kw>
<msg timestamp="20201029 12:43:41.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.540" endtime="20201029 12:43:41.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.832" endtime="20201029 12:43:41.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.840" endtime="20201029 12:43:41.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.538" endtime="20201029 12:43:41.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.536" endtime="20201029 12:43:41.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:41.847" level="INFO">${RESULT} = [{'diff': 7.444499999999937e-05}, {'diff': 7.42370000000013e-05}, {'diff': 7.413900000000084e-05}, {'diff': 7.409700000000213e-05}, {'diff': 7.413900000000084e-05}, {'diff': 7.413899999999737e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:41.843" endtime="20201029 12:43:41.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:41.852" level="INFO">${ACCURACY} = {'diff': [7.444499999999937e-05, 7.42370000000013e-05, 7.413900000000084e-05, 7.409700000000213e-05, 7.413900000000084e-05, 7.413899999999737e-05, 7.381899999999927e-05, 7.419500000000259e-05, 7.40280...</msg>
<status status="PASS" starttime="20201029 12:43:41.848" endtime="20201029 12:43:41.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.856" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:43:41.855" endtime="20201029 12:43:41.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.859" level="INFO">VALUE: [7.444499999999937e-05, 7.42370000000013e-05, 7.413900000000084e-05, 7.409700000000213e-05, 7.413900000000084e-05, 7.413899999999737e-05, 7.381899999999927e-05, 7.419500000000259e-05, 7.402800000000029e-05, 7.41249999999978e-05, 7.379199999999961e-05, 7.374999999999743e-05, 7.372300000000123e-05, 7.39309999999993e-05, 7.415300000000041e-05, 7.373599999999786e-05, 7.3763999999997e-05, 7.391699999999973e-05, 7.390300000000016e-05, 7.369499999999862e-05, 7.405499999999995e-05, 7.404100000000038e-05, 7.426400000000097e-05, 7.37500000000009e-05, 7.370799999999872e-05, 7.401400000000072e-05, 7.412500000000127e-05, 7.369399999999915e-05, 7.406899999999952e-05, 7.420799999999922e-05, 7.38049999999997e-05, 7.380599999999918e-05, 7.365299999999991e-05, 7.409699999999866e-05, 7.423600000000183e-05, 7.405599999999943e-05, 7.387500000000102e-05, 7.401400000000072e-05, 7.391699999999973e-05, 7.394499999999887e-05, 7.380599999999918e-05, 7.383400000000179e-05, 7.367999999999958e-05, 7.397300000000148e-05, 7.400000000000115e-05, 7.392999999999983e-05, 7.391600000000026e-05, 7.42500000000014e-05, 7.416600000000051e-05, 7.388900000000059e-05]</msg>
<status status="PASS" starttime="20201029 12:43:41.857" endtime="20201029 12:43:41.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.853" endtime="20201029 12:43:41.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:41.864" endtime="20201029 12:43:41.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.862" endtime="20201029 12:43:41.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.861" endtime="20201029 12:43:41.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.503" endtime="20201029 12:43:41.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.502" endtime="20201029 12:43:41.885"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.893" endtime="20201029 12:43:41.911"></status>
</kw>
<msg timestamp="20201029 12:43:41.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.892" endtime="20201029 12:43:41.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.912" endtime="20201029 12:43:41.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.915" endtime="20201029 12:43:41.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.889" endtime="20201029 12:43:41.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.887" endtime="20201029 12:43:41.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.924" endtime="20201029 12:43:42.211"></status>
</kw>
<msg timestamp="20201029 12:43:42.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.922" endtime="20201029 12:43:42.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.219" endtime="20201029 12:43:42.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.235" endtime="20201029 12:43:42.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.920" endtime="20201029 12:43:42.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.918" endtime="20201029 12:43:42.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:42.242" level="INFO">${RESULT} = [{'diff': 7.52500000000024e-05}, {'diff': 7.444499999999937e-05}, {'diff': 7.491700000000073e-05}, {'diff': 7.481999999999975e-05}, {'diff': 7.505500000000095e-05}, {'diff': 7.483300000000331e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:42.239" endtime="20201029 12:43:42.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:42.246" level="INFO">${ACCURACY} = {'diff': [7.52500000000024e-05, 7.444499999999937e-05, 7.491700000000073e-05, 7.481999999999975e-05, 7.505500000000095e-05, 7.483300000000331e-05, 7.472199999999929e-05, 7.51249999999988e-05, 7.477700...</msg>
<status status="PASS" starttime="20201029 12:43:42.243" endtime="20201029 12:43:42.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.251" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:43:42.250" endtime="20201029 12:43:42.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.253" level="INFO">VALUE: [7.52500000000024e-05, 7.444499999999937e-05, 7.491700000000073e-05, 7.481999999999975e-05, 7.505500000000095e-05, 7.483300000000331e-05, 7.472199999999929e-05, 7.51249999999988e-05, 7.477700000000156e-05, 7.50830000000001e-05, 7.515299999999794e-05, 7.516700000000098e-05, 7.490300000000116e-05, 7.491700000000073e-05, 7.51249999999988e-05, 7.484700000000288e-05, 7.498599999999911e-05, 7.499999999999868e-05, 7.501400000000172e-05, 7.516699999999751e-05, 7.465300000000091e-05, 7.518100000000055e-05, 7.473599999999886e-05, 7.484699999999941e-05, 7.486200000000193e-05, 7.47500000000019e-05, 7.51379999999989e-05, 7.499999999999868e-05, 7.472200000000276e-05, 7.488899999999812e-05, 7.486100000000245e-05, 7.527800000000154e-05, 7.511099999999923e-05, 7.520800000000022e-05, 7.47500000000019e-05, 7.498600000000258e-05, 7.49310000000003e-05, 7.502800000000129e-05, 7.519500000000012e-05, 7.473599999999886e-05, 7.491700000000073e-05, 7.484800000000236e-05, 7.495899999999944e-05, 7.505600000000043e-05, 7.501300000000224e-05, 7.490300000000116e-05, 7.491599999999779e-05, 7.52500000000024e-05, 7.515200000000194e-05, 7.488899999999812e-05]</msg>
<status status="PASS" starttime="20201029 12:43:42.252" endtime="20201029 12:43:42.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.247" endtime="20201029 12:43:42.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.262" endtime="20201029 12:43:42.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.261" endtime="20201029 12:43:42.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.260" endtime="20201029 12:43:42.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.885" endtime="20201029 12:43:42.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.885" endtime="20201029 12:43:42.283"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.292" endtime="20201029 12:43:42.314"></status>
</kw>
<msg timestamp="20201029 12:43:42.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.291" endtime="20201029 12:43:42.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.315" endtime="20201029 12:43:42.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.318" endtime="20201029 12:43:42.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.288" endtime="20201029 12:43:42.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.286" endtime="20201029 12:43:42.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.327" endtime="20201029 12:43:42.613"></status>
</kw>
<msg timestamp="20201029 12:43:42.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025180472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025256639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.325" endtime="20201029 12:43:42.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025180472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025256639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.617" endtime="20201029 12:43:42.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.625" endtime="20201029 12:43:42.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.323" endtime="20201029 12:43:42.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.321" endtime="20201029 12:43:42.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:42.632" level="INFO">${RESULT} = [{'diff': 7.616700000000198e-05}, {'diff': 7.591699999999826e-05}, {'diff': 7.591700000000173e-05}, {'diff': 7.591599999999879e-05}, {'diff': 7.586199999999946e-05}, {'diff': 7.618000000000208e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:42.629" endtime="20201029 12:43:42.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:42.636" level="INFO">${ACCURACY} = {'diff': [7.616700000000198e-05, 7.591699999999826e-05, 7.591700000000173e-05, 7.591599999999879e-05, 7.586199999999946e-05, 7.618000000000208e-05, 7.602699999999935e-05, 7.576400000000247e-05, 7.5888...</msg>
<status status="PASS" starttime="20201029 12:43:42.633" endtime="20201029 12:43:42.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.641" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:43:42.640" endtime="20201029 12:43:42.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.643" level="INFO">VALUE: [7.616700000000198e-05, 7.591699999999826e-05, 7.591700000000173e-05, 7.591599999999879e-05, 7.586199999999946e-05, 7.618000000000208e-05, 7.602699999999935e-05, 7.576400000000247e-05, 7.588899999999912e-05, 7.602799999999882e-05, 7.577799999999857e-05, 7.618099999999808e-05, 7.569400000000115e-05, 7.617999999999861e-05, 7.606899999999805e-05, 7.606900000000152e-05, 7.5763999999999e-05, 7.615299999999894e-05, 7.595900000000044e-05, 7.602800000000229e-05, 7.613899999999937e-05, 7.584799999999989e-05, 7.59310000000013e-05, 7.570900000000019e-05, 7.599999999999968e-05, 7.582000000000075e-05, 7.583400000000032e-05, 7.606900000000152e-05, 7.579099999999866e-05, 7.569400000000115e-05, 7.630499999999873e-05, 7.569400000000115e-05, 7.595800000000097e-05, 7.567999999999811e-05, 7.616700000000198e-05, 7.622200000000079e-05, 7.619399999999818e-05, 7.568100000000105e-05, 7.622199999999732e-05, 7.579200000000161e-05, 7.60969999999972e-05, 7.570900000000019e-05, 7.56249999999993e-05, 7.605599999999796e-05, 7.591700000000173e-05, 7.620900000000069e-05, 7.609800000000014e-05, 7.61249999999998e-05, 7.609700000000066e-05, 7.576400000000247e-05]</msg>
<status status="PASS" starttime="20201029 12:43:42.642" endtime="20201029 12:43:42.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.637" endtime="20201029 12:43:42.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.649" endtime="20201029 12:43:42.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.647" endtime="20201029 12:43:42.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.646" endtime="20201029 12:43:42.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.284" endtime="20201029 12:43:42.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.284" endtime="20201029 12:43:42.670"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.678" endtime="20201029 12:43:42.696"></status>
</kw>
<msg timestamp="20201029 12:43:42.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.677" endtime="20201029 12:43:42.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.698" endtime="20201029 12:43:42.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.700" endtime="20201029 12:43:42.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.674" endtime="20201029 12:43:42.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.672" endtime="20201029 12:43:42.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.709" endtime="20201029 12:43:42.994"></status>
</kw>
<msg timestamp="20201029 12:43:42.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021839861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.708" endtime="20201029 12:43:42.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021839861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.999" endtime="20201029 12:43:43.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.007" endtime="20201029 12:43:43.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.705" endtime="20201029 12:43:43.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.704" endtime="20201029 12:43:43.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.014" level="INFO">${RESULT} = [{'diff': 7.787499999999808e-05}, {'diff': 7.682000000000175e-05}, {'diff': 7.718100000000255e-05}, {'diff': 7.7070000000002e-05}, {'diff': 7.709700000000166e-05}, {'diff': 7.693099999999883e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:43.011" endtime="20201029 12:43:43.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:43.019" level="INFO">${ACCURACY} = {'diff': [7.787499999999808e-05, 7.682000000000175e-05, 7.718100000000255e-05, 7.7070000000002e-05, 7.709700000000166e-05, 7.693099999999883e-05, 7.72229999999978e-05, 7.698599999999764e-05, 7.6861999...</msg>
<status status="PASS" starttime="20201029 12:43:43.015" endtime="20201029 12:43:43.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.023" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:43:43.022" endtime="20201029 12:43:43.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.026" level="INFO">VALUE: [7.787499999999808e-05, 7.682000000000175e-05, 7.718100000000255e-05, 7.7070000000002e-05, 7.709700000000166e-05, 7.693099999999883e-05, 7.72229999999978e-05, 7.698599999999764e-05, 7.686199999999699e-05, 7.720799999999875e-05, 7.720800000000222e-05, 7.713900000000037e-05, 7.71250000000008e-05, 7.715299999999994e-05, 7.70969999999982e-05, 7.680499999999923e-05, 7.692999999999936e-05, 7.69579999999985e-05, 7.7070000000002e-05, 7.716699999999951e-05, 7.6764e-05, 7.673600000000086e-05, 7.683299999999837e-05, 7.69029999999997e-05, 7.723599999999789e-05, 7.716700000000298e-05, 7.697300000000101e-05, 7.687500000000055e-05, 7.675000000000043e-05, 7.722300000000126e-05, 7.705499999999949e-05, 7.70969999999982e-05, 7.688900000000012e-05, 7.697199999999807e-05, 7.675000000000043e-05, 7.695800000000197e-05, 7.691699999999926e-05, 7.719399999999918e-05, 7.68189999999988e-05, 7.673600000000086e-05, 7.723599999999789e-05, 7.71250000000008e-05, 7.679200000000261e-05, 7.719500000000212e-05, 7.665299999999944e-05, 7.670900000000119e-05, 7.6764e-05, 7.716699999999951e-05, 7.726399999999703e-05, 7.677799999999957e-05]</msg>
<status status="PASS" starttime="20201029 12:43:43.025" endtime="20201029 12:43:43.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.020" endtime="20201029 12:43:43.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.031" endtime="20201029 12:43:43.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.029" endtime="20201029 12:43:43.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.028" endtime="20201029 12:43:43.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.671" endtime="20201029 12:43:43.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.670" endtime="20201029 12:43:43.052"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.060" endtime="20201029 12:43:43.078"></status>
</kw>
<msg timestamp="20201029 12:43:43.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.059" endtime="20201029 12:43:43.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.079" endtime="20201029 12:43:43.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.082" endtime="20201029 12:43:43.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.056" endtime="20201029 12:43:43.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.054" endtime="20201029 12:43:43.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.091" endtime="20201029 12:43:43.377"></status>
</kw>
<msg timestamp="20201029 12:43:43.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.089" endtime="20201029 12:43:43.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.381" endtime="20201029 12:43:43.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.389" endtime="20201029 12:43:43.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.087" endtime="20201029 12:43:43.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.085" endtime="20201029 12:43:43.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.396" level="INFO">${RESULT} = [{'diff': 7.805599999999996e-05}, {'diff': 7.790199999999775e-05}, {'diff': 7.787499999999808e-05}, {'diff': 7.791600000000079e-05}, {'diff': 7.791700000000026e-05}, {'diff': 7.806900000000006e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:43.393" endtime="20201029 12:43:43.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:43.400" level="INFO">${ACCURACY} = {'diff': [7.805599999999996e-05, 7.790199999999775e-05, 7.787499999999808e-05, 7.791600000000079e-05, 7.791700000000026e-05, 7.806900000000006e-05, 7.765300000000044e-05, 7.819400000000018e-05, 7.7985...</msg>
<status status="PASS" starttime="20201029 12:43:43.397" endtime="20201029 12:43:43.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.404" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:43:43.403" endtime="20201029 12:43:43.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.407" level="INFO">VALUE: [7.805599999999996e-05, 7.790199999999775e-05, 7.787499999999808e-05, 7.791600000000079e-05, 7.791700000000026e-05, 7.806900000000006e-05, 7.765300000000044e-05, 7.819400000000018e-05, 7.798599999999864e-05, 7.802800000000082e-05, 7.797199999999907e-05, 7.79449999999994e-05, 7.769500000000262e-05, 7.82640000000015e-05, 7.82229999999988e-05, 7.82779999999976e-05, 7.802800000000082e-05, 7.79449999999994e-05, 7.818100000000008e-05, 7.790299999999722e-05, 7.81250000000018e-05, 7.794399999999993e-05, 7.80969999999992e-05, 7.79579999999995e-05, 7.806900000000006e-05, 7.77909999999972e-05, 7.776399999999753e-05, 7.798599999999864e-05, 7.783299999999937e-05, 7.813900000000137e-05, 7.766700000000001e-05, 7.769499999999915e-05, 7.823700000000183e-05, 7.770899999999872e-05, 7.779200000000014e-05, 7.770899999999872e-05, 7.770900000000219e-05, 7.81250000000018e-05, 7.79449999999994e-05, 7.770799999999925e-05, 7.808299999999962e-05, 7.765200000000097e-05, 7.809700000000266e-05, 7.82640000000015e-05, 7.786099999999851e-05, 7.805500000000049e-05, 7.83190000000003e-05, 7.816700000000051e-05, 7.765300000000044e-05, 7.801400000000125e-05]</msg>
<status status="PASS" starttime="20201029 12:43:43.406" endtime="20201029 12:43:43.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.401" endtime="20201029 12:43:43.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.412" endtime="20201029 12:43:43.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.410" endtime="20201029 12:43:43.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.409" endtime="20201029 12:43:43.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.053" endtime="20201029 12:43:43.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.052" endtime="20201029 12:43:43.433"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.441" endtime="20201029 12:43:43.461"></status>
</kw>
<msg timestamp="20201029 12:43:43.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.440" endtime="20201029 12:43:43.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.462" endtime="20201029 12:43:43.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.465" endtime="20201029 12:43:43.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.437" endtime="20201029 12:43:43.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.435" endtime="20201029 12:43:43.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.475" endtime="20201029 12:43:43.760"></status>
</kw>
<msg timestamp="20201029 12:43:43.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022840625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022919944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.473" endtime="20201029 12:43:43.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022840625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022919944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.764" endtime="20201029 12:43:43.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.772" endtime="20201029 12:43:43.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.471" endtime="20201029 12:43:43.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.469" endtime="20201029 12:43:43.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.779" level="INFO">${RESULT} = [{'diff': 7.93190000000013e-05}, {'diff': 7.92909999999987e-05}, {'diff': 7.90970000000002e-05}, {'diff': 7.876399999999853e-05}, {'diff': 7.894400000000093e-05}, {'diff': 7.879199999999767e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:43.776" endtime="20201029 12:43:43.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:43.783" level="INFO">${ACCURACY} = {'diff': [7.93190000000013e-05, 7.92909999999987e-05, 7.90970000000002e-05, 7.876399999999853e-05, 7.894400000000093e-05, 7.879199999999767e-05, 7.906900000000106e-05, 7.918100000000108e-05, 7.9055999...</msg>
<status status="PASS" starttime="20201029 12:43:43.780" endtime="20201029 12:43:43.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.788" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:43:43.787" endtime="20201029 12:43:43.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.790" level="INFO">VALUE: [7.93190000000013e-05, 7.92909999999987e-05, 7.90970000000002e-05, 7.876399999999853e-05, 7.894400000000093e-05, 7.879199999999767e-05, 7.906900000000106e-05, 7.918100000000108e-05, 7.905599999999749e-05, 7.880600000000071e-05, 7.893000000000136e-05, 7.911099999999976e-05, 7.923599999999989e-05, 7.868100000000058e-05, 7.905599999999749e-05, 7.887499999999908e-05, 7.916699999999804e-05, 7.893100000000083e-05, 7.886099999999951e-05, 7.88190000000008e-05, 7.888900000000212e-05, 7.920800000000075e-05, 7.887500000000255e-05, 7.917999999999814e-05, 7.887499999999908e-05, 7.898599999999964e-05, 7.915300000000194e-05, 7.897200000000007e-05, 7.922200000000032e-05, 7.913900000000237e-05, 7.879200000000114e-05, 7.920900000000022e-05, 7.879200000000114e-05, 7.919500000000065e-05, 7.888900000000212e-05, 7.919400000000118e-05, 7.886099999999951e-05, 7.899999999999921e-05, 7.892999999999789e-05, 7.893000000000136e-05, 7.909699999999673e-05, 7.873599999999939e-05, 7.872199999999982e-05, 7.909699999999673e-05, 7.886100000000298e-05, 7.875000000000243e-05, 7.893000000000136e-05, 7.923599999999989e-05, 7.897200000000007e-05, 7.902799999999835e-05]</msg>
<status status="PASS" starttime="20201029 12:43:43.789" endtime="20201029 12:43:43.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.784" endtime="20201029 12:43:43.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.796" endtime="20201029 12:43:43.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.795" endtime="20201029 12:43:43.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.793" endtime="20201029 12:43:43.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.433" endtime="20201029 12:43:43.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.433" endtime="20201029 12:43:43.817"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.825" endtime="20201029 12:43:43.844"></status>
</kw>
<msg timestamp="20201029 12:43:43.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.824" endtime="20201029 12:43:43.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.845" endtime="20201029 12:43:43.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.848" endtime="20201029 12:43:43.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.821" endtime="20201029 12:43:43.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.819" endtime="20201029 12:43:43.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.857" endtime="20201029 12:43:44.143"></status>
</kw>
<msg timestamp="20201029 12:43:44.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.855" endtime="20201029 12:43:44.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.147" endtime="20201029 12:43:44.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.155" endtime="20201029 12:43:44.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.853" endtime="20201029 12:43:44.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.851" endtime="20201029 12:43:44.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.162" level="INFO">${RESULT} = [{'diff': 8.070800000000225e-05}, {'diff': 8.040299999999972e-05}, {'diff': 7.987500000000008e-05}, {'diff': 8.023600000000089e-05}, {'diff': 7.997200000000107e-05}, {'diff': 7.990199999999975e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:44.159" endtime="20201029 12:43:44.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:44.167" level="INFO">${ACCURACY} = {'diff': [8.070800000000225e-05, 8.040299999999972e-05, 7.987500000000008e-05, 8.023600000000089e-05, 7.997200000000107e-05, 7.990199999999975e-05, 7.994400000000193e-05, 7.992999999999889e-05, 7.9972...</msg>
<status status="PASS" starttime="20201029 12:43:44.163" endtime="20201029 12:43:44.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.171" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:43:44.170" endtime="20201029 12:43:44.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.174" level="INFO">VALUE: [8.070800000000225e-05, 8.040299999999972e-05, 7.987500000000008e-05, 8.023600000000089e-05, 7.997200000000107e-05, 7.990199999999975e-05, 7.994400000000193e-05, 7.992999999999889e-05, 7.997200000000107e-05, 7.998600000000064e-05, 7.994399999999846e-05, 8.004100000000292e-05, 7.994400000000193e-05, 7.973600000000039e-05, 7.969399999999821e-05, 7.99450000000014e-05, 7.976399999999953e-05, 8.005599999999849e-05, 8.005599999999849e-05, 7.969500000000115e-05, 7.970900000000072e-05, 8.01389999999999e-05, 8.001399999999978e-05, 7.99450000000014e-05, 7.984700000000094e-05, 7.970900000000072e-05, 7.970799999999778e-05, 8.011100000000076e-05, 7.990199999999975e-05, 7.994399999999846e-05, 7.995799999999803e-05, 8.015299999999947e-05, 7.974999999999996e-05, 8.01389999999999e-05, 7.980499999999877e-05, 8.026400000000003e-05, 8.002799999999935e-05, 8.012500000000033e-05, 7.974999999999996e-05, 7.987500000000008e-05, 8.002799999999935e-05, 7.986099999999705e-05, 8.023700000000036e-05, 8.004199999999892e-05, 8.019499999999818e-05, 7.988899999999965e-05, 8.011100000000076e-05, 8.006899999999859e-05, 7.984700000000094e-05, 7.973599999999692e-05]</msg>
<status status="PASS" starttime="20201029 12:43:44.172" endtime="20201029 12:43:44.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.168" endtime="20201029 12:43:44.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.179" endtime="20201029 12:43:44.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.177" endtime="20201029 12:43:44.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.176" endtime="20201029 12:43:44.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.818" endtime="20201029 12:43:44.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.817" endtime="20201029 12:43:44.200"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.208" endtime="20201029 12:43:44.227"></status>
</kw>
<msg timestamp="20201029 12:43:44.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.207" endtime="20201029 12:43:44.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.228" endtime="20201029 12:43:44.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.231" endtime="20201029 12:43:44.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.204" endtime="20201029 12:43:44.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.202" endtime="20201029 12:43:44.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.240" endtime="20201029 12:43:44.529"></status>
</kw>
<msg timestamp="20201029 12:43:44.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.239" endtime="20201029 12:43:44.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.533" endtime="20201029 12:43:44.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.542" endtime="20201029 12:43:44.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.236" endtime="20201029 12:43:44.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.234" endtime="20201029 12:43:44.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.548" level="INFO">${RESULT} = [{'diff': 8.141600000000082e-05}, {'diff': 8.123600000000189e-05}, {'diff': 8.095799999999903e-05}, {'diff': 8.086100000000151e-05}, {'diff': 8.070800000000225e-05}, {'diff': 8.101400000000078e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:44.545" endtime="20201029 12:43:44.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:44.553" level="INFO">${ACCURACY} = {'diff': [8.141600000000082e-05, 8.123600000000189e-05, 8.095799999999903e-05, 8.086100000000151e-05, 8.070800000000225e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.10970000000022e-05, 8.08059...</msg>
<status status="PASS" starttime="20201029 12:43:44.549" endtime="20201029 12:43:44.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.557" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:43:44.556" endtime="20201029 12:43:44.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.560" level="INFO">VALUE: [8.141600000000082e-05, 8.123600000000189e-05, 8.095799999999903e-05, 8.086100000000151e-05, 8.070800000000225e-05, 8.101400000000078e-05, 8.102800000000035e-05, 8.10970000000022e-05, 8.080599999999924e-05, 8.090300000000022e-05, 8.075000000000096e-05, 8.079199999999967e-05, 8.076400000000053e-05, 8.081899999999934e-05, 8.07910000000002e-05, 8.109699999999873e-05, 8.088900000000065e-05, 8.090199999999728e-05, 8.105500000000002e-05, 8.095799999999903e-05, 8.102800000000035e-05, 8.101399999999731e-05, 8.106899999999959e-05, 8.072199999999835e-05, 8.072199999999835e-05, 8.097300000000154e-05, 8.073599999999792e-05, 8.070899999999825e-05, 8.09589999999985e-05, 8.104199999999992e-05, 8.100000000000121e-05, 8.09169999999998e-05, 8.094499999999893e-05, 8.063800000000093e-05, 8.070799999999878e-05, 8.11390000000009e-05, 8.090200000000075e-05, 8.095799999999903e-05, 8.112500000000133e-05, 8.119399999999971e-05, 8.10970000000022e-05, 8.07780000000001e-05, 8.084699999999848e-05, 8.076400000000053e-05, 8.126400000000103e-05, 8.068100000000258e-05, 8.07780000000001e-05, 8.112500000000133e-05, 8.073700000000086e-05, 8.07230000000013e-05]</msg>
<status status="PASS" starttime="20201029 12:43:44.558" endtime="20201029 12:43:44.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.553" endtime="20201029 12:43:44.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.565" endtime="20201029 12:43:44.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.563" endtime="20201029 12:43:44.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.562" endtime="20201029 12:43:44.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.200" endtime="20201029 12:43:44.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.200" endtime="20201029 12:43:44.585"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.594" endtime="20201029 12:43:44.613"></status>
</kw>
<msg timestamp="20201029 12:43:44.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.593" endtime="20201029 12:43:44.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.615" endtime="20201029 12:43:44.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.618" endtime="20201029 12:43:44.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.590" endtime="20201029 12:43:44.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.588" endtime="20201029 12:43:44.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.626" endtime="20201029 12:43:44.912"></status>
</kw>
<msg timestamp="20201029 12:43:44.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023021319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023103528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.625" endtime="20201029 12:43:44.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023021319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023103528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.917" endtime="20201029 12:43:44.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.925" endtime="20201029 12:43:44.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.622" endtime="20201029 12:43:44.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.621" endtime="20201029 12:43:44.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.932" level="INFO">${RESULT} = [{'diff': 8.220900000000322e-05}, {'diff': 8.198599999999917e-05}, {'diff': 8.200000000000221e-05}, {'diff': 8.193000000000089e-05}, {'diff': 8.209699999999973e-05}, {'diff': 8.201400000000178e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:44.929" endtime="20201029 12:43:44.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:44.936" level="INFO">${ACCURACY} = {'diff': [8.220900000000322e-05, 8.198599999999917e-05, 8.200000000000221e-05, 8.193000000000089e-05, 8.209699999999973e-05, 8.201400000000178e-05, 8.16390000000014e-05, 8.195800000000003e-05, 8.19170...</msg>
<status status="PASS" starttime="20201029 12:43:44.933" endtime="20201029 12:43:44.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.940" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:43:44.939" endtime="20201029 12:43:44.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.943" level="INFO">VALUE: [8.220900000000322e-05, 8.198599999999917e-05, 8.200000000000221e-05, 8.193000000000089e-05, 8.209699999999973e-05, 8.201400000000178e-05, 8.16390000000014e-05, 8.195800000000003e-05, 8.19170000000008e-05, 8.187500000000208e-05, 8.16529999999975e-05, 8.180600000000024e-05, 8.207000000000006e-05, 8.194499999999993e-05, 8.183399999999938e-05, 8.186099999999905e-05, 8.173700000000186e-05, 8.207000000000006e-05, 8.173599999999892e-05, 8.195900000000297e-05, 8.219500000000018e-05, 8.181900000000034e-05, 8.198600000000264e-05, 8.2152999999998e-05, 8.193000000000089e-05, 8.172200000000282e-05, 8.175000000000196e-05, 8.176400000000153e-05, 8.216700000000104e-05, 8.198599999999917e-05, 8.219500000000018e-05, 8.206900000000059e-05, 8.209699999999973e-05, 8.193100000000036e-05, 8.21109999999993e-05, 8.202799999999788e-05, 8.216699999999758e-05, 8.222299999999932e-05, 8.212500000000234e-05, 8.2152999999998e-05, 8.186099999999905e-05, 8.18329999999999e-05, 8.204099999999798e-05, 8.202700000000188e-05, 8.184699999999948e-05, 8.180500000000077e-05, 8.218100000000061e-05, 8.209699999999973e-05, 8.213899999999844e-05, 8.19170000000008e-05]</msg>
<status status="PASS" starttime="20201029 12:43:44.942" endtime="20201029 12:43:44.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.937" endtime="20201029 12:43:44.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.949" endtime="20201029 12:43:44.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.947" endtime="20201029 12:43:44.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.946" endtime="20201029 12:43:44.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.586" endtime="20201029 12:43:44.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.586" endtime="20201029 12:43:44.970"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.978" endtime="20201029 12:43:44.996"></status>
</kw>
<msg timestamp="20201029 12:43:44.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.977" endtime="20201029 12:43:44.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.998" endtime="20201029 12:43:44.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.000" endtime="20201029 12:43:45.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.974" endtime="20201029 12:43:45.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.972" endtime="20201029 12:43:45.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.009" endtime="20201029 12:43:45.295"></status>
</kw>
<msg timestamp="20201029 12:43:45.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022196236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.008" endtime="20201029 12:43:45.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022196236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.299" endtime="20201029 12:43:45.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.307" endtime="20201029 12:43:45.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.005" endtime="20201029 12:43:45.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.003" endtime="20201029 12:43:45.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:45.314" level="INFO">${RESULT} = [{'diff': 8.394400000000246e-05}, {'diff': 8.301399999999931e-05}, {'diff': 8.304200000000192e-05}, {'diff': 8.322200000000085e-05}, {'diff': 8.319499999999772e-05}, {'diff': 8.316700000000204e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:45.310" endtime="20201029 12:43:45.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:45.319" level="INFO">${ACCURACY} = {'diff': [8.394400000000246e-05, 8.301399999999931e-05, 8.304200000000192e-05, 8.322200000000085e-05, 8.319499999999772e-05, 8.316700000000204e-05, 8.302799999999888e-05, 8.280500000000177e-05, 8.2888...</msg>
<status status="PASS" starttime="20201029 12:43:45.315" endtime="20201029 12:43:45.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.323" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:43:45.322" endtime="20201029 12:43:45.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.326" level="INFO">VALUE: [8.394400000000246e-05, 8.301399999999931e-05, 8.304200000000192e-05, 8.322200000000085e-05, 8.319499999999772e-05, 8.316700000000204e-05, 8.302799999999888e-05, 8.280500000000177e-05, 8.288899999999919e-05, 8.284700000000048e-05, 8.291600000000232e-05, 8.31110000000003e-05, 8.301399999999931e-05, 8.273599999999992e-05, 8.291599999999885e-05, 8.274999999999949e-05, 8.284700000000048e-05, 8.309699999999726e-05, 8.305600000000149e-05, 8.31110000000003e-05, 8.280600000000124e-05, 8.308400000000063e-05, 8.287499999999962e-05, 8.282000000000081e-05, 8.294499999999747e-05, 8.288900000000265e-05, 8.286100000000005e-05, 8.295899999999704e-05, 8.272200000000035e-05, 8.287499999999962e-05, 8.293000000000189e-05, 8.319400000000171e-05, 8.317999999999867e-05, 8.287499999999962e-05, 8.277799999999863e-05, 8.294400000000146e-05, 8.304199999999845e-05, 8.284700000000048e-05, 8.318100000000161e-05, 8.29309999999979e-05, 8.299999999999974e-05, 8.268100000000111e-05, 8.298700000000311e-05, 8.326399999999956e-05, 8.302799999999888e-05, 8.312499999999987e-05, 8.266700000000154e-05, 8.270800000000078e-05, 8.320800000000128e-05, 8.291599999999885e-05]</msg>
<status status="PASS" starttime="20201029 12:43:45.324" endtime="20201029 12:43:45.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.320" endtime="20201029 12:43:45.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:45.331" endtime="20201029 12:43:45.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.329" endtime="20201029 12:43:45.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.328" endtime="20201029 12:43:45.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.971" endtime="20201029 12:43:45.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.970" endtime="20201029 12:43:45.351"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.360" endtime="20201029 12:43:45.378"></status>
</kw>
<msg timestamp="20201029 12:43:45.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.359" endtime="20201029 12:43:45.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.380" endtime="20201029 12:43:45.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.382" endtime="20201029 12:43:45.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.356" endtime="20201029 12:43:45.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.354" endtime="20201029 12:43:45.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.391" endtime="20201029 12:43:45.678"></status>
</kw>
<msg timestamp="20201029 12:43:45.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021871847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.390" endtime="20201029 12:43:45.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021871847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.682" endtime="20201029 12:43:45.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.691" endtime="20201029 12:43:45.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.387" endtime="20201029 12:43:45.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.385" endtime="20201029 12:43:45.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:45.697" level="INFO">${RESULT} = [{'diff': 8.491700000000033e-05}, {'diff': 8.387500000000062e-05}, {'diff': 8.39309999999989e-05}, {'diff': 8.41660000000001e-05}, {'diff': 8.38049999999993e-05}, {'diff': 8.412500000000087e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:45.694" endtime="20201029 12:43:45.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:45.702" level="INFO">${ACCURACY} = {'diff': [8.491700000000033e-05, 8.387500000000062e-05, 8.39309999999989e-05, 8.41660000000001e-05, 8.38049999999993e-05, 8.412500000000087e-05, 8.386100000000105e-05, 8.409700000000173e-05, 8.3819000...</msg>
<status status="PASS" starttime="20201029 12:43:45.698" endtime="20201029 12:43:45.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.706" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:43:45.705" endtime="20201029 12:43:45.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.709" level="INFO">VALUE: [8.491700000000033e-05, 8.387500000000062e-05, 8.39309999999989e-05, 8.41660000000001e-05, 8.38049999999993e-05, 8.412500000000087e-05, 8.386100000000105e-05, 8.409700000000173e-05, 8.381900000000234e-05, 8.420799999999881e-05, 8.4153e-05, 8.422199999999838e-05, 8.401399999999684e-05, 8.404199999999945e-05, 8.395800000000203e-05, 8.369500000000168e-05, 8.420799999999881e-05, 8.397300000000107e-05, 8.420899999999829e-05, 8.390299999999976e-05, 8.398700000000064e-05, 8.383299999999844e-05, 8.3846999999998e-05, 8.394400000000246e-05, 8.418099999999915e-05, 8.391699999999933e-05, 8.390299999999976e-05, 8.375000000000049e-05, 8.390299999999976e-05, 8.397199999999813e-05, 8.4153e-05, 8.419499999999872e-05, 8.388900000000019e-05, 8.419500000000218e-05, 8.402799999999988e-05, 8.375000000000049e-05, 8.370900000000125e-05, 8.394499999999847e-05, 8.395899999999804e-05, 8.420899999999829e-05, 8.427800000000013e-05, 8.377700000000016e-05, 8.383299999999844e-05, 8.38330000000019e-05, 8.415200000000053e-05, 8.386200000000052e-05, 8.392999999999942e-05, 8.395799999999856e-05, 8.390299999999976e-05, 8.391699999999933e-05]</msg>
<status status="PASS" starttime="20201029 12:43:45.707" endtime="20201029 12:43:45.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.703" endtime="20201029 12:43:45.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:45.714" endtime="20201029 12:43:45.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.712" endtime="20201029 12:43:45.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.711" endtime="20201029 12:43:45.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.352" endtime="20201029 12:43:45.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.352" endtime="20201029 12:43:45.735"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.743" endtime="20201029 12:43:45.765"></status>
</kw>
<msg timestamp="20201029 12:43:45.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.742" endtime="20201029 12:43:45.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.766" endtime="20201029 12:43:45.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.769" endtime="20201029 12:43:45.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.739" endtime="20201029 12:43:45.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.737" endtime="20201029 12:43:45.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.778" endtime="20201029 12:43:46.063"></status>
</kw>
<msg timestamp="20201029 12:43:46.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025273042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025358917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.776" endtime="20201029 12:43:46.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025273042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025358917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.068" endtime="20201029 12:43:46.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.076" endtime="20201029 12:43:46.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.774" endtime="20201029 12:43:46.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.772" endtime="20201029 12:43:46.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.083" level="INFO">${RESULT} = [{'diff': 8.587500000000262e-05}, {'diff': 8.487499999999815e-05}, {'diff': 8.481899999999987e-05}, {'diff': 8.498600000000217e-05}, {'diff': 8.523600000000242e-05}, {'diff': 8.473600000000192e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:46.079" endtime="20201029 12:43:46.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:46.087" level="INFO">${ACCURACY} = {'diff': [8.587500000000262e-05, 8.487499999999815e-05, 8.481899999999987e-05, 8.498600000000217e-05, 8.523600000000242e-05, 8.473600000000192e-05, 8.481899999999987e-05, 8.4846999999999e-05, 8.469399...</msg>
<status status="PASS" starttime="20201029 12:43:46.084" endtime="20201029 12:43:46.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.091" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:43:46.090" endtime="20201029 12:43:46.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.094" level="INFO">VALUE: [8.587500000000262e-05, 8.487499999999815e-05, 8.481899999999987e-05, 8.498600000000217e-05, 8.523600000000242e-05, 8.473600000000192e-05, 8.481899999999987e-05, 8.4846999999999e-05, 8.469399999999974e-05, 8.47920000000002e-05, 8.488799999999824e-05, 8.480600000000324e-05, 8.49859999999987e-05, 8.520899999999929e-05, 8.494499999999947e-05, 8.483399999999891e-05, 8.472300000000182e-05, 8.522199999999938e-05, 8.502699999999794e-05, 8.484700000000248e-05, 8.497199999999913e-05, 8.506900000000012e-05, 8.48050000000003e-05, 8.505500000000055e-05, 8.509699999999926e-05, 8.516700000000058e-05, 8.468000000000017e-05, 8.484700000000248e-05, 8.47920000000002e-05, 8.481999999999934e-05, 8.49859999999987e-05, 8.469499999999922e-05, 8.46530000000005e-05, 8.488900000000119e-05, 8.525000000000199e-05, 8.529199999999723e-05, 8.47920000000002e-05, 8.502700000000141e-05, 8.480599999999977e-05, 8.501299999999837e-05, 8.469399999999974e-05, 8.508299999999969e-05, 8.477800000000063e-05, 8.477800000000063e-05, 8.501400000000131e-05, 8.513899999999797e-05, 8.518100000000015e-05, 8.491700000000033e-05, 8.475000000000149e-05, 8.51110000000023e-05]</msg>
<status status="PASS" starttime="20201029 12:43:46.092" endtime="20201029 12:43:46.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.088" endtime="20201029 12:43:46.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:46.100" endtime="20201029 12:43:46.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.098" endtime="20201029 12:43:46.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.097" endtime="20201029 12:43:46.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.735" endtime="20201029 12:43:46.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.735" endtime="20201029 12:43:46.120"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.129" endtime="20201029 12:43:46.147"></status>
</kw>
<msg timestamp="20201029 12:43:46.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.127" endtime="20201029 12:43:46.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.149" endtime="20201029 12:43:46.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.151" endtime="20201029 12:43:46.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.125" endtime="20201029 12:43:46.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.123" endtime="20201029 12:43:46.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.160" endtime="20201029 12:43:46.446"></status>
</kw>
<msg timestamp="20201029 12:43:46.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021996278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.159" endtime="20201029 12:43:46.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021996278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.451" endtime="20201029 12:43:46.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.459" endtime="20201029 12:43:46.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.156" endtime="20201029 12:43:46.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.154" endtime="20201029 12:43:46.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.466" level="INFO">${RESULT} = [{'diff': 8.695900000000104e-05}, {'diff': 8.602699999999894e-05}, {'diff': 8.618000000000167e-05}, {'diff': 8.599999999999927e-05}, {'diff': 8.61660000000021e-05}, {'diff': 8.608300000000069e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:46.463" endtime="20201029 12:43:46.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:46.471" level="INFO">${ACCURACY} = {'diff': [8.695900000000104e-05, 8.602699999999894e-05, 8.618000000000167e-05, 8.599999999999927e-05, 8.61660000000021e-05, 8.608300000000069e-05, 8.620800000000081e-05, 8.592999999999795e-05, 8.60410...</msg>
<status status="PASS" starttime="20201029 12:43:46.467" endtime="20201029 12:43:46.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.475" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:43:46.474" endtime="20201029 12:43:46.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.478" level="INFO">VALUE: [8.695900000000104e-05, 8.602699999999894e-05, 8.618000000000167e-05, 8.599999999999927e-05, 8.61660000000021e-05, 8.608300000000069e-05, 8.620800000000081e-05, 8.592999999999795e-05, 8.604100000000198e-05, 8.594400000000099e-05, 8.59859999999997e-05, 8.619399999999777e-05, 8.609700000000026e-05, 8.5847e-05, 8.602799999999841e-05, 8.569500000000022e-05, 8.600000000000274e-05, 8.586099999999958e-05, 8.618099999999768e-05, 8.569500000000022e-05, 8.569399999999727e-05, 8.59729999999996e-05, 8.616599999999863e-05, 8.587499999999915e-05, 8.563899999999847e-05, 8.574999999999902e-05, 8.588900000000219e-05, 8.599999999999927e-05, 8.604200000000145e-05, 8.604200000000145e-05, 8.577800000000163e-05, 8.605599999999755e-05, 8.59859999999997e-05, 8.620800000000081e-05, 8.607000000000059e-05, 8.61669999999981e-05, 8.61249999999994e-05, 8.606999999999712e-05, 8.601299999999937e-05, 8.615299999999854e-05, 8.587499999999915e-05, 8.592999999999795e-05, 8.613899999999897e-05, 8.58189999999974e-05, 8.620800000000081e-05, 8.593000000000142e-05, 8.577799999999816e-05, 8.597200000000013e-05, 8.57920000000012e-05, 8.59859999999997e-05]</msg>
<status status="PASS" starttime="20201029 12:43:46.476" endtime="20201029 12:43:46.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.472" endtime="20201029 12:43:46.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:46.483" endtime="20201029 12:43:46.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.481" endtime="20201029 12:43:46.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.480" endtime="20201029 12:43:46.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.121" endtime="20201029 12:43:46.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.121" endtime="20201029 12:43:46.504"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.513" endtime="20201029 12:43:46.532"></status>
</kw>
<msg timestamp="20201029 12:43:46.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.512" endtime="20201029 12:43:46.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.533" endtime="20201029 12:43:46.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.536" endtime="20201029 12:43:46.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.509" endtime="20201029 12:43:46.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.506" endtime="20201029 12:43:46.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.545" endtime="20201029 12:43:46.832"></status>
</kw>
<msg timestamp="20201029 12:43:46.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023096167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.543" endtime="20201029 12:43:46.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023096167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.836" endtime="20201029 12:43:46.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.845" endtime="20201029 12:43:46.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.541" endtime="20201029 12:43:46.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.539" endtime="20201029 12:43:46.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.851" level="INFO">${RESULT} = [{'diff': 8.763900000000047e-05}, {'diff': 8.705599999999855e-05}, {'diff': 8.700000000000027e-05}, {'diff': 8.716599999999963e-05}, {'diff': 8.702799999999941e-05}, {'diff': 8.66249999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:46.848" endtime="20201029 12:43:46.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:46.856" level="INFO">${ACCURACY} = {'diff': [8.763900000000047e-05, 8.705599999999855e-05, 8.700000000000027e-05, 8.716599999999963e-05, 8.702799999999941e-05, 8.66249999999999e-05, 8.726400000000009e-05, 8.720799999999834e-05, 8.69720...</msg>
<status status="PASS" starttime="20201029 12:43:46.852" endtime="20201029 12:43:46.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.860" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:43:46.859" endtime="20201029 12:43:46.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.863" level="INFO">VALUE: [8.763900000000047e-05, 8.705599999999855e-05, 8.700000000000027e-05, 8.716599999999963e-05, 8.702799999999941e-05, 8.66249999999999e-05, 8.726400000000009e-05, 8.720799999999834e-05, 8.697200000000113e-05, 8.683299999999797e-05, 8.722200000000138e-05, 8.673600000000045e-05, 8.669500000000122e-05, 8.722200000000138e-05, 8.669500000000122e-05, 8.697199999999766e-05, 8.6847000000001e-05, 8.709700000000126e-05, 8.691599999999938e-05, 8.679099999999926e-05, 8.722200000000138e-05, 8.700000000000027e-05, 8.672200000000088e-05, 8.705599999999855e-05, 8.695800000000156e-05, 8.719500000000172e-05, 8.68059999999983e-05, 8.675000000000002e-05, 8.683400000000091e-05, 8.683400000000091e-05, 8.680499999999883e-05, 8.691699999999886e-05, 8.682000000000134e-05, 8.700000000000027e-05, 8.705499999999908e-05, 8.675000000000002e-05, 8.73189999999989e-05, 8.691600000000285e-05, 8.680499999999883e-05, 8.669399999999827e-05, 8.670799999999784e-05, 8.723600000000095e-05, 8.695800000000156e-05, 8.708299999999822e-05, 8.673600000000045e-05, 8.702799999999941e-05, 8.682000000000134e-05, 8.677799999999916e-05, 8.676399999999959e-05, 8.680600000000177e-05]</msg>
<status status="PASS" starttime="20201029 12:43:46.861" endtime="20201029 12:43:46.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.856" endtime="20201029 12:43:46.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:46.868" endtime="20201029 12:43:46.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.866" endtime="20201029 12:43:46.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.865" endtime="20201029 12:43:46.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.505" endtime="20201029 12:43:46.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.504" endtime="20201029 12:43:46.888"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.897" endtime="20201029 12:43:46.916"></status>
</kw>
<msg timestamp="20201029 12:43:46.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.896" endtime="20201029 12:43:46.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.918" endtime="20201029 12:43:46.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.920" endtime="20201029 12:43:46.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.893" endtime="20201029 12:43:46.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.891" endtime="20201029 12:43:46.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.929" endtime="20201029 12:43:47.215"></status>
</kw>
<msg timestamp="20201029 12:43:47.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022984153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.928" endtime="20201029 12:43:47.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022984153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.219" endtime="20201029 12:43:47.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.228" endtime="20201029 12:43:47.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.925" endtime="20201029 12:43:47.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.924" endtime="20201029 12:43:47.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:47.234" level="INFO">${RESULT} = [{'diff': 8.830500000000033e-05}, {'diff': 8.818099999999968e-05}, {'diff': 8.784699999999854e-05}, {'diff': 8.81250000000014e-05}, {'diff': 8.791699999999986e-05}, {'diff': 8.809700000000226e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:47.231" endtime="20201029 12:43:47.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:47.239" level="INFO">${ACCURACY} = {'diff': [8.830500000000033e-05, 8.818099999999968e-05, 8.784699999999854e-05, 8.81250000000014e-05, 8.791699999999986e-05, 8.809700000000226e-05, 8.784700000000201e-05, 8.808400000000216e-05, 8.76950...</msg>
<status status="PASS" starttime="20201029 12:43:47.235" endtime="20201029 12:43:47.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.243" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:43:47.242" endtime="20201029 12:43:47.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.246" level="INFO">VALUE: [8.830500000000033e-05, 8.818099999999968e-05, 8.784699999999854e-05, 8.81250000000014e-05, 8.791699999999986e-05, 8.809700000000226e-05, 8.784700000000201e-05, 8.808400000000216e-05, 8.769500000000222e-05, 8.779199999999973e-05, 8.805500000000008e-05, 8.797199999999866e-05, 8.820800000000281e-05, 8.769400000000274e-05, 8.808299999999922e-05, 8.76799999999997e-05, 8.823599999999848e-05, 8.783299999999897e-05, 8.823599999999848e-05, 8.81670000000001e-05, 8.793099999999943e-05, 8.795799999999909e-05, 8.781999999999887e-05, 8.815300000000054e-05, 8.793099999999943e-05, 8.800000000000127e-05, 8.790300000000029e-05, 8.770900000000179e-05, 8.808400000000216e-05, 8.780499999999983e-05, 8.783300000000244e-05, 8.769400000000274e-05, 8.815300000000054e-05, 8.770799999999884e-05, 8.780499999999983e-05, 8.804100000000051e-05, 8.809700000000226e-05, 8.804199999999998e-05, 8.783299999999897e-05, 8.79999999999978e-05, 8.781999999999887e-05, 8.76669999999996e-05, 8.804199999999998e-05, 8.769499999999875e-05, 8.820899999999882e-05, 8.781999999999887e-05, 8.795799999999909e-05, 8.792999999999995e-05, 8.773599999999798e-05, 8.797200000000213e-05]</msg>
<status status="PASS" starttime="20201029 12:43:47.244" endtime="20201029 12:43:47.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.239" endtime="20201029 12:43:47.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:47.251" endtime="20201029 12:43:47.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.250" endtime="20201029 12:43:47.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.249" endtime="20201029 12:43:47.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.889" endtime="20201029 12:43:47.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.889" endtime="20201029 12:43:47.272"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.281" endtime="20201029 12:43:47.299"></status>
</kw>
<msg timestamp="20201029 12:43:47.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.279" endtime="20201029 12:43:47.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.300" endtime="20201029 12:43:47.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.303" endtime="20201029 12:43:47.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.277" endtime="20201029 12:43:47.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.275" endtime="20201029 12:43:47.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.312" endtime="20201029 12:43:47.598"></status>
</kw>
<msg timestamp="20201029 12:43:47.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.311" endtime="20201029 12:43:47.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.602" endtime="20201029 12:43:47.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.611" endtime="20201029 12:43:47.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.308" endtime="20201029 12:43:47.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.306" endtime="20201029 12:43:47.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:47.617" level="INFO">${RESULT} = [{'diff': 8.906900000000065e-05}, {'diff': 8.908399999999969e-05}, {'diff': 8.897199999999966e-05}, {'diff': 8.88060000000003e-05}, {'diff': 8.911099999999936e-05}, {'diff': 8.902800000000141e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:47.614" endtime="20201029 12:43:47.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:47.622" level="INFO">${ACCURACY} = {'diff': [8.906900000000065e-05, 8.908399999999969e-05, 8.897199999999966e-05, 8.88060000000003e-05, 8.911099999999936e-05, 8.902800000000141e-05, 8.888899999999825e-05, 8.91670000000011e-05, 8.887499...</msg>
<status status="PASS" starttime="20201029 12:43:47.618" endtime="20201029 12:43:47.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.627" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:43:47.626" endtime="20201029 12:43:47.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.629" level="INFO">VALUE: [8.906900000000065e-05, 8.908399999999969e-05, 8.897199999999966e-05, 8.88060000000003e-05, 8.911099999999936e-05, 8.902800000000141e-05, 8.888899999999825e-05, 8.91670000000011e-05, 8.887499999999868e-05, 8.898599999999923e-05, 8.873600000000245e-05, 8.895800000000009e-05, 8.884699999999954e-05, 8.922199999999991e-05, 8.905600000000055e-05, 8.88060000000003e-05, 8.918100000000068e-05, 8.869500000000322e-05, 8.927799999999819e-05, 8.901400000000184e-05, 8.869499999999975e-05, 8.920899999999982e-05, 8.901400000000184e-05, 8.895899999999957e-05, 8.876399999999812e-05, 8.869499999999975e-05, 8.866699999999714e-05, 8.905499999999761e-05, 8.86250000000019e-05, 8.924999999999905e-05, 8.91800000000012e-05, 8.877800000000116e-05, 8.89860000000027e-05, 8.88060000000003e-05, 8.879200000000073e-05, 8.893100000000043e-05, 8.876399999999812e-05, 8.907000000000012e-05, 8.8945e-05, 8.926399999999862e-05, 8.875000000000202e-05, 8.911100000000283e-05, 8.874999999999855e-05, 8.915200000000206e-05, 8.888899999999825e-05, 8.898599999999923e-05, 8.886099999999911e-05, 8.883299999999997e-05, 8.874999999999855e-05, 8.869400000000027e-05]</msg>
<status status="PASS" starttime="20201029 12:43:47.628" endtime="20201029 12:43:47.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.623" endtime="20201029 12:43:47.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:47.634" endtime="20201029 12:43:47.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.633" endtime="20201029 12:43:47.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.632" endtime="20201029 12:43:47.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.273" endtime="20201029 12:43:47.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.273" endtime="20201029 12:43:47.655"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.664" endtime="20201029 12:43:47.683"></status>
</kw>
<msg timestamp="20201029 12:43:47.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.662" endtime="20201029 12:43:47.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.685" endtime="20201029 12:43:47.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.688" endtime="20201029 12:43:47.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.660" endtime="20201029 12:43:47.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.658" endtime="20201029 12:43:47.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.696" endtime="20201029 12:43:47.985"></status>
</kw>
<msg timestamp="20201029 12:43:47.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022342972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.695" endtime="20201029 12:43:47.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022342972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.989" endtime="20201029 12:43:47.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.997" endtime="20201029 12:43:47.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.692" endtime="20201029 12:43:47.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.691" endtime="20201029 12:43:48.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.004" level="INFO">${RESULT} = [{'diff': 9.04450000000015e-05}, {'diff': 9.025000000000005e-05}, {'diff': 9.000000000000327e-05}, {'diff': 9.004099999999904e-05}, {'diff': 9.01389999999995e-05}, {'diff': 9.020800000000134e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:48.001" endtime="20201029 12:43:48.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:48.008" level="INFO">${ACCURACY} = {'diff': [9.04450000000015e-05, 9.025000000000005e-05, 9.000000000000327e-05, 9.004099999999904e-05, 9.01389999999995e-05, 9.020800000000134e-05, 9.018099999999821e-05, 8.969400000000127e-05, 9.011100...</msg>
<status status="PASS" starttime="20201029 12:43:48.005" endtime="20201029 12:43:48.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.013" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:43:48.012" endtime="20201029 12:43:48.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.015" level="INFO">VALUE: [9.04450000000015e-05, 9.025000000000005e-05, 9.000000000000327e-05, 9.004099999999904e-05, 9.01389999999995e-05, 9.020800000000134e-05, 9.018099999999821e-05, 8.969400000000127e-05, 9.011100000000036e-05, 9.011100000000036e-05, 8.998600000000023e-05, 9.009700000000079e-05, 9.018100000000168e-05, 8.968100000000118e-05, 8.993099999999796e-05, 9.026399999999962e-05, 9.026399999999962e-05, 9.022199999999744e-05, 8.993099999999796e-05, 9.023600000000048e-05, 8.994399999999805e-05, 9.006900000000165e-05, 8.962499999999943e-05, 8.970800000000084e-05, 9.012499999999993e-05, 9.008299999999775e-05, 9.01389999999995e-05, 8.972200000000041e-05, 8.963900000000247e-05, 8.974999999999955e-05, 8.997300000000014e-05, 9.020900000000082e-05, 8.977799999999869e-05, 9.006899999999818e-05, 9.007000000000112e-05, 9.022200000000091e-05, 9.017999999999873e-05, 8.974999999999955e-05, 9.002799999999894e-05, 9.005500000000208e-05, 8.96800000000017e-05, 8.992999999999848e-05, 8.9638999999999e-05, 8.987499999999968e-05, 9.002800000000241e-05, 8.968100000000118e-05, 9.009699999999732e-05, 8.997200000000066e-05, 9.019499999999778e-05, 8.96670000000016e-05]</msg>
<status status="PASS" starttime="20201029 12:43:48.014" endtime="20201029 12:43:48.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.009" endtime="20201029 12:43:48.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.020" endtime="20201029 12:43:48.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.019" endtime="20201029 12:43:48.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.018" endtime="20201029 12:43:48.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.656" endtime="20201029 12:43:48.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.655" endtime="20201029 12:43:48.041"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.050" endtime="20201029 12:43:48.069"></status>
</kw>
<msg timestamp="20201029 12:43:48.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.048" endtime="20201029 12:43:48.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.071" endtime="20201029 12:43:48.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.073" endtime="20201029 12:43:48.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.045" endtime="20201029 12:43:48.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.043" endtime="20201029 12:43:48.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.082" endtime="20201029 12:43:48.367"></status>
</kw>
<msg timestamp="20201029 12:43:48.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.081" endtime="20201029 12:43:48.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.371" endtime="20201029 12:43:48.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.380" endtime="20201029 12:43:48.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.078" endtime="20201029 12:43:48.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.076" endtime="20201029 12:43:48.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.386" level="INFO">${RESULT} = [{'diff': 9.098600000000123e-05}, {'diff': 9.108400000000169e-05}, {'diff': 9.079199999999926e-05}, {'diff': 9.084699999999807e-05}, {'diff': 9.082000000000187e-05}, {'diff': 9.088900000000025e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:48.383" endtime="20201029 12:43:48.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:48.391" level="INFO">${ACCURACY} = {'diff': [9.098600000000123e-05, 9.108400000000169e-05, 9.079199999999926e-05, 9.084699999999807e-05, 9.082000000000187e-05, 9.088900000000025e-05, 9.119500000000225e-05, 9.111100000000136e-05, 9.0875...</msg>
<status status="PASS" starttime="20201029 12:43:48.387" endtime="20201029 12:43:48.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.395" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:43:48.394" endtime="20201029 12:43:48.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.398" level="INFO">VALUE: [9.098600000000123e-05, 9.108400000000169e-05, 9.079199999999926e-05, 9.084699999999807e-05, 9.082000000000187e-05, 9.088900000000025e-05, 9.119500000000225e-05, 9.111100000000136e-05, 9.087500000000068e-05, 9.069500000000175e-05, 9.10000000000008e-05, 9.092999999999948e-05, 9.11390000000005e-05, 9.097199999999819e-05, 9.076399999999665e-05, 9.06520000000001e-05, 9.11390000000005e-05, 9.090199999999687e-05, 9.069400000000227e-05, 9.086100000000111e-05, 9.072200000000141e-05, 9.065299999999957e-05, 9.095799999999862e-05, 9.116699999999964e-05, 9.118099999999921e-05, 9.125000000000105e-05, 9.102799999999994e-05, 9.120900000000182e-05, 9.075000000000055e-05, 9.097199999999819e-05, 9.130599999999933e-05, 9.066599999999966e-05, 9.090200000000034e-05, 9.127700000000072e-05, 9.08060000000023e-05, 9.124999999999758e-05, 9.123600000000148e-05, 9.11390000000005e-05, 9.076400000000012e-05, 9.108300000000222e-05, 9.083300000000197e-05, 9.079199999999926e-05, 9.106999999999865e-05, 9.087500000000068e-05, 9.108399999999822e-05, 9.076400000000012e-05, 9.123599999999801e-05, 9.094499999999853e-05, 9.086099999999764e-05, 9.069400000000227e-05]</msg>
<status status="PASS" starttime="20201029 12:43:48.396" endtime="20201029 12:43:48.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.391" endtime="20201029 12:43:48.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.403" endtime="20201029 12:43:48.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.402" endtime="20201029 12:43:48.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.401" endtime="20201029 12:43:48.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.042" endtime="20201029 12:43:48.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.041" endtime="20201029 12:43:48.424"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.433" endtime="20201029 12:43:48.452"></status>
</kw>
<msg timestamp="20201029 12:43:48.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.431" endtime="20201029 12:43:48.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.453" endtime="20201029 12:43:48.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.456" endtime="20201029 12:43:48.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.429" endtime="20201029 12:43:48.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.427" endtime="20201029 12:43:48.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.465" endtime="20201029 12:43:48.750"></status>
</kw>
<msg timestamp="20201029 12:43:48.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021696014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021788903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.464" endtime="20201029 12:43:48.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021696014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021788903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.755" endtime="20201029 12:43:48.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.763" endtime="20201029 12:43:48.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.461" endtime="20201029 12:43:48.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.459" endtime="20201029 12:43:48.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.770" level="INFO">${RESULT} = [{'diff': 9.288899999999878e-05}, {'diff': 9.186099999999864e-05}, {'diff': 9.180500000000036e-05}, {'diff': 9.204100000000104e-05}, {'diff': 9.197200000000266e-05}, {'diff': 9.229099999999782e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:48.766" endtime="20201029 12:43:48.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:48.775" level="INFO">${ACCURACY} = {'diff': [9.288899999999878e-05, 9.186099999999864e-05, 9.180500000000036e-05, 9.204100000000104e-05, 9.197200000000266e-05, 9.229099999999782e-05, 9.179100000000079e-05, 9.175000000000155e-05, 9.1818...</msg>
<status status="PASS" starttime="20201029 12:43:48.771" endtime="20201029 12:43:48.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.779" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:43:48.778" endtime="20201029 12:43:48.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.782" level="INFO">VALUE: [9.288899999999878e-05, 9.186099999999864e-05, 9.180500000000036e-05, 9.204100000000104e-05, 9.197200000000266e-05, 9.229099999999782e-05, 9.179100000000079e-05, 9.175000000000155e-05, 9.181899999999993e-05, 9.205600000000008e-05, 9.187499999999821e-05, 9.204200000000051e-05, 9.170799999999937e-05, 9.175000000000155e-05, 9.170800000000284e-05, 9.207000000000312e-05, 9.21529999999976e-05, 9.223599999999901e-05, 9.172300000000189e-05, 9.19589999999991e-05, 9.182000000000287e-05, 9.204099999999757e-05, 9.21529999999976e-05, 9.186099999999864e-05, 9.18329999999995e-05, 9.175000000000155e-05, 9.19719999999992e-05, 9.184699999999907e-05, 9.165300000000057e-05, 9.211100000000236e-05, 9.191700000000039e-05, 9.219500000000325e-05, 9.18329999999995e-05, 9.170899999999885e-05, 9.219499999999978e-05, 9.198600000000223e-05, 9.211200000000183e-05, 9.18199999999994e-05, 9.188800000000177e-05, 9.218000000000073e-05, 9.1639000000001e-05, 9.187499999999821e-05, 9.191600000000091e-05, 9.21940000000003e-05, 9.173599999999851e-05, 9.225000000000205e-05, 9.190300000000082e-05, 9.220799999999987e-05, 9.184699999999907e-05, 9.205600000000008e-05]</msg>
<status status="PASS" starttime="20201029 12:43:48.780" endtime="20201029 12:43:48.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.776" endtime="20201029 12:43:48.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.787" endtime="20201029 12:43:48.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.785" endtime="20201029 12:43:48.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.784" endtime="20201029 12:43:48.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.425" endtime="20201029 12:43:48.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.424" endtime="20201029 12:43:48.807"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.816" endtime="20201029 12:43:48.835"></status>
</kw>
<msg timestamp="20201029 12:43:48.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.815" endtime="20201029 12:43:48.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.836" endtime="20201029 12:43:48.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.839" endtime="20201029 12:43:48.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.812" endtime="20201029 12:43:48.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.810" endtime="20201029 12:43:48.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.848" endtime="20201029 12:43:49.135"></status>
</kw>
<msg timestamp="20201029 12:43:49.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.846" endtime="20201029 12:43:49.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.139" endtime="20201029 12:43:49.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.148" endtime="20201029 12:43:49.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.844" endtime="20201029 12:43:49.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.842" endtime="20201029 12:43:49.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.154" level="INFO">${RESULT} = [{'diff': 9.365199999999962e-05}, {'diff': 9.287499999999921e-05}, {'diff': 9.28330000000005e-05}, {'diff': 9.280500000000136e-05}, {'diff': 9.286099999999964e-05}, {'diff': 9.29590000000001e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:49.151" endtime="20201029 12:43:49.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:49.158" level="INFO">${ACCURACY} = {'diff': [9.365199999999962e-05, 9.287499999999921e-05, 9.28330000000005e-05, 9.280500000000136e-05, 9.286099999999964e-05, 9.29590000000001e-05, 9.290200000000234e-05, 9.279200000000126e-05, 9.318099...</msg>
<status status="PASS" starttime="20201029 12:43:49.155" endtime="20201029 12:43:49.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.163" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:43:49.162" endtime="20201029 12:43:49.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.166" level="INFO">VALUE: [9.365199999999962e-05, 9.287499999999921e-05, 9.28330000000005e-05, 9.280500000000136e-05, 9.286099999999964e-05, 9.29590000000001e-05, 9.290200000000234e-05, 9.279200000000126e-05, 9.318099999999774e-05, 9.288899999999878e-05, 9.277800000000169e-05, 9.309700000000032e-05, 9.26529999999981e-05, 9.277699999999875e-05, 9.295799999999715e-05, 9.313899999999903e-05, 9.313899999999903e-05, 9.318099999999774e-05, 9.309699999999685e-05, 9.319399999999783e-05, 9.286099999999964e-05, 9.320800000000087e-05, 9.311099999999989e-05, 9.294500000000053e-05, 9.326399999999915e-05, 9.298599999999976e-05, 9.309799999999979e-05, 9.298699999999924e-05, 9.316700000000164e-05, 9.313899999999903e-05, 9.279100000000179e-05, 9.272199999999994e-05, 9.268000000000123e-05, 9.31659999999987e-05, 9.287499999999921e-05, 9.291699999999792e-05, 9.305500000000161e-05, 9.31529999999986e-05, 9.29720000000002e-05, 9.309700000000032e-05, 9.30139999999989e-05, 9.266700000000114e-05, 9.323600000000001e-05, 9.312499999999946e-05, 9.26529999999981e-05, 9.31390000000025e-05, 9.313899999999903e-05, 9.261200000000233e-05, 9.301299999999943e-05, 9.31659999999987e-05]</msg>
<status status="PASS" starttime="20201029 12:43:49.164" endtime="20201029 12:43:49.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.159" endtime="20201029 12:43:49.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:49.171" endtime="20201029 12:43:49.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.169" endtime="20201029 12:43:49.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.168" endtime="20201029 12:43:49.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.808" endtime="20201029 12:43:49.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.808" endtime="20201029 12:43:49.191"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.200" endtime="20201029 12:43:49.222"></status>
</kw>
<msg timestamp="20201029 12:43:49.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.198" endtime="20201029 12:43:49.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.223" endtime="20201029 12:43:49.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.226" endtime="20201029 12:43:49.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.196" endtime="20201029 12:43:49.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.194" endtime="20201029 12:43:49.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.235" endtime="20201029 12:43:49.520"></status>
</kw>
<msg timestamp="20201029 12:43:49.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024934167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025028861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.233" endtime="20201029 12:43:49.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024934167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025028861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.524" endtime="20201029 12:43:49.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.533" endtime="20201029 12:43:49.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.231" endtime="20201029 12:43:49.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.229" endtime="20201029 12:43:49.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.539" level="INFO">${RESULT} = [{'diff': 9.469399999999933e-05}, {'diff': 9.400000000000033e-05}, {'diff': 9.36659999999992e-05}, {'diff': 9.417999999999926e-05}, {'diff': 9.425000000000058e-05}, {'diff': 9.373600000000051e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:49.536" endtime="20201029 12:43:49.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:49.544" level="INFO">${ACCURACY} = {'diff': [9.469399999999933e-05, 9.400000000000033e-05, 9.36659999999992e-05, 9.417999999999926e-05, 9.425000000000058e-05, 9.373600000000051e-05, 9.391699999999892e-05, 9.390299999999935e-05, 9.38609...</msg>
<status status="PASS" starttime="20201029 12:43:49.540" endtime="20201029 12:43:49.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.548" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:43:49.547" endtime="20201029 12:43:49.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.551" level="INFO">VALUE: [9.469399999999933e-05, 9.400000000000033e-05, 9.36659999999992e-05, 9.417999999999926e-05, 9.425000000000058e-05, 9.373600000000051e-05, 9.391699999999892e-05, 9.390299999999935e-05, 9.386099999999717e-05, 9.408300000000175e-05, 9.413900000000003e-05, 9.379199999999879e-05, 9.404199999999904e-05, 9.412500000000046e-05, 9.39720000000012e-05, 9.40139999999999e-05, 9.406999999999818e-05, 9.380500000000236e-05, 9.423600000000101e-05, 9.40139999999999e-05, 9.380499999999889e-05, 9.393100000000196e-05, 9.404200000000251e-05, 9.369399999999833e-05, 9.425000000000058e-05, 9.402799999999947e-05, 9.408300000000175e-05, 9.387500000000021e-05, 9.420899999999788e-05, 9.423599999999754e-05, 9.394500000000153e-05, 9.393099999999849e-05, 9.372300000000042e-05, 9.373600000000051e-05, 9.376399999999965e-05, 9.386100000000064e-05, 9.411100000000089e-05, 9.363899999999953e-05, 9.395800000000162e-05, 9.384700000000107e-05, 9.395800000000162e-05, 9.380599999999836e-05, 9.388899999999978e-05, 9.416699999999917e-05, 9.430600000000233e-05, 9.376399999999965e-05, 9.426400000000015e-05, 9.387500000000021e-05, 9.383400000000097e-05, 9.419499999999831e-05]</msg>
<status status="PASS" starttime="20201029 12:43:49.550" endtime="20201029 12:43:49.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.545" endtime="20201029 12:43:49.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:49.558" endtime="20201029 12:43:49.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.556" endtime="20201029 12:43:49.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.555" endtime="20201029 12:43:49.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.192" endtime="20201029 12:43:49.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.192" endtime="20201029 12:43:49.579"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.588" endtime="20201029 12:43:49.606"></status>
</kw>
<msg timestamp="20201029 12:43:49.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.586" endtime="20201029 12:43:49.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.608" endtime="20201029 12:43:49.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.611" endtime="20201029 12:43:49.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.584" endtime="20201029 12:43:49.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.582" endtime="20201029 12:43:49.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.620" endtime="20201029 12:43:49.906"></status>
</kw>
<msg timestamp="20201029 12:43:49.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022941528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.618" endtime="20201029 12:43:49.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022941528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.910" endtime="20201029 12:43:49.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.919" endtime="20201029 12:43:49.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.616" endtime="20201029 12:43:49.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.614" endtime="20201029 12:43:49.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.925" level="INFO">${RESULT} = [{'diff': 9.58339999999995e-05}, {'diff': 9.534799999999857e-05}, {'diff': 9.497199999999872e-05}, {'diff': 9.48469999999986e-05}, {'diff': 9.479100000000032e-05}, {'diff': 9.515200000000112e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:49.922" endtime="20201029 12:43:49.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:49.930" level="INFO">${ACCURACY} = {'diff': [9.58339999999995e-05, 9.534799999999857e-05, 9.497199999999872e-05, 9.48469999999986e-05, 9.479100000000032e-05, 9.515200000000112e-05, 9.504100000000057e-05, 9.52079999999994e-05, 9.5028000...</msg>
<status status="PASS" starttime="20201029 12:43:49.926" endtime="20201029 12:43:49.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.935" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:43:49.934" endtime="20201029 12:43:49.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.938" level="INFO">VALUE: [9.58339999999995e-05, 9.534799999999857e-05, 9.497199999999872e-05, 9.48469999999986e-05, 9.479100000000032e-05, 9.515200000000112e-05, 9.504100000000057e-05, 9.52079999999994e-05, 9.502800000000047e-05, 9.466699999999967e-05, 9.506899999999971e-05, 9.470800000000237e-05, 9.462500000000096e-05, 9.522200000000244e-05, 9.509800000000179e-05, 9.501399999999743e-05, 9.523599999999854e-05, 9.499999999999786e-05, 9.529100000000082e-05, 9.506899999999971e-05, 9.518000000000026e-05, 9.481899999999946e-05, 9.504100000000057e-05, 9.513900000000103e-05, 9.480499999999989e-05, 9.52079999999994e-05, 9.519499999999931e-05, 9.502800000000047e-05, 9.523600000000201e-05, 9.511100000000189e-05, 9.497300000000167e-05, 9.505600000000308e-05, 9.511099999999842e-05, 9.527799999999725e-05, 9.467999999999976e-05, 9.480499999999989e-05, 9.479199999999979e-05, 9.465200000000062e-05, 9.518000000000026e-05, 9.494399999999958e-05, 9.487499999999774e-05, 9.516700000000017e-05, 9.475000000000108e-05, 9.511099999999842e-05, 9.491699999999992e-05, 9.475000000000108e-05, 9.484700000000207e-05, 9.508400000000222e-05, 9.468100000000271e-05, 9.51669999999967e-05]</msg>
<status status="PASS" starttime="20201029 12:43:49.936" endtime="20201029 12:43:49.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.931" endtime="20201029 12:43:49.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:49.942" endtime="20201029 12:43:49.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.941" endtime="20201029 12:43:49.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.940" endtime="20201029 12:43:49.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.580" endtime="20201029 12:43:49.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.580" endtime="20201029 12:43:49.963"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.972" endtime="20201029 12:43:49.990"></status>
</kw>
<msg timestamp="20201029 12:43:49.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.970" endtime="20201029 12:43:49.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.992" endtime="20201029 12:43:49.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.994" endtime="20201029 12:43:49.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.968" endtime="20201029 12:43:49.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.966" endtime="20201029 12:43:49.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.003" endtime="20201029 12:43:50.290"></status>
</kw>
<msg timestamp="20201029 12:43:50.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.002" endtime="20201029 12:43:50.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.295" endtime="20201029 12:43:50.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.303" endtime="20201029 12:43:50.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.999" endtime="20201029 12:43:50.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.997" endtime="20201029 12:43:50.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:50.310" level="INFO">${RESULT} = [{'diff': 9.659700000000035e-05}, {'diff': 9.620899999999988e-05}, {'diff': 9.622299999999945e-05}, {'diff': 9.601399999999843e-05}, {'diff': 9.616700000000117e-05}, {'diff': 9.574999999999861e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:50.306" endtime="20201029 12:43:50.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:50.314" level="INFO">${ACCURACY} = {'diff': [9.659700000000035e-05, 9.620899999999988e-05, 9.622299999999945e-05, 9.601399999999843e-05, 9.616700000000117e-05, 9.574999999999861e-05, 9.604200000000104e-05, 9.569400000000033e-05, 9.5819...</msg>
<status status="PASS" starttime="20201029 12:43:50.311" endtime="20201029 12:43:50.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.318" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:43:50.317" endtime="20201029 12:43:50.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.321" level="INFO">VALUE: [9.659700000000035e-05, 9.620899999999988e-05, 9.622299999999945e-05, 9.601399999999843e-05, 9.616700000000117e-05, 9.574999999999861e-05, 9.604200000000104e-05, 9.569400000000033e-05, 9.581900000000046e-05, 9.615299999999813e-05, 9.612500000000246e-05, 9.611099999999942e-05, 9.583300000000003e-05, 9.580500000000089e-05, 9.601399999999843e-05, 9.576399999999818e-05, 9.569499999999981e-05, 9.608300000000028e-05, 9.599999999999886e-05, 9.570900000000285e-05, 9.58339999999995e-05, 9.619500000000031e-05, 9.622199999999997e-05, 9.577699999999828e-05, 9.605500000000114e-05, 9.597199999999972e-05, 9.619400000000083e-05, 9.579100000000132e-05, 9.591700000000092e-05, 9.576399999999818e-05, 9.609699999999985e-05, 9.613899999999856e-05, 9.576399999999818e-05, 9.600000000000233e-05, 9.572199999999947e-05, 9.620899999999988e-05, 9.60140000000019e-05, 9.56669999999972e-05, 9.611199999999889e-05, 9.580600000000036e-05, 9.580499999999742e-05, 9.618000000000126e-05, 9.56660000000012e-05, 9.61799999999978e-05, 9.563900000000153e-05, 9.630500000000139e-05, 9.573599999999904e-05, 9.568100000000024e-05, 9.575000000000208e-05, 9.583300000000003e-05]</msg>
<status status="PASS" starttime="20201029 12:43:50.320" endtime="20201029 12:43:50.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.315" endtime="20201029 12:43:50.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:50.326" endtime="20201029 12:43:50.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.324" endtime="20201029 12:43:50.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.323" endtime="20201029 12:43:50.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.964" endtime="20201029 12:43:50.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.963" endtime="20201029 12:43:50.347"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.355" endtime="20201029 12:43:50.375"></status>
</kw>
<msg timestamp="20201029 12:43:50.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.354" endtime="20201029 12:43:50.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.377" endtime="20201029 12:43:50.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.380" endtime="20201029 12:43:50.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.351" endtime="20201029 12:43:50.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.349" endtime="20201029 12:43:50.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.389" endtime="20201029 12:43:50.676"></status>
</kw>
<msg timestamp="20201029 12:43:50.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02308375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023181181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:50.387" endtime="20201029 12:43:50.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02308375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023181181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:50.680" endtime="20201029 12:43:50.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.688" endtime="20201029 12:43:50.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.384" endtime="20201029 12:43:50.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.383" endtime="20201029 12:43:50.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:50.695" level="INFO">${RESULT} = [{'diff': 9.743099999999852e-05}, {'diff': 9.70409999999991e-05}, {'diff': 9.719400000000183e-05}, {'diff': 9.706899999999824e-05}, {'diff': 9.706900000000171e-05}, {'diff': 9.67080000000009e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:50.692" endtime="20201029 12:43:50.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:50.699" level="INFO">${ACCURACY} = {'diff': [9.743099999999852e-05, 9.70409999999991e-05, 9.719400000000183e-05, 9.706899999999824e-05, 9.706900000000171e-05, 9.67080000000009e-05, 9.716599999999923e-05, 9.71530000000026e-05, 9.7180999...</msg>
<status status="PASS" starttime="20201029 12:43:50.696" endtime="20201029 12:43:50.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.703" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:43:50.702" endtime="20201029 12:43:50.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.706" level="INFO">VALUE: [9.743099999999852e-05, 9.70409999999991e-05, 9.719400000000183e-05, 9.706899999999824e-05, 9.706900000000171e-05, 9.67080000000009e-05, 9.716599999999923e-05, 9.71530000000026e-05, 9.718099999999827e-05, 9.677799999999875e-05, 9.715299999999913e-05, 9.701399999999943e-05, 9.705600000000161e-05, 9.686100000000017e-05, 9.690299999999888e-05, 9.668100000000124e-05, 9.68059999999979e-05, 9.697200000000072e-05, 9.679100000000232e-05, 9.666599999999873e-05, 9.72219999999975e-05, 9.723600000000054e-05, 9.715299999999913e-05, 9.686100000000017e-05, 9.692999999999855e-05, 9.681899999999799e-05, 9.686100000000017e-05, 9.672200000000047e-05, 9.698599999999682e-05, 9.676399999999918e-05, 9.686100000000017e-05, 9.688900000000278e-05, 9.701399999999943e-05, 9.719399999999837e-05, 9.67080000000009e-05, 9.677799999999875e-05, 9.686100000000017e-05, 9.668000000000176e-05, 9.712499999999999e-05, 9.705600000000161e-05, 9.726399999999968e-05, 9.692999999999855e-05, 9.68340000000005e-05, 9.690299999999888e-05, 9.684699999999713e-05, 9.68340000000005e-05, 9.72219999999975e-05, 9.670900000000038e-05, 9.709800000000032e-05, 9.706899999999824e-05]</msg>
<status status="PASS" starttime="20201029 12:43:50.705" endtime="20201029 12:43:50.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.700" endtime="20201029 12:43:50.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:50.712" endtime="20201029 12:43:50.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.710" endtime="20201029 12:43:50.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.709" endtime="20201029 12:43:50.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.348" endtime="20201029 12:43:50.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.347" endtime="20201029 12:43:50.733"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.741" endtime="20201029 12:43:50.760"></status>
</kw>
<msg timestamp="20201029 12:43:50.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.740" endtime="20201029 12:43:50.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.762" endtime="20201029 12:43:50.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.764" endtime="20201029 12:43:50.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.737" endtime="20201029 12:43:50.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.735" endtime="20201029 12:43:50.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.773" endtime="20201029 12:43:51.059"></status>
</kw>
<msg timestamp="20201029 12:43:51.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.772" endtime="20201029 12:43:51.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.063" endtime="20201029 12:43:51.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.071" endtime="20201029 12:43:51.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.769" endtime="20201029 12:43:51.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.768" endtime="20201029 12:43:51.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.078" level="INFO">${RESULT} = [{'diff': 9.862500000000149e-05}, {'diff': 9.829199999999982e-05}, {'diff': 9.794499999999859e-05}, {'diff': 9.790299999999988e-05}, {'diff': 9.774999999999714e-05}, {'diff': 9.76669999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:51.075" endtime="20201029 12:43:51.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:51.083" level="INFO">${ACCURACY} = {'diff': [9.862500000000149e-05, 9.829199999999982e-05, 9.794499999999859e-05, 9.790299999999988e-05, 9.774999999999714e-05, 9.76669999999992e-05, 9.804199999999957e-05, 9.806999999999871e-05, 9.78199...</msg>
<status status="PASS" starttime="20201029 12:43:51.079" endtime="20201029 12:43:51.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.088" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:43:51.087" endtime="20201029 12:43:51.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.090" level="INFO">VALUE: [9.862500000000149e-05, 9.829199999999982e-05, 9.794499999999859e-05, 9.790299999999988e-05, 9.774999999999714e-05, 9.76669999999992e-05, 9.804199999999957e-05, 9.806999999999871e-05, 9.781999999999846e-05, 9.823700000000102e-05, 9.797200000000172e-05, 9.768000000000276e-05, 9.776400000000018e-05, 9.825000000000111e-05, 9.761100000000092e-05, 9.786100000000117e-05, 9.769399999999887e-05, 9.8028e-05, 9.776400000000018e-05, 9.788900000000031e-05, 9.774999999999714e-05, 9.823599999999807e-05, 9.79730000000012e-05, 9.811100000000142e-05, 9.793099999999902e-05, 9.813900000000056e-05, 9.820799999999894e-05, 9.820799999999894e-05, 9.816600000000023e-05, 9.82219999999985e-05, 9.815300000000013e-05, 9.804199999999957e-05, 9.813900000000056e-05, 9.8028e-05, 9.791700000000292e-05, 9.777799999999975e-05, 9.76669999999992e-05, 9.770900000000138e-05, 9.822200000000197e-05, 9.804199999999957e-05, 9.783399999999803e-05, 9.813900000000056e-05, 9.812500000000099e-05, 9.827700000000078e-05, 9.779099999999985e-05, 9.806899999999924e-05, 9.787500000000074e-05, 9.8028e-05, 9.788900000000031e-05, 9.766700000000267e-05]</msg>
<status status="PASS" starttime="20201029 12:43:51.089" endtime="20201029 12:43:51.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.084" endtime="20201029 12:43:51.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.095" endtime="20201029 12:43:51.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.094" endtime="20201029 12:43:51.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.093" endtime="20201029 12:43:51.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.733" endtime="20201029 12:43:51.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.733" endtime="20201029 12:43:51.116"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.125" endtime="20201029 12:43:51.143"></status>
</kw>
<msg timestamp="20201029 12:43:51.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.123" endtime="20201029 12:43:51.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.144" endtime="20201029 12:43:51.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.147" endtime="20201029 12:43:51.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.121" endtime="20201029 12:43:51.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.118" endtime="20201029 12:43:51.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.156" endtime="20201029 12:43:51.443"></status>
</kw>
<msg timestamp="20201029 12:43:51.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.154" endtime="20201029 12:43:51.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.447" endtime="20201029 12:43:51.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.455" endtime="20201029 12:43:51.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.152" endtime="20201029 12:43:51.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.150" endtime="20201029 12:43:51.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.462" level="INFO">${RESULT} = [{'diff': 9.98060000000009e-05}, {'diff': 9.938900000000181e-05}, {'diff': 9.879099999999738e-05}, {'diff': 9.887499999999827e-05}, {'diff': 9.887500000000174e-05}, {'diff': 9.879200000000032e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:51.459" endtime="20201029 12:43:51.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:51.466" level="INFO">${ACCURACY} = {'diff': [9.98060000000009e-05, 9.938900000000181e-05, 9.879099999999738e-05, 9.887499999999827e-05, 9.887500000000174e-05, 9.879200000000032e-05, 9.886100000000217e-05, 9.912499999999852e-05, 9.92079...</msg>
<status status="PASS" starttime="20201029 12:43:51.463" endtime="20201029 12:43:51.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.471" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:43:51.470" endtime="20201029 12:43:51.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.473" level="INFO">VALUE: [9.98060000000009e-05, 9.938900000000181e-05, 9.879099999999738e-05, 9.887499999999827e-05, 9.887500000000174e-05, 9.879200000000032e-05, 9.886100000000217e-05, 9.912499999999852e-05, 9.920799999999994e-05, 9.870899999999891e-05, 9.879200000000032e-05, 9.873600000000204e-05, 9.865299999999716e-05, 9.912499999999852e-05, 9.894499999999959e-05, 9.915200000000166e-05, 9.915199999999819e-05, 9.916599999999776e-05, 9.905600000000014e-05, 9.883299999999956e-05, 9.920799999999994e-05, 9.913900000000156e-05, 9.904200000000057e-05, 9.901400000000143e-05, 9.920899999999941e-05, 9.881999999999946e-05, 9.911099999999895e-05, 9.916699999999723e-05, 9.904099999999763e-05, 9.904200000000057e-05, 9.925000000000211e-05, 9.920799999999994e-05, 9.873699999999805e-05, 9.920799999999994e-05, 9.883299999999956e-05, 9.915200000000166e-05, 9.915299999999766e-05, 9.919499999999984e-05, 9.876399999999771e-05, 9.911100000000242e-05, 9.906999999999971e-05, 9.884699999999913e-05, 9.890299999999741e-05, 9.905600000000014e-05, 9.922299999999898e-05, 9.909699999999938e-05, 9.91809999999968e-05, 9.901299999999849e-05, 9.923599999999907e-05, 9.881899999999999e-05]</msg>
<status status="PASS" starttime="20201029 12:43:51.472" endtime="20201029 12:43:51.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.467" endtime="20201029 12:43:51.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.478" endtime="20201029 12:43:51.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.477" endtime="20201029 12:43:51.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.476" endtime="20201029 12:43:51.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.117" endtime="20201029 12:43:51.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.116" endtime="20201029 12:43:51.499"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.508" endtime="20201029 12:43:51.528"></status>
</kw>
<msg timestamp="20201029 12:43:51.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.506" endtime="20201029 12:43:51.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.530" endtime="20201029 12:43:51.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.532" endtime="20201029 12:43:51.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.504" endtime="20201029 12:43:51.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.502" endtime="20201029 12:43:51.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.541" endtime="20201029 12:43:51.826"></status>
</kw>
<msg timestamp="20201029 12:43:51.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:51.540" endtime="20201029 12:43:51.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:51.830" endtime="20201029 12:43:51.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.838" endtime="20201029 12:43:51.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.537" endtime="20201029 12:43:51.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.535" endtime="20201029 12:43:51.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.845" level="INFO">${RESULT} = [{'diff': 0.00010048600000000033}, {'diff': 0.00010033400000000053}, {'diff': 0.0001001670000000017}, {'diff': 0.00010009799999999985}, {'diff': 9.991700000000145e-05}, {'diff': 9.974999999999914e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:51.842" endtime="20201029 12:43:51.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:51.849" level="INFO">${ACCURACY} = {'diff': [0.00010048600000000033, 0.00010033400000000053, 0.0001001670000000017, 0.00010009799999999985, 9.991700000000145e-05, 9.974999999999914e-05, 0.00010029099999999888, 0.00010009700000000038, 0...</msg>
<status status="PASS" starttime="20201029 12:43:51.846" endtime="20201029 12:43:51.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.854" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:43:51.853" endtime="20201029 12:43:51.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.856" level="INFO">VALUE: [0.00010048600000000033, 0.00010033400000000053, 0.0001001670000000017, 0.00010009799999999985, 9.991700000000145e-05, 9.974999999999914e-05, 0.00010029099999999888, 0.00010009700000000038, 0.00010004200000000157, 0.00010004099999999863, 0.00010008299999999734, 0.00010004099999999863, 9.998599999999983e-05, 0.00010020800000000094, 0.000100028000000002, 9.982000000000046e-05, 0.00010000000000000286, 0.00010008400000000028, 9.96670000000012e-05, 9.982000000000046e-05, 0.00010027800000000225, 9.969400000000087e-05, 9.986100000000317e-05, 9.979100000000185e-05, 9.966600000000173e-05, 9.987499999999927e-05, 0.0001001670000000017, 0.00010015299999999866, 0.00010015300000000213, 9.977799999999828e-05, 9.975000000000261e-05, 0.00010001399999999896, 9.973600000000304e-05, 0.00010009700000000038, 9.994500000000059e-05, 9.98479999999996e-05, 0.00010011099999999995, 0.00010025000000000311, 0.00010007000000000071, 9.99999999999994e-05, 9.99999999999994e-05, 0.00010008300000000081, 9.991700000000145e-05, 9.992999999999808e-05, 9.980500000000142e-05, 9.98609999999997e-05, 9.98609999999997e-05, 0.00010008300000000081, 9.995900000000016e-05, 0.00010011099999999995]</msg>
<status status="PASS" starttime="20201029 12:43:51.855" endtime="20201029 12:43:51.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.850" endtime="20201029 12:43:51.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.862" endtime="20201029 12:43:51.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.860" endtime="20201029 12:43:51.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.859" endtime="20201029 12:43:51.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.500" endtime="20201029 12:43:51.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.499" endtime="20201029 12:43:51.883"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.891" endtime="20201029 12:43:51.910"></status>
</kw>
<msg timestamp="20201029 12:43:51.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.890" endtime="20201029 12:43:51.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.912" endtime="20201029 12:43:51.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.914" endtime="20201029 12:43:51.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.887" endtime="20201029 12:43:51.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.885" endtime="20201029 12:43:51.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.924" endtime="20201029 12:43:52.210"></status>
</kw>
<msg timestamp="20201029 12:43:52.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.922" endtime="20201029 12:43:52.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.214" endtime="20201029 12:43:52.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.222" endtime="20201029 12:43:52.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.919" endtime="20201029 12:43:52.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.918" endtime="20201029 12:43:52.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.228" level="INFO">${RESULT} = [{'diff': 0.00010195799999999922}, {'diff': 0.00010119400000000237}, {'diff': 0.00010101399999999996}, {'diff': 0.00010075000000000014}, {'diff': 0.0001010419999999991}, {'diff': 0.0001012220000000015...</msg>
<status status="PASS" starttime="20201029 12:43:52.225" endtime="20201029 12:43:52.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:52.233" level="INFO">${ACCURACY} = {'diff': [0.00010195799999999922, 0.00010119400000000237, 0.00010101399999999996, 0.00010075000000000014, 0.0001010419999999991, 0.0001012220000000015, 0.00010093100000000202, 0.00010073700000000005, ...</msg>
<status status="PASS" starttime="20201029 12:43:52.229" endtime="20201029 12:43:52.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.238" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:43:52.237" endtime="20201029 12:43:52.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.240" level="INFO">VALUE: [0.00010195799999999922, 0.00010119400000000237, 0.00010101399999999996, 0.00010075000000000014, 0.0001010419999999991, 0.0001012220000000015, 0.00010093100000000202, 0.00010073700000000005, 0.00010123600000000108, 0.00010065299999999916, 0.0001012220000000015, 0.00010101300000000049, 0.00010080599999999842, 0.0001010549999999992, 0.00010116599999999976, 0.00010119400000000237, 0.00010106900000000224, 0.00010070800000000144, 0.00010090299999999941, 0.00010076400000000318, 0.00010111100000000095, 0.00010080599999999842, 0.00010102799999999953, 0.0001008749999999968, 0.0001010000000000004, 0.00010080499999999895, 0.00010116599999999976, 0.00010097199999999779, 0.0001006800000000023, 0.00010123600000000108, 0.00010127799999999978, 0.00010113900000000009, 0.0001010419999999991, 0.00010126400000000021, 0.00010109700000000138, 0.00010066699999999873, 0.00010080599999999842, 0.00010102799999999953, 0.00010082000000000146, 0.00010097300000000073, 0.00010119499999999837, 0.00010079099999999938, 0.0001010410000000031, 0.00010080500000000242, 0.00010076399999999971, 0.0001010000000000004, 0.0001006939999999984, 0.00010122199999999804, 0.00010076399999999971, 0.00010077799999999928]</msg>
<status status="PASS" starttime="20201029 12:43:52.239" endtime="20201029 12:43:52.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.234" endtime="20201029 12:43:52.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:52.245" endtime="20201029 12:43:52.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.244" endtime="20201029 12:43:52.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.243" endtime="20201029 12:43:52.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.884" endtime="20201029 12:43:52.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.883" endtime="20201029 12:43:52.266"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.275" endtime="20201029 12:43:52.295"></status>
</kw>
<msg timestamp="20201029 12:43:52.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.273" endtime="20201029 12:43:52.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.296" endtime="20201029 12:43:52.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.299" endtime="20201029 12:43:52.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.271" endtime="20201029 12:43:52.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.268" endtime="20201029 12:43:52.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.308" endtime="20201029 12:43:52.595"></status>
</kw>
<msg timestamp="20201029 12:43:52.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022342278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.306" endtime="20201029 12:43:52.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022342278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.599" endtime="20201029 12:43:52.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.608" endtime="20201029 12:43:52.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.304" endtime="20201029 12:43:52.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.302" endtime="20201029 12:43:52.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.614" level="INFO">${RESULT} = [{'diff': 0.00010226400000000122}, {'diff': 0.00010216599999999729}, {'diff': 0.00010222199999999904}, {'diff': 0.00010215300000000066}, {'diff': 0.00010215300000000066}, {'diff': 0.000101778000000000...</msg>
<status status="PASS" starttime="20201029 12:43:52.611" endtime="20201029 12:43:52.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:52.618" level="INFO">${ACCURACY} = {'diff': [0.00010226400000000122, 0.00010216599999999729, 0.00010222199999999904, 0.00010215300000000066, 0.00010215300000000066, 0.00010177800000000028, 0.00010224999999999818, 0.00010163900000000059...</msg>
<status status="PASS" starttime="20201029 12:43:52.615" endtime="20201029 12:43:52.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.622" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:43:52.621" endtime="20201029 12:43:52.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.625" level="INFO">VALUE: [0.00010226400000000122, 0.00010216599999999729, 0.00010222199999999904, 0.00010215300000000066, 0.00010215300000000066, 0.00010177800000000028, 0.00010224999999999818, 0.00010163900000000059, 0.00010215300000000066, 0.00010197199999999879, 0.00010215300000000066, 0.00010173600000000158, 0.00010166699999999973, 0.00010198600000000183, 0.00010195900000000216, 0.00010169500000000234, 0.00010222199999999904, 0.0001020550000000002, 0.00010193000000000008, 0.00010206899999999977, 0.00010159699999999841, 0.00010202800000000053, 0.00010180499999999995, 0.00010169499999999887, 0.00010227800000000078, 0.0001016809999999993, 0.00010220899999999894, 0.0001021939999999999, 0.00010190300000000041, 0.00010175000000000115, 0.00010201400000000097, 0.00010191599999999704, 0.00010179100000000038, 0.0001020139999999975, 0.00010186099999999823, 0.0001020550000000002, 0.00010175000000000115, 0.00010212500000000152, 0.00010187500000000127, 0.00010209699999999891, 0.000101722000000002, 0.00010169500000000234, 0.00010219500000000284, 0.00010169500000000234, 0.0001018480000000016, 0.00010186200000000117, 0.00010173600000000158, 0.00010186099999999823, 0.00010188800000000137, 0.00010170799999999897]</msg>
<status status="PASS" starttime="20201029 12:43:52.623" endtime="20201029 12:43:52.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.619" endtime="20201029 12:43:52.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:52.630" endtime="20201029 12:43:52.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.628" endtime="20201029 12:43:52.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.627" endtime="20201029 12:43:52.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.267" endtime="20201029 12:43:52.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.266" endtime="20201029 12:43:52.650"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.659" endtime="20201029 12:43:52.682"></status>
</kw>
<msg timestamp="20201029 12:43:52.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.657" endtime="20201029 12:43:52.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.683" endtime="20201029 12:43:52.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.686" endtime="20201029 12:43:52.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.655" endtime="20201029 12:43:52.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.653" endtime="20201029 12:43:52.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.694" endtime="20201029 12:43:52.980"></status>
</kw>
<msg timestamp="20201029 12:43:52.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025042958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025146222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.693" endtime="20201029 12:43:52.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025042958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025146222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.984" endtime="20201029 12:43:52.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.992" endtime="20201029 12:43:52.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.691" endtime="20201029 12:43:52.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.689" endtime="20201029 12:43:52.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.999" level="INFO">${RESULT} = [{'diff': 0.00010326399999999875}, {'diff': 0.00010281900000000052}, {'diff': 0.00010269499999999987}, {'diff': 0.00010313899999999862}, {'diff': 0.00010288900000000184}, {'diff': 0.000102875000000002...</msg>
<status status="PASS" starttime="20201029 12:43:52.996" endtime="20201029 12:43:52.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:53.003" level="INFO">${ACCURACY} = {'diff': [0.00010326399999999875, 0.00010281900000000052, 0.00010269499999999987, 0.00010313899999999862, 0.00010288900000000184, 0.00010287500000000227, 0.00010293100000000055, 0.00010302699999999859...</msg>
<status status="PASS" starttime="20201029 12:43:53.000" endtime="20201029 12:43:53.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.007" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:43:53.006" endtime="20201029 12:43:53.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.010" level="INFO">VALUE: [0.00010326399999999875, 0.00010281900000000052, 0.00010269499999999987, 0.00010313899999999862, 0.00010288900000000184, 0.00010287500000000227, 0.00010293100000000055, 0.00010302699999999859, 0.00010294500000000012, 0.0001030550000000012, 0.0001028610000000027, 0.00010294399999999718, 0.00010286099999999923, 0.0001031940000000009, 0.00010316699999999776, 0.00010280500000000095, 0.00010315300000000166, 0.00010295800000000022, 0.00010288900000000184, 0.00010276400000000172, 0.00010298599999999936, 0.00010279200000000085, 0.00010282, 0.00010302699999999859, 0.00010309800000000285, 0.00010283300000000009, 0.00010320800000000047, 0.00010298599999999936, 0.00010317999999999786, 0.00010275000000000215, 0.00010276399999999825, 0.00010309699999999991, 0.0001031940000000009, 0.00010288899999999837, 0.00010269499999999987, 0.00010280600000000042, 0.00010282, 0.00010315299999999819, 0.00010327700000000231, 0.00010280499999999748, 0.0001030139999999985, 0.00010265199999999822, 0.00010315199999999872, 0.00010279200000000085, 0.00010317999999999786, 0.00010294400000000065, 0.00010294400000000065, 0.00010329199999999789, 0.00010311099999999948, 0.00010277800000000128]</msg>
<status status="PASS" starttime="20201029 12:43:53.008" endtime="20201029 12:43:53.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.004" endtime="20201029 12:43:53.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.016" endtime="20201029 12:43:53.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.014" endtime="20201029 12:43:53.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.013" endtime="20201029 12:43:53.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.651" endtime="20201029 12:43:53.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.651" endtime="20201029 12:43:53.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.518" endtime="20201029 12:43:53.036"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:14.449" endtime="20201029 12:43:53.037" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.043" endtime="20201029 12:43:53.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.042" endtime="20201029 12:43:53.063"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.076" endtime="20201029 12:43:53.092"></status>
</kw>
<msg timestamp="20201029 12:43:53.093" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.075" endtime="20201029 12:43:53.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.098" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.095" endtime="20201029 12:43:53.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.104" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:53.100" endtime="20201029 12:43:53.105"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:53.072" endtime="20201029 12:43:53.106"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:53.070" endtime="20201029 12:43:53.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.068" endtime="20201029 12:43:53.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:53.115" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:53.114" endtime="20201029 12:43:53.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.110" endtime="20201029 12:43:53.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.068" endtime="20201029 12:43:53.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.067" endtime="20201029 12:43:53.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.119" endtime="20201029 12:43:53.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.066" endtime="20201029 12:43:53.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.064" endtime="20201029 12:43:53.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.041" endtime="20201029 12:43:53.125"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.146" endtime="20201029 12:43:53.164"></status>
</kw>
<msg timestamp="20201029 12:43:53.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.143" endtime="20201029 12:43:53.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.167" endtime="20201029 12:43:53.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.173" endtime="20201029 12:43:53.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.135" endtime="20201029 12:43:53.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.131" endtime="20201029 12:43:53.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.190" endtime="20201029 12:43:53.489"></status>
</kw>
<msg timestamp="20201029 12:43:53.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.096842875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.096847569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.188" endtime="20201029 12:43:53.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.096842875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.096847569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.493" endtime="20201029 12:43:53.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.502" endtime="20201029 12:43:53.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.183" endtime="20201029 12:43:53.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.179" endtime="20201029 12:43:53.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.508" level="INFO">${RESULT} = [{'diff': 4.693999999999532e-06}, {'diff': 4.139000000000226e-06}, {'diff': 3.833999999994231e-06}, {'diff': 3.7360000000041804e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.5550000000023063e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:53.505" endtime="20201029 12:43:53.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:53.512" level="INFO">${ACCURACY} = {'diff': [4.693999999999532e-06, 4.139000000000226e-06, 3.833999999994231e-06, 3.7360000000041804e-06, 3.083000000000946e-06, 3.5550000000023063e-06, 3.5840000000009198e-06, 3.042000000008649e-06, 3.5...</msg>
<status status="PASS" starttime="20201029 12:43:53.509" endtime="20201029 12:43:53.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.518" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:43:53.516" endtime="20201029 12:43:53.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.520" level="INFO">VALUE: [4.693999999999532e-06, 4.139000000000226e-06, 3.833999999994231e-06, 3.7360000000041804e-06, 3.083000000000946e-06, 3.5550000000023063e-06, 3.5840000000009198e-06, 3.042000000008649e-06, 3.514000000010009e-06, 3.02800000000214e-06, 4.139000000000226e-06, 3.0409999999952975e-06, 3.02800000000214e-06, 3.5700000000082888e-06, 3.5700000000082888e-06, 3.55600000000178e-06, 3.042000000008649e-06, 4.152999999992857e-06, 3.7910000000029864e-06, 3.7909999999891086e-06, 3.4859999999969915e-06, 3.0410000000091753e-06, 3.0410000000091753e-06, 3.569000000008815e-06, 3.5689999999949373e-06, 3.02800000000214e-06, 4.152999999992857e-06, 3.02800000000214e-06, 3.0409999999952975e-06, 3.569999999994411e-06, 3.569999999994411e-06, 3.014000000009509e-06, 3.5550000000023063e-06, 3.02800000000214e-06, 3.569000000008815e-06, 3.5840000000009198e-06, 3.569000000008815e-06, 3.0269999999887887e-06, 3.569000000008815e-06, 3.5700000000082888e-06, 3.569000000008815e-06, 3.0410000000091753e-06, 4.153000000006735e-06, 3.486999999996465e-06, 3.0550000000018063e-06, 3.5000000000035003e-06, 3.02800000000214e-06, 3.5409999999957975e-06, 3.569999999994411e-06, 3.0270000000026664e-06]</msg>
<status status="PASS" starttime="20201029 12:43:53.519" endtime="20201029 12:43:53.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.513" endtime="20201029 12:43:53.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.524" endtime="20201029 12:43:53.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.523" endtime="20201029 12:43:53.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.522" endtime="20201029 12:43:53.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.128" endtime="20201029 12:43:53.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.127" endtime="20201029 12:43:53.545"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.554" endtime="20201029 12:43:53.568"></status>
</kw>
<msg timestamp="20201029 12:43:53.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.552" endtime="20201029 12:43:53.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.569" endtime="20201029 12:43:53.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.572" endtime="20201029 12:43:53.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.550" endtime="20201029 12:43:53.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.548" endtime="20201029 12:43:53.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.581" endtime="20201029 12:43:53.870"></status>
</kw>
<msg timestamp="20201029 12:43:53.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.579" endtime="20201029 12:43:53.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.874" endtime="20201029 12:43:53.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.883" endtime="20201029 12:43:53.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.576" endtime="20201029 12:43:53.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.575" endtime="20201029 12:43:53.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.889" level="INFO">${RESULT} = [{'diff': 5.9589999999998255e-06}, {'diff': 4.6949999999990055e-06}, {'diff': 4.403000000000046e-06}, {'diff': 4.403000000000046e-06}, {'diff': 4.389000000000476e-06}, {'diff': 4.666000000000392e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:53.886" endtime="20201029 12:43:53.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:53.894" level="INFO">${ACCURACY} = {'diff': [5.9589999999998255e-06, 4.6949999999990055e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.666000000000392e-06, 4.1109999999976166e-06, 4.403000000000046e-06, 4.7...</msg>
<status status="PASS" starttime="20201029 12:43:53.890" endtime="20201029 12:43:53.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.899" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:43:53.898" endtime="20201029 12:43:53.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.901" level="INFO">VALUE: [5.9589999999998255e-06, 4.6949999999990055e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.666000000000392e-06, 4.1109999999976166e-06, 4.403000000000046e-06, 4.707999999999102e-06, 4.181000000002405e-06, 4.318999999999157e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.333000000002196e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.08400000000142e-06, 4.735999999998242e-06, 4.097000000001516e-06, 4.6949999999990055e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.736000000001711e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.707999999999102e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.6949999999990055e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.11200000000056e-06, 4.375000000000906e-06, 4.096999999998047e-06, 4.6949999999990055e-06, 4.723000000001615e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.443999999999282e-06, 4.111000000001086e-06, 4.7499999999978115e-06]</msg>
<status status="PASS" starttime="20201029 12:43:53.900" endtime="20201029 12:43:53.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.895" endtime="20201029 12:43:53.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.906" endtime="20201029 12:43:53.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.904" endtime="20201029 12:43:53.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.903" endtime="20201029 12:43:53.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.546" endtime="20201029 12:43:53.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.545" endtime="20201029 12:43:53.926"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.935" endtime="20201029 12:43:53.949"></status>
</kw>
<msg timestamp="20201029 12:43:53.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.934" endtime="20201029 12:43:53.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.951" endtime="20201029 12:43:53.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.953" endtime="20201029 12:43:53.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.931" endtime="20201029 12:43:53.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.929" endtime="20201029 12:43:53.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.962" endtime="20201029 12:43:54.250"></status>
</kw>
<msg timestamp="20201029 12:43:54.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022106833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022113333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.961" endtime="20201029 12:43:54.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022106833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022113333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.255" endtime="20201029 12:43:54.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.263" endtime="20201029 12:43:54.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.958" endtime="20201029 12:43:54.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.956" endtime="20201029 12:43:54.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:54.270" level="INFO">${RESULT} = [{'diff': 6.499999999999562e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.2499999999983116e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.014000000001101e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:54.266" endtime="20201029 12:43:54.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:54.274" level="INFO">${ACCURACY} = {'diff': [6.499999999999562e-06, 5.610999999999117e-06, 5.2499999999983116e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.014000000001101e-06, 5.624999999998687e-06, 5.61199999999859e-06, 5.3060...</msg>
<status status="PASS" starttime="20201029 12:43:54.271" endtime="20201029 12:43:54.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.278" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:43:54.277" endtime="20201029 12:43:54.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.281" level="INFO">VALUE: [6.499999999999562e-06, 5.610999999999117e-06, 5.2499999999983116e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.014000000001101e-06, 5.624999999998687e-06, 5.61199999999859e-06, 5.306000000000061e-06, 5.319000000000157e-06, 5.625000000002156e-06, 5.292000000000491e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.028000000000671e-06, 5.610999999999117e-06, 5.319999999999631e-06, 5.610999999999117e-06, 5.305000000000587e-06, 4.957999999999352e-06, 5.319000000000157e-06, 5.625000000002156e-06, 5.000000000001531e-06, 5.638000000002252e-06, 5.319000000000157e-06, 5.639000000001726e-06, 5.306000000000061e-06, 5.625000000002156e-06, 5.277999999997451e-06, 5.319000000000157e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.319999999999631e-06, 5.624999999998687e-06, 5.291000000001017e-06, 5.596999999999547e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.610999999999117e-06, 5.639000000001726e-06, 4.9999999999980616e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.319000000000157e-06, 4.986999999997965e-06, 5.624999999998687e-06, 5.306000000000061e-06, 5.291000000001017e-06, 5.610999999999117e-06]</msg>
<status status="PASS" starttime="20201029 12:43:54.279" endtime="20201029 12:43:54.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.275" endtime="20201029 12:43:54.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:54.285" endtime="20201029 12:43:54.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.284" endtime="20201029 12:43:54.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.282" endtime="20201029 12:43:54.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.927" endtime="20201029 12:43:54.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.927" endtime="20201029 12:43:54.306"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.315" endtime="20201029 12:43:54.330"></status>
</kw>
<msg timestamp="20201029 12:43:54.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.313" endtime="20201029 12:43:54.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.331" endtime="20201029 12:43:54.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.333" endtime="20201029 12:43:54.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.311" endtime="20201029 12:43:54.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.308" endtime="20201029 12:43:54.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.342" endtime="20201029 12:43:54.629"></status>
</kw>
<msg timestamp="20201029 12:43:54.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022952417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022960139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.341" endtime="20201029 12:43:54.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022952417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022960139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.634" endtime="20201029 12:43:54.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.642" endtime="20201029 12:43:54.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.338" endtime="20201029 12:43:54.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.337" endtime="20201029 12:43:54.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:54.649" level="INFO">${RESULT} = [{'diff': 7.722000000001672e-06}, {'diff': 6.5279999999987015e-06}, {'diff': 6.541999999998271e-06}, {'diff': 6.540999999998798e-06}, {'diff': 6.222000000000172e-06}, {'diff': 5.917000000001116e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:54.645" endtime="20201029 12:43:54.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:54.653" level="INFO">${ACCURACY} = {'diff': [7.722000000001672e-06, 6.5279999999987015e-06, 6.541999999998271e-06, 6.540999999998798e-06, 6.222000000000172e-06, 5.917000000001116e-06, 6.611000000000117e-06, 6.180999999997466e-06, 6.569...</msg>
<status status="PASS" starttime="20201029 12:43:54.650" endtime="20201029 12:43:54.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.657" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:43:54.656" endtime="20201029 12:43:54.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.660" level="INFO">VALUE: [7.722000000001672e-06, 6.5279999999987015e-06, 6.541999999998271e-06, 6.540999999998798e-06, 6.222000000000172e-06, 5.917000000001116e-06, 6.611000000000117e-06, 6.180999999997466e-06, 6.569000000001407e-06, 6.847000000000797e-06, 6.235999999999742e-06, 6.5279999999987015e-06, 6.569000000001407e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.556000000001311e-06, 6.542000000001741e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.542000000001741e-06, 6.236000000003211e-06, 6.9169999999986465e-06, 6.2079999999971325e-06, 6.485999999999992e-06, 6.540999999998798e-06, 6.2229999999996455e-06, 6.540999999998798e-06, 6.235999999999742e-06, 6.540999999998798e-06, 6.597000000000547e-06, 6.222000000000172e-06, 6.540999999998798e-06, 6.222000000000172e-06, 6.499999999999562e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.611000000000117e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.570000000000881e-06, 6.222000000000172e-06, 6.8329999999977575e-06, 6.235999999999742e-06, 6.540999999998798e-06, 6.499999999999562e-06, 6.236999999999215e-06, 6.541000000002267e-06, 6.528000000002171e-06, 6.235999999999742e-06]</msg>
<status status="PASS" starttime="20201029 12:43:54.658" endtime="20201029 12:43:54.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.654" endtime="20201029 12:43:54.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:54.666" endtime="20201029 12:43:54.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.664" endtime="20201029 12:43:54.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.663" endtime="20201029 12:43:54.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.307" endtime="20201029 12:43:54.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.306" endtime="20201029 12:43:54.686"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.695" endtime="20201029 12:43:54.709"></status>
</kw>
<msg timestamp="20201029 12:43:54.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.693" endtime="20201029 12:43:54.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.712" endtime="20201029 12:43:54.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.715" endtime="20201029 12:43:54.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.691" endtime="20201029 12:43:54.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.689" endtime="20201029 12:43:54.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.729" endtime="20201029 12:43:55.012"></status>
</kw>
<msg timestamp="20201029 12:43:55.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021810056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.726" endtime="20201029 12:43:55.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021810056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.016" endtime="20201029 12:43:55.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.025" endtime="20201029 12:43:55.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.723" endtime="20201029 12:43:55.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.720" endtime="20201029 12:43:55.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.031" level="INFO">${RESULT} = [{'diff': 8.346999999998828e-06}, {'diff': 6.833000000001227e-06}, {'diff': 7.763999999996912e-06}, {'diff': 7.125000000000187e-06}, {'diff': 7.167000000002366e-06}, {'diff': 7.1529999999993266e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:55.028" endtime="20201029 12:43:55.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:55.036" level="INFO">${ACCURACY} = {'diff': [8.346999999998828e-06, 6.833000000001227e-06, 7.763999999996912e-06, 7.125000000000187e-06, 7.167000000002366e-06, 7.1529999999993266e-06, 7.457999999998383e-06, 7.473000000000896e-06, 7.166...</msg>
<status status="PASS" starttime="20201029 12:43:55.032" endtime="20201029 12:43:55.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.041" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:43:55.040" endtime="20201029 12:43:55.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.043" level="INFO">VALUE: [8.346999999998828e-06, 6.833000000001227e-06, 7.763999999996912e-06, 7.125000000000187e-06, 7.167000000002366e-06, 7.1529999999993266e-06, 7.457999999998383e-06, 7.473000000000896e-06, 7.1669999999988965e-06, 7.472000000001422e-06, 7.151999999999853e-06, 7.749999999997342e-06, 7.457999999998383e-06, 7.138999999999757e-06, 7.445000000001756e-06, 7.083000000001477e-06, 7.472000000001422e-06, 7.458000000001852e-06, 7.457999999998383e-06, 7.777000000000478e-06, 7.527000000000228e-06, 7.167000000002366e-06, 7.791999999999522e-06, 7.764000000000382e-06, 7.138000000000283e-06, 7.458000000001852e-06, 7.737000000000716e-06, 7.415999999999673e-06, 7.736000000001242e-06, 7.457999999998383e-06, 7.750000000000812e-06, 7.1529999999993266e-06, 7.4870000000004655e-06, 7.443999999998813e-06, 7.417000000002616e-06, 7.458000000001852e-06, 7.472000000001422e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.4169999999991465e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.458000000001852e-06, 7.443999999998813e-06, 7.179999999998993e-06, 7.138999999999757e-06, 7.445000000001756e-06, 7.1529999999993266e-06, 7.763999999996912e-06, 7.1529999999993266e-06]</msg>
<status status="PASS" starttime="20201029 12:43:55.042" endtime="20201029 12:43:55.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.037" endtime="20201029 12:43:55.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:55.048" endtime="20201029 12:43:55.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.047" endtime="20201029 12:43:55.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.046" endtime="20201029 12:43:55.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.687" endtime="20201029 12:43:55.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.686" endtime="20201029 12:43:55.069"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.078" endtime="20201029 12:43:55.092"></status>
</kw>
<msg timestamp="20201029 12:43:55.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.076" endtime="20201029 12:43:55.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.094" endtime="20201029 12:43:55.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.096" endtime="20201029 12:43:55.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.073" endtime="20201029 12:43:55.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.071" endtime="20201029 12:43:55.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.105" endtime="20201029 12:43:55.413"></status>
</kw>
<msg timestamp="20201029 12:43:55.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.104" endtime="20201029 12:43:55.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.417" endtime="20201029 12:43:55.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.426" endtime="20201029 12:43:55.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.101" endtime="20201029 12:43:55.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.099" endtime="20201029 12:43:55.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.432" level="INFO">${RESULT} = [{'diff': 9.583000000000508e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.07000000000238e-06}, {'diff': 8.374999999997967e-06}, {'diff': 8.346999999998828e-06}, {'diff': 8.680000000000493e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:55.429" endtime="20201029 12:43:55.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:55.436" level="INFO">${ACCURACY} = {'diff': [9.583000000000508e-06, 8.680000000000493e-06, 8.07000000000238e-06, 8.374999999997967e-06, 8.346999999998828e-06, 8.680000000000493e-06, 8.055999999999341e-06, 8.375000000001437e-06, 8.27800...</msg>
<status status="PASS" starttime="20201029 12:43:55.433" endtime="20201029 12:43:55.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.441" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:43:55.440" endtime="20201029 12:43:55.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.443" level="INFO">VALUE: [9.583000000000508e-06, 8.680000000000493e-06, 8.07000000000238e-06, 8.374999999997967e-06, 8.346999999998828e-06, 8.680000000000493e-06, 8.055999999999341e-06, 8.375000000001437e-06, 8.278000000000452e-06, 8.694999999999536e-06, 8.361000000001867e-06, 8.375000000001437e-06, 8.680999999999967e-06, 8.375000000001437e-06, 8.360999999998397e-06, 8.097999999998051e-06, 8.374999999997967e-06, 8.374999999997967e-06, 8.388999999997537e-06, 8.082999999999008e-06, 8.361000000001867e-06, 8.361000000001867e-06, 8.667000000000397e-06, 8.360999999998397e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.374999999997967e-06, 8.056000000002811e-06, 8.653000000000827e-06, 8.388999999997537e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.389000000001007e-06, 8.680000000000493e-06, 8.389000000001007e-06, 8.667000000000397e-06, 8.361000000001867e-06, 8.374999999997967e-06, 8.374999999997967e-06, 8.055999999999341e-06, 8.360999999998397e-06, 8.068999999999438e-06, 8.667000000000397e-06, 8.08400000000195e-06, 8.360999999998397e-06, 8.319999999999161e-06, 8.139000000000757e-06, 8.679999999997023e-06, 8.667000000000397e-06, 8.417000000000147e-06]</msg>
<status status="PASS" starttime="20201029 12:43:55.442" endtime="20201029 12:43:55.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.437" endtime="20201029 12:43:55.444"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:55.448" endtime="20201029 12:43:55.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.447" endtime="20201029 12:43:55.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.445" endtime="20201029 12:43:55.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.070" endtime="20201029 12:43:55.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.069" endtime="20201029 12:43:55.470"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.484" endtime="20201029 12:43:55.502"></status>
</kw>
<msg timestamp="20201029 12:43:55.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.482" endtime="20201029 12:43:55.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.504" endtime="20201029 12:43:55.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.508" endtime="20201029 12:43:55.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.478" endtime="20201029 12:43:55.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.474" endtime="20201029 12:43:55.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.523" endtime="20201029 12:43:55.815"></status>
</kw>
<msg timestamp="20201029 12:43:55.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031208681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031219153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.520" endtime="20201029 12:43:55.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031208681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031219153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.819" endtime="20201029 12:43:55.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.828" endtime="20201029 12:43:55.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.516" endtime="20201029 12:43:55.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.513" endtime="20201029 12:43:55.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.835" level="INFO">${RESULT} = [{'diff': 1.0472000000000953e-05}, {'diff': 9.832999999997288e-06}, {'diff': 9.583000000000508e-06}, {'diff': 9.277999999997982e-06}, {'diff': 9.277000000001978e-06}, {'diff': 9.249999999995373e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:55.831" endtime="20201029 12:43:55.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:55.839" level="INFO">${ACCURACY} = {'diff': [1.0472000000000953e-05, 9.832999999997288e-06, 9.583000000000508e-06, 9.277999999997982e-06, 9.277000000001978e-06, 9.249999999995373e-06, 9.235999999995803e-06, 9.292000000001022e-06, 8.986...</msg>
<status status="PASS" starttime="20201029 12:43:55.836" endtime="20201029 12:43:55.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.844" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:43:55.843" endtime="20201029 12:43:55.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.846" level="INFO">VALUE: [1.0472000000000953e-05, 9.832999999997288e-06, 9.583000000000508e-06, 9.277999999997982e-06, 9.277000000001978e-06, 9.249999999995373e-06, 9.235999999995803e-06, 9.292000000001022e-06, 8.986000000002492e-06, 9.597999999999551e-06, 9.264000000001882e-06, 9.610999999999648e-06, 9.319000000000688e-06, 9.291999999994083e-06, 9.583999999999981e-06, 9.292000000001022e-06, 9.305000000001118e-06, 9.249999999995373e-06, 9.278000000001452e-06, 8.986000000002492e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.582999999993569e-06, 9.306000000000592e-06, 9.292000000001022e-06, 9.583999999999981e-06, 9.902999999998607e-06, 9.597000000000078e-06, 9.583999999999981e-06, 8.971999999995983e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.667000000004866e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.278000000001452e-06, 9.346999999999828e-06, 9.27699999999504e-06, 9.887999999999564e-06, 9.610999999999648e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.263999999994943e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.888999999999037e-06, 9.597999999999551e-06, 8.972000000002922e-06, 9.333999999999731e-06, 9.278000000001452e-06]</msg>
<status status="PASS" starttime="20201029 12:43:55.845" endtime="20201029 12:43:55.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.840" endtime="20201029 12:43:55.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:55.852" endtime="20201029 12:43:55.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.851" endtime="20201029 12:43:55.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.850" endtime="20201029 12:43:55.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.472" endtime="20201029 12:43:55.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.471" endtime="20201029 12:43:55.873"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.882" endtime="20201029 12:43:55.898"></status>
</kw>
<msg timestamp="20201029 12:43:55.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.881" endtime="20201029 12:43:55.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.899" endtime="20201029 12:43:55.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.902" endtime="20201029 12:43:55.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.878" endtime="20201029 12:43:55.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.876" endtime="20201029 12:43:55.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.911" endtime="20201029 12:43:56.198"></status>
</kw>
<msg timestamp="20201029 12:43:56.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.910" endtime="20201029 12:43:56.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.203" endtime="20201029 12:43:56.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.213" endtime="20201029 12:43:56.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.907" endtime="20201029 12:43:56.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.905" endtime="20201029 12:43:56.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:56.221" level="INFO">${RESULT} = [{'diff': 1.1097000000001578e-05}, {'diff': 1.0818999999998719e-05}, {'diff': 1.0818999999998719e-05}, {'diff': 1.0513999999999663e-05}, {'diff': 1.0790999999999579e-05}, {'diff': 1.0195000000001037e-...</msg>
<status status="PASS" starttime="20201029 12:43:56.216" endtime="20201029 12:43:56.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:56.232" level="INFO">${ACCURACY} = {'diff': [1.1097000000001578e-05, 1.0818999999998719e-05, 1.0818999999998719e-05, 1.0513999999999663e-05, 1.0790999999999579e-05, 1.0195000000001037e-05, 1.0500000000000093e-05, 1.0541999999998802e-05...</msg>
<status status="PASS" starttime="20201029 12:43:56.223" endtime="20201029 12:43:56.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.240" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:43:56.238" endtime="20201029 12:43:56.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.244" level="INFO">VALUE: [1.1097000000001578e-05, 1.0818999999998719e-05, 1.0818999999998719e-05, 1.0513999999999663e-05, 1.0790999999999579e-05, 1.0195000000001037e-05, 1.0500000000000093e-05, 1.0541999999998802e-05, 1.0208000000001133e-05, 1.0818999999998719e-05, 1.0208000000001133e-05, 1.0485999999997053e-05, 1.0209000000000606e-05, 1.0208000000001133e-05, 1.0513999999999663e-05, 1.0540999999999329e-05, 1.0527999999999232e-05, 1.0195000000001037e-05, 1.0513999999999663e-05, 1.0513999999999663e-05, 1.0208000000001133e-05, 1.0514000000003132e-05, 1.0181000000001467e-05, 1.0486000000000523e-05, 1.0471999999997483e-05, 1.0513999999999663e-05, 1.0513999999999663e-05, 1.0513999999999663e-05, 1.0249999999999843e-05, 1.0570000000001412e-05, 1.0209000000000606e-05, 1.0513999999999663e-05, 1.0180000000001993e-05, 1.0222000000000703e-05, 1.0513999999999663e-05, 1.0556000000001842e-05, 1.0833000000001758e-05, 1.0223000000000176e-05, 1.0500000000000093e-05, 1.0194000000001563e-05, 1.0486000000000523e-05, 1.0820000000001662e-05, 1.0832999999998288e-05, 1.0167000000001897e-05, 1.0862000000000371e-05, 1.0195000000001037e-05, 1.0193999999998093e-05, 1.0846999999997858e-05, 1.0208000000001133e-05, 1.0500000000000093e-05]</msg>
<status status="PASS" starttime="20201029 12:43:56.241" endtime="20201029 12:43:56.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.233" endtime="20201029 12:43:56.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:56.251" endtime="20201029 12:43:56.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.249" endtime="20201029 12:43:56.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.248" endtime="20201029 12:43:56.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.874" endtime="20201029 12:43:56.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.873" endtime="20201029 12:43:56.272"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.281" endtime="20201029 12:43:56.295"></status>
</kw>
<msg timestamp="20201029 12:43:56.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.280" endtime="20201029 12:43:56.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.297" endtime="20201029 12:43:56.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.300" endtime="20201029 12:43:56.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.277" endtime="20201029 12:43:56.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.274" endtime="20201029 12:43:56.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.309" endtime="20201029 12:43:56.595"></status>
</kw>
<msg timestamp="20201029 12:43:56.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.307" endtime="20201029 12:43:56.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.599" endtime="20201029 12:43:56.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.607" endtime="20201029 12:43:56.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.305" endtime="20201029 12:43:56.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.303" endtime="20201029 12:43:56.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:56.614" level="INFO">${RESULT} = [{'diff': 1.2028000000000733e-05}, {'diff': 1.1125000000000718e-05}, {'diff': 1.1735999999998303e-05}, {'diff': 1.1403000000000107e-05}, {'diff': 1.1443999999999344e-05}, {'diff': 1.1735999999998303e-...</msg>
<status status="PASS" starttime="20201029 12:43:56.611" endtime="20201029 12:43:56.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:56.618" level="INFO">${ACCURACY} = {'diff': [1.2028000000000733e-05, 1.1125000000000718e-05, 1.1735999999998303e-05, 1.1403000000000107e-05, 1.1443999999999344e-05, 1.1735999999998303e-05, 1.1431000000002717e-05, 1.1736000000001773e-05...</msg>
<status status="PASS" starttime="20201029 12:43:56.615" endtime="20201029 12:43:56.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.622" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:43:56.621" endtime="20201029 12:43:56.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.625" level="INFO">VALUE: [1.2028000000000733e-05, 1.1125000000000718e-05, 1.1735999999998303e-05, 1.1403000000000107e-05, 1.1443999999999344e-05, 1.1735999999998303e-05, 1.1431000000002717e-05, 1.1736000000001773e-05, 1.1125000000000718e-05, 1.1429999999999774e-05, 1.1429999999999774e-05, 1.1736000000001773e-05, 1.1112000000000621e-05, 1.1429999999999774e-05, 1.1125000000000718e-05, 1.1416000000000204e-05, 1.1181000000002467e-05, 1.1736000000001773e-05, 1.1165999999999954e-05, 1.1416999999999677e-05, 1.1402999999996638e-05, 1.1443999999999344e-05, 1.1429999999999774e-05, 1.1722000000002203e-05, 1.1139000000000288e-05, 1.1429999999999774e-05, 1.1430999999999247e-05, 1.1707999999999164e-05, 1.1485999999998053e-05, 1.1737000000001246e-05, 1.1430999999999247e-05, 1.1124999999997248e-05, 1.1681000000002967e-05, 1.1417000000003147e-05, 1.1735999999998303e-05, 1.1429999999999774e-05, 1.1416999999999677e-05, 1.1736000000001773e-05, 1.1429999999999774e-05, 1.1736000000001773e-05, 1.1431000000002717e-05, 1.1125000000000718e-05, 1.1430999999999247e-05, 1.1735999999998303e-05, 1.1125000000000718e-05, 1.1416000000000204e-05, 1.1722999999998207e-05, 1.1749999999997873e-05, 1.1431000000002717e-05, 1.1430999999999247e-05]</msg>
<status status="PASS" starttime="20201029 12:43:56.624" endtime="20201029 12:43:56.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.619" endtime="20201029 12:43:56.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:56.630" endtime="20201029 12:43:56.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.628" endtime="20201029 12:43:56.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.627" endtime="20201029 12:43:56.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.273" endtime="20201029 12:43:56.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.272" endtime="20201029 12:43:56.651"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.660" endtime="20201029 12:43:56.675"></status>
</kw>
<msg timestamp="20201029 12:43:56.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.659" endtime="20201029 12:43:56.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.677" endtime="20201029 12:43:56.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.680" endtime="20201029 12:43:56.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.656" endtime="20201029 12:43:56.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.653" endtime="20201029 12:43:56.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.688" endtime="20201029 12:43:56.991"></status>
</kw>
<msg timestamp="20201029 12:43:56.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023557792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023571347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.687" endtime="20201029 12:43:56.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023557792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023571347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.995" endtime="20201029 12:43:57.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.004" endtime="20201029 12:43:57.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.684" endtime="20201029 12:43:57.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.683" endtime="20201029 12:43:57.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:57.011" level="INFO">${RESULT} = [{'diff': 1.355499999999843e-05}, {'diff': 1.2055999999999872e-05}, {'diff': 1.2361000000002398e-05}, {'diff': 1.2360999999998928e-05}, {'diff': 1.2652999999997888e-05}, {'diff': 1.2346999999999358e-0...</msg>
<status status="PASS" starttime="20201029 12:43:57.007" endtime="20201029 12:43:57.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:57.015" level="INFO">${ACCURACY} = {'diff': [1.355499999999843e-05, 1.2055999999999872e-05, 1.2361000000002398e-05, 1.2360999999998928e-05, 1.2652999999997888e-05, 1.2346999999999358e-05, 1.2347000000002828e-05, 1.2666000000001454e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:57.012" endtime="20201029 12:43:57.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.019" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:43:57.018" endtime="20201029 12:43:57.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.022" level="INFO">VALUE: [1.355499999999843e-05, 1.2055999999999872e-05, 1.2361000000002398e-05, 1.2360999999998928e-05, 1.2652999999997888e-05, 1.2346999999999358e-05, 1.2347000000002828e-05, 1.2666000000001454e-05, 1.2360999999998928e-05, 1.1971999999998983e-05, 1.2346999999999358e-05, 1.2055999999999872e-05, 1.2249999999998373e-05, 1.2333999999999262e-05, 1.2653000000001358e-05, 1.2042000000000302e-05, 1.2374999999998498e-05, 1.2652999999997888e-05, 1.2346999999999358e-05, 1.2333999999999262e-05, 1.2332999999999789e-05, 1.2055000000000399e-05, 1.2638999999998318e-05, 1.2042000000000302e-05, 1.2333999999999262e-05, 1.2346999999999358e-05, 1.2651999999998415e-05, 1.2347999999998832e-05, 1.2625000000002218e-05, 1.2333999999999262e-05, 1.2361000000002398e-05, 1.2638999999998318e-05, 1.2651999999998415e-05, 1.2332999999999789e-05, 1.2305000000000649e-05, 1.2652000000001884e-05, 1.2346999999999358e-05, 1.2334000000002732e-05, 1.2277999999997513e-05, 1.2624999999998748e-05, 1.2653000000001358e-05, 1.2069999999999442e-05, 1.2638999999998318e-05, 1.2361000000002398e-05, 1.2624999999998748e-05, 1.2333999999999262e-05, 1.2624999999998748e-05, 1.2665999999997984e-05, 1.2055999999999872e-05, 1.2332999999999789e-05]</msg>
<status status="PASS" starttime="20201029 12:43:57.020" endtime="20201029 12:43:57.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.016" endtime="20201029 12:43:57.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:57.027" endtime="20201029 12:43:57.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.026" endtime="20201029 12:43:57.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.025" endtime="20201029 12:43:57.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.652" endtime="20201029 12:43:57.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.651" endtime="20201029 12:43:57.048"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.056" endtime="20201029 12:43:57.072"></status>
</kw>
<msg timestamp="20201029 12:43:57.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.055" endtime="20201029 12:43:57.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.073" endtime="20201029 12:43:57.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.075" endtime="20201029 12:43:57.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.052" endtime="20201029 12:43:57.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.050" endtime="20201029 12:43:57.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.084" endtime="20201029 12:43:57.369"></status>
</kw>
<msg timestamp="20201029 12:43:57.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.083" endtime="20201029 12:43:57.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.373" endtime="20201029 12:43:57.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.382" endtime="20201029 12:43:57.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.080" endtime="20201029 12:43:57.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.079" endtime="20201029 12:43:57.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:57.388" level="INFO">${RESULT} = [{'diff': 1.504100000000036e-05}, {'diff': 1.3861000000000429e-05}, {'diff': 1.3555999999997903e-05}, {'diff': 1.3305999999997653e-05}, {'diff': 1.3584000000000512e-05}, {'diff': 1.354099999999886e-05...</msg>
<status status="PASS" starttime="20201029 12:43:57.385" endtime="20201029 12:43:57.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:57.393" level="INFO">${ACCURACY} = {'diff': [1.504100000000036e-05, 1.3861000000000429e-05, 1.3555999999997903e-05, 1.3305999999997653e-05, 1.3584000000000512e-05, 1.354099999999886e-05, 1.3569000000001469e-05, 1.3569000000001469e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:57.389" endtime="20201029 12:43:57.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.398" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:43:57.397" endtime="20201029 12:43:57.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.400" level="INFO">VALUE: [1.504100000000036e-05, 1.3861000000000429e-05, 1.3555999999997903e-05, 1.3305999999997653e-05, 1.3584000000000512e-05, 1.354099999999886e-05, 1.3569000000001469e-05, 1.3569000000001469e-05, 1.3556000000001373e-05, 1.358299999999757e-05, 1.3555999999997903e-05, 1.330499999999818e-05, 1.3598000000000082e-05, 1.330499999999818e-05, 1.326299999999947e-05, 1.3278000000001983e-05, 1.3263999999998943e-05, 1.3888000000000095e-05, 1.2944000000000844e-05, 1.354099999999886e-05, 1.3583000000001039e-05, 1.3305999999997653e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.3569999999997473e-05, 1.3569000000001469e-05, 1.3263999999998943e-05, 1.3569000000001469e-05, 1.3568999999998e-05, 1.3556000000001373e-05, 1.3305000000001649e-05, 1.3570000000000942e-05, 1.3250000000002843e-05, 1.3541999999998333e-05, 1.3570000000000942e-05, 1.3235999999999803e-05, 1.3250000000002843e-05, 1.3292000000001553e-05, 1.3263999999998943e-05, 1.3555999999997903e-05, 1.3222999999999707e-05, 1.358299999999757e-05, 1.329099999999861e-05, 1.3555000000001899e-05, 1.358299999999757e-05, 1.3555999999997903e-05, 1.3583000000001039e-05, 1.3320000000000692e-05, 1.326299999999947e-05, 1.3569999999997473e-05]</msg>
<status status="PASS" starttime="20201029 12:43:57.399" endtime="20201029 12:43:57.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.394" endtime="20201029 12:43:57.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:57.405" endtime="20201029 12:43:57.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.404" endtime="20201029 12:43:57.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.402" endtime="20201029 12:43:57.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.049" endtime="20201029 12:43:57.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.048" endtime="20201029 12:43:57.427"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.440" endtime="20201029 12:43:57.455"></status>
</kw>
<msg timestamp="20201029 12:43:57.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.438" endtime="20201029 12:43:57.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.456" endtime="20201029 12:43:57.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.459" endtime="20201029 12:43:57.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.435" endtime="20201029 12:43:57.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.431" endtime="20201029 12:43:57.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.467" endtime="20201029 12:43:57.778"></status>
</kw>
<msg timestamp="20201029 12:43:57.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027524514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027540472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.466" endtime="20201029 12:43:57.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027524514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027540472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.783" endtime="20201029 12:43:57.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.792" endtime="20201029 12:43:57.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.463" endtime="20201029 12:43:57.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.462" endtime="20201029 12:43:57.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:57.798" level="INFO">${RESULT} = [{'diff': 1.5957999999999944e-05}, {'diff': 1.4778000000000013e-05}, {'diff': 1.4569999999998473e-05}, {'diff': 1.4472000000001484e-05}, {'diff': 1.4138999999999818e-05}, {'diff': 1.4167000000002428e-...</msg>
<status status="PASS" starttime="20201029 12:43:57.795" endtime="20201029 12:43:57.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:57.803" level="INFO">${ACCURACY} = {'diff': [1.5957999999999944e-05, 1.4778000000000013e-05, 1.4569999999998473e-05, 1.4472000000001484e-05, 1.4138999999999818e-05, 1.4167000000002428e-05, 1.4485999999997584e-05, 1.4180000000002524e-05...</msg>
<status status="PASS" starttime="20201029 12:43:57.799" endtime="20201029 12:43:57.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.808" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:43:57.806" endtime="20201029 12:43:57.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.811" level="INFO">VALUE: [1.5957999999999944e-05, 1.4778000000000013e-05, 1.4569999999998473e-05, 1.4472000000001484e-05, 1.4138999999999818e-05, 1.4167000000002428e-05, 1.4485999999997584e-05, 1.4180000000002524e-05, 1.4166999999998958e-05, 1.4429999999999304e-05, 1.4457999999998444e-05, 1.4138000000000345e-05, 1.4500000000000624e-05, 1.4179999999999054e-05, 1.479100000000011e-05, 1.4791999999999583e-05, 1.4166999999998958e-05, 1.4429999999999304e-05, 1.4500000000000624e-05, 1.4179999999999054e-05, 1.4430999999998778e-05, 1.4541999999999333e-05, 1.4500000000000624e-05, 1.4472000000001484e-05, 1.4457999999998444e-05, 1.4416000000003204e-05, 1.4165999999999485e-05, 1.4472000000001484e-05, 1.4166999999998958e-05, 1.4181000000001998e-05, 1.4791999999999583e-05, 1.4195000000001567e-05, 1.4820000000002193e-05, 1.4179999999999054e-05, 1.4555999999998903e-05, 1.4472999999997488e-05, 1.4778000000000013e-05, 1.4195000000001567e-05, 1.4165999999999485e-05, 1.4805999999999153e-05, 1.4429999999999304e-05, 1.479100000000011e-05, 1.4486000000001054e-05, 1.4527999999999763e-05, 1.452700000000029e-05, 1.4471999999998014e-05, 1.4180999999998528e-05, 1.4486000000001054e-05, 1.4471999999998014e-05, 1.481899999999925e-05]</msg>
<status status="PASS" starttime="20201029 12:43:57.810" endtime="20201029 12:43:57.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.804" endtime="20201029 12:43:57.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:57.850" endtime="20201029 12:43:57.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.849" endtime="20201029 12:43:57.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.847" endtime="20201029 12:43:57.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.429" endtime="20201029 12:43:57.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.428" endtime="20201029 12:43:57.871"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.880" endtime="20201029 12:43:57.896"></status>
</kw>
<msg timestamp="20201029 12:43:57.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.878" endtime="20201029 12:43:57.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.898" endtime="20201029 12:43:57.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.900" endtime="20201029 12:43:57.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.875" endtime="20201029 12:43:57.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.873" endtime="20201029 12:43:57.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.910" endtime="20201029 12:43:58.196"></status>
</kw>
<msg timestamp="20201029 12:43:58.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023668694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023684694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.908" endtime="20201029 12:43:58.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023668694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023684694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.200" endtime="20201029 12:43:58.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.210" endtime="20201029 12:43:58.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.906" endtime="20201029 12:43:58.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.904" endtime="20201029 12:43:58.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.217" level="INFO">${RESULT} = [{'diff': 1.5999999999998654e-05}, {'diff': 1.5707999999999694e-05}, {'diff': 1.57629999999985e-05}, {'diff': 1.540300000000064e-05}, {'diff': 1.538900000000107e-05}, {'diff': 1.541699999999674e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:58.213" endtime="20201029 12:43:58.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.221" level="INFO">${ACCURACY} = {'diff': [1.5999999999998654e-05, 1.5707999999999694e-05, 1.57629999999985e-05, 1.540300000000064e-05, 1.538900000000107e-05, 1.541699999999674e-05, 1.540300000000064e-05, 1.508299999999907e-05, 1.538...</msg>
<status status="PASS" starttime="20201029 12:43:58.218" endtime="20201029 12:43:58.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.227" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.225" endtime="20201029 12:43:58.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.231" level="INFO">VALUE: [1.5999999999998654e-05, 1.5707999999999694e-05, 1.57629999999985e-05, 1.540300000000064e-05, 1.538900000000107e-05, 1.541699999999674e-05, 1.540300000000064e-05, 1.508299999999907e-05, 1.538900000000107e-05, 1.5111000000001679e-05, 1.537499999999803e-05, 1.5708999999999168e-05, 1.538900000000107e-05, 1.5401999999997695e-05, 1.5097000000002109e-05, 1.538900000000107e-05, 1.540300000000064e-05, 1.540299999999717e-05, 1.541700000000021e-05, 1.5319999999999223e-05, 1.541700000000021e-05, 1.5694999999999598e-05, 1.5443999999999874e-05, 1.508299999999907e-05, 1.5722999999998738e-05, 1.5680000000000555e-05, 1.537499999999803e-05, 1.509699999999864e-05, 1.5028000000000263e-05, 1.5707999999999694e-05, 1.5333999999998793e-05, 1.50689999999995e-05, 1.5708999999999168e-05, 1.540300000000064e-05, 1.5694999999999598e-05, 1.538900000000107e-05, 1.538900000000107e-05, 1.538900000000107e-05, 1.5097000000002109e-05, 1.5735999999998834e-05, 1.5319999999999223e-05, 1.536099999999846e-05, 1.53750000000015e-05, 1.5680000000000555e-05, 1.5694999999999598e-05, 1.508299999999907e-05, 1.5694999999999598e-05, 1.5084000000002012e-05, 1.5707999999999694e-05, 1.540300000000064e-05]</msg>
<status status="PASS" starttime="20201029 12:43:58.229" endtime="20201029 12:43:58.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.222" endtime="20201029 12:43:58.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.241" endtime="20201029 12:43:58.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.238" endtime="20201029 12:43:58.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.236" endtime="20201029 12:43:58.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.872" endtime="20201029 12:43:58.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.871" endtime="20201029 12:43:58.262"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.271" endtime="20201029 12:43:58.286"></status>
</kw>
<msg timestamp="20201029 12:43:58.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.269" endtime="20201029 12:43:58.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.287" endtime="20201029 12:43:58.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.290" endtime="20201029 12:43:58.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.266" endtime="20201029 12:43:58.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.264" endtime="20201029 12:43:58.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.299" endtime="20201029 12:43:58.585"></status>
</kw>
<msg timestamp="20201029 12:43:58.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.298" endtime="20201029 12:43:58.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.589" endtime="20201029 12:43:58.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.600" endtime="20201029 12:43:58.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.295" endtime="20201029 12:43:58.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.293" endtime="20201029 12:43:58.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.606" level="INFO">${RESULT} = [{'diff': 1.7527999999999294e-05}, {'diff': 1.658300000000057e-05}, {'diff': 1.636099999999946e-05}, {'diff': 1.631900000000075e-05}, {'diff': 1.663899999999885e-05}, {'diff': 1.6709000000000168e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:58.603" endtime="20201029 12:43:58.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.611" level="INFO">${ACCURACY} = {'diff': [1.7527999999999294e-05, 1.658300000000057e-05, 1.636099999999946e-05, 1.631900000000075e-05, 1.663899999999885e-05, 1.6709000000000168e-05, 1.655499999999796e-05, 1.662499999999928e-05, 1.66...</msg>
<status status="PASS" starttime="20201029 12:43:58.607" endtime="20201029 12:43:58.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.616" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.615" endtime="20201029 12:43:58.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.618" level="INFO">VALUE: [1.7527999999999294e-05, 1.658300000000057e-05, 1.636099999999946e-05, 1.631900000000075e-05, 1.663899999999885e-05, 1.6709000000000168e-05, 1.655499999999796e-05, 1.662499999999928e-05, 1.662499999999928e-05, 1.634699999999989e-05, 1.630500000000118e-05, 1.662499999999928e-05, 1.661100000000318e-05, 1.633300000000032e-05, 1.6306000000000653e-05, 1.662499999999928e-05, 1.663899999999885e-05, 1.662499999999928e-05, 1.5985999999999084e-05, 1.629100000000161e-05, 1.6235999999999334e-05, 1.662499999999928e-05, 1.663900000000232e-05, 1.662499999999928e-05, 1.630500000000118e-05, 1.631900000000075e-05, 1.662499999999928e-05, 1.6320000000000223e-05, 1.634699999999989e-05, 1.668100000000103e-05, 1.5999999999998654e-05, 1.6320000000000223e-05, 1.631899999999728e-05, 1.6320000000000223e-05, 1.6611999999999183e-05, 1.631900000000075e-05, 1.662500000000275e-05, 1.662499999999928e-05, 1.6306000000000653e-05, 1.631900000000075e-05, 1.631900000000075e-05, 1.659700000000014e-05, 1.661099999999971e-05, 1.5999999999998654e-05, 1.6333999999999793e-05, 1.631900000000075e-05, 1.663899999999885e-05, 1.6569999999997004e-05, 1.6306000000000653e-05, 1.633300000000032e-05]</msg>
<status status="PASS" starttime="20201029 12:43:58.617" endtime="20201029 12:43:58.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.612" endtime="20201029 12:43:58.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.623" endtime="20201029 12:43:58.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.622" endtime="20201029 12:43:58.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.620" endtime="20201029 12:43:58.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.263" endtime="20201029 12:43:58.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.262" endtime="20201029 12:43:58.644"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.652" endtime="20201029 12:43:58.667"></status>
</kw>
<msg timestamp="20201029 12:43:58.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.651" endtime="20201029 12:43:58.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.669" endtime="20201029 12:43:58.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.671" endtime="20201029 12:43:58.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.648" endtime="20201029 12:43:58.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.646" endtime="20201029 12:43:58.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.680" endtime="20201029 12:43:58.967"></status>
</kw>
<msg timestamp="20201029 12:43:58.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:58.679" endtime="20201029 12:43:58.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:58.972" endtime="20201029 12:43:58.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.980" endtime="20201029 12:43:58.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.676" endtime="20201029 12:43:58.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.674" endtime="20201029 12:43:58.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.987" level="INFO">${RESULT} = [{'diff': 1.811100000000121e-05}, {'diff': 1.783299999999835e-05}, {'diff': 1.7541999999998864e-05}, {'diff': 1.754099999999939e-05}, {'diff': 1.687499999999953e-05}, {'diff': 1.7221999999997295e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:58.983" endtime="20201029 12:43:58.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.991" level="INFO">${ACCURACY} = {'diff': [1.811100000000121e-05, 1.783299999999835e-05, 1.7541999999998864e-05, 1.754099999999939e-05, 1.687499999999953e-05, 1.7221999999997295e-05, 1.7165999999999015e-05, 1.7542000000002334e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:43:58.988" endtime="20201029 12:43:58.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.995" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.994" endtime="20201029 12:43:58.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.998" level="INFO">VALUE: [1.811100000000121e-05, 1.783299999999835e-05, 1.7541999999998864e-05, 1.754099999999939e-05, 1.687499999999953e-05, 1.7221999999997295e-05, 1.7165999999999015e-05, 1.7542000000002334e-05, 1.752699999999982e-05, 1.7527999999999294e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7236000000000334e-05, 1.7541999999998864e-05, 1.7542000000002334e-05, 1.7236999999999808e-05, 1.7541999999998864e-05, 1.755499999999896e-05, 1.7236000000000334e-05, 1.7555999999998434e-05, 1.752699999999982e-05, 1.786100000000096e-05, 1.7207999999997725e-05, 1.7222000000000764e-05, 1.755499999999896e-05, 1.7556000000001903e-05, 1.754099999999939e-05, 1.7542000000002334e-05, 1.755499999999896e-05, 1.781899999999878e-05, 1.7513999999999724e-05, 1.7236000000000334e-05, 1.781899999999878e-05, 1.7222000000000764e-05, 1.7208000000001195e-05, 1.7556000000001903e-05, 1.754099999999939e-05, 1.7236000000000334e-05, 1.7541999999998864e-05, 1.6929999999998335e-05, 1.7221999999997295e-05, 1.7541999999998864e-05, 1.7180000000002055e-05, 1.784699999999792e-05, 1.7209000000000668e-05, 1.7848000000000863e-05, 1.7541999999998864e-05, 1.7236000000000334e-05, 1.7236000000000334e-05, 1.7486000000000584e-05]</msg>
<status status="PASS" starttime="20201029 12:43:58.996" endtime="20201029 12:43:58.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.992" endtime="20201029 12:43:58.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:59.003" endtime="20201029 12:43:59.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.001" endtime="20201029 12:43:59.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.000" endtime="20201029 12:43:59.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.645" endtime="20201029 12:43:59.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.644" endtime="20201029 12:43:59.023"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.032" endtime="20201029 12:43:59.048"></status>
</kw>
<msg timestamp="20201029 12:43:59.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.031" endtime="20201029 12:43:59.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.050" endtime="20201029 12:43:59.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.052" endtime="20201029 12:43:59.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.028" endtime="20201029 12:43:59.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.026" endtime="20201029 12:43:59.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.061" endtime="20201029 12:43:59.347"></status>
</kw>
<msg timestamp="20201029 12:43:59.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023065167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023084806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.060" endtime="20201029 12:43:59.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023065167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023084806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.352" endtime="20201029 12:43:59.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.360" endtime="20201029 12:43:59.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.057" endtime="20201029 12:43:59.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.055" endtime="20201029 12:43:59.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:59.366" level="INFO">${RESULT} = [{'diff': 1.963899999999838e-05}, {'diff': 1.8778000000000544e-05}, {'diff': 1.843099999999931e-05}, {'diff': 1.8750000000001404e-05}, {'diff': 1.815299999999992e-05}, {'diff': 1.815299999999992e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:59.363" endtime="20201029 12:43:59.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:59.371" level="INFO">${ACCURACY} = {'diff': [1.963899999999838e-05, 1.8778000000000544e-05, 1.843099999999931e-05, 1.8750000000001404e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.8486000000001584e-05, 1.8...</msg>
<status status="PASS" starttime="20201029 12:43:59.368" endtime="20201029 12:43:59.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.375" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:43:59.374" endtime="20201029 12:43:59.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.378" level="INFO">VALUE: [1.963899999999838e-05, 1.8778000000000544e-05, 1.843099999999931e-05, 1.8750000000001404e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.8486000000001584e-05, 1.8750000000001404e-05, 1.816699999999949e-05, 1.815299999999992e-05, 1.8764000000000974e-05, 1.815299999999992e-05, 1.8457999999998975e-05, 1.845899999999845e-05, 1.8443999999999405e-05, 1.8152000000000446e-05, 1.8457999999998975e-05, 1.8457999999998975e-05, 1.818099999999906e-05, 1.8680000000000085e-05, 1.845900000000192e-05, 1.8764000000000974e-05, 1.8179999999999585e-05, 1.8152000000000446e-05, 1.8820000000002723e-05, 1.845900000000192e-05, 1.8179999999999585e-05, 1.8764000000000974e-05, 1.843099999999931e-05, 1.811099999999774e-05, 1.816699999999949e-05, 1.812500000000078e-05, 1.8764000000000974e-05, 1.8485999999998115e-05, 1.845899999999845e-05, 1.8137999999997406e-05, 1.8458000000002445e-05, 1.8457999999998975e-05, 1.815299999999992e-05, 1.8443999999999405e-05, 1.8402000000000696e-05, 1.816699999999949e-05, 1.845900000000192e-05, 1.815299999999992e-05, 1.812500000000078e-05, 1.818099999999906e-05, 1.8486000000001584e-05, 1.884699999999892e-05, 1.844499999999888e-05]</msg>
<status status="PASS" starttime="20201029 12:43:59.376" endtime="20201029 12:43:59.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.372" endtime="20201029 12:43:59.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:59.383" endtime="20201029 12:43:59.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.382" endtime="20201029 12:43:59.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.381" endtime="20201029 12:43:59.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.024" endtime="20201029 12:43:59.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.024" endtime="20201029 12:43:59.404"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.412" endtime="20201029 12:43:59.427"></status>
</kw>
<msg timestamp="20201029 12:43:59.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.411" endtime="20201029 12:43:59.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.429" endtime="20201029 12:43:59.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.431" endtime="20201029 12:43:59.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.408" endtime="20201029 12:43:59.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.406" endtime="20201029 12:43:59.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.440" endtime="20201029 12:43:59.726"></status>
</kw>
<msg timestamp="20201029 12:43:59.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021784431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.439" endtime="20201029 12:43:59.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021784431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.730" endtime="20201029 12:43:59.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.738" endtime="20201029 12:43:59.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.436" endtime="20201029 12:43:59.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.434" endtime="20201029 12:43:59.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:59.745" level="INFO">${RESULT} = [{'diff': 2.0888000000000156e-05}, {'diff': 1.994500000000038e-05}, {'diff': 1.934699999999942e-05}, {'diff': 1.966699999999752e-05}, {'diff': 1.9042000000000364e-05}, {'diff': 1.9666000000001516e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:59.741" endtime="20201029 12:43:59.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:59.752" level="INFO">${ACCURACY} = {'diff': [2.0888000000000156e-05, 1.994500000000038e-05, 1.934699999999942e-05, 1.966699999999752e-05, 1.9042000000000364e-05, 1.9666000000001516e-05, 1.9680000000001086e-05, 1.9069999999999504e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:43:59.746" endtime="20201029 12:43:59.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.756" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:43:59.756" endtime="20201029 12:43:59.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.759" level="INFO">VALUE: [2.0888000000000156e-05, 1.994500000000038e-05, 1.934699999999942e-05, 1.966699999999752e-05, 1.9042000000000364e-05, 1.9666000000001516e-05, 1.9680000000001086e-05, 1.9069999999999504e-05, 1.9069999999999504e-05, 1.9708000000000225e-05, 1.9361999999998464e-05, 1.966700000000099e-05, 1.940300000000117e-05, 1.906900000000003e-05, 1.9680000000001086e-05, 1.997299999999952e-05, 1.937500000000203e-05, 1.969500000000013e-05, 1.9348000000002363e-05, 1.938899999999813e-05, 1.936099999999899e-05, 1.943099999999684e-05, 1.9708000000000225e-05, 1.9042000000000364e-05, 1.93890000000016e-05, 1.936100000000246e-05, 1.965300000000142e-05, 1.9069999999999504e-05, 1.941700000000074e-05, 1.937500000000203e-05, 1.9693999999997186e-05, 1.966699999999752e-05, 1.937499999999856e-05, 1.93890000000016e-05, 1.9666000000001516e-05, 1.936100000000246e-05, 1.934699999999942e-05, 1.93890000000016e-05, 1.9306000000000184e-05, 1.902699999999785e-05, 1.9693999999997186e-05, 1.936100000000246e-05, 1.9014000000001224e-05, 1.934699999999942e-05, 1.937499999999856e-05, 1.969500000000013e-05, 1.9055999999999934e-05, 1.9958000000000475e-05, 1.9069999999999504e-05, 1.969500000000013e-05]</msg>
<status status="PASS" starttime="20201029 12:43:59.758" endtime="20201029 12:43:59.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.753" endtime="20201029 12:43:59.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:59.764" endtime="20201029 12:43:59.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.762" endtime="20201029 12:43:59.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.761" endtime="20201029 12:43:59.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.405" endtime="20201029 12:43:59.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.404" endtime="20201029 12:43:59.785"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.793" endtime="20201029 12:43:59.808"></status>
</kw>
<msg timestamp="20201029 12:43:59.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.792" endtime="20201029 12:43:59.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.809" endtime="20201029 12:43:59.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.812" endtime="20201029 12:43:59.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.789" endtime="20201029 12:43:59.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.787" endtime="20201029 12:43:59.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.821" endtime="20201029 12:44:00.149"></status>
</kw>
<msg timestamp="20201029 12:44:00.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.819" endtime="20201029 12:44:00.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.153" endtime="20201029 12:44:00.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.162" endtime="20201029 12:44:00.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.817" endtime="20201029 12:44:00.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.815" endtime="20201029 12:44:00.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:00.168" level="INFO">${RESULT} = [{'diff': 2.1500000000000685e-05}, {'diff': 1.9972000000000045e-05}, {'diff': 2.05830000000011e-05}, {'diff': 2.0292000000001614e-05}, {'diff': 2.05969999999972e-05}, {'diff': 2.0278000000002044e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:00.165" endtime="20201029 12:44:00.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:00.172" level="INFO">${ACCURACY} = {'diff': [2.1500000000000685e-05, 1.9972000000000045e-05, 2.05830000000011e-05, 2.0292000000001614e-05, 2.05969999999972e-05, 2.0278000000002044e-05, 2.0598000000000144e-05, 2.0263999999999005e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:44:00.169" endtime="20201029 12:44:00.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.177" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:44:00.176" endtime="20201029 12:44:00.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.179" level="INFO">VALUE: [2.1500000000000685e-05, 1.9972000000000045e-05, 2.05830000000011e-05, 2.0292000000001614e-05, 2.05969999999972e-05, 2.0278000000002044e-05, 2.0598000000000144e-05, 2.0263999999999005e-05, 1.995899999999995e-05, 2.0264000000002474e-05, 2.056900000000153e-05, 2.0347999999999894e-05, 2.0264000000002474e-05, 2.0235999999999865e-05, 2.0264000000002474e-05, 2.030500000000171e-05, 2.0291999999998145e-05, 2.05830000000011e-05, 2.0291999999998145e-05, 1.9972000000000045e-05, 2.056900000000153e-05, 2.030500000000171e-05, 2.027700000000257e-05, 2.0278000000002044e-05, 2.0292000000001614e-05, 2.059700000000067e-05, 2.059700000000067e-05, 1.9958000000000475e-05, 2.0291999999998145e-05, 2.030499999999824e-05, 2.0277999999998575e-05, 2.059700000000067e-05, 2.0292000000001614e-05, 2.059700000000067e-05, 2.031900000000128e-05, 2.065300000000242e-05, 2.065299999999895e-05, 2.059700000000067e-05, 2.030499999999824e-05, 2.063899999999938e-05, 2.0291999999998145e-05, 2.05969999999972e-05, 2.059700000000067e-05, 2.0277999999998575e-05, 2.062499999999981e-05, 2.029100000000214e-05, 2.0263999999999005e-05, 2.059700000000067e-05, 2.056899999999806e-05, 2.065300000000242e-05]</msg>
<status status="PASS" starttime="20201029 12:44:00.178" endtime="20201029 12:44:00.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.173" endtime="20201029 12:44:00.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:00.185" endtime="20201029 12:44:00.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.183" endtime="20201029 12:44:00.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.182" endtime="20201029 12:44:00.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.785" endtime="20201029 12:44:00.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.785" endtime="20201029 12:44:00.205"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.214" endtime="20201029 12:44:00.230"></status>
</kw>
<msg timestamp="20201029 12:44:00.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.213" endtime="20201029 12:44:00.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.231" endtime="20201029 12:44:00.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.234" endtime="20201029 12:44:00.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.210" endtime="20201029 12:44:00.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.208" endtime="20201029 12:44:00.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.243" endtime="20201029 12:44:00.528"></status>
</kw>
<msg timestamp="20201029 12:44:00.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.241" endtime="20201029 12:44:00.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.532" endtime="20201029 12:44:00.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.541" endtime="20201029 12:44:00.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.239" endtime="20201029 12:44:00.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.237" endtime="20201029 12:44:00.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:00.547" level="INFO">${RESULT} = [{'diff': 2.2070000000002504e-05}, {'diff': 2.181899999999931e-05}, {'diff': 2.1514000000000255e-05}, {'diff': 2.1194000000002156e-05}, {'diff': 2.1500000000000685e-05}, {'diff': 2.120899999999773e-05...</msg>
<status status="PASS" starttime="20201029 12:44:00.544" endtime="20201029 12:44:00.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:00.552" level="INFO">${ACCURACY} = {'diff': [2.2070000000002504e-05, 2.181899999999931e-05, 2.1514000000000255e-05, 2.1194000000002156e-05, 2.1500000000000685e-05, 2.120899999999773e-05, 2.1820000000002254e-05, 2.1527999999999825e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:00.548" endtime="20201029 12:44:00.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.556" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:44:00.555" endtime="20201029 12:44:00.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.559" level="INFO">VALUE: [2.2070000000002504e-05, 2.181899999999931e-05, 2.1514000000000255e-05, 2.1194000000002156e-05, 2.1500000000000685e-05, 2.120899999999773e-05, 2.1820000000002254e-05, 2.1527999999999825e-05, 2.151300000000078e-05, 2.1805999999999215e-05, 2.119499999999816e-05, 2.1527999999999825e-05, 2.1193999999998686e-05, 2.1207999999998256e-05, 2.1193999999998686e-05, 2.1222000000001295e-05, 2.181900000000278e-05, 2.1514000000000255e-05, 2.120899999999773e-05, 2.1222000000001295e-05, 2.1514000000000255e-05, 2.1514000000000255e-05, 2.12090000000012e-05, 2.1208000000001725e-05, 2.1207999999998256e-05, 2.1500000000000685e-05, 2.1514000000000255e-05, 2.151300000000078e-05, 2.1222000000001295e-05, 2.1514000000000255e-05, 2.1486000000001115e-05, 2.1514000000000255e-05, 2.120899999999773e-05, 2.1207999999998256e-05, 2.1500000000000685e-05, 2.180499999999974e-05, 2.1500000000000685e-05, 2.1485999999997646e-05, 2.1471999999998076e-05, 2.1486000000001115e-05, 2.181900000000278e-05, 2.116700000000249e-05, 2.1193999999998686e-05, 2.1514000000000255e-05, 2.119500000000163e-05, 2.1514000000000255e-05, 2.1500000000000685e-05, 2.1500000000000685e-05, 2.1527999999999825e-05, 2.1514000000000255e-05]</msg>
<status status="PASS" starttime="20201029 12:44:00.557" endtime="20201029 12:44:00.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.553" endtime="20201029 12:44:00.560"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:00.564" endtime="20201029 12:44:00.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.562" endtime="20201029 12:44:00.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.561" endtime="20201029 12:44:00.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.206" endtime="20201029 12:44:00.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.206" endtime="20201029 12:44:00.584"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.593" endtime="20201029 12:44:00.608"></status>
</kw>
<msg timestamp="20201029 12:44:00.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.591" endtime="20201029 12:44:00.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.610" endtime="20201029 12:44:00.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.612" endtime="20201029 12:44:00.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.589" endtime="20201029 12:44:00.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.587" endtime="20201029 12:44:00.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.621" endtime="20201029 12:44:00.906"></status>
</kw>
<msg timestamp="20201029 12:44:00.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021777611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.620" endtime="20201029 12:44:00.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021777611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.911" endtime="20201029 12:44:00.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.919" endtime="20201029 12:44:00.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.617" endtime="20201029 12:44:00.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.615" endtime="20201029 12:44:00.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:00.926" level="INFO">${RESULT} = [{'diff': 2.3943999999997967e-05}, {'diff': 2.273700000000184e-05}, {'diff': 2.215300000000045e-05}, {'diff': 2.241700000000027e-05}, {'diff': 2.27229999999988e-05}, {'diff': 2.2429999999996897e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:00.923" endtime="20201029 12:44:00.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:00.930" level="INFO">${ACCURACY} = {'diff': [2.3943999999997967e-05, 2.273700000000184e-05, 2.215300000000045e-05, 2.241700000000027e-05, 2.27229999999988e-05, 2.2429999999996897e-05, 2.2401999999997757e-05, 2.244499999999941e-05, 2.21...</msg>
<status status="PASS" starttime="20201029 12:44:00.927" endtime="20201029 12:44:00.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.934" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:44:00.933" endtime="20201029 12:44:00.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.937" level="INFO">VALUE: [2.3943999999997967e-05, 2.273700000000184e-05, 2.215300000000045e-05, 2.241700000000027e-05, 2.27229999999988e-05, 2.2429999999996897e-05, 2.2401999999997757e-05, 2.244499999999941e-05, 2.212500000000131e-05, 2.2749999999998466e-05, 2.243099999999984e-05, 2.2443999999999936e-05, 2.243099999999984e-05, 2.2166000000000546e-05, 2.2416000000000796e-05, 2.2402000000001226e-05, 2.2138000000001407e-05, 2.241700000000027e-05, 2.2430000000000366e-05, 2.238900000000113e-05, 2.2443999999999936e-05, 2.236099999999852e-05, 2.2792000000000645e-05, 2.211099999999827e-05, 2.2430000000000366e-05, 2.2430000000000366e-05, 2.2098000000001644e-05, 2.2443999999999936e-05, 2.2430000000000366e-05, 2.212500000000131e-05, 2.241700000000027e-05, 2.2415999999997327e-05, 2.213900000000088e-05, 2.2792000000000645e-05, 2.243099999999984e-05, 2.241700000000027e-05, 2.2430000000000366e-05, 2.2472000000002545e-05, 2.2722000000002796e-05, 2.2777999999997606e-05, 2.2694000000000186e-05, 2.212499999999784e-05, 2.2430000000000366e-05, 2.2069999999999035e-05, 2.2735999999998896e-05, 2.2430000000000366e-05, 2.2430000000000366e-05, 2.2443999999999936e-05, 2.208299999999913e-05, 2.2721999999999326e-05]</msg>
<status status="PASS" starttime="20201029 12:44:00.935" endtime="20201029 12:44:00.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.931" endtime="20201029 12:44:00.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:00.942" endtime="20201029 12:44:00.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.940" endtime="20201029 12:44:00.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.939" endtime="20201029 12:44:00.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.585" endtime="20201029 12:44:00.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.585" endtime="20201029 12:44:00.962"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.971" endtime="20201029 12:44:00.987"></status>
</kw>
<msg timestamp="20201029 12:44:00.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.969" endtime="20201029 12:44:00.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.989" endtime="20201029 12:44:00.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.991" endtime="20201029 12:44:00.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.967" endtime="20201029 12:44:00.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.965" endtime="20201029 12:44:00.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.000" endtime="20201029 12:44:01.284"></status>
</kw>
<msg timestamp="20201029 12:44:01.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022840139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.999" endtime="20201029 12:44:01.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022840139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.289" endtime="20201029 12:44:01.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.297" endtime="20201029 12:44:01.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.996" endtime="20201029 12:44:01.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.994" endtime="20201029 12:44:01.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:01.304" level="INFO">${RESULT} = [{'diff': 2.4249999999999966e-05}, {'diff': 2.365299999999848e-05}, {'diff': 2.3999999999999716e-05}, {'diff': 2.3278000000001575e-05}, {'diff': 2.365299999999848e-05}, {'diff': 2.3320000000000285e-05...</msg>
<status status="PASS" starttime="20201029 12:44:01.301" endtime="20201029 12:44:01.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:01.308" level="INFO">${ACCURACY} = {'diff': [2.4249999999999966e-05, 2.365299999999848e-05, 2.3999999999999716e-05, 2.3278000000001575e-05, 2.365299999999848e-05, 2.3320000000000285e-05, 2.3262999999999062e-05, 2.363899999999891e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:01.305" endtime="20201029 12:44:01.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.312" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:44:01.311" endtime="20201029 12:44:01.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.316" level="INFO">VALUE: [2.4249999999999966e-05, 2.365299999999848e-05, 2.3999999999999716e-05, 2.3278000000001575e-05, 2.365299999999848e-05, 2.3320000000000285e-05, 2.3262999999999062e-05, 2.363899999999891e-05, 2.336100000000299e-05, 2.3333999999999855e-05, 2.333300000000038e-05, 2.368100000000109e-05, 2.361099999999977e-05, 2.3306000000000715e-05, 2.337499999999909e-05, 2.3333999999999855e-05, 2.363900000000238e-05, 2.3333999999999855e-05, 2.362500000000281e-05, 2.3250000000002435e-05, 2.334699999999995e-05, 2.3333999999999855e-05, 2.363900000000238e-05, 2.336099999999952e-05, 2.337500000000256e-05, 2.334699999999995e-05, 2.336100000000299e-05, 2.3263999999998536e-05, 2.3332999999996912e-05, 2.365300000000195e-05, 2.334699999999995e-05, 2.3056000000000465e-05, 2.365299999999848e-05, 2.3042000000000895e-05, 2.363899999999891e-05, 2.3028000000001325e-05, 2.3972000000000576e-05, 2.333300000000038e-05, 2.361099999999977e-05, 2.3568999999997592e-05, 2.3041999999997426e-05, 2.365300000000195e-05, 2.3651999999999007e-05, 2.363899999999891e-05, 2.334699999999995e-05, 2.3693999999997717e-05, 2.334699999999995e-05, 2.3306000000000715e-05, 2.306900000000056e-05, 2.366699999999805e-05]</msg>
<status status="PASS" starttime="20201029 12:44:01.313" endtime="20201029 12:44:01.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.309" endtime="20201029 12:44:01.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.321" endtime="20201029 12:44:01.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.319" endtime="20201029 12:44:01.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.318" endtime="20201029 12:44:01.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.963" endtime="20201029 12:44:01.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.963" endtime="20201029 12:44:01.341"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.350" endtime="20201029 12:44:01.365"></status>
</kw>
<msg timestamp="20201029 12:44:01.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.348" endtime="20201029 12:44:01.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.367" endtime="20201029 12:44:01.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.369" endtime="20201029 12:44:01.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.346" endtime="20201029 12:44:01.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.344" endtime="20201029 12:44:01.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.378" endtime="20201029 12:44:01.664"></status>
</kw>
<msg timestamp="20201029 12:44:01.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021843389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.377" endtime="20201029 12:44:01.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021843389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.669" endtime="20201029 12:44:01.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.679" endtime="20201029 12:44:01.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.374" endtime="20201029 12:44:01.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.373" endtime="20201029 12:44:01.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:01.688" level="INFO">${RESULT} = [{'diff': 2.5457999999999037e-05}, {'diff': 2.3944000000001436e-05}, {'diff': 2.4555999999998496e-05}, {'diff': 2.4305999999998246e-05}, {'diff': 2.4612000000000245e-05}, {'diff': 2.4277999999999106e-...</msg>
<status status="PASS" starttime="20201029 12:44:01.684" endtime="20201029 12:44:01.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:01.693" level="INFO">${ACCURACY} = {'diff': [2.5457999999999037e-05, 2.3944000000001436e-05, 2.4555999999998496e-05, 2.4305999999998246e-05, 2.4612000000000245e-05, 2.4277999999999106e-05, 2.458300000000163e-05, 2.39030000000022e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:01.689" endtime="20201029 12:44:01.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.697" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:44:01.696" endtime="20201029 12:44:01.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.700" level="INFO">VALUE: [2.5457999999999037e-05, 2.3944000000001436e-05, 2.4555999999998496e-05, 2.4305999999998246e-05, 2.4612000000000245e-05, 2.4277999999999106e-05, 2.458300000000163e-05, 2.39030000000022e-05, 2.461100000000077e-05, 2.4263999999999536e-05, 2.4500000000000216e-05, 2.4194000000001686e-05, 2.4263999999999536e-05, 2.4568999999998592e-05, 2.4277999999999106e-05, 2.4277999999999106e-05, 2.487500000000059e-05, 2.4249999999999966e-05, 2.487500000000059e-05, 2.4513999999999786e-05, 2.4249999999999966e-05, 2.395900000000048e-05, 2.4291999999998676e-05, 2.458300000000163e-05, 2.4556000000001965e-05, 2.4291999999998676e-05, 2.4568999999998592e-05, 2.4568999999998592e-05, 2.4582999999998162e-05, 2.4568999999998592e-05, 2.4263999999999536e-05, 2.4291999999998676e-05, 2.4236000000000396e-05, 2.4249999999999966e-05, 2.4264000000003005e-05, 2.4263000000000062e-05, 2.3972000000000576e-05, 2.4249999999999966e-05, 2.4222000000000826e-05, 2.4263999999999536e-05, 2.4263999999999536e-05, 2.4569999999998066e-05, 2.4334000000000855e-05, 2.4249999999999966e-05, 2.4556000000001965e-05, 2.487500000000059e-05, 2.419500000000116e-05, 2.4276999999999632e-05, 2.3943999999997967e-05, 2.484700000000145e-05]</msg>
<status status="PASS" starttime="20201029 12:44:01.698" endtime="20201029 12:44:01.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.694" endtime="20201029 12:44:01.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.705" endtime="20201029 12:44:01.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.703" endtime="20201029 12:44:01.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.702" endtime="20201029 12:44:01.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.342" endtime="20201029 12:44:01.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.342" endtime="20201029 12:44:01.725"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.738" endtime="20201029 12:44:01.753"></status>
</kw>
<msg timestamp="20201029 12:44:01.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.732" endtime="20201029 12:44:01.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.755" endtime="20201029 12:44:01.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.757" endtime="20201029 12:44:01.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.730" endtime="20201029 12:44:01.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.728" endtime="20201029 12:44:01.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.766" endtime="20201029 12:44:02.068"></status>
</kw>
<msg timestamp="20201029 12:44:02.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026239569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026266014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.765" endtime="20201029 12:44:02.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026239569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026266014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.078" endtime="20201029 12:44:02.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.087" endtime="20201029 12:44:02.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.762" endtime="20201029 12:44:02.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.761" endtime="20201029 12:44:02.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:02.093" level="INFO">${RESULT} = [{'diff': 2.644499999999994e-05}, {'diff': 2.5791000000000702e-05}, {'diff': 2.548700000000112e-05}, {'diff': 2.5179999999999647e-05}, {'diff': 2.5471999999998607e-05}, {'diff': 2.5778000000000606e-05...</msg>
<status status="PASS" starttime="20201029 12:44:02.090" endtime="20201029 12:44:02.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:02.098" level="INFO">${ACCURACY} = {'diff': [2.644499999999994e-05, 2.5791000000000702e-05, 2.548700000000112e-05, 2.5179999999999647e-05, 2.5471999999998607e-05, 2.5778000000000606e-05, 2.486100000000102e-05, 2.5778000000000606e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:02.094" endtime="20201029 12:44:02.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.102" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:44:02.101" endtime="20201029 12:44:02.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.105" level="INFO">VALUE: [2.644499999999994e-05, 2.5791000000000702e-05, 2.548700000000112e-05, 2.5179999999999647e-05, 2.5471999999998607e-05, 2.5778000000000606e-05, 2.486100000000102e-05, 2.5778000000000606e-05, 2.518100000000259e-05, 2.547300000000155e-05, 2.518099999999912e-05, 2.5777000000001132e-05, 2.5443999999999467e-05, 2.518099999999912e-05, 2.518100000000259e-05, 2.5792000000000176e-05, 2.5486000000001646e-05, 2.5472000000002076e-05, 2.5778000000000606e-05, 2.5499999999997747e-05, 2.545899999999851e-05, 2.5179999999999647e-05, 2.543099999999937e-05, 2.518099999999912e-05, 2.5790999999997233e-05, 2.5193999999999217e-05, 2.5792000000000176e-05, 2.5486000000001646e-05, 2.518100000000259e-05, 2.5499999999997747e-05, 2.5458000000002506e-05, 2.5486000000001646e-05, 2.516699999999955e-05, 2.5555999999999496e-05, 2.548699999999765e-05, 2.486100000000102e-05, 2.5500000000001216e-05, 2.5486000000001646e-05, 2.5471999999998607e-05, 2.545899999999851e-05, 2.5485999999998177e-05, 2.5193999999999217e-05, 2.515299999999998e-05, 2.5805000000000272e-05, 2.5180000000003117e-05, 2.5179999999999647e-05, 2.547299999999808e-05, 2.547299999999808e-05, 2.5471999999998607e-05, 2.5805000000000272e-05]</msg>
<status status="PASS" starttime="20201029 12:44:02.103" endtime="20201029 12:44:02.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.099" endtime="20201029 12:44:02.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:02.110" endtime="20201029 12:44:02.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.108" endtime="20201029 12:44:02.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.107" endtime="20201029 12:44:02.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.726" endtime="20201029 12:44:02.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.726" endtime="20201029 12:44:02.130"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.139" endtime="20201029 12:44:02.156"></status>
</kw>
<msg timestamp="20201029 12:44:02.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.138" endtime="20201029 12:44:02.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.157" endtime="20201029 12:44:02.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.160" endtime="20201029 12:44:02.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.135" endtime="20201029 12:44:02.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.133" endtime="20201029 12:44:02.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.169" endtime="20201029 12:44:02.455"></status>
</kw>
<msg timestamp="20201029 12:44:02.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02320325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023231167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:02.167" endtime="20201029 12:44:02.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02320325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023231167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:02.459" endtime="20201029 12:44:02.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.468" endtime="20201029 12:44:02.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.164" endtime="20201029 12:44:02.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.163" endtime="20201029 12:44:02.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:02.474" level="INFO">${RESULT} = [{'diff': 2.791699999999883e-05}, {'diff': 2.6069000000000092e-05}, {'diff': 2.638900000000166e-05}, {'diff': 2.641699999999733e-05}, {'diff': 2.6736000000002896e-05}, {'diff': 2.6721999999999857e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:02.471" endtime="20201029 12:44:02.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:02.478" level="INFO">${ACCURACY} = {'diff': [2.791699999999883e-05, 2.6069000000000092e-05, 2.638900000000166e-05, 2.641699999999733e-05, 2.6736000000002896e-05, 2.6721999999999857e-05, 2.6332999999999912e-05, 2.640300000000123e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:44:02.475" endtime="20201029 12:44:02.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.483" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:44:02.482" endtime="20201029 12:44:02.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.486" level="INFO">VALUE: [2.791699999999883e-05, 2.6069000000000092e-05, 2.638900000000166e-05, 2.641699999999733e-05, 2.6736000000002896e-05, 2.6721999999999857e-05, 2.6332999999999912e-05, 2.640300000000123e-05, 2.6374999999998622e-05, 2.640299999999776e-05, 2.669500000000019e-05, 2.638899999999819e-05, 2.638899999999819e-05, 2.6415999999997858e-05, 2.6693999999997248e-05, 2.665300000000148e-05, 2.638900000000166e-05, 2.6082999999999662e-05, 2.6708000000000287e-05, 2.6360999999999052e-05, 2.640300000000123e-05, 2.6708000000000287e-05, 2.638900000000166e-05, 2.6374999999998622e-05, 2.640300000000123e-05, 2.608300000000313e-05, 2.638899999999819e-05, 2.6083999999999136e-05, 2.6679999999997678e-05, 2.6708000000000287e-05, 2.6083999999999136e-05, 2.638900000000166e-05, 2.638899999999819e-05, 2.6082999999999662e-05, 2.638900000000166e-05, 2.641699999999733e-05, 2.6402000000001757e-05, 2.6387999999998718e-05, 2.6721999999999857e-05, 2.60970000000027e-05, 2.669500000000019e-05, 2.640300000000123e-05, 2.640299999999776e-05, 2.6402000000001757e-05, 2.6082999999999662e-05, 2.64170000000008e-05, 2.6374999999998622e-05, 2.638899999999819e-05, 2.6027999999997387e-05, 2.6708000000000287e-05]</msg>
<status status="PASS" starttime="20201029 12:44:02.484" endtime="20201029 12:44:02.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.479" endtime="20201029 12:44:02.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:02.491" endtime="20201029 12:44:02.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.489" endtime="20201029 12:44:02.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.488" endtime="20201029 12:44:02.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.131" endtime="20201029 12:44:02.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.131" endtime="20201029 12:44:02.511"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.520" endtime="20201029 12:44:02.536"></status>
</kw>
<msg timestamp="20201029 12:44:02.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.518" endtime="20201029 12:44:02.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.537" endtime="20201029 12:44:02.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.540" endtime="20201029 12:44:02.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.516" endtime="20201029 12:44:02.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.514" endtime="20201029 12:44:02.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.548" endtime="20201029 12:44:02.835"></status>
</kw>
<msg timestamp="20201029 12:44:02.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022104542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022132792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.547" endtime="20201029 12:44:02.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022104542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022132792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.840" endtime="20201029 12:44:02.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.848" endtime="20201029 12:44:02.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.544" endtime="20201029 12:44:02.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.543" endtime="20201029 12:44:02.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:02.855" level="INFO">${RESULT} = [{'diff': 2.8249999999997027e-05}, {'diff': 2.7012999999999343e-05}, {'diff': 2.7638999999999442e-05}, {'diff': 2.7319000000001342e-05}, {'diff': 2.7013999999998817e-05}, {'diff': 2.7320000000000816e-...</msg>
<status status="PASS" starttime="20201029 12:44:02.851" endtime="20201029 12:44:02.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:02.860" level="INFO">${ACCURACY} = {'diff': [2.8249999999997027e-05, 2.7012999999999343e-05, 2.7638999999999442e-05, 2.7319000000001342e-05, 2.7013999999998817e-05, 2.7320000000000816e-05, 2.7306000000001246e-05, 2.7305999999997776e-05...</msg>
<status status="PASS" starttime="20201029 12:44:02.855" endtime="20201029 12:44:02.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.864" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:44:02.863" endtime="20201029 12:44:02.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.866" level="INFO">VALUE: [2.8249999999997027e-05, 2.7012999999999343e-05, 2.7638999999999442e-05, 2.7319000000001342e-05, 2.7013999999998817e-05, 2.7320000000000816e-05, 2.7306000000001246e-05, 2.7305999999997776e-05, 2.7028000000001856e-05, 2.7305999999997776e-05, 2.6999999999999247e-05, 2.7277999999998637e-05, 2.7014000000002286e-05, 2.7929999999998928e-05, 2.7014000000002286e-05, 2.7624999999999872e-05, 2.7318999999997873e-05, 2.7319000000001342e-05, 2.7624999999999872e-05, 2.7292000000001676e-05, 2.7624999999999872e-05, 2.7334000000000386e-05, 2.7304999999998303e-05, 2.7276999999999163e-05, 2.7624999999999872e-05, 2.7556000000001496e-05, 2.7611999999999776e-05, 2.7292000000001676e-05, 2.763900000000291e-05, 2.7611000000000302e-05, 2.6999999999999247e-05, 2.7305999999997776e-05, 2.7333000000000912e-05, 2.7249999999999497e-05, 2.7333999999996916e-05, 2.7318999999997873e-05, 2.7320000000000816e-05, 2.7305999999997776e-05, 2.7624999999999872e-05, 2.7276999999999163e-05, 2.7638999999999442e-05, 2.7638999999999442e-05, 2.7624999999999872e-05, 2.7306000000001246e-05, 2.7584000000000636e-05, 2.7624999999999872e-05, 2.7320000000000816e-05, 2.7624999999999872e-05, 2.7304999999998303e-05, 2.7334000000000386e-05]</msg>
<status status="PASS" starttime="20201029 12:44:02.865" endtime="20201029 12:44:02.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.860" endtime="20201029 12:44:02.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:02.878" endtime="20201029 12:44:02.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.876" endtime="20201029 12:44:02.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.875" endtime="20201029 12:44:02.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.512" endtime="20201029 12:44:02.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.512" endtime="20201029 12:44:02.899"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.907" endtime="20201029 12:44:02.922"></status>
</kw>
<msg timestamp="20201029 12:44:02.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.906" endtime="20201029 12:44:02.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.924" endtime="20201029 12:44:02.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.926" endtime="20201029 12:44:02.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.903" endtime="20201029 12:44:02.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.901" endtime="20201029 12:44:02.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.935" endtime="20201029 12:44:03.221"></status>
</kw>
<msg timestamp="20201029 12:44:03.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.934" endtime="20201029 12:44:03.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.225" endtime="20201029 12:44:03.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.234" endtime="20201029 12:44:03.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.931" endtime="20201029 12:44:03.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.930" endtime="20201029 12:44:03.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.240" level="INFO">${RESULT} = [{'diff': 2.9749999999998528e-05}, {'diff': 2.8846999999998513e-05}, {'diff': 2.8500000000000747e-05}, {'diff': 2.8833000000002412e-05}, {'diff': 2.820899999999779e-05}, {'diff': 2.8222000000001357e-0...</msg>
<status status="PASS" starttime="20201029 12:44:03.237" endtime="20201029 12:44:03.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.244" level="INFO">${ACCURACY} = {'diff': [2.9749999999998528e-05, 2.8846999999998513e-05, 2.8500000000000747e-05, 2.8833000000002412e-05, 2.820899999999779e-05, 2.8222000000001357e-05, 2.8556000000002496e-05, 2.8249999999997027e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:03.241" endtime="20201029 12:44:03.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.249" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.248" endtime="20201029 12:44:03.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.251" level="INFO">VALUE: [2.9749999999998528e-05, 2.8846999999998513e-05, 2.8500000000000747e-05, 2.8833000000002412e-05, 2.820899999999779e-05, 2.8222000000001357e-05, 2.8556000000002496e-05, 2.8249999999997027e-05, 2.8236000000000927e-05, 2.8527999999999887e-05, 2.8568999999999123e-05, 2.8861000000001552e-05, 2.8472000000001607e-05, 2.8542000000002926e-05, 2.8527999999999887e-05, 2.8555999999999027e-05, 2.8291999999999207e-05, 2.8832999999998943e-05, 2.7958000000001537e-05, 2.8862000000001026e-05, 2.8235999999997458e-05, 2.8236000000000927e-05, 2.8207999999998318e-05, 2.8540999999999983e-05, 2.8568999999999123e-05, 2.8556000000002496e-05, 2.8514000000000317e-05, 2.8541999999999457e-05, 2.8500000000000747e-05, 2.8540999999999983e-05, 2.8222000000001357e-05, 2.8236000000000927e-05, 2.8804999999999803e-05, 2.8179999999999178e-05, 2.8527999999999887e-05, 2.8222000000001357e-05, 2.8818999999999373e-05, 2.8541999999999457e-05, 2.8540999999999983e-05, 2.82370000000004e-05, 2.8221999999997888e-05, 2.8555999999999027e-05, 2.8527999999999887e-05, 2.8208000000001787e-05, 2.8819999999998847e-05, 2.8236000000000927e-05, 2.8625000000000872e-05, 2.8250000000000497e-05, 2.8527999999999887e-05, 2.7875000000000122e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.250" endtime="20201029 12:44:03.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.245" endtime="20201029 12:44:03.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.256" endtime="20201029 12:44:03.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.255" endtime="20201029 12:44:03.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.254" endtime="20201029 12:44:03.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.900" endtime="20201029 12:44:03.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.899" endtime="20201029 12:44:03.277"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.285" endtime="20201029 12:44:03.304"></status>
</kw>
<msg timestamp="20201029 12:44:03.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.284" endtime="20201029 12:44:03.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.305" endtime="20201029 12:44:03.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.308" endtime="20201029 12:44:03.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.281" endtime="20201029 12:44:03.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.279" endtime="20201029 12:44:03.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.317" endtime="20201029 12:44:03.601"></status>
</kw>
<msg timestamp="20201029 12:44:03.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024555333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024585389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.315" endtime="20201029 12:44:03.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024555333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024585389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.605" endtime="20201029 12:44:03.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.614" endtime="20201029 12:44:03.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.313" endtime="20201029 12:44:03.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.311" endtime="20201029 12:44:03.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.620" level="INFO">${RESULT} = [{'diff': 3.0056000000000527e-05}, {'diff': 3.0069000000000623e-05}, {'diff': 2.9139000000000942e-05}, {'diff': 2.9749999999998528e-05}, {'diff': 2.9472000000002607e-05}, {'diff': 2.9486000000002177e-...</msg>
<status status="PASS" starttime="20201029 12:44:03.617" endtime="20201029 12:44:03.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.625" level="INFO">${ACCURACY} = {'diff': [3.0056000000000527e-05, 3.0069000000000623e-05, 2.9139000000000942e-05, 2.9749999999998528e-05, 2.9472000000002607e-05, 2.9486000000002177e-05, 2.9443999999999998e-05, 2.9778000000001137e-05...</msg>
<status status="PASS" starttime="20201029 12:44:03.621" endtime="20201029 12:44:03.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.629" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.628" endtime="20201029 12:44:03.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.631" level="INFO">VALUE: [3.0056000000000527e-05, 3.0069000000000623e-05, 2.9139000000000942e-05, 2.9749999999998528e-05, 2.9472000000002607e-05, 2.9486000000002177e-05, 2.9443999999999998e-05, 2.9778000000001137e-05, 2.9416000000000858e-05, 2.9139000000000942e-05, 2.9207999999999318e-05, 2.9457999999999568e-05, 2.9528000000000887e-05, 2.9778000000001137e-05, 2.9500000000001747e-05, 2.9457999999999568e-05, 2.915199999999757e-05, 2.9778000000001137e-05, 2.9457999999999568e-05, 2.9153000000000512e-05, 2.944499999999947e-05, 2.9110999999998333e-05, 2.9749999999998528e-05, 2.9735999999998958e-05, 2.9499999999998278e-05, 2.9457999999999568e-05, 2.9153000000000512e-05, 2.9389000000001192e-05, 2.9153000000000512e-05, 2.9486000000002177e-05, 2.9403000000000762e-05, 2.9457999999999568e-05, 2.9763999999998098e-05, 2.9471999999999138e-05, 2.9457999999999568e-05, 2.9153000000000512e-05, 2.945900000000251e-05, 2.9403000000000762e-05, 2.9457999999999568e-05, 2.9139000000000942e-05, 2.94309999999999e-05, 2.9153000000000512e-05, 2.915199999999757e-05, 2.9471999999999138e-05, 2.9443999999999998e-05, 2.9138999999997472e-05, 2.9167000000000082e-05, 2.9777999999997667e-05, 2.9749999999998528e-05, 2.9125000000001372e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.630" endtime="20201029 12:44:03.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.625" endtime="20201029 12:44:03.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.637" endtime="20201029 12:44:03.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.636" endtime="20201029 12:44:03.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.634" endtime="20201029 12:44:03.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.278" endtime="20201029 12:44:03.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.277" endtime="20201029 12:44:03.658"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.666" endtime="20201029 12:44:03.681"></status>
</kw>
<msg timestamp="20201029 12:44:03.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.665" endtime="20201029 12:44:03.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.683" endtime="20201029 12:44:03.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.685" endtime="20201029 12:44:03.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.662" endtime="20201029 12:44:03.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.660" endtime="20201029 12:44:03.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.694" endtime="20201029 12:44:03.978"></status>
</kw>
<msg timestamp="20201029 12:44:03.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.693" endtime="20201029 12:44:03.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.982" endtime="20201029 12:44:03.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.991" endtime="20201029 12:44:03.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.690" endtime="20201029 12:44:03.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.688" endtime="20201029 12:44:03.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.997" level="INFO">${RESULT} = [{'diff': 3.186199999999709e-05}, {'diff': 3.065199999999907e-05}, {'diff': 3.069499999999725e-05}, {'diff': 3.0056000000000527e-05}, {'diff': 3.069400000000125e-05}, {'diff': 3.069500000000072e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:03.994" endtime="20201029 12:44:03.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:04.002" level="INFO">${ACCURACY} = {'diff': [3.186199999999709e-05, 3.065199999999907e-05, 3.069499999999725e-05, 3.0056000000000527e-05, 3.069400000000125e-05, 3.069500000000072e-05, 3.0388999999998723e-05, 3.0041000000001483e-05, 3.0...</msg>
<status status="PASS" starttime="20201029 12:44:03.998" endtime="20201029 12:44:04.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.007" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:44:04.006" endtime="20201029 12:44:04.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.009" level="INFO">VALUE: [3.186199999999709e-05, 3.065199999999907e-05, 3.069499999999725e-05, 3.0056000000000527e-05, 3.069400000000125e-05, 3.069500000000072e-05, 3.0388999999998723e-05, 3.0041000000001483e-05, 3.0374999999999153e-05, 3.070800000000082e-05, 3.0070000000000097e-05, 3.068100000000115e-05, 3.0388999999998723e-05, 3.0374999999999153e-05, 3.015199999999857e-05, 3.065299999999854e-05, 3.0360999999999583e-05, 3.0375000000002622e-05, 3.044399999999753e-05, 3.0360999999999583e-05, 3.066599999999864e-05, 3.0013999999998348e-05, 3.0320000000000347e-05, 3.066700000000158e-05, 3.0374999999999153e-05, 3.0069000000000623e-05, 3.0360999999999583e-05, 3.038799999999925e-05, 3.0360999999999583e-05, 3.040199999999882e-05, 3.0374999999999153e-05, 3.0347000000000013e-05, 3.066599999999864e-05, 3.0306000000000777e-05, 3.0374999999999153e-05, 3.066599999999864e-05, 3.0083000000000193e-05, 3.072199999999692e-05, 3.066600000000211e-05, 3.0055000000001053e-05, 3.067999999999821e-05, 3.0083000000000193e-05, 3.0374999999999153e-05, 3.0360999999999583e-05, 3.068100000000115e-05, 3.067999999999821e-05, 3.0139000000001942e-05, 3.0374999999999153e-05, 3.068000000000168e-05, 3.0014000000001817e-05]</msg>
<status status="PASS" starttime="20201029 12:44:04.008" endtime="20201029 12:44:04.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.003" endtime="20201029 12:44:04.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:04.014" endtime="20201029 12:44:04.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.013" endtime="20201029 12:44:04.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.012" endtime="20201029 12:44:04.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.659" endtime="20201029 12:44:04.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.658" endtime="20201029 12:44:04.035"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.043" endtime="20201029 12:44:04.058"></status>
</kw>
<msg timestamp="20201029 12:44:04.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.042" endtime="20201029 12:44:04.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.060" endtime="20201029 12:44:04.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.062" endtime="20201029 12:44:04.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.039" endtime="20201029 12:44:04.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.037" endtime="20201029 12:44:04.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.071" endtime="20201029 12:44:04.358"></status>
</kw>
<msg timestamp="20201029 12:44:04.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.070" endtime="20201029 12:44:04.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.362" endtime="20201029 12:44:04.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.370" endtime="20201029 12:44:04.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.067" endtime="20201029 12:44:04.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.066" endtime="20201029 12:44:04.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:04.377" level="INFO">${RESULT} = [{'diff': 3.280599999999981e-05}, {'diff': 3.099999999999978e-05}, {'diff': 3.123600000000046e-05}, {'diff': 3.159799999999727e-05}, {'diff': 3.1596999999997794e-05}, {'diff': 3.129199999999874e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:04.374" endtime="20201029 12:44:04.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:04.381" level="INFO">${ACCURACY} = {'diff': [3.280599999999981e-05, 3.099999999999978e-05, 3.123600000000046e-05, 3.159799999999727e-05, 3.1596999999997794e-05, 3.129199999999874e-05, 3.130600000000178e-05, 3.129199999999874e-05, 3.129...</msg>
<status status="PASS" starttime="20201029 12:44:04.378" endtime="20201029 12:44:04.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.385" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:44:04.384" endtime="20201029 12:44:04.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.388" level="INFO">VALUE: [3.280599999999981e-05, 3.099999999999978e-05, 3.123600000000046e-05, 3.159799999999727e-05, 3.1596999999997794e-05, 3.129199999999874e-05, 3.130600000000178e-05, 3.129199999999874e-05, 3.1290999999999264e-05, 3.129199999999874e-05, 3.163899999999997e-05, 3.1554999999999084e-05, 3.161100000000083e-05, 3.1610999999997363e-05, 3.130600000000178e-05, 3.1582999999998224e-05, 3.090300000000226e-05, 3.1596999999997794e-05, 3.129200000000221e-05, 3.136100000000058e-05, 3.097200000000064e-05, 3.1596999999997794e-05, 3.120800000000132e-05, 3.130600000000178e-05, 3.098600000000021e-05, 3.156900000000212e-05, 3.16250000000004e-05, 3.1610999999997363e-05, 3.126400000000307e-05, 3.122200000000089e-05, 3.119400000000175e-05, 3.1348000000000487e-05, 3.125000000000003e-05, 3.1276999999999694e-05, 3.122299999999689e-05, 3.158300000000169e-05, 3.130599999999831e-05, 3.129200000000221e-05, 3.159700000000126e-05, 3.1290999999999264e-05, 3.134700000000101e-05, 3.159700000000126e-05, 3.122200000000089e-05, 3.1290999999999264e-05, 3.191699999999936e-05, 3.156999999999813e-05, 3.13050000000023e-05, 3.1276999999999694e-05, 3.12639999999996e-05, 3.127800000000264e-05]</msg>
<status status="PASS" starttime="20201029 12:44:04.386" endtime="20201029 12:44:04.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.382" endtime="20201029 12:44:04.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:04.393" endtime="20201029 12:44:04.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.391" endtime="20201029 12:44:04.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.390" endtime="20201029 12:44:04.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.036" endtime="20201029 12:44:04.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.035" endtime="20201029 12:44:04.414"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.423" endtime="20201029 12:44:04.440"></status>
</kw>
<msg timestamp="20201029 12:44:04.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.421" endtime="20201029 12:44:04.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.442" endtime="20201029 12:44:04.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.445" endtime="20201029 12:44:04.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.419" endtime="20201029 12:44:04.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.416" endtime="20201029 12:44:04.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.454" endtime="20201029 12:44:04.739"></status>
</kw>
<msg timestamp="20201029 12:44:04.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023472097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.452" endtime="20201029 12:44:04.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023472097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.743" endtime="20201029 12:44:04.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.752" endtime="20201029 12:44:04.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.450" endtime="20201029 12:44:04.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.448" endtime="20201029 12:44:04.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:04.758" level="INFO">${RESULT} = [{'diff': 4.2694999999998845e-05}, {'diff': 4.1709000000000884e-05}, {'diff': 4.241599999999998e-05}, {'diff': 4.230600000000237e-05}, {'diff': 4.222200000000148e-05}, {'diff': 4.220800000000191e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:04.755" endtime="20201029 12:44:04.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:04.763" level="INFO">${ACCURACY} = {'diff': [4.2694999999998845e-05, 4.1709000000000884e-05, 4.241599999999998e-05, 4.230600000000237e-05, 4.222200000000148e-05, 4.220800000000191e-05, 4.245800000000216e-05, 4.2583000000002286e-05, 4.2...</msg>
<status status="PASS" starttime="20201029 12:44:04.759" endtime="20201029 12:44:04.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.767" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:44:04.766" endtime="20201029 12:44:04.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.769" level="INFO">VALUE: [4.2694999999998845e-05, 4.1709000000000884e-05, 4.241599999999998e-05, 4.230600000000237e-05, 4.222200000000148e-05, 4.220800000000191e-05, 4.245800000000216e-05, 4.2583000000002286e-05, 4.2583000000002286e-05, 4.250000000000087e-05, 4.2568999999999246e-05, 4.242999999999955e-05, 4.2361000000001175e-05, 4.2346999999998136e-05, 4.248599999999783e-05, 4.2360999999997706e-05, 4.245799999999869e-05, 4.250000000000087e-05, 4.247199999999826e-05, 4.245799999999869e-05, 4.2582999999998816e-05, 4.242999999999955e-05, 4.223599999999758e-05, 4.226400000000019e-05, 4.219400000000234e-05, 4.222200000000148e-05, 4.2319000000002466e-05, 4.2625000000000995e-05, 4.2375000000000745e-05, 4.2389000000000315e-05, 4.2402999999999885e-05, 4.2596999999998386e-05, 4.2361000000001175e-05, 4.254199999999958e-05, 4.1903000000002855e-05, 4.1902999999999385e-05, 4.2277000000000287e-05, 4.172199999999751e-05, 4.227799999999976e-05, 4.251399999999697e-05, 4.2180999999998775e-05, 4.2417000000002925e-05, 4.2639000000000565e-05, 4.241599999999998e-05, 4.263800000000109e-05, 4.225000000000062e-05, 4.24860000000013e-05, 4.222200000000148e-05, 4.172199999999751e-05, 4.2389000000000315e-05]</msg>
<status status="PASS" starttime="20201029 12:44:04.768" endtime="20201029 12:44:04.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.763" endtime="20201029 12:44:04.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:04.775" endtime="20201029 12:44:04.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.774" endtime="20201029 12:44:04.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.772" endtime="20201029 12:44:04.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.415" endtime="20201029 12:44:04.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.414" endtime="20201029 12:44:04.796"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.804" endtime="20201029 12:44:04.820"></status>
</kw>
<msg timestamp="20201029 12:44:04.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.803" endtime="20201029 12:44:04.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.822" endtime="20201029 12:44:04.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.824" endtime="20201029 12:44:04.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.800" endtime="20201029 12:44:04.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.798" endtime="20201029 12:44:04.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.833" endtime="20201029 12:44:05.118"></status>
</kw>
<msg timestamp="20201029 12:44:05.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021812569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.831" endtime="20201029 12:44:05.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021812569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.122" endtime="20201029 12:44:05.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.131" endtime="20201029 12:44:05.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.829" endtime="20201029 12:44:05.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.827" endtime="20201029 12:44:05.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.137" level="INFO">${RESULT} = [{'diff': 4.322199999999901e-05}, {'diff': 4.3639000000001565e-05}, {'diff': 4.266600000000023e-05}, {'diff': 4.3541000000001107e-05}, {'diff': 4.329099999999739e-05}, {'diff': 4.3596999999999386e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:05.134" endtime="20201029 12:44:05.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.142" level="INFO">${ACCURACY} = {'diff': [4.322199999999901e-05, 4.3639000000001565e-05, 4.266600000000023e-05, 4.3541000000001107e-05, 4.329099999999739e-05, 4.3596999999999386e-05, 4.275000000000112e-05, 4.291600000000048e-05, 4.3...</msg>
<status status="PASS" starttime="20201029 12:44:05.138" endtime="20201029 12:44:05.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.147" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.146" endtime="20201029 12:44:05.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.149" level="INFO">VALUE: [4.322199999999901e-05, 4.3639000000001565e-05, 4.266600000000023e-05, 4.3541000000001107e-05, 4.329099999999739e-05, 4.3596999999999386e-05, 4.275000000000112e-05, 4.291600000000048e-05, 4.352800000000101e-05, 4.326400000000119e-05, 4.3318999999999996e-05, 4.2653000000000135e-05, 4.2737000000001024e-05, 4.326399999999772e-05, 4.354200000000058e-05, 4.3332999999999566e-05, 4.3375000000001745e-05, 4.3445000000003064e-05, 4.3473000000002204e-05, 4.320799999999944e-05, 4.2680999999999275e-05, 4.350000000000187e-05, 4.273600000000155e-05, 4.2708999999998415e-05, 4.327800000000076e-05, 4.33059999999999e-05, 4.351399999999797e-05, 4.3596999999999386e-05, 4.3611000000002426e-05, 4.3195000000002814e-05, 4.323599999999858e-05, 4.3194999999999345e-05, 4.3472999999998735e-05, 4.3389000000001315e-05, 4.354099999999764e-05, 4.3346999999999136e-05, 4.3389000000001315e-05, 4.3305000000000426e-05, 4.3082999999999316e-05, 4.3555000000000677e-05, 4.351400000000144e-05, 4.3555000000000677e-05, 4.323599999999858e-05, 4.354099999999764e-05, 4.3374999999998276e-05, 4.3347000000002606e-05, 4.323599999999858e-05, 4.2902999999996916e-05, 4.3638999999998096e-05, 4.269399999999937e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.148" endtime="20201029 12:44:05.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.143" endtime="20201029 12:44:05.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.154" endtime="20201029 12:44:05.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.153" endtime="20201029 12:44:05.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.151" endtime="20201029 12:44:05.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.797" endtime="20201029 12:44:05.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.796" endtime="20201029 12:44:05.175"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.183" endtime="20201029 12:44:05.199"></status>
</kw>
<msg timestamp="20201029 12:44:05.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.182" endtime="20201029 12:44:05.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.201" endtime="20201029 12:44:05.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.203" endtime="20201029 12:44:05.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.179" endtime="20201029 12:44:05.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.177" endtime="20201029 12:44:05.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.212" endtime="20201029 12:44:05.497"></status>
</kw>
<msg timestamp="20201029 12:44:05.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.211" endtime="20201029 12:44:05.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.501" endtime="20201029 12:44:05.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.510" endtime="20201029 12:44:05.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.208" endtime="20201029 12:44:05.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.206" endtime="20201029 12:44:05.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.516" level="INFO">${RESULT} = [{'diff': 4.381999999999997e-05}, {'diff': 4.458400000000029e-05}, {'diff': 4.441600000000198e-05}, {'diff': 4.4124999999999026e-05}, {'diff': 4.4389000000002315e-05}, {'diff': 4.369400000000037e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:05.513" endtime="20201029 12:44:05.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.520" level="INFO">${ACCURACY} = {'diff': [4.381999999999997e-05, 4.458400000000029e-05, 4.441600000000198e-05, 4.4124999999999026e-05, 4.4389000000002315e-05, 4.369400000000037e-05, 4.429100000000186e-05, 4.427799999999829e-05, 4.42...</msg>
<status status="PASS" starttime="20201029 12:44:05.517" endtime="20201029 12:44:05.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.525" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.524" endtime="20201029 12:44:05.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.527" level="INFO">VALUE: [4.381999999999997e-05, 4.458400000000029e-05, 4.441600000000198e-05, 4.4124999999999026e-05, 4.4389000000002315e-05, 4.369400000000037e-05, 4.429100000000186e-05, 4.427799999999829e-05, 4.429100000000186e-05, 4.454099999999864e-05, 4.422200000000001e-05, 4.370799999999994e-05, 4.441600000000198e-05, 4.431899999999753e-05, 4.4638999999999096e-05, 4.373600000000255e-05, 4.445800000000069e-05, 4.4152999999998166e-05, 4.447200000000026e-05, 4.422200000000001e-05, 4.4431000000001025e-05, 4.455599999999768e-05, 4.447200000000026e-05, 4.422200000000001e-05, 4.420800000000044e-05, 4.448599999999983e-05, 4.3681000000000275e-05, 4.423599999999958e-05, 4.374999999999865e-05, 4.427799999999829e-05, 4.4402999999998416e-05, 4.457000000000072e-05, 4.383399999999954e-05, 4.430499999999796e-05, 4.4319000000000996e-05, 4.4319000000000996e-05, 4.4223000000002954e-05, 4.369400000000037e-05, 4.429200000000133e-05, 4.367999999999733e-05, 4.427699999999882e-05, 4.369400000000037e-05, 4.366600000000123e-05, 4.3638999999998096e-05, 4.444400000000112e-05, 4.373599999999908e-05, 4.445800000000069e-05, 4.458299999999735e-05, 4.442999999999808e-05, 4.422200000000001e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.526" endtime="20201029 12:44:05.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.521" endtime="20201029 12:44:05.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.532" endtime="20201029 12:44:05.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.531" endtime="20201029 12:44:05.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.529" endtime="20201029 12:44:05.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.176" endtime="20201029 12:44:05.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.175" endtime="20201029 12:44:05.553"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.561" endtime="20201029 12:44:05.579"></status>
</kw>
<msg timestamp="20201029 12:44:05.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.560" endtime="20201029 12:44:05.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.580" endtime="20201029 12:44:05.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.583" endtime="20201029 12:44:05.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.557" endtime="20201029 12:44:05.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.555" endtime="20201029 12:44:05.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.592" endtime="20201029 12:44:05.879"></status>
</kw>
<msg timestamp="20201029 12:44:05.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023045319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023090708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.590" endtime="20201029 12:44:05.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023045319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023090708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.883" endtime="20201029 12:44:05.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.891" endtime="20201029 12:44:05.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.587" endtime="20201029 12:44:05.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.586" endtime="20201029 12:44:05.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.898" level="INFO">${RESULT} = [{'diff': 4.5388999999999846e-05}, {'diff': 4.5152999999999166e-05}, {'diff': 4.529099999999939e-05}, {'diff': 4.556899999999878e-05}, {'diff': 4.525000000000015e-05}, {'diff': 4.547200000000126e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:05.895" endtime="20201029 12:44:05.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.902" level="INFO">${ACCURACY} = {'diff': [4.5388999999999846e-05, 4.5152999999999166e-05, 4.529099999999939e-05, 4.556899999999878e-05, 4.525000000000015e-05, 4.547200000000126e-05, 4.5347000000001136e-05, 4.544399999999865e-05, 4.5...</msg>
<status status="PASS" starttime="20201029 12:44:05.899" endtime="20201029 12:44:05.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.906" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.905" endtime="20201029 12:44:05.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.909" level="INFO">VALUE: [4.5388999999999846e-05, 4.5152999999999166e-05, 4.529099999999939e-05, 4.556899999999878e-05, 4.525000000000015e-05, 4.547200000000126e-05, 4.5347000000001136e-05, 4.544399999999865e-05, 4.5402999999999416e-05, 4.5416999999998986e-05, 4.551399999999997e-05, 4.5333000000001566e-05, 4.4680999999997806e-05, 4.5194999999997876e-05, 4.4667000000001705e-05, 4.534699999999767e-05, 4.473600000000008e-05, 4.5181000000001775e-05, 4.5375000000000276e-05, 4.5472999999997266e-05, 4.5375000000000276e-05, 4.558400000000129e-05, 4.53060000000019e-05, 4.540199999999994e-05, 4.5388999999999846e-05, 4.526399999999972e-05, 4.5209000000000915e-05, 4.5125000000000026e-05, 4.526300000000025e-05, 4.522200000000101e-05, 4.474999999999965e-05, 4.55130000000005e-05, 4.517999999999883e-05, 4.531899999999853e-05, 4.559699999999792e-05, 4.542999999999908e-05, 4.548600000000083e-05, 4.526399999999972e-05, 4.5375000000000276e-05, 4.529099999999939e-05, 4.555499999999921e-05, 4.5583000000001817e-05, 4.526399999999972e-05, 4.473600000000008e-05, 4.536099999999724e-05, 4.4680999999997806e-05, 4.472199999999704e-05, 4.551399999999997e-05, 4.520800000000144e-05, 4.476399999999922e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.907" endtime="20201029 12:44:05.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.903" endtime="20201029 12:44:05.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.914" endtime="20201029 12:44:05.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.913" endtime="20201029 12:44:05.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.912" endtime="20201029 12:44:05.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.554" endtime="20201029 12:44:05.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.553" endtime="20201029 12:44:05.935"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.944" endtime="20201029 12:44:05.960"></status>
</kw>
<msg timestamp="20201029 12:44:05.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.942" endtime="20201029 12:44:05.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.962" endtime="20201029 12:44:05.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.964" endtime="20201029 12:44:05.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.940" endtime="20201029 12:44:05.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.938" endtime="20201029 12:44:05.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.973" endtime="20201029 12:44:06.258"></status>
</kw>
<msg timestamp="20201029 12:44:06.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022308083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022353833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.971" endtime="20201029 12:44:06.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022308083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022353833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.262" endtime="20201029 12:44:06.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.271" endtime="20201029 12:44:06.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.969" endtime="20201029 12:44:06.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.967" endtime="20201029 12:44:06.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.277" level="INFO">${RESULT} = [{'diff': 4.575000000000065e-05}, {'diff': 4.6389000000000846e-05}, {'diff': 4.63329999999991e-05}, {'diff': 4.629100000000039e-05}, {'diff': 4.648600000000183e-05}, {'diff': 4.643000000000008e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:06.274" endtime="20201029 12:44:06.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.282" level="INFO">${ACCURACY} = {'diff': [4.575000000000065e-05, 4.6389000000000846e-05, 4.63329999999991e-05, 4.629100000000039e-05, 4.648600000000183e-05, 4.643000000000008e-05, 4.5652999999999666e-05, 4.6625000000001526e-05, 4.63...</msg>
<status status="PASS" starttime="20201029 12:44:06.278" endtime="20201029 12:44:06.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.287" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.286" endtime="20201029 12:44:06.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.289" level="INFO">VALUE: [4.575000000000065e-05, 4.6389000000000846e-05, 4.63329999999991e-05, 4.629100000000039e-05, 4.648600000000183e-05, 4.643000000000008e-05, 4.5652999999999666e-05, 4.6625000000001526e-05, 4.6347000000002136e-05, 4.631899999999953e-05, 4.620800000000244e-05, 4.645799999999922e-05, 4.6180999999999306e-05, 4.626400000000072e-05, 4.63329999999991e-05, 4.647199999999879e-05, 4.655599999999968e-05, 4.6195000000002345e-05, 4.5737000000000555e-05, 4.633399999999857e-05, 4.6444999999999126e-05, 4.575000000000065e-05, 4.620799999999897e-05, 4.5680999999998806e-05, 4.6458999999998696e-05, 4.627800000000029e-05, 4.5666999999999236e-05, 4.630499999999996e-05, 4.6473000000001735e-05, 4.572200000000151e-05, 4.625000000000115e-05, 4.663800000000162e-05, 4.6597000000002387e-05, 4.65000000000014e-05, 4.594399999999915e-05, 4.625000000000115e-05, 4.627699999999735e-05, 4.662499999999806e-05, 4.648599999999836e-05, 4.659699999999892e-05, 4.636099999999824e-05, 4.652800000000054e-05, 4.654200000000011e-05, 4.644399999999965e-05, 4.617999999999983e-05, 4.6444999999999126e-05, 4.648600000000183e-05, 4.654200000000011e-05, 4.6430999999999556e-05, 4.5667000000002705e-05]</msg>
<status status="PASS" starttime="20201029 12:44:06.288" endtime="20201029 12:44:06.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.283" endtime="20201029 12:44:06.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.294" endtime="20201029 12:44:06.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.293" endtime="20201029 12:44:06.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.291" endtime="20201029 12:44:06.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.936" endtime="20201029 12:44:06.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.936" endtime="20201029 12:44:06.315"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.323" endtime="20201029 12:44:06.339"></status>
</kw>
<msg timestamp="20201029 12:44:06.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.322" endtime="20201029 12:44:06.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.341" endtime="20201029 12:44:06.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.343" endtime="20201029 12:44:06.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.319" endtime="20201029 12:44:06.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.317" endtime="20201029 12:44:06.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.352" endtime="20201029 12:44:06.638"></status>
</kw>
<msg timestamp="20201029 12:44:06.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021838125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.351" endtime="20201029 12:44:06.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021838125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.642" endtime="20201029 12:44:06.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.651" endtime="20201029 12:44:06.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.348" endtime="20201029 12:44:06.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.346" endtime="20201029 12:44:06.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.657" level="INFO">${RESULT} = [{'diff': 4.723599999999911e-05}, {'diff': 4.756900000000078e-05}, {'diff': 4.734699999999967e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.752800000000154e-05}, {'diff': 4.729200000000086e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:06.654" endtime="20201029 12:44:06.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.661" level="INFO">${ACCURACY} = {'diff': [4.723599999999911e-05, 4.756900000000078e-05, 4.734699999999967e-05, 4.748599999999936e-05, 4.752800000000154e-05, 4.729200000000086e-05, 4.6708999999998946e-05, 4.7472999999999266e-05, 4.75...</msg>
<status status="PASS" starttime="20201029 12:44:06.658" endtime="20201029 12:44:06.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.666" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.665" endtime="20201029 12:44:06.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.668" level="INFO">VALUE: [4.723599999999911e-05, 4.756900000000078e-05, 4.734699999999967e-05, 4.748599999999936e-05, 4.752800000000154e-05, 4.729200000000086e-05, 4.6708999999998946e-05, 4.7472999999999266e-05, 4.752799999999807e-05, 4.749999999999893e-05, 4.75000000000024e-05, 4.757000000000025e-05, 4.6694999999999376e-05, 4.7445000000000126e-05, 4.755599999999721e-05, 4.7486999999998836e-05, 4.754199999999764e-05, 4.75269999999986e-05, 4.658399999999882e-05, 4.729100000000139e-05, 4.6625000000001526e-05, 4.672199999999904e-05, 4.663899999999763e-05, 4.724999999999868e-05, 4.755600000000068e-05, 4.761099999999949e-05, 4.668000000000033e-05, 4.730500000000096e-05, 4.741599999999804e-05, 4.7153000000001166e-05, 4.754200000000111e-05, 4.743000000000108e-05, 4.674999999999818e-05, 4.758300000000035e-05, 4.675000000000165e-05, 4.73330000000001e-05, 4.661099999999849e-05, 4.7181000000000306e-05, 4.740299999999795e-05, 4.759699999999992e-05, 4.727799999999782e-05, 4.759699999999992e-05, 4.6680999999999806e-05, 4.7458999999999696e-05, 4.6695000000002845e-05, 4.757000000000025e-05, 4.7389000000001846e-05, 4.740299999999795e-05, 4.727800000000129e-05, 4.75000000000024e-05]</msg>
<status status="PASS" starttime="20201029 12:44:06.667" endtime="20201029 12:44:06.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.662" endtime="20201029 12:44:06.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.673" endtime="20201029 12:44:06.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.672" endtime="20201029 12:44:06.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.670" endtime="20201029 12:44:06.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.316" endtime="20201029 12:44:06.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.315" endtime="20201029 12:44:06.694"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.702" endtime="20201029 12:44:06.722"></status>
</kw>
<msg timestamp="20201029 12:44:06.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.701" endtime="20201029 12:44:06.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.724" endtime="20201029 12:44:06.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.726" endtime="20201029 12:44:06.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.698" endtime="20201029 12:44:06.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.696" endtime="20201029 12:44:06.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.735" endtime="20201029 12:44:07.021"></status>
</kw>
<msg timestamp="20201029 12:44:07.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024882764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024931167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.733" endtime="20201029 12:44:07.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024882764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024931167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.025" endtime="20201029 12:44:07.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.033" endtime="20201029 12:44:07.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.731" endtime="20201029 12:44:07.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.729" endtime="20201029 12:44:07.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.040" level="INFO">${RESULT} = [{'diff': 4.840299999999895e-05}, {'diff': 4.862500000000006e-05}, {'diff': 4.826399999999925e-05}, {'diff': 4.847200000000079e-05}, {'diff': 4.849999999999993e-05}, {'diff': 4.861100000000049e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:07.036" endtime="20201029 12:44:07.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.044" level="INFO">${ACCURACY} = {'diff': [4.840299999999895e-05, 4.862500000000006e-05, 4.826399999999925e-05, 4.847200000000079e-05, 4.849999999999993e-05, 4.861100000000049e-05, 4.8417000000001986e-05, 4.863899999999963e-05, 4.838...</msg>
<status status="PASS" starttime="20201029 12:44:07.041" endtime="20201029 12:44:07.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.048" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.047" endtime="20201029 12:44:07.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.051" level="INFO">VALUE: [4.840299999999895e-05, 4.862500000000006e-05, 4.826399999999925e-05, 4.847200000000079e-05, 4.849999999999993e-05, 4.861100000000049e-05, 4.8417000000001986e-05, 4.863899999999963e-05, 4.838899999999938e-05, 4.858400000000082e-05, 4.822200000000054e-05, 4.822200000000054e-05, 4.8375000000003276e-05, 4.770800000000047e-05, 4.76940000000009e-05, 4.861100000000049e-05, 4.842999999999861e-05, 4.83330000000011e-05, 4.841599999999904e-05, 4.768000000000133e-05, 4.852799999999907e-05, 4.829200000000186e-05, 4.818000000000183e-05, 4.816699999999827e-05, 4.772200000000004e-05, 4.862500000000006e-05, 4.831999999999753e-05, 4.827800000000229e-05, 4.855600000000168e-05, 4.843099999999809e-05, 4.826299999999978e-05, 4.774999999999918e-05, 4.7681000000000806e-05, 4.8473000000000266e-05, 4.7667000000001236e-05, 4.852799999999907e-05, 4.823600000000011e-05, 4.8209000000000446e-05, 4.76529999999982e-05, 4.852800000000254e-05, 4.7708999999999946e-05, 4.829200000000186e-05, 4.7695000000000376e-05, 4.859800000000039e-05, 4.844400000000165e-05, 4.829099999999892e-05, 4.822200000000054e-05, 4.859700000000092e-05, 4.85269999999996e-05, 4.83330000000011e-05]</msg>
<status status="PASS" starttime="20201029 12:44:07.049" endtime="20201029 12:44:07.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.045" endtime="20201029 12:44:07.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:07.056" endtime="20201029 12:44:07.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.055" endtime="20201029 12:44:07.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.054" endtime="20201029 12:44:07.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.695" endtime="20201029 12:44:07.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.694" endtime="20201029 12:44:07.077"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.085" endtime="20201029 12:44:07.102"></status>
</kw>
<msg timestamp="20201029 12:44:07.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.084" endtime="20201029 12:44:07.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.103" endtime="20201029 12:44:07.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.106" endtime="20201029 12:44:07.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.081" endtime="20201029 12:44:07.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.079" endtime="20201029 12:44:07.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.115" endtime="20201029 12:44:07.401"></status>
</kw>
<msg timestamp="20201029 12:44:07.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021539764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021588569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.113" endtime="20201029 12:44:07.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021539764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021588569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.406" endtime="20201029 12:44:07.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.416" endtime="20201029 12:44:07.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.111" endtime="20201029 12:44:07.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.109" endtime="20201029 12:44:07.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.425" level="INFO">${RESULT} = [{'diff': 4.880499999999899e-05}, {'diff': 4.933299999999863e-05}, {'diff': 4.927799999999982e-05}, {'diff': 4.940299999999995e-05}, {'diff': 4.931899999999906e-05}, {'diff': 4.934700000000167e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:07.421" endtime="20201029 12:44:07.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.431" level="INFO">${ACCURACY} = {'diff': [4.880499999999899e-05, 4.933299999999863e-05, 4.927799999999982e-05, 4.940299999999995e-05, 4.931899999999906e-05, 4.934700000000167e-05, 4.869399999999843e-05, 4.958299999999888e-05, 4.8665...</msg>
<status status="PASS" starttime="20201029 12:44:07.426" endtime="20201029 12:44:07.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.436" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.435" endtime="20201029 12:44:07.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.438" level="INFO">VALUE: [4.880499999999899e-05, 4.933299999999863e-05, 4.927799999999982e-05, 4.940299999999995e-05, 4.931899999999906e-05, 4.934700000000167e-05, 4.869399999999843e-05, 4.958299999999888e-05, 4.866599999999929e-05, 4.944399999999918e-05, 4.872200000000104e-05, 4.943099999999909e-05, 4.870800000000147e-05, 4.961099999999802e-05, 4.962499999999759e-05, 4.872199999999757e-05, 4.940299999999995e-05, 4.870800000000147e-05, 4.922200000000154e-05, 4.930599999999896e-05, 4.943099999999909e-05, 4.963899999999716e-05, 4.9651999999997254e-05, 4.958299999999888e-05, 4.952800000000007e-05, 4.948599999999789e-05, 4.936099999999777e-05, 4.944499999999866e-05, 4.926399999999678e-05, 4.934799999999767e-05, 4.9222999999997546e-05, 4.8667000000002236e-05, 4.926400000000025e-05, 4.9237000000000586e-05, 4.934700000000167e-05, 4.926400000000025e-05, 4.940200000000047e-05, 4.867999999999886e-05, 4.942999999999961e-05, 4.945799999999875e-05, 4.941600000000004e-05, 4.872200000000104e-05, 4.923600000000111e-05, 4.942999999999961e-05, 4.916699999999927e-05, 4.941600000000004e-05, 4.925000000000068e-05, 4.8707999999998e-05, 4.888899999999988e-05, 4.922199999999807e-05]</msg>
<status status="PASS" starttime="20201029 12:44:07.437" endtime="20201029 12:44:07.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.432" endtime="20201029 12:44:07.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:07.443" endtime="20201029 12:44:07.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.442" endtime="20201029 12:44:07.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.440" endtime="20201029 12:44:07.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.078" endtime="20201029 12:44:07.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.077" endtime="20201029 12:44:07.464"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.472" endtime="20201029 12:44:07.489"></status>
</kw>
<msg timestamp="20201029 12:44:07.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.471" endtime="20201029 12:44:07.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.490" endtime="20201029 12:44:07.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.493" endtime="20201029 12:44:07.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.468" endtime="20201029 12:44:07.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.466" endtime="20201029 12:44:07.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.501" endtime="20201029 12:44:07.789"></status>
</kw>
<msg timestamp="20201029 12:44:07.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022052958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.500" endtime="20201029 12:44:07.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022052958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.793" endtime="20201029 12:44:07.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.802" endtime="20201029 12:44:07.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.497" endtime="20201029 12:44:07.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.496" endtime="20201029 12:44:07.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.808" level="INFO">${RESULT} = [{'diff': 4.986100000000174e-05}, {'diff': 4.966600000000029e-05}, {'diff': 5.051299999999856e-05}, {'diff': 4.974999999999771e-05}, {'diff': 5.062499999999859e-05}, {'diff': 5.061099999999902e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:07.805" endtime="20201029 12:44:07.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.812" level="INFO">${ACCURACY} = {'diff': [4.986100000000174e-05, 4.966600000000029e-05, 5.051299999999856e-05, 4.974999999999771e-05, 5.062499999999859e-05, 5.061099999999902e-05, 4.9707999999999e-05, 5.030500000000049e-05, 5.019399...</msg>
<status status="PASS" starttime="20201029 12:44:07.809" endtime="20201029 12:44:07.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.817" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.816" endtime="20201029 12:44:07.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.819" level="INFO">VALUE: [4.986100000000174e-05, 4.966600000000029e-05, 5.051299999999856e-05, 4.974999999999771e-05, 5.062499999999859e-05, 5.061099999999902e-05, 4.9707999999999e-05, 5.030500000000049e-05, 5.019399999999993e-05, 5.030599999999996e-05, 5.029200000000039e-05, 5.059699999999945e-05, 4.970899999999848e-05, 5.047200000000279e-05, 5.05279999999976e-05, 4.968099999999934e-05, 5.036099999999877e-05, 5.029200000000039e-05, 4.969499999999891e-05, 5.044499999999966e-05, 5.015299999999723e-05, 5.0429999999997144e-05, 5.018099999999984e-05, 4.968099999999934e-05, 4.970899999999848e-05, 5.045899999999923e-05, 5.041700000000052e-05, 5.061099999999902e-05, 4.9651999999997254e-05, 5.034799999999867e-05, 5.0237000000001586e-05, 5.016700000000027e-05, 5.05409999999977e-05, 4.967999999999986e-05, 4.994399999999968e-05, 5.05409999999977e-05, 5.031900000000006e-05, 5.050000000000193e-05, 5.043000000000061e-05, 5.045799999999975e-05, 4.973599999999814e-05, 5.012500000000156e-05, 5.052800000000107e-05, 5.05279999999976e-05, 5.049999999999846e-05, 4.975000000000118e-05, 5.0402000000001473e-05, 5.02079999999995e-05, 5.036099999999877e-05, 5.040300000000095e-05]</msg>
<status status="PASS" starttime="20201029 12:44:07.818" endtime="20201029 12:44:07.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.813" endtime="20201029 12:44:07.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:07.825" endtime="20201029 12:44:07.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.823" endtime="20201029 12:44:07.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.822" endtime="20201029 12:44:07.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.464" endtime="20201029 12:44:07.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.464" endtime="20201029 12:44:07.845"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.854" endtime="20201029 12:44:07.871"></status>
</kw>
<msg timestamp="20201029 12:44:07.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.852" endtime="20201029 12:44:07.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.873" endtime="20201029 12:44:07.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.875" endtime="20201029 12:44:07.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.850" endtime="20201029 12:44:07.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.848" endtime="20201029 12:44:07.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.884" endtime="20201029 12:44:08.170"></status>
</kw>
<msg timestamp="20201029 12:44:08.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022881417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022932722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.883" endtime="20201029 12:44:08.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022881417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022932722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.174" endtime="20201029 12:44:08.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.183" endtime="20201029 12:44:08.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.880" endtime="20201029 12:44:08.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.878" endtime="20201029 12:44:08.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:08.189" level="INFO">${RESULT} = [{'diff': 5.130499999999802e-05}, {'diff': 5.124999999999921e-05}, {'diff': 5.152800000000207e-05}, {'diff': 5.161100000000002e-05}, {'diff': 5.157000000000078e-05}, {'diff': 5.068099999999687e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:08.186" endtime="20201029 12:44:08.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:08.193" level="INFO">${ACCURACY} = {'diff': [5.130499999999802e-05, 5.124999999999921e-05, 5.152800000000207e-05, 5.161100000000002e-05, 5.157000000000078e-05, 5.068099999999687e-05, 5.1236999999999117e-05, 5.122200000000007e-05, 5.070...</msg>
<status status="PASS" starttime="20201029 12:44:08.190" endtime="20201029 12:44:08.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.198" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.196" endtime="20201029 12:44:08.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.200" level="INFO">VALUE: [5.130499999999802e-05, 5.124999999999921e-05, 5.152800000000207e-05, 5.161100000000002e-05, 5.157000000000078e-05, 5.068099999999687e-05, 5.1236999999999117e-05, 5.122200000000007e-05, 5.0708e-05, 5.0708e-05, 5.123599999999964e-05, 5.147200000000032e-05, 5.162499999999959e-05, 5.159700000000045e-05, 5.147200000000032e-05, 5.1402000000002473e-05, 5.076399999999828e-05, 5.122200000000007e-05, 5.155499999999827e-05, 5.130600000000096e-05, 5.151399999999903e-05, 5.133300000000063e-05, 5.072199999999957e-05, 5.127800000000182e-05, 5.133299999999716e-05, 5.12080000000005e-05, 5.162499999999959e-05, 5.124999999999921e-05, 5.162499999999959e-05, 5.15140000000025e-05, 5.113899999999866e-05, 5.141700000000152e-05, 5.15279999999986e-05, 5.161199999999949e-05, 5.154199999999817e-05, 5.162499999999959e-05, 5.149999999999946e-05, 5.154199999999817e-05, 5.13340000000001e-05, 5.138899999999891e-05, 5.1137999999999184e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.072199999999957e-05, 5.136099999999977e-05, 5.15409999999987e-05, 5.118000000000136e-05, 5.075000000000218e-05, 5.070899999999948e-05, 5.129100000000192e-05]</msg>
<status status="PASS" starttime="20201029 12:44:08.199" endtime="20201029 12:44:08.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.194" endtime="20201029 12:44:08.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.211" endtime="20201029 12:44:08.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.209" endtime="20201029 12:44:08.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.208" endtime="20201029 12:44:08.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.846" endtime="20201029 12:44:08.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.846" endtime="20201029 12:44:08.231"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.240" endtime="20201029 12:44:08.256"></status>
</kw>
<msg timestamp="20201029 12:44:08.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.238" endtime="20201029 12:44:08.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.258" endtime="20201029 12:44:08.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.260" endtime="20201029 12:44:08.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.235" endtime="20201029 12:44:08.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.233" endtime="20201029 12:44:08.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.269" endtime="20201029 12:44:08.555"></status>
</kw>
<msg timestamp="20201029 12:44:08.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021724083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021776833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.268" endtime="20201029 12:44:08.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021724083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021776833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.560" endtime="20201029 12:44:08.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.568" endtime="20201029 12:44:08.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.265" endtime="20201029 12:44:08.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.263" endtime="20201029 12:44:08.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:08.574" level="INFO">${RESULT} = [{'diff': 5.2749999999997244e-05}, {'diff': 5.230499999999902e-05}, {'diff': 5.222200000000107e-05}, {'diff': 5.174999999999971e-05}, {'diff': 5.252700000000013e-05}, {'diff': 5.2485999999997424e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:08.571" endtime="20201029 12:44:08.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:08.579" level="INFO">${ACCURACY} = {'diff': [5.2749999999997244e-05, 5.230499999999902e-05, 5.222200000000107e-05, 5.174999999999971e-05, 5.252700000000013e-05, 5.2485999999997424e-05, 5.1708000000001e-05, 5.1693999999997964e-05, 5.231...</msg>
<status status="PASS" starttime="20201029 12:44:08.575" endtime="20201029 12:44:08.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.584" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.583" endtime="20201029 12:44:08.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.586" level="INFO">VALUE: [5.2749999999997244e-05, 5.230499999999902e-05, 5.222200000000107e-05, 5.174999999999971e-05, 5.252700000000013e-05, 5.2485999999997424e-05, 5.1708000000001e-05, 5.1693999999997964e-05, 5.231900000000206e-05, 5.1679999999998394e-05, 5.229199999999892e-05, 5.261099999999755e-05, 5.169400000000143e-05, 5.23470000000012e-05, 5.219499999999794e-05, 5.259700000000145e-05, 5.255600000000221e-05, 5.240299999999948e-05, 5.254199999999917e-05, 5.16669999999983e-05, 5.229099999999945e-05, 5.245900000000123e-05, 5.172300000000005e-05, 5.252800000000307e-05, 5.238899999999991e-05, 5.227799999999935e-05, 5.226399999999978e-05, 5.234800000000067e-05, 5.1708000000001e-05, 5.23470000000012e-05, 5.2443999999998714e-05, 5.175000000000318e-05, 5.226400000000325e-05, 5.247200000000132e-05, 5.262499999999712e-05, 5.247200000000132e-05, 5.245900000000123e-05, 5.231900000000206e-05, 5.231900000000206e-05, 5.238899999999991e-05, 5.230499999999902e-05, 5.227799999999935e-05, 5.2499999999996994e-05, 5.168100000000134e-05, 5.226399999999978e-05, 5.230599999999849e-05, 5.255599999999874e-05, 5.191700000000202e-05, 5.226399999999978e-05, 5.233399999999763e-05]</msg>
<status status="PASS" starttime="20201029 12:44:08.585" endtime="20201029 12:44:08.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.580" endtime="20201029 12:44:08.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.591" endtime="20201029 12:44:08.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.590" endtime="20201029 12:44:08.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.589" endtime="20201029 12:44:08.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.232" endtime="20201029 12:44:08.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.231" endtime="20201029 12:44:08.612"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.620" endtime="20201029 12:44:08.636"></status>
</kw>
<msg timestamp="20201029 12:44:08.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.619" endtime="20201029 12:44:08.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.638" endtime="20201029 12:44:08.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.640" endtime="20201029 12:44:08.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.616" endtime="20201029 12:44:08.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.614" endtime="20201029 12:44:08.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.649" endtime="20201029 12:44:08.937"></status>
</kw>
<msg timestamp="20201029 12:44:08.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.648" endtime="20201029 12:44:08.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.941" endtime="20201029 12:44:08.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.949" endtime="20201029 12:44:08.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.645" endtime="20201029 12:44:08.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.644" endtime="20201029 12:44:08.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:08.956" level="INFO">${RESULT} = [{'diff': 5.365300000000073e-05}, {'diff': 5.347200000000232e-05}, {'diff': 5.345800000000275e-05}, {'diff': 5.312499999999762e-05}, {'diff': 5.272200000000157e-05}, {'diff': 5.340300000000048e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:08.952" endtime="20201029 12:44:08.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:08.960" level="INFO">${ACCURACY} = {'diff': [5.365300000000073e-05, 5.347200000000232e-05, 5.345800000000275e-05, 5.312499999999762e-05, 5.272200000000157e-05, 5.340300000000048e-05, 5.329199999999992e-05, 5.3499999999997994e-05, 5.343...</msg>
<status status="PASS" starttime="20201029 12:44:08.957" endtime="20201029 12:44:08.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.964" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.963" endtime="20201029 12:44:08.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.967" level="INFO">VALUE: [5.365300000000073e-05, 5.347200000000232e-05, 5.345800000000275e-05, 5.312499999999762e-05, 5.272200000000157e-05, 5.340300000000048e-05, 5.329199999999992e-05, 5.3499999999997994e-05, 5.3430000000000144e-05, 5.334699999999873e-05, 5.33609999999983e-05, 5.276400000000028e-05, 5.31669999999998e-05, 5.362500000000159e-05, 5.350000000000146e-05, 5.319499999999894e-05, 5.344500000000266e-05, 5.341700000000005e-05, 5.263900000000016e-05, 5.318100000000284e-05, 5.338900000000091e-05, 5.334699999999873e-05, 5.263900000000016e-05, 5.347200000000232e-05, 5.359799999999845e-05, 5.330599999999949e-05, 5.329199999999992e-05, 5.326400000000078e-05, 5.2693999999998964e-05, 5.2652000000000254e-05, 5.35410000000007e-05, 5.355500000000027e-05, 5.333299999999916e-05, 5.3430000000000144e-05, 5.288900000000041e-05, 5.2735999999997674e-05, 5.276400000000028e-05, 5.2708000000002e-05, 5.361100000000202e-05, 5.3207999999999034e-05, 5.356899999999984e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.31669999999998e-05, 5.322200000000207e-05, 5.359699999999898e-05, 5.327800000000035e-05, 5.348600000000189e-05, 5.3249999999997744e-05, 5.338900000000091e-05]</msg>
<status status="PASS" starttime="20201029 12:44:08.965" endtime="20201029 12:44:08.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.961" endtime="20201029 12:44:08.968"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.972" endtime="20201029 12:44:08.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.970" endtime="20201029 12:44:08.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.969" endtime="20201029 12:44:08.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.613" endtime="20201029 12:44:08.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.612" endtime="20201029 12:44:08.992"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.001" endtime="20201029 12:44:09.018"></status>
</kw>
<msg timestamp="20201029 12:44:09.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.999" endtime="20201029 12:44:09.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.020" endtime="20201029 12:44:09.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.022" endtime="20201029 12:44:09.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.997" endtime="20201029 12:44:09.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.995" endtime="20201029 12:44:09.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.031" endtime="20201029 12:44:09.316"></status>
</kw>
<msg timestamp="20201029 12:44:09.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022787542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:09.030" endtime="20201029 12:44:09.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022787542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:09.320" endtime="20201029 12:44:09.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.329" endtime="20201029 12:44:09.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.027" endtime="20201029 12:44:09.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.026" endtime="20201029 12:44:09.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.335" level="INFO">${RESULT} = [{'diff': 5.404200000000067e-05}, {'diff': 5.369500000000291e-05}, {'diff': 5.430600000000049e-05}, {'diff': 5.447299999999933e-05}, {'diff': 5.373600000000214e-05}, {'diff': 5.36670000000003e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:09.332" endtime="20201029 12:44:09.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.339" level="INFO">${ACCURACY} = {'diff': [5.404200000000067e-05, 5.369500000000291e-05, 5.430600000000049e-05, 5.447299999999933e-05, 5.373600000000214e-05, 5.36670000000003e-05, 5.3707999999999534e-05, 5.461099999999955e-05, 5.3680...</msg>
<status status="PASS" starttime="20201029 12:44:09.336" endtime="20201029 12:44:09.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.344" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.343" endtime="20201029 12:44:09.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.346" level="INFO">VALUE: [5.404200000000067e-05, 5.369500000000291e-05, 5.430600000000049e-05, 5.447299999999933e-05, 5.373600000000214e-05, 5.36670000000003e-05, 5.3707999999999534e-05, 5.461099999999955e-05, 5.3680000000000394e-05, 5.4401999999998535e-05, 5.4485999999999424e-05, 5.362500000000159e-05, 5.448600000000289e-05, 5.3693999999999964e-05, 5.4416000000001574e-05, 5.4208000000000034e-05, 5.458300000000041e-05, 5.462499999999912e-05, 5.463900000000216e-05, 5.391700000000055e-05, 5.431900000000059e-05, 5.3707999999999534e-05, 5.370899999999901e-05, 5.456899999999737e-05, 5.3735999999998674e-05, 5.419499999999994e-05, 5.376400000000128e-05, 5.432000000000006e-05, 5.4235999999999174e-05, 5.36670000000003e-05, 5.437500000000234e-05, 5.440299999999801e-05, 5.359799999999845e-05, 5.443100000000062e-05, 5.370899999999901e-05, 5.3680000000000394e-05, 5.4416000000001574e-05, 5.461099999999955e-05, 5.3680000000000394e-05, 5.45410000000017e-05, 5.4249999999998744e-05, 5.362499999999812e-05, 5.4401999999998535e-05, 5.456900000000084e-05, 5.434699999999973e-05, 5.434699999999973e-05, 5.4457999999996815e-05, 5.458300000000041e-05, 5.438900000000191e-05, 5.441699999999758e-05]</msg>
<status status="PASS" starttime="20201029 12:44:09.345" endtime="20201029 12:44:09.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.340" endtime="20201029 12:44:09.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.352" endtime="20201029 12:44:09.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.351" endtime="20201029 12:44:09.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.349" endtime="20201029 12:44:09.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.993" endtime="20201029 12:44:09.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.992" endtime="20201029 12:44:09.373"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.381" endtime="20201029 12:44:09.398"></status>
</kw>
<msg timestamp="20201029 12:44:09.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.380" endtime="20201029 12:44:09.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.399" endtime="20201029 12:44:09.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.402" endtime="20201029 12:44:09.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.377" endtime="20201029 12:44:09.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.375" endtime="20201029 12:44:09.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.411" endtime="20201029 12:44:09.696"></status>
</kw>
<msg timestamp="20201029 12:44:09.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02181975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:09.409" endtime="20201029 12:44:09.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02181975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:09.700" endtime="20201029 12:44:09.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.708" endtime="20201029 12:44:09.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.406" endtime="20201029 12:44:09.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.405" endtime="20201029 12:44:09.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.715" level="INFO">${RESULT} = [{'diff': 5.5305999999998023e-05}, {'diff': 5.530499999999855e-05}, {'diff': 5.537499999999987e-05}, {'diff': 5.465299999999826e-05}, {'diff': 5.533300000000116e-05}, {'diff': 5.5277999999998884e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:09.712" endtime="20201029 12:44:09.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.720" level="INFO">${ACCURACY} = {'diff': [5.5305999999998023e-05, 5.530499999999855e-05, 5.537499999999987e-05, 5.465299999999826e-05, 5.533300000000116e-05, 5.5277999999998884e-05, 5.468100000000087e-05, 5.558300000000141e-05, 5.54...</msg>
<status status="PASS" starttime="20201029 12:44:09.716" endtime="20201029 12:44:09.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.724" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.723" endtime="20201029 12:44:09.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.727" level="INFO">VALUE: [5.5305999999998023e-05, 5.530499999999855e-05, 5.537499999999987e-05, 5.465299999999826e-05, 5.533300000000116e-05, 5.5277999999998884e-05, 5.468100000000087e-05, 5.558300000000141e-05, 5.5471999999997385e-05, 5.532000000000106e-05, 5.5249999999999744e-05, 5.520900000000051e-05, 5.520900000000051e-05, 5.561100000000055e-05, 5.5513999999999564e-05, 5.532000000000106e-05, 5.522300000000008e-05, 5.543099999999815e-05, 5.472299999999958e-05, 5.538899999999944e-05, 5.522300000000008e-05, 5.4651999999998785e-05, 5.487499999999937e-05, 5.5430000000002144e-05, 5.5263999999999314e-05, 5.5207999999997565e-05, 5.561100000000055e-05, 5.4749999999999244e-05, 5.5416000000002574e-05, 5.531899999999812e-05, 5.5249999999999744e-05, 5.4763999999998814e-05, 5.537499999999987e-05, 5.559699999999751e-05, 5.5458000000001284e-05, 5.537499999999987e-05, 5.5236000000000174e-05, 5.5249999999999744e-05, 5.53610000000003e-05, 5.4749999999999244e-05, 5.5499999999999994e-05, 5.468100000000087e-05, 5.5236000000000174e-05, 5.5499999999999994e-05, 5.46670000000013e-05, 5.547300000000033e-05, 5.5485999999996954e-05, 5.527699999999941e-05, 5.544499999999772e-05, 5.462500000000259e-05]</msg>
<status status="PASS" starttime="20201029 12:44:09.725" endtime="20201029 12:44:09.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.721" endtime="20201029 12:44:09.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.732" endtime="20201029 12:44:09.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.730" endtime="20201029 12:44:09.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.729" endtime="20201029 12:44:09.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.373" endtime="20201029 12:44:09.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.373" endtime="20201029 12:44:09.752"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.761" endtime="20201029 12:44:09.779"></status>
</kw>
<msg timestamp="20201029 12:44:09.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.759" endtime="20201029 12:44:09.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.780" endtime="20201029 12:44:09.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.782" endtime="20201029 12:44:09.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.757" endtime="20201029 12:44:09.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.755" endtime="20201029 12:44:09.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.791" endtime="20201029 12:44:10.078"></status>
</kw>
<msg timestamp="20201029 12:44:10.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022243167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.790" endtime="20201029 12:44:10.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022243167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.082" endtime="20201029 12:44:10.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.091" endtime="20201029 12:44:10.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.787" endtime="20201029 12:44:10.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.786" endtime="20201029 12:44:10.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.097" level="INFO">${RESULT} = [{'diff': 5.5929999999999175e-05}, {'diff': 5.6471999999998385e-05}, {'diff': 5.6528000000000134e-05}, {'diff': 5.6250000000000744e-05}, {'diff': 5.6264000000000314e-05}, {'diff': 5.573700000000015e-0...</msg>
<status status="PASS" starttime="20201029 12:44:10.094" endtime="20201029 12:44:10.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.101" level="INFO">${ACCURACY} = {'diff': [5.5929999999999175e-05, 5.6471999999998385e-05, 5.6528000000000134e-05, 5.6250000000000744e-05, 5.6264000000000314e-05, 5.573700000000015e-05, 5.659700000000198e-05, 5.633299999999869e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:44:10.098" endtime="20201029 12:44:10.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.106" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.105" endtime="20201029 12:44:10.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.108" level="INFO">VALUE: [5.5929999999999175e-05, 5.6471999999998385e-05, 5.6528000000000134e-05, 5.6250000000000744e-05, 5.6264000000000314e-05, 5.573700000000015e-05, 5.659700000000198e-05, 5.633299999999869e-05, 5.633400000000163e-05, 5.6207999999998565e-05, 5.63610000000013e-05, 5.633400000000163e-05, 5.6528000000000134e-05, 5.6250000000000744e-05, 5.6277999999999884e-05, 5.659800000000145e-05, 5.6541999999999704e-05, 5.661100000000155e-05, 5.636200000000077e-05, 5.657000000000231e-05, 5.662500000000112e-05, 5.634700000000173e-05, 5.6429999999999675e-05, 5.6500000000000994e-05, 5.638900000000044e-05, 5.6416000000000105e-05, 5.5665999999999355e-05, 5.65549999999998e-05, 5.633299999999869e-05, 5.5694000000001964e-05, 5.565299999999926e-05, 5.6486000000001424e-05, 5.6305999999999023e-05, 5.5707999999998065e-05, 5.6291999999999454e-05, 5.5750000000000244e-05, 5.61670000000028e-05, 5.659700000000198e-05, 5.61670000000028e-05, 5.6250000000000744e-05, 5.6472000000001854e-05, 5.661100000000155e-05, 5.6236000000001174e-05, 5.636200000000077e-05, 5.61809999999989e-05, 5.591699999999908e-05, 5.626299999999737e-05, 5.629099999999998e-05, 5.6528000000000134e-05, 5.5652000000003254e-05]</msg>
<status status="PASS" starttime="20201029 12:44:10.107" endtime="20201029 12:44:10.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.102" endtime="20201029 12:44:10.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.113" endtime="20201029 12:44:10.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.112" endtime="20201029 12:44:10.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.110" endtime="20201029 12:44:10.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.753" endtime="20201029 12:44:10.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.753" endtime="20201029 12:44:10.134"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.142" endtime="20201029 12:44:10.163"></status>
</kw>
<msg timestamp="20201029 12:44:10.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.141" endtime="20201029 12:44:10.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.164" endtime="20201029 12:44:10.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.167" endtime="20201029 12:44:10.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.138" endtime="20201029 12:44:10.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.136" endtime="20201029 12:44:10.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.176" endtime="20201029 12:44:10.464"></status>
</kw>
<msg timestamp="20201029 12:44:10.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025017958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025075611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.174" endtime="20201029 12:44:10.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025017958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025075611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.470" endtime="20201029 12:44:10.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.481" endtime="20201029 12:44:10.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.172" endtime="20201029 12:44:10.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.170" endtime="20201029 12:44:10.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.491" level="INFO">${RESULT} = [{'diff': 5.765300000000126e-05}, {'diff': 5.741700000000058e-05}, {'diff': 5.7499999999998525e-05}, {'diff': 5.7235999999998705e-05}, {'diff': 5.7542000000000704e-05}, {'diff': 5.691700000000008e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:10.487" endtime="20201029 12:44:10.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.498" level="INFO">${ACCURACY} = {'diff': [5.765300000000126e-05, 5.741700000000058e-05, 5.7499999999998525e-05, 5.7235999999998705e-05, 5.7542000000000704e-05, 5.691700000000008e-05, 5.6722000000002104e-05, 5.732000000000306e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:44:10.493" endtime="20201029 12:44:10.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.505" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.503" endtime="20201029 12:44:10.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.510" level="INFO">VALUE: [5.765300000000126e-05, 5.741700000000058e-05, 5.7499999999998525e-05, 5.7235999999998705e-05, 5.7542000000000704e-05, 5.691700000000008e-05, 5.6722000000002104e-05, 5.732000000000306e-05, 5.73749999999984e-05, 5.730500000000055e-05, 5.7333999999999163e-05, 5.758299999999994e-05, 5.666699999999983e-05, 5.6930000000000175e-05, 5.7485999999998955e-05, 5.734699999999926e-05, 5.673700000000115e-05, 5.7471999999999385e-05, 5.7457999999999815e-05, 5.754100000000123e-05, 5.731900000000012e-05, 5.762500000000212e-05, 5.7430000000000675e-05, 5.733299999999969e-05, 5.6721999999998635e-05, 5.7485999999998955e-05, 5.759699999999951e-05, 5.762500000000212e-05, 5.7264000000001314e-05, 5.7207999999999565e-05, 5.740300000000101e-05, 5.663900000000069e-05, 5.7486000000002424e-05, 5.7263999999997844e-05, 5.7583999999999413e-05, 5.7457999999999815e-05, 5.7721999999999635e-05, 5.7319999999999593e-05, 5.670899999999854e-05, 5.737500000000187e-05, 5.730500000000055e-05, 5.719499999999947e-05, 5.6679999999999925e-05, 5.7333999999999163e-05, 5.7457999999999815e-05, 5.75550000000008e-05, 5.7429999999997206e-05, 5.7277999999997414e-05, 5.662500000000112e-05, 5.733299999999969e-05]</msg>
<status status="PASS" starttime="20201029 12:44:10.507" endtime="20201029 12:44:10.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.499" endtime="20201029 12:44:10.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.520" endtime="20201029 12:44:10.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.517" endtime="20201029 12:44:10.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.515" endtime="20201029 12:44:10.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.135" endtime="20201029 12:44:10.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.134" endtime="20201029 12:44:10.543"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.554" endtime="20201029 12:44:10.571"></status>
</kw>
<msg timestamp="20201029 12:44:10.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.552" endtime="20201029 12:44:10.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.573" endtime="20201029 12:44:10.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.575" endtime="20201029 12:44:10.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.549" endtime="20201029 12:44:10.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.547" endtime="20201029 12:44:10.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.584" endtime="20201029 12:44:10.870"></status>
</kw>
<msg timestamp="20201029 12:44:10.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027373042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027431597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.583" endtime="20201029 12:44:10.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027373042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027431597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.875" endtime="20201029 12:44:10.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.884" endtime="20201029 12:44:10.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.580" endtime="20201029 12:44:10.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.579" endtime="20201029 12:44:10.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.890" level="INFO">${RESULT} = [{'diff': 5.855499999999833e-05}, {'diff': 5.8472000000000385e-05}, {'diff': 5.85689999999979e-05}, {'diff': 5.841700000000158e-05}, {'diff': 5.863899999999922e-05}, {'diff': 5.8222000000000135e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:10.887" endtime="20201029 12:44:10.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.895" level="INFO">${ACCURACY} = {'diff': [5.855499999999833e-05, 5.8472000000000385e-05, 5.85689999999979e-05, 5.841700000000158e-05, 5.863899999999922e-05, 5.8222000000000135e-05, 5.763899999999822e-05, 5.836099999999983e-05, 5.843...</msg>
<status status="PASS" starttime="20201029 12:44:10.891" endtime="20201029 12:44:10.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.900" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.899" endtime="20201029 12:44:10.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.902" level="INFO">VALUE: [5.855499999999833e-05, 5.8472000000000385e-05, 5.85689999999979e-05, 5.841700000000158e-05, 5.863899999999922e-05, 5.8222000000000135e-05, 5.763899999999822e-05, 5.836099999999983e-05, 5.843099999999768e-05, 5.845900000000029e-05, 5.8222000000000135e-05, 5.8542000000001704e-05, 5.8249999999999275e-05, 5.8500000000002994e-05, 5.819500000000047e-05, 5.85550000000018e-05, 5.845900000000029e-05, 5.8542000000001704e-05, 5.815300000000176e-05, 5.76810000000004e-05, 5.855499999999833e-05, 5.822299999999961e-05, 5.8472000000000385e-05, 5.838899999999897e-05, 5.8485999999999955e-05, 5.834700000000026e-05, 5.8292000000001454e-05, 5.852699999999919e-05, 5.7666000000001355e-05, 5.863899999999922e-05, 5.85550000000018e-05, 5.8263999999998844e-05, 5.8472000000000385e-05, 5.8194000000000995e-05, 5.86810000000014e-05, 5.862499999999965e-05, 5.844500000000072e-05, 5.83619999999993e-05, 5.7708000000000065e-05, 5.847300000000333e-05, 5.840300000000201e-05, 5.766699999999736e-05, 5.812499999999915e-05, 5.843099999999768e-05, 5.8513999999999095e-05, 5.843099999999768e-05, 5.830500000000155e-05, 5.834700000000026e-05, 5.8500000000002994e-05, 5.8472000000000385e-05]</msg>
<status status="PASS" starttime="20201029 12:44:10.901" endtime="20201029 12:44:10.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.896" endtime="20201029 12:44:10.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.907" endtime="20201029 12:44:10.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.906" endtime="20201029 12:44:10.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.905" endtime="20201029 12:44:10.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.544" endtime="20201029 12:44:10.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.543" endtime="20201029 12:44:10.928"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.937" endtime="20201029 12:44:10.954"></status>
</kw>
<msg timestamp="20201029 12:44:10.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.935" endtime="20201029 12:44:10.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.955" endtime="20201029 12:44:10.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.958" endtime="20201029 12:44:10.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.933" endtime="20201029 12:44:10.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.931" endtime="20201029 12:44:10.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.967" endtime="20201029 12:44:11.256"></status>
</kw>
<msg timestamp="20201029 12:44:11.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.966" endtime="20201029 12:44:11.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.266" endtime="20201029 12:44:11.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.285" endtime="20201029 12:44:11.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.963" endtime="20201029 12:44:11.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.961" endtime="20201029 12:44:11.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.299" level="INFO">${RESULT} = [{'diff': 5.948699999999696e-05}, {'diff': 5.891700000000208e-05}, {'diff': 5.922300000000061e-05}, {'diff': 5.861100000000008e-05}, {'diff': 5.8651999999999316e-05}, {'diff': 5.9429999999999206e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:11.292" endtime="20201029 12:44:11.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.308" level="INFO">${ACCURACY} = {'diff': [5.948699999999696e-05, 5.891700000000208e-05, 5.922300000000061e-05, 5.861100000000008e-05, 5.8651999999999316e-05, 5.9429999999999206e-05, 5.929099999999951e-05, 5.9485999999997485e-05, 5.8...</msg>
<status status="PASS" starttime="20201029 12:44:11.301" endtime="20201029 12:44:11.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.318" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.315" endtime="20201029 12:44:11.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.323" level="INFO">VALUE: [5.948699999999696e-05, 5.891700000000208e-05, 5.922300000000061e-05, 5.861100000000008e-05, 5.8651999999999316e-05, 5.9429999999999206e-05, 5.929099999999951e-05, 5.9485999999997485e-05, 5.8749999999999775e-05, 5.958300000000194e-05, 5.8693999999998026e-05, 5.958299999999847e-05, 5.866699999999836e-05, 5.938899999999997e-05, 5.943100000000215e-05, 5.8722000000000635e-05, 5.9472000000001385e-05, 5.865299999999879e-05, 5.9458000000001815e-05, 5.941700000000258e-05, 5.943100000000215e-05, 5.945900000000129e-05, 5.920899999999757e-05, 5.9235999999997235e-05, 5.944499999999825e-05, 5.9500000000000525e-05, 5.9277999999999414e-05, 5.947300000000086e-05, 5.9583999999997944e-05, 5.955499999999933e-05, 5.922300000000061e-05, 5.9180000000002425e-05, 5.961100000000108e-05, 5.9472000000001385e-05, 5.929099999999951e-05, 5.9193999999998526e-05, 5.8680000000001925e-05, 5.954099999999976e-05, 5.8722000000000635e-05, 5.961100000000108e-05, 5.941700000000258e-05, 5.955499999999933e-05, 5.9250000000000275e-05, 5.8708000000001065e-05, 5.9486000000000955e-05, 5.9458000000001815e-05, 5.865299999999879e-05, 5.933299999999822e-05, 5.945900000000129e-05, 5.86810000000014e-05]</msg>
<status status="PASS" starttime="20201029 12:44:11.320" endtime="20201029 12:44:11.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.310" endtime="20201029 12:44:11.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.333" endtime="20201029 12:44:11.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.330" endtime="20201029 12:44:11.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.328" endtime="20201029 12:44:11.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.929" endtime="20201029 12:44:11.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.929" endtime="20201029 12:44:11.355"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.364" endtime="20201029 12:44:11.383"></status>
</kw>
<msg timestamp="20201029 12:44:11.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.363" endtime="20201029 12:44:11.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.384" endtime="20201029 12:44:11.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.387" endtime="20201029 12:44:11.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.360" endtime="20201029 12:44:11.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.358" endtime="20201029 12:44:11.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.396" endtime="20201029 12:44:11.682"></status>
</kw>
<msg timestamp="20201029 12:44:11.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024022681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024083375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.394" endtime="20201029 12:44:11.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024022681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024083375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.687" endtime="20201029 12:44:11.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.695" endtime="20201029 12:44:11.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.392" endtime="20201029 12:44:11.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.390" endtime="20201029 12:44:11.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.702" level="INFO">${RESULT} = [{'diff': 6.0694000000000026e-05}, {'diff': 6.0250000000001275e-05}, {'diff': 6.0458000000002815e-05}, {'diff': 6.0207999999999096e-05}, {'diff': 5.965299999999979e-05}, {'diff': 6.041700000000011e-05...</msg>
<status status="PASS" starttime="20201029 12:44:11.699" endtime="20201029 12:44:11.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.706" level="INFO">${ACCURACY} = {'diff': [6.0694000000000026e-05, 6.0250000000001275e-05, 6.0458000000002815e-05, 6.0207999999999096e-05, 5.965299999999979e-05, 6.041700000000011e-05, 5.970900000000154e-05, 6.059699999999904e-05, 6....</msg>
<status status="PASS" starttime="20201029 12:44:11.703" endtime="20201029 12:44:11.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.710" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.709" endtime="20201029 12:44:11.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.713" level="INFO">VALUE: [6.0694000000000026e-05, 6.0250000000001275e-05, 6.0458000000002815e-05, 6.0207999999999096e-05, 5.965299999999979e-05, 6.041700000000011e-05, 5.970900000000154e-05, 6.059699999999904e-05, 6.0235999999998235e-05, 6.020899999999857e-05, 6.0528000000000665e-05, 6.0264000000000845e-05, 6.0542000000000235e-05, 6.0583999999998944e-05, 6.0278000000000415e-05, 6.020899999999857e-05, 6.0611999999998084e-05, 6.059699999999904e-05, 6.066700000000036e-05, 6.0514000000001095e-05, 6.051300000000162e-05, 5.988900000000047e-05, 6.036099999999836e-05, 6.0236000000001705e-05, 6.0514000000001095e-05, 6.055500000000033e-05, 6.033299999999922e-05, 5.991699999999961e-05, 6.059699999999904e-05, 6.059699999999904e-05, 6.0235999999998235e-05, 5.9721999999998165e-05, 6.0528000000000665e-05, 6.0555999999999804e-05, 6.0542000000000235e-05, 6.040300000000054e-05, 6.045900000000229e-05, 6.0306000000003024e-05, 5.963900000000022e-05, 6.0348000000001734e-05, 5.977700000000044e-05, 6.047300000000186e-05, 6.034700000000226e-05, 6.030500000000008e-05, 6.0583999999998944e-05, 5.9916000000000136e-05, 6.0235999999998235e-05, 6.0443999999999776e-05, 6.0179999999999956e-05, 6.054100000000076e-05]</msg>
<status status="PASS" starttime="20201029 12:44:11.712" endtime="20201029 12:44:11.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.707" endtime="20201029 12:44:11.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.719" endtime="20201029 12:44:11.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.717" endtime="20201029 12:44:11.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.716" endtime="20201029 12:44:11.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.356" endtime="20201029 12:44:11.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.356" endtime="20201029 12:44:11.740"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.748" endtime="20201029 12:44:11.765"></status>
</kw>
<msg timestamp="20201029 12:44:11.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.747" endtime="20201029 12:44:11.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.767" endtime="20201029 12:44:11.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.769" endtime="20201029 12:44:11.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.744" endtime="20201029 12:44:11.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.742" endtime="20201029 12:44:11.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.778" endtime="20201029 12:44:12.064"></status>
</kw>
<msg timestamp="20201029 12:44:12.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022343069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.777" endtime="20201029 12:44:12.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022343069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.069" endtime="20201029 12:44:12.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.077" endtime="20201029 12:44:12.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.774" endtime="20201029 12:44:12.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.773" endtime="20201029 12:44:12.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.084" level="INFO">${RESULT} = [{'diff': 6.094499999999975e-05}, {'diff': 6.116700000000086e-05}, {'diff': 6.14439999999973e-05}, {'diff': 6.163899999999875e-05}, {'diff': 6.068099999999993e-05}, {'diff': 6.154200000000123e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:12.080" endtime="20201029 12:44:12.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.089" level="INFO">${ACCURACY} = {'diff': [6.094499999999975e-05, 6.116700000000086e-05, 6.14439999999973e-05, 6.163899999999875e-05, 6.068099999999993e-05, 6.154200000000123e-05, 6.145899999999982e-05, 6.141699999999764e-05, 6.12920...</msg>
<status status="PASS" starttime="20201029 12:44:12.085" endtime="20201029 12:44:12.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.093" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.092" endtime="20201029 12:44:12.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.096" level="INFO">VALUE: [6.094499999999975e-05, 6.116700000000086e-05, 6.14439999999973e-05, 6.163899999999875e-05, 6.068099999999993e-05, 6.154200000000123e-05, 6.145899999999982e-05, 6.141699999999764e-05, 6.129200000000098e-05, 6.147199999999992e-05, 6.07629999999984e-05, 6.155500000000133e-05, 6.162500000000265e-05, 6.12499999999988e-05, 6.12080000000001e-05, 6.0736000000002205e-05, 6.133300000000022e-05, 6.130500000000108e-05, 6.123599999999924e-05, 6.0764000000001345e-05, 6.140299999999807e-05, 6.154199999999777e-05, 6.116700000000086e-05, 6.154200000000123e-05, 6.134699999999979e-05, 6.137499999999893e-05, 6.155599999999734e-05, 6.12499999999988e-05, 6.152800000000166e-05, 6.140300000000154e-05, 6.141700000000111e-05, 6.15140000000021e-05, 6.15560000000008e-05, 6.132000000000012e-05, 6.161099999999961e-05, 6.0680000000000456e-05, 6.161099999999961e-05, 6.0694000000000026e-05, 6.159700000000004e-05, 6.127700000000194e-05, 6.140299999999807e-05, 6.0652000000001316e-05, 6.0652000000001316e-05, 6.161099999999961e-05, 6.131900000000065e-05, 6.062500000000165e-05, 6.118000000000096e-05, 6.140299999999807e-05, 6.063900000000122e-05, 6.133300000000022e-05]</msg>
<status status="PASS" starttime="20201029 12:44:12.094" endtime="20201029 12:44:12.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.090" endtime="20201029 12:44:12.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.101" endtime="20201029 12:44:12.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.099" endtime="20201029 12:44:12.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.098" endtime="20201029 12:44:12.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.740" endtime="20201029 12:44:12.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.740" endtime="20201029 12:44:12.121"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.130" endtime="20201029 12:44:12.147"></status>
</kw>
<msg timestamp="20201029 12:44:12.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.128" endtime="20201029 12:44:12.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.149" endtime="20201029 12:44:12.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.151" endtime="20201029 12:44:12.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.126" endtime="20201029 12:44:12.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.124" endtime="20201029 12:44:12.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.160" endtime="20201029 12:44:12.447"></status>
</kw>
<msg timestamp="20201029 12:44:12.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021844153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.159" endtime="20201029 12:44:12.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021844153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.452" endtime="20201029 12:44:12.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.460" endtime="20201029 12:44:12.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.156" endtime="20201029 12:44:12.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.155" endtime="20201029 12:44:12.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.467" level="INFO">${RESULT} = [{'diff': 6.251399999999963e-05}, {'diff': 6.237499999999993e-05}, {'diff': 6.261200000000008e-05}, {'diff': 6.262500000000018e-05}, {'diff': 6.255500000000233e-05}, {'diff': 6.242999999999874e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:12.464" endtime="20201029 12:44:12.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.471" level="INFO">${ACCURACY} = {'diff': [6.251399999999963e-05, 6.237499999999993e-05, 6.261200000000008e-05, 6.262500000000018e-05, 6.255500000000233e-05, 6.242999999999874e-05, 6.227699999999947e-05, 6.22499999999998e-05, 6.26109...</msg>
<status status="PASS" starttime="20201029 12:44:12.468" endtime="20201029 12:44:12.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.476" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.475" endtime="20201029 12:44:12.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.478" level="INFO">VALUE: [6.251399999999963e-05, 6.237499999999993e-05, 6.261200000000008e-05, 6.262500000000018e-05, 6.255500000000233e-05, 6.242999999999874e-05, 6.227699999999947e-05, 6.22499999999998e-05, 6.261099999999714e-05, 6.255499999999886e-05, 6.24300000000022e-05, 6.244499999999778e-05, 6.250000000000006e-05, 6.169400000000103e-05, 6.237499999999993e-05, 6.17080000000006e-05, 6.251399999999963e-05, 6.223600000000024e-05, 6.247200000000092e-05, 6.236100000000036e-05, 6.216699999999839e-05, 6.250000000000006e-05, 6.263899999999975e-05, 6.226399999999938e-05, 6.173599999999974e-05, 6.163899999999875e-05, 6.172299999999964e-05, 6.245899999999735e-05, 6.248699999999996e-05, 6.232000000000112e-05, 6.223600000000024e-05, 6.229099999999904e-05, 6.168000000000146e-05, 6.230499999999861e-05, 6.225000000000327e-05, 6.22080000000011e-05, 6.242999999999874e-05, 6.166600000000189e-05, 6.217999999999849e-05, 6.243100000000168e-05, 6.244400000000178e-05, 6.250000000000006e-05, 6.263899999999975e-05, 6.245800000000135e-05, 6.169400000000103e-05, 6.24439999999983e-05, 6.169499999999703e-05, 6.258399999999747e-05, 6.222200000000067e-05, 6.250000000000006e-05]</msg>
<status status="PASS" starttime="20201029 12:44:12.477" endtime="20201029 12:44:12.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.472" endtime="20201029 12:44:12.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.483" endtime="20201029 12:44:12.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.482" endtime="20201029 12:44:12.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.480" endtime="20201029 12:44:12.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.122" endtime="20201029 12:44:12.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.121" endtime="20201029 12:44:12.504"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.512" endtime="20201029 12:44:12.530"></status>
</kw>
<msg timestamp="20201029 12:44:12.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.511" endtime="20201029 12:44:12.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.532" endtime="20201029 12:44:12.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.534" endtime="20201029 12:44:12.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.508" endtime="20201029 12:44:12.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.506" endtime="20201029 12:44:12.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.543" endtime="20201029 12:44:12.829"></status>
</kw>
<msg timestamp="20201029 12:44:12.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023077597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023140597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.542" endtime="20201029 12:44:12.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023077597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023140597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.833" endtime="20201029 12:44:12.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.842" endtime="20201029 12:44:12.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.539" endtime="20201029 12:44:12.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.538" endtime="20201029 12:44:12.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.848" level="INFO">${RESULT} = [{'diff': 6.300000000000056e-05}, {'diff': 6.333299999999875e-05}, {'diff': 6.331899999999918e-05}, {'diff': 6.333299999999875e-05}, {'diff': 6.334700000000179e-05}, {'diff': 6.340300000000007e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:12.845" endtime="20201029 12:44:12.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.853" level="INFO">${ACCURACY} = {'diff': [6.300000000000056e-05, 6.333299999999875e-05, 6.331899999999918e-05, 6.333299999999875e-05, 6.334700000000179e-05, 6.340300000000007e-05, 6.326400000000038e-05, 6.362499999999771e-05, 6.3166...</msg>
<status status="PASS" starttime="20201029 12:44:12.849" endtime="20201029 12:44:12.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.857" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.856" endtime="20201029 12:44:12.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.860" level="INFO">VALUE: [6.300000000000056e-05, 6.333299999999875e-05, 6.331899999999918e-05, 6.333299999999875e-05, 6.334700000000179e-05, 6.340300000000007e-05, 6.326400000000038e-05, 6.362499999999771e-05, 6.316699999999939e-05, 6.312499999999721e-05, 6.363899999999728e-05, 6.32639999999969e-05, 6.263899999999975e-05, 6.26950000000015e-05, 6.319499999999853e-05, 6.269499999999803e-05, 6.354199999999977e-05, 6.361100000000161e-05, 6.265300000000279e-05, 6.269399999999856e-05, 6.331899999999918e-05, 6.266699999999889e-05, 6.363900000000075e-05, 6.319399999999906e-05, 6.262499999999671e-05, 6.323600000000124e-05, 6.258300000000147e-05, 6.269399999999856e-05, 6.273599999999727e-05, 6.366699999999989e-05, 6.32639999999969e-05, 6.266599999999942e-05, 6.334700000000179e-05, 6.322200000000167e-05, 6.363900000000075e-05, 6.3582999999999e-05, 6.366699999999989e-05, 6.330599999999909e-05, 6.362500000000118e-05, 6.323600000000124e-05, 6.273600000000074e-05, 6.268000000000246e-05, 6.338899999999703e-05, 6.26950000000015e-05, 6.329199999999952e-05, 6.358400000000194e-05, 6.359800000000151e-05, 6.32500000000008e-05, 6.313900000000025e-05, 6.348600000000149e-05]</msg>
<status status="PASS" starttime="20201029 12:44:12.858" endtime="20201029 12:44:12.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.853" endtime="20201029 12:44:12.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.866" endtime="20201029 12:44:12.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.864" endtime="20201029 12:44:12.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.863" endtime="20201029 12:44:12.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.505" endtime="20201029 12:44:12.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.504" endtime="20201029 12:44:12.886"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.895" endtime="20201029 12:44:12.912"></status>
</kw>
<msg timestamp="20201029 12:44:12.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.893" endtime="20201029 12:44:12.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.913" endtime="20201029 12:44:12.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.916" endtime="20201029 12:44:12.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.891" endtime="20201029 12:44:12.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.889" endtime="20201029 12:44:12.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.925" endtime="20201029 12:44:13.211"></status>
</kw>
<msg timestamp="20201029 12:44:13.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.924" endtime="20201029 12:44:13.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.215" endtime="20201029 12:44:13.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.224" endtime="20201029 12:44:13.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.921" endtime="20201029 12:44:13.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.919" endtime="20201029 12:44:13.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:13.230" level="INFO">${RESULT} = [{'diff': 6.42219999999992e-05}, {'diff': 6.461099999999914e-05}, {'diff': 6.44440000000003e-05}, {'diff': 6.423599999999877e-05}, {'diff': 6.42219999999992e-05}, {'diff': 6.373599999999827e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:44:13.227" endtime="20201029 12:44:13.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:13.235" level="INFO">${ACCURACY} = {'diff': [6.42219999999992e-05, 6.461099999999914e-05, 6.44440000000003e-05, 6.423599999999877e-05, 6.42219999999992e-05, 6.373599999999827e-05, 6.43890000000015e-05, 6.363900000000075e-05, 6.44160000...</msg>
<status status="PASS" starttime="20201029 12:44:13.231" endtime="20201029 12:44:13.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.240" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 12:44:13.239" endtime="20201029 12:44:13.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.242" level="INFO">VALUE: [6.42219999999992e-05, 6.461099999999914e-05, 6.44440000000003e-05, 6.423599999999877e-05, 6.42219999999992e-05, 6.373599999999827e-05, 6.43890000000015e-05, 6.363900000000075e-05, 6.441600000000117e-05, 6.372200000000217e-05, 6.436100000000236e-05, 6.459699999999957e-05, 6.444499999999978e-05, 6.373600000000174e-05, 6.45280000000012e-05, 6.376400000000088e-05, 6.449999999999859e-05, 6.366699999999989e-05, 6.418099999999996e-05, 6.455600000000034e-05, 6.422200000000267e-05, 6.370900000000207e-05, 6.448599999999902e-05, 6.463899999999828e-05, 6.415300000000082e-05, 6.390300000000057e-05, 6.43890000000015e-05, 6.374999999999784e-05, 6.462499999999871e-05, 6.43890000000015e-05, 6.367999999999999e-05, 6.456900000000043e-05, 6.376400000000088e-05, 6.4583e-05, 6.424999999999834e-05, 6.443000000000074e-05, 6.431900000000018e-05, 6.429200000000052e-05, 6.419400000000006e-05, 6.416700000000039e-05, 6.365300000000032e-05, 6.433300000000322e-05, 6.461099999999914e-05, 6.455600000000034e-05, 6.454200000000077e-05, 6.451400000000163e-05, 6.372299999999817e-05, 6.451399999999816e-05, 6.37639999999974e-05, 6.459799999999905e-05]</msg>
<status status="PASS" starttime="20201029 12:44:13.241" endtime="20201029 12:44:13.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.236" endtime="20201029 12:44:13.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:13.251" endtime="20201029 12:44:13.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.250" endtime="20201029 12:44:13.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.249" endtime="20201029 12:44:13.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.887" endtime="20201029 12:44:13.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.887" endtime="20201029 12:44:13.272"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.281" endtime="20201029 12:44:13.298"></status>
</kw>
<msg timestamp="20201029 12:44:13.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.279" endtime="20201029 12:44:13.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.300" endtime="20201029 12:44:13.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.302" endtime="20201029 12:44:13.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.276" endtime="20201029 12:44:13.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.274" endtime="20201029 12:44:13.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.311" endtime="20201029 12:44:13.600"></status>
</kw>
<msg timestamp="20201029 12:44:13.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022291458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.310" endtime="20201029 12:44:13.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022291458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.604" endtime="20201029 12:44:13.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.613" endtime="20201029 12:44:13.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.307" endtime="20201029 12:44:13.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.305" endtime="20201029 12:44:13.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:13.619" level="INFO">${RESULT} = [{'diff': 6.487499999999896e-05}, {'diff': 6.549999999999959e-05}, {'diff': 6.524999999999934e-05}, {'diff': 6.47219999999997e-05}, {'diff': 6.474999999999884e-05}, {'diff': 6.562499999999971e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:13.616" endtime="20201029 12:44:13.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:13.625" level="INFO">${ACCURACY} = {'diff': [6.487499999999896e-05, 6.549999999999959e-05, 6.524999999999934e-05, 6.47219999999997e-05, 6.474999999999884e-05, 6.562499999999971e-05, 6.547200000000045e-05, 6.520800000000063e-05, 6.55970...</msg>
<status status="PASS" starttime="20201029 12:44:13.620" endtime="20201029 12:44:13.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.630" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 12:44:13.629" endtime="20201029 12:44:13.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.632" level="INFO">VALUE: [6.487499999999896e-05, 6.549999999999959e-05, 6.524999999999934e-05, 6.47219999999997e-05, 6.474999999999884e-05, 6.562499999999971e-05, 6.547200000000045e-05, 6.520800000000063e-05, 6.559700000000057e-05, 6.555600000000134e-05, 6.519500000000053e-05, 6.527799999999848e-05, 6.549999999999959e-05, 6.468100000000046e-05, 6.555599999999787e-05, 6.537500000000293e-05, 6.529200000000152e-05, 6.469500000000003e-05, 6.529099999999857e-05, 6.47089999999996e-05, 6.544399999999784e-05, 6.474999999999884e-05, 6.555499999999839e-05, 6.469400000000056e-05, 6.552700000000272e-05, 6.533300000000075e-05, 6.529099999999857e-05, 6.52220000000002e-05, 6.537499999999946e-05, 6.52220000000002e-05, 6.465299999999785e-05, 6.466700000000089e-05, 6.534700000000032e-05, 6.551399999999916e-05, 6.549999999999959e-05, 6.524999999999934e-05, 6.556999999999744e-05, 6.524999999999934e-05, 6.551399999999916e-05, 6.5583000000001e-05, 6.533400000000023e-05, 6.543100000000121e-05, 6.516700000000139e-05, 6.468100000000046e-05, 6.466699999999742e-05, 6.563899999999928e-05, 6.531899999999771e-05, 6.548600000000002e-05, 6.517999999999802e-05, 6.536099999999989e-05]</msg>
<status status="PASS" starttime="20201029 12:44:13.631" endtime="20201029 12:44:13.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.626" endtime="20201029 12:44:13.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:13.637" endtime="20201029 12:44:13.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.635" endtime="20201029 12:44:13.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.634" endtime="20201029 12:44:13.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.273" endtime="20201029 12:44:13.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.272" endtime="20201029 12:44:13.658"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.666" endtime="20201029 12:44:13.686"></status>
</kw>
<msg timestamp="20201029 12:44:13.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.665" endtime="20201029 12:44:13.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.688" endtime="20201029 12:44:13.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.691" endtime="20201029 12:44:13.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.662" endtime="20201029 12:44:13.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.660" endtime="20201029 12:44:13.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.699" endtime="20201029 12:44:13.986"></status>
</kw>
<msg timestamp="20201029 12:44:13.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024923708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024990431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.698" endtime="20201029 12:44:13.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024923708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024990431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.990" endtime="20201029 12:44:13.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.999" endtime="20201029 12:44:14.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.695" endtime="20201029 12:44:14.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.694" endtime="20201029 12:44:14.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.005" level="INFO">${RESULT} = [{'diff': 6.672300000000117e-05}, {'diff': 6.644399999999884e-05}, {'diff': 6.625000000000034e-05}, {'diff': 6.565199999999938e-05}, {'diff': 6.665200000000038e-05}, {'diff': 6.630499999999914e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:14.002" endtime="20201029 12:44:14.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.009" level="INFO">${ACCURACY} = {'diff': [6.672300000000117e-05, 6.644399999999884e-05, 6.625000000000034e-05, 6.565199999999938e-05, 6.665200000000038e-05, 6.630499999999914e-05, 6.623600000000077e-05, 6.569400000000156e-05, 6.5749...</msg>
<status status="PASS" starttime="20201029 12:44:14.006" endtime="20201029 12:44:14.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.014" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.013" endtime="20201029 12:44:14.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.016" level="INFO">VALUE: [6.672300000000117e-05, 6.644399999999884e-05, 6.625000000000034e-05, 6.565199999999938e-05, 6.665200000000038e-05, 6.630499999999914e-05, 6.623600000000077e-05, 6.569400000000156e-05, 6.574999999999984e-05, 6.647200000000145e-05, 6.645799999999841e-05, 6.565300000000232e-05, 6.616699999999892e-05, 6.568099999999799e-05, 6.627799999999948e-05, 6.651400000000016e-05, 6.574999999999984e-05, 6.633299999999828e-05, 6.661099999999767e-05, 6.650000000000059e-05, 6.636100000000089e-05, 6.633400000000123e-05, 6.630600000000209e-05, 6.64029999999996e-05, 6.627799999999948e-05, 6.572300000000017e-05, 6.567999999999852e-05, 6.565199999999938e-05, 6.631899999999871e-05, 6.62220000000012e-05, 6.634700000000132e-05, 6.590199999999963e-05, 6.573600000000027e-05, 6.57220000000007e-05, 6.569400000000156e-05, 6.566699999999842e-05, 6.620799999999816e-05, 6.658299999999853e-05, 6.634700000000132e-05, 6.636100000000089e-05, 6.64029999999996e-05, 6.643099999999874e-05, 6.573600000000027e-05, 6.65700000000019e-05, 6.565299999999885e-05, 6.643099999999874e-05, 6.568100000000146e-05, 6.652799999999973e-05, 6.636100000000089e-05, 6.622300000000067e-05]</msg>
<status status="PASS" starttime="20201029 12:44:14.015" endtime="20201029 12:44:14.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.010" endtime="20201029 12:44:14.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.022" endtime="20201029 12:44:14.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.021" endtime="20201029 12:44:14.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.020" endtime="20201029 12:44:14.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.659" endtime="20201029 12:44:14.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.658" endtime="20201029 12:44:14.043"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.051" endtime="20201029 12:44:14.069"></status>
</kw>
<msg timestamp="20201029 12:44:14.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.050" endtime="20201029 12:44:14.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.070" endtime="20201029 12:44:14.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.073" endtime="20201029 12:44:14.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.047" endtime="20201029 12:44:14.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.045" endtime="20201029 12:44:14.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.082" endtime="20201029 12:44:14.379"></status>
</kw>
<msg timestamp="20201029 12:44:14.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022350458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:14.081" endtime="20201029 12:44:14.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022350458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:14.383" endtime="20201029 12:44:14.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.391" endtime="20201029 12:44:14.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.078" endtime="20201029 12:44:14.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.076" endtime="20201029 12:44:14.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.398" level="INFO">${RESULT} = [{'diff': 6.695799999999891e-05}, {'diff': 6.718000000000002e-05}, {'diff': 6.670799999999866e-05}, {'diff': 6.745799999999941e-05}, {'diff': 6.727800000000048e-05}, {'diff': 6.726399999999744e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:14.395" endtime="20201029 12:44:14.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.403" level="INFO">${ACCURACY} = {'diff': [6.695799999999891e-05, 6.718000000000002e-05, 6.670799999999866e-05, 6.745799999999941e-05, 6.727800000000048e-05, 6.726399999999744e-05, 6.752799999999726e-05, 6.744399999999984e-05, 6.7499...</msg>
<status status="PASS" starttime="20201029 12:44:14.399" endtime="20201029 12:44:14.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.407" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.406" endtime="20201029 12:44:14.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.410" level="INFO">VALUE: [6.695799999999891e-05, 6.718000000000002e-05, 6.670799999999866e-05, 6.745799999999941e-05, 6.727800000000048e-05, 6.726399999999744e-05, 6.752799999999726e-05, 6.744399999999984e-05, 6.749999999999812e-05, 6.729200000000005e-05, 6.723699999999777e-05, 6.75420000000003e-05, 6.729200000000005e-05, 6.669500000000203e-05, 6.737500000000146e-05, 6.743099999999974e-05, 6.719499999999906e-05, 6.751399999999769e-05, 6.752800000000073e-05, 6.743000000000027e-05, 6.727800000000048e-05, 6.726300000000143e-05, 6.718000000000002e-05, 6.675000000000084e-05, 6.72640000000009e-05, 6.690200000000063e-05, 6.744399999999984e-05, 6.69160000000002e-05, 6.72220000000022e-05, 6.745799999999941e-05, 6.670800000000213e-05, 6.752799999999726e-05, 6.752800000000073e-05, 6.762499999999824e-05, 6.727800000000048e-05, 6.74030000000006e-05, 6.666699999999942e-05, 6.763900000000128e-05, 6.729200000000005e-05, 6.736100000000189e-05, 6.720899999999863e-05, 6.762499999999824e-05, 6.763899999999781e-05, 6.737500000000146e-05, 6.67359999999978e-05, 6.67229999999977e-05, 6.724999999999787e-05, 6.67359999999978e-05, 6.763899999999781e-05, 6.761099999999867e-05]</msg>
<status status="PASS" starttime="20201029 12:44:14.408" endtime="20201029 12:44:14.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.404" endtime="20201029 12:44:14.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.415" endtime="20201029 12:44:14.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.413" endtime="20201029 12:44:14.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.412" endtime="20201029 12:44:14.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.044" endtime="20201029 12:44:14.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.043" endtime="20201029 12:44:14.435"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.444" endtime="20201029 12:44:14.461"></status>
</kw>
<msg timestamp="20201029 12:44:14.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.442" endtime="20201029 12:44:14.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.462" endtime="20201029 12:44:14.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.465" endtime="20201029 12:44:14.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.440" endtime="20201029 12:44:14.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.438" endtime="20201029 12:44:14.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.474" endtime="20201029 12:44:14.761"></status>
</kw>
<msg timestamp="20201029 12:44:14.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.472" endtime="20201029 12:44:14.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.765" endtime="20201029 12:44:14.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.774" endtime="20201029 12:44:14.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.470" endtime="20201029 12:44:14.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.468" endtime="20201029 12:44:14.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.781" level="INFO">${RESULT} = [{'diff': 6.834699999999985e-05}, {'diff': 6.857000000000044e-05}, {'diff': 6.851399999999869e-05}, {'diff': 6.820800000000016e-05}, {'diff': 6.775000000000184e-05}, {'diff': 6.849999999999912e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:14.777" endtime="20201029 12:44:14.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.785" level="INFO">${ACCURACY} = {'diff': [6.834699999999985e-05, 6.857000000000044e-05, 6.851399999999869e-05, 6.820800000000016e-05, 6.775000000000184e-05, 6.849999999999912e-05, 6.865300000000185e-05, 6.770799999999966e-05, 6.8180...</msg>
<status status="PASS" starttime="20201029 12:44:14.782" endtime="20201029 12:44:14.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.789" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.788" endtime="20201029 12:44:14.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.792" level="INFO">VALUE: [6.834699999999985e-05, 6.857000000000044e-05, 6.851399999999869e-05, 6.820800000000016e-05, 6.775000000000184e-05, 6.849999999999912e-05, 6.865300000000185e-05, 6.770799999999966e-05, 6.818000000000102e-05, 6.851400000000216e-05, 6.765299999999738e-05, 6.851399999999869e-05, 6.833300000000028e-05, 6.827799999999801e-05, 6.848599999999955e-05, 6.847199999999998e-05, 6.772300000000217e-05, 6.822199999999973e-05, 6.768099999999999e-05, 6.82359999999993e-05, 6.837499999999899e-05, 6.838899999999856e-05, 6.852799999999826e-05, 6.827800000000148e-05, 6.827799999999801e-05, 6.813900000000178e-05, 6.851399999999869e-05, 6.862499999999924e-05, 6.765200000000138e-05, 6.777800000000098e-05, 6.830499999999767e-05, 6.848599999999955e-05, 6.84299999999978e-05, 6.769400000000009e-05, 6.845800000000041e-05, 6.833300000000028e-05, 6.833300000000028e-05, 6.824999999999887e-05, 6.818100000000049e-05, 6.843100000000074e-05, 6.768099999999999e-05, 6.855600000000087e-05, 6.838900000000203e-05, 6.829200000000105e-05, 6.844500000000031e-05, 6.765300000000085e-05, 6.851399999999869e-05, 6.769499999999956e-05, 6.859799999999958e-05, 6.830499999999767e-05]</msg>
<status status="PASS" starttime="20201029 12:44:14.790" endtime="20201029 12:44:14.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.786" endtime="20201029 12:44:14.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.797" endtime="20201029 12:44:14.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.795" endtime="20201029 12:44:14.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.794" endtime="20201029 12:44:14.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.436" endtime="20201029 12:44:14.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.436" endtime="20201029 12:44:14.817"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.826" endtime="20201029 12:44:14.844"></status>
</kw>
<msg timestamp="20201029 12:44:14.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.825" endtime="20201029 12:44:14.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.846" endtime="20201029 12:44:14.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.849" endtime="20201029 12:44:14.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.822" endtime="20201029 12:44:14.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.820" endtime="20201029 12:44:14.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.858" endtime="20201029 12:44:15.143"></status>
</kw>
<msg timestamp="20201029 12:44:15.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023045875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023115333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.856" endtime="20201029 12:44:15.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023045875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023115333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.147" endtime="20201029 12:44:15.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.156" endtime="20201029 12:44:15.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.854" endtime="20201029 12:44:15.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.852" endtime="20201029 12:44:15.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.162" level="INFO">${RESULT} = [{'diff': 6.945799999999794e-05}, {'diff': 6.930499999999867e-05}, {'diff': 6.961100000000067e-05}, {'diff': 6.866700000000142e-05}, {'diff': 6.92360000000003e-05}, {'diff': 6.961100000000067e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:15.159" endtime="20201029 12:44:15.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.166" level="INFO">${ACCURACY} = {'diff': [6.945799999999794e-05, 6.930499999999867e-05, 6.961100000000067e-05, 6.866700000000142e-05, 6.92360000000003e-05, 6.961100000000067e-05, 6.87359999999998e-05, 6.87359999999998e-05, 6.9361000...</msg>
<status status="PASS" starttime="20201029 12:44:15.163" endtime="20201029 12:44:15.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.171" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.170" endtime="20201029 12:44:15.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.174" level="INFO">VALUE: [6.945799999999794e-05, 6.930499999999867e-05, 6.961100000000067e-05, 6.866700000000142e-05, 6.92360000000003e-05, 6.961100000000067e-05, 6.87359999999998e-05, 6.87359999999998e-05, 6.936100000000042e-05, 6.862499999999924e-05, 6.932000000000119e-05, 6.955600000000187e-05, 6.929199999999858e-05, 6.954199999999883e-05, 6.87359999999998e-05, 6.927799999999901e-05, 6.865300000000185e-05, 6.930599999999815e-05, 6.941700000000217e-05, 6.955499999999892e-05, 6.958300000000153e-05, 6.95970000000011e-05, 6.94030000000026e-05, 6.940199999999966e-05, 6.938899999999956e-05, 6.922200000000073e-05, 6.92360000000003e-05, 6.922200000000073e-05, 6.945800000000141e-05, 6.95420000000023e-05, 6.956900000000196e-05, 6.948700000000002e-05, 6.922199999999726e-05, 6.876399999999894e-05, 6.936100000000042e-05, 6.936100000000042e-05, 6.868099999999752e-05, 6.952799999999926e-05, 6.951399999999969e-05, 6.94169999999987e-05, 6.945899999999741e-05, 6.948700000000002e-05, 6.920800000000116e-05, 6.92360000000003e-05, 6.937499999999999e-05, 6.930500000000214e-05, 6.937499999999999e-05, 6.958299999999806e-05, 6.948600000000055e-05, 6.919400000000159e-05]</msg>
<status status="PASS" starttime="20201029 12:44:15.172" endtime="20201029 12:44:15.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.167" endtime="20201029 12:44:15.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.179" endtime="20201029 12:44:15.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.178" endtime="20201029 12:44:15.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.177" endtime="20201029 12:44:15.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.819" endtime="20201029 12:44:15.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.818" endtime="20201029 12:44:15.200"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.209" endtime="20201029 12:44:15.226"></status>
</kw>
<msg timestamp="20201029 12:44:15.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.207" endtime="20201029 12:44:15.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.228" endtime="20201029 12:44:15.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.230" endtime="20201029 12:44:15.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.204" endtime="20201029 12:44:15.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.202" endtime="20201029 12:44:15.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.239" endtime="20201029 12:44:15.525"></status>
</kw>
<msg timestamp="20201029 12:44:15.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.238" endtime="20201029 12:44:15.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.530" endtime="20201029 12:44:15.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.538" endtime="20201029 12:44:15.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.235" endtime="20201029 12:44:15.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.233" endtime="20201029 12:44:15.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.545" level="INFO">${RESULT} = [{'diff': 6.986100000000092e-05}, {'diff': 7.05689999999995e-05}, {'diff': 7.055499999999992e-05}, {'diff': 7.036100000000142e-05}, {'diff': 7.059699999999863e-05}, {'diff': 7.049999999999765e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:15.542" endtime="20201029 12:44:15.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.551" level="INFO">${ACCURACY} = {'diff': [6.986100000000092e-05, 7.05689999999995e-05, 7.055499999999992e-05, 7.036100000000142e-05, 7.059699999999863e-05, 7.049999999999765e-05, 7.016599999999998e-05, 7.050000000000112e-05, 7.03189...</msg>
<status status="PASS" starttime="20201029 12:44:15.546" endtime="20201029 12:44:15.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.555" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.554" endtime="20201029 12:44:15.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.558" level="INFO">VALUE: [6.986100000000092e-05, 7.05689999999995e-05, 7.055499999999992e-05, 7.036100000000142e-05, 7.059699999999863e-05, 7.049999999999765e-05, 7.016599999999998e-05, 7.050000000000112e-05, 7.031899999999924e-05, 7.031899999999924e-05, 7.052800000000026e-05, 6.975000000000037e-05, 7.034700000000185e-05, 7.055600000000287e-05, 6.968100000000199e-05, 7.043099999999927e-05, 7.048600000000155e-05, 7.062500000000124e-05, 7.026400000000044e-05, 7.062500000000124e-05, 7.044500000000231e-05, 7.030499999999967e-05, 7.048600000000155e-05, 7.045800000000241e-05, 7.031899999999924e-05, 7.04299999999998e-05, 7.051400000000069e-05, 6.967999999999905e-05, 7.05689999999995e-05, 7.02360000000013e-05, 7.020799999999869e-05, 6.970799999999819e-05, 7.05689999999995e-05, 6.966700000000242e-05, 7.033400000000176e-05, 7.038899999999709e-05, 7.052800000000026e-05, 7.038899999999709e-05, 7.051400000000069e-05, 7.051400000000069e-05, 6.969500000000156e-05, 7.049999999999765e-05, 7.056999999999897e-05, 7.020900000000163e-05, 6.966699999999895e-05, 7.055499999999992e-05, 7.019399999999912e-05, 7.036100000000142e-05, 6.967999999999905e-05, 7.055499999999992e-05]</msg>
<status status="PASS" starttime="20201029 12:44:15.556" endtime="20201029 12:44:15.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.551" endtime="20201029 12:44:15.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.563" endtime="20201029 12:44:15.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.561" endtime="20201029 12:44:15.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.560" endtime="20201029 12:44:15.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.201" endtime="20201029 12:44:15.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.200" endtime="20201029 12:44:15.584"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.593" endtime="20201029 12:44:15.610"></status>
</kw>
<msg timestamp="20201029 12:44:15.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.591" endtime="20201029 12:44:15.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.612" endtime="20201029 12:44:15.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.614" endtime="20201029 12:44:15.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.589" endtime="20201029 12:44:15.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.586" endtime="20201029 12:44:15.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.624" endtime="20201029 12:44:15.932"></status>
</kw>
<msg timestamp="20201029 12:44:15.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.622" endtime="20201029 12:44:15.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.936" endtime="20201029 12:44:15.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.945" endtime="20201029 12:44:15.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.620" endtime="20201029 12:44:15.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.618" endtime="20201029 12:44:15.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.953" level="INFO">${RESULT} = [{'diff': 7.094499999999934e-05}, {'diff': 7.07360000000018e-05}, {'diff': 7.079200000000008e-05}, {'diff': 7.155599999999693e-05}, {'diff': 7.120799999999969e-05}, {'diff': 7.120899999999916e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:15.949" endtime="20201029 12:44:15.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.957" level="INFO">${ACCURACY} = {'diff': [7.094499999999934e-05, 7.07360000000018e-05, 7.079200000000008e-05, 7.155599999999693e-05, 7.120799999999969e-05, 7.120899999999916e-05, 7.072200000000223e-05, 7.144400000000037e-05, 7.14999...</msg>
<status status="PASS" starttime="20201029 12:44:15.954" endtime="20201029 12:44:15.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.962" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.961" endtime="20201029 12:44:15.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.964" level="INFO">VALUE: [7.094499999999934e-05, 7.07360000000018e-05, 7.079200000000008e-05, 7.155599999999693e-05, 7.120799999999969e-05, 7.120899999999916e-05, 7.072200000000223e-05, 7.144400000000037e-05, 7.149999999999865e-05, 7.162500000000224e-05, 7.147200000000298e-05, 7.07360000000018e-05, 7.066600000000048e-05, 7.133299999999981e-05, 7.140300000000113e-05, 7.076400000000094e-05, 7.130600000000015e-05, 7.0762999999998e-05, 7.144500000000331e-05, 7.147199999999951e-05, 7.118100000000002e-05, 7.063900000000081e-05, 7.154200000000083e-05, 7.163899999999834e-05, 7.116600000000098e-05, 7.118100000000002e-05, 7.084800000000183e-05, 7.12629999999985e-05, 7.145799999999994e-05, 7.063800000000134e-05, 7.070799999999919e-05, 7.150000000000212e-05, 7.131900000000024e-05, 7.123599999999883e-05, 7.136099999999895e-05, 7.14300000000008e-05, 7.156899999999702e-05, 7.140299999999766e-05, 7.07499999999979e-05, 7.143100000000027e-05, 7.116700000000045e-05, 7.122199999999926e-05, 7.136099999999895e-05, 7.152800000000126e-05, 7.148599999999908e-05, 7.127800000000101e-05, 7.122199999999926e-05, 7.150000000000212e-05, 7.143100000000027e-05, 7.07369999999978e-05]</msg>
<status status="PASS" starttime="20201029 12:44:15.963" endtime="20201029 12:44:15.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.958" endtime="20201029 12:44:15.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.970" endtime="20201029 12:44:15.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.968" endtime="20201029 12:44:15.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.967" endtime="20201029 12:44:15.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.585" endtime="20201029 12:44:15.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.584" endtime="20201029 12:44:15.991"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.000" endtime="20201029 12:44:16.019"></status>
</kw>
<msg timestamp="20201029 12:44:16.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.998" endtime="20201029 12:44:16.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.021" endtime="20201029 12:44:16.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.023" endtime="20201029 12:44:16.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.995" endtime="20201029 12:44:16.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.993" endtime="20201029 12:44:16.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.033" endtime="20201029 12:44:16.319"></status>
</kw>
<msg timestamp="20201029 12:44:16.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023881681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.031" endtime="20201029 12:44:16.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023881681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.324" endtime="20201029 12:44:16.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.332" endtime="20201029 12:44:16.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.028" endtime="20201029 12:44:16.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.027" endtime="20201029 12:44:16.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.339" level="INFO">${RESULT} = [{'diff': 7.230599999999768e-05}, {'diff': 7.247299999999998e-05}, {'diff': 7.247299999999998e-05}, {'diff': 7.166700000000095e-05}, {'diff': 7.237500000000299e-05}, {'diff': 7.234799999999986e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:16.336" endtime="20201029 12:44:16.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.344" level="INFO">${ACCURACY} = {'diff': [7.230599999999768e-05, 7.247299999999998e-05, 7.247299999999998e-05, 7.166700000000095e-05, 7.237500000000299e-05, 7.234799999999986e-05, 7.249999999999965e-05, 7.163800000000234e-05, 7.2276...</msg>
<status status="PASS" starttime="20201029 12:44:16.340" endtime="20201029 12:44:16.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.348" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.347" endtime="20201029 12:44:16.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.351" level="INFO">VALUE: [7.230599999999768e-05, 7.247299999999998e-05, 7.247299999999998e-05, 7.166700000000095e-05, 7.237500000000299e-05, 7.234799999999986e-05, 7.249999999999965e-05, 7.163800000000234e-05, 7.227699999999906e-05, 7.237500000000299e-05, 7.227699999999906e-05, 7.254099999999888e-05, 7.226399999999897e-05, 7.222199999999679e-05, 7.220800000000069e-05, 7.226400000000244e-05, 7.262499999999977e-05, 7.230600000000115e-05, 7.25699999999975e-05, 7.172199999999976e-05, 7.226400000000244e-05, 7.252799999999879e-05, 7.258300000000106e-05, 7.17499999999989e-05, 7.254200000000183e-05, 7.22369999999993e-05, 7.249999999999965e-05, 7.259699999999716e-05, 7.241699999999823e-05, 7.17499999999989e-05, 7.190200000000216e-05, 7.167999999999758e-05, 7.177800000000151e-05, 7.22499999999994e-05, 7.251399999999922e-05, 7.215299999999841e-05, 7.231900000000124e-05, 7.238900000000256e-05, 7.22499999999994e-05, 7.244500000000084e-05, 7.169500000000009e-05, 7.238899999999909e-05, 7.262499999999977e-05, 7.259700000000063e-05, 7.251399999999922e-05, 7.245900000000041e-05, 7.263899999999934e-05, 7.232000000000072e-05, 7.172299999999923e-05, 7.254099999999888e-05]</msg>
<status status="PASS" starttime="20201029 12:44:16.350" endtime="20201029 12:44:16.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.345" endtime="20201029 12:44:16.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.357" endtime="20201029 12:44:16.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.355" endtime="20201029 12:44:16.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.354" endtime="20201029 12:44:16.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.992" endtime="20201029 12:44:16.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.991" endtime="20201029 12:44:16.378"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.387" endtime="20201029 12:44:16.404"></status>
</kw>
<msg timestamp="20201029 12:44:16.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.385" endtime="20201029 12:44:16.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.405" endtime="20201029 12:44:16.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.408" endtime="20201029 12:44:16.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.382" endtime="20201029 12:44:16.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.380" endtime="20201029 12:44:16.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.417" endtime="20201029 12:44:16.704"></status>
</kw>
<msg timestamp="20201029 12:44:16.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.416" endtime="20201029 12:44:16.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.709" endtime="20201029 12:44:16.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.717" endtime="20201029 12:44:16.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.413" endtime="20201029 12:44:16.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.411" endtime="20201029 12:44:16.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.724" level="INFO">${RESULT} = [{'diff': 7.341699999999923e-05}, {'diff': 7.317999999999908e-05}, {'diff': 7.319500000000159e-05}, {'diff': 7.35560000000024e-05}, {'diff': 7.332000000000172e-05}, {'diff': 7.350000000000065e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:16.721" endtime="20201029 12:44:16.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.729" level="INFO">${ACCURACY} = {'diff': [7.341699999999923e-05, 7.317999999999908e-05, 7.319500000000159e-05, 7.35560000000024e-05, 7.332000000000172e-05, 7.350000000000065e-05, 7.365299999999991e-05, 7.363899999999687e-05, 7.34859...</msg>
<status status="PASS" starttime="20201029 12:44:16.725" endtime="20201029 12:44:16.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.734" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.733" endtime="20201029 12:44:16.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.737" level="INFO">VALUE: [7.341699999999923e-05, 7.317999999999908e-05, 7.319500000000159e-05, 7.35560000000024e-05, 7.332000000000172e-05, 7.350000000000065e-05, 7.365299999999991e-05, 7.363899999999687e-05, 7.348599999999761e-05, 7.319400000000212e-05, 7.338900000000009e-05, 7.34439999999989e-05, 7.338900000000009e-05, 7.270799999999772e-05, 7.32500000000004e-05, 7.351400000000022e-05, 7.35690000000025e-05, 7.348600000000108e-05, 7.269400000000162e-05, 7.329099999999963e-05, 7.337500000000052e-05, 7.350000000000065e-05, 7.35829999999986e-05, 7.363900000000034e-05, 7.362500000000077e-05, 7.34309999999988e-05, 7.327799999999954e-05, 7.365299999999991e-05, 7.358300000000206e-05, 7.34309999999988e-05, 7.323600000000083e-05, 7.34439999999989e-05, 7.322299999999726e-05, 7.322300000000073e-05, 7.363900000000034e-05, 7.359700000000163e-05, 7.326399999999997e-05, 7.322200000000126e-05, 7.273600000000033e-05, 7.273600000000033e-05, 7.337500000000052e-05, 7.322200000000126e-05, 7.266599999999901e-05, 7.351400000000022e-05, 7.272200000000076e-05, 7.340299999999966e-05, 7.327800000000301e-05, 7.340299999999966e-05, 7.332000000000172e-05, 7.32500000000004e-05]</msg>
<status status="PASS" starttime="20201029 12:44:16.735" endtime="20201029 12:44:16.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.730" endtime="20201029 12:44:16.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.742" endtime="20201029 12:44:16.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.740" endtime="20201029 12:44:16.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.739" endtime="20201029 12:44:16.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.379" endtime="20201029 12:44:16.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.378" endtime="20201029 12:44:16.763"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.772" endtime="20201029 12:44:16.790"></status>
</kw>
<msg timestamp="20201029 12:44:16.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.770" endtime="20201029 12:44:16.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.792" endtime="20201029 12:44:16.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.795" endtime="20201029 12:44:16.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.768" endtime="20201029 12:44:16.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.765" endtime="20201029 12:44:16.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.804" endtime="20201029 12:44:17.091"></status>
</kw>
<msg timestamp="20201029 12:44:17.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022901722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.802" endtime="20201029 12:44:17.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022901722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.095" endtime="20201029 12:44:17.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.104" endtime="20201029 12:44:17.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.800" endtime="20201029 12:44:17.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.798" endtime="20201029 12:44:17.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.111" level="INFO">${RESULT} = [{'diff': 7.440300000000066e-05}, {'diff': 7.433299999999934e-05}, {'diff': 7.433299999999934e-05}, {'diff': 7.365299999999991e-05}, {'diff': 7.436099999999848e-05}, {'diff': 7.434700000000238e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:17.107" endtime="20201029 12:44:17.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.115" level="INFO">${ACCURACY} = {'diff': [7.440300000000066e-05, 7.433299999999934e-05, 7.433299999999934e-05, 7.365299999999991e-05, 7.436099999999848e-05, 7.434700000000238e-05, 7.427800000000054e-05, 7.420799999999922e-05, 7.4445...</msg>
<status status="PASS" starttime="20201029 12:44:17.112" endtime="20201029 12:44:17.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.120" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.119" endtime="20201029 12:44:17.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.122" level="INFO">VALUE: [7.440300000000066e-05, 7.433299999999934e-05, 7.433299999999934e-05, 7.365299999999991e-05, 7.436099999999848e-05, 7.434700000000238e-05, 7.427800000000054e-05, 7.420799999999922e-05, 7.444500000000284e-05, 7.366699999999948e-05, 7.420899999999869e-05, 7.369400000000262e-05, 7.365299999999991e-05, 7.454200000000036e-05, 7.37370000000008e-05, 7.452799999999732e-05, 7.448599999999861e-05, 7.418000000000008e-05, 7.452700000000131e-05, 7.456900000000002e-05, 7.427700000000106e-05, 7.419399999999965e-05, 7.456900000000002e-05, 7.43050000000002e-05, 7.445799999999947e-05, 7.447199999999904e-05, 7.455599999999993e-05, 7.455599999999993e-05, 7.416699999999998e-05, 7.431999999999925e-05, 7.423599999999836e-05, 7.46249999999983e-05, 7.451400000000122e-05, 7.390300000000016e-05, 7.44309999999998e-05, 7.452800000000079e-05, 7.418100000000302e-05, 7.41249999999978e-05, 7.441600000000076e-05, 7.452700000000131e-05, 7.44439999999999e-05, 7.423600000000183e-05, 7.454200000000036e-05, 7.458300000000306e-05, 7.438899999999762e-05, 7.45829999999996e-05, 7.437499999999805e-05, 7.373599999999786e-05, 7.384699999999841e-05, 7.46249999999983e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.121" endtime="20201029 12:44:17.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.116" endtime="20201029 12:44:17.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.127" endtime="20201029 12:44:17.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.126" endtime="20201029 12:44:17.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.125" endtime="20201029 12:44:17.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.764" endtime="20201029 12:44:17.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.763" endtime="20201029 12:44:17.148"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.157" endtime="20201029 12:44:17.178"></status>
</kw>
<msg timestamp="20201029 12:44:17.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.156" endtime="20201029 12:44:17.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.180" endtime="20201029 12:44:17.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.182" endtime="20201029 12:44:17.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.153" endtime="20201029 12:44:17.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.151" endtime="20201029 12:44:17.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.192" endtime="20201029 12:44:17.477"></status>
</kw>
<msg timestamp="20201029 12:44:17.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025607167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025682458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.190" endtime="20201029 12:44:17.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025607167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025682458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.482" endtime="20201029 12:44:17.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.490" endtime="20201029 12:44:17.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.188" endtime="20201029 12:44:17.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.186" endtime="20201029 12:44:17.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.497" level="INFO">${RESULT} = [{'diff': 7.529099999999816e-05}, {'diff': 7.555499999999798e-05}, {'diff': 7.527800000000154e-05}, {'diff': 7.551399999999875e-05}, {'diff': 7.465300000000091e-05}, {'diff': 7.533299999999687e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:17.494" endtime="20201029 12:44:17.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.502" level="INFO">${ACCURACY} = {'diff': [7.529099999999816e-05, 7.555499999999798e-05, 7.527800000000154e-05, 7.551399999999875e-05, 7.465300000000091e-05, 7.533299999999687e-05, 7.549999999999918e-05, 7.53050000000012e-05, 7.54999...</msg>
<status status="PASS" starttime="20201029 12:44:17.498" endtime="20201029 12:44:17.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.506" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.505" endtime="20201029 12:44:17.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.509" level="INFO">VALUE: [7.529099999999816e-05, 7.555499999999798e-05, 7.527800000000154e-05, 7.551399999999875e-05, 7.465300000000091e-05, 7.533299999999687e-05, 7.549999999999918e-05, 7.53050000000012e-05, 7.549999999999918e-05, 7.555599999999746e-05, 7.536099999999948e-05, 7.537499999999905e-05, 7.556999999999703e-05, 7.534699999999991e-05, 7.462500000000177e-05, 7.550000000000265e-05, 7.529200000000111e-05, 7.491700000000073e-05, 7.550000000000265e-05, 7.465299999999744e-05, 7.52370000000023e-05, 7.476400000000147e-05, 7.472199999999929e-05, 7.469400000000015e-05, 7.533300000000034e-05, 7.472200000000276e-05, 7.536099999999948e-05, 7.533300000000034e-05, 7.538899999999862e-05, 7.538899999999862e-05, 7.53890000000021e-05, 7.474999999999843e-05, 7.554200000000136e-05, 7.536099999999948e-05, 7.47370000000018e-05, 7.533300000000034e-05, 7.469499999999962e-05, 7.545899999999994e-05, 7.548599999999961e-05, 7.551300000000274e-05, 7.55700000000005e-05, 7.47500000000019e-05, 7.544399999999743e-05, 7.548599999999961e-05, 7.543000000000133e-05, 7.541599999999829e-05, 7.545800000000047e-05, 7.524999999999893e-05, 7.520800000000022e-05, 7.54029999999982e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.507" endtime="20201029 12:44:17.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.502" endtime="20201029 12:44:17.511"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.515" endtime="20201029 12:44:17.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.513" endtime="20201029 12:44:17.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.512" endtime="20201029 12:44:17.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.149" endtime="20201029 12:44:17.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.149" endtime="20201029 12:44:17.535"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.544" endtime="20201029 12:44:17.562"></status>
</kw>
<msg timestamp="20201029 12:44:17.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.543" endtime="20201029 12:44:17.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.564" endtime="20201029 12:44:17.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.566" endtime="20201029 12:44:17.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.540" endtime="20201029 12:44:17.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.538" endtime="20201029 12:44:17.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.576" endtime="20201029 12:44:17.862"></status>
</kw>
<msg timestamp="20201029 12:44:17.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022331208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.574" endtime="20201029 12:44:17.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022331208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.866" endtime="20201029 12:44:17.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.875" endtime="20201029 12:44:17.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.571" endtime="20201029 12:44:17.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.569" endtime="20201029 12:44:17.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.882" level="INFO">${RESULT} = [{'diff': 7.587499999999955e-05}, {'diff': 7.623600000000036e-05}, {'diff': 7.655499999999898e-05}, {'diff': 7.655500000000245e-05}, {'diff': 7.622200000000079e-05}, {'diff': 7.570800000000072e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:17.878" endtime="20201029 12:44:17.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.887" level="INFO">${ACCURACY} = {'diff': [7.587499999999955e-05, 7.623600000000036e-05, 7.655499999999898e-05, 7.655500000000245e-05, 7.622200000000079e-05, 7.570800000000072e-05, 7.650000000000018e-05, 7.570800000000072e-05, 7.6375...</msg>
<status status="PASS" starttime="20201029 12:44:17.883" endtime="20201029 12:44:17.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.891" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.890" endtime="20201029 12:44:17.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.894" level="INFO">VALUE: [7.587499999999955e-05, 7.623600000000036e-05, 7.655499999999898e-05, 7.655500000000245e-05, 7.622200000000079e-05, 7.570800000000072e-05, 7.650000000000018e-05, 7.570800000000072e-05, 7.637500000000005e-05, 7.616700000000198e-05, 7.645800000000147e-05, 7.654099999999942e-05, 7.641699999999876e-05, 7.652799999999932e-05, 7.624999999999993e-05, 7.651399999999975e-05, 7.630499999999873e-05, 7.648600000000061e-05, 7.659700000000116e-05, 7.63189999999983e-05, 7.563899999999887e-05, 7.626300000000003e-05, 7.631900000000177e-05, 7.650000000000018e-05, 7.64440000000019e-05, 7.570800000000072e-05, 7.666699999999901e-05, 7.622200000000079e-05, 7.656899999999855e-05, 7.655500000000245e-05, 7.62639999999995e-05, 7.622199999999732e-05, 7.63189999999983e-05, 7.566699999999801e-05, 7.652799999999932e-05, 7.658400000000107e-05, 7.591699999999826e-05, 7.626400000000297e-05, 7.641700000000223e-05, 7.655599999999846e-05, 7.620799999999775e-05, 7.648600000000061e-05, 7.650000000000018e-05, 7.630499999999873e-05, 7.641599999999929e-05, 7.650000000000018e-05, 7.630499999999873e-05, 7.648600000000061e-05, 7.57500000000029e-05, 7.633299999999787e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.893" endtime="20201029 12:44:17.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.888" endtime="20201029 12:44:17.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.899" endtime="20201029 12:44:17.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.898" endtime="20201029 12:44:17.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.896" endtime="20201029 12:44:17.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.536" endtime="20201029 12:44:17.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.536" endtime="20201029 12:44:17.920"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.929" endtime="20201029 12:44:17.947"></status>
</kw>
<msg timestamp="20201029 12:44:17.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.927" endtime="20201029 12:44:17.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.949" endtime="20201029 12:44:17.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.951" endtime="20201029 12:44:17.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.925" endtime="20201029 12:44:17.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.922" endtime="20201029 12:44:17.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.961" endtime="20201029 12:44:18.248"></status>
</kw>
<msg timestamp="20201029 12:44:18.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.959" endtime="20201029 12:44:18.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.252" endtime="20201029 12:44:18.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.261" endtime="20201029 12:44:18.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.956" endtime="20201029 12:44:18.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.955" endtime="20201029 12:44:18.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.268" level="INFO">${RESULT} = [{'diff': 7.772200000000229e-05}, {'diff': 7.741699999999976e-05}, {'diff': 7.734699999999844e-05}, {'diff': 7.748599999999814e-05}, {'diff': 7.666700000000248e-05}, {'diff': 7.748600000000161e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:18.265" endtime="20201029 12:44:18.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.272" level="INFO">${ACCURACY} = {'diff': [7.772200000000229e-05, 7.741699999999976e-05, 7.734699999999844e-05, 7.748599999999814e-05, 7.666700000000248e-05, 7.748600000000161e-05, 7.745800000000247e-05, 7.730499999999974e-05, 7.7195...</msg>
<status status="PASS" starttime="20201029 12:44:18.269" endtime="20201029 12:44:18.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.277" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.276" endtime="20201029 12:44:18.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.280" level="INFO">VALUE: [7.772200000000229e-05, 7.741699999999976e-05, 7.734699999999844e-05, 7.748599999999814e-05, 7.666700000000248e-05, 7.748600000000161e-05, 7.745800000000247e-05, 7.730499999999974e-05, 7.719500000000212e-05, 7.670900000000119e-05, 7.720899999999822e-05, 7.738900000000062e-05, 7.765300000000044e-05, 7.742999999999986e-05, 7.670899999999772e-05, 7.72770000000006e-05, 7.7457999999999e-05, 7.76250000000013e-05, 7.737500000000105e-05, 7.76250000000013e-05, 7.7457999999999e-05, 7.747199999999857e-05, 7.723600000000136e-05, 7.727800000000007e-05, 7.734699999999844e-05, 7.736099999999801e-05, 7.733299999999887e-05, 7.763900000000087e-05, 7.741699999999976e-05, 7.743099999999933e-05, 7.75969999999987e-05, 7.719500000000212e-05, 7.731999999999878e-05, 7.672300000000076e-05, 7.734699999999844e-05, 7.729199999999964e-05, 7.75969999999987e-05, 7.734699999999844e-05, 7.729100000000017e-05, 7.669399999999868e-05, 7.748599999999814e-05, 7.74030000000002e-05, 7.729199999999964e-05, 7.744399999999943e-05, 7.734699999999844e-05, 7.758299999999912e-05, 7.761099999999826e-05, 7.718099999999908e-05, 7.747199999999857e-05, 7.736099999999801e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.278" endtime="20201029 12:44:18.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.273" endtime="20201029 12:44:18.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.289" endtime="20201029 12:44:18.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.287" endtime="20201029 12:44:18.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.286" endtime="20201029 12:44:18.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.921" endtime="20201029 12:44:18.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.920" endtime="20201029 12:44:18.309"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.318" endtime="20201029 12:44:18.337"></status>
</kw>
<msg timestamp="20201029 12:44:18.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.317" endtime="20201029 12:44:18.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.339" endtime="20201029 12:44:18.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.341" endtime="20201029 12:44:18.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.314" endtime="20201029 12:44:18.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.312" endtime="20201029 12:44:18.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.351" endtime="20201029 12:44:18.636"></status>
</kw>
<msg timestamp="20201029 12:44:18.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023370056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023447792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.349" endtime="20201029 12:44:18.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023370056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023447792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.641" endtime="20201029 12:44:18.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.649" endtime="20201029 12:44:18.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.346" endtime="20201029 12:44:18.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.345" endtime="20201029 12:44:18.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.656" level="INFO">${RESULT} = [{'diff': 7.773599999999839e-05}, {'diff': 7.861099999999926e-05}, {'diff': 7.841700000000076e-05}, {'diff': 7.793000000000036e-05}, {'diff': 7.820800000000322e-05}, {'diff': 7.816600000000104e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:18.653" endtime="20201029 12:44:18.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.661" level="INFO">${ACCURACY} = {'diff': [7.773599999999839e-05, 7.861099999999926e-05, 7.841700000000076e-05, 7.793000000000036e-05, 7.820800000000322e-05, 7.816600000000104e-05, 7.763900000000087e-05, 7.834699999999944e-05, 7.8528...</msg>
<status status="PASS" starttime="20201029 12:44:18.657" endtime="20201029 12:44:18.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.665" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.664" endtime="20201029 12:44:18.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.668" level="INFO">VALUE: [7.773599999999839e-05, 7.861099999999926e-05, 7.841700000000076e-05, 7.793000000000036e-05, 7.820800000000322e-05, 7.816600000000104e-05, 7.763900000000087e-05, 7.834699999999944e-05, 7.852800000000132e-05, 7.816600000000104e-05, 7.851400000000175e-05, 7.773599999999839e-05, 7.823600000000236e-05, 7.862499999999883e-05, 7.768099999999958e-05, 7.862499999999883e-05, 7.841700000000076e-05, 7.775000000000143e-05, 7.84169999999973e-05, 7.76389999999974e-05, 7.861099999999926e-05, 7.834800000000239e-05, 7.820900000000269e-05, 7.791700000000026e-05, 7.856900000000056e-05, 7.82770000000016e-05, 7.775000000000143e-05, 7.822199999999932e-05, 7.834699999999944e-05, 7.847199999999957e-05, 7.843000000000086e-05, 7.852799999999785e-05, 7.854200000000089e-05, 7.86250000000023e-05, 7.773600000000186e-05, 7.826399999999803e-05, 7.84030000000012e-05, 7.765300000000044e-05, 7.820899999999922e-05, 7.848600000000261e-05, 7.773599999999839e-05, 7.775000000000143e-05, 7.82229999999988e-05, 7.766700000000001e-05, 7.765300000000044e-05, 7.841700000000076e-05, 7.765200000000097e-05, 7.841599999999782e-05, 7.837499999999858e-05, 7.82770000000016e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.666" endtime="20201029 12:44:18.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.661" endtime="20201029 12:44:18.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.674" endtime="20201029 12:44:18.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.672" endtime="20201029 12:44:18.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.671" endtime="20201029 12:44:18.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.310" endtime="20201029 12:44:18.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.310" endtime="20201029 12:44:18.695"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.704" endtime="20201029 12:44:18.721"></status>
</kw>
<msg timestamp="20201029 12:44:18.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.702" endtime="20201029 12:44:18.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.723" endtime="20201029 12:44:18.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.726" endtime="20201029 12:44:18.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.699" endtime="20201029 12:44:18.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.697" endtime="20201029 12:44:18.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.735" endtime="20201029 12:44:19.019"></status>
</kw>
<msg timestamp="20201029 12:44:19.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022723917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022802986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.733" endtime="20201029 12:44:19.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022723917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022802986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.023" endtime="20201029 12:44:19.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.032" endtime="20201029 12:44:19.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.731" endtime="20201029 12:44:19.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.729" endtime="20201029 12:44:19.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.039" level="INFO">${RESULT} = [{'diff': 7.906900000000106e-05}, {'diff': 7.951399999999928e-05}, {'diff': 7.963900000000287e-05}, {'diff': 7.866699999999754e-05}, {'diff': 7.954200000000189e-05}, {'diff': 7.862499999999883e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:19.036" endtime="20201029 12:44:19.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.044" level="INFO">${ACCURACY} = {'diff': [7.906900000000106e-05, 7.951399999999928e-05, 7.963900000000287e-05, 7.866699999999754e-05, 7.954200000000189e-05, 7.862499999999883e-05, 7.934700000000044e-05, 7.870900000000319e-05, 7.9541...</msg>
<status status="PASS" starttime="20201029 12:44:19.040" endtime="20201029 12:44:19.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.049" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.048" endtime="20201029 12:44:19.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.051" level="INFO">VALUE: [7.906900000000106e-05, 7.951399999999928e-05, 7.963900000000287e-05, 7.866699999999754e-05, 7.954200000000189e-05, 7.862499999999883e-05, 7.934700000000044e-05, 7.870900000000319e-05, 7.954199999999842e-05, 7.920900000000022e-05, 7.923699999999936e-05, 7.94169999999983e-05, 7.925000000000293e-05, 7.932000000000078e-05, 7.94450000000009e-05, 7.923599999999989e-05, 7.873600000000286e-05, 7.944400000000143e-05, 7.941599999999882e-05, 7.868000000000111e-05, 7.948600000000014e-05, 7.96389999999994e-05, 7.866699999999754e-05, 7.930600000000121e-05, 7.920799999999728e-05, 7.95970000000007e-05, 7.936100000000001e-05, 7.868100000000058e-05, 7.870899999999972e-05, 7.949999999999971e-05, 7.949999999999971e-05, 7.938899999999915e-05, 7.948699999999961e-05, 7.868100000000058e-05, 7.959800000000017e-05, 7.941600000000229e-05, 7.954099999999895e-05, 7.920799999999728e-05, 7.96389999999994e-05, 7.956899999999809e-05, 7.955500000000199e-05, 7.955499999999852e-05, 7.93190000000013e-05, 7.943000000000186e-05, 7.927699999999913e-05, 7.952799999999885e-05, 7.872199999999982e-05, 7.922200000000032e-05, 7.926399999999903e-05, 7.918100000000108e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.050" endtime="20201029 12:44:19.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.045" endtime="20201029 12:44:19.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.056" endtime="20201029 12:44:19.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.055" endtime="20201029 12:44:19.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.054" endtime="20201029 12:44:19.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.695" endtime="20201029 12:44:19.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.695" endtime="20201029 12:44:19.077"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.086" endtime="20201029 12:44:19.104"></status>
</kw>
<msg timestamp="20201029 12:44:19.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.085" endtime="20201029 12:44:19.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.106" endtime="20201029 12:44:19.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.108" endtime="20201029 12:44:19.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.082" endtime="20201029 12:44:19.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.080" endtime="20201029 12:44:19.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.118" endtime="20201029 12:44:19.406"></status>
</kw>
<msg timestamp="20201029 12:44:19.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022585028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:19.116" endtime="20201029 12:44:19.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022585028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:19.410" endtime="20201029 12:44:19.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.419" endtime="20201029 12:44:19.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.113" endtime="20201029 12:44:19.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.112" endtime="20201029 12:44:19.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.426" level="INFO">${RESULT} = [{'diff': 8.052799999999985e-05}, {'diff': 8.056999999999856e-05}, {'diff': 8.031999999999831e-05}, {'diff': 8.048599999999767e-05}, {'diff': 8.030500000000274e-05}, {'diff': 8.031899999999884e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:19.422" endtime="20201029 12:44:19.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.430" level="INFO">${ACCURACY} = {'diff': [8.052799999999985e-05, 8.056999999999856e-05, 8.031999999999831e-05, 8.048599999999767e-05, 8.030500000000274e-05, 8.031899999999884e-05, 7.970900000000072e-05, 8.048600000000114e-05, 7.9651...</msg>
<status status="PASS" starttime="20201029 12:44:19.427" endtime="20201029 12:44:19.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.434" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.433" endtime="20201029 12:44:19.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.437" level="INFO">VALUE: [8.052799999999985e-05, 8.056999999999856e-05, 8.031999999999831e-05, 8.048599999999767e-05, 8.030500000000274e-05, 8.031899999999884e-05, 7.970900000000072e-05, 8.048600000000114e-05, 7.96519999999995e-05, 8.054099999999995e-05, 8.040200000000025e-05, 8.058300000000213e-05, 7.979200000000214e-05, 7.966600000000254e-05, 7.970799999999778e-05, 7.970799999999778e-05, 8.058300000000213e-05, 7.993099999999836e-05, 8.02779999999996e-05, 8.036099999999755e-05, 8.052799999999985e-05, 8.045900000000147e-05, 8.059800000000117e-05, 8.038900000000015e-05, 7.965299999999897e-05, 8.030599999999874e-05, 8.062499999999737e-05, 8.018100000000208e-05, 8.030500000000274e-05, 8.019400000000218e-05, 8.047200000000157e-05, 8.033300000000188e-05, 8.025000000000046e-05, 7.973600000000039e-05, 8.05970000000017e-05, 7.96389999999994e-05, 8.025000000000046e-05, 7.969400000000168e-05, 8.062500000000083e-05, 7.993099999999836e-05, 8.04169999999993e-05, 8.026400000000003e-05, 8.038900000000015e-05, 7.96389999999994e-05, 8.048599999999767e-05, 8.030599999999874e-05, 8.033399999999788e-05, 8.049999999999724e-05, 8.052799999999985e-05, 8.036100000000101e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.436" endtime="20201029 12:44:19.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.431" endtime="20201029 12:44:19.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.442" endtime="20201029 12:44:19.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.441" endtime="20201029 12:44:19.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.440" endtime="20201029 12:44:19.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.078" endtime="20201029 12:44:19.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.078" endtime="20201029 12:44:19.463"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.472" endtime="20201029 12:44:19.491"></status>
</kw>
<msg timestamp="20201029 12:44:19.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.470" endtime="20201029 12:44:19.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.492" endtime="20201029 12:44:19.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.495" endtime="20201029 12:44:19.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.468" endtime="20201029 12:44:19.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.466" endtime="20201029 12:44:19.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.504" endtime="20201029 12:44:19.791"></status>
</kw>
<msg timestamp="20201029 12:44:19.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023219903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023301292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.502" endtime="20201029 12:44:19.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023219903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023301292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.795" endtime="20201029 12:44:19.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.804" endtime="20201029 12:44:19.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.500" endtime="20201029 12:44:19.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.498" endtime="20201029 12:44:19.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.811" level="INFO">${RESULT} = [{'diff': 8.138900000000115e-05}, {'diff': 8.162500000000183e-05}, {'diff': 8.148699999999814e-05}, {'diff': 8.159699999999923e-05}, {'diff': 8.155500000000052e-05}, {'diff': 8.134699999999898e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:19.807" endtime="20201029 12:44:19.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.815" level="INFO">${ACCURACY} = {'diff': [8.138900000000115e-05, 8.162500000000183e-05, 8.148699999999814e-05, 8.159699999999923e-05, 8.155500000000052e-05, 8.134699999999898e-05, 8.143000000000039e-05, 8.120799999999928e-05, 8.1292...</msg>
<status status="PASS" starttime="20201029 12:44:19.812" endtime="20201029 12:44:19.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.820" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.819" endtime="20201029 12:44:19.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.822" level="INFO">VALUE: [8.138900000000115e-05, 8.162500000000183e-05, 8.148699999999814e-05, 8.159699999999923e-05, 8.155500000000052e-05, 8.134699999999898e-05, 8.143000000000039e-05, 8.120799999999928e-05, 8.129200000000017e-05, 8.072199999999835e-05, 8.075000000000096e-05, 8.136100000000202e-05, 8.126399999999756e-05, 8.152800000000085e-05, 8.162500000000183e-05, 8.129200000000017e-05, 8.119500000000265e-05, 8.1458999999999e-05, 8.152800000000085e-05, 8.068100000000258e-05, 8.15979999999987e-05, 8.138900000000115e-05, 8.119399999999971e-05, 8.123700000000136e-05, 8.119399999999971e-05, 8.154200000000042e-05, 8.13329999999994e-05, 8.06520000000005e-05, 8.123599999999842e-05, 8.12910000000007e-05, 8.14719999999991e-05, 8.131999999999931e-05, 8.145799999999953e-05, 8.065299999999997e-05, 8.154200000000042e-05, 8.126399999999756e-05, 8.151400000000128e-05, 8.155599999999999e-05, 8.145900000000247e-05, 8.162500000000183e-05, 8.134799999999845e-05, 8.06390000000004e-05, 8.141699999999683e-05, 8.12369999999979e-05, 8.13329999999994e-05, 8.123600000000189e-05, 8.143000000000039e-05, 8.150000000000171e-05, 8.154099999999748e-05, 8.141600000000082e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.821" endtime="20201029 12:44:19.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.816" endtime="20201029 12:44:19.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.828" endtime="20201029 12:44:19.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.827" endtime="20201029 12:44:19.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.826" endtime="20201029 12:44:19.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.464" endtime="20201029 12:44:19.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.463" endtime="20201029 12:44:19.849"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.858" endtime="20201029 12:44:19.877"></status>
</kw>
<msg timestamp="20201029 12:44:19.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.856" endtime="20201029 12:44:19.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.878" endtime="20201029 12:44:19.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.881" endtime="20201029 12:44:19.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.854" endtime="20201029 12:44:19.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.852" endtime="20201029 12:44:19.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.890" endtime="20201029 12:44:20.177"></status>
</kw>
<msg timestamp="20201029 12:44:20.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022814861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.889" endtime="20201029 12:44:20.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022814861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.181" endtime="20201029 12:44:20.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.190" endtime="20201029 12:44:20.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.886" endtime="20201029 12:44:20.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.884" endtime="20201029 12:44:20.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.197" level="INFO">${RESULT} = [{'diff': 8.223599999999942e-05}, {'diff': 8.230500000000127e-05}, {'diff': 8.220800000000028e-05}, {'diff': 8.169400000000021e-05}, {'diff': 8.219400000000071e-05}, {'diff': 8.254200000000142e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:20.193" endtime="20201029 12:44:20.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.202" level="INFO">${ACCURACY} = {'diff': [8.223599999999942e-05, 8.230500000000127e-05, 8.220800000000028e-05, 8.169400000000021e-05, 8.219400000000071e-05, 8.254200000000142e-05, 8.22780000000016e-05, 8.244499999999697e-05, 8.26249...</msg>
<status status="PASS" starttime="20201029 12:44:20.198" endtime="20201029 12:44:20.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.206" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.205" endtime="20201029 12:44:20.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.209" level="INFO">VALUE: [8.223599999999942e-05, 8.230500000000127e-05, 8.220800000000028e-05, 8.169400000000021e-05, 8.219400000000071e-05, 8.254200000000142e-05, 8.22780000000016e-05, 8.244499999999697e-05, 8.262499999999937e-05, 8.258399999999666e-05, 8.254200000000142e-05, 8.218099999999715e-05, 8.247299999999957e-05, 8.170899999999925e-05, 8.256899999999762e-05, 8.254200000000142e-05, 8.256899999999762e-05, 8.230500000000127e-05, 8.173599999999892e-05, 8.223599999999942e-05, 8.226400000000203e-05, 8.254100000000195e-05, 8.249999999999924e-05, 8.244400000000096e-05, 8.234699999999998e-05, 8.169400000000021e-05, 8.234699999999998e-05, 8.16529999999975e-05, 8.255600000000099e-05, 8.234699999999998e-05, 8.168100000000011e-05, 8.231900000000084e-05, 8.247299999999957e-05, 8.252799999999838e-05, 8.169400000000021e-05, 8.219500000000018e-05, 8.218000000000114e-05, 8.262499999999937e-05, 8.245800000000053e-05, 8.217999999999767e-05, 8.170799999999978e-05, 8.252800000000185e-05, 8.236099999999955e-05, 8.230500000000127e-05, 8.22780000000016e-05, 8.223599999999942e-05, 8.168100000000011e-05, 8.256899999999762e-05, 8.168100000000011e-05, 8.243100000000086e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.208" endtime="20201029 12:44:20.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.203" endtime="20201029 12:44:20.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.214" endtime="20201029 12:44:20.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.213" endtime="20201029 12:44:20.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.211" endtime="20201029 12:44:20.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.850" endtime="20201029 12:44:20.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.849" endtime="20201029 12:44:20.235"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.244" endtime="20201029 12:44:20.262"></status>
</kw>
<msg timestamp="20201029 12:44:20.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.242" endtime="20201029 12:44:20.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.263" endtime="20201029 12:44:20.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.266" endtime="20201029 12:44:20.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.240" endtime="20201029 12:44:20.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.237" endtime="20201029 12:44:20.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.275" endtime="20201029 12:44:20.562"></status>
</kw>
<msg timestamp="20201029 12:44:20.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022763875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.274" endtime="20201029 12:44:20.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022763875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.567" endtime="20201029 12:44:20.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.575" endtime="20201029 12:44:20.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.271" endtime="20201029 12:44:20.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.269" endtime="20201029 12:44:20.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.582" level="INFO">${RESULT} = [{'diff': 8.324999999999999e-05}, {'diff': 8.324999999999999e-05}, {'diff': 8.36110000000008e-05}, {'diff': 8.319500000000118e-05}, {'diff': 8.324999999999999e-05}, {'diff': 8.358400000000113e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:20.579" endtime="20201029 12:44:20.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.587" level="INFO">${ACCURACY} = {'diff': [8.324999999999999e-05, 8.324999999999999e-05, 8.36110000000008e-05, 8.319500000000118e-05, 8.324999999999999e-05, 8.358400000000113e-05, 8.35980000000007e-05, 8.322300000000032e-05, 8.354199...</msg>
<status status="PASS" starttime="20201029 12:44:20.583" endtime="20201029 12:44:20.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.591" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.590" endtime="20201029 12:44:20.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.594" level="INFO">VALUE: [8.324999999999999e-05, 8.324999999999999e-05, 8.36110000000008e-05, 8.319500000000118e-05, 8.324999999999999e-05, 8.358400000000113e-05, 8.35980000000007e-05, 8.322300000000032e-05, 8.354199999999895e-05, 8.32369999999999e-05, 8.269400000000121e-05, 8.320799999999781e-05, 8.355499999999905e-05, 8.344400000000196e-05, 8.336099999999708e-05, 8.351399999999981e-05, 8.331900000000184e-05, 8.268099999999765e-05, 8.319399999999824e-05, 8.330600000000174e-05, 8.330599999999827e-05, 8.363899999999994e-05, 8.322200000000085e-05, 8.324999999999999e-05, 8.266699999999808e-05, 8.338900000000316e-05, 8.362500000000037e-05, 8.26659999999986e-05, 8.338899999999969e-05, 8.324999999999999e-05, 8.351300000000034e-05, 8.273599999999992e-05, 8.344400000000196e-05, 8.355499999999905e-05, 8.288900000000265e-05, 8.327799999999913e-05, 8.351399999999981e-05, 8.36249999999969e-05, 8.363899999999994e-05, 8.276399999999906e-05, 8.329200000000217e-05, 8.357000000000156e-05, 8.351399999999981e-05, 8.324999999999999e-05, 8.266700000000154e-05, 8.320900000000075e-05, 8.324999999999999e-05, 8.268100000000111e-05, 8.354199999999895e-05, 8.356900000000209e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.592" endtime="20201029 12:44:20.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.588" endtime="20201029 12:44:20.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.599" endtime="20201029 12:44:20.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.598" endtime="20201029 12:44:20.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.596" endtime="20201029 12:44:20.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.236" endtime="20201029 12:44:20.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.235" endtime="20201029 12:44:20.620"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.629" endtime="20201029 12:44:20.650"></status>
</kw>
<msg timestamp="20201029 12:44:20.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.627" endtime="20201029 12:44:20.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.651" endtime="20201029 12:44:20.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.654" endtime="20201029 12:44:20.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.625" endtime="20201029 12:44:20.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.622" endtime="20201029 12:44:20.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.663" endtime="20201029 12:44:20.950"></status>
</kw>
<msg timestamp="20201029 12:44:20.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025750222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025834611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.662" endtime="20201029 12:44:20.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025750222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025834611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.954" endtime="20201029 12:44:20.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.963" endtime="20201029 12:44:20.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.659" endtime="20201029 12:44:20.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.657" endtime="20201029 12:44:20.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.969" level="INFO">${RESULT} = [{'diff': 8.438900000000069e-05}, {'diff': 8.450000000000124e-05}, {'diff': 8.44859999999982e-05}, {'diff': 8.434700000000198e-05}, {'diff': 8.441699999999983e-05}, {'diff': 8.36529999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:20.966" endtime="20201029 12:44:20.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.974" level="INFO">${ACCURACY} = {'diff': [8.438900000000069e-05, 8.450000000000124e-05, 8.44859999999982e-05, 8.434700000000198e-05, 8.441699999999983e-05, 8.36529999999995e-05, 8.454199999999995e-05, 8.445899999999854e-05, 8.444499...</msg>
<status status="PASS" starttime="20201029 12:44:20.970" endtime="20201029 12:44:20.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.978" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.977" endtime="20201029 12:44:20.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.981" level="INFO">VALUE: [8.438900000000069e-05, 8.450000000000124e-05, 8.44859999999982e-05, 8.434700000000198e-05, 8.441699999999983e-05, 8.36529999999995e-05, 8.454199999999995e-05, 8.445899999999854e-05, 8.444499999999897e-05, 8.455599999999952e-05, 8.4459000000002e-05, 8.42370000000009e-05, 8.391699999999933e-05, 8.374999999999702e-05, 8.366600000000307e-05, 8.415199999999706e-05, 8.452800000000038e-05, 8.451400000000081e-05, 8.427799999999666e-05, 8.375000000000049e-05, 8.462500000000137e-05, 8.375000000000049e-05, 8.426400000000056e-05, 8.426400000000056e-05, 8.440300000000026e-05, 8.36529999999995e-05, 8.419499999999872e-05, 8.391699999999933e-05, 8.369500000000168e-05, 8.468099999999965e-05, 8.455600000000299e-05, 8.433400000000188e-05, 8.441699999999983e-05, 8.444400000000296e-05, 8.415200000000053e-05, 8.46249999999979e-05, 8.369400000000221e-05, 8.430500000000327e-05, 8.455500000000005e-05, 8.42919999999997e-05, 8.434700000000198e-05, 8.436100000000155e-05, 8.437500000000112e-05, 8.430599999999927e-05, 8.425000000000099e-05, 8.449999999999777e-05, 8.440299999999679e-05, 8.441600000000035e-05, 8.370900000000125e-05, 8.43330000000024e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.980" endtime="20201029 12:44:20.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.975" endtime="20201029 12:44:20.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.987" endtime="20201029 12:44:21.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.985" endtime="20201029 12:44:21.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.984" endtime="20201029 12:44:21.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.621" endtime="20201029 12:44:21.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.620" endtime="20201029 12:44:21.008"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.018" endtime="20201029 12:44:21.036"></status>
</kw>
<msg timestamp="20201029 12:44:21.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.016" endtime="20201029 12:44:21.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.037" endtime="20201029 12:44:21.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.040" endtime="20201029 12:44:21.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.013" endtime="20201029 12:44:21.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.010" endtime="20201029 12:44:21.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.049" endtime="20201029 12:44:21.336"></status>
</kw>
<msg timestamp="20201029 12:44:21.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023401944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023487486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.048" endtime="20201029 12:44:21.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023401944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023487486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.340" endtime="20201029 12:44:21.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.349" endtime="20201029 12:44:21.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.045" endtime="20201029 12:44:21.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.043" endtime="20201029 12:44:21.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.356" level="INFO">${RESULT} = [{'diff': 8.554199999999748e-05}, {'diff': 8.545800000000006e-05}, {'diff': 8.531900000000037e-05}, {'diff': 8.540300000000126e-05}, {'diff': 8.522199999999938e-05}, {'diff': 8.538900000000169e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:21.352" endtime="20201029 12:44:21.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.361" level="INFO">${ACCURACY} = {'diff': [8.554199999999748e-05, 8.545800000000006e-05, 8.531900000000037e-05, 8.540300000000126e-05, 8.522199999999938e-05, 8.538900000000169e-05, 8.541600000000135e-05, 8.543000000000092e-05, 8.4930...</msg>
<status status="PASS" starttime="20201029 12:44:21.357" endtime="20201029 12:44:21.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.365" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.364" endtime="20201029 12:44:21.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.368" level="INFO">VALUE: [8.554199999999748e-05, 8.545800000000006e-05, 8.531900000000037e-05, 8.540300000000126e-05, 8.522199999999938e-05, 8.538900000000169e-05, 8.541600000000135e-05, 8.543000000000092e-05, 8.49309999999999e-05, 8.558399999999966e-05, 8.468000000000017e-05, 8.472300000000182e-05, 8.551400000000181e-05, 8.533299999999994e-05, 8.53469999999995e-05, 8.543000000000092e-05, 8.538899999999822e-05, 8.554100000000148e-05, 8.476399999999759e-05, 8.561099999999933e-05, 8.522199999999938e-05, 8.518100000000015e-05, 8.475000000000149e-05, 8.558300000000019e-05, 8.547199999999963e-05, 8.544499999999997e-05, 8.538900000000169e-05, 8.555599999999705e-05, 8.534799999999898e-05, 8.540300000000126e-05, 8.540299999999779e-05, 8.523599999999895e-05, 8.527700000000166e-05, 8.520799999999981e-05, 8.543000000000092e-05, 8.465200000000103e-05, 8.541600000000135e-05, 8.46530000000005e-05, 8.548600000000267e-05, 8.522199999999938e-05, 8.554200000000095e-05, 8.547199999999963e-05, 8.520899999999929e-05, 8.54859999999992e-05, 8.54720000000031e-05, 8.53469999999995e-05, 8.469499999999922e-05, 8.541599999999788e-05, 8.562500000000237e-05, 8.551400000000181e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.366" endtime="20201029 12:44:21.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.362" endtime="20201029 12:44:21.369"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.373" endtime="20201029 12:44:21.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.372" endtime="20201029 12:44:21.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.370" endtime="20201029 12:44:21.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.009" endtime="20201029 12:44:21.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.008" endtime="20201029 12:44:21.394"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.403" endtime="20201029 12:44:21.421"></status>
</kw>
<msg timestamp="20201029 12:44:21.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.401" endtime="20201029 12:44:21.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.423" endtime="20201029 12:44:21.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.425" endtime="20201029 12:44:21.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.399" endtime="20201029 12:44:21.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.397" endtime="20201029 12:44:21.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.435" endtime="20201029 12:44:21.722"></status>
</kw>
<msg timestamp="20201029 12:44:21.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022497903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.433" endtime="20201029 12:44:21.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022497903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.727" endtime="20201029 12:44:21.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.736" endtime="20201029 12:44:21.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.431" endtime="20201029 12:44:21.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.429" endtime="20201029 12:44:21.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.742" level="INFO">${RESULT} = [{'diff': 8.638899999999922e-05}, {'diff': 8.637499999999965e-05}, {'diff': 8.63470000000005e-05}, {'diff': 8.634799999999998e-05}, {'diff': 8.566700000000108e-05}, {'diff': 8.56530000000015e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:21.739" endtime="20201029 12:44:21.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.747" level="INFO">${ACCURACY} = {'diff': [8.638899999999922e-05, 8.637499999999965e-05, 8.63470000000005e-05, 8.634799999999998e-05, 8.566700000000108e-05, 8.56530000000015e-05, 8.64860000000002e-05, 8.637499999999965e-05, 8.5721999...</msg>
<status status="PASS" starttime="20201029 12:44:21.743" endtime="20201029 12:44:21.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.751" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.750" endtime="20201029 12:44:21.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.754" level="INFO">VALUE: [8.638899999999922e-05, 8.637499999999965e-05, 8.63470000000005e-05, 8.634799999999998e-05, 8.566700000000108e-05, 8.56530000000015e-05, 8.64860000000002e-05, 8.637499999999965e-05, 8.572199999999988e-05, 8.66530000000025e-05, 8.638899999999922e-05, 8.636100000000008e-05, 8.64860000000002e-05, 8.643099999999793e-05, 8.620799999999734e-05, 8.638899999999922e-05, 8.64449999999975e-05, 8.64860000000002e-05, 8.569500000000022e-05, 8.620900000000029e-05, 8.632000000000084e-05, 8.627800000000213e-05, 8.576400000000206e-05, 8.627800000000213e-05, 8.566599999999813e-05, 8.61660000000021e-05, 8.655499999999858e-05, 8.638899999999922e-05, 8.640299999999879e-05, 8.651399999999934e-05, 8.633400000000041e-05, 8.636100000000008e-05, 8.636100000000008e-05, 8.575000000000249e-05, 8.627799999999866e-05, 8.64860000000002e-05, 8.633299999999747e-05, 8.568100000000065e-05, 8.624999999999952e-05, 8.654200000000195e-05, 8.634799999999998e-05, 8.629100000000223e-05, 8.622200000000038e-05, 8.636199999999955e-05, 8.654100000000248e-05, 8.56249999999989e-05, 8.626399999999909e-05, 8.573599999999945e-05, 8.627799999999866e-05, 8.619399999999777e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.753" endtime="20201029 12:44:21.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.748" endtime="20201029 12:44:21.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.759" endtime="20201029 12:44:21.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.758" endtime="20201029 12:44:21.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.756" endtime="20201029 12:44:21.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.395" endtime="20201029 12:44:21.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.394" endtime="20201029 12:44:21.780"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.789" endtime="20201029 12:44:21.809"></status>
</kw>
<msg timestamp="20201029 12:44:21.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.787" endtime="20201029 12:44:21.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.811" endtime="20201029 12:44:21.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.813" endtime="20201029 12:44:21.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.785" endtime="20201029 12:44:21.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.782" endtime="20201029 12:44:21.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.823" endtime="20201029 12:44:22.110"></status>
</kw>
<msg timestamp="20201029 12:44:22.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023675653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023762681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.821" endtime="20201029 12:44:22.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023675653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023762681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.114" endtime="20201029 12:44:22.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.123" endtime="20201029 12:44:22.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.818" endtime="20201029 12:44:22.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.816" endtime="20201029 12:44:22.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.129" level="INFO">${RESULT} = [{'diff': 8.702799999999941e-05}, {'diff': 8.745900000000154e-05}, {'diff': 8.759800000000123e-05}, {'diff': 8.675000000000002e-05}, {'diff': 8.761099999999786e-05}, {'diff': 8.756999999999862e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:22.126" endtime="20201029 12:44:22.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.134" level="INFO">${ACCURACY} = {'diff': [8.702799999999941e-05, 8.745900000000154e-05, 8.759800000000123e-05, 8.675000000000002e-05, 8.761099999999786e-05, 8.756999999999862e-05, 8.723699999999696e-05, 8.752699999999697e-05, 8.7193...</msg>
<status status="PASS" starttime="20201029 12:44:22.130" endtime="20201029 12:44:22.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.138" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.137" endtime="20201029 12:44:22.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.141" level="INFO">VALUE: [8.702799999999941e-05, 8.745900000000154e-05, 8.759800000000123e-05, 8.675000000000002e-05, 8.761099999999786e-05, 8.756999999999862e-05, 8.723699999999696e-05, 8.752699999999697e-05, 8.719399999999877e-05, 8.74860000000012e-05, 8.742999999999945e-05, 8.741599999999988e-05, 8.729099999999976e-05, 8.733299999999847e-05, 8.672200000000088e-05, 8.744400000000249e-05, 8.74310000000024e-05, 8.741699999999936e-05, 8.673599999999698e-05, 8.729199999999923e-05, 8.740299999999979e-05, 8.723600000000095e-05, 8.750000000000077e-05, 8.725000000000052e-05, 8.725000000000052e-05, 8.737500000000065e-05, 8.722199999999791e-05, 8.736100000000108e-05, 8.759700000000176e-05, 8.752700000000044e-05, 8.727799999999966e-05, 8.755599999999905e-05, 8.740299999999979e-05, 8.668099999999818e-05, 8.751400000000034e-05, 8.741699999999936e-05, 8.755599999999905e-05, 8.719500000000172e-05, 8.722200000000138e-05, 8.672200000000088e-05, 8.690300000000276e-05, 8.755600000000252e-05, 8.752799999999991e-05, 8.733400000000141e-05, 8.737500000000065e-05, 8.752700000000044e-05, 8.736100000000108e-05, 8.666599999999913e-05, 8.759700000000176e-05, 8.719400000000224e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.140" endtime="20201029 12:44:22.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.135" endtime="20201029 12:44:22.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.153" endtime="20201029 12:44:22.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.149" endtime="20201029 12:44:22.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.147" endtime="20201029 12:44:22.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.781" endtime="20201029 12:44:22.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.780" endtime="20201029 12:44:22.175"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.184" endtime="20201029 12:44:22.202"></status>
</kw>
<msg timestamp="20201029 12:44:22.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.182" endtime="20201029 12:44:22.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.203" endtime="20201029 12:44:22.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.206" endtime="20201029 12:44:22.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.180" endtime="20201029 12:44:22.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.177" endtime="20201029 12:44:22.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.215" endtime="20201029 12:44:22.502"></status>
</kw>
<msg timestamp="20201029 12:44:22.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022573153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.214" endtime="20201029 12:44:22.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022573153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.506" endtime="20201029 12:44:22.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.515" endtime="20201029 12:44:22.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.211" endtime="20201029 12:44:22.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.209" endtime="20201029 12:44:22.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.522" level="INFO">${RESULT} = [{'diff': 8.791600000000038e-05}, {'diff': 8.856900000000015e-05}, {'diff': 8.858299999999972e-05}, {'diff': 8.858299999999972e-05}, {'diff': 8.841600000000088e-05}, {'diff': 8.856900000000015e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:22.518" endtime="20201029 12:44:22.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.527" level="INFO">${ACCURACY} = {'diff': [8.791600000000038e-05, 8.856900000000015e-05, 8.858299999999972e-05, 8.858299999999972e-05, 8.841600000000088e-05, 8.856900000000015e-05, 8.76669999999996e-05, 8.765300000000004e-05, 8.77080...</msg>
<status status="PASS" starttime="20201029 12:44:22.523" endtime="20201029 12:44:22.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.532" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.530" endtime="20201029 12:44:22.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.534" level="INFO">VALUE: [8.791600000000038e-05, 8.856900000000015e-05, 8.858299999999972e-05, 8.858299999999972e-05, 8.841600000000088e-05, 8.856900000000015e-05, 8.76669999999996e-05, 8.765300000000004e-05, 8.770800000000231e-05, 8.859700000000276e-05, 8.847200000000263e-05, 8.824999999999805e-05, 8.866699999999714e-05, 8.819499999999925e-05, 8.84860000000022e-05, 8.850000000000177e-05, 8.858299999999972e-05, 8.85129999999984e-05, 8.819399999999977e-05, 8.81800000000002e-05, 8.83189999999999e-05, 8.830500000000033e-05, 8.829099999999729e-05, 8.856900000000015e-05, 8.836099999999861e-05, 8.862499999999843e-05, 8.776400000000059e-05, 8.819399999999977e-05, 8.770900000000179e-05, 8.852800000000091e-05, 8.829200000000023e-05, 8.818099999999968e-05, 8.84449999999995e-05, 8.86800000000007e-05, 8.855600000000005e-05, 8.851400000000134e-05, 8.837499999999818e-05, 8.845799999999959e-05, 8.854100000000101e-05, 8.850000000000177e-05, 8.820799999999934e-05, 8.826399999999762e-05, 8.851399999999787e-05, 8.854200000000048e-05, 8.825000000000152e-05, 8.855600000000005e-05, 8.768099999999918e-05, 8.825000000000152e-05, 8.827800000000066e-05, 8.83189999999999e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.533" endtime="20201029 12:44:22.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.528" endtime="20201029 12:44:22.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.539" endtime="20201029 12:44:22.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.538" endtime="20201029 12:44:22.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.537" endtime="20201029 12:44:22.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.176" endtime="20201029 12:44:22.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.175" endtime="20201029 12:44:22.560"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.569" endtime="20201029 12:44:22.588"></status>
</kw>
<msg timestamp="20201029 12:44:22.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.568" endtime="20201029 12:44:22.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.590" endtime="20201029 12:44:22.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.592" endtime="20201029 12:44:22.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.565" endtime="20201029 12:44:22.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.563" endtime="20201029 12:44:22.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.602" endtime="20201029 12:44:22.888"></status>
</kw>
<msg timestamp="20201029 12:44:22.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022848417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022937667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.600" endtime="20201029 12:44:22.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022848417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022937667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.893" endtime="20201029 12:44:22.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.902" endtime="20201029 12:44:22.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.597" endtime="20201029 12:44:22.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.595" endtime="20201029 12:44:22.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.908" level="INFO">${RESULT} = [{'diff': 8.924999999999905e-05}, {'diff': 8.937499999999918e-05}, {'diff': 8.94450000000005e-05}, {'diff': 8.927800000000166e-05}, {'diff': 8.919500000000025e-05}, {'diff': 8.919500000000025e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:22.905" endtime="20201029 12:44:22.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.913" level="INFO">${ACCURACY} = {'diff': [8.924999999999905e-05, 8.937499999999918e-05, 8.94450000000005e-05, 8.927800000000166e-05, 8.919500000000025e-05, 8.919500000000025e-05, 8.952799999999844e-05, 8.947299999999964e-05, 8.95559...</msg>
<status status="PASS" starttime="20201029 12:44:22.910" endtime="20201029 12:44:22.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.917" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.916" endtime="20201029 12:44:22.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.920" level="INFO">VALUE: [8.924999999999905e-05, 8.937499999999918e-05, 8.94450000000005e-05, 8.927800000000166e-05, 8.919500000000025e-05, 8.919500000000025e-05, 8.952799999999844e-05, 8.947299999999964e-05, 8.955599999999758e-05, 8.959799999999976e-05, 8.9332999999997e-05, 8.933300000000047e-05, 8.948599999999973e-05, 8.920800000000034e-05, 8.934700000000004e-05, 8.865299999999757e-05, 8.9638999999999e-05, 8.932000000000037e-05, 8.944400000000102e-05, 8.952800000000191e-05, 8.941700000000136e-05, 8.963900000000247e-05, 8.954200000000148e-05, 8.874999999999855e-05, 8.954199999999801e-05, 8.962499999999943e-05, 8.959700000000029e-05, 8.926400000000209e-05, 8.918100000000068e-05, 8.929099999999829e-05, 8.950000000000277e-05, 8.875000000000202e-05, 8.919400000000077e-05, 8.922199999999991e-05, 8.929199999999776e-05, 8.944400000000102e-05, 8.9638999999999e-05, 8.934700000000004e-05, 8.943099999999746e-05, 8.873599999999898e-05, 8.934700000000004e-05, 8.927799999999819e-05, 8.918100000000068e-05, 8.961099999999986e-05, 8.920899999999982e-05, 8.94999999999993e-05, 8.926400000000209e-05, 8.958400000000019e-05, 8.876399999999812e-05, 8.959700000000029e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.919" endtime="20201029 12:44:22.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.914" endtime="20201029 12:44:22.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.925" endtime="20201029 12:44:22.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.924" endtime="20201029 12:44:22.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.922" endtime="20201029 12:44:22.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.561" endtime="20201029 12:44:22.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.561" endtime="20201029 12:44:22.946"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.955" endtime="20201029 12:44:22.975"></status>
</kw>
<msg timestamp="20201029 12:44:22.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.953" endtime="20201029 12:44:22.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.976" endtime="20201029 12:44:22.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.979" endtime="20201029 12:44:22.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.951" endtime="20201029 12:44:22.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.949" endtime="20201029 12:44:22.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.988" endtime="20201029 12:44:23.275"></status>
</kw>
<msg timestamp="20201029 12:44:23.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023793444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023883361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.987" endtime="20201029 12:44:23.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023793444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023883361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.280" endtime="20201029 12:44:23.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.288" endtime="20201029 12:44:23.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.984" endtime="20201029 12:44:23.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.982" endtime="20201029 12:44:23.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.295" level="INFO">${RESULT} = [{'diff': 8.991699999999839e-05}, {'diff': 8.970800000000084e-05}, {'diff': 8.968099999999771e-05}, {'diff': 9.023600000000048e-05}, {'diff': 9.061100000000086e-05}, {'diff': 9.041699999999889e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:23.292" endtime="20201029 12:44:23.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.299" level="INFO">${ACCURACY} = {'diff': [8.991699999999839e-05, 8.970800000000084e-05, 8.968099999999771e-05, 9.023600000000048e-05, 9.061100000000086e-05, 9.041699999999889e-05, 9.04450000000015e-05, 9.019500000000125e-05, 9.02919...</msg>
<status status="PASS" starttime="20201029 12:44:23.296" endtime="20201029 12:44:23.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.304" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.303" endtime="20201029 12:44:23.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.307" level="INFO">VALUE: [8.991699999999839e-05, 8.970800000000084e-05, 8.968099999999771e-05, 9.023600000000048e-05, 9.061100000000086e-05, 9.041699999999889e-05, 9.04450000000015e-05, 9.019500000000125e-05, 9.029199999999876e-05, 8.969500000000075e-05, 8.973599999999998e-05, 8.969500000000075e-05, 8.966599999999866e-05, 9.029099999999929e-05, 9.024999999999658e-05, 9.034799999999704e-05, 9.062500000000043e-05, 9.0639e-05, 9.056900000000215e-05, 9.03190000000019e-05, 9.048600000000073e-05, 9.058299999999825e-05, 8.973599999999998e-05, 9.026399999999962e-05, 9.059799999999729e-05, 9.019500000000125e-05, 9.052799999999944e-05, 9.023600000000048e-05, 9.016699999999864e-05, 9.054200000000248e-05, 9.037500000000018e-05, 9.029099999999929e-05, 9.036100000000061e-05, 9.062500000000043e-05, 9.023600000000048e-05, 8.972200000000041e-05, 9.044400000000202e-05, 8.976399999999912e-05, 8.969500000000075e-05, 9.019400000000177e-05, 9.022300000000039e-05, 8.96670000000016e-05, 9.043100000000193e-05, 9.05000000000003e-05, 8.970900000000032e-05, 9.058400000000119e-05, 9.056999999999815e-05, 9.055599999999858e-05, 9.040300000000279e-05, 9.023600000000048e-05]</msg>
<status status="PASS" starttime="20201029 12:44:23.305" endtime="20201029 12:44:23.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.300" endtime="20201029 12:44:23.313"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.317" endtime="20201029 12:44:23.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.315" endtime="20201029 12:44:23.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.314" endtime="20201029 12:44:23.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.947" endtime="20201029 12:44:23.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.946" endtime="20201029 12:44:23.338"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.346" endtime="20201029 12:44:23.365"></status>
</kw>
<msg timestamp="20201029 12:44:23.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.345" endtime="20201029 12:44:23.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.367" endtime="20201029 12:44:23.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.369" endtime="20201029 12:44:23.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.342" endtime="20201029 12:44:23.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.340" endtime="20201029 12:44:23.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.379" endtime="20201029 12:44:23.665"></status>
</kw>
<msg timestamp="20201029 12:44:23.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02293525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:23.377" endtime="20201029 12:44:23.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02293525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:23.669" endtime="20201029 12:44:23.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.678" endtime="20201029 12:44:23.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.374" endtime="20201029 12:44:23.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.373" endtime="20201029 12:44:23.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.685" level="INFO">${RESULT} = [{'diff': 9.129199999999976e-05}, {'diff': 9.134699999999857e-05}, {'diff': 9.142999999999998e-05}, {'diff': 9.138800000000127e-05}, {'diff': 9.126300000000115e-05}, {'diff': 9.127700000000072e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:23.681" endtime="20201029 12:44:23.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.690" level="INFO">${ACCURACY} = {'diff': [9.129199999999976e-05, 9.134699999999857e-05, 9.142999999999998e-05, 9.138800000000127e-05, 9.126300000000115e-05, 9.127700000000072e-05, 9.120799999999887e-05, 9.070799999999837e-05, 9.1541...</msg>
<status status="PASS" starttime="20201029 12:44:23.686" endtime="20201029 12:44:23.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.695" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.694" endtime="20201029 12:44:23.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.697" level="INFO">VALUE: [9.129199999999976e-05, 9.134699999999857e-05, 9.142999999999998e-05, 9.138800000000127e-05, 9.126300000000115e-05, 9.127700000000072e-05, 9.120799999999887e-05, 9.070799999999837e-05, 9.154100000000054e-05, 9.162500000000143e-05, 9.123600000000148e-05, 9.070799999999837e-05, 9.143099999999946e-05, 9.075000000000055e-05, 9.122199999999844e-05, 9.140200000000084e-05, 9.14870000000012e-05, 9.075000000000055e-05, 9.122200000000191e-05, 9.1639000000001e-05, 9.123700000000096e-05, 9.11939999999993e-05, 9.140300000000032e-05, 9.120799999999887e-05, 9.062500000000043e-05, 9.120800000000234e-05, 9.092999999999948e-05, 9.0639e-05, 9.117999999999973e-05, 9.065299999999957e-05, 9.141699999999989e-05, 9.077700000000022e-05, 9.065299999999957e-05, 9.120900000000182e-05, 9.072200000000141e-05, 9.126300000000115e-05, 9.070900000000132e-05, 9.145799999999912e-05, 9.126300000000115e-05, 9.14870000000012e-05, 9.155500000000011e-05, 9.147200000000216e-05, 9.133300000000247e-05, 9.141600000000041e-05, 9.141600000000041e-05, 9.152800000000044e-05, 9.145800000000259e-05, 9.120800000000234e-05, 9.151400000000087e-05, 9.0639e-05]</msg>
<status status="PASS" starttime="20201029 12:44:23.696" endtime="20201029 12:44:23.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.691" endtime="20201029 12:44:23.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.702" endtime="20201029 12:44:23.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.701" endtime="20201029 12:44:23.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.700" endtime="20201029 12:44:23.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.339" endtime="20201029 12:44:23.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.338" endtime="20201029 12:44:23.723"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.732" endtime="20201029 12:44:23.751"></status>
</kw>
<msg timestamp="20201029 12:44:23.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.731" endtime="20201029 12:44:23.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.753" endtime="20201029 12:44:23.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.755" endtime="20201029 12:44:23.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.728" endtime="20201029 12:44:23.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.726" endtime="20201029 12:44:23.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.765" endtime="20201029 12:44:24.052"></status>
</kw>
<msg timestamp="20201029 12:44:24.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022776611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.763" endtime="20201029 12:44:24.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022776611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.056" endtime="20201029 12:44:24.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.065" endtime="20201029 12:44:24.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.760" endtime="20201029 12:44:24.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.759" endtime="20201029 12:44:24.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.073" level="INFO">${RESULT} = [{'diff': 9.179200000000026e-05}, {'diff': 9.21940000000003e-05}, {'diff': 9.257000000000015e-05}, {'diff': 9.172199999999894e-05}, {'diff': 9.172200000000241e-05}, {'diff': 9.251400000000187e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:24.069" endtime="20201029 12:44:24.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.077" level="INFO">${ACCURACY} = {'diff': [9.179200000000026e-05, 9.21940000000003e-05, 9.257000000000015e-05, 9.172199999999894e-05, 9.172200000000241e-05, 9.251400000000187e-05, 9.226400000000162e-05, 9.243000000000098e-05, 9.22359...</msg>
<status status="PASS" starttime="20201029 12:44:24.074" endtime="20201029 12:44:24.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.082" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.081" endtime="20201029 12:44:24.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.084" level="INFO">VALUE: [9.179200000000026e-05, 9.21940000000003e-05, 9.257000000000015e-05, 9.172199999999894e-05, 9.172200000000241e-05, 9.251400000000187e-05, 9.226400000000162e-05, 9.243000000000098e-05, 9.223599999999901e-05, 9.241700000000089e-05, 9.252800000000144e-05, 9.241599999999794e-05, 9.165199999999762e-05, 9.243000000000098e-05, 9.243000000000098e-05, 9.21940000000003e-05, 9.249999999999883e-05, 9.222199999999944e-05, 9.2333e-05, 9.237499999999871e-05, 9.23879999999988e-05, 9.254199999999754e-05, 9.242999999999751e-05, 9.24719999999997e-05, 9.236099999999914e-05, 9.223699999999849e-05, 9.254200000000101e-05, 9.16939999999998e-05, 9.222199999999944e-05, 9.174999999999808e-05, 9.244400000000055e-05, 9.251400000000187e-05, 9.254099999999807e-05, 9.166600000000066e-05, 9.234699999999957e-05, 9.261099999999939e-05, 9.236099999999914e-05, 9.24719999999997e-05, 9.168099999999971e-05, 9.258300000000025e-05, 9.216700000000064e-05, 9.179100000000079e-05, 9.2333e-05, 9.222300000000239e-05, 9.236099999999914e-05, 9.236099999999914e-05, 9.243000000000098e-05, 9.238899999999828e-05, 9.25130000000024e-05, 9.251400000000187e-05]</msg>
<status status="PASS" starttime="20201029 12:44:24.083" endtime="20201029 12:44:24.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.078" endtime="20201029 12:44:24.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.090" endtime="20201029 12:44:24.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.088" endtime="20201029 12:44:24.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.087" endtime="20201029 12:44:24.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.724" endtime="20201029 12:44:24.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.724" endtime="20201029 12:44:24.110"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.119" endtime="20201029 12:44:24.141"></status>
</kw>
<msg timestamp="20201029 12:44:24.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.118" endtime="20201029 12:44:24.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.143" endtime="20201029 12:44:24.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.146" endtime="20201029 12:44:24.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.115" endtime="20201029 12:44:24.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.113" endtime="20201029 12:44:24.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.155" endtime="20201029 12:44:24.440"></status>
</kw>
<msg timestamp="20201029 12:44:24.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026069139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026162181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.154" endtime="20201029 12:44:24.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026069139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026162181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.445" endtime="20201029 12:44:24.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.453" endtime="20201029 12:44:24.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.151" endtime="20201029 12:44:24.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.149" endtime="20201029 12:44:24.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.460" level="INFO">${RESULT} = [{'diff': 9.304199999999804e-05}, {'diff': 9.324999999999958e-05}, {'diff': 9.341599999999894e-05}, {'diff': 9.349999999999983e-05}, {'diff': 9.348600000000026e-05}, {'diff': 9.342999999999851e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:24.456" endtime="20201029 12:44:24.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.464" level="INFO">${ACCURACY} = {'diff': [9.304199999999804e-05, 9.324999999999958e-05, 9.341599999999894e-05, 9.349999999999983e-05, 9.348600000000026e-05, 9.342999999999851e-05, 9.362499999999996e-05, 9.345799999999765e-05, 9.2749...</msg>
<status status="PASS" starttime="20201029 12:44:24.461" endtime="20201029 12:44:24.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.468" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.467" endtime="20201029 12:44:24.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.471" level="INFO">VALUE: [9.304199999999804e-05, 9.324999999999958e-05, 9.341599999999894e-05, 9.349999999999983e-05, 9.348600000000026e-05, 9.342999999999851e-05, 9.362499999999996e-05, 9.345799999999765e-05, 9.274999999999908e-05, 9.361100000000039e-05, 9.349999999999983e-05, 9.322200000000044e-05, 9.327800000000219e-05, 9.26529999999981e-05, 9.338899999999928e-05, 9.355599999999811e-05, 9.338900000000275e-05, 9.359700000000082e-05, 9.322299999999992e-05, 9.272299999999942e-05, 9.276299999999918e-05, 9.348699999999974e-05, 9.337500000000318e-05, 9.341599999999894e-05, 9.361100000000039e-05, 9.345800000000112e-05, 9.341599999999894e-05, 9.266600000000166e-05, 9.337499999999971e-05, 9.355499999999864e-05, 9.344400000000155e-05, 9.336100000000014e-05, 9.357000000000115e-05, 9.316700000000164e-05, 9.269500000000028e-05, 9.270899999999985e-05, 9.31940000000013e-05, 9.338899999999928e-05, 9.329099999999882e-05, 9.316700000000164e-05, 9.323600000000001e-05, 9.263800000000252e-05, 9.361099999999692e-05, 9.2639000000002e-05, 9.266700000000114e-05, 9.356900000000168e-05, 9.338899999999928e-05, 9.322200000000044e-05, 9.348600000000026e-05, 9.338900000000275e-05]</msg>
<status status="PASS" starttime="20201029 12:44:24.469" endtime="20201029 12:44:24.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.465" endtime="20201029 12:44:24.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.477" endtime="20201029 12:44:24.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.475" endtime="20201029 12:44:24.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.474" endtime="20201029 12:44:24.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.111" endtime="20201029 12:44:24.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.111" endtime="20201029 12:44:24.497"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.506" endtime="20201029 12:44:24.525"></status>
</kw>
<msg timestamp="20201029 12:44:24.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.504" endtime="20201029 12:44:24.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.527" endtime="20201029 12:44:24.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.529" endtime="20201029 12:44:24.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.502" endtime="20201029 12:44:24.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.500" endtime="20201029 12:44:24.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.539" endtime="20201029 12:44:24.824"></status>
</kw>
<msg timestamp="20201029 12:44:24.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022157625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.537" endtime="20201029 12:44:24.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022157625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.828" endtime="20201029 12:44:24.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.837" endtime="20201029 12:44:24.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.534" endtime="20201029 12:44:24.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.533" endtime="20201029 12:44:24.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.843" level="INFO">${RESULT} = [{'diff': 9.450000000000083e-05}, {'diff': 9.454199999999954e-05}, {'diff': 9.443099999999899e-05}, {'diff': 9.422200000000144e-05}, {'diff': 9.459699999999835e-05}, {'diff': 9.438900000000028e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:24.840" endtime="20201029 12:44:24.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.848" level="INFO">${ACCURACY} = {'diff': [9.450000000000083e-05, 9.454199999999954e-05, 9.443099999999899e-05, 9.422200000000144e-05, 9.459699999999835e-05, 9.438900000000028e-05, 9.438900000000028e-05, 9.370900000000085e-05, 9.4222...</msg>
<status status="PASS" starttime="20201029 12:44:24.844" endtime="20201029 12:44:24.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.853" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.852" endtime="20201029 12:44:24.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.855" level="INFO">VALUE: [9.450000000000083e-05, 9.454199999999954e-05, 9.443099999999899e-05, 9.422200000000144e-05, 9.459699999999835e-05, 9.438900000000028e-05, 9.438900000000028e-05, 9.370900000000085e-05, 9.422200000000144e-05, 9.444499999999856e-05, 9.444499999999856e-05, 9.372299999999695e-05, 9.452799999999997e-05, 9.452699999999703e-05, 9.441599999999994e-05, 9.423600000000101e-05, 9.429099999999982e-05, 9.379200000000226e-05, 9.452799999999997e-05, 9.461100000000139e-05, 9.427799999999972e-05, 9.423600000000101e-05, 9.450000000000083e-05, 9.441699999999942e-05, 9.37079999999979e-05, 9.440299999999985e-05, 9.375000000000008e-05, 9.452799999999997e-05, 9.440299999999985e-05, 9.419399999999883e-05, 9.42079999999984e-05, 9.450000000000083e-05, 9.36940000000018e-05, 9.452799999999997e-05, 9.436100000000114e-05, 9.430499999999939e-05, 9.42079999999984e-05, 9.441699999999942e-05, 9.436200000000061e-05, 9.422199999999797e-05, 9.436099999999767e-05, 9.427799999999972e-05, 9.4333999999998e-05, 9.426400000000015e-05, 9.458400000000172e-05, 9.379099999999932e-05, 9.427799999999972e-05, 9.423599999999754e-05, 9.441599999999994e-05, 9.436100000000114e-05]</msg>
<status status="PASS" starttime="20201029 12:44:24.854" endtime="20201029 12:44:24.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.849" endtime="20201029 12:44:24.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.860" endtime="20201029 12:44:24.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.859" endtime="20201029 12:44:24.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.858" endtime="20201029 12:44:24.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.498" endtime="20201029 12:44:24.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.498" endtime="20201029 12:44:24.881"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.890" endtime="20201029 12:44:24.908"></status>
</kw>
<msg timestamp="20201029 12:44:24.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.888" endtime="20201029 12:44:24.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.910" endtime="20201029 12:44:24.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.912" endtime="20201029 12:44:24.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.885" endtime="20201029 12:44:24.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.883" endtime="20201029 12:44:24.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.921" endtime="20201029 12:44:25.210"></status>
</kw>
<msg timestamp="20201029 12:44:25.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.920" endtime="20201029 12:44:25.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.215" endtime="20201029 12:44:25.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.224" endtime="20201029 12:44:25.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.917" endtime="20201029 12:44:25.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.916" endtime="20201029 12:44:25.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.231" level="INFO">${RESULT} = [{'diff': 9.53469999999991e-05}, {'diff': 9.461100000000139e-05}, {'diff': 9.540200000000137e-05}, {'diff': 9.543000000000051e-05}, {'diff': 9.531899999999996e-05}, {'diff': 9.531899999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:25.228" endtime="20201029 12:44:25.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.235" level="INFO">${ACCURACY} = {'diff': [9.53469999999991e-05, 9.461100000000139e-05, 9.540200000000137e-05, 9.543000000000051e-05, 9.531899999999996e-05, 9.531899999999996e-05, 9.529200000000029e-05, 9.548600000000226e-05, 9.52920...</msg>
<status status="PASS" starttime="20201029 12:44:25.232" endtime="20201029 12:44:25.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.240" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.239" endtime="20201029 12:44:25.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.243" level="INFO">VALUE: [9.53469999999991e-05, 9.461100000000139e-05, 9.540200000000137e-05, 9.543000000000051e-05, 9.531899999999996e-05, 9.531899999999996e-05, 9.529200000000029e-05, 9.548600000000226e-05, 9.529200000000029e-05, 9.551399999999793e-05, 9.55279999999975e-05, 9.5333999999999e-05, 9.5333999999999e-05, 9.522300000000192e-05, 9.549999999999836e-05, 9.519499999999931e-05, 9.463899999999706e-05, 9.47079999999989e-05, 9.467999999999976e-05, 9.559699999999935e-05, 9.552800000000097e-05, 9.559699999999935e-05, 9.483299999999903e-05, 9.562500000000196e-05, 9.544400000000008e-05, 9.475000000000108e-05, 9.536099999999867e-05, 9.559699999999935e-05, 9.526399999999768e-05, 9.526299999999821e-05, 9.537500000000171e-05, 9.468099999999924e-05, 9.527800000000072e-05, 9.475000000000108e-05, 9.463900000000053e-05, 9.467999999999976e-05, 9.52079999999994e-05, 9.53469999999991e-05, 9.472200000000194e-05, 9.545799999999965e-05, 9.537499999999824e-05, 9.554200000000054e-05, 9.54859999999988e-05, 9.468099999999924e-05, 9.520899999999888e-05, 9.543099999999999e-05, 9.469500000000228e-05, 9.538900000000128e-05, 9.559799999999882e-05, 9.520899999999888e-05]</msg>
<status status="PASS" starttime="20201029 12:44:25.241" endtime="20201029 12:44:25.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.236" endtime="20201029 12:44:25.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.248" endtime="20201029 12:44:25.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.246" endtime="20201029 12:44:25.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.245" endtime="20201029 12:44:25.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.882" endtime="20201029 12:44:25.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.881" endtime="20201029 12:44:25.269"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.278" endtime="20201029 12:44:25.297"></status>
</kw>
<msg timestamp="20201029 12:44:25.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.276" endtime="20201029 12:44:25.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.299" endtime="20201029 12:44:25.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.301" endtime="20201029 12:44:25.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.273" endtime="20201029 12:44:25.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.271" endtime="20201029 12:44:25.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.311" endtime="20201029 12:44:25.597"></status>
</kw>
<msg timestamp="20201029 12:44:25.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023442625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023538389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.309" endtime="20201029 12:44:25.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023442625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023538389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.601" endtime="20201029 12:44:25.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.610" endtime="20201029 12:44:25.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.306" endtime="20201029 12:44:25.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.304" endtime="20201029 12:44:25.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.617" level="INFO">${RESULT} = [{'diff': 9.576399999999818e-05}, {'diff': 9.572199999999947e-05}, {'diff': 9.576400000000165e-05}, {'diff': 9.637499999999924e-05}, {'diff': 9.566700000000067e-05}, {'diff': 9.563900000000153e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:25.614" endtime="20201029 12:44:25.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.621" level="INFO">${ACCURACY} = {'diff': [9.576399999999818e-05, 9.572199999999947e-05, 9.576400000000165e-05, 9.637499999999924e-05, 9.566700000000067e-05, 9.563900000000153e-05, 9.627799999999825e-05, 9.643100000000099e-05, 9.6472...</msg>
<status status="PASS" starttime="20201029 12:44:25.618" endtime="20201029 12:44:25.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.626" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.625" endtime="20201029 12:44:25.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.629" level="INFO">VALUE: [9.576399999999818e-05, 9.572199999999947e-05, 9.576400000000165e-05, 9.637499999999924e-05, 9.566700000000067e-05, 9.563900000000153e-05, 9.627799999999825e-05, 9.643100000000099e-05, 9.647200000000022e-05, 9.65270000000025e-05, 9.652699999999903e-05, 9.641600000000194e-05, 9.572200000000294e-05, 9.651399999999893e-05, 9.616700000000117e-05, 9.661099999999992e-05, 9.627800000000172e-05, 9.565299999999763e-05, 9.57079999999999e-05, 9.577799999999775e-05, 9.645900000000013e-05, 9.627700000000225e-05, 9.636199999999914e-05, 9.655599999999764e-05, 9.563899999999806e-05, 9.64859999999998e-05, 9.665199999999916e-05, 9.650000000000283e-05, 9.62080000000004e-05, 9.630500000000139e-05, 9.626399999999868e-05, 9.638899999999881e-05, 9.618000000000126e-05, 9.66530000000021e-05, 9.62920000000013e-05, 9.573599999999904e-05, 9.657000000000068e-05, 9.622199999999997e-05, 9.63470000000001e-05, 9.659799999999982e-05, 9.658400000000025e-05, 9.6334e-05, 9.630500000000139e-05, 9.652699999999903e-05, 9.651300000000293e-05, 9.593000000000101e-05, 9.56669999999972e-05, 9.562499999999849e-05, 9.645800000000065e-05, 9.636099999999967e-05]</msg>
<status status="PASS" starttime="20201029 12:44:25.627" endtime="20201029 12:44:25.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.622" endtime="20201029 12:44:25.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.634" endtime="20201029 12:44:25.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.633" endtime="20201029 12:44:25.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.632" endtime="20201029 12:44:25.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.270" endtime="20201029 12:44:25.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.269" endtime="20201029 12:44:25.655"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.665" endtime="20201029 12:44:25.683"></status>
</kw>
<msg timestamp="20201029 12:44:25.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.663" endtime="20201029 12:44:25.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.685" endtime="20201029 12:44:25.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.688" endtime="20201029 12:44:25.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.660" endtime="20201029 12:44:25.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.658" endtime="20201029 12:44:25.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.697" endtime="20201029 12:44:25.984"></status>
</kw>
<msg timestamp="20201029 12:44:25.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022876694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.695" endtime="20201029 12:44:25.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022876694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.989" endtime="20201029 12:44:25.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.997" endtime="20201029 12:44:25.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.693" endtime="20201029 12:44:26.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.691" endtime="20201029 12:44:26.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.004" level="INFO">${RESULT} = [{'diff': 9.691599999999898e-05}, {'diff': 9.751399999999993e-05}, {'diff': 9.755500000000264e-05}, {'diff': 9.727799999999925e-05}, {'diff': 9.730600000000186e-05}, {'diff': 9.748599999999732e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:26.001" endtime="20201029 12:44:26.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:26.010" level="INFO">${ACCURACY} = {'diff': [9.691599999999898e-05, 9.751399999999993e-05, 9.755500000000264e-05, 9.727799999999925e-05, 9.730600000000186e-05, 9.748599999999732e-05, 9.74860000000008e-05, 9.76669999999992e-05, 9.765300...</msg>
<status status="PASS" starttime="20201029 12:44:26.005" endtime="20201029 12:44:26.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.014" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 12:44:26.013" endtime="20201029 12:44:26.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.018" level="INFO">VALUE: [9.691599999999898e-05, 9.751399999999993e-05, 9.755500000000264e-05, 9.727799999999925e-05, 9.730600000000186e-05, 9.748599999999732e-05, 9.74860000000008e-05, 9.76669999999992e-05, 9.76530000000031e-05, 9.737500000000024e-05, 9.743100000000199e-05, 9.738899999999981e-05, 9.7334000000001e-05, 9.737500000000024e-05, 9.745899999999766e-05, 9.670799999999743e-05, 9.727799999999925e-05, 9.674999999999961e-05, 9.744499999999809e-05, 9.722200000000097e-05, 9.666700000000167e-05, 9.731900000000196e-05, 9.719399999999837e-05, 9.745799999999818e-05, 9.763900000000006e-05, 9.754199999999907e-05, 9.763799999999712e-05, 9.741699999999895e-05, 9.72920000000023e-05, 9.751399999999993e-05, 9.738899999999981e-05, 9.674999999999961e-05, 9.674999999999961e-05, 9.733299999999806e-05, 9.676399999999918e-05, 9.742999999999905e-05, 9.674999999999961e-05, 9.718000000000226e-05, 9.729199999999882e-05, 9.719399999999837e-05, 9.727800000000272e-05, 9.723600000000054e-05, 9.75279999999995e-05, 9.743099999999852e-05, 9.726399999999968e-05, 9.757000000000168e-05, 9.73059999999984e-05, 9.665299999999863e-05, 9.727800000000272e-05, 9.665299999999863e-05]</msg>
<status status="PASS" starttime="20201029 12:44:26.016" endtime="20201029 12:44:26.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.010" endtime="20201029 12:44:26.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:26.025" endtime="20201029 12:44:26.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.023" endtime="20201029 12:44:26.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.021" endtime="20201029 12:44:26.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.656" endtime="20201029 12:44:26.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.656" endtime="20201029 12:44:26.046"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.055" endtime="20201029 12:44:26.074"></status>
</kw>
<msg timestamp="20201029 12:44:26.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.054" endtime="20201029 12:44:26.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.076" endtime="20201029 12:44:26.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.079" endtime="20201029 12:44:26.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.051" endtime="20201029 12:44:26.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.049" endtime="20201029 12:44:26.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.089" endtime="20201029 12:44:26.377"></status>
</kw>
<msg timestamp="20201029 12:44:26.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022531903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.087" endtime="20201029 12:44:26.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022531903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.381" endtime="20201029 12:44:26.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.390" endtime="20201029 12:44:26.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.084" endtime="20201029 12:44:26.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.082" endtime="20201029 12:44:26.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.397" level="INFO">${RESULT} = [{'diff': 9.873599999999857e-05}, {'diff': 9.859699999999888e-05}, {'diff': 9.770899999999791e-05}, {'diff': 9.856999999999921e-05}, {'diff': 9.855599999999964e-05}, {'diff': 9.833399999999853e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:26.394" endtime="20201029 12:44:26.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:26.401" level="INFO">${ACCURACY} = {'diff': [9.873599999999857e-05, 9.859699999999888e-05, 9.770899999999791e-05, 9.856999999999921e-05, 9.855599999999964e-05, 9.833399999999853e-05, 9.859799999999835e-05, 9.865200000000116e-05, 9.7735...</msg>
<status status="PASS" starttime="20201029 12:44:26.398" endtime="20201029 12:44:26.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.406" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 12:44:26.405" endtime="20201029 12:44:26.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.409" level="INFO">VALUE: [9.873599999999857e-05, 9.859699999999888e-05, 9.770899999999791e-05, 9.856999999999921e-05, 9.855599999999964e-05, 9.833399999999853e-05, 9.859799999999835e-05, 9.865200000000116e-05, 9.773599999999757e-05, 9.833299999999906e-05, 9.76799999999993e-05, 9.8415999999997e-05, 9.816600000000023e-05, 9.775000000000061e-05, 9.819400000000283e-05, 9.83609999999982e-05, 9.81669999999997e-05, 9.77080000000019e-05, 9.847200000000222e-05, 9.819500000000231e-05, 9.837500000000124e-05, 9.83479999999981e-05, 9.862499999999802e-05, 9.843099999999952e-05, 9.838900000000081e-05, 9.829100000000035e-05, 9.851400000000093e-05, 9.847199999999875e-05, 9.848599999999832e-05, 9.848599999999832e-05, 9.847199999999875e-05, 9.841699999999995e-05, 9.836100000000167e-05, 9.847200000000222e-05, 9.822200000000197e-05, 9.815300000000013e-05, 9.826400000000068e-05, 9.823700000000102e-05, 9.83479999999981e-05, 9.820799999999894e-05, 9.841600000000048e-05, 9.838799999999787e-05, 9.773600000000104e-05, 9.82219999999985e-05, 9.844399999999962e-05, 9.847199999999875e-05, 9.816600000000023e-05, 9.826399999999721e-05, 9.763900000000006e-05, 9.858300000000278e-05]</msg>
<status status="PASS" starttime="20201029 12:44:26.407" endtime="20201029 12:44:26.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.402" endtime="20201029 12:44:26.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:26.414" endtime="20201029 12:44:26.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.412" endtime="20201029 12:44:26.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.411" endtime="20201029 12:44:26.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.047" endtime="20201029 12:44:26.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.046" endtime="20201029 12:44:26.434"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.444" endtime="20201029 12:44:26.465"></status>
</kw>
<msg timestamp="20201029 12:44:26.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.442" endtime="20201029 12:44:26.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.466" endtime="20201029 12:44:26.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.469" endtime="20201029 12:44:26.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.439" endtime="20201029 12:44:26.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.437" endtime="20201029 12:44:26.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.478" endtime="20201029 12:44:26.764"></status>
</kw>
<msg timestamp="20201029 12:44:26.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02378275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023881861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:26.477" endtime="20201029 12:44:26.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02378275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023881861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:26.769" endtime="20201029 12:44:26.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.777" endtime="20201029 12:44:26.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.474" endtime="20201029 12:44:26.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.472" endtime="20201029 12:44:26.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.784" level="INFO">${RESULT} = [{'diff': 9.911100000000242e-05}, {'diff': 9.927800000000125e-05}, {'diff': 9.962499999999902e-05}, {'diff': 9.931999999999996e-05}, {'diff': 9.944500000000009e-05}, {'diff': 9.920899999999941e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:26.781" endtime="20201029 12:44:26.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:26.788" level="INFO">${ACCURACY} = {'diff': [9.911100000000242e-05, 9.927800000000125e-05, 9.962499999999902e-05, 9.931999999999996e-05, 9.944500000000009e-05, 9.920899999999941e-05, 9.940300000000138e-05, 9.958399999999978e-05, 9.9542...</msg>
<status status="PASS" starttime="20201029 12:44:26.785" endtime="20201029 12:44:26.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.793" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 12:44:26.792" endtime="20201029 12:44:26.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.796" level="INFO">VALUE: [9.911100000000242e-05, 9.927800000000125e-05, 9.962499999999902e-05, 9.931999999999996e-05, 9.944500000000009e-05, 9.920899999999941e-05, 9.940300000000138e-05, 9.958399999999978e-05, 9.954200000000107e-05, 9.947199999999976e-05, 9.962499999999902e-05, 9.948599999999932e-05, 9.926400000000168e-05, 9.955500000000117e-05, 9.940299999999791e-05, 9.959699999999988e-05, 9.948599999999932e-05, 9.93060000000004e-05, 9.86670000000002e-05, 9.863900000000106e-05, 9.86670000000002e-05, 9.922300000000245e-05, 9.91670000000007e-05, 9.891700000000045e-05, 9.874999999999814e-05, 9.962500000000249e-05, 9.965300000000163e-05, 9.944400000000062e-05, 9.956900000000074e-05, 9.954099999999813e-05, 9.930500000000092e-05, 9.926400000000168e-05, 9.956900000000074e-05, 9.933300000000006e-05, 9.951399999999846e-05, 9.956900000000074e-05, 9.894499999999959e-05, 9.954200000000107e-05, 9.872299999999848e-05, 9.938899999999834e-05, 9.869499999999934e-05, 9.951399999999846e-05, 9.936200000000214e-05, 9.86800000000003e-05, 9.873599999999857e-05, 9.924999999999864e-05, 9.940300000000138e-05, 9.866600000000073e-05, 9.923600000000254e-05, 9.91670000000007e-05]</msg>
<status status="PASS" starttime="20201029 12:44:26.794" endtime="20201029 12:44:26.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.789" endtime="20201029 12:44:26.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:26.802" endtime="20201029 12:44:26.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.800" endtime="20201029 12:44:26.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.799" endtime="20201029 12:44:26.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.435" endtime="20201029 12:44:26.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.435" endtime="20201029 12:44:26.822"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.831" endtime="20201029 12:44:26.851"></status>
</kw>
<msg timestamp="20201029 12:44:26.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.830" endtime="20201029 12:44:26.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.853" endtime="20201029 12:44:26.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.856" endtime="20201029 12:44:26.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.827" endtime="20201029 12:44:26.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.825" endtime="20201029 12:44:26.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.865" endtime="20201029 12:44:27.150"></status>
</kw>
<msg timestamp="20201029 12:44:27.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022833778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022934194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.863" endtime="20201029 12:44:27.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022833778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022934194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.154" endtime="20201029 12:44:27.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.163" endtime="20201029 12:44:27.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.861" endtime="20201029 12:44:27.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.859" endtime="20201029 12:44:27.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.169" level="INFO">${RESULT} = [{'diff': 0.00010041600000000248}, {'diff': 0.00010042999999999858}, {'diff': 0.0001003610000000002}, {'diff': 0.00010026399999999921}, {'diff': 0.00010029099999999888}, {'diff': 0.0001003469999999971...</msg>
<status status="PASS" starttime="20201029 12:44:27.166" endtime="20201029 12:44:27.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.174" level="INFO">${ACCURACY} = {'diff': [0.00010041600000000248, 0.00010042999999999858, 0.0001003610000000002, 0.00010026399999999921, 0.00010029099999999888, 0.00010034699999999716, 0.00010056900000000174, 0.00010027799999999878,...</msg>
<status status="PASS" starttime="20201029 12:44:27.170" endtime="20201029 12:44:27.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.179" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.178" endtime="20201029 12:44:27.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.182" level="INFO">VALUE: [0.00010041600000000248, 0.00010042999999999858, 0.0001003610000000002, 0.00010026399999999921, 0.00010029099999999888, 0.00010034699999999716, 0.00010056900000000174, 0.00010027799999999878, 9.965300000000163e-05, 0.00010044499999999762, 0.00010061100000000045, 0.00010061100000000045, 0.0001003199999999975, 0.0001002220000000005, 0.00010044500000000109, 0.0001005419999999986, 0.00010054099999999913, 0.00010023600000000008, 0.00010023600000000008, 0.00010023600000000008, 0.00010059700000000088, 0.0001003610000000002, 0.00010040299999999891, 0.00010029200000000182, 9.969500000000034e-05, 9.970800000000044e-05, 0.00010038899999999934, 0.0001005280000000025, 0.00010041700000000195, 0.00010048600000000033, 0.00010025000000000311, 0.00010055600000000164, 0.00010026299999999974, 0.00010059700000000088, 0.0001002220000000005, 0.00010051399999999946, 0.00010037499999999977, 0.00010059700000000088, 0.00010038899999999934, 0.00010032000000000096, 0.0001003610000000002, 0.00010020800000000094, 9.969500000000034e-05, 0.00010048600000000033, 9.969500000000034e-05, 9.98609999999997e-05, 0.00010048600000000033, 0.00010037499999999977, 9.970899999999991e-05, 0.0001004999999999999]</msg>
<status status="PASS" starttime="20201029 12:44:27.180" endtime="20201029 12:44:27.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.175" endtime="20201029 12:44:27.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.187" endtime="20201029 12:44:27.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.185" endtime="20201029 12:44:27.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.184" endtime="20201029 12:44:27.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.823" endtime="20201029 12:44:27.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.823" endtime="20201029 12:44:27.208"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.217" endtime="20201029 12:44:27.235"></status>
</kw>
<msg timestamp="20201029 12:44:27.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.215" endtime="20201029 12:44:27.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.237" endtime="20201029 12:44:27.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.240" endtime="20201029 12:44:27.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.213" endtime="20201029 12:44:27.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.210" endtime="20201029 12:44:27.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.249" endtime="20201029 12:44:27.536"></status>
</kw>
<msg timestamp="20201029 12:44:27.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022333736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.248" endtime="20201029 12:44:27.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022333736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.541" endtime="20201029 12:44:27.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.549" endtime="20201029 12:44:27.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.245" endtime="20201029 12:44:27.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.243" endtime="20201029 12:44:27.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.556" level="INFO">${RESULT} = [{'diff': 0.00010152800000000003}, {'diff': 0.0001011809999999988}, {'diff': 0.0001006809999999983}, {'diff': 0.0001015549999999997}, {'diff': 0.0001014870000000008}, {'diff': 0.00010159700000000188},...</msg>
<status status="PASS" starttime="20201029 12:44:27.553" endtime="20201029 12:44:27.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.560" level="INFO">${ACCURACY} = {'diff': [0.00010152800000000003, 0.0001011809999999988, 0.0001006809999999983, 0.0001015549999999997, 0.0001014870000000008, 0.00010159700000000188, 0.00010126300000000074, 0.00010162500000000102, 0....</msg>
<status status="PASS" starttime="20201029 12:44:27.557" endtime="20201029 12:44:27.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.565" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.564" endtime="20201029 12:44:27.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.567" level="INFO">VALUE: [0.00010152800000000003, 0.0001011809999999988, 0.0001006809999999983, 0.0001015549999999997, 0.0001014870000000008, 0.00010159700000000188, 0.00010126300000000074, 0.00010162500000000102, 0.00010137500000000077, 0.0001015549999999997, 0.0001006670000000022, 0.00010144399999999915, 0.0001006939999999984, 0.00010141699999999948, 0.000101513999999997, 0.00010126300000000074, 0.0001015419999999996, 0.00010091700000000245, 0.0001006809999999983, 0.00010126400000000021, 0.0001013199999999985, 0.00010130599999999892, 0.00010149999999999743, 0.00010145799999999872, 0.00010131899999999902, 0.00010126400000000021, 0.00010137500000000077, 0.00010159700000000188, 0.00010140299999999991, 0.00010070800000000144, 0.00010144399999999915, 0.00010065300000000263, 0.0001015000000000009, 0.00010144500000000209, 0.00010120900000000141, 0.00010162500000000102, 0.00010159800000000135, 0.00010113900000000009, 0.0001015419999999996, 0.00010117999999999933, 0.00010138900000000034, 0.00010065199999999969, 0.0001015549999999997, 0.00010073600000000058, 0.00010140299999999991, 0.00010161099999999798, 0.00010158299999999884, 0.0001013749999999973, 0.00010119500000000184, 0.00010076399999999971]</msg>
<status status="PASS" starttime="20201029 12:44:27.566" endtime="20201029 12:44:27.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.561" endtime="20201029 12:44:27.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.572" endtime="20201029 12:44:27.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.571" endtime="20201029 12:44:27.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.570" endtime="20201029 12:44:27.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.209" endtime="20201029 12:44:27.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.208" endtime="20201029 12:44:27.593"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.602" endtime="20201029 12:44:27.625"></status>
</kw>
<msg timestamp="20201029 12:44:27.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.601" endtime="20201029 12:44:27.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.626" endtime="20201029 12:44:27.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.629" endtime="20201029 12:44:27.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.598" endtime="20201029 12:44:27.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.596" endtime="20201029 12:44:27.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.639" endtime="20201029 12:44:27.926"></status>
</kw>
<msg timestamp="20201029 12:44:27.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025824722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025926514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.637" endtime="20201029 12:44:27.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025824722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025926514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.930" endtime="20201029 12:44:27.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.939" endtime="20201029 12:44:27.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.634" endtime="20201029 12:44:27.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.633" endtime="20201029 12:44:27.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.945" level="INFO">${RESULT} = [{'diff': 0.00010179199999999985}, {'diff': 0.0001016809999999993}, {'diff': 0.00010166699999999973}, {'diff': 0.00010243100000000005}, {'diff': 0.00010247300000000223}, {'diff': 0.0001025269999999980...</msg>
<status status="PASS" starttime="20201029 12:44:27.942" endtime="20201029 12:44:27.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.950" level="INFO">${ACCURACY} = {'diff': [0.00010179199999999985, 0.0001016809999999993, 0.00010166699999999973, 0.00010243100000000005, 0.00010247300000000223, 0.00010252699999999809, 0.00010166600000000026, 0.00010230500000000045,...</msg>
<status status="PASS" starttime="20201029 12:44:27.946" endtime="20201029 12:44:27.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.954" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.953" endtime="20201029 12:44:27.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.957" level="INFO">VALUE: [0.00010179199999999985, 0.0001016809999999993, 0.00010166699999999973, 0.00010243100000000005, 0.00010247300000000223, 0.00010252699999999809, 0.00010166600000000026, 0.00010230500000000045, 0.00010176400000000071, 0.00010251400000000147, 0.00010252800000000103, 0.00010230599999999992, 0.00010241699999999701, 0.0001023199999999995, 0.00010170799999999897, 0.00010222299999999851, 0.00010244499999999962, 0.00010256999999999974, 0.00010222300000000198, 0.00010168100000000277, 0.00010255600000000017, 0.00010248699999999833, 0.00010222199999999904, 0.000102416000000001, 0.00010254099999999766, 0.00010224999999999818, 0.00010256999999999974, 0.00010218000000000033, 0.0001025000000000019, 0.00010240299999999744, 0.00010259699999999941, 0.00010248599999999886, 0.00010244499999999962, 0.00010190300000000041, 0.00010170899999999844, 0.00010234799999999863, 0.00010252700000000156, 0.00010167999999999983, 0.00010166699999999973, 0.00010229200000000035, 0.00010263799999999865, 0.00010220799999999947, 0.00010231900000000002, 0.00010258299999999984, 0.00010231900000000002, 0.00010244400000000015, 0.00010233299999999959, 0.00010165300000000016, 0.00010261099999999898, 0.00010251400000000147]</msg>
<status status="PASS" starttime="20201029 12:44:27.955" endtime="20201029 12:44:27.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.950" endtime="20201029 12:44:27.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.963" endtime="20201029 12:44:27.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.961" endtime="20201029 12:44:27.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.960" endtime="20201029 12:44:27.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.594" endtime="20201029 12:44:27.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.594" endtime="20201029 12:44:27.983"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.992" endtime="20201029 12:44:28.013"></status>
</kw>
<msg timestamp="20201029 12:44:28.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.991" endtime="20201029 12:44:28.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.014" endtime="20201029 12:44:28.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.017" endtime="20201029 12:44:28.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.988" endtime="20201029 12:44:28.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.986" endtime="20201029 12:44:28.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.026" endtime="20201029 12:44:28.313"></status>
</kw>
<msg timestamp="20201029 12:44:28.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022812153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.025" endtime="20201029 12:44:28.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022812153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.317" endtime="20201029 12:44:28.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.325" endtime="20201029 12:44:28.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.022" endtime="20201029 12:44:28.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.020" endtime="20201029 12:44:28.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.332" level="INFO">${RESULT} = [{'diff': 0.00010317999999999786}, {'diff': 0.00010326400000000222}, {'diff': 0.000103513999999999}, {'diff': 0.00010344400000000115}, {'diff': 0.00010334700000000016}, {'diff': 0.00010270799999999997...</msg>
<status status="PASS" starttime="20201029 12:44:28.329" endtime="20201029 12:44:28.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.338" level="INFO">${ACCURACY} = {'diff': [0.00010317999999999786, 0.00010326400000000222, 0.000103513999999999, 0.00010344400000000115, 0.00010334700000000016, 0.00010270799999999997, 0.00010359799999999988, 0.000103513999999999, 0....</msg>
<status status="PASS" starttime="20201029 12:44:28.333" endtime="20201029 12:44:28.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.342" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.341" endtime="20201029 12:44:28.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.345" level="INFO">VALUE: [0.00010317999999999786, 0.00010326400000000222, 0.000103513999999999, 0.00010344400000000115, 0.00010334700000000016, 0.00010270799999999997, 0.00010359799999999988, 0.000103513999999999, 0.00010359799999999988, 0.00010348599999999986, 0.00010323700000000255, 0.00010330600000000092, 0.00010327700000000231, 0.00010331900000000102, 0.00010351299999999952, 0.0001031940000000009, 0.00010268000000000083, 0.000103207999999997, 0.00010340300000000191, 0.00010329199999999789, 0.00010340300000000191, 0.00010322200000000004, 0.00010363899999999912, 0.00010318099999999733, 0.00010333400000000006, 0.00010361099999999998, 0.00010358400000000031, 0.00010354199999999814, 0.0001027359999999991, 0.0001028619999999987, 0.00010323600000000308, 0.00010291599999999804, 0.00010266600000000126, 0.00010272199999999954, 0.00010359700000000041, 0.00010320800000000047, 0.00010320800000000047, 0.00010338899999999887, 0.00010265300000000116, 0.00010333300000000059, 0.00010270899999999944, 0.0001027359999999991, 0.00010270900000000291, 0.00010355600000000117, 0.00010358400000000031, 0.00010354199999999814, 0.00010270799999999997, 0.00010359700000000041, 0.00010318000000000133, 0.00010354099999999866]</msg>
<status status="PASS" starttime="20201029 12:44:28.343" endtime="20201029 12:44:28.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.339" endtime="20201029 12:44:28.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.354" endtime="20201029 12:44:28.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.353" endtime="20201029 12:44:28.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.351" endtime="20201029 12:44:28.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.984" endtime="20201029 12:44:28.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.984" endtime="20201029 12:44:28.375"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.384" endtime="20201029 12:44:28.403"></status>
</kw>
<msg timestamp="20201029 12:44:28.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.383" endtime="20201029 12:44:28.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.405" endtime="20201029 12:44:28.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.407" endtime="20201029 12:44:28.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.380" endtime="20201029 12:44:28.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.378" endtime="20201029 12:44:28.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.417" endtime="20201029 12:44:28.704"></status>
</kw>
<msg timestamp="20201029 12:44:28.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.415" endtime="20201029 12:44:28.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.708" endtime="20201029 12:44:28.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.717" endtime="20201029 12:44:28.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.413" endtime="20201029 12:44:28.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.411" endtime="20201029 12:44:28.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.723" level="INFO">${RESULT} = [{'diff': 0.00010420800000000147}, {'diff': 0.00010430500000000245}, {'diff': 0.00010436100000000073}, {'diff': 0.00010425000000000018}, {'diff': 0.00010445799999999825}, {'diff': 0.000104597000000001...</msg>
<status status="PASS" starttime="20201029 12:44:28.720" endtime="20201029 12:44:28.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.728" level="INFO">${ACCURACY} = {'diff': [0.00010420800000000147, 0.00010430500000000245, 0.00010436100000000073, 0.00010425000000000018, 0.00010445799999999825, 0.00010459700000000141, 0.00010369500000000087, 0.00010393100000000155...</msg>
<status status="PASS" starttime="20201029 12:44:28.724" endtime="20201029 12:44:28.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.732" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.731" endtime="20201029 12:44:28.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.735" level="INFO">VALUE: [0.00010420800000000147, 0.00010430500000000245, 0.00010436100000000073, 0.00010425000000000018, 0.00010445799999999825, 0.00010459700000000141, 0.00010369500000000087, 0.00010393100000000155, 0.000104514, 0.00010372300000000001, 0.00010374999999999968, 0.00010430599999999846, 0.00010367999999999836, 0.00010427699999999984, 0.0001037079999999975, 0.00010419399999999843, 0.00010418000000000233, 0.00010384700000000066, 0.00010431899999999855, 0.00010393100000000155, 0.0001045559999999987, 0.00010386100000000023, 0.00010447300000000076, 0.00010445900000000119, 0.00010416699999999876, 0.00010444500000000162, 0.00010391699999999851, 0.00010455499999999923, 0.000104207999999998, 0.00010422200000000104, 0.00010430599999999846, 0.00010372199999999707, 0.00010391599999999904, 0.00010433299999999812, 0.00010463900000000012, 0.00010434700000000116, 0.00010430600000000192, 0.00010441699999999901, 0.00010431999999999803, 0.00010366700000000173, 0.00010445900000000119, 0.00010418099999999833, 0.00010436099999999726, 0.00010461200000000045, 0.00010361099999999998, 0.00010436100000000073, 0.00010365300000000216, 0.00010441599999999954, 0.00010427799999999932, 0.0001045689999999988]</msg>
<status status="PASS" starttime="20201029 12:44:28.733" endtime="20201029 12:44:28.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.729" endtime="20201029 12:44:28.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.740" endtime="20201029 12:44:28.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.738" endtime="20201029 12:44:28.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.737" endtime="20201029 12:44:28.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.376" endtime="20201029 12:44:28.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.376" endtime="20201029 12:44:28.761"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.770" endtime="20201029 12:44:28.790"></status>
</kw>
<msg timestamp="20201029 12:44:28.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.768" endtime="20201029 12:44:28.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.791" endtime="20201029 12:44:28.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.794" endtime="20201029 12:44:28.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.765" endtime="20201029 12:44:28.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.763" endtime="20201029 12:44:28.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.803" endtime="20201029 12:44:29.089"></status>
</kw>
<msg timestamp="20201029 12:44:29.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023514819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023619708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.802" endtime="20201029 12:44:29.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023514819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023619708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.094" endtime="20201029 12:44:29.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.102" endtime="20201029 12:44:29.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.799" endtime="20201029 12:44:29.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.797" endtime="20201029 12:44:29.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.109" level="INFO">${RESULT} = [{'diff': 0.00010488900000000037}, {'diff': 0.00010469399999999893}, {'diff': 0.00010565300000000069}, {'diff': 0.00010533299999999912}, {'diff': 0.00010543099999999958}, {'diff': 0.000105680000000000...</msg>
<status status="PASS" starttime="20201029 12:44:29.106" endtime="20201029 12:44:29.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.113" level="INFO">${ACCURACY} = {'diff': [0.00010488900000000037, 0.00010469399999999893, 0.00010565300000000069, 0.00010533299999999912, 0.00010543099999999958, 0.00010568000000000036, 0.00010463900000000012, 0.00010465300000000316...</msg>
<status status="PASS" starttime="20201029 12:44:29.110" endtime="20201029 12:44:29.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.118" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.117" endtime="20201029 12:44:29.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.120" level="INFO">VALUE: [0.00010488900000000037, 0.00010469399999999893, 0.00010565300000000069, 0.00010533299999999912, 0.00010543099999999958, 0.00010568000000000036, 0.00010463900000000012, 0.00010465300000000316, 0.00010541700000000001, 0.00010470900000000144, 0.00010522200000000204, 0.00010520900000000194, 0.00010563899999999765, 0.0001051949999999989, 0.00010547299999999829, 0.0001055689999999998, 0.00010545799999999925, 0.00010544399999999968, 0.00010491600000000004, 0.00010531899999999955, 0.00010548599999999839, 0.0001047079999999985, 0.00010529199999999989, 0.00010536099999999826, 0.00010541700000000001, 0.00010466700000000273, 0.00010491700000000298, 0.00010534800000000163, 0.000105514000000001, 0.00010522299999999804, 0.0001052499999999977, 0.00010530499999999998, 0.00010533299999999912, 0.0001055689999999998, 0.00010541600000000054, 0.00010544399999999968, 0.00010525000000000118, 0.00010561100000000198, 0.0001055689999999998, 0.00010561100000000198, 0.0001053200000000025, 0.00010563900000000112, 0.00010530599999999946, 0.0001052499999999977, 0.0001053339999999986, 0.00010520899999999847, 0.00010554100000000066, 0.00010562499999999808, 0.00010522199999999857, 0.00010472200000000154]</msg>
<status status="PASS" starttime="20201029 12:44:29.119" endtime="20201029 12:44:29.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.114" endtime="20201029 12:44:29.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.126" endtime="20201029 12:44:29.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.125" endtime="20201029 12:44:29.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.123" endtime="20201029 12:44:29.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.762" endtime="20201029 12:44:29.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.761" endtime="20201029 12:44:29.147"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.156" endtime="20201029 12:44:29.176"></status>
</kw>
<msg timestamp="20201029 12:44:29.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.155" endtime="20201029 12:44:29.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.178" endtime="20201029 12:44:29.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.180" endtime="20201029 12:44:29.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.152" endtime="20201029 12:44:29.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.150" endtime="20201029 12:44:29.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.190" endtime="20201029 12:44:29.477"></status>
</kw>
<msg timestamp="20201029 12:44:29.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022935264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023041569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.188" endtime="20201029 12:44:29.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022935264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023041569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.481" endtime="20201029 12:44:29.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.489" endtime="20201029 12:44:29.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.185" endtime="20201029 12:44:29.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.184" endtime="20201029 12:44:29.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.496" level="INFO">${RESULT} = [{'diff': 0.00010630500000000098}, {'diff': 0.00010662499999999908}, {'diff': 0.00010658300000000037}, {'diff': 0.00010566700000000026}, {'diff': 0.000106514000000002}, {'diff': 0.00010633300000000012...</msg>
<status status="PASS" starttime="20201029 12:44:29.493" endtime="20201029 12:44:29.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.501" level="INFO">${ACCURACY} = {'diff': [0.00010630500000000098, 0.00010662499999999908, 0.00010658300000000037, 0.00010566700000000026, 0.000106514000000002, 0.00010633300000000012, 0.00010640300000000144, 0.00010572199999999907, ...</msg>
<status status="PASS" starttime="20201029 12:44:29.497" endtime="20201029 12:44:29.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.506" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.505" endtime="20201029 12:44:29.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.508" level="INFO">VALUE: [0.00010630500000000098, 0.00010662499999999908, 0.00010658300000000037, 0.00010566700000000026, 0.000106514000000002, 0.00010633300000000012, 0.00010640300000000144, 0.00010572199999999907, 0.00010645800000000025, 0.00010649999999999896, 0.0001056949999999994, 0.00010662500000000255, 0.00010620899999999947, 0.0001057079999999995, 0.00010645899999999972, 0.00010623599999999914, 0.00010623599999999914, 0.0001063889999999984, 0.00010634699999999969, 0.00010633400000000306, 0.00010643100000000058, 0.00010644400000000068, 0.00010643000000000111, 0.00010666700000000126, 0.00010630600000000046, 0.00010649999999999896, 0.00010636100000000273, 0.00010629199999999742, 0.00010620899999999947, 0.00010568099999999983, 0.00010658399999999985, 0.00010645800000000025, 0.00010631900000000055, 0.00010591600000000104, 0.00010565199999999775, 0.00010629099999999794, 0.00010619400000000043, 0.0001065690000000008, 0.0001062499999999987, 0.00010630600000000046, 0.0001065560000000007, 0.00010641700000000101, 0.00010647299999999929, 0.0001057360000000021, 0.00010632000000000003, 0.00010652800000000157, 0.00010627800000000132, 0.0001057499999999982, 0.00010631900000000055, 0.00010626400000000175]</msg>
<status status="PASS" starttime="20201029 12:44:29.507" endtime="20201029 12:44:29.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.502" endtime="20201029 12:44:29.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.514" endtime="20201029 12:44:29.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.512" endtime="20201029 12:44:29.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.511" endtime="20201029 12:44:29.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.148" endtime="20201029 12:44:29.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.148" endtime="20201029 12:44:29.534"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.543" endtime="20201029 12:44:29.563"></status>
</kw>
<msg timestamp="20201029 12:44:29.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.542" endtime="20201029 12:44:29.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.565" endtime="20201029 12:44:29.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.567" endtime="20201029 12:44:29.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.539" endtime="20201029 12:44:29.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.537" endtime="20201029 12:44:29.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.577" endtime="20201029 12:44:29.864"></status>
</kw>
<msg timestamp="20201029 12:44:29.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022415458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.575" endtime="20201029 12:44:29.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022415458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.868" endtime="20201029 12:44:29.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.876" endtime="20201029 12:44:29.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.572" endtime="20201029 12:44:29.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.571" endtime="20201029 12:44:29.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.883" level="INFO">${RESULT} = [{'diff': 0.00010695900000000022}, {'diff': 0.00010752699999999962}, {'diff': 0.00010718100000000133}, {'diff': 0.00010744399999999821}, {'diff': 0.00010749999999999996}, {'diff': 0.000107583000000001...</msg>
<status status="PASS" starttime="20201029 12:44:29.880" endtime="20201029 12:44:29.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.888" level="INFO">${ACCURACY} = {'diff': [0.00010695900000000022, 0.00010752699999999962, 0.00010718100000000133, 0.00010744399999999821, 0.00010749999999999996, 0.00010758300000000137, 0.00010668000000000136, 0.00010729199999999842...</msg>
<status status="PASS" starttime="20201029 12:44:29.884" endtime="20201029 12:44:29.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.892" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.891" endtime="20201029 12:44:29.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.895" level="INFO">VALUE: [0.00010695900000000022, 0.00010752699999999962, 0.00010718100000000133, 0.00010744399999999821, 0.00010749999999999996, 0.00010758300000000137, 0.00010668000000000136, 0.00010729199999999842, 0.00010762500000000008, 0.00010738900000000287, 0.0001073340000000006, 0.00010731999999999756, 0.00010748600000000039, 0.00010670899999999997, 0.00010727800000000232, 0.00010762500000000008, 0.00010670899999999997, 0.00010723600000000014, 0.00010745899999999725, 0.00010740200000000297, 0.00010752699999999962, 0.00010736100000000026, 0.00010761100000000051, 0.0001067080000000005, 0.00010751399999999953, 0.00010730599999999799, 0.00010713900000000262, 0.0001074019999999995, 0.00010765299999999922, 0.00010726400000000275, 0.00010673599999999964, 0.00010761100000000051, 0.00010748699999999986, 0.00010717999999999839, 0.00010669400000000093, 0.00010752699999999962, 0.00010737499999999983, 0.00010745799999999778, 0.00010748600000000039, 0.0001067499999999992, 0.00010726399999999928, 0.00010737499999999983, 0.00010743100000000158, 0.00010733399999999713, 0.00010723600000000014, 0.00010727799999999885, 0.00010745899999999725, 0.00010761100000000051, 0.00010669499999999693, 0.00010762500000000008]</msg>
<status status="PASS" starttime="20201029 12:44:29.893" endtime="20201029 12:44:29.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.888" endtime="20201029 12:44:29.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.900" endtime="20201029 12:44:29.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.898" endtime="20201029 12:44:29.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.897" endtime="20201029 12:44:29.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.535" endtime="20201029 12:44:29.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.535" endtime="20201029 12:44:29.921"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.930" endtime="20201029 12:44:29.951"></status>
</kw>
<msg timestamp="20201029 12:44:29.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.928" endtime="20201029 12:44:29.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.952" endtime="20201029 12:44:29.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.955" endtime="20201029 12:44:29.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.925" endtime="20201029 12:44:29.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.923" endtime="20201029 12:44:29.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.964" endtime="20201029 12:44:30.251"></status>
</kw>
<msg timestamp="20201029 12:44:30.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023708278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023816486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.963" endtime="20201029 12:44:30.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023708278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023816486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.255" endtime="20201029 12:44:30.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.264" endtime="20201029 12:44:30.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.960" endtime="20201029 12:44:30.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.958" endtime="20201029 12:44:30.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.270" level="INFO">${RESULT} = [{'diff': 0.000108208000000002}, {'diff': 0.00010856899999999933}, {'diff': 0.00010826400000000028}, {'diff': 0.00010855599999999924}, {'diff': 0.00010850000000000096}, {'diff': 0.00010844499999999868...</msg>
<status status="PASS" starttime="20201029 12:44:30.267" endtime="20201029 12:44:30.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.274" level="INFO">${ACCURACY} = {'diff': [0.000108208000000002, 0.00010856899999999933, 0.00010826400000000028, 0.00010855599999999924, 0.00010850000000000096, 0.00010844499999999868, 0.00010836100000000126, 0.00010851400000000053, ...</msg>
<status status="PASS" starttime="20201029 12:44:30.271" endtime="20201029 12:44:30.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.279" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.278" endtime="20201029 12:44:30.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.282" level="INFO">VALUE: [0.000108208000000002, 0.00010856899999999933, 0.00010826400000000028, 0.00010855599999999924, 0.00010850000000000096, 0.00010844499999999868, 0.00010836100000000126, 0.00010851400000000053, 0.00010829199999999942, 0.00010837499999999736, 0.00010816599999999982, 0.000107902, 0.00010859700000000194, 0.0001077080000000015, 0.0001085280000000001, 0.00010773600000000064, 0.00010854199999999967, 0.000108208000000002, 0.00010859700000000194, 0.00010830600000000246, 0.00010844499999999868, 0.0001083890000000004, 0.00010863900000000065, 0.00010850000000000096, 0.00010829199999999942, 0.00010855499999999976, 0.00010830499999999951, 0.00010844399999999921, 0.00010816599999999982, 0.00010843000000000311, 0.00010854100000000019, 0.000108208000000002, 0.00010858300000000237, 0.00010850000000000096, 0.00010815299999999972, 0.00010861099999999804, 0.00010863900000000065, 0.00010758400000000085, 0.00010845800000000225, 0.00010838899999999693, 0.00010856899999999933, 0.00010856899999999933, 0.00010772200000000107, 0.00010829099999999994, 0.00010854100000000019, 0.00010831899999999908, 0.00010827799999999985, 0.0001082219999999981, 0.00010849999999999749, 0.00010863899999999718]</msg>
<status status="PASS" starttime="20201029 12:44:30.280" endtime="20201029 12:44:30.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.275" endtime="20201029 12:44:30.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.288" endtime="20201029 12:44:30.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.286" endtime="20201029 12:44:30.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.285" endtime="20201029 12:44:30.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.922" endtime="20201029 12:44:30.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.921" endtime="20201029 12:44:30.309"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.318" endtime="20201029 12:44:30.337"></status>
</kw>
<msg timestamp="20201029 12:44:30.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.316" endtime="20201029 12:44:30.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.339" endtime="20201029 12:44:30.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.341" endtime="20201029 12:44:30.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.313" endtime="20201029 12:44:30.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.311" endtime="20201029 12:44:30.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.351" endtime="20201029 12:44:30.637"></status>
</kw>
<msg timestamp="20201029 12:44:30.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.349" endtime="20201029 12:44:30.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.641" endtime="20201029 12:44:30.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.650" endtime="20201029 12:44:30.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.346" endtime="20201029 12:44:30.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.344" endtime="20201029 12:44:30.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.656" level="INFO">${RESULT} = [{'diff': 0.00010880599999999949}, {'diff': 0.00010865299999999675}, {'diff': 0.000109208999999999}, {'diff': 0.00010869499999999893}, {'diff': 0.00010919499999999943}, {'diff': 0.00010923600000000214...</msg>
<status status="PASS" starttime="20201029 12:44:30.653" endtime="20201029 12:44:30.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.662" level="INFO">${ACCURACY} = {'diff': [0.00010880599999999949, 0.00010865299999999675, 0.000109208999999999, 0.00010869499999999893, 0.00010919499999999943, 0.00010923600000000214, 0.00010865200000000075, 0.00010890300000000047, ...</msg>
<status status="PASS" starttime="20201029 12:44:30.657" endtime="20201029 12:44:30.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.666" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.665" endtime="20201029 12:44:30.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.669" level="INFO">VALUE: [0.00010880599999999949, 0.00010865299999999675, 0.000109208999999999, 0.00010869499999999893, 0.00010919499999999943, 0.00010923600000000214, 0.00010865200000000075, 0.00010890300000000047, 0.00010890300000000047, 0.00010927800000000085, 0.00010958300000000337, 0.00010929099999999747, 0.00010947199999999935, 0.00010863900000000065, 0.0001092219999999991, 0.0001095280000000011, 0.00010927799999999738, 0.00010945799999999978, 0.00010961099999999904, 0.00010941700000000054, 0.00010934700000000269, 0.00010954200000000067, 0.00010919499999999943, 0.00010947299999999882, 0.00010938800000000193, 0.0001092219999999991, 0.00010891600000000057, 0.00010933299999999965, 0.00010956900000000033, 0.00010926400000000128, 0.00010948600000000239, 0.00010920799999999953, 0.00010948599999999892, 0.00010944499999999968, 0.00010919499999999943, 0.0001095699999999998, 0.00010890300000000047, 0.0001093340000000026, 0.00010923599999999867, 0.00010868099999999936, 0.00010918000000000039, 0.00010863800000000118, 0.00010925000000000171, 0.00010925000000000171, 0.00010961099999999904, 0.00010962499999999861, 0.00010937500000000183, 0.00010961100000000251, 0.00010955600000000024, 0.0001094029999999975]</msg>
<status status="PASS" starttime="20201029 12:44:30.667" endtime="20201029 12:44:30.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.662" endtime="20201029 12:44:30.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.674" endtime="20201029 12:44:30.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.672" endtime="20201029 12:44:30.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.671" endtime="20201029 12:44:30.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.310" endtime="20201029 12:44:30.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.309" endtime="20201029 12:44:30.695"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.704" endtime="20201029 12:44:30.724"></status>
</kw>
<msg timestamp="20201029 12:44:30.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.702" endtime="20201029 12:44:30.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.726" endtime="20201029 12:44:30.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.728" endtime="20201029 12:44:30.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.700" endtime="20201029 12:44:30.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.697" endtime="20201029 12:44:30.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.738" endtime="20201029 12:44:31.025"></status>
</kw>
<msg timestamp="20201029 12:44:31.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.736" endtime="20201029 12:44:31.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.030" endtime="20201029 12:44:31.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.038" endtime="20201029 12:44:31.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.734" endtime="20201029 12:44:31.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.732" endtime="20201029 12:44:31.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.045" level="INFO">${RESULT} = [{'diff': 0.00010974999999999874}, {'diff': 0.00011040300000000197}, {'diff': 0.00011033400000000013}, {'diff': 0.00011027800000000185}, {'diff': 0.00011031899999999761}, {'diff': 0.000109736999999998...</msg>
<status status="PASS" starttime="20201029 12:44:31.041" endtime="20201029 12:44:31.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.049" level="INFO">${ACCURACY} = {'diff': [0.00010974999999999874, 0.00011040300000000197, 0.00011033400000000013, 0.00011027800000000185, 0.00011031899999999761, 0.00010973699999999864, 0.00011031899999999761, 0.00011052799999999863...</msg>
<status status="PASS" starttime="20201029 12:44:31.046" endtime="20201029 12:44:31.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.054" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.053" endtime="20201029 12:44:31.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.056" level="INFO">VALUE: [0.00010974999999999874, 0.00011040300000000197, 0.00011033400000000013, 0.00011027800000000185, 0.00011031899999999761, 0.00010973699999999864, 0.00011031899999999761, 0.00011052799999999863, 0.00011030499999999804, 0.00011027700000000237, 0.00011020800000000053, 0.00011047200000000035, 0.00011023599999999967, 0.00010973599999999917, 0.0001105830000000009, 0.00011031900000000108, 0.00011054200000000167, 0.00011029199999999795, 0.00010963900000000165, 0.0001097219999999996, 0.00010970800000000003, 0.00011015300000000172, 0.00011042999999999817, 0.00011037499999999936, 0.0001102769999999989, 0.00011029100000000194, 0.00011033300000000065, 0.00010973700000000211, 0.00011047299999999982, 0.00010963899999999818, 0.00011020800000000053, 0.00011030599999999752, 0.00011027799999999838, 0.00011041699999999807, 0.00011037499999999936, 0.00011041600000000207, 0.00011047299999999982, 0.00010966600000000132, 0.00011031899999999761, 0.0001104020000000025, 0.00011044500000000068, 0.00011066700000000179, 0.00011062499999999961, 0.00011054200000000167, 0.00011036099999999979, 0.00011040300000000197, 0.00011019500000000043, 0.00011018100000000086, 0.00011037499999999936, 0.00010974999999999874]</msg>
<status status="PASS" starttime="20201029 12:44:31.055" endtime="20201029 12:44:31.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.050" endtime="20201029 12:44:31.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.061" endtime="20201029 12:44:31.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.060" endtime="20201029 12:44:31.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.058" endtime="20201029 12:44:31.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.696" endtime="20201029 12:44:31.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.695" endtime="20201029 12:44:31.082"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.091" endtime="20201029 12:44:31.114"></status>
</kw>
<msg timestamp="20201029 12:44:31.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.090" endtime="20201029 12:44:31.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.116" endtime="20201029 12:44:31.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.119" endtime="20201029 12:44:31.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.087" endtime="20201029 12:44:31.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.085" endtime="20201029 12:44:31.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.128" endtime="20201029 12:44:31.414"></status>
</kw>
<msg timestamp="20201029 12:44:31.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025916278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026027111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.126" endtime="20201029 12:44:31.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025916278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026027111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.418" endtime="20201029 12:44:31.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.426" endtime="20201029 12:44:31.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.124" endtime="20201029 12:44:31.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.122" endtime="20201029 12:44:31.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.433" level="INFO">${RESULT} = [{'diff': 0.00011083299999999768}, {'diff': 0.00011126399999999981}, {'diff': 0.00011119400000000196}, {'diff': 0.00011136100000000079}, {'diff': 0.000111596999999998}, {'diff': 0.00011143100000000211...</msg>
<status status="PASS" starttime="20201029 12:44:31.430" endtime="20201029 12:44:31.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.437" level="INFO">${ACCURACY} = {'diff': [0.00011083299999999768, 0.00011126399999999981, 0.00011119400000000196, 0.00011136100000000079, 0.000111596999999998, 0.00011143100000000211, 0.00011127800000000285, 0.00011076399999999931, ...</msg>
<status status="PASS" starttime="20201029 12:44:31.434" endtime="20201029 12:44:31.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.442" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.441" endtime="20201029 12:44:31.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.444" level="INFO">VALUE: [0.00011083299999999768, 0.00011126399999999981, 0.00011119400000000196, 0.00011136100000000079, 0.000111596999999998, 0.00011143100000000211, 0.00011127800000000285, 0.00011076399999999931, 0.00011159700000000147, 0.00011122300000000057, 0.00011131900000000208, 0.00011074999999999974, 0.00011117999999999892, 0.00011065299999999875, 0.00011119399999999849, 0.00011155599999999877, 0.00011136100000000079, 0.00011127799999999938, 0.0001112220000000011, 0.00011163900000000018, 0.00011130599999999852, 0.00011147200000000135, 0.00011132000000000156, 0.00011073600000000017, 0.0001107090000000005, 0.00011137500000000036, 0.00011133300000000165, 0.00011073600000000017, 0.00011066699999999832, 0.00011069400000000146, 0.00011129200000000242, 0.00011117999999999892, 0.00011118099999999839, 0.00011159700000000147, 0.00011126399999999981, 0.00011130599999999852, 0.00011156999999999834, 0.00011144499999999821, 0.00011132000000000156, 0.00011065299999999875, 0.00011147200000000135, 0.00011070800000000103, 0.00011151400000000006, 0.0001107220000000006, 0.00011137499999999689, 0.00011074999999999974, 0.00011144400000000221, 0.00011127799999999938, 0.00011133299999999818, 0.00011129099999999947]</msg>
<status status="PASS" starttime="20201029 12:44:31.443" endtime="20201029 12:44:31.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.438" endtime="20201029 12:44:31.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.450" endtime="20201029 12:44:31.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.449" endtime="20201029 12:44:31.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.448" endtime="20201029 12:44:31.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.083" endtime="20201029 12:44:31.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.082" endtime="20201029 12:44:31.471"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.480" endtime="20201029 12:44:31.501"></status>
</kw>
<msg timestamp="20201029 12:44:31.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.479" endtime="20201029 12:44:31.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.502" endtime="20201029 12:44:31.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.505" endtime="20201029 12:44:31.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.476" endtime="20201029 12:44:31.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.474" endtime="20201029 12:44:31.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.514" endtime="20201029 12:44:31.800"></status>
</kw>
<msg timestamp="20201029 12:44:31.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.513" endtime="20201029 12:44:31.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.805" endtime="20201029 12:44:31.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.813" endtime="20201029 12:44:31.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.510" endtime="20201029 12:44:31.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.508" endtime="20201029 12:44:31.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.820" level="INFO">${RESULT} = [{'diff': 0.00011195799999999881}, {'diff': 0.00011173600000000117}, {'diff': 0.0001125550000000003}, {'diff': 0.00011234699999999875}, {'diff': 0.0001125550000000003}, {'diff': 0.000112596999999999},...</msg>
<status status="PASS" starttime="20201029 12:44:31.817" endtime="20201029 12:44:31.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.825" level="INFO">${ACCURACY} = {'diff': [0.00011195799999999881, 0.00011173600000000117, 0.0001125550000000003, 0.00011234699999999875, 0.0001125550000000003, 0.000112596999999999, 0.00011263900000000118, 0.00011168099999999889, 0....</msg>
<status status="PASS" starttime="20201029 12:44:31.821" endtime="20201029 12:44:31.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.830" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.828" endtime="20201029 12:44:31.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.832" level="INFO">VALUE: [0.00011195799999999881, 0.00011173600000000117, 0.0001125550000000003, 0.00011234699999999875, 0.0001125550000000003, 0.000112596999999999, 0.00011263900000000118, 0.00011168099999999889, 0.00011168099999999889, 0.00011165299999999975, 0.0001125700000000028, 0.0001123749999999979, 0.00011241700000000007, 0.00011170799999999856, 0.00011243099999999964, 0.0001125420000000002, 0.00011234699999999875, 0.00011219399999999949, 0.00011233299999999918, 0.00011248600000000192, 0.00011250000000000149, 0.00011234799999999823, 0.00011237500000000136, 0.00011258400000000238, 0.00011215300000000025, 0.0001124030000000005, 0.000112596999999999, 0.00011169500000000193, 0.00011262500000000161, 0.00011230599999999952, 0.00011249999999999802, 0.00011219399999999949, 0.00011231899999999961, 0.00011229199999999995, 0.00011172199999999813, 0.00011238900000000093, 0.0001124030000000005, 0.00011226400000000081, 0.00011262499999999814, 0.00011231999999999909, 0.00011258399999999891, 0.00011166699999999932, 0.00011250000000000149, 0.00011226400000000081, 0.00011216699999999982, 0.00011249999999999802, 0.00011222199999999863, 0.000112596999999999, 0.00011188900000000043, 0.0001117220000000016]</msg>
<status status="PASS" starttime="20201029 12:44:31.831" endtime="20201029 12:44:31.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.826" endtime="20201029 12:44:31.833"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.837" endtime="20201029 12:44:31.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.836" endtime="20201029 12:44:31.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.834" endtime="20201029 12:44:31.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.472" endtime="20201029 12:44:31.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.472" endtime="20201029 12:44:31.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.126" endtime="20201029 12:44:31.858"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:53.038" endtime="20201029 12:44:31.859" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:43:12.893" endtime="20201029 12:44:31.862"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.916" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:44:31.924" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:44:33.085" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:44:31.915" endtime="20201029 12:44:33.086"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.089" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:44:33.087" endtime="20201029 12:44:33.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.913" endtime="20201029 12:44:33.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.091" endtime="20201029 12:44:33.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.090" endtime="20201029 12:44:33.279"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.291" endtime="20201029 12:44:33.306"></status>
</kw>
<msg timestamp="20201029 12:44:33.307" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.290" endtime="20201029 12:44:33.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.309" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.308" endtime="20201029 12:44:33.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.312" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:33.310" endtime="20201029 12:44:33.313"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:33.287" endtime="20201029 12:44:33.313"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:33.285" endtime="20201029 12:44:33.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.284" endtime="20201029 12:44:33.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:33.318" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:33.318" endtime="20201029 12:44:33.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.315" endtime="20201029 12:44:33.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.283" endtime="20201029 12:44:33.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.282" endtime="20201029 12:44:33.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.320" endtime="20201029 12:44:33.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.281" endtime="20201029 12:44:33.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.323" endtime="20201029 12:44:33.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.279" endtime="20201029 12:44:33.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.912" endtime="20201029 12:44:33.325"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.332" endtime="20201029 12:44:33.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.330" endtime="20201029 12:44:33.352"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.365" endtime="20201029 12:44:33.378"></status>
</kw>
<msg timestamp="20201029 12:44:33.379" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.363" endtime="20201029 12:44:33.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.382" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.380" endtime="20201029 12:44:33.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.386" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:33.383" endtime="20201029 12:44:33.386"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:33.361" endtime="20201029 12:44:33.387"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:33.358" endtime="20201029 12:44:33.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.357" endtime="20201029 12:44:33.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:33.391" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:33.391" endtime="20201029 12:44:33.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.389" endtime="20201029 12:44:33.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.356" endtime="20201029 12:44:33.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.355" endtime="20201029 12:44:33.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.393" endtime="20201029 12:44:33.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.354" endtime="20201029 12:44:33.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.352" endtime="20201029 12:44:33.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.329" endtime="20201029 12:44:33.396"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.405" endtime="20201029 12:44:39.527"></status>
</kw>
<msg timestamp="20201029 12:44:39.528" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.403" endtime="20201029 12:44:39.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.534" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.531" endtime="20201029 12:44:39.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.536" endtime="20201029 12:44:39.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.400" endtime="20201029 12:44:39.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.398" endtime="20201029 12:44:39.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:39.547" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201029 12:44:39.544" endtime="20201029 12:44:39.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.557" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:39.555" endtime="20201029 12:44:39.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.562" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:44:39.560" endtime="20201029 12:44:39.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.549" endtime="20201029 12:44:39.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.573" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:39.570" endtime="20201029 12:44:39.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.577" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:44:39.575" endtime="20201029 12:44:39.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.565" endtime="20201029 12:44:39.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.588" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:44:39.585" endtime="20201029 12:44:39.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.592" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:44:39.590" endtime="20201029 12:44:39.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.580" endtime="20201029 12:44:39.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.608" endtime="20201029 12:44:39.920"></status>
</kw>
<msg timestamp="20201029 12:44:39.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063212056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163233111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.605" endtime="20201029 12:44:39.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063212056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163233111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.924" endtime="20201029 12:44:39.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.933" endtime="20201029 12:44:39.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.599" endtime="20201029 12:44:39.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.595" endtime="20201029 12:44:39.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:44:39.940" level="INFO">${FILTERED} = [{'diff': 0.10002105499999998}, {'diff': 0.10000427799999997}, {'diff': 0.10000690299999998}, {'diff': 0.10000775}, {'diff': 0.10000670900000003}, {'diff': 0.10000684699999995}, {'diff': 0.10000672200...</msg>
<status status="PASS" starttime="20201029 12:44:39.936" endtime="20201029 12:44:39.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:39.944" level="INFO">${RESULT} = {'diff': [0.10002105499999998, 0.10000427799999997, 0.10000690299999998, 0.10000775, 0.10000670900000003, 0.10000684699999995, 0.10000672200000005, 0.10000676399999997, 0.10000680499999992, 0.10000676...</msg>
<status status="PASS" starttime="20201029 12:44:39.941" endtime="20201029 12:44:39.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.948" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:44:39.947" endtime="20201029 12:44:39.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.951" level="INFO">VALUE: [0.10002105499999998, 0.10000427799999997, 0.10000690299999998, 0.10000775, 0.10000670900000003, 0.10000684699999995, 0.10000672200000005, 0.10000676399999997, 0.10000680499999992, 0.10000676399999997, 0.10000676300000011, 0.10000673599999987, 0.10000672199999983, 0.10000684800000004, 0.10000672199999983, 0.100006861, 0.10000672299999991, 0.10000682000000016, 0.10000668099999999, 0.10000676399999997, 0.10000680500000003, 0.10000684699999995, 0.10000680600000011, 0.10000681999999994, 0.10000669500000026, 0.10000677800000002, 0.10000672199999983, 0.10000684799999959, 0.10000673599999965, 0.10000676400000019, 0.10000681999999994, 0.10000683400000021, 5.409999999095305e-07, 4.73000000056345e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999995481817e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:44:39.949" endtime="20201029 12:44:39.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.945" endtime="20201029 12:44:39.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.397" endtime="20201029 12:44:39.959"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:33.326" endtime="20201029 12:44:39.960" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:39.966" endtime="20201029 12:44:39.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.965" endtime="20201029 12:44:39.986"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.001" endtime="20201029 12:44:40.015"></status>
</kw>
<msg timestamp="20201029 12:44:40.015" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.999" endtime="20201029 12:44:40.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.018" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.016" endtime="20201029 12:44:40.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.021" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:40.019" endtime="20201029 12:44:40.021"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:39.997" endtime="20201029 12:44:40.022"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:39.994" endtime="20201029 12:44:40.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.992" endtime="20201029 12:44:40.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:40.027" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:40.026" endtime="20201029 12:44:40.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.024" endtime="20201029 12:44:40.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.991" endtime="20201029 12:44:40.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.990" endtime="20201029 12:44:40.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.029" endtime="20201029 12:44:40.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.989" endtime="20201029 12:44:40.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.987" endtime="20201029 12:44:40.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.964" endtime="20201029 12:44:40.032"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.040" endtime="20201029 12:44:46.163"></status>
</kw>
<msg timestamp="20201029 12:44:46.164" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.038" endtime="20201029 12:44:46.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.169" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.166" endtime="20201029 12:44:46.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.172" endtime="20201029 12:44:46.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.036" endtime="20201029 12:44:46.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.034" endtime="20201029 12:44:46.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:46.183" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201029 12:44:46.179" endtime="20201029 12:44:46.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.198" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:46.196" endtime="20201029 12:44:46.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.203" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:44:46.201" endtime="20201029 12:44:46.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.191" endtime="20201029 12:44:46.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.215" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:46.211" endtime="20201029 12:44:46.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.220" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:44:46.218" endtime="20201029 12:44:46.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.206" endtime="20201029 12:44:46.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.231" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:44:46.228" endtime="20201029 12:44:46.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.235" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:44:46.233" endtime="20201029 12:44:46.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.223" endtime="20201029 12:44:46.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.251" endtime="20201029 12:44:46.552"></status>
</kw>
<msg timestamp="20201029 12:44:46.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063770389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163825361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.248" endtime="20201029 12:44:46.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063770389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163825361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.556" endtime="20201029 12:44:46.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.564" endtime="20201029 12:44:46.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.242" endtime="20201029 12:44:46.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.239" endtime="20201029 12:44:46.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:44:46.571" level="INFO">${FILTERED} = [{'diff': 0.100054972}, {'diff': 0.09997320899999998}, {'diff': 0.10000504199999999}, {'diff': 0.100007819}, {'diff': 0.10000677800000002}, {'diff': 0.10000683300000002}, {'diff': 0.10000677800000002}...</msg>
<status status="PASS" starttime="20201029 12:44:46.568" endtime="20201029 12:44:46.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:46.575" level="INFO">${RESULT} = {'diff': [0.100054972, 0.09997320899999998, 0.10000504199999999, 0.100007819, 0.10000677800000002, 0.10000683300000002, 0.10000677800000002, 0.10000679200000007, 0.10000673599999998, 0.100006764000000...</msg>
<status status="PASS" starttime="20201029 12:44:46.572" endtime="20201029 12:44:46.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.580" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:44:46.579" endtime="20201029 12:44:46.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.583" level="INFO">VALUE: [0.100054972, 0.09997320899999998, 0.10000504199999999, 0.100007819, 0.10000677800000002, 0.10000683300000002, 0.10000677800000002, 0.10000679200000007, 0.10000673599999998, 0.10000676400000008, 0.10000676399999997, 0.10000681999999994, 0.100006861, 0.10000676300000011, 0.10000676399999997, 0.10000681999999994, 0.100006861, 0.10000675000000014, 0.100006861, 0.10000675000000014, 0.10000677800000002, 0.10000690300000015, 5.419999999922709e-07, 5.409999999095305e-07, 5.410000003536197e-07, 5.409999999095305e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.73000000056345e-07, 0.10000723600000017, 0.10000677800000002, 0.10000686099999978, 0.10000676299999967, 0.10000681999999994, 5.419999995481817e-07, 5.420000004363601e-07, 4.73000000056345e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:44:46.582" endtime="20201029 12:44:46.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.576" endtime="20201029 12:44:46.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.032" endtime="20201029 12:44:46.585"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:39.961" endtime="20201029 12:44:46.586" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:46.593" endtime="20201029 12:44:46.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.591" endtime="20201029 12:44:46.613"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.627" endtime="20201029 12:44:46.641"></status>
</kw>
<msg timestamp="20201029 12:44:46.641" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.625" endtime="20201029 12:44:46.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.644" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.642" endtime="20201029 12:44:46.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.647" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:46.645" endtime="20201029 12:44:46.647"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:46.622" endtime="20201029 12:44:46.648"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:46.620" endtime="20201029 12:44:46.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.619" endtime="20201029 12:44:46.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:46.653" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:46.652" endtime="20201029 12:44:46.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.650" endtime="20201029 12:44:46.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.618" endtime="20201029 12:44:46.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.617" endtime="20201029 12:44:46.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.655" endtime="20201029 12:44:46.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.616" endtime="20201029 12:44:46.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.614" endtime="20201029 12:44:46.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.590" endtime="20201029 12:44:46.657"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.667" endtime="20201029 12:44:52.791"></status>
</kw>
<msg timestamp="20201029 12:44:52.792" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.664" endtime="20201029 12:44:52.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.798" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.794" endtime="20201029 12:44:52.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.800" endtime="20201029 12:44:52.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.662" endtime="20201029 12:44:52.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.660" endtime="20201029 12:44:52.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:52.812" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201029 12:44:52.808" endtime="20201029 12:44:52.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.821" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:52.819" endtime="20201029 12:44:52.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.826" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:44:52.824" endtime="20201029 12:44:52.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.814" endtime="20201029 12:44:52.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.836" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:52.834" endtime="20201029 12:44:52.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.841" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:44:52.839" endtime="20201029 12:44:52.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.829" endtime="20201029 12:44:52.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.850" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:44:52.849" endtime="20201029 12:44:52.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.852" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:44:52.851" endtime="20201029 12:44:52.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.844" endtime="20201029 12:44:52.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.859" endtime="20201029 12:44:53.156"></status>
</kw>
<msg timestamp="20201029 12:44:53.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064503431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164589986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.858" endtime="20201029 12:44:53.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064503431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164589986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.161" endtime="20201029 12:44:53.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.169" endtime="20201029 12:44:53.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.855" endtime="20201029 12:44:53.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.853" endtime="20201029 12:44:53.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:44:53.176" level="INFO">${FILTERED} = [{'diff': 0.100086555}, {'diff': 0.10003087499999996}, {'diff': 0.09991915299999998}, {'diff': 0.10000688900000004}, {'diff': 0.10000677800000007}, {'diff': 0.100006708}, {'diff': 0.10000677799999991}...</msg>
<status status="PASS" starttime="20201029 12:44:53.172" endtime="20201029 12:44:53.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:53.183" level="INFO">${RESULT} = {'diff': [0.100086555, 0.10003087499999996, 0.09991915299999998, 0.10000688900000004, 0.10000677800000007, 0.100006708, 0.10000677799999991, 0.10000675000000003, 0.10000675000000003, 0.100006693999999...</msg>
<status status="PASS" starttime="20201029 12:44:53.177" endtime="20201029 12:44:53.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.188" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:44:53.186" endtime="20201029 12:44:53.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.190" level="INFO">VALUE: [0.100086555, 0.10003087499999996, 0.09991915299999998, 0.10000688900000004, 0.10000677800000007, 0.100006708, 0.10000677799999991, 0.10000675000000003, 0.10000675000000003, 0.10000669399999995, 0.10000684800000004, 0.10000681900000008, 0.10000677800000002, 0.10000675000000014, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.410000001315751e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.73000000056345e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.73000000056345e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201029 12:44:53.189" endtime="20201029 12:44:53.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.184" endtime="20201029 12:44:53.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.658" endtime="20201029 12:44:53.192"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:46.587" endtime="20201029 12:44:53.192" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:53.199" endtime="20201029 12:44:53.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.198" endtime="20201029 12:44:53.219"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.233" endtime="20201029 12:44:53.247"></status>
</kw>
<msg timestamp="20201029 12:44:53.247" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.231" endtime="20201029 12:44:53.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.250" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.248" endtime="20201029 12:44:53.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.253" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:53.251" endtime="20201029 12:44:53.253"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:53.228" endtime="20201029 12:44:53.254"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:53.226" endtime="20201029 12:44:53.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.225" endtime="20201029 12:44:53.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:53.260" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:53.259" endtime="20201029 12:44:53.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.256" endtime="20201029 12:44:53.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.224" endtime="20201029 12:44:53.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.223" endtime="20201029 12:44:53.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.262" endtime="20201029 12:44:53.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.222" endtime="20201029 12:44:53.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.220" endtime="20201029 12:44:53.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.196" endtime="20201029 12:44:53.264"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.273" endtime="20201029 12:44:59.396"></status>
</kw>
<msg timestamp="20201029 12:44:59.397" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.271" endtime="20201029 12:44:59.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.402" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.399" endtime="20201029 12:44:59.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.405" endtime="20201029 12:44:59.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.268" endtime="20201029 12:44:59.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.266" endtime="20201029 12:44:59.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:59.417" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201029 12:44:59.412" endtime="20201029 12:44:59.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.426" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:59.424" endtime="20201029 12:44:59.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.430" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:44:59.428" endtime="20201029 12:44:59.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.419" endtime="20201029 12:44:59.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.441" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:59.439" endtime="20201029 12:44:59.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.445" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:44:59.443" endtime="20201029 12:44:59.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.434" endtime="20201029 12:44:59.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.455" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:44:59.454" endtime="20201029 12:44:59.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.457" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:44:59.456" endtime="20201029 12:44:59.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.449" endtime="20201029 12:44:59.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.465" endtime="20201029 12:44:59.763"></status>
</kw>
<msg timestamp="20201029 12:44:59.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063997653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164139778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.463" endtime="20201029 12:44:59.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063997653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164139778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.767" endtime="20201029 12:44:59.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.775" endtime="20201029 12:44:59.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.461" endtime="20201029 12:44:59.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.459" endtime="20201029 12:44:59.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:44:59.782" level="INFO">${FILTERED} = [{'diff': 0.10014212499999998}, {'diff': 0.10003545800000002}, {'diff': 0.09986066700000001}, {'diff': 0.10000586100000003}, {'diff': 0.10000673600000004}, {'diff': 0.100006806}, {'diff': 0.1000068469...</msg>
<status status="PASS" starttime="20201029 12:44:59.779" endtime="20201029 12:44:59.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:59.786" level="INFO">${RESULT} = {'diff': [0.10014212499999998, 0.10003545800000002, 0.09986066700000001, 0.10000586100000003, 0.10000673600000004, 0.100006806, 0.10000684699999995, 0.10000672199999994, 0.10000680499999992, 0.1000068...</msg>
<status status="PASS" starttime="20201029 12:44:59.783" endtime="20201029 12:44:59.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.790" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:44:59.789" endtime="20201029 12:44:59.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.793" level="INFO">VALUE: [0.10014212499999998, 0.10003545800000002, 0.09986066700000001, 0.10000586100000003, 0.10000673600000004, 0.100006806, 0.10000684699999995, 0.10000672199999994, 0.10000680499999992, 0.10000684799999993, 0.10000680500000003, 0.10000684699999995, 0.10000680600000011, 0.100006861, 0.10000672200000005, 0.100006861, 0.10000672199999983, 0.100006861, 0.10000673599999987, 0.10000684800000004, 0.10000680500000003, 0.10000686099999978, 0.10000674999999992, 0.10000677800000002, 0.10000673700000018, 0.10000677800000002, 0.1000067360000001, 0.10000684699999995, 0.10000683399999977, 0.10000676399999975, 0.10000680500000003, 0.10000686099999978, 0.10000675000000037, 0.10000677800000002, 0.10000681899999986, 0.10000677800000002, 0.10000683300000013, 0.10000679199999984, 0.10000672200000027, 0.10000684699999995, 0.10000681999999994, 0.1000068470000004, 0.10000681999999994, 0.10000684699999951, 0.10000681999999994, 0.10000687500000005, 0.10000672199999983, 0.10000686099999978, 0.10000680499999959, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:44:59.791" endtime="20201029 12:44:59.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.787" endtime="20201029 12:44:59.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.265" endtime="20201029 12:44:59.795"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:53.194" endtime="20201029 12:44:59.795" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:59.802" endtime="20201029 12:44:59.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.800" endtime="20201029 12:44:59.822"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.836" endtime="20201029 12:44:59.850"></status>
</kw>
<msg timestamp="20201029 12:44:59.850" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.834" endtime="20201029 12:44:59.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.853" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.851" endtime="20201029 12:44:59.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.856" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:59.854" endtime="20201029 12:44:59.856"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:59.832" endtime="20201029 12:44:59.857"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:59.828" endtime="20201029 12:44:59.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.827" endtime="20201029 12:44:59.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:59.862" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:59.861" endtime="20201029 12:44:59.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.859" endtime="20201029 12:44:59.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.826" endtime="20201029 12:44:59.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.826" endtime="20201029 12:44:59.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.863" endtime="20201029 12:44:59.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.824" endtime="20201029 12:44:59.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.822" endtime="20201029 12:44:59.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.799" endtime="20201029 12:44:59.866"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.875" endtime="20201029 12:45:05.997"></status>
</kw>
<msg timestamp="20201029 12:45:05.998" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.873" endtime="20201029 12:45:05.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.004" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.001" endtime="20201029 12:45:06.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.007" endtime="20201029 12:45:06.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.870" endtime="20201029 12:45:06.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.868" endtime="20201029 12:45:06.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:06.019" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201029 12:45:06.014" endtime="20201029 12:45:06.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.028" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:06.025" endtime="20201029 12:45:06.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.032" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:06.030" endtime="20201029 12:45:06.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.020" endtime="20201029 12:45:06.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.042" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:06.040" endtime="20201029 12:45:06.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.047" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:06.045" endtime="20201029 12:45:06.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.035" endtime="20201029 12:45:06.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.057" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:06.055" endtime="20201029 12:45:06.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.062" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:45:06.060" endtime="20201029 12:45:06.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.050" endtime="20201029 12:45:06.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.081" endtime="20201029 12:45:06.385"></status>
</kw>
<msg timestamp="20201029 12:45:06.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063257722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163466486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:06.077" endtime="20201029 12:45:06.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063257722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163466486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:06.389" endtime="20201029 12:45:06.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.397" endtime="20201029 12:45:06.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.072" endtime="20201029 12:45:06.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.065" endtime="20201029 12:45:06.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:06.403" level="INFO">${FILTERED} = [{'diff': 0.10020876399999999}, {'diff': 0.10004133399999998}, {'diff': 0.09979059699999998}, {'diff': 0.10000595899999998}, {'diff': 0.10000681900000002}, {'diff': 0.10000676399999997}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 12:45:06.400" endtime="20201029 12:45:06.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:06.407" level="INFO">${RESULT} = {'diff': [0.10020876399999999, 0.10004133399999998, 0.09979059699999998, 0.10000595899999998, 0.10000681900000002, 0.10000676399999997, 0.10000669399999995, 0.10000684699999995, 0.10000679099999998, 0...</msg>
<status status="PASS" starttime="20201029 12:45:06.404" endtime="20201029 12:45:06.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.411" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:06.410" endtime="20201029 12:45:06.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.414" level="INFO">VALUE: [0.10020876399999999, 0.10004133399999998, 0.09979059699999998, 0.10000595899999998, 0.10000681900000002, 0.10000676399999997, 0.10000669399999995, 0.10000684699999995, 0.10000679099999998, 0.10000677800000002, 0.10000676399999997, 4.73000000056345e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 5.419999999922709e-07, 4.73000000056345e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.7200000041769385e-07, 4.7200000041769385e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.409999999095305e-07, 5.419999995481817e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.410000003536197e-07, 0.10000726399999937, 0.10000669400000017, 0.10000686199999986, 0.10000677800000002, 0.10000686099999978, 0.10000677800000002]</msg>
<status status="PASS" starttime="20201029 12:45:06.412" endtime="20201029 12:45:06.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.408" endtime="20201029 12:45:06.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.867" endtime="20201029 12:45:06.416"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:59.797" endtime="20201029 12:45:06.416" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:06.423" endtime="20201029 12:45:06.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.421" endtime="20201029 12:45:06.443"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.456" endtime="20201029 12:45:06.469"></status>
</kw>
<msg timestamp="20201029 12:45:06.469" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.454" endtime="20201029 12:45:06.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.472" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.470" endtime="20201029 12:45:06.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.475" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:06.473" endtime="20201029 12:45:06.475"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:06.452" endtime="20201029 12:45:06.476"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:06.450" endtime="20201029 12:45:06.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.448" endtime="20201029 12:45:06.476"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:06.480" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:06.479" endtime="20201029 12:45:06.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.477" endtime="20201029 12:45:06.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.447" endtime="20201029 12:45:06.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.447" endtime="20201029 12:45:06.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.482" endtime="20201029 12:45:06.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.445" endtime="20201029 12:45:06.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.444" endtime="20201029 12:45:06.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.420" endtime="20201029 12:45:06.484"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.492" endtime="20201029 12:45:12.614"></status>
</kw>
<msg timestamp="20201029 12:45:12.615" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.491" endtime="20201029 12:45:12.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.621" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.618" endtime="20201029 12:45:12.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.623" endtime="20201029 12:45:12.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.488" endtime="20201029 12:45:12.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.486" endtime="20201029 12:45:12.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:12.634" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201029 12:45:12.630" endtime="20201029 12:45:12.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.645" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:12.641" endtime="20201029 12:45:12.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.649" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:12.647" endtime="20201029 12:45:12.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.636" endtime="20201029 12:45:12.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.659" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:12.657" endtime="20201029 12:45:12.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.663" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:12.661" endtime="20201029 12:45:12.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.652" endtime="20201029 12:45:12.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.673" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:12.671" endtime="20201029 12:45:12.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.677" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:45:12.675" endtime="20201029 12:45:12.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.666" endtime="20201029 12:45:12.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.687" endtime="20201029 12:45:12.983"></status>
</kw>
<msg timestamp="20201029 12:45:12.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.059559986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.159856431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:12.685" endtime="20201029 12:45:12.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.059559986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.159856431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:12.987" endtime="20201029 12:45:12.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.995" endtime="20201029 12:45:12.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.683" endtime="20201029 12:45:12.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.680" endtime="20201029 12:45:12.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:13.002" level="INFO">${FILTERED} = [{'diff': 0.10029644499999998}, {'diff': 0.10004227800000001}, {'diff': 0.09970469399999998}, {'diff': 0.10000598600000005}, {'diff': 0.10000693}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999...</msg>
<status status="PASS" starttime="20201029 12:45:12.998" endtime="20201029 12:45:13.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:13.006" level="INFO">${RESULT} = {'diff': [0.10029644499999998, 0.10004227800000001, 0.09970469399999998, 0.10000598600000005, 0.10000693, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5...</msg>
<status status="PASS" starttime="20201029 12:45:13.003" endtime="20201029 12:45:13.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.011" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:13.010" endtime="20201029 12:45:13.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.013" level="INFO">VALUE: [0.10029644499999998, 0.10004227800000001, 0.09970469399999998, 0.10000598600000005, 0.10000693, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.73000000056345e-07, 5.409999999095305e-07, 4.73000000056345e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.410000001315751e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.409999999095305e-07, 4.73000000056345e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000726300000018, 0.10000686099999978, 0.10000674999999992, 0.10000674999999992, 0.10000677800000002, 0.10000683300000013, 0.10000677800000002, 0.10000681899999986, 0.10000688899999988, 0.1000067360000001, 0.1000067910000002, 0.1000067360000001, 0.10000684699999951, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201029 12:45:13.012" endtime="20201029 12:45:13.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.007" endtime="20201029 12:45:13.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.485" endtime="20201029 12:45:13.015"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:06.418" endtime="20201029 12:45:13.015" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:44:31.871" endtime="20201029 12:45:13.022"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 12:42:29.650" endtime="20201029 12:45:13.054"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
