<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 18:14:30.380" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.961" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:30.970" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:32.159" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:30.960" endtime="20201029 18:14:32.160"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.162" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:14:32.161" endtime="20201029 18:14:32.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.959" endtime="20201029 18:14:32.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:32.165" endtime="20201029 18:14:32.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.164" endtime="20201029 18:14:32.408"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.421" endtime="20201029 18:14:32.435"></status>
</kw>
<msg timestamp="20201029 18:14:32.435" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.419" endtime="20201029 18:14:32.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.438" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.436" endtime="20201029 18:14:32.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.441" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:32.439" endtime="20201029 18:14:32.441"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:32.417" endtime="20201029 18:14:32.442"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:32.414" endtime="20201029 18:14:32.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.413" endtime="20201029 18:14:32.443"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:32.447" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:32.446" endtime="20201029 18:14:32.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.444" endtime="20201029 18:14:32.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.412" endtime="20201029 18:14:32.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.412" endtime="20201029 18:14:32.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.449" endtime="20201029 18:14:32.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.410" endtime="20201029 18:14:32.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.452" endtime="20201029 18:14:32.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.409" endtime="20201029 18:14:32.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.957" endtime="20201029 18:14:32.454"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:32.460" endtime="20201029 18:14:32.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.459" endtime="20201029 18:14:32.480"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.493" endtime="20201029 18:14:32.507"></status>
</kw>
<msg timestamp="20201029 18:14:32.508" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.492" endtime="20201029 18:14:32.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.509" endtime="20201029 18:14:32.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.514" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:32.511" endtime="20201029 18:14:32.515"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:32.489" endtime="20201029 18:14:32.516"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:32.487" endtime="20201029 18:14:32.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.485" endtime="20201029 18:14:32.518"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:32.523" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:32.522" endtime="20201029 18:14:32.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.519" endtime="20201029 18:14:32.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.484" endtime="20201029 18:14:32.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.484" endtime="20201029 18:14:32.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.526" endtime="20201029 18:14:32.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.482" endtime="20201029 18:14:32.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.481" endtime="20201029 18:14:32.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.457" endtime="20201029 18:14:32.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.543" endtime="20201029 18:14:32.554"></status>
</kw>
<msg timestamp="20201029 18:14:32.554" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.539" endtime="20201029 18:14:32.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.557" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.555" endtime="20201029 18:14:32.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.558" endtime="20201029 18:14:32.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.534" endtime="20201029 18:14:32.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.531" endtime="20201029 18:14:32.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.564" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:14:32.563" endtime="20201029 18:14:32.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.566" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 18:14:32.565" endtime="20201029 18:14:32.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.561" endtime="20201029 18:14:32.567"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:32.455" endtime="20201029 18:14:32.568" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:14:30.499" endtime="20201029 18:14:32.570"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.621" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:32.629" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:33.941" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:32.620" endtime="20201029 18:14:33.942"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.947" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:14:33.944" endtime="20201029 18:14:33.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.618" endtime="20201029 18:14:33.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:33.953" endtime="20201029 18:14:34.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.951" endtime="20201029 18:14:34.233"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.245" endtime="20201029 18:14:34.258"></status>
</kw>
<msg timestamp="20201029 18:14:34.259" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.244" endtime="20201029 18:14:34.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.262" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.260" endtime="20201029 18:14:34.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.265" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:34.263" endtime="20201029 18:14:34.265"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:34.241" endtime="20201029 18:14:34.266"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:34.239" endtime="20201029 18:14:34.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.238" endtime="20201029 18:14:34.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:34.270" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:34.269" endtime="20201029 18:14:34.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.267" endtime="20201029 18:14:34.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.237" endtime="20201029 18:14:34.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.236" endtime="20201029 18:14:34.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.272" endtime="20201029 18:14:34.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.235" endtime="20201029 18:14:34.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.274" endtime="20201029 18:14:34.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.234" endtime="20201029 18:14:34.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.617" endtime="20201029 18:14:34.277"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:34.283" endtime="20201029 18:14:34.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.281" endtime="20201029 18:14:34.304"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.323" endtime="20201029 18:14:34.336"></status>
</kw>
<msg timestamp="20201029 18:14:34.337" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.322" endtime="20201029 18:14:34.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.340" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.338" endtime="20201029 18:14:34.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.343" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:34.341" endtime="20201029 18:14:34.343"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:34.319" endtime="20201029 18:14:34.344"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:34.316" endtime="20201029 18:14:34.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.313" endtime="20201029 18:14:34.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:34.349" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:34.348" endtime="20201029 18:14:34.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.346" endtime="20201029 18:14:34.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.311" endtime="20201029 18:14:34.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.310" endtime="20201029 18:14:34.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.351" endtime="20201029 18:14:34.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.308" endtime="20201029 18:14:34.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.305" endtime="20201029 18:14:34.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.280" endtime="20201029 18:14:34.354"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.363" endtime="20201029 18:14:34.373"></status>
</kw>
<msg timestamp="20201029 18:14:34.374" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.361" endtime="20201029 18:14:34.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.376" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.375" endtime="20201029 18:14:34.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.377" endtime="20201029 18:14:34.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.359" endtime="20201029 18:14:34.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.357" endtime="20201029 18:14:34.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.386" endtime="20201029 18:14:34.661"></status>
</kw>
<msg timestamp="20201029 18:14:34.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070453792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070454333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:34.385" endtime="20201029 18:14:34.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070453792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070454333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:34.664" endtime="20201029 18:14:34.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.669" endtime="20201029 18:14:34.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.382" endtime="20201029 18:14:34.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.381" endtime="20201029 18:14:34.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:34.675" level="INFO">${RESULT} = [{'diff': 5.409999999927972e-07}, {'diff': 2.860999999992897e-06}, {'diff': 2.833999999993231e-06}, {'diff': 3.319000000001626e-06}, {'diff': 3.4309999999981855e-06}, {'diff': 3.2219999999971716e-06},...</msg>
<status status="PASS" starttime="20201029 18:14:34.673" endtime="20201029 18:14:34.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:34.679" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999927972e-07, 2.860999999992897e-06, 2.833999999993231e-06, 3.319000000001626e-06, 3.4309999999981855e-06, 3.2219999999971716e-06, 3.1389999999992257e-06, 2.916000000005581e-06, 2.9...</msg>
<status status="PASS" starttime="20201029 18:14:34.676" endtime="20201029 18:14:34.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.683" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:34.682" endtime="20201029 18:14:34.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.685" level="INFO">VALUE: [5.409999999927972e-07, 2.860999999992897e-06, 2.833999999993231e-06, 3.319000000001626e-06, 3.4309999999981855e-06, 3.2219999999971716e-06, 3.1389999999992257e-06, 2.916000000005581e-06, 2.9309999999976855e-06, 3.3890000000064147e-06, 2.973000000003334e-06, 3.347000000000766e-06, 2.8890000000059146e-06, 3.3329999999942572e-06, 2.55600000000078e-06, 3.1670000000122434e-06, 3.388999999992537e-06, 3.096999999993577e-06, 2.915999999991703e-06, 3.374999999999906e-06, 3.0270000000026664e-06, 2.750000000009689e-06, 3.416000000006081e-06, 2.6669999999978655e-06, 2.901999999999072e-06]</msg>
<status status="PASS" starttime="20201029 18:14:34.684" endtime="20201029 18:14:34.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.680" endtime="20201029 18:14:34.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.355" endtime="20201029 18:14:34.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.355" endtime="20201029 18:14:34.687"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.694" endtime="20201029 18:14:34.704"></status>
</kw>
<msg timestamp="20201029 18:14:34.704" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.693" endtime="20201029 18:14:34.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.707" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.705" endtime="20201029 18:14:34.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.708" endtime="20201029 18:14:34.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.690" endtime="20201029 18:14:34.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.689" endtime="20201029 18:14:34.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.718" endtime="20201029 18:14:35.013"></status>
</kw>
<msg timestamp="20201029 18:14:35.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070453792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070454333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:34.716" endtime="20201029 18:14:35.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070453792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070454333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:35.017" endtime="20201029 18:14:35.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.026" endtime="20201029 18:14:35.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.714" endtime="20201029 18:14:35.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.712" endtime="20201029 18:14:35.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:35.032" level="INFO">${RESULT} = [{'diff': 5.409999999927972e-07}, {'diff': 2.860999999992897e-06}, {'diff': 2.833999999993231e-06}, {'diff': 3.319000000001626e-06}, {'diff': 3.4309999999981855e-06}, {'diff': 3.2219999999971716e-06},...</msg>
<status status="PASS" starttime="20201029 18:14:35.029" endtime="20201029 18:14:35.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:35.036" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999927972e-07, 2.860999999992897e-06, 2.833999999993231e-06, 3.319000000001626e-06, 3.4309999999981855e-06, 3.2219999999971716e-06, 3.1389999999992257e-06, 2.916000000005581e-06, 2.9...</msg>
<status status="PASS" starttime="20201029 18:14:35.033" endtime="20201029 18:14:35.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.041" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:35.039" endtime="20201029 18:14:35.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.044" level="INFO">VALUE: [5.409999999927972e-07, 2.860999999992897e-06, 2.833999999993231e-06, 3.319000000001626e-06, 3.4309999999981855e-06, 3.2219999999971716e-06, 3.1389999999992257e-06, 2.916000000005581e-06, 2.9309999999976855e-06, 3.3890000000064147e-06, 2.973000000003334e-06, 3.347000000000766e-06, 2.8890000000059146e-06, 3.3329999999942572e-06, 2.55600000000078e-06, 3.1670000000122434e-06, 3.388999999992537e-06, 3.096999999993577e-06, 2.915999999991703e-06, 3.374999999999906e-06, 3.0270000000026664e-06, 2.750000000009689e-06, 3.416000000006081e-06, 2.6669999999978655e-06, 2.901999999999072e-06, 0.320235709, 3.16699999997061e-06, 3.042000000008649e-06, 3.4300000000264674e-06, 2.7639999999884424e-06, 2.8890000000059146e-06, 3.083000000014824e-06, 3.2779999999954512e-06, 2.9719999999899827e-06, 2.458000000038485e-06, 3.4309999999981855e-06, 3.042000000008649e-06, 2.6949999999970053e-06, 3.083000000014824e-06, 3.138999999985348e-06, 3.319000000001626e-06, 3.0689999999666817e-06, 2.8750000000132836e-06, 2.9029999999985456e-06, 3.3609999999795193e-06, 2.6530000000191123e-06, 3.3610000000350304e-06, 3.014000000023387e-06, 2.8750000000132836e-06, 2.7499999999958114e-06, 3.221999999969416e-06]</msg>
<status status="PASS" starttime="20201029 18:14:35.042" endtime="20201029 18:14:35.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.037" endtime="20201029 18:14:35.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.687" endtime="20201029 18:14:35.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.687" endtime="20201029 18:14:35.045"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.053" endtime="20201029 18:14:35.062"></status>
</kw>
<msg timestamp="20201029 18:14:35.063" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.052" endtime="20201029 18:14:35.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.065" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.064" endtime="20201029 18:14:35.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.066" endtime="20201029 18:14:35.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.049" endtime="20201029 18:14:35.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.048" endtime="20201029 18:14:35.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.075" endtime="20201029 18:14:35.378"></status>
</kw>
<msg timestamp="20201029 18:14:35.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070527222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.070530514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:35.074" endtime="20201029 18:14:35.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070527222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.070530514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:35.383" endtime="20201029 18:14:35.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.392" endtime="20201029 18:14:35.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.071" endtime="20201029 18:14:35.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.070" endtime="20201029 18:14:35.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:35.399" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.3329999999942572e-06}, {'diff': 2.55600000000078e-06}, {'diff': 3.1670000000122434e-06}, {'diff': 3.388999999992537e-06}, {'diff': 3.096999999993577e-06}, {'diff': 2.915999999...</msg>
<status status="PASS" starttime="20201029 18:14:35.396" endtime="20201029 18:14:35.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:35.404" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.3329999999942572e-06, 2.55600000000078e-06, 3.1670000000122434e-06, 3.388999999992537e-06, 3.096999999993577e-06, 2.915999999991703e-06, 3.374999999999906e-06, 3.0270000000026664e-06, 2...</msg>
<status status="PASS" starttime="20201029 18:14:35.400" endtime="20201029 18:14:35.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.409" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:35.408" endtime="20201029 18:14:35.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.412" level="INFO">VALUE: [0, 3.3329999999942572e-06, 2.55600000000078e-06, 3.1670000000122434e-06, 3.388999999992537e-06, 3.096999999993577e-06, 2.915999999991703e-06, 3.374999999999906e-06, 3.0270000000026664e-06, 2.750000000009689e-06, 3.416000000006081e-06, 2.6669999999978655e-06, 2.901999999999072e-06, 0.320235709, 3.16699999997061e-06, 3.042000000008649e-06, 3.4300000000264674e-06, 2.7639999999884424e-06, 2.8890000000059146e-06, 3.083000000014824e-06, 3.2779999999954512e-06, 2.9719999999899827e-06, 2.458000000038485e-06, 3.4309999999981855e-06, 3.042000000008649e-06, 2.6949999999970053e-06, 3.083000000014824e-06, 3.138999999985348e-06, 3.319000000001626e-06, 3.0689999999666817e-06, 2.8750000000132836e-06, 2.9029999999985456e-06, 3.3609999999795193e-06, 2.6530000000191123e-06, 3.3610000000350304e-06, 3.014000000023387e-06, 2.8750000000132836e-06, 2.7499999999958114e-06, 3.221999999969416e-06, 5.410000000205528e-07, 3.0700000001049332e-06, 2.52800000000164e-06, 3.276999999912711e-06, 2.7920000000847267e-06, 3.0279999999605067e-06, 2.7780000000365845e-06, 2.9719999999899827e-06, 3.222000000024927e-06, 3.5139999999822535e-06, 2.555999999986902e-06, 3.1109999999445748e-06, 2.7630000000167243e-06, 2.6660000000955364e-06, 2.8469999999725104e-06, 3.083000000070335e-06, 3.2360000000730693e-06, 3.3879999999930632e-06, 3.4450000000463277e-06, 2.694999999941494e-06, 2.8469999999725104e-06, 3.111000000055597e-06, 3.263999999947309e-06, 2.63899999997097e-06, 2.7499999999403e-06]</msg>
<status status="PASS" starttime="20201029 18:14:35.410" endtime="20201029 18:14:35.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.405" endtime="20201029 18:14:35.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.046" endtime="20201029 18:14:35.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.046" endtime="20201029 18:14:35.413"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.421" endtime="20201029 18:14:35.431"></status>
</kw>
<msg timestamp="20201029 18:14:35.432" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.420" endtime="20201029 18:14:35.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.434" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.433" endtime="20201029 18:14:35.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.435" endtime="20201029 18:14:35.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.417" endtime="20201029 18:14:35.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.415" endtime="20201029 18:14:35.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.444" endtime="20201029 18:14:35.745"></status>
</kw>
<msg timestamp="20201029 18:14:35.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.390912431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.390915514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:35.443" endtime="20201029 18:14:35.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.390912431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.390915514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:35.750" endtime="20201029 18:14:35.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.760" endtime="20201029 18:14:35.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.440" endtime="20201029 18:14:35.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.438" endtime="20201029 18:14:35.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:35.768" level="INFO">${RESULT} = [{'diff': 3.083000000014824e-06}, {'diff': 3.138999999985348e-06}, {'diff': 3.319000000001626e-06}, {'diff': 3.0689999999666817e-06}, {'diff': 2.8750000000132836e-06}, {'diff': 2.9029999999985456e-06}...</msg>
<status status="PASS" starttime="20201029 18:14:35.763" endtime="20201029 18:14:35.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:35.774" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.083000000014824e-06, 3.138999999985348e-06, 3.319000000001626e-06, 3.0689999999666817e-06, 2.8750000000132836e-06, 2.9029999999985456e-06, 3.3609999999795193e-06, 2.6530000000191123e-06, 3...</msg>
<status status="PASS" starttime="20201029 18:14:35.769" endtime="20201029 18:14:35.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.780" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:35.779" endtime="20201029 18:14:35.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.784" level="INFO">VALUE: [3.083000000014824e-06, 3.138999999985348e-06, 3.319000000001626e-06, 3.0689999999666817e-06, 2.8750000000132836e-06, 2.9029999999985456e-06, 3.3609999999795193e-06, 2.6530000000191123e-06, 3.3610000000350304e-06, 3.014000000023387e-06, 2.8750000000132836e-06, 2.7499999999958114e-06, 3.221999999969416e-06, 5.410000000205528e-07, 3.0700000001049332e-06, 2.52800000000164e-06, 3.276999999912711e-06, 2.7920000000847267e-06, 3.0279999999605067e-06, 2.7780000000365845e-06, 2.9719999999899827e-06, 3.222000000024927e-06, 3.5139999999822535e-06, 2.555999999986902e-06, 3.1109999999445748e-06, 2.7630000000167243e-06, 2.6660000000955364e-06, 2.8469999999725104e-06, 3.083000000070335e-06, 3.2360000000730693e-06, 3.3879999999930632e-06, 3.4450000000463277e-06, 2.694999999941494e-06, 2.8469999999725104e-06, 3.111000000055597e-06, 3.263999999947309e-06, 2.63899999997097e-06, 2.7499999999403e-06, 0.3578640970000001, 3.1109999998335525e-06, 2.8480000000552508e-06, 2.9029999999430345e-06, 2.901999999860294e-06, 3.291999999932571e-06, 3.2909999998498307e-06, 3.3200000000288554e-06, 2.7639999999884424e-06, 2.4169999999212877e-06, 2.8750000000687947e-06, 3.097000000007455e-06, 2.7220000000660605e-06, 3.1939999998176205e-06, 3.208999999948503e-06, 3.347999999903095e-06, 3.014000000023387e-06, 2.5420000000497822e-06, 2.8340000000071086e-06, 3.1659999999433808e-06, 2.65299999990809e-06, 2.8889999998948923e-06, 3.2780000001064735e-06, 3.4300000000264674e-06, 2.8469999999725104e-06, 2.8199999999589664e-06]</msg>
<status status="PASS" starttime="20201029 18:14:35.782" endtime="20201029 18:14:35.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.775" endtime="20201029 18:14:35.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.414" endtime="20201029 18:14:35.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.414" endtime="20201029 18:14:35.786"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.797" endtime="20201029 18:14:35.807"></status>
</kw>
<msg timestamp="20201029 18:14:35.808" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.795" endtime="20201029 18:14:35.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.810" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.809" endtime="20201029 18:14:35.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.811" endtime="20201029 18:14:35.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.791" endtime="20201029 18:14:35.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.789" endtime="20201029 18:14:35.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.820" endtime="20201029 18:14:36.121"></status>
</kw>
<msg timestamp="20201029 18:14:36.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.741874819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.741877681, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:35.819" endtime="20201029 18:14:36.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.741874819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.741877681, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:36.126" endtime="20201029 18:14:36.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.135" endtime="20201029 18:14:36.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.816" endtime="20201029 18:14:36.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.814" endtime="20201029 18:14:36.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:36.142" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.6660000000955364e-06}, {'diff': 2.8469999999725104e-06}, {'diff': 3.083000000070335e-06}, {'diff': 3.2360000000730693e-06}, {'diff': 3.3879999999930632e-06}, {'diff': 3.445000...</msg>
<status status="PASS" starttime="20201029 18:14:36.139" endtime="20201029 18:14:36.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:36.148" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.6660000000955364e-06, 2.8469999999725104e-06, 3.083000000070335e-06, 3.2360000000730693e-06, 3.3879999999930632e-06, 3.4450000000463277e-06, 2.694999999941494e-06, 2.8469999999725104e-0...</msg>
<status status="PASS" starttime="20201029 18:14:36.143" endtime="20201029 18:14:36.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.152" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:36.151" endtime="20201029 18:14:36.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.155" level="INFO">VALUE: [0, 2.6660000000955364e-06, 2.8469999999725104e-06, 3.083000000070335e-06, 3.2360000000730693e-06, 3.3879999999930632e-06, 3.4450000000463277e-06, 2.694999999941494e-06, 2.8469999999725104e-06, 3.111000000055597e-06, 3.263999999947309e-06, 2.63899999997097e-06, 2.7499999999403e-06, 0.3578640970000001, 3.1109999998335525e-06, 2.8480000000552508e-06, 2.9029999999430345e-06, 2.901999999860294e-06, 3.291999999932571e-06, 3.2909999998498307e-06, 3.3200000000288554e-06, 2.7639999999884424e-06, 2.4169999999212877e-06, 2.8750000000687947e-06, 3.097000000007455e-06, 2.7220000000660605e-06, 3.1939999998176205e-06, 3.208999999948503e-06, 3.347999999903095e-06, 3.014000000023387e-06, 2.5420000000497822e-06, 2.8340000000071086e-06, 3.1659999999433808e-06, 2.65299999990809e-06, 2.8889999998948923e-06, 3.2780000001064735e-06, 3.4300000000264674e-06, 2.8469999999725104e-06, 2.8199999999589664e-06, 5.419999999922709e-07, 2.9999999999752447e-06, 3.4580000001227518e-06, 2.8199999999589664e-06, 3.028000000071529e-06, 3.221999999913905e-06, 2.7220000000660605e-06, 3.2080000000878073e-06, 3.5139999998712312e-06, 2.540999999967042e-06, 2.5829999998894237e-06, 2.666999999956232e-06, 3.097000000007455e-06, 2.7220000000660605e-06, 2.8610000000206526e-06, 3.3200000000288554e-06, 2.7780000000365845e-06, 2.735999999892158e-06, 2.9729999999617007e-06, 2.9589999999135586e-06, 2.666999999956232e-06, 2.9169999999911767e-06, 2.7920000000847267e-06, 2.7920000000847267e-06, 3.4030000000129235e-06]</msg>
<status status="PASS" starttime="20201029 18:14:36.153" endtime="20201029 18:14:36.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.149" endtime="20201029 18:14:36.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.787" endtime="20201029 18:14:36.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.786" endtime="20201029 18:14:36.156"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.164" endtime="20201029 18:14:36.174"></status>
</kw>
<msg timestamp="20201029 18:14:36.175" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:36.163" endtime="20201029 18:14:36.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.177" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:36.176" endtime="20201029 18:14:36.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.178" endtime="20201029 18:14:36.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.160" endtime="20201029 18:14:36.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.158" endtime="20201029 18:14:36.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.187" endtime="20201029 18:14:36.516"></status>
</kw>
<msg timestamp="20201029 18:14:36.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.09988575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.099888944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:36.186" endtime="20201029 18:14:36.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.09988575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.099888944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:36.521" endtime="20201029 18:14:36.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.530" endtime="20201029 18:14:36.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.183" endtime="20201029 18:14:36.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.181" endtime="20201029 18:14:36.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:36.537" level="INFO">${RESULT} = [{'diff': 3.1939999998176205e-06}, {'diff': 3.208999999948503e-06}, {'diff': 3.347999999903095e-06}, {'diff': 3.014000000023387e-06}, {'diff': 2.5420000000497822e-06}, {'diff': 2.8340000000071086e-06}...</msg>
<status status="PASS" starttime="20201029 18:14:36.534" endtime="20201029 18:14:36.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:36.544" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.1939999998176205e-06, 3.208999999948503e-06, 3.347999999903095e-06, 3.014000000023387e-06, 2.5420000000497822e-06, 2.8340000000071086e-06, 3.1659999999433808e-06, 2.65299999990809e-06, 2.8...</msg>
<status status="PASS" starttime="20201029 18:14:36.538" endtime="20201029 18:14:36.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.549" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:36.548" endtime="20201029 18:14:36.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.551" level="INFO">VALUE: [3.1939999998176205e-06, 3.208999999948503e-06, 3.347999999903095e-06, 3.014000000023387e-06, 2.5420000000497822e-06, 2.8340000000071086e-06, 3.1659999999433808e-06, 2.65299999990809e-06, 2.8889999998948923e-06, 3.2780000001064735e-06, 3.4300000000264674e-06, 2.8469999999725104e-06, 2.8199999999589664e-06, 5.419999999922709e-07, 2.9999999999752447e-06, 3.4580000001227518e-06, 2.8199999999589664e-06, 3.028000000071529e-06, 3.221999999913905e-06, 2.7220000000660605e-06, 3.2080000000878073e-06, 3.5139999998712312e-06, 2.540999999967042e-06, 2.5829999998894237e-06, 2.666999999956232e-06, 3.097000000007455e-06, 2.7220000000660605e-06, 2.8610000000206526e-06, 3.3200000000288554e-06, 2.7780000000365845e-06, 2.735999999892158e-06, 2.9729999999617007e-06, 2.9589999999135586e-06, 2.666999999956232e-06, 2.9169999999911767e-06, 2.7920000000847267e-06, 2.7920000000847267e-06, 3.4030000000129235e-06, 0.3564942499999999, 3.111000000055597e-06, 2.8059999999108243e-06, 2.666999999956232e-06, 2.679999999921634e-06, 3.3329999999942572e-06, 2.693999999969776e-06, 3.1109999998335525e-06, 3.138999999929837e-06, 2.610999999985708e-06, 3.6389999999997258e-06, 3.2640000000583314e-06, 3.360999999868497e-06, 2.9589999999135586e-06, 3.2769999998016885e-06, 2.860999999798608e-06, 2.8889999998948923e-06, 3.069000000133215e-06, 2.708999999878614e-06, 2.9729999999617007e-06, 2.9170000002132213e-06, 2.7920000000847267e-06, 3.250000000010189e-06, 3.194999999900361e-06, 3.1390000001518814e-06, 2.818999999876226e-06]</msg>
<status status="PASS" starttime="20201029 18:14:36.550" endtime="20201029 18:14:36.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.546" endtime="20201029 18:14:36.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.157" endtime="20201029 18:14:36.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.157" endtime="20201029 18:14:36.553"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.561" endtime="20201029 18:14:36.571"></status>
</kw>
<msg timestamp="20201029 18:14:36.572" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:36.560" endtime="20201029 18:14:36.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.574" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:36.573" endtime="20201029 18:14:36.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.575" endtime="20201029 18:14:36.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.557" endtime="20201029 18:14:36.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.555" endtime="20201029 18:14:36.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.584" endtime="20201029 18:14:36.895"></status>
</kw>
<msg timestamp="20201029 18:14:36.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.466926083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.466929111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:36.583" endtime="20201029 18:14:36.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.466926083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.466929111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:36.900" endtime="20201029 18:14:36.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.909" endtime="20201029 18:14:36.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.580" endtime="20201029 18:14:36.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.578" endtime="20201029 18:14:36.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:36.916" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.7220000000660605e-06}, {'diff': 2.8610000000206526e-06}, {'diff': 3.3200000000288554e-06}, {'diff': 2.7780000000365845e-06}, {'diff': 2.735999999892158e-06}, {'diff': 2.972999...</msg>
<status status="PASS" starttime="20201029 18:14:36.913" endtime="20201029 18:14:36.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:36.921" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.7220000000660605e-06, 2.8610000000206526e-06, 3.3200000000288554e-06, 2.7780000000365845e-06, 2.735999999892158e-06, 2.9729999999617007e-06, 2.9589999999135586e-06, 2.666999999956232e-0...</msg>
<status status="PASS" starttime="20201029 18:14:36.917" endtime="20201029 18:14:36.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.926" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:36.925" endtime="20201029 18:14:36.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.928" level="INFO">VALUE: [0, 2.7220000000660605e-06, 2.8610000000206526e-06, 3.3200000000288554e-06, 2.7780000000365845e-06, 2.735999999892158e-06, 2.9729999999617007e-06, 2.9589999999135586e-06, 2.666999999956232e-06, 2.9169999999911767e-06, 2.7920000000847267e-06, 2.7920000000847267e-06, 3.4030000000129235e-06, 0.3564942499999999, 3.111000000055597e-06, 2.8059999999108243e-06, 2.666999999956232e-06, 2.679999999921634e-06, 3.3329999999942572e-06, 2.693999999969776e-06, 3.1109999998335525e-06, 3.138999999929837e-06, 2.610999999985708e-06, 3.6389999999997258e-06, 3.2640000000583314e-06, 3.360999999868497e-06, 2.9589999999135586e-06, 3.2769999998016885e-06, 2.860999999798608e-06, 2.8889999998948923e-06, 3.069000000133215e-06, 2.708999999878614e-06, 2.9729999999617007e-06, 2.9170000002132213e-06, 2.7920000000847267e-06, 3.250000000010189e-06, 3.194999999900361e-06, 3.1390000001518814e-06, 2.818999999876226e-06, 5.409999999095305e-07, 2.7919999996406375e-06, 2.555000000015184e-06, 3.3059999999807133e-06, 3.1109999998335525e-06, 2.931000000039319e-06, 3.0140000002454315e-06, 2.611999999846404e-06, 3.0419999998976266e-06, 3.1530000002000236e-06, 3.374999999916639e-06, 2.8880000000341965e-06, 3.319999999806811e-06, 3.0839999998200085e-06, 3.374999999916639e-06, 3.0140000002454315e-06, 3.097000000007455e-06, 3.097000000007455e-06, 2.708999999878614e-06, 2.9719999998789604e-06, 3.3329999999942572e-06, 3.2500000002322338e-06, 3.1950000001224055e-06, 3.4719999999488493e-06, 3.4579999996786626e-06]</msg>
<status status="PASS" starttime="20201029 18:14:36.927" endtime="20201029 18:14:36.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.922" endtime="20201029 18:14:36.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.554" endtime="20201029 18:14:36.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.553" endtime="20201029 18:14:36.930"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.938" endtime="20201029 18:14:36.948"></status>
</kw>
<msg timestamp="20201029 18:14:36.948" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:36.937" endtime="20201029 18:14:36.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.951" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:36.949" endtime="20201029 18:14:36.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.952" endtime="20201029 18:14:36.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.933" endtime="20201029 18:14:36.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.932" endtime="20201029 18:14:36.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.961" endtime="20201029 18:14:37.275"></status>
</kw>
<msg timestamp="20201029 18:14:37.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.823566583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.823569542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:36.959" endtime="20201029 18:14:37.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.823566583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.823569542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:37.280" endtime="20201029 18:14:37.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.290" endtime="20201029 18:14:37.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.956" endtime="20201029 18:14:37.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.955" endtime="20201029 18:14:37.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:37.297" level="INFO">${RESULT} = [{'diff': 2.9589999999135586e-06}, {'diff': 3.2769999998016885e-06}, {'diff': 2.860999999798608e-06}, {'diff': 2.8889999998948923e-06}, {'diff': 3.069000000133215e-06}, {'diff': 2.708999999878614e-06}...</msg>
<status status="PASS" starttime="20201029 18:14:37.293" endtime="20201029 18:14:37.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:37.302" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.9589999999135586e-06, 3.2769999998016885e-06, 2.860999999798608e-06, 2.8889999998948923e-06, 3.069000000133215e-06, 2.708999999878614e-06, 2.9729999999617007e-06, 2.9170000002132213e-06, 2...</msg>
<status status="PASS" starttime="20201029 18:14:37.298" endtime="20201029 18:14:37.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.307" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:37.306" endtime="20201029 18:14:37.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.309" level="INFO">VALUE: [2.9589999999135586e-06, 3.2769999998016885e-06, 2.860999999798608e-06, 2.8889999998948923e-06, 3.069000000133215e-06, 2.708999999878614e-06, 2.9729999999617007e-06, 2.9170000002132213e-06, 2.7920000000847267e-06, 3.250000000010189e-06, 3.194999999900361e-06, 3.1390000001518814e-06, 2.818999999876226e-06, 5.409999999095305e-07, 2.7919999996406375e-06, 2.555000000015184e-06, 3.3059999999807133e-06, 3.1109999998335525e-06, 2.931000000039319e-06, 3.0140000002454315e-06, 2.611999999846404e-06, 3.0419999998976266e-06, 3.1530000002000236e-06, 3.374999999916639e-06, 2.8880000000341965e-06, 3.319999999806811e-06, 3.0839999998200085e-06, 3.374999999916639e-06, 3.0140000002454315e-06, 3.097000000007455e-06, 3.097000000007455e-06, 2.708999999878614e-06, 2.9719999998789604e-06, 3.3329999999942572e-06, 3.2500000002322338e-06, 3.1950000001224055e-06, 3.4719999999488493e-06, 3.4579999996786626e-06, 0.3660764160000003, 2.7499999997182556e-06, 2.708000000239963e-06, 3.097000000007455e-06, 3.0689999999111706e-06, 3.319999999806811e-06, 2.6950000000525165e-06, 3.1809999998522187e-06, 3.097999999646106e-06, 3.486000000219036e-06, 2.9999999999752447e-06, 3.5000000000451337e-06, 3.1250000001037392e-06, 3.3340000000769976e-06, 3.3469999998203548e-06, 3.0980000000901953e-06, 2.7910000000019863e-06, 2.4870000001619985e-06, 2.8330000003684574e-06, 2.985999999705058e-06, 3.235999999962047e-06, 2.9999999999752447e-06, 3.0139999998013423e-06, 3.069999999993911e-06, 3.055999999723724e-06, 2.847000000194555e-06]</msg>
<status status="PASS" starttime="20201029 18:14:37.308" endtime="20201029 18:14:37.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.303" endtime="20201029 18:14:37.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.930" endtime="20201029 18:14:37.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.930" endtime="20201029 18:14:37.311"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.319" endtime="20201029 18:14:37.329"></status>
</kw>
<msg timestamp="20201029 18:14:37.329" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.317" endtime="20201029 18:14:37.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.332" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.330" endtime="20201029 18:14:37.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.333" endtime="20201029 18:14:37.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.315" endtime="20201029 18:14:37.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.313" endtime="20201029 18:14:37.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.342" endtime="20201029 18:14:37.652"></status>
</kw>
<msg timestamp="20201029 18:14:37.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.210578139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.210581194, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:37.340" endtime="20201029 18:14:37.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.210578139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.210581194, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:37.657" endtime="20201029 18:14:37.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.667" endtime="20201029 18:14:37.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.338" endtime="20201029 18:14:37.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.336" endtime="20201029 18:14:37.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:37.674" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.0839999998200085e-06}, {'diff': 3.374999999916639e-06}, {'diff': 3.0140000002454315e-06}, {'diff': 3.097000000007455e-06}, {'diff': 3.097000000007455e-06}, {'diff': 2.70899999...</msg>
<status status="PASS" starttime="20201029 18:14:37.671" endtime="20201029 18:14:37.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:37.680" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.0839999998200085e-06, 3.374999999916639e-06, 3.0140000002454315e-06, 3.097000000007455e-06, 3.097000000007455e-06, 2.708999999878614e-06, 2.9719999998789604e-06, 3.3329999999942572e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:37.675" endtime="20201029 18:14:37.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.684" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:37.683" endtime="20201029 18:14:37.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.687" level="INFO">VALUE: [0, 3.0839999998200085e-06, 3.374999999916639e-06, 3.0140000002454315e-06, 3.097000000007455e-06, 3.097000000007455e-06, 2.708999999878614e-06, 2.9719999998789604e-06, 3.3329999999942572e-06, 3.2500000002322338e-06, 3.1950000001224055e-06, 3.4719999999488493e-06, 3.4579999996786626e-06, 0.3660764160000003, 2.7499999997182556e-06, 2.708000000239963e-06, 3.097000000007455e-06, 3.0689999999111706e-06, 3.319999999806811e-06, 2.6950000000525165e-06, 3.1809999998522187e-06, 3.097999999646106e-06, 3.486000000219036e-06, 2.9999999999752447e-06, 3.5000000000451337e-06, 3.1250000001037392e-06, 3.3340000000769976e-06, 3.3469999998203548e-06, 3.0980000000901953e-06, 2.7910000000019863e-06, 2.4870000001619985e-06, 2.8330000003684574e-06, 2.985999999705058e-06, 3.235999999962047e-06, 2.9999999999752447e-06, 3.0139999998013423e-06, 3.069999999993911e-06, 3.055999999723724e-06, 2.847000000194555e-06, 5.419999999922709e-07, 2.986000000149147e-06, 3.0140000002454315e-06, 3.277999999884429e-06, 3.2220000001359494e-06, 3.167000000026121e-06, 3.1250000001037392e-06, 3.2220000001359494e-06, 2.9999999999752447e-06, 3.2220000001359494e-06, 2.7499999997182556e-06, 2.916000000130481e-06, 3.389000000186826e-06, 2.916999999769132e-06, 3.235999999962047e-06, 3.0419999998976266e-06, 2.8480000002772954e-06, 3.1530000002000236e-06, 3.194000000039665e-06, 2.750000000162345e-06, 2.52800000000164e-06, 3.347000000264444e-06, 3.235999999962047e-06, 2.986000000149147e-06, 2.4440000001568762e-06]</msg>
<status status="PASS" starttime="20201029 18:14:37.685" endtime="20201029 18:14:37.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.681" endtime="20201029 18:14:37.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.312" endtime="20201029 18:14:37.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.311" endtime="20201029 18:14:37.688"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.696" endtime="20201029 18:14:37.706"></status>
</kw>
<msg timestamp="20201029 18:14:37.707" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.695" endtime="20201029 18:14:37.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.709" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.708" endtime="20201029 18:14:37.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.710" endtime="20201029 18:14:37.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.692" endtime="20201029 18:14:37.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.690" endtime="20201029 18:14:37.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.720" endtime="20201029 18:14:38.030"></status>
</kw>
<msg timestamp="20201029 18:14:38.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.576804722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.576808056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:37.718" endtime="20201029 18:14:38.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.576804722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.576808056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.035" endtime="20201029 18:14:38.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.045" endtime="20201029 18:14:38.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.715" endtime="20201029 18:14:38.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.713" endtime="20201029 18:14:38.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:38.052" level="INFO">${RESULT} = [{'diff': 3.3340000000769976e-06}, {'diff': 3.3469999998203548e-06}, {'diff': 3.0980000000901953e-06}, {'diff': 2.7910000000019863e-06}, {'diff': 2.4870000001619985e-06}, {'diff': 2.8330000003684574e-...</msg>
<status status="PASS" starttime="20201029 18:14:38.048" endtime="20201029 18:14:38.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:38.057" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.3340000000769976e-06, 3.3469999998203548e-06, 3.0980000000901953e-06, 2.7910000000019863e-06, 2.4870000001619985e-06, 2.8330000003684574e-06, 2.985999999705058e-06, 3.235999999962047e-06, ...</msg>
<status status="PASS" starttime="20201029 18:14:38.053" endtime="20201029 18:14:38.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.061" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:38.060" endtime="20201029 18:14:38.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.065" level="INFO">VALUE: [3.3340000000769976e-06, 3.3469999998203548e-06, 3.0980000000901953e-06, 2.7910000000019863e-06, 2.4870000001619985e-06, 2.8330000003684574e-06, 2.985999999705058e-06, 3.235999999962047e-06, 2.9999999999752447e-06, 3.0139999998013423e-06, 3.069999999993911e-06, 3.055999999723724e-06, 2.847000000194555e-06, 5.419999999922709e-07, 2.986000000149147e-06, 3.0140000002454315e-06, 3.277999999884429e-06, 3.2220000001359494e-06, 3.167000000026121e-06, 3.1250000001037392e-06, 3.2220000001359494e-06, 2.9999999999752447e-06, 3.2220000001359494e-06, 2.7499999997182556e-06, 2.916000000130481e-06, 3.389000000186826e-06, 2.916999999769132e-06, 3.235999999962047e-06, 3.0419999998976266e-06, 2.8480000002772954e-06, 3.1530000002000236e-06, 3.194000000039665e-06, 2.750000000162345e-06, 2.52800000000164e-06, 3.347000000264444e-06, 3.235999999962047e-06, 2.986000000149147e-06, 2.4440000001568762e-06, 0.3681520140000001, 3.2499999997881446e-06, 3.208000000309852e-06, 2.708999999878614e-06, 3.3059999999807133e-06, 3.1529999997559344e-06, 3.486000000219036e-06, 3.3610000000905416e-06, 2.916000000130481e-06, 2.985999999705058e-06, 2.569999999924022e-06, 2.9159999996863917e-06, 3.2499999997881446e-06, 3.208999999948503e-06, 3.0969999995633657e-06, 3.097000000007455e-06, 3.1109999998335525e-06, 2.666999999956232e-06, 2.87499999984675e-06, 3.1250000001037392e-06, 2.9720000003230496e-06, 2.77799999981454e-06, 2.958999999691514e-06, 3.0980000000901953e-06, 2.804999999828084e-06, 3.097000000007455e-06]</msg>
<status status="PASS" starttime="20201029 18:14:38.062" endtime="20201029 18:14:38.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.058" endtime="20201029 18:14:38.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.689" endtime="20201029 18:14:38.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.689" endtime="20201029 18:14:38.066"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.074" endtime="20201029 18:14:38.084"></status>
</kw>
<msg timestamp="20201029 18:14:38.085" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.072" endtime="20201029 18:14:38.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.087" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.086" endtime="20201029 18:14:38.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.088" endtime="20201029 18:14:38.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.070" endtime="20201029 18:14:38.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.068" endtime="20201029 18:14:38.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.097" endtime="20201029 18:14:38.415"></status>
</kw>
<msg timestamp="20201029 18:14:38.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.948352514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.948355319, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:38.096" endtime="20201029 18:14:38.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.948352514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.948355319, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:38.420" endtime="20201029 18:14:38.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.430" endtime="20201029 18:14:38.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.093" endtime="20201029 18:14:38.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.092" endtime="20201029 18:14:38.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:38.437" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.916999999769132e-06}, {'diff': 3.235999999962047e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 2.8480000002772954e-06}, {'diff': 3.1530000002000236e-06}, {'diff': 3.1940000...</msg>
<status status="PASS" starttime="20201029 18:14:38.433" endtime="20201029 18:14:38.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:38.443" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.916999999769132e-06, 3.235999999962047e-06, 3.0419999998976266e-06, 2.8480000002772954e-06, 3.1530000002000236e-06, 3.194000000039665e-06, 2.750000000162345e-06, 2.52800000000164e-06, 3...</msg>
<status status="PASS" starttime="20201029 18:14:38.438" endtime="20201029 18:14:38.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.447" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:38.446" endtime="20201029 18:14:38.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.449" level="INFO">VALUE: [0, 2.916999999769132e-06, 3.235999999962047e-06, 3.0419999998976266e-06, 2.8480000002772954e-06, 3.1530000002000236e-06, 3.194000000039665e-06, 2.750000000162345e-06, 2.52800000000164e-06, 3.347000000264444e-06, 3.235999999962047e-06, 2.986000000149147e-06, 2.4440000001568762e-06, 0.3681520140000001, 3.2499999997881446e-06, 3.208000000309852e-06, 2.708999999878614e-06, 3.3059999999807133e-06, 3.1529999997559344e-06, 3.486000000219036e-06, 3.3610000000905416e-06, 2.916000000130481e-06, 2.985999999705058e-06, 2.569999999924022e-06, 2.9159999996863917e-06, 3.2499999997881446e-06, 3.208999999948503e-06, 3.0969999995633657e-06, 3.097000000007455e-06, 3.1109999998335525e-06, 2.666999999956232e-06, 2.87499999984675e-06, 3.1250000001037392e-06, 2.9720000003230496e-06, 2.77799999981454e-06, 2.958999999691514e-06, 3.0980000000901953e-06, 2.804999999828084e-06, 3.097000000007455e-06, 5.409999999095305e-07, 2.708999999878614e-06, 3.374999999916639e-06, 3.097000000007455e-06, 2.7639999999884424e-06, 2.9999999999752447e-06, 3.1530000002000236e-06, 3.138999999929837e-06, 2.8190000000982707e-06, 2.847000000194555e-06, 2.693999999969776e-06, 3.2919999997105265e-06, 2.87499999984675e-06, 2.9170000002132213e-06, 3.2500000002322338e-06, 2.9580000000528628e-06, 2.9720000003230496e-06, 2.916000000130481e-06, 2.7220000000660605e-06, 3.138999999929837e-06, 3.389000000186826e-06, 2.9299999999565784e-06, 2.7079999997958737e-06, 3.2499999997881446e-06, 2.8340000000071086e-06]</msg>
<status status="PASS" starttime="20201029 18:14:38.448" endtime="20201029 18:14:38.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.443" endtime="20201029 18:14:38.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.067" endtime="20201029 18:14:38.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.066" endtime="20201029 18:14:38.451"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.459" endtime="20201029 18:14:38.469"></status>
</kw>
<msg timestamp="20201029 18:14:38.469" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.457" endtime="20201029 18:14:38.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.472" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.470" endtime="20201029 18:14:38.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.473" endtime="20201029 18:14:38.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.455" endtime="20201029 18:14:38.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.453" endtime="20201029 18:14:38.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.482" endtime="20201029 18:14:38.806"></status>
</kw>
<msg timestamp="20201029 18:14:38.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.316652569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.316655778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.480" endtime="20201029 18:14:38.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.316652569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.316655778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.811" endtime="20201029 18:14:38.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.821" endtime="20201029 18:14:38.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.478" endtime="20201029 18:14:38.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.476" endtime="20201029 18:14:38.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:38.828" level="INFO">${RESULT} = [{'diff': 3.208999999948503e-06}, {'diff': 3.0969999995633657e-06}, {'diff': 3.097000000007455e-06}, {'diff': 3.1109999998335525e-06}, {'diff': 2.666999999956232e-06}, {'diff': 2.87499999984675e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:14:38.825" endtime="20201029 18:14:38.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:38.833" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.208999999948503e-06, 3.0969999995633657e-06, 3.097000000007455e-06, 3.1109999998335525e-06, 2.666999999956232e-06, 2.87499999984675e-06, 3.1250000001037392e-06, 2.9720000003230496e-06, 2.7...</msg>
<status status="PASS" starttime="20201029 18:14:38.829" endtime="20201029 18:14:38.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.837" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:38.836" endtime="20201029 18:14:38.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.840" level="INFO">VALUE: [3.208999999948503e-06, 3.0969999995633657e-06, 3.097000000007455e-06, 3.1109999998335525e-06, 2.666999999956232e-06, 2.87499999984675e-06, 3.1250000001037392e-06, 2.9720000003230496e-06, 2.77799999981454e-06, 2.958999999691514e-06, 3.0980000000901953e-06, 2.804999999828084e-06, 3.097000000007455e-06, 5.409999999095305e-07, 2.708999999878614e-06, 3.374999999916639e-06, 3.097000000007455e-06, 2.7639999999884424e-06, 2.9999999999752447e-06, 3.1530000002000236e-06, 3.138999999929837e-06, 2.8190000000982707e-06, 2.847000000194555e-06, 2.693999999969776e-06, 3.2919999997105265e-06, 2.87499999984675e-06, 2.9170000002132213e-06, 3.2500000002322338e-06, 2.9580000000528628e-06, 2.9720000003230496e-06, 2.916000000130481e-06, 2.7220000000660605e-06, 3.138999999929837e-06, 3.389000000186826e-06, 2.9299999999565784e-06, 2.7079999997958737e-06, 3.2499999997881446e-06, 2.8340000000071086e-06, 0.3764380279999995, 3.3610000000905416e-06, 2.9299999999565784e-06, 2.750000000162345e-06, 3.0689999999111706e-06, 2.889000000116937e-06, 3.097000000451544e-06, 2.570000000368111e-06, 3.3200000002509e-06, 3.235999999517958e-06, 2.9590000005796924e-06, 3.0419999994535374e-06, 2.708000000239963e-06, 2.986000000149147e-06, 3.069999999993911e-06, 3.1800000002135675e-06, 3.0830000001813573e-06, 2.931000000039319e-06, 2.9999999995311555e-06, 2.9719999998789604e-06, 3.000000000419334e-06, 2.750000000162345e-06, 3.5690000004251488e-06, 2.819999999736922e-06, 3.042000000341716e-06, 2.8609999995765634e-06]</msg>
<status status="PASS" starttime="20201029 18:14:38.838" endtime="20201029 18:14:38.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.834" endtime="20201029 18:14:38.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.452" endtime="20201029 18:14:38.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.451" endtime="20201029 18:14:38.841"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.850" endtime="20201029 18:14:38.859"></status>
</kw>
<msg timestamp="20201029 18:14:38.860" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.848" endtime="20201029 18:14:38.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.862" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.861" endtime="20201029 18:14:38.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.863" endtime="20201029 18:14:38.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.845" endtime="20201029 18:14:38.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.843" endtime="20201029 18:14:38.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.872" endtime="20201029 18:14:39.200"></status>
</kw>
<msg timestamp="20201029 18:14:39.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.685321347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.685324319, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:38.871" endtime="20201029 18:14:39.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.685321347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.685324319, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:39.211" endtime="20201029 18:14:39.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.233" endtime="20201029 18:14:39.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.868" endtime="20201029 18:14:39.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.866" endtime="20201029 18:14:39.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:39.249" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.9170000002132213e-06}, {'diff': 3.2500000002322338e-06}, {'diff': 2.9580000000528628e-06}, {'diff': 2.9720000003230496e-06}, {'diff': 2.916000000130481e-06}, {'diff': 2.722000...</msg>
<status status="PASS" starttime="20201029 18:14:39.241" endtime="20201029 18:14:39.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:39.260" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.9170000002132213e-06, 3.2500000002322338e-06, 2.9580000000528628e-06, 2.9720000003230496e-06, 2.916000000130481e-06, 2.7220000000660605e-06, 3.138999999929837e-06, 3.389000000186826e-06...</msg>
<status status="PASS" starttime="20201029 18:14:39.251" endtime="20201029 18:14:39.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.264" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:39.263" endtime="20201029 18:14:39.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.266" level="INFO">VALUE: [0, 2.9170000002132213e-06, 3.2500000002322338e-06, 2.9580000000528628e-06, 2.9720000003230496e-06, 2.916000000130481e-06, 2.7220000000660605e-06, 3.138999999929837e-06, 3.389000000186826e-06, 2.9299999999565784e-06, 2.7079999997958737e-06, 3.2499999997881446e-06, 2.8340000000071086e-06, 0.3764380279999995, 3.3610000000905416e-06, 2.9299999999565784e-06, 2.750000000162345e-06, 3.0689999999111706e-06, 2.889000000116937e-06, 3.097000000451544e-06, 2.570000000368111e-06, 3.3200000002509e-06, 3.235999999517958e-06, 2.9590000005796924e-06, 3.0419999994535374e-06, 2.708000000239963e-06, 2.986000000149147e-06, 3.069999999993911e-06, 3.1800000002135675e-06, 3.0830000001813573e-06, 2.931000000039319e-06, 2.9999999995311555e-06, 2.9719999998789604e-06, 3.000000000419334e-06, 2.750000000162345e-06, 3.5690000004251488e-06, 2.819999999736922e-06, 3.042000000341716e-06, 2.8609999995765634e-06, 5.409999994654413e-07, 3.4309999996651186e-06, 2.9030000003871237e-06, 3.389000000630915e-06, 3.0969999995633657e-06, 3.2499999997881446e-06, 3.0830000001813573e-06, 3.055000000529162e-06, 2.485999999635169e-06, 3.3330000004383464e-06, 2.986000000149147e-06, 2.5280000004457293e-06, 3.0839999993759193e-06, 3.401999999930183e-06, 3.1109999998335525e-06, 3.1949999996783163e-06, 2.6809999997823297e-06, 3.2360000004061362e-06, 2.624999999589761e-06, 2.931000000039319e-06, 2.7090000003227033e-06, 3.124999999215561e-06, 3.1530000006441128e-06, 3.1529999997559344e-06, 3.3330000004383464e-06]</msg>
<status status="PASS" starttime="20201029 18:14:39.265" endtime="20201029 18:14:39.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.261" endtime="20201029 18:14:39.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.842" endtime="20201029 18:14:39.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.842" endtime="20201029 18:14:39.268"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.276" endtime="20201029 18:14:39.286"></status>
</kw>
<msg timestamp="20201029 18:14:39.287" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.274" endtime="20201029 18:14:39.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.289" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.288" endtime="20201029 18:14:39.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.290" endtime="20201029 18:14:39.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.272" endtime="20201029 18:14:39.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.270" endtime="20201029 18:14:39.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.299" endtime="20201029 18:14:39.617"></status>
</kw>
<msg timestamp="20201029 18:14:39.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.061905681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.061908667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:39.298" endtime="20201029 18:14:39.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.061905681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.061908667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:39.622" endtime="20201029 18:14:39.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.632" endtime="20201029 18:14:39.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.295" endtime="20201029 18:14:39.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.294" endtime="20201029 18:14:39.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:39.639" level="INFO">${RESULT} = [{'diff': 2.986000000149147e-06}, {'diff': 3.069999999993911e-06}, {'diff': 3.1800000002135675e-06}, {'diff': 3.0830000001813573e-06}, {'diff': 2.931000000039319e-06}, {'diff': 2.9999999995311555e-06}...</msg>
<status status="PASS" starttime="20201029 18:14:39.635" endtime="20201029 18:14:39.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:39.645" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.986000000149147e-06, 3.069999999993911e-06, 3.1800000002135675e-06, 3.0830000001813573e-06, 2.931000000039319e-06, 2.9999999995311555e-06, 2.9719999998789604e-06, 3.000000000419334e-06, 2....</msg>
<status status="PASS" starttime="20201029 18:14:39.640" endtime="20201029 18:14:39.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.649" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:39.648" endtime="20201029 18:14:39.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.651" level="INFO">VALUE: [2.986000000149147e-06, 3.069999999993911e-06, 3.1800000002135675e-06, 3.0830000001813573e-06, 2.931000000039319e-06, 2.9999999995311555e-06, 2.9719999998789604e-06, 3.000000000419334e-06, 2.750000000162345e-06, 3.5690000004251488e-06, 2.819999999736922e-06, 3.042000000341716e-06, 2.8609999995765634e-06, 5.409999994654413e-07, 3.4309999996651186e-06, 2.9030000003871237e-06, 3.389000000630915e-06, 3.0969999995633657e-06, 3.2499999997881446e-06, 3.0830000001813573e-06, 3.055000000529162e-06, 2.485999999635169e-06, 3.3330000004383464e-06, 2.986000000149147e-06, 2.5280000004457293e-06, 3.0839999993759193e-06, 3.401999999930183e-06, 3.1109999998335525e-06, 3.1949999996783163e-06, 2.6809999997823297e-06, 3.2360000004061362e-06, 2.624999999589761e-06, 2.931000000039319e-06, 2.7090000003227033e-06, 3.124999999215561e-06, 3.1530000006441128e-06, 3.1529999997559344e-06, 3.3330000004383464e-06, 0.4140414020000005, 2.87499999984675e-06, 3.097000000451544e-06, 3.513999999427142e-06, 2.473000000335901e-06, 3.0130000006067803e-06, 3.1529999997559344e-06, 3.0419999994535374e-06, 3.1800000002135675e-06, 3.22300000021869e-06, 2.9999999995311555e-06, 3.1949999996783163e-06, 2.708000000239963e-06, 3.4449999999353054e-06, 3.401999999930183e-06, 2.7910000000019863e-06, 2.6670000004003214e-06, 3.235999999517958e-06, 2.8480000002772954e-06, 2.6250000004779395e-06, 3.082999999293179e-06, 3.4299999995823782e-06, 2.5560000000979244e-06, 3.167000000026121e-06, 3.0549999996409838e-06, 3.347000000708533e-06]</msg>
<status status="PASS" starttime="20201029 18:14:39.650" endtime="20201029 18:14:39.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.645" endtime="20201029 18:14:39.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.269" endtime="20201029 18:14:39.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.268" endtime="20201029 18:14:39.653"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.661" endtime="20201029 18:14:39.670"></status>
</kw>
<msg timestamp="20201029 18:14:39.670" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.659" endtime="20201029 18:14:39.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.673" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.671" endtime="20201029 18:14:39.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.674" endtime="20201029 18:14:39.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.656" endtime="20201029 18:14:39.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.655" endtime="20201029 18:14:39.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.683" endtime="20201029 18:14:40.015"></status>
</kw>
<msg timestamp="20201029 18:14:40.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.441351306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.441354056, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:39.681" endtime="20201029 18:14:40.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.441351306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.441354056, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:40.027" endtime="20201029 18:14:40.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.051" endtime="20201029 18:14:40.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.679" endtime="20201029 18:14:40.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.677" endtime="20201029 18:14:40.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:40.066" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.401999999930183e-06}, {'diff': 3.1109999998335525e-06}, {'diff': 3.1949999996783163e-06}, {'diff': 2.6809999997823297e-06}, {'diff': 3.2360000004061362e-06}, {'diff': 2.624999...</msg>
<status status="PASS" starttime="20201029 18:14:40.059" endtime="20201029 18:14:40.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:40.073" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.401999999930183e-06, 3.1109999998335525e-06, 3.1949999996783163e-06, 2.6809999997823297e-06, 3.2360000004061362e-06, 2.624999999589761e-06, 2.931000000039319e-06, 2.7090000003227033e-06...</msg>
<status status="PASS" starttime="20201029 18:14:40.069" endtime="20201029 18:14:40.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.077" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:40.076" endtime="20201029 18:14:40.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.080" level="INFO">VALUE: [0, 3.401999999930183e-06, 3.1109999998335525e-06, 3.1949999996783163e-06, 2.6809999997823297e-06, 3.2360000004061362e-06, 2.624999999589761e-06, 2.931000000039319e-06, 2.7090000003227033e-06, 3.124999999215561e-06, 3.1530000006441128e-06, 3.1529999997559344e-06, 3.3330000004383464e-06, 0.4140414020000005, 2.87499999984675e-06, 3.097000000451544e-06, 3.513999999427142e-06, 2.473000000335901e-06, 3.0130000006067803e-06, 3.1529999997559344e-06, 3.0419999994535374e-06, 3.1800000002135675e-06, 3.22300000021869e-06, 2.9999999995311555e-06, 3.1949999996783163e-06, 2.708000000239963e-06, 3.4449999999353054e-06, 3.401999999930183e-06, 2.7910000000019863e-06, 2.6670000004003214e-06, 3.235999999517958e-06, 2.8480000002772954e-06, 2.6250000004779395e-06, 3.082999999293179e-06, 3.4299999995823782e-06, 2.5560000000979244e-06, 3.167000000026121e-06, 3.0549999996409838e-06, 3.347000000708533e-06, 5.419999995481817e-07, 2.8329999999243682e-06, 2.986000000149147e-06, 2.8189999996541815e-06, 3.1109999998335525e-06, 3.2360000004061362e-06, 2.9440000002267652e-06, 2.7219999996219713e-06, 3.1940000004837543e-06, 3.3880000005481747e-06, 2.9729999999617007e-06, 3.0969999995633657e-06, 3.250000000676323e-06, 2.847000000194555e-06, 3.3610000000905416e-06, 3.1940000004837543e-06, 3.3330000004383464e-06, 2.6250000004779395e-06, 2.72300000059289e-06, 2.708999999434525e-06, 3.221999999247771e-06, 3.2499999997881446e-06, 2.7369999999748984e-06, 3.1940000004837543e-06, 2.805999999466735e-06]</msg>
<status status="PASS" starttime="20201029 18:14:40.078" endtime="20201029 18:14:40.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.074" endtime="20201029 18:14:40.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.654" endtime="20201029 18:14:40.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.653" endtime="20201029 18:14:40.081"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.090" endtime="20201029 18:14:40.100"></status>
</kw>
<msg timestamp="20201029 18:14:40.100" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.089" endtime="20201029 18:14:40.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.103" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.101" endtime="20201029 18:14:40.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.104" endtime="20201029 18:14:40.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.085" endtime="20201029 18:14:40.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.084" endtime="20201029 18:14:40.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.113" endtime="20201029 18:14:40.428"></status>
</kw>
<msg timestamp="20201029 18:14:40.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.855541444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.855544889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.112" endtime="20201029 18:14:40.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.855541444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.855544889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.433" endtime="20201029 18:14:40.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.449" endtime="20201029 18:14:40.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.109" endtime="20201029 18:14:40.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.107" endtime="20201029 18:14:40.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:40.457" level="INFO">${RESULT} = [{'diff': 3.4449999999353054e-06}, {'diff': 3.401999999930183e-06}, {'diff': 2.7910000000019863e-06}, {'diff': 2.6670000004003214e-06}, {'diff': 3.235999999517958e-06}, {'diff': 2.8480000002772954e-06...</msg>
<status status="PASS" starttime="20201029 18:14:40.453" endtime="20201029 18:14:40.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:40.462" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.4449999999353054e-06, 3.401999999930183e-06, 2.7910000000019863e-06, 2.6670000004003214e-06, 3.235999999517958e-06, 2.8480000002772954e-06, 2.6250000004779395e-06, 3.082999999293179e-06, 3...</msg>
<status status="PASS" starttime="20201029 18:14:40.458" endtime="20201029 18:14:40.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.466" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:40.465" endtime="20201029 18:14:40.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.470" level="INFO">VALUE: [3.4449999999353054e-06, 3.401999999930183e-06, 2.7910000000019863e-06, 2.6670000004003214e-06, 3.235999999517958e-06, 2.8480000002772954e-06, 2.6250000004779395e-06, 3.082999999293179e-06, 3.4299999995823782e-06, 2.5560000000979244e-06, 3.167000000026121e-06, 3.0549999996409838e-06, 3.347000000708533e-06, 5.419999995481817e-07, 2.8329999999243682e-06, 2.986000000149147e-06, 2.8189999996541815e-06, 3.1109999998335525e-06, 3.2360000004061362e-06, 2.9440000002267652e-06, 2.7219999996219713e-06, 3.1940000004837543e-06, 3.3880000005481747e-06, 2.9729999999617007e-06, 3.0969999995633657e-06, 3.250000000676323e-06, 2.847000000194555e-06, 3.3610000000905416e-06, 3.1940000004837543e-06, 3.3330000004383464e-06, 2.6250000004779395e-06, 2.72300000059289e-06, 2.708999999434525e-06, 3.221999999247771e-06, 3.2499999997881446e-06, 2.7369999999748984e-06, 3.1940000004837543e-06, 2.805999999466735e-06, 0.4207805279999999, 2.9719999998789604e-06, 2.6809999997823297e-06, 2.986000000149147e-06, 3.250000000676323e-06, 2.7090000003227033e-06, 3.5419999999675156e-06, 2.8329999999243682e-06, 3.304999999897973e-06, 2.9720000007671388e-06, 2.8610000004647418e-06, 2.527000000362989e-06, 3.097000000451544e-06, 3.4309999996651186e-06, 3.1250000001037392e-06, 3.139000000373926e-06, 2.9719999998789604e-06, 3.0139999998013423e-06, 3.179999999325389e-06, 2.9579999996087736e-06, 2.87499999984675e-06, 3.208999999948503e-06, 3.5419999999675156e-06, 2.5140000001755425e-06, 2.9579999996087736e-06, 3.2360000004061362e-06]</msg>
<status status="PASS" starttime="20201029 18:14:40.468" endtime="20201029 18:14:40.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.463" endtime="20201029 18:14:40.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.082" endtime="20201029 18:14:40.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.082" endtime="20201029 18:14:40.471"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.480" endtime="20201029 18:14:40.490"></status>
</kw>
<msg timestamp="20201029 18:14:40.490" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.478" endtime="20201029 18:14:40.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.493" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.491" endtime="20201029 18:14:40.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.494" endtime="20201029 18:14:40.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.475" endtime="20201029 18:14:40.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.473" endtime="20201029 18:14:40.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.503" endtime="20201029 18:14:40.820"></status>
</kw>
<msg timestamp="20201029 18:14:40.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.230182208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.230185236, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:40.501" endtime="20201029 18:14:40.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.230182208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.230185236, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:40.825" endtime="20201029 18:14:40.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.835" endtime="20201029 18:14:40.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.499" endtime="20201029 18:14:40.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.497" endtime="20201029 18:14:40.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:40.843" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.847000000194555e-06}, {'diff': 3.3610000000905416e-06}, {'diff': 3.1940000004837543e-06}, {'diff': 3.3330000004383464e-06}, {'diff': 2.6250000004779395e-06}, {'diff': 2.723000...</msg>
<status status="PASS" starttime="20201029 18:14:40.839" endtime="20201029 18:14:40.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:40.848" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.847000000194555e-06, 3.3610000000905416e-06, 3.1940000004837543e-06, 3.3330000004383464e-06, 2.6250000004779395e-06, 2.72300000059289e-06, 2.708999999434525e-06, 3.221999999247771e-06, ...</msg>
<status status="PASS" starttime="20201029 18:14:40.844" endtime="20201029 18:14:40.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.853" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:40.852" endtime="20201029 18:14:40.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.855" level="INFO">VALUE: [0, 2.847000000194555e-06, 3.3610000000905416e-06, 3.1940000004837543e-06, 3.3330000004383464e-06, 2.6250000004779395e-06, 2.72300000059289e-06, 2.708999999434525e-06, 3.221999999247771e-06, 3.2499999997881446e-06, 2.7369999999748984e-06, 3.1940000004837543e-06, 2.805999999466735e-06, 0.4207805279999999, 2.9719999998789604e-06, 2.6809999997823297e-06, 2.986000000149147e-06, 3.250000000676323e-06, 2.7090000003227033e-06, 3.5419999999675156e-06, 2.8329999999243682e-06, 3.304999999897973e-06, 2.9720000007671388e-06, 2.8610000004647418e-06, 2.527000000362989e-06, 3.097000000451544e-06, 3.4309999996651186e-06, 3.1250000001037392e-06, 3.139000000373926e-06, 2.9719999998789604e-06, 3.0139999998013423e-06, 3.179999999325389e-06, 2.9579999996087736e-06, 2.87499999984675e-06, 3.208999999948503e-06, 3.5419999999675156e-06, 2.5140000001755425e-06, 2.9579999996087736e-06, 3.2360000004061362e-06, 5.409999994654413e-07, 2.77799999981454e-06, 3.2919999997105265e-06, 3.2779999994403397e-06, 2.7920000000847267e-06, 2.8200000006251003e-06, 3.2499999997881446e-06, 3.1530000006441128e-06, 2.9719999998789604e-06, 3.2079999998657627e-06, 3.1529999997559344e-06, 2.847000000194555e-06, 3.0410000002589754e-06, 2.5699999994799327e-06, 2.944999999421327e-06, 2.6110000002077527e-06, 2.9030000003871237e-06, 2.7920000000847267e-06, 3.139000000373926e-06, 2.931000000039319e-06, 3.360999999202363e-06, 3.055999999723724e-06, 2.958000000496952e-06, 2.750000000162345e-06, 2.8189999996541815e-06]</msg>
<status status="PASS" starttime="20201029 18:14:40.854" endtime="20201029 18:14:40.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.849" endtime="20201029 18:14:40.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.472" endtime="20201029 18:14:40.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.471" endtime="20201029 18:14:40.857"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.865" endtime="20201029 18:14:40.874"></status>
</kw>
<msg timestamp="20201029 18:14:40.875" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.863" endtime="20201029 18:14:40.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.877" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.876" endtime="20201029 18:14:40.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.879" endtime="20201029 18:14:40.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.861" endtime="20201029 18:14:40.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.859" endtime="20201029 18:14:40.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.889" endtime="20201029 18:14:41.213"></status>
</kw>
<msg timestamp="20201029 18:14:41.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.651109958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.651113389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.887" endtime="20201029 18:14:41.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.651109958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.651113389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:41.218" endtime="20201029 18:14:41.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.229" endtime="20201029 18:14:41.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.884" endtime="20201029 18:14:41.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.882" endtime="20201029 18:14:41.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:41.236" level="INFO">${RESULT} = [{'diff': 3.4309999996651186e-06}, {'diff': 3.1250000001037392e-06}, {'diff': 3.139000000373926e-06}, {'diff': 2.9719999998789604e-06}, {'diff': 3.0139999998013423e-06}, {'diff': 3.179999999325389e-06...</msg>
<status status="PASS" starttime="20201029 18:14:41.232" endtime="20201029 18:14:41.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:41.241" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.4309999996651186e-06, 3.1250000001037392e-06, 3.139000000373926e-06, 2.9719999998789604e-06, 3.0139999998013423e-06, 3.179999999325389e-06, 2.9579999996087736e-06, 2.87499999984675e-06, 3....</msg>
<status status="PASS" starttime="20201029 18:14:41.237" endtime="20201029 18:14:41.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.245" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:41.244" endtime="20201029 18:14:41.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.249" level="INFO">VALUE: [3.4309999996651186e-06, 3.1250000001037392e-06, 3.139000000373926e-06, 2.9719999998789604e-06, 3.0139999998013423e-06, 3.179999999325389e-06, 2.9579999996087736e-06, 2.87499999984675e-06, 3.208999999948503e-06, 3.5419999999675156e-06, 2.5140000001755425e-06, 2.9579999996087736e-06, 3.2360000004061362e-06, 5.409999994654413e-07, 2.77799999981454e-06, 3.2919999997105265e-06, 3.2779999994403397e-06, 2.7920000000847267e-06, 2.8200000006251003e-06, 3.2499999997881446e-06, 3.1530000006441128e-06, 2.9719999998789604e-06, 3.2079999998657627e-06, 3.1529999997559344e-06, 2.847000000194555e-06, 3.0410000002589754e-06, 2.5699999994799327e-06, 2.944999999421327e-06, 2.6110000002077527e-06, 2.9030000003871237e-06, 2.7920000000847267e-06, 3.139000000373926e-06, 2.931000000039319e-06, 3.360999999202363e-06, 3.055999999723724e-06, 2.958000000496952e-06, 2.750000000162345e-06, 2.8189999996541815e-06, 0.3762806249999997, 2.7920000000847267e-06, 3.0139999998013423e-06, 3.3199999993627216e-06, 3.3610000000905416e-06, 2.693999999969776e-06, 3.028000000071529e-06, 3.4030000000129235e-06, 2.735999999892158e-06, 2.9030000003871237e-06, 3.1250000001037392e-06, 2.87499999984675e-06, 2.5140000001755425e-06, 2.87499999984675e-06, 2.485999999635169e-06, 3.2079999998657627e-06, 2.9999999995311555e-06, 3.097000000451544e-06, 3.055999999723724e-06, 3.179999999325389e-06, 3.3750000003607283e-06, 2.7640000004325316e-06, 2.8189999996541815e-06, 2.847000000194555e-06, 2.77799999981454e-06, 2.7910000000019863e-06]</msg>
<status status="PASS" starttime="20201029 18:14:41.246" endtime="20201029 18:14:41.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.242" endtime="20201029 18:14:41.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.858" endtime="20201029 18:14:41.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.857" endtime="20201029 18:14:41.250"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.259" endtime="20201029 18:14:41.268"></status>
</kw>
<msg timestamp="20201029 18:14:41.268" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.257" endtime="20201029 18:14:41.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.271" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.269" endtime="20201029 18:14:41.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.272" endtime="20201029 18:14:41.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.254" endtime="20201029 18:14:41.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.252" endtime="20201029 18:14:41.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.281" endtime="20201029 18:14:41.599"></status>
</kw>
<msg timestamp="20201029 18:14:41.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.030120333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.030123833, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:41.280" endtime="20201029 18:14:41.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.030120333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.030123833, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:41.605" endtime="20201029 18:14:41.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.615" endtime="20201029 18:14:41.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.277" endtime="20201029 18:14:41.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.275" endtime="20201029 18:14:41.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:41.622" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.5699999994799327e-06}, {'diff': 2.944999999421327e-06}, {'diff': 2.6110000002077527e-06}, {'diff': 2.9030000003871237e-06}, {'diff': 2.7920000000847267e-06}, {'diff': 3.139000...</msg>
<status status="PASS" starttime="20201029 18:14:41.618" endtime="20201029 18:14:41.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:41.628" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.5699999994799327e-06, 2.944999999421327e-06, 2.6110000002077527e-06, 2.9030000003871237e-06, 2.7920000000847267e-06, 3.139000000373926e-06, 2.931000000039319e-06, 3.360999999202363e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:41.623" endtime="20201029 18:14:41.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.632" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:41.631" endtime="20201029 18:14:41.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.635" level="INFO">VALUE: [0, 2.5699999994799327e-06, 2.944999999421327e-06, 2.6110000002077527e-06, 2.9030000003871237e-06, 2.7920000000847267e-06, 3.139000000373926e-06, 2.931000000039319e-06, 3.360999999202363e-06, 3.055999999723724e-06, 2.958000000496952e-06, 2.750000000162345e-06, 2.8189999996541815e-06, 0.3762806249999997, 2.7920000000847267e-06, 3.0139999998013423e-06, 3.3199999993627216e-06, 3.3610000000905416e-06, 2.693999999969776e-06, 3.028000000071529e-06, 3.4030000000129235e-06, 2.735999999892158e-06, 2.9030000003871237e-06, 3.1250000001037392e-06, 2.87499999984675e-06, 2.5140000001755425e-06, 2.87499999984675e-06, 2.485999999635169e-06, 3.2079999998657627e-06, 2.9999999995311555e-06, 3.097000000451544e-06, 3.055999999723724e-06, 3.179999999325389e-06, 3.3750000003607283e-06, 2.7640000004325316e-06, 2.8189999996541815e-06, 2.847000000194555e-06, 2.77799999981454e-06, 2.7910000000019863e-06, 5.410000003536197e-07, 2.916999999769132e-06, 2.986000000149147e-06, 3.139000000373926e-06, 3.1250000001037392e-06, 2.916999999769132e-06, 3.0969999995633657e-06, 2.805999999466735e-06, 3.012999999718602e-06, 2.9999999995311555e-06, 3.2220000001359494e-06, 2.9030000003871237e-06, 2.931000000039319e-06, 2.986000000149147e-06, 3.3200000002509e-06, 3.0830000001813573e-06, 3.040999999370797e-06, 3.4860000006631253e-06, 2.6250000004779395e-06, 3.2499999997881446e-06, 2.9450000003095056e-06, 3.0139999998013423e-06, 3.1389999994857476e-06, 2.916999999769132e-06, 2.763999999544353e-06]</msg>
<status status="PASS" starttime="20201029 18:14:41.633" endtime="20201029 18:14:41.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.629" endtime="20201029 18:14:41.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.251" endtime="20201029 18:14:41.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.251" endtime="20201029 18:14:41.636"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.645" endtime="20201029 18:14:41.655"></status>
</kw>
<msg timestamp="20201029 18:14:41.655" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.643" endtime="20201029 18:14:41.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.658" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.656" endtime="20201029 18:14:41.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.659" endtime="20201029 18:14:41.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.640" endtime="20201029 18:14:41.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.639" endtime="20201029 18:14:41.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.668" endtime="20201029 18:14:41.989"></status>
</kw>
<msg timestamp="20201029 18:14:41.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.406549319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.406552194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:41.667" endtime="20201029 18:14:41.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.406549319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.406552194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:41.994" endtime="20201029 18:14:42.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.004" endtime="20201029 18:14:42.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.664" endtime="20201029 18:14:42.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.662" endtime="20201029 18:14:42.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:42.012" level="INFO">${RESULT} = [{'diff': 2.87499999984675e-06}, {'diff': 2.485999999635169e-06}, {'diff': 3.2079999998657627e-06}, {'diff': 2.9999999995311555e-06}, {'diff': 3.097000000451544e-06}, {'diff': 3.055999999723724e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:14:42.008" endtime="20201029 18:14:42.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:42.016" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.87499999984675e-06, 2.485999999635169e-06, 3.2079999998657627e-06, 2.9999999995311555e-06, 3.097000000451544e-06, 3.055999999723724e-06, 3.179999999325389e-06, 3.3750000003607283e-06, 2.76...</msg>
<status status="PASS" starttime="20201029 18:14:42.013" endtime="20201029 18:14:42.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.021" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:42.020" endtime="20201029 18:14:42.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.024" level="INFO">VALUE: [2.87499999984675e-06, 2.485999999635169e-06, 3.2079999998657627e-06, 2.9999999995311555e-06, 3.097000000451544e-06, 3.055999999723724e-06, 3.179999999325389e-06, 3.3750000003607283e-06, 2.7640000004325316e-06, 2.8189999996541815e-06, 2.847000000194555e-06, 2.77799999981454e-06, 2.7910000000019863e-06, 5.410000003536197e-07, 2.916999999769132e-06, 2.986000000149147e-06, 3.139000000373926e-06, 3.1250000001037392e-06, 2.916999999769132e-06, 3.0969999995633657e-06, 2.805999999466735e-06, 3.012999999718602e-06, 2.9999999995311555e-06, 3.2220000001359494e-06, 2.9030000003871237e-06, 2.931000000039319e-06, 2.986000000149147e-06, 3.3200000002509e-06, 3.0830000001813573e-06, 3.040999999370797e-06, 3.4860000006631253e-06, 2.6250000004779395e-06, 3.2499999997881446e-06, 2.9450000003095056e-06, 3.0139999998013423e-06, 3.1389999994857476e-06, 2.916999999769132e-06, 2.763999999544353e-06, 0.37586401399999936, 2.6110000002077527e-06, 3.22300000021869e-06, 2.77799999981454e-06, 2.986000000149147e-06, 3.042000000341716e-06, 2.8750000007349286e-06, 3.4300000004705566e-06, 3.2360000004061362e-06, 2.6110000002077527e-06, 2.7910000000019863e-06, 3.2779999994403397e-06, 3.3469999998203548e-06, 2.750000000162345e-06, 3.0139999998013423e-06, 2.582999999667379e-06, 3.0139999998013423e-06, 3.097000000451544e-06, 2.9440000002267652e-06, 2.9719999998789604e-06, 3.3059999999807133e-06, 2.943999999338587e-06, 3.3750000003607283e-06, 2.9299999999565784e-06, 3.431000000553297e-06, 2.8880000000341965e-06]</msg>
<status status="PASS" starttime="20201029 18:14:42.022" endtime="20201029 18:14:42.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.017" endtime="20201029 18:14:42.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.637" endtime="20201029 18:14:42.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.637" endtime="20201029 18:14:42.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.354" endtime="20201029 18:14:42.025"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:34.277" endtime="20201029 18:14:42.026" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:42.033" endtime="20201029 18:14:42.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.031" endtime="20201029 18:14:42.053"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.067" endtime="20201029 18:14:42.081"></status>
</kw>
<msg timestamp="20201029 18:14:42.082" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.065" endtime="20201029 18:14:42.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.085" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.083" endtime="20201029 18:14:42.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.088" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:42.086" endtime="20201029 18:14:42.088"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:42.063" endtime="20201029 18:14:42.089"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:42.060" endtime="20201029 18:14:42.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.059" endtime="20201029 18:14:42.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:42.094" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:42.093" endtime="20201029 18:14:42.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.091" endtime="20201029 18:14:42.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.058" endtime="20201029 18:14:42.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.058" endtime="20201029 18:14:42.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.095" endtime="20201029 18:14:42.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.055" endtime="20201029 18:14:42.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.054" endtime="20201029 18:14:42.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.030" endtime="20201029 18:14:42.098"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.107" endtime="20201029 18:14:42.118"></status>
</kw>
<msg timestamp="20201029 18:14:42.118" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.105" endtime="20201029 18:14:42.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.121" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.119" endtime="20201029 18:14:42.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.122" endtime="20201029 18:14:42.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.103" endtime="20201029 18:14:42.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.101" endtime="20201029 18:14:42.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.133" endtime="20201029 18:14:42.422"></status>
</kw>
<msg timestamp="20201029 18:14:42.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065139292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065140597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.130" endtime="20201029 18:14:42.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065139292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065140597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.426" endtime="20201029 18:14:42.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.435" endtime="20201029 18:14:42.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.127" endtime="20201029 18:14:42.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.125" endtime="20201029 18:14:42.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:42.442" level="INFO">${RESULT} = [{'diff': 1.3049999999931172e-06}, {'diff': 8.32999999991757e-07}, {'diff': 8.469999999982658e-07}, {'diff': 7.919999999994598e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.890000000039144e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:42.438" endtime="20201029 18:14:42.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:42.447" level="INFO">${OVERHEAD} = {'diff': [1.3049999999931172e-06, 8.32999999991757e-07, 8.469999999982658e-07, 7.919999999994598e-07, 8.469999999982658e-07, 8.890000000039144e-07, 8.469999999982658e-07, 8.199999999985996e-07, 8.1899...</msg>
<status status="PASS" starttime="20201029 18:14:42.443" endtime="20201029 18:14:42.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.451" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:42.450" endtime="20201029 18:14:42.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.453" level="INFO">VALUE: [1.3049999999931172e-06, 8.32999999991757e-07, 8.469999999982658e-07, 7.919999999994598e-07, 8.469999999982658e-07, 8.890000000039144e-07, 8.469999999982658e-07, 8.199999999985996e-07, 8.18999999999126e-07, 8.059999999920908e-07, 8.330000000056348e-07, 8.199999999985996e-07, 8.049999999926172e-07, 8.470000000121436e-07, 8.330000000056348e-07, 8.330000000056348e-07, 8.479999999977395e-07, 8.480000000116172e-07, 8.469999999982658e-07, 8.330000000056348e-07, 8.470000000121436e-07, 8.340000000051084e-07, 8.340000000051084e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.18999999999126e-07, 8.199999999985996e-07, 9.029999999965455e-07, 8.330000000056348e-07, 8.469999999982658e-07, 8.199999999985996e-07, 8.609999999908968e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.18999999999126e-07, 8.199999999985996e-07, 8.330000000056348e-07, 8.32999999991757e-07, 8.18999999999126e-07, 8.18999999999126e-07, 8.330000000056348e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.18999999999126e-07, 8.18999999999126e-07, 8.339999999912306e-07, 8.469999999982658e-07, 8.32999999991757e-07, 8.339999999912306e-07]</msg>
<status status="PASS" starttime="20201029 18:14:42.452" endtime="20201029 18:14:42.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.447" endtime="20201029 18:14:42.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.100" endtime="20201029 18:14:42.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.099" endtime="20201029 18:14:42.455"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.465" endtime="20201029 18:14:42.476"></status>
</kw>
<msg timestamp="20201029 18:14:42.476" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.462" endtime="20201029 18:14:42.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.479" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.478" endtime="20201029 18:14:42.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.480" endtime="20201029 18:14:42.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.459" endtime="20201029 18:14:42.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.457" endtime="20201029 18:14:42.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.490" endtime="20201029 18:14:42.801"></status>
</kw>
<msg timestamp="20201029 18:14:42.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065227944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065228764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.488" endtime="20201029 18:14:42.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065227944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065228764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.806" endtime="20201029 18:14:42.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.816" endtime="20201029 18:14:42.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.485" endtime="20201029 18:14:42.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.483" endtime="20201029 18:14:42.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:42.823" level="INFO">${RESULT} = [{'diff': 8.199999999985996e-07}, {'diff': 8.330000000056348e-07}, {'diff': 8.32999999991757e-07}, {'diff': 8.18999999999126e-07}, {'diff': 8.18999999999126e-07}, {'diff': 8.330000000056348e-07}, {'di...</msg>
<status status="PASS" starttime="20201029 18:14:42.820" endtime="20201029 18:14:42.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:42.829" level="INFO">${OVERHEAD} = {'diff': [8.199999999985996e-07, 8.330000000056348e-07, 8.32999999991757e-07, 8.18999999999126e-07, 8.18999999999126e-07, 8.330000000056348e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.18999999...</msg>
<status status="PASS" starttime="20201029 18:14:42.825" endtime="20201029 18:14:42.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.834" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:42.833" endtime="20201029 18:14:42.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.837" level="INFO">VALUE: [8.199999999985996e-07, 8.330000000056348e-07, 8.32999999991757e-07, 8.18999999999126e-07, 8.18999999999126e-07, 8.330000000056348e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.18999999999126e-07, 8.18999999999126e-07, 8.339999999912306e-07, 8.469999999982658e-07, 8.32999999991757e-07, 8.339999999912306e-07, 1.305999999978713e-06, 8.330000000333904e-07, 8.329999999778792e-07, 7.639999999864422e-07, 8.200000000124774e-07, 8.330000000333904e-07, 8.469999999705102e-07, 8.479999999977395e-07, 8.330000000333904e-07, 8.049999999926172e-07, 8.340000000051084e-07, 8.340000000051084e-07, 9.029999999965455e-07, 8.059999999643352e-07, 8.189999999852482e-07, 8.609999999631412e-07, 8.469999999705102e-07, 8.610000000186524e-07, 8.330000000333904e-07, 8.199999999569663e-07, 8.329999999778792e-07, 8.340000000051084e-07, 8.470000000260214e-07, 8.469999999705102e-07, 9.029999999965455e-07, 8.479999999977395e-07, 8.329999999778792e-07, 8.190000000407593e-07, 8.329999999778792e-07, 8.610000000186524e-07, 8.329999999778792e-07, 8.330000000333904e-07, 8.189999999852482e-07, 8.329999999778792e-07, 8.329999999778792e-07, 8.329999999778792e-07, 8.190000000407593e-07, 8.189999999852482e-07, 8.340000000051084e-07, 8.339999999495973e-07, 8.340000000051084e-07, 8.329999999778792e-07, 8.189999999852482e-07, 8.329999999778792e-07, 8.330000000333904e-07, 8.329999999778792e-07, 8.050000000481283e-07, 8.469999999705102e-07, 8.200000000124774e-07, 8.049999999926172e-07]</msg>
<status status="PASS" starttime="20201029 18:14:42.835" endtime="20201029 18:14:42.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.831" endtime="20201029 18:14:42.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.456" endtime="20201029 18:14:42.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.455" endtime="20201029 18:14:42.838"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.846" endtime="20201029 18:14:42.858"></status>
</kw>
<msg timestamp="20201029 18:14:42.859" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.845" endtime="20201029 18:14:42.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.861" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.860" endtime="20201029 18:14:42.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.862" endtime="20201029 18:14:42.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.842" endtime="20201029 18:14:42.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.840" endtime="20201029 18:14:42.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.872" endtime="20201029 18:14:43.170"></status>
</kw>
<msg timestamp="20201029 18:14:43.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.414815028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.414815847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.870" endtime="20201029 18:14:43.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.414815028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.414815847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.175" endtime="20201029 18:14:43.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.185" endtime="20201029 18:14:43.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.868" endtime="20201029 18:14:43.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.866" endtime="20201029 18:14:43.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:43.192" level="INFO">${RESULT} = [{'diff': 8.190000000407593e-07}, {'diff': 8.189999999852482e-07}, {'diff': 8.340000000051084e-07}, {'diff': 8.339999999495973e-07}, {'diff': 8.340000000051084e-07}, {'diff': 8.329999999778792e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:43.188" endtime="20201029 18:14:43.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:43.200" level="INFO">${OVERHEAD} = {'diff': [8.190000000407593e-07, 8.189999999852482e-07, 8.340000000051084e-07, 8.339999999495973e-07, 8.340000000051084e-07, 8.329999999778792e-07, 8.189999999852482e-07, 8.329999999778792e-07, 8.3300...</msg>
<status status="PASS" starttime="20201029 18:14:43.193" endtime="20201029 18:14:43.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.204" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:43.203" endtime="20201029 18:14:43.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.207" level="INFO">VALUE: [8.190000000407593e-07, 8.189999999852482e-07, 8.340000000051084e-07, 8.339999999495973e-07, 8.340000000051084e-07, 8.329999999778792e-07, 8.189999999852482e-07, 8.329999999778792e-07, 8.330000000333904e-07, 8.329999999778792e-07, 8.050000000481283e-07, 8.469999999705102e-07, 8.200000000124774e-07, 8.049999999926172e-07, 1.2499999999526779e-06, 8.200000000124774e-07, 8.330000000889015e-07, 8.329999999778792e-07, 8.750000000112834e-07, 8.329999999778792e-07, 8.329999999778792e-07, 8.190000000407593e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.340000000606196e-07, 8.479999999977395e-07, 8.609999999631412e-07, 8.200000000124774e-07, 8.059999999643352e-07, 8.049999999926172e-07, 8.329999999778792e-07, 8.200000000124774e-07, 8.469999999149991e-07, 8.470000000260214e-07, 8.200000000124774e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.340000000606196e-07, 9.169999999336653e-07, 8.190000000407593e-07, 8.750000000112834e-07, 8.340000000606196e-07, 8.190000000407593e-07, 8.200000000124774e-07, 8.889999999484033e-07, 8.329999999778792e-07, 8.200000000124774e-07, 8.330000000889015e-07, 8.339999999495973e-07, 8.18999999929737e-07, 8.329999999778792e-07, 8.339999999495973e-07, 8.329999999778792e-07, 8.330000000889015e-07, 8.470000000260214e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.329999999778792e-07, 8.059999999643352e-07, 8.329999999778792e-07, 8.200000000124774e-07, 8.339999999495973e-07, 8.190000000407593e-07, 8.470000000260214e-07]</msg>
<status status="PASS" starttime="20201029 18:14:43.205" endtime="20201029 18:14:43.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.201" endtime="20201029 18:14:43.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.839" endtime="20201029 18:14:43.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.839" endtime="20201029 18:14:43.208"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.216" endtime="20201029 18:14:43.227"></status>
</kw>
<msg timestamp="20201029 18:14:43.228" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.214" endtime="20201029 18:14:43.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.230" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.229" endtime="20201029 18:14:43.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.231" endtime="20201029 18:14:43.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.212" endtime="20201029 18:14:43.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.210" endtime="20201029 18:14:43.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.240" endtime="20201029 18:14:43.550"></status>
</kw>
<msg timestamp="20201029 18:14:43.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.785536361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.785537194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.239" endtime="20201029 18:14:43.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.785536361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.785537194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.555" endtime="20201029 18:14:43.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.565" endtime="20201029 18:14:43.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.236" endtime="20201029 18:14:43.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.234" endtime="20201029 18:14:43.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:43.572" level="INFO">${RESULT} = [{'diff': 8.329999999778792e-07}, {'diff': 8.339999999495973e-07}, {'diff': 8.329999999778792e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.470000000260214e-07}, {'diff': 8.190000000407593e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:43.568" endtime="20201029 18:14:43.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:43.577" level="INFO">${OVERHEAD} = {'diff': [8.329999999778792e-07, 8.339999999495973e-07, 8.329999999778792e-07, 8.330000000889015e-07, 8.470000000260214e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.329999999778792e-07, 8.0599...</msg>
<status status="PASS" starttime="20201029 18:14:43.573" endtime="20201029 18:14:43.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.582" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:43.580" endtime="20201029 18:14:43.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.584" level="INFO">VALUE: [8.329999999778792e-07, 8.339999999495973e-07, 8.329999999778792e-07, 8.330000000889015e-07, 8.470000000260214e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.329999999778792e-07, 8.059999999643352e-07, 8.329999999778792e-07, 8.200000000124774e-07, 8.339999999495973e-07, 8.190000000407593e-07, 8.470000000260214e-07, 1.2920000000971044e-06, 8.479999999977395e-07, 8.330000000889015e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.339999999495973e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.470000001370437e-07, 8.470000001370437e-07, 8.330000000889015e-07, 8.189999998187147e-07, 9.030000001075678e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.189999998187147e-07, 8.470000001370437e-07, 8.330000000889015e-07, 8.470000001370437e-07, 8.200000001234997e-07, 8.199999999014551e-07, 8.059999998533129e-07, 8.339999999495973e-07, 8.189999998187147e-07, 8.329999998668569e-07, 8.469999999149991e-07, 8.329999998668569e-07, 8.189999998187147e-07, 8.199999999014551e-07, 7.500000001048335e-07, 8.329999998668569e-07, 8.049999999926172e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.199999999014551e-07, 8.609999999631412e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.200000001234997e-07, 8.330000000889015e-07, 8.610000001851859e-07, 8.469999999149991e-07, 8.339999999495973e-07, 8.190000000407593e-07, 8.329999998668569e-07]</msg>
<status status="PASS" starttime="20201029 18:14:43.583" endtime="20201029 18:14:43.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.578" endtime="20201029 18:14:43.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.209" endtime="20201029 18:14:43.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.208" endtime="20201029 18:14:43.586"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.595" endtime="20201029 18:14:43.608"></status>
</kw>
<msg timestamp="20201029 18:14:43.609" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.593" endtime="20201029 18:14:43.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.614" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.611" endtime="20201029 18:14:43.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.616" endtime="20201029 18:14:43.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.590" endtime="20201029 18:14:43.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.588" endtime="20201029 18:14:43.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.636" endtime="20201029 18:14:43.949"></status>
</kw>
<msg timestamp="20201029 18:14:43.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.143107111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.143107944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.633" endtime="20201029 18:14:43.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.143107111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.143107944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.954" endtime="20201029 18:14:43.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.964" endtime="20201029 18:14:43.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.627" endtime="20201029 18:14:43.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.623" endtime="20201029 18:14:43.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:43.971" level="INFO">${RESULT} = [{'diff': 8.330000000889015e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.329999998668569e-07}, {'diff': 8.199999999014551e-07}, {'diff': 8.609999999631412e-07}, {'diff': 8.330000000889015e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:43.967" endtime="20201029 18:14:43.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:43.977" level="INFO">${OVERHEAD} = {'diff': [8.330000000889015e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.199999999014551e-07, 8.609999999631412e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.200000001234997e-07, 8.3300...</msg>
<status status="PASS" starttime="20201029 18:14:43.972" endtime="20201029 18:14:43.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.981" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:43.980" endtime="20201029 18:14:43.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.983" level="INFO">VALUE: [8.330000000889015e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.199999999014551e-07, 8.609999999631412e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.200000001234997e-07, 8.330000000889015e-07, 8.610000001851859e-07, 8.469999999149991e-07, 8.339999999495973e-07, 8.190000000407593e-07, 8.329999998668569e-07, 1.2780000000489622e-06, 8.060000000753575e-07, 8.200000001234997e-07, 7.779999999790732e-07, 8.479999999977395e-07, 8.199999999014551e-07, 8.620000000458816e-07, 8.339999999495973e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.339999999495973e-07, 8.060000000753575e-07, 8.330000000889015e-07, 8.750000000112834e-07, 8.330000000889015e-07, 8.339999999495973e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.750000000112834e-07, 8.469999999149991e-07, 8.060000000753575e-07, 8.190000000407593e-07, 8.609999999631412e-07, 8.329999998668569e-07, 8.340000001716419e-07, 8.329999998668569e-07, 8.330000000889015e-07, 8.470000001370437e-07, 8.330000000889015e-07, 8.190000000407593e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.189999998187147e-07, 8.339999999495973e-07, 8.469999999149991e-07, 8.329999998668569e-07, 8.330000000889015e-07, 8.470000001370437e-07, 8.470000001370437e-07, 8.479999999977395e-07, 8.200000001234997e-07, 8.329999998668569e-07, 8.330000000889015e-07, 8.059999998533129e-07, 8.470000001370437e-07, 8.330000000889015e-07, 8.200000001234997e-07, 8.190000000407593e-07, 8.479999999977395e-07]</msg>
<status status="PASS" starttime="20201029 18:14:43.982" endtime="20201029 18:14:43.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.978" endtime="20201029 18:14:43.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.586" endtime="20201029 18:14:43.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.586" endtime="20201029 18:14:43.985"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.993" endtime="20201029 18:14:44.004"></status>
</kw>
<msg timestamp="20201029 18:14:44.005" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.991" endtime="20201029 18:14:44.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.007" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.006" endtime="20201029 18:14:44.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.008" endtime="20201029 18:14:44.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.989" endtime="20201029 18:14:44.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.987" endtime="20201029 18:14:44.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.017" endtime="20201029 18:14:44.318"></status>
</kw>
<msg timestamp="20201029 18:14:44.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.51109325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.511094083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:44.016" endtime="20201029 18:14:44.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.51109325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.511094083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:44.323" endtime="20201029 18:14:44.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.332" endtime="20201029 18:14:44.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.013" endtime="20201029 18:14:44.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.011" endtime="20201029 18:14:44.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:44.341" level="INFO">${RESULT} = [{'diff': 8.329999998668569e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.470000001370437e-07}, {'diff': 8.470000001370437e-07}, {'diff': 8.479999999977395e-07}, {'diff': 8.200000001234997e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:44.337" endtime="20201029 18:14:44.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:44.346" level="INFO">${OVERHEAD} = {'diff': [8.329999998668569e-07, 8.330000000889015e-07, 8.470000001370437e-07, 8.470000001370437e-07, 8.479999999977395e-07, 8.200000001234997e-07, 8.329999998668569e-07, 8.330000000889015e-07, 8.0599...</msg>
<status status="PASS" starttime="20201029 18:14:44.342" endtime="20201029 18:14:44.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.351" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:44.350" endtime="20201029 18:14:44.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.353" level="INFO">VALUE: [8.329999998668569e-07, 8.330000000889015e-07, 8.470000001370437e-07, 8.470000001370437e-07, 8.479999999977395e-07, 8.200000001234997e-07, 8.329999998668569e-07, 8.330000000889015e-07, 8.059999998533129e-07, 8.470000001370437e-07, 8.330000000889015e-07, 8.200000001234997e-07, 8.190000000407593e-07, 8.479999999977395e-07, 1.291000000014364e-06, 8.330000000889015e-07, 8.339999999495973e-07, 8.330000000889015e-07, 8.189999998187147e-07, 7.920000000272154e-07, 8.329999998668569e-07, 8.469999999149991e-07, 8.329999998668569e-07, 8.190000000407593e-07, 8.330000000889015e-07, 8.470000001370437e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.479999999977395e-07, 8.329999998668569e-07, 8.340000001716419e-07, 8.339999999495973e-07, 8.059999998533129e-07, 8.189999998187147e-07, 8.329999998668569e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.049999999926172e-07, 8.330000000889015e-07, 7.90999999944475e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.200000001234997e-07, 8.609999999631412e-07, 8.190000000407593e-07, 8.470000001370437e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.620000000458816e-07, 8.059999998533129e-07, 8.479999999977395e-07, 8.190000000407593e-07, 8.050000002146618e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.329999998668569e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.609999999631412e-07, 8.339999999495973e-07, 8.609999999631412e-07, 8.190000000407593e-07]</msg>
<status status="PASS" starttime="20201029 18:14:44.352" endtime="20201029 18:14:44.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.347" endtime="20201029 18:14:44.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.986" endtime="20201029 18:14:44.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.985" endtime="20201029 18:14:44.355"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.362" endtime="20201029 18:14:44.373"></status>
</kw>
<msg timestamp="20201029 18:14:44.374" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.361" endtime="20201029 18:14:44.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.376" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.375" endtime="20201029 18:14:44.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.377" endtime="20201029 18:14:44.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.358" endtime="20201029 18:14:44.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.357" endtime="20201029 18:14:44.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.386" endtime="20201029 18:14:44.722"></status>
</kw>
<msg timestamp="20201029 18:14:44.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.900131208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.900132056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.385" endtime="20201029 18:14:44.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.900131208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.900132056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.727" endtime="20201029 18:14:44.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.737" endtime="20201029 18:14:44.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.382" endtime="20201029 18:14:44.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.380" endtime="20201029 18:14:44.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:44.745" level="INFO">${RESULT} = [{'diff': 8.479999999977395e-07}, {'diff': 8.190000000407593e-07}, {'diff': 8.050000002146618e-07}, {'diff': 8.190000000407593e-07}, {'diff': 8.190000000407593e-07}, {'diff': 8.329999998668569e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:44.741" endtime="20201029 18:14:44.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:44.749" level="INFO">${OVERHEAD} = {'diff': [8.479999999977395e-07, 8.190000000407593e-07, 8.050000002146618e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.329999998668569e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.1900...</msg>
<status status="PASS" starttime="20201029 18:14:44.746" endtime="20201029 18:14:44.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.753" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:44.752" endtime="20201029 18:14:44.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.756" level="INFO">VALUE: [8.479999999977395e-07, 8.190000000407593e-07, 8.050000002146618e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.329999998668569e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.609999999631412e-07, 8.339999999495973e-07, 8.609999999631412e-07, 8.190000000407593e-07, 1.2919999998750598e-06, 8.610000001851859e-07, 8.330000000889015e-07, 8.19000000262804e-07, 8.330000000889015e-07, 8.19000000262804e-07, 8.049999999926172e-07, 8.339999997275527e-07, 8.189999998187147e-07, 8.189999998187147e-07, 8.19000000262804e-07, 8.469999999149991e-07, 8.470000003590883e-07, 8.059999996312683e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.330000000889015e-07, 8.189999998187147e-07, 8.470000003590883e-07, 8.329999996448123e-07, 7.779999999790732e-07, 8.189999998187147e-07, 8.469999999149991e-07, 8.609999997410966e-07, 8.330000000889015e-07, 8.609999997410966e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.610000001851859e-07, 8.340000001716419e-07, 8.610000001851859e-07, 8.060000000753575e-07, 8.329999996448123e-07, 8.199999999014551e-07, 8.189999998187147e-07, 8.329999996448123e-07, 8.330000000889015e-07, 8.189999998187147e-07, 8.340000001716419e-07, 7.779999999790732e-07, 8.199999999014551e-07, 8.750000000112834e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.199999999014551e-07, 8.470000003590883e-07, 8.340000001716419e-07]</msg>
<status status="PASS" starttime="20201029 18:14:44.754" endtime="20201029 18:14:44.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.750" endtime="20201029 18:14:44.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.355" endtime="20201029 18:14:44.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.355" endtime="20201029 18:14:44.757"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.766" endtime="20201029 18:14:44.777"></status>
</kw>
<msg timestamp="20201029 18:14:44.777" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.765" endtime="20201029 18:14:44.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.780" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.778" endtime="20201029 18:14:44.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.781" endtime="20201029 18:14:44.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.762" endtime="20201029 18:14:44.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.759" endtime="20201029 18:14:44.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.790" endtime="20201029 18:14:45.093"></status>
</kw>
<msg timestamp="20201029 18:14:45.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.258731014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.258731847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.788" endtime="20201029 18:14:45.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.258731014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.258731847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.098" endtime="20201029 18:14:45.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.107" endtime="20201029 18:14:45.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.786" endtime="20201029 18:14:45.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.784" endtime="20201029 18:14:45.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:45.115" level="INFO">${RESULT} = [{'diff': 8.330000000889015e-07}, {'diff': 8.189999998187147e-07}, {'diff': 8.340000001716419e-07}, {'diff': 7.779999999790732e-07}, {'diff': 8.199999999014551e-07}, {'diff': 8.750000000112834e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:45.111" endtime="20201029 18:14:45.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:45.120" level="INFO">${OVERHEAD} = {'diff': [8.330000000889015e-07, 8.189999998187147e-07, 8.340000001716419e-07, 7.779999999790732e-07, 8.199999999014551e-07, 8.750000000112834e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.3300...</msg>
<status status="PASS" starttime="20201029 18:14:45.116" endtime="20201029 18:14:45.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.124" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:45.123" endtime="20201029 18:14:45.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.127" level="INFO">VALUE: [8.330000000889015e-07, 8.189999998187147e-07, 8.340000001716419e-07, 7.779999999790732e-07, 8.199999999014551e-07, 8.750000000112834e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.199999999014551e-07, 8.470000003590883e-07, 8.340000001716419e-07, 1.2780000000489622e-06, 8.470000003590883e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.189999998187147e-07, 8.199999999014551e-07, 8.479999999977395e-07, 8.330000000889015e-07, 7.909999997224304e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.339999997275527e-07, 8.200000003455443e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.060000000753575e-07, 8.470000003590883e-07, 8.189999998187147e-07, 8.329999996448123e-07, 8.330000000889015e-07, 8.060000000753575e-07, 8.329999996448123e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.19000000262804e-07, 8.610000001851859e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.750000000112834e-07, 7.779999999790732e-07, 8.329999996448123e-07, 8.19000000262804e-07, 7.500000003268781e-07, 8.469999999149991e-07, 8.340000001716419e-07, 8.330000000889015e-07, 7.9200000024926e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.199999999014551e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.329999996448123e-07]</msg>
<status status="PASS" starttime="20201029 18:14:45.125" endtime="20201029 18:14:45.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.121" endtime="20201029 18:14:45.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.758" endtime="20201029 18:14:45.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.758" endtime="20201029 18:14:45.128"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.136" endtime="20201029 18:14:45.148"></status>
</kw>
<msg timestamp="20201029 18:14:45.149" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.135" endtime="20201029 18:14:45.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.151" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.150" endtime="20201029 18:14:45.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.152" endtime="20201029 18:14:45.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.132" endtime="20201029 18:14:45.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.130" endtime="20201029 18:14:45.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.161" endtime="20201029 18:14:45.481"></status>
</kw>
<msg timestamp="20201029 18:14:45.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.649892125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.649892903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.160" endtime="20201029 18:14:45.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.649892125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.649892903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.488" endtime="20201029 18:14:45.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.516" endtime="20201029 18:14:45.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.157" endtime="20201029 18:14:45.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.155" endtime="20201029 18:14:45.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:45.525" level="INFO">${RESULT} = [{'diff': 7.779999999790732e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.19000000262804e-07}, {'diff': 7.500000003268781e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.340000001716419e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:45.520" endtime="20201029 18:14:45.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:45.530" level="INFO">${OVERHEAD} = {'diff': [7.779999999790732e-07, 8.329999996448123e-07, 8.19000000262804e-07, 7.500000003268781e-07, 8.469999999149991e-07, 8.340000001716419e-07, 8.330000000889015e-07, 7.9200000024926e-07, 8.3300000...</msg>
<status status="PASS" starttime="20201029 18:14:45.526" endtime="20201029 18:14:45.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.534" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:45.533" endtime="20201029 18:14:45.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.537" level="INFO">VALUE: [7.779999999790732e-07, 8.329999996448123e-07, 8.19000000262804e-07, 7.500000003268781e-07, 8.469999999149991e-07, 8.340000001716419e-07, 8.330000000889015e-07, 7.9200000024926e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.199999999014551e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.329999996448123e-07, 1.3189999998886037e-06, 7.499999998827889e-07, 8.339999997275527e-07, 8.330000000889015e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.340000001716419e-07, 8.060000000753575e-07, 8.189999998187147e-07, 8.199999999014551e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.610000001851859e-07, 7.919999998051708e-07, 8.469999999149991e-07, 7.919999998051708e-07, 8.609999997410966e-07, 8.469999999149991e-07, 8.61999999823837e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.189999998187147e-07, 8.340000001716419e-07, 8.189999998187147e-07, 8.060000000753575e-07, 8.19000000262804e-07, 8.750000000112834e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.469999999149991e-07, 7.779999999790732e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.479999999977395e-07, 8.330000000889015e-07, 8.890000002814702e-07, 8.199999999014551e-07, 7.910000001665196e-07, 8.330000000889015e-07, 8.060000000753575e-07, 8.469999999149991e-07, 8.330000000889015e-07]</msg>
<status status="PASS" starttime="20201029 18:14:45.535" endtime="20201029 18:14:45.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.531" endtime="20201029 18:14:45.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.129" endtime="20201029 18:14:45.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.129" endtime="20201029 18:14:45.538"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.546" endtime="20201029 18:14:45.557"></status>
</kw>
<msg timestamp="20201029 18:14:45.558" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.545" endtime="20201029 18:14:45.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.560" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.559" endtime="20201029 18:14:45.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.561" endtime="20201029 18:14:45.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.542" endtime="20201029 18:14:45.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.540" endtime="20201029 18:14:45.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.571" endtime="20201029 18:14:45.887"></status>
</kw>
<msg timestamp="20201029 18:14:45.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.009115931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.00911675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:45.570" endtime="20201029 18:14:45.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.009115931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.00911675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:45.892" endtime="20201029 18:14:45.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.902" endtime="20201029 18:14:45.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.566" endtime="20201029 18:14:45.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.564" endtime="20201029 18:14:45.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:45.909" level="INFO">${RESULT} = [{'diff': 8.189999998187147e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.339999997275527e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.479999999977395e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:45.906" endtime="20201029 18:14:45.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:45.914" level="INFO">${OVERHEAD} = {'diff': [8.189999998187147e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.479999999977395e-07, 8.330000000889015e-07, 8.890000002814702e-07, 8.1999...</msg>
<status status="PASS" starttime="20201029 18:14:45.910" endtime="20201029 18:14:45.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.919" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:45.917" endtime="20201029 18:14:45.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.922" level="INFO">VALUE: [8.189999998187147e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.479999999977395e-07, 8.330000000889015e-07, 8.890000002814702e-07, 8.199999999014551e-07, 7.910000001665196e-07, 8.330000000889015e-07, 8.060000000753575e-07, 8.469999999149991e-07, 8.330000000889015e-07, 1.2919999998750598e-06, 7.919999998051708e-07, 8.339999997275527e-07, 8.469999999149991e-07, 7.910000001665196e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.470000003590883e-07, 7.769999998963328e-07, 8.199999999014551e-07, 8.19000000262804e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.339999997275527e-07, 8.189999998187147e-07, 8.609999997410966e-07, 8.469999999149991e-07, 8.610000001851859e-07, 8.060000000753575e-07, 8.470000003590883e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.330000000889015e-07, 9.029999996634785e-07, 8.339999997275527e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.189999998187147e-07, 7.919999998051708e-07, 8.199999999014551e-07, 8.330000000889015e-07, 8.189999998187147e-07, 8.479999999977395e-07, 8.330000000889015e-07, 8.200000003455443e-07, 8.19000000262804e-07, 8.609999997410966e-07, 8.61999999823837e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.199999999014551e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.19000000262804e-07]</msg>
<status status="PASS" starttime="20201029 18:14:45.920" endtime="20201029 18:14:45.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.915" endtime="20201029 18:14:45.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.539" endtime="20201029 18:14:45.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.539" endtime="20201029 18:14:45.923"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.931" endtime="20201029 18:14:45.942"></status>
</kw>
<msg timestamp="20201029 18:14:45.942" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.930" endtime="20201029 18:14:45.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.945" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.943" endtime="20201029 18:14:45.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.946" endtime="20201029 18:14:45.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.927" endtime="20201029 18:14:45.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.925" endtime="20201029 18:14:45.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.955" endtime="20201029 18:14:46.261"></status>
</kw>
<msg timestamp="20201029 18:14:46.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.407306986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.407307819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.953" endtime="20201029 18:14:46.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.407306986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.407307819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.267" endtime="20201029 18:14:46.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.280" endtime="20201029 18:14:46.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.951" endtime="20201029 18:14:46.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.949" endtime="20201029 18:14:46.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:46.287" level="INFO">${RESULT} = [{'diff': 8.330000000889015e-07}, {'diff': 8.200000003455443e-07}, {'diff': 8.19000000262804e-07}, {'diff': 8.609999997410966e-07}, {'diff': 8.61999999823837e-07}, {'diff': 8.19000000262804e-07}, {'di...</msg>
<status status="PASS" starttime="20201029 18:14:46.283" endtime="20201029 18:14:46.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:46.292" level="INFO">${OVERHEAD} = {'diff': [8.330000000889015e-07, 8.200000003455443e-07, 8.19000000262804e-07, 8.609999997410966e-07, 8.61999999823837e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.1999999...</msg>
<status status="PASS" starttime="20201029 18:14:46.288" endtime="20201029 18:14:46.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.296" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:46.295" endtime="20201029 18:14:46.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.299" level="INFO">VALUE: [8.330000000889015e-07, 8.200000003455443e-07, 8.19000000262804e-07, 8.609999997410966e-07, 8.61999999823837e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.199999999014551e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.19000000262804e-07, 1.292000000319149e-06, 8.199999999014551e-07, 8.890000002814702e-07, 8.330000000889015e-07, 7.9200000024926e-07, 8.469999999149991e-07, 8.750000000112834e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.609999997410966e-07, 8.329999996448123e-07, 8.340000001716419e-07, 8.189999998187147e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.19000000262804e-07, 8.609999997410966e-07, 8.610000001851859e-07, 8.189999998187147e-07, 8.470000003590883e-07, 8.340000001716419e-07, 8.060000000753575e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.750000000112834e-07, 8.470000003590883e-07, 8.060000000753575e-07, 8.340000001716419e-07, 8.329999996448123e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.329999996448123e-07, 8.479999999977395e-07, 8.470000003590883e-07, 8.189999998187147e-07, 8.340000001716419e-07, 8.890000002814702e-07, 8.479999999977395e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.329999996448123e-07]</msg>
<status status="PASS" starttime="20201029 18:14:46.297" endtime="20201029 18:14:46.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.293" endtime="20201029 18:14:46.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.924" endtime="20201029 18:14:46.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.924" endtime="20201029 18:14:46.300"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.308" endtime="20201029 18:14:46.319"></status>
</kw>
<msg timestamp="20201029 18:14:46.320" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.307" endtime="20201029 18:14:46.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.322" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.321" endtime="20201029 18:14:46.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.323" endtime="20201029 18:14:46.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.304" endtime="20201029 18:14:46.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.302" endtime="20201029 18:14:46.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.332" endtime="20201029 18:14:46.653"></status>
</kw>
<msg timestamp="20201029 18:14:46.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.782192569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.782193403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.331" endtime="20201029 18:14:46.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.782192569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.782193403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.658" endtime="20201029 18:14:46.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.668" endtime="20201029 18:14:46.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.328" endtime="20201029 18:14:46.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.326" endtime="20201029 18:14:46.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:46.675" level="INFO">${RESULT} = [{'diff': 8.340000001716419e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.479999999977395e-07}, {'diff': 8.470000003590883e-07}, {'diff': 8.189999998187147e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:46.672" endtime="20201029 18:14:46.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:46.680" level="INFO">${OVERHEAD} = {'diff': [8.340000001716419e-07, 8.330000000889015e-07, 8.329999996448123e-07, 8.479999999977395e-07, 8.470000003590883e-07, 8.189999998187147e-07, 8.340000001716419e-07, 8.890000002814702e-07, 8.4799...</msg>
<status status="PASS" starttime="20201029 18:14:46.676" endtime="20201029 18:14:46.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.684" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:46.683" endtime="20201029 18:14:46.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.687" level="INFO">VALUE: [8.340000001716419e-07, 8.330000000889015e-07, 8.329999996448123e-07, 8.479999999977395e-07, 8.470000003590883e-07, 8.189999998187147e-07, 8.340000001716419e-07, 8.890000002814702e-07, 8.479999999977395e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.329999996448123e-07, 1.2780000000489622e-06, 8.340000006157311e-07, 8.469999999149991e-07, 7.919999998051708e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.610000001851859e-07, 8.200000003455443e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.19000000262804e-07, 9.029999992193893e-07, 8.88999999837381e-07, 9.030000001075678e-07, 8.88999999837381e-07, 8.610000001851859e-07, 8.189999993746255e-07, 8.330000005329907e-07, 8.479999999977395e-07, 8.200000003455443e-07, 8.469999999149991e-07, 8.049999999926172e-07, 8.340000006157311e-07, 8.200000003455443e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.340000006157311e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.750000004553726e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.329999996448123e-07]</msg>
<status status="PASS" starttime="20201029 18:14:46.685" endtime="20201029 18:14:46.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.681" endtime="20201029 18:14:46.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.301" endtime="20201029 18:14:46.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.301" endtime="20201029 18:14:46.688"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.697" endtime="20201029 18:14:46.709"></status>
</kw>
<msg timestamp="20201029 18:14:46.709" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.694" endtime="20201029 18:14:46.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.711" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.710" endtime="20201029 18:14:46.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.713" endtime="20201029 18:14:46.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.692" endtime="20201029 18:14:46.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.690" endtime="20201029 18:14:46.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.722" endtime="20201029 18:14:47.042"></status>
</kw>
<msg timestamp="20201029 18:14:47.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.149338444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.149339278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.720" endtime="20201029 18:14:47.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.149338444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.149339278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.047" endtime="20201029 18:14:47.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.057" endtime="20201029 18:14:47.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.717" endtime="20201029 18:14:47.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.716" endtime="20201029 18:14:47.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:47.064" level="INFO">${RESULT} = [{'diff': 8.340000006157311e-07}, {'diff': 8.479999999977395e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.330000005329907e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.750000004553726e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:47.061" endtime="20201029 18:14:47.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:47.070" level="INFO">${OVERHEAD} = {'diff': [8.340000006157311e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.750000004553726e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.3299...</msg>
<status status="PASS" starttime="20201029 18:14:47.065" endtime="20201029 18:14:47.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.074" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:47.073" endtime="20201029 18:14:47.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.076" level="INFO">VALUE: [8.340000006157311e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.750000004553726e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.329999996448123e-07, 1.3330000001587905e-06, 8.610000001851859e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.049999999926172e-07, 8.329999996448123e-07, 8.470000008031775e-07, 8.200000003455443e-07, 8.339999997275527e-07, 8.340000006157311e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.200000003455443e-07, 8.200000003455443e-07, 8.610000001851859e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.340000006157311e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.750000004553726e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.199999994573659e-07, 8.059999991871791e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.060000000753575e-07, 8.200000003455443e-07, 8.339999997275527e-07, 8.470000008031775e-07]</msg>
<status status="PASS" starttime="20201029 18:14:47.075" endtime="20201029 18:14:47.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.070" endtime="20201029 18:14:47.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.689" endtime="20201029 18:14:47.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.688" endtime="20201029 18:14:47.078"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.086" endtime="20201029 18:14:47.096"></status>
</kw>
<msg timestamp="20201029 18:14:47.097" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.084" endtime="20201029 18:14:47.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.099" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.098" endtime="20201029 18:14:47.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.100" endtime="20201029 18:14:47.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.081" endtime="20201029 18:14:47.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.080" endtime="20201029 18:14:47.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.109" endtime="20201029 18:14:47.425"></status>
</kw>
<msg timestamp="20201029 18:14:47.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.527844278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.527845111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.108" endtime="20201029 18:14:47.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.527844278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.527845111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.430" endtime="20201029 18:14:47.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.440" endtime="20201029 18:14:47.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.105" endtime="20201029 18:14:47.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.103" endtime="20201029 18:14:47.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:47.446" level="INFO">${RESULT} = [{'diff': 8.330000005329907e-07}, {'diff': 8.19000000262804e-07}, {'diff': 8.330000005329907e-07}, {'diff': 8.339999997275527e-07}, {'diff': 8.339999997275527e-07}, {'diff': 8.199999994573659e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:47.443" endtime="20201029 18:14:47.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:47.452" level="INFO">${OVERHEAD} = {'diff': [8.330000005329907e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.199999994573659e-07, 8.059999991871791e-07, 8.339999997275527e-07, 8.46999...</msg>
<status status="PASS" starttime="20201029 18:14:47.448" endtime="20201029 18:14:47.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.456" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:47.455" endtime="20201029 18:14:47.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.459" level="INFO">VALUE: [8.330000005329907e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.199999994573659e-07, 8.059999991871791e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.060000000753575e-07, 8.200000003455443e-07, 8.339999997275527e-07, 8.470000008031775e-07, 1.292000000319149e-06, 8.199999994573659e-07, 8.060000000753575e-07, 8.19000000262804e-07, 7.780000004231624e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.200000003455443e-07, 8.339999997275527e-07, 8.200000003455443e-07, 8.750000004553726e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.189999993746255e-07, 8.329999996448123e-07, 8.189999993746255e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.610000001851859e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.060000000753575e-07, 8.610000001851859e-07, 8.469999999149991e-07, 8.19000000262804e-07, 7.919999998051708e-07, 8.189999993746255e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.060000000753575e-07, 8.469999999149991e-07, 8.479999999977395e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.199999994573659e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.479999999977395e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.200000003455443e-07]</msg>
<status status="PASS" starttime="20201029 18:14:47.457" endtime="20201029 18:14:47.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.453" endtime="20201029 18:14:47.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.079" endtime="20201029 18:14:47.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.078" endtime="20201029 18:14:47.461"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.468" endtime="20201029 18:14:47.480"></status>
</kw>
<msg timestamp="20201029 18:14:47.480" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.467" endtime="20201029 18:14:47.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.483" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.481" endtime="20201029 18:14:47.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.484" endtime="20201029 18:14:47.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.464" endtime="20201029 18:14:47.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.463" endtime="20201029 18:14:47.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.493" endtime="20201029 18:14:47.807"></status>
</kw>
<msg timestamp="20201029 18:14:47.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.907767306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.907768153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.491" endtime="20201029 18:14:47.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.907767306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.907768153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.812" endtime="20201029 18:14:47.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.822" endtime="20201029 18:14:47.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.489" endtime="20201029 18:14:47.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.487" endtime="20201029 18:14:47.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:47.829" level="INFO">${RESULT} = [{'diff': 8.469999999149991e-07}, {'diff': 8.479999999977395e-07}, {'diff': 8.339999997275527e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.199999994573659e-07}, {'diff': 8.200000003455443e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:47.825" endtime="20201029 18:14:47.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:47.833" level="INFO">${OVERHEAD} = {'diff': [8.469999999149991e-07, 8.479999999977395e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.199999994573659e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.4699...</msg>
<status status="PASS" starttime="20201029 18:14:47.830" endtime="20201029 18:14:47.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.837" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:47.836" endtime="20201029 18:14:47.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.840" level="INFO">VALUE: [8.469999999149991e-07, 8.479999999977395e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.199999994573659e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.479999999977395e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.200000003455443e-07, 1.3050000005065954e-06, 8.479999999977395e-07, 7.920000006933492e-07, 9.030000001075678e-07, 8.329999996448123e-07, 8.749999995671942e-07, 8.609999992970074e-07, 8.750000004553726e-07, 8.340000006157311e-07, 8.479999999977395e-07, 8.189999993746255e-07, 8.610000001851859e-07, 8.049999999926172e-07, 8.200000003455443e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.340000006157311e-07, 8.339999997275527e-07, 8.059999991871791e-07, 7.919999998051708e-07, 8.330000005329907e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.470000008031775e-07, 7.919999998051708e-07, 8.200000003455443e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.749999995671942e-07, 8.469999999149991e-07, 8.749999995671942e-07, 8.339999997275527e-07, 9.030000001075678e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.340000006157311e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.609999992970074e-07]</msg>
<status status="PASS" starttime="20201029 18:14:47.839" endtime="20201029 18:14:47.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.834" endtime="20201029 18:14:47.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.461" endtime="20201029 18:14:47.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.461" endtime="20201029 18:14:47.842"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.850" endtime="20201029 18:14:47.861"></status>
</kw>
<msg timestamp="20201029 18:14:47.862" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.849" endtime="20201029 18:14:47.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.864" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.863" endtime="20201029 18:14:47.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.865" endtime="20201029 18:14:47.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.845" endtime="20201029 18:14:47.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.844" endtime="20201029 18:14:47.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.875" endtime="20201029 18:14:48.187"></status>
</kw>
<msg timestamp="20201029 18:14:48.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.280406056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.280406931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.873" endtime="20201029 18:14:48.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.280406056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.280406931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.192" endtime="20201029 18:14:48.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.202" endtime="20201029 18:14:48.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.870" endtime="20201029 18:14:48.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.868" endtime="20201029 18:14:48.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:48.209" level="INFO">${RESULT} = [{'diff': 8.749999995671942e-07}, {'diff': 8.339999997275527e-07}, {'diff': 9.030000001075678e-07}, {'diff': 8.330000005329907e-07}, {'diff': 8.330000005329907e-07}, {'diff': 8.340000006157311e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:48.205" endtime="20201029 18:14:48.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:48.214" level="INFO">${OVERHEAD} = {'diff': [8.749999995671942e-07, 8.339999997275527e-07, 9.030000001075678e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.340000006157311e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.2000...</msg>
<status status="PASS" starttime="20201029 18:14:48.210" endtime="20201029 18:14:48.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.218" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:48.217" endtime="20201029 18:14:48.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.221" level="INFO">VALUE: [8.749999995671942e-07, 8.339999997275527e-07, 9.030000001075678e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.340000006157311e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.609999992970074e-07, 1.304999999618417e-06, 8.19000000262804e-07, 8.199999994573659e-07, 8.330000005329907e-07, 8.200000003455443e-07, 8.19000000262804e-07, 8.060000000753575e-07, 8.329999996448123e-07, 8.330000005329907e-07, 7.77999999534984e-07, 8.189999993746255e-07, 8.200000003455443e-07, 8.609999992970074e-07, 8.19000000262804e-07, 8.200000003455443e-07, 8.620000002679262e-07, 8.19000000262804e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.060000000753575e-07, 8.470000008031775e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.200000003455443e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.199999994573659e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.199999994573659e-07, 8.049999999926172e-07, 8.339999997275527e-07, 8.200000003455443e-07, 9.030000001075678e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.610000001851859e-07, 7.919999998051708e-07, 8.049999999926172e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.469999999149991e-07, 7.780000004231624e-07, 8.330000005329907e-07, 8.340000006157311e-07, 8.329999996448123e-07, 8.189999993746255e-07]</msg>
<status status="PASS" starttime="20201029 18:14:48.219" endtime="20201029 18:14:48.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.215" endtime="20201029 18:14:48.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.842" endtime="20201029 18:14:48.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.842" endtime="20201029 18:14:48.222"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.230" endtime="20201029 18:14:48.241"></status>
</kw>
<msg timestamp="20201029 18:14:48.242" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.229" endtime="20201029 18:14:48.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.244" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.243" endtime="20201029 18:14:48.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.245" endtime="20201029 18:14:48.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.226" endtime="20201029 18:14:48.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.224" endtime="20201029 18:14:48.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.255" endtime="20201029 18:14:48.566"></status>
</kw>
<msg timestamp="20201029 18:14:48.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.652172431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.652173264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.253" endtime="20201029 18:14:48.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.652172431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.652173264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.572" endtime="20201029 18:14:48.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.582" endtime="20201029 18:14:48.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.250" endtime="20201029 18:14:48.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.249" endtime="20201029 18:14:48.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:48.589" level="INFO">${RESULT} = [{'diff': 8.329999996448123e-07}, {'diff': 8.339999997275527e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.610000001851859e-07}, {'diff': 7.919999998051708e-07}, {'diff': 8.049999999926172e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:48.585" endtime="20201029 18:14:48.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:48.594" level="INFO">${OVERHEAD} = {'diff': [8.329999996448123e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.610000001851859e-07, 7.919999998051708e-07, 8.049999999926172e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.46999...</msg>
<status status="PASS" starttime="20201029 18:14:48.590" endtime="20201029 18:14:48.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.599" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:48.597" endtime="20201029 18:14:48.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.601" level="INFO">VALUE: [8.329999996448123e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.610000001851859e-07, 7.919999998051708e-07, 8.049999999926172e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.469999999149991e-07, 7.780000004231624e-07, 8.330000005329907e-07, 8.340000006157311e-07, 8.329999996448123e-07, 8.189999993746255e-07, 1.3060000005893357e-06, 8.329999996448123e-07, 8.329999996448123e-07, 8.189999993746255e-07, 8.469999999149991e-07, 8.189999993746255e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.340000006157311e-07, 8.330000005329907e-07, 8.199999994573659e-07, 8.469999999149991e-07, 9.030000001075678e-07, 8.329999996448123e-07, 7.639999992647972e-07, 8.339999997275527e-07, 8.479999999977395e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.749999995671942e-07, 8.340000006157311e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.479999999977395e-07, 8.330000005329907e-07, 8.200000003455443e-07, 7.919999998051708e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.340000006157311e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.340000006157311e-07, 8.479999999977395e-07, 8.609999992970074e-07, 8.479999999977395e-07, 8.330000005329907e-07]</msg>
<status status="PASS" starttime="20201029 18:14:48.600" endtime="20201029 18:14:48.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.595" endtime="20201029 18:14:48.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.223" endtime="20201029 18:14:48.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.223" endtime="20201029 18:14:48.603"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.610" endtime="20201029 18:14:48.621"></status>
</kw>
<msg timestamp="20201029 18:14:48.622" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.609" endtime="20201029 18:14:48.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.624" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.623" endtime="20201029 18:14:48.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.625" endtime="20201029 18:14:48.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.606" endtime="20201029 18:14:48.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.605" endtime="20201029 18:14:48.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.636" endtime="20201029 18:14:48.949"></status>
</kw>
<msg timestamp="20201029 18:14:48.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.022309306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.022310153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.634" endtime="20201029 18:14:48.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.022309306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.022310153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.954" endtime="20201029 18:14:48.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.964" endtime="20201029 18:14:48.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.631" endtime="20201029 18:14:48.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.628" endtime="20201029 18:14:48.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:48.971" level="INFO">${RESULT} = [{'diff': 8.469999999149991e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.19000000262804e-07}, {'diff': 8.339999997275527e-07}, {'diff': 8.340000006157311e-07}, {'diff': 8.469999999149991e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:48.968" endtime="20201029 18:14:48.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:48.976" level="INFO">${OVERHEAD} = {'diff': [8.469999999149991e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.340000006157311e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.19000...</msg>
<status status="PASS" starttime="20201029 18:14:48.972" endtime="20201029 18:14:48.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.980" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:48.979" endtime="20201029 18:14:48.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.984" level="INFO">VALUE: [8.469999999149991e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.340000006157311e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.340000006157311e-07, 8.479999999977395e-07, 8.609999992970074e-07, 8.479999999977395e-07, 8.330000005329907e-07, 1.304999999618417e-06, 8.200000003455443e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.199999994573659e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.750000004553726e-07, 8.330000005329907e-07, 8.340000006157311e-07, 8.609999992970074e-07, 8.060000000753575e-07, 7.77000000340422e-07, 8.339999997275527e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.189999993746255e-07, 8.049999999926172e-07, 8.330000005329907e-07, 8.049999999926172e-07, 8.610000001851859e-07, 8.339999997275527e-07, 8.340000006157311e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.479999999977395e-07, 8.19000000262804e-07, 7.910000006106088e-07, 8.329999996448123e-07, 8.19000000262804e-07, 7.499999998827889e-07, 8.049999999926172e-07, 8.189999993746255e-07, 8.340000006157311e-07, 8.189999993746255e-07, 8.469999999149991e-07, 8.750000004553726e-07, 8.479999999977395e-07, 8.19000000262804e-07]</msg>
<status status="PASS" starttime="20201029 18:14:48.981" endtime="20201029 18:14:48.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.977" endtime="20201029 18:14:48.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.603" endtime="20201029 18:14:48.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.603" endtime="20201029 18:14:48.986"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.994" endtime="20201029 18:14:49.005"></status>
</kw>
<msg timestamp="20201029 18:14:49.005" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.992" endtime="20201029 18:14:49.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.008" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.006" endtime="20201029 18:14:49.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.009" endtime="20201029 18:14:49.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.990" endtime="20201029 18:14:49.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.988" endtime="20201029 18:14:49.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.019" endtime="20201029 18:14:49.315"></status>
</kw>
<msg timestamp="20201029 18:14:49.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.391784194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.391785042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.018" endtime="20201029 18:14:49.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.391784194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.391785042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.320" endtime="20201029 18:14:49.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.330" endtime="20201029 18:14:49.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.015" endtime="20201029 18:14:49.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.012" endtime="20201029 18:14:49.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:49.337" level="INFO">${RESULT} = [{'diff': 8.479999999977395e-07}, {'diff': 8.19000000262804e-07}, {'diff': 7.910000006106088e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.19000000262804e-07}, {'diff': 7.499999998827889e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:49.334" endtime="20201029 18:14:49.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:49.343" level="INFO">${OVERHEAD} = {'diff': [8.479999999977395e-07, 8.19000000262804e-07, 7.910000006106088e-07, 8.329999996448123e-07, 8.19000000262804e-07, 7.499999998827889e-07, 8.049999999926172e-07, 8.189999993746255e-07, 8.340000...</msg>
<status status="PASS" starttime="20201029 18:14:49.338" endtime="20201029 18:14:49.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.347" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:49.346" endtime="20201029 18:14:49.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.350" level="INFO">VALUE: [8.479999999977395e-07, 8.19000000262804e-07, 7.910000006106088e-07, 8.329999996448123e-07, 8.19000000262804e-07, 7.499999998827889e-07, 8.049999999926172e-07, 8.189999993746255e-07, 8.340000006157311e-07, 8.189999993746255e-07, 8.469999999149991e-07, 8.750000004553726e-07, 8.479999999977395e-07, 8.19000000262804e-07, 1.292000000319149e-06, 8.189999993746255e-07, 7.640000001529756e-07, 8.469999999149991e-07, 8.620000002679262e-07, 8.339999997275527e-07, 8.609999992970074e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.189999993746255e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.200000003455443e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.470000008031775e-07, 8.060000000753575e-07, 8.88999999837381e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.340000006157311e-07, 8.479999999977395e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.339999997275527e-07, 7.920000006933492e-07, 8.339999997275527e-07, 8.049999999926172e-07, 8.19000000262804e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.340000006157311e-07, 8.049999999926172e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.189999993746255e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.330000005329907e-07, 8.330000005329907e-07]</msg>
<status status="PASS" starttime="20201029 18:14:49.348" endtime="20201029 18:14:49.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.344" endtime="20201029 18:14:49.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.986" endtime="20201029 18:14:49.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.986" endtime="20201029 18:14:49.352"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.360" endtime="20201029 18:14:49.371"></status>
</kw>
<msg timestamp="20201029 18:14:49.371" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.358" endtime="20201029 18:14:49.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.374" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.372" endtime="20201029 18:14:49.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.375" endtime="20201029 18:14:49.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.355" endtime="20201029 18:14:49.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.354" endtime="20201029 18:14:49.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.385" endtime="20201029 18:14:49.718"></status>
</kw>
<msg timestamp="20201029 18:14:49.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.765048778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.765049597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.384" endtime="20201029 18:14:49.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.765048778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.765049597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.723" endtime="20201029 18:14:49.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.733" endtime="20201029 18:14:49.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.381" endtime="20201029 18:14:49.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.379" endtime="20201029 18:14:49.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:49.740" level="INFO">${RESULT} = [{'diff': 8.19000000262804e-07}, {'diff': 8.330000005329907e-07}, {'diff': 8.340000006157311e-07}, {'diff': 8.049999999926172e-07}, {'diff': 8.339999997275527e-07}, {'diff': 8.330000005329907e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:49.737" endtime="20201029 18:14:49.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:49.745" level="INFO">${OVERHEAD} = {'diff': [8.19000000262804e-07, 8.330000005329907e-07, 8.340000006157311e-07, 8.049999999926172e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.18999...</msg>
<status status="PASS" starttime="20201029 18:14:49.741" endtime="20201029 18:14:49.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.750" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:49.748" endtime="20201029 18:14:49.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.752" level="INFO">VALUE: [8.19000000262804e-07, 8.330000005329907e-07, 8.340000006157311e-07, 8.049999999926172e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.189999993746255e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.330000005329907e-07, 8.330000005329907e-07, 1.292000000319149e-06, 8.329999996448123e-07, 8.329999996448123e-07, 8.199999994573659e-07, 8.339999997275527e-07, 9.170000003777545e-07, 8.88999999837381e-07, 8.329999996448123e-07, 8.199999994573659e-07, 8.199999994573659e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.189999993746255e-07, 8.339999997275527e-07, 8.470000008031775e-07, 8.330000005329907e-07, 8.479999999977395e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.200000003455443e-07, 8.189999993746255e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.339999997275527e-07, 9.020000000248274e-07, 8.610000001851859e-07, 7.77999999534984e-07, 8.610000001851859e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.749999995671942e-07, 8.060000000753575e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.470000008031775e-07, 8.330000005329907e-07, 8.060000000753575e-07, 8.19000000262804e-07, 8.200000003455443e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.470000008031775e-07]</msg>
<status status="PASS" starttime="20201029 18:14:49.751" endtime="20201029 18:14:49.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.746" endtime="20201029 18:14:49.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.352" endtime="20201029 18:14:49.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.352" endtime="20201029 18:14:49.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.099" endtime="20201029 18:14:49.754"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:42.028" endtime="20201029 18:14:49.754" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:49.761" endtime="20201029 18:14:49.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.760" endtime="20201029 18:14:49.782"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.798" endtime="20201029 18:14:49.812"></status>
</kw>
<msg timestamp="20201029 18:14:49.813" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.797" endtime="20201029 18:14:49.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.815" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.814" endtime="20201029 18:14:49.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.818" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:49.816" endtime="20201029 18:14:49.819"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:49.794" endtime="20201029 18:14:49.819"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:49.791" endtime="20201029 18:14:49.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.790" endtime="20201029 18:14:49.820"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:49.824" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:49.823" endtime="20201029 18:14:49.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.821" endtime="20201029 18:14:49.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.789" endtime="20201029 18:14:49.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.788" endtime="20201029 18:14:49.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.826" endtime="20201029 18:14:49.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.784" endtime="20201029 18:14:49.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.782" endtime="20201029 18:14:49.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.759" endtime="20201029 18:14:49.829"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.838" endtime="20201029 18:14:49.855"></status>
</kw>
<msg timestamp="20201029 18:14:49.856" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.836" endtime="20201029 18:14:49.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.859" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.857" endtime="20201029 18:14:49.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.860" endtime="20201029 18:14:49.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.833" endtime="20201029 18:14:49.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.831" endtime="20201029 18:14:49.862"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.865" endtime="20201029 18:14:49.866"></status>
</kw>
<msg timestamp="20201029 18:14:49.867" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:14:49.863" endtime="20201029 18:14:49.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.871" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:49.870" endtime="20201029 18:14:49.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.874" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:49.872" endtime="20201029 18:14:49.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.867" endtime="20201029 18:14:49.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.880" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:49.878" endtime="20201029 18:14:49.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.882" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:49.881" endtime="20201029 18:14:49.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.876" endtime="20201029 18:14:49.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.890" endtime="20201029 18:14:50.171"></status>
</kw>
<msg timestamp="20201029 18:14:50.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068346889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068350778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.888" endtime="20201029 18:14:50.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068346889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068350778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.175" endtime="20201029 18:14:50.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.184" endtime="20201029 18:14:50.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.885" endtime="20201029 18:14:50.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.883" endtime="20201029 18:14:50.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:50.191" level="INFO">${RESULT} = [{'diff': 3.889000000006915e-06}, {'diff': 2.8200000000006e-06}, {'diff': 2.833000000007635e-06}, {'diff': 2.833000000007635e-06}, {'diff': 2.819000000001126e-06}, {'diff': 2.805999999994091e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:50.187" endtime="20201029 18:14:50.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:50.195" level="INFO">${OVERHEAD} = {'diff': [3.889000000006915e-06, 2.8200000000006e-06, 2.833000000007635e-06, 2.833000000007635e-06, 2.819000000001126e-06, 2.805999999994091e-06, 2.832999999993757e-06, 2.819999999986722e-06, 2.834000...</msg>
<status status="PASS" starttime="20201029 18:14:50.192" endtime="20201029 18:14:50.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.200" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:14:50.199" endtime="20201029 18:14:50.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.203" level="INFO">VALUE: [3.889000000006915e-06, 2.8200000000006e-06, 2.833000000007635e-06, 2.833000000007635e-06, 2.819000000001126e-06, 2.805999999994091e-06, 2.832999999993757e-06, 2.819999999986722e-06, 2.8340000000071086e-06, 2.832999999993757e-06, 2.819000000001126e-06, 2.8200000000006e-06, 2.8200000000006e-06, 2.76400000000232e-06, 2.8200000000006e-06, 2.777999999994951e-06, 2.8200000000006e-06, 2.8479999999997396e-06, 2.819000000001126e-06, 2.819000000001126e-06, 2.819000000001126e-06, 2.847000000000266e-06, 2.8049999999946174e-06, 2.833999999993231e-06, 2.847000000000266e-06, 2.832999999993757e-06, 2.8200000000006e-06, 2.805000000008495e-06, 2.833000000007635e-06, 2.8479999999997396e-06, 2.819000000001126e-06, 2.847000000000266e-06, 2.8200000000006e-06, 2.819000000001126e-06, 2.819000000001126e-06, 2.819000000001126e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 2.8200000000006e-06, 2.833000000007635e-06, 2.819000000001126e-06, 2.8479999999997396e-06, 2.832999999993757e-06, 2.8340000000071086e-06, 2.819000000001126e-06, 2.8200000000006e-06, 2.791999999987582e-06, 2.76400000000232e-06, 2.805999999994091e-06, 2.8049999999946174e-06]</msg>
<status status="PASS" starttime="20201029 18:14:50.202" endtime="20201029 18:14:50.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.196" endtime="20201029 18:14:50.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.829" endtime="20201029 18:14:50.204"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:49.756" endtime="20201029 18:14:50.205" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:50.212" endtime="20201029 18:14:50.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.210" endtime="20201029 18:14:50.232"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.246" endtime="20201029 18:14:50.260"></status>
</kw>
<msg timestamp="20201029 18:14:50.260" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.244" endtime="20201029 18:14:50.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.263" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.262" endtime="20201029 18:14:50.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.266" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:50.264" endtime="20201029 18:14:50.266"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:50.241" endtime="20201029 18:14:50.267"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:50.239" endtime="20201029 18:14:50.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.237" endtime="20201029 18:14:50.268"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:50.272" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:50.271" endtime="20201029 18:14:50.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.269" endtime="20201029 18:14:50.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.236" endtime="20201029 18:14:50.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.236" endtime="20201029 18:14:50.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.274" endtime="20201029 18:14:50.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.234" endtime="20201029 18:14:50.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.233" endtime="20201029 18:14:50.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.209" endtime="20201029 18:14:50.277"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.287" endtime="20201029 18:14:50.333"></status>
</kw>
<msg timestamp="20201029 18:14:50.334" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.284" endtime="20201029 18:14:50.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.337" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.335" endtime="20201029 18:14:50.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.338" endtime="20201029 18:14:50.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.281" endtime="20201029 18:14:50.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.279" endtime="20201029 18:14:50.340"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.343" endtime="20201029 18:14:50.344"></status>
</kw>
<msg timestamp="20201029 18:14:50.345" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:14:50.341" endtime="20201029 18:14:50.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.349" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:50.348" endtime="20201029 18:14:50.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.351" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:50.350" endtime="20201029 18:14:50.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.345" endtime="20201029 18:14:50.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.356" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:50.355" endtime="20201029 18:14:50.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.359" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:50.357" endtime="20201029 18:14:50.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.352" endtime="20201029 18:14:50.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.366" endtime="20201029 18:14:50.654"></status>
</kw>
<msg timestamp="20201029 18:14:50.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067819694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067839694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.365" endtime="20201029 18:14:50.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067819694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067839694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.658" endtime="20201029 18:14:50.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.666" endtime="20201029 18:14:50.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.362" endtime="20201029 18:14:50.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.360" endtime="20201029 18:14:50.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:50.673" level="INFO">${RESULT} = [{'diff': 2.0000000000006124e-05}, {'diff': 1.9707999999993286e-05}, {'diff': 1.9708000000007164e-05}, {'diff': 1.9680000000008024e-05}, {'diff': 1.9694000000000655e-05}, {'diff': 1.9694000000000655e-...</msg>
<status status="PASS" starttime="20201029 18:14:50.670" endtime="20201029 18:14:50.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:50.678" level="INFO">${OVERHEAD} = {'diff': [2.0000000000006124e-05, 1.9707999999993286e-05, 1.9708000000007164e-05, 1.9680000000008024e-05, 1.9694000000000655e-05, 1.9694000000000655e-05, 1.9763999999991566e-05, 1.9694000000000655e-05...</msg>
<status status="PASS" starttime="20201029 18:14:50.674" endtime="20201029 18:14:50.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.683" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 18:14:50.682" endtime="20201029 18:14:50.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.686" level="INFO">VALUE: [2.0000000000006124e-05, 1.9707999999993286e-05, 1.9708000000007164e-05, 1.9680000000008024e-05, 1.9694000000000655e-05, 1.9694000000000655e-05, 1.9763999999991566e-05, 1.9694000000000655e-05, 1.9708000000007164e-05, 1.9723000000013147e-05, 1.969500000000013e-05, 1.9694000000000655e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9681000000007498e-05, 1.962499999999534e-05, 1.962499999999534e-05, 1.9694000000000655e-05, 1.968099999999362e-05, 1.9707999999993286e-05, 1.9694000000000655e-05, 1.9679999999994147e-05, 1.9708000000007164e-05, 1.9694000000000655e-05, 1.969500000000013e-05, 1.9736000000006304e-05, 1.969500000000013e-05, 1.969500000000013e-05, 1.9666000000001516e-05, 1.969500000000013e-05, 1.969500000000013e-05, 1.9694000000000655e-05, 1.9680000000008024e-05, 1.9666000000001516e-05, 1.9694000000000655e-05, 1.9680000000008024e-05, 1.966700000000099e-05, 1.9694000000000655e-05, 1.969500000000013e-05, 1.9708000000007164e-05, 1.969500000000013e-05, 1.9737000000005778e-05, 1.9679999999994147e-05, 1.969500000000013e-05, 1.970899999999276e-05, 1.9679999999994147e-05, 1.969500000000013e-05, 1.9707999999993286e-05, 1.966700000000099e-05, 1.9709000000006638e-05]</msg>
<status status="PASS" starttime="20201029 18:14:50.684" endtime="20201029 18:14:50.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.679" endtime="20201029 18:14:50.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.277" endtime="20201029 18:14:50.687"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:50.206" endtime="20201029 18:14:50.688" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:50.696" endtime="20201029 18:14:50.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.695" endtime="20201029 18:14:50.716"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.730" endtime="20201029 18:14:50.744"></status>
</kw>
<msg timestamp="20201029 18:14:50.744" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.728" endtime="20201029 18:14:50.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.747" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.745" endtime="20201029 18:14:50.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.750" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:50.748" endtime="20201029 18:14:50.750"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:50.725" endtime="20201029 18:14:50.751"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:50.723" endtime="20201029 18:14:50.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.721" endtime="20201029 18:14:50.751"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:50.755" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:50.754" endtime="20201029 18:14:50.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.752" endtime="20201029 18:14:50.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.721" endtime="20201029 18:14:50.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.720" endtime="20201029 18:14:50.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.758" endtime="20201029 18:14:50.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.719" endtime="20201029 18:14:50.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.717" endtime="20201029 18:14:50.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.693" endtime="20201029 18:14:50.761"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.769" endtime="20201029 18:14:50.886"></status>
</kw>
<msg timestamp="20201029 18:14:50.886" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.767" endtime="20201029 18:14:50.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.889" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.887" endtime="20201029 18:14:50.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.890" endtime="20201029 18:14:50.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.765" endtime="20201029 18:14:50.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.763" endtime="20201029 18:14:50.893"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.895" endtime="20201029 18:14:50.896"></status>
</kw>
<msg timestamp="20201029 18:14:50.897" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:14:50.893" endtime="20201029 18:14:50.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.901" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:50.900" endtime="20201029 18:14:50.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.903" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:50.902" endtime="20201029 18:14:50.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.897" endtime="20201029 18:14:50.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.907" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:50.906" endtime="20201029 18:14:50.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.910" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:50.908" endtime="20201029 18:14:50.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.904" endtime="20201029 18:14:50.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.917" endtime="20201029 18:14:51.228"></status>
</kw>
<msg timestamp="20201029 18:14:51.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066271861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066309458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.915" endtime="20201029 18:14:51.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066271861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066309458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.232" endtime="20201029 18:14:51.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.240" endtime="20201029 18:14:51.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.913" endtime="20201029 18:14:51.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.911" endtime="20201029 18:14:51.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:51.248" level="INFO">${RESULT} = [{'diff': 3.7597000000000325e-05}, {'diff': 3.7152999999998104e-05}, {'diff': 3.717999999999777e-05}, {'diff': 3.716700000000461e-05}, {'diff': 3.713900000000547e-05}, {'diff': 3.7138999999991595e-05}...</msg>
<status status="PASS" starttime="20201029 18:14:51.244" endtime="20201029 18:14:51.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:51.252" level="INFO">${OVERHEAD} = {'diff': [3.7597000000000325e-05, 3.7152999999998104e-05, 3.717999999999777e-05, 3.716700000000461e-05, 3.713900000000547e-05, 3.7138999999991595e-05, 3.7152999999998104e-05, 3.713900000000547e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:14:51.249" endtime="20201029 18:14:51.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.256" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 18:14:51.255" endtime="20201029 18:14:51.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.259" level="INFO">VALUE: [3.7597000000000325e-05, 3.7152999999998104e-05, 3.717999999999777e-05, 3.716700000000461e-05, 3.713900000000547e-05, 3.7138999999991595e-05, 3.7152999999998104e-05, 3.713900000000547e-05, 3.7138999999991595e-05, 3.720799999999691e-05, 3.716700000000461e-05, 3.722199999998954e-05, 3.716700000000461e-05, 3.7152999999998104e-05, 3.7180999999997244e-05, 3.715199999999863e-05, 3.711199999999193e-05, 3.713900000000547e-05, 3.719500000000375e-05, 3.7152999999998104e-05, 3.7208999999996384e-05, 3.7152999999998104e-05, 3.717999999999777e-05, 3.7152999999998104e-05, 3.716700000000461e-05, 3.7152999999998104e-05, 3.7152999999998104e-05, 3.7166999999990735e-05, 3.7166999999990735e-05, 3.7166999999990735e-05, 3.7138999999991595e-05, 3.7138999999991595e-05, 3.7152999999984226e-05, 3.722200000000342e-05, 3.716700000000461e-05, 3.716600000000514e-05, 3.716700000000461e-05, 3.7152999999984226e-05, 3.7138999999991595e-05, 3.715199999998475e-05, 3.715199999998475e-05, 3.7138999999991595e-05, 3.716600000000514e-05, 3.716600000000514e-05, 3.7138999999991595e-05, 3.722300000000289e-05, 3.716700000000461e-05, 3.7152999999984226e-05, 3.716700000000461e-05, 3.716600000000514e-05]</msg>
<status status="PASS" starttime="20201029 18:14:51.258" endtime="20201029 18:14:51.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.253" endtime="20201029 18:14:51.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.761" endtime="20201029 18:14:51.260"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:50.691" endtime="20201029 18:14:51.261" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:51.268" endtime="20201029 18:14:51.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.266" endtime="20201029 18:14:51.288"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.302" endtime="20201029 18:14:51.316"></status>
</kw>
<msg timestamp="20201029 18:14:51.316" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.300" endtime="20201029 18:14:51.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.319" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.317" endtime="20201029 18:14:51.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.322" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:51.320" endtime="20201029 18:14:51.322"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:51.296" endtime="20201029 18:14:51.323"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:51.294" endtime="20201029 18:14:51.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.293" endtime="20201029 18:14:51.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:51.327" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:51.327" endtime="20201029 18:14:51.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.324" endtime="20201029 18:14:51.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.292" endtime="20201029 18:14:51.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.291" endtime="20201029 18:14:51.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.329" endtime="20201029 18:14:51.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.290" endtime="20201029 18:14:51.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.288" endtime="20201029 18:14:51.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.265" endtime="20201029 18:14:51.332"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.341" endtime="20201029 18:14:51.360"></status>
</kw>
<msg timestamp="20201029 18:14:51.360" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.340" endtime="20201029 18:14:51.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.363" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.361" endtime="20201029 18:14:51.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.364" endtime="20201029 18:14:51.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.337" endtime="20201029 18:14:51.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.335" endtime="20201029 18:14:51.366"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.369" endtime="20201029 18:14:51.370"></status>
</kw>
<msg timestamp="20201029 18:14:51.371" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:14:51.367" endtime="20201029 18:14:51.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.375" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:51.374" endtime="20201029 18:14:51.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.377" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:51.376" endtime="20201029 18:14:51.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.371" endtime="20201029 18:14:51.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.381" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:51.380" endtime="20201029 18:14:51.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.383" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:51.382" endtime="20201029 18:14:51.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.378" endtime="20201029 18:14:51.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.392" endtime="20201029 18:14:51.682"></status>
</kw>
<msg timestamp="20201029 18:14:51.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066039847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066040958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.391" endtime="20201029 18:14:51.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066039847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066040958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.686" endtime="20201029 18:14:51.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.695" endtime="20201029 18:14:51.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.387" endtime="20201029 18:14:51.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.385" endtime="20201029 18:14:51.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:51.702" level="INFO">${RESULT} = [{'diff': 1.1109999999980857e-06}, {'diff': 9.170000000030543e-07}, {'diff': 9.169999999891765e-07}, {'diff': 9.309999999956853e-07}, {'diff': 9.309999999956853e-07}, {'diff': 9.310000000095631e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:14:51.698" endtime="20201029 18:14:51.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:51.706" level="INFO">${OVERHEAD} = {'diff': [1.1109999999980857e-06, 9.170000000030543e-07, 9.169999999891765e-07, 9.309999999956853e-07, 9.309999999956853e-07, 9.310000000095631e-07, 9.299999999962116e-07, 9.310000000095631e-07, 9.439...</msg>
<status status="PASS" starttime="20201029 18:14:51.703" endtime="20201029 18:14:51.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.711" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 18:14:51.710" endtime="20201029 18:14:51.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.713" level="INFO">VALUE: [1.1109999999980857e-06, 9.170000000030543e-07, 9.169999999891765e-07, 9.309999999956853e-07, 9.309999999956853e-07, 9.310000000095631e-07, 9.299999999962116e-07, 9.310000000095631e-07, 9.439999999888427e-07, 9.450000000021941e-07, 9.450000000021941e-07, 9.299999999962116e-07, 9.299999999962116e-07, 9.580000000092292e-07, 9.310000000095631e-07, 9.450000000021941e-07, 9.299999999962116e-07, 9.309999999956853e-07, 9.299999999962116e-07, 9.439999999888427e-07, 9.309999999956853e-07, 9.720000000018603e-07, 9.169999999891765e-07, 9.440000000027204e-07, 9.169999999891765e-07, 9.299999999962116e-07, 9.450000000021941e-07, 9.309999999956853e-07, 9.309999999956853e-07, 9.440000000027204e-07, 9.440000000027204e-07, 9.300000000100894e-07, 9.450000000021941e-07, 9.169999999891765e-07, 9.309999999956853e-07, 9.309999999956853e-07, 1.000000000001e-06, 9.310000000095631e-07, 9.029999999965455e-07, 8.469999999982658e-07, 9.309999999956853e-07, 9.440000000027204e-07, 9.300000000100894e-07, 9.440000000027204e-07, 9.440000000027204e-07, 9.300000000100894e-07, 9.310000000095631e-07, 9.439999999888427e-07, 9.300000000100894e-07, 9.300000000100894e-07]</msg>
<status status="PASS" starttime="20201029 18:14:51.712" endtime="20201029 18:14:51.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.707" endtime="20201029 18:14:51.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.332" endtime="20201029 18:14:51.715"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:51.262" endtime="20201029 18:14:51.715" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:51.722" endtime="20201029 18:14:51.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.721" endtime="20201029 18:14:51.742"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.757" endtime="20201029 18:14:51.777"></status>
</kw>
<msg timestamp="20201029 18:14:51.779" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.755" endtime="20201029 18:14:51.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.787" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.782" endtime="20201029 18:14:51.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.798" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:51.791" endtime="20201029 18:14:51.799"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:51.752" endtime="20201029 18:14:51.801"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:51.750" endtime="20201029 18:14:51.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.749" endtime="20201029 18:14:51.804"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:51.813" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:51.811" endtime="20201029 18:14:51.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.806" endtime="20201029 18:14:51.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.748" endtime="20201029 18:14:51.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.747" endtime="20201029 18:14:51.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.817" endtime="20201029 18:14:51.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.746" endtime="20201029 18:14:51.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.743" endtime="20201029 18:14:51.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.719" endtime="20201029 18:14:51.823"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.842" endtime="20201029 18:14:51.891"></status>
</kw>
<msg timestamp="20201029 18:14:51.892" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.839" endtime="20201029 18:14:51.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.894" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.893" endtime="20201029 18:14:51.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.895" endtime="20201029 18:14:51.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.832" endtime="20201029 18:14:51.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.827" endtime="20201029 18:14:51.898"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.900" endtime="20201029 18:14:51.903"></status>
</kw>
<msg timestamp="20201029 18:14:51.903" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:14:51.899" endtime="20201029 18:14:51.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.908" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:51.906" endtime="20201029 18:14:51.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.910" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:51.909" endtime="20201029 18:14:51.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.904" endtime="20201029 18:14:51.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.915" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:51.914" endtime="20201029 18:14:51.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.917" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:51.916" endtime="20201029 18:14:51.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.911" endtime="20201029 18:14:51.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.925" endtime="20201029 18:14:52.221"></status>
</kw>
<msg timestamp="20201029 18:14:52.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.114546903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.114555458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.923" endtime="20201029 18:14:52.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.114546903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.114555458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.225" endtime="20201029 18:14:52.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.233" endtime="20201029 18:14:52.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.921" endtime="20201029 18:14:52.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.918" endtime="20201029 18:14:52.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:52.240" level="INFO">${RESULT} = [{'diff': 8.554999999993429e-06}, {'diff': 8.402999999990168e-06}, {'diff': 8.416999999996677e-06}, {'diff': 8.401999999990695e-06}, {'diff': 8.403000000004046e-06}, {'diff': 8.375000000004906e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:52.237" endtime="20201029 18:14:52.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:52.245" level="INFO">${OVERHEAD} = {'diff': [8.554999999993429e-06, 8.402999999990168e-06, 8.416999999996677e-06, 8.401999999990695e-06, 8.403000000004046e-06, 8.375000000004906e-06, 8.458000000002852e-06, 8.402000000004572e-06, 8.3890...</msg>
<status status="PASS" starttime="20201029 18:14:52.241" endtime="20201029 18:14:52.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.250" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 18:14:52.249" endtime="20201029 18:14:52.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.252" level="INFO">VALUE: [8.554999999993429e-06, 8.402999999990168e-06, 8.416999999996677e-06, 8.401999999990695e-06, 8.403000000004046e-06, 8.375000000004906e-06, 8.458000000002852e-06, 8.402000000004572e-06, 8.389000000011415e-06, 8.403000000004046e-06, 8.416999999996677e-06, 8.402000000004572e-06, 8.402999999990168e-06, 8.389000000011415e-06, 8.388999999997537e-06, 8.443999999996343e-06, 8.402999999990168e-06, 8.458000000002852e-06, 8.389000000011415e-06, 8.388999999997537e-06, 8.402999999990168e-06, 8.403000000017924e-06, 8.388999999997537e-06, 8.4169999999828e-06, 8.40200000001845e-06, 8.388999999997537e-06, 8.401999999990695e-06, 8.402999999990168e-06, 8.375000000004906e-06, 8.431000000003186e-06, 8.388999999997537e-06, 8.402999999990168e-06, 8.403000000017924e-06, 8.403000000017924e-06, 8.4169999999828e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.402999999990168e-06, 8.402999999990168e-06, 8.375000000004906e-06, 8.40200000001845e-06, 8.45800000001673e-06, 8.402999999990168e-06, 8.389000000025293e-06, 8.401999999990695e-06, 8.375000000004906e-06, 8.402999999990168e-06, 8.444999999995817e-06, 8.402999999990168e-06, 8.444999999995817e-06]</msg>
<status status="PASS" starttime="20201029 18:14:52.251" endtime="20201029 18:14:52.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.246" endtime="20201029 18:14:52.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.824" endtime="20201029 18:14:52.254"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:51.717" endtime="20201029 18:14:52.254" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:52.261" endtime="20201029 18:14:52.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.260" endtime="20201029 18:14:52.281"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.295" endtime="20201029 18:14:52.309"></status>
</kw>
<msg timestamp="20201029 18:14:52.310" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.293" endtime="20201029 18:14:52.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.313" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.311" endtime="20201029 18:14:52.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.316" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:52.314" endtime="20201029 18:14:52.316"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:52.291" endtime="20201029 18:14:52.317"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:52.288" endtime="20201029 18:14:52.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.287" endtime="20201029 18:14:52.318"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:52.322" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:52.321" endtime="20201029 18:14:52.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.319" endtime="20201029 18:14:52.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.286" endtime="20201029 18:14:52.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.285" endtime="20201029 18:14:52.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.323" endtime="20201029 18:14:52.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.284" endtime="20201029 18:14:52.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.282" endtime="20201029 18:14:52.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.259" endtime="20201029 18:14:52.326"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.339" endtime="20201029 18:14:52.458"></status>
</kw>
<msg timestamp="20201029 18:14:52.458" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.337" endtime="20201029 18:14:52.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.461" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.459" endtime="20201029 18:14:52.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.463" endtime="20201029 18:14:52.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.334" endtime="20201029 18:14:52.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.328" endtime="20201029 18:14:52.466"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.470" endtime="20201029 18:14:52.474"></status>
</kw>
<msg timestamp="20201029 18:14:52.475" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:14:52.468" endtime="20201029 18:14:52.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.483" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:52.482" endtime="20201029 18:14:52.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.485" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:52.484" endtime="20201029 18:14:52.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.477" endtime="20201029 18:14:52.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.492" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:52.490" endtime="20201029 18:14:52.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.496" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:52.494" endtime="20201029 18:14:52.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.487" endtime="20201029 18:14:52.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.506" endtime="20201029 18:14:52.805"></status>
</kw>
<msg timestamp="20201029 18:14:52.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071788736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071804458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.505" endtime="20201029 18:14:52.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071788736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071804458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.809" endtime="20201029 18:14:52.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.818" endtime="20201029 18:14:52.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.501" endtime="20201029 18:14:52.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.498" endtime="20201029 18:14:52.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:52.825" level="INFO">${RESULT} = [{'diff': 1.5721999999995795e-05}, {'diff': 1.5583999999999043e-05}, {'diff': 1.5570000000006412e-05}, {'diff': 1.5555999999999903e-05}, {'diff': 1.558299999999957e-05}, {'diff': 1.558299999999957e-05...</msg>
<status status="PASS" starttime="20201029 18:14:52.821" endtime="20201029 18:14:52.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:52.830" level="INFO">${OVERHEAD} = {'diff': [1.5721999999995795e-05, 1.5583999999999043e-05, 1.5570000000006412e-05, 1.5555999999999903e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:14:52.826" endtime="20201029 18:14:52.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.835" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 18:14:52.834" endtime="20201029 18:14:52.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.837" level="INFO">VALUE: [1.5721999999995795e-05, 1.5583999999999043e-05, 1.5570000000006412e-05, 1.5555999999999903e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.556899999999306e-05, 1.5541999999993394e-05, 1.5528000000000763e-05, 1.556899999999306e-05, 1.562499999999134e-05, 1.558299999999957e-05, 1.561099999999871e-05, 1.5597000000006078e-05, 1.556900000000694e-05, 1.563899999999785e-05, 1.5569999999992534e-05, 1.558400000001292e-05, 1.5583999999999043e-05, 1.558299999999957e-05, 1.5570000000006412e-05, 1.558299999999957e-05, 1.5569999999992534e-05, 1.556900000000694e-05, 1.5597000000006078e-05, 1.5583000000013447e-05, 1.5513999999994255e-05, 1.556899999999306e-05, 1.5569000000020816e-05, 1.5569999999992534e-05, 1.558400000001292e-05, 1.5583000000013447e-05, 1.558400000001292e-05, 1.5597000000006078e-05, 1.558299999998569e-05, 1.555500000000043e-05, 1.555500000000043e-05, 1.5569999999992534e-05, 1.556899999999306e-05, 1.5583000000013447e-05, 1.5583999999985165e-05, 1.558299999998569e-05, 1.5527000000015168e-05, 1.5555999999999903e-05, 1.5555999999999903e-05, 1.5569999999992534e-05, 1.5598000000005552e-05, 1.556899999999306e-05]</msg>
<status status="PASS" starttime="20201029 18:14:52.836" endtime="20201029 18:14:52.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.831" endtime="20201029 18:14:52.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.327" endtime="20201029 18:14:52.839"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:52.256" endtime="20201029 18:14:52.839" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:52.846" endtime="20201029 18:14:52.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.845" endtime="20201029 18:14:52.866"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.880" endtime="20201029 18:14:52.894"></status>
</kw>
<msg timestamp="20201029 18:14:52.894" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.878" endtime="20201029 18:14:52.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.898" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.896" endtime="20201029 18:14:52.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.902" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:52.899" endtime="20201029 18:14:52.902"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:52.875" endtime="20201029 18:14:52.903"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:52.873" endtime="20201029 18:14:52.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.872" endtime="20201029 18:14:52.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:52.908" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:52.907" endtime="20201029 18:14:52.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.905" endtime="20201029 18:14:52.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.871" endtime="20201029 18:14:52.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.870" endtime="20201029 18:14:52.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.909" endtime="20201029 18:14:52.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.869" endtime="20201029 18:14:52.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.867" endtime="20201029 18:14:52.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.843" endtime="20201029 18:14:52.912"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.916" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:52.924" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:54.206" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:52.914" endtime="20201029 18:14:54.207"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.210" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:14:54.209" endtime="20201029 18:14:54.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.913" endtime="20201029 18:14:54.211"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:54.214" endtime="20201029 18:14:54.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.213" endtime="20201029 18:14:54.235"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.243" endtime="20201029 18:14:54.251"></status>
</kw>
<msg timestamp="20201029 18:14:54.252" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.242" endtime="20201029 18:14:54.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.254" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.253" endtime="20201029 18:14:54.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.255" endtime="20201029 18:14:54.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.239" endtime="20201029 18:14:54.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.237" endtime="20201029 18:14:54.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.265" endtime="20201029 18:14:54.554"></status>
</kw>
<msg timestamp="20201029 18:14:54.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018686444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018690472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.263" endtime="20201029 18:14:54.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018686444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018690472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.558" endtime="20201029 18:14:54.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.567" endtime="20201029 18:14:54.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.260" endtime="20201029 18:14:54.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.259" endtime="20201029 18:14:54.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:54.574" level="INFO">${PHILIP_RES} = [{'diff': 4.027999999999671e-06}, {'diff': 2.722000000000141e-06}, {'diff': 2.737000000002654e-06}, {'diff': 2.722000000000141e-06}, {'diff': 2.76400000000232e-06}, {'diff': 2.749999999999281e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:54.571" endtime="20201029 18:14:54.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:54.580" level="INFO">${RESULT} = {'diff': [4.027999999999671e-06, 2.722000000000141e-06, 2.737000000002654e-06, 2.722000000000141e-06, 2.76400000000232e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.73599...</msg>
<status status="PASS" starttime="20201029 18:14:54.575" endtime="20201029 18:14:54.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.584" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:54.583" endtime="20201029 18:14:54.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.589" level="INFO">VALUE: [4.027999999999671e-06, 2.722000000000141e-06, 2.737000000002654e-06, 2.722000000000141e-06, 2.76400000000232e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7500000000027502e-06, 2.722000000000141e-06, 2.7770000000024164e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.7219999999966715e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.7229999999996146e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7090000000000447e-06, 2.708000000000571e-06, 2.7369999999991845e-06, 2.7360000000031803e-06, 2.7090000000000447e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.708000000000571e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.749999999999281e-06, 2.708000000000571e-06, 2.7229999999996146e-06, 2.7360000000031803e-06, 2.7229999999996146e-06, 2.735999999999711e-06]</msg>
<status status="PASS" starttime="20201029 18:14:54.586" endtime="20201029 18:14:54.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.581" endtime="20201029 18:14:54.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.235" endtime="20201029 18:14:54.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.212" endtime="20201029 18:14:54.592"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:54.595" endtime="20201029 18:14:54.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.593" endtime="20201029 18:14:54.617"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.626" endtime="20201029 18:14:54.634"></status>
</kw>
<msg timestamp="20201029 18:14:54.634" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.624" endtime="20201029 18:14:54.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.637" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.635" endtime="20201029 18:14:54.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.638" endtime="20201029 18:14:54.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.622" endtime="20201029 18:14:54.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.619" endtime="20201029 18:14:54.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.647" endtime="20201029 18:14:54.939"></status>
</kw>
<msg timestamp="20201029 18:14:54.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019472792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.646" endtime="20201029 18:14:54.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019472792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.943" endtime="20201029 18:14:54.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.952" endtime="20201029 18:14:54.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.643" endtime="20201029 18:14:54.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.641" endtime="20201029 18:14:54.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:54.959" level="INFO">${PHILIP_RES} = [{'diff': 6.861000000000367e-06}, {'diff': 5.457999999999852e-06}, {'diff': 5.471999999999422e-06}, {'diff': 5.471999999999422e-06}, {'diff': 5.4589999999993255e-06}, {'diff': 5.459000000002795e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:14:54.955" endtime="20201029 18:14:54.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:54.963" level="INFO">${RESULT} = {'diff': [6.861000000000367e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.459000000002795e-06, 5.485999999998992e-06, 5.527999999997701e-06, 5.486...</msg>
<status status="PASS" starttime="20201029 18:14:54.960" endtime="20201029 18:14:54.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.967" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:54.966" endtime="20201029 18:14:54.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.970" level="INFO">VALUE: [6.861000000000367e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.459000000002795e-06, 5.485999999998992e-06, 5.527999999997701e-06, 5.486000000002461e-06, 5.485999999998992e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.459000000002795e-06, 5.472999999998895e-06, 5.471999999999422e-06, 5.458000000003321e-06, 5.485999999998992e-06, 5.416000000001142e-06, 5.471999999999422e-06, 5.486000000002461e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.473000000002365e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.486000000002461e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.458000000003321e-06, 5.472999999998895e-06]</msg>
<status status="PASS" starttime="20201029 18:14:54.969" endtime="20201029 18:14:54.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.964" endtime="20201029 18:14:54.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.617" endtime="20201029 18:14:54.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.592" endtime="20201029 18:14:54.972"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:54.974" endtime="20201029 18:14:54.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.973" endtime="20201029 18:14:54.994"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.004" endtime="20201029 18:14:55.012"></status>
</kw>
<msg timestamp="20201029 18:14:55.012" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.001" endtime="20201029 18:14:55.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.015" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.013" endtime="20201029 18:14:55.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.016" endtime="20201029 18:14:55.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.998" endtime="20201029 18:14:55.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.996" endtime="20201029 18:14:55.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.025" endtime="20201029 18:14:55.312"></status>
</kw>
<msg timestamp="20201029 18:14:55.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019127417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019137458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.024" endtime="20201029 18:14:55.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019127417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019137458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.316" endtime="20201029 18:14:55.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.325" endtime="20201029 18:14:55.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.021" endtime="20201029 18:14:55.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.019" endtime="20201029 18:14:55.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:55.332" level="INFO">${PHILIP_RES} = [{'diff': 1.0040999999998829e-05}, {'diff': 8.971999999999453e-06}, {'diff': 8.889000000001507e-06}, {'diff': 8.889000000001507e-06}, {'diff': 8.887999999998564e-06}, {'diff': 8.874999999998467e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:14:55.329" endtime="20201029 18:14:55.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:55.336" level="INFO">${RESULT} = {'diff': [1.0040999999998829e-05, 8.971999999999453e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.887999999998564e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.875000000001937e-06, 8.889...</msg>
<status status="PASS" starttime="20201029 18:14:55.333" endtime="20201029 18:14:55.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.341" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:55.340" endtime="20201029 18:14:55.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.344" level="INFO">VALUE: [1.0040999999998829e-05, 8.971999999999453e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.887999999998564e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.875000000001937e-06, 8.889000000001507e-06, 8.887999999998564e-06, 8.875000000001937e-06, 8.875000000001937e-06, 8.819999999999661e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.902000000001603e-06, 8.916999999997177e-06, 8.874999999998467e-06, 8.888000000002033e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.875000000001937e-06, 8.874999999998467e-06, 8.833999999999231e-06, 8.875000000001937e-06, 8.875000000001937e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.902999999997607e-06, 8.888999999998037e-06, 8.875000000001937e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.84800000000227e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.86200000000184e-06, 8.917000000000647e-06, 8.875000000001937e-06, 8.874999999998467e-06, 8.889000000001507e-06, 8.875000000001937e-06, 8.888999999998037e-06, 8.902999999997607e-06, 8.888999999998037e-06, 8.930000000000743e-06]</msg>
<status status="PASS" starttime="20201029 18:14:55.343" endtime="20201029 18:14:55.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.337" endtime="20201029 18:14:55.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.995" endtime="20201029 18:14:55.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.972" endtime="20201029 18:14:55.346"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:55.348" endtime="20201029 18:14:55.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.347" endtime="20201029 18:14:55.368"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.377" endtime="20201029 18:14:55.385"></status>
</kw>
<msg timestamp="20201029 18:14:55.385" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.375" endtime="20201029 18:14:55.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.388" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.387" endtime="20201029 18:14:55.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.389" endtime="20201029 18:14:55.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.373" endtime="20201029 18:14:55.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.371" endtime="20201029 18:14:55.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.399" endtime="20201029 18:14:55.685"></status>
</kw>
<msg timestamp="20201029 18:14:55.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017892667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017906236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.397" endtime="20201029 18:14:55.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017892667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017906236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.697" endtime="20201029 18:14:55.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.706" endtime="20201029 18:14:55.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.394" endtime="20201029 18:14:55.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.393" endtime="20201029 18:14:55.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:55.713" level="INFO">${PHILIP_RES} = [{'diff': 1.3568999999998e-05}, {'diff': 1.2403000000001108e-05}, {'diff': 1.2416999999997208e-05}, {'diff': 1.2416000000001204e-05}, {'diff': 1.2417000000000677e-05}, {'diff': 1.2416999999997208e-05}...</msg>
<status status="PASS" starttime="20201029 18:14:55.709" endtime="20201029 18:14:55.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:55.718" level="INFO">${RESULT} = {'diff': [1.3568999999998e-05, 1.2403000000001108e-05, 1.2416999999997208e-05, 1.2416000000001204e-05, 1.2417000000000677e-05, 1.2416999999997208e-05, 1.2416000000001204e-05, 1.2360999999998928e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:14:55.714" endtime="20201029 18:14:55.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.723" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:55.721" endtime="20201029 18:14:55.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.725" level="INFO">VALUE: [1.3568999999998e-05, 1.2403000000001108e-05, 1.2416999999997208e-05, 1.2416000000001204e-05, 1.2417000000000677e-05, 1.2416999999997208e-05, 1.2416000000001204e-05, 1.2360999999998928e-05, 1.2471999999999483e-05, 1.2402999999997638e-05, 1.2444999999999817e-05, 1.2417000000000677e-05, 1.2415999999997734e-05, 1.2403000000001108e-05, 1.2417000000000677e-05, 1.2415999999997734e-05, 1.2417000000000677e-05, 1.2417000000000677e-05, 1.2415999999997734e-05, 1.2417000000000677e-05, 1.2430000000000774e-05, 1.2431000000000247e-05, 1.2431000000000247e-05, 1.2416000000001204e-05, 1.2402999999997638e-05, 1.2417000000000677e-05, 1.2430000000000774e-05, 1.2416999999997208e-05, 1.2417000000000677e-05, 1.2416000000001204e-05, 1.2417000000000677e-05, 1.2416999999997208e-05, 1.2403000000001108e-05, 1.2417000000000677e-05, 1.2416999999997208e-05, 1.2430000000000774e-05, 1.2417000000000677e-05, 1.2416999999997208e-05, 1.2389000000001538e-05, 1.2417000000000677e-05, 1.2416999999997208e-05, 1.2402000000001634e-05, 1.2375000000001968e-05, 1.2431000000000247e-05, 1.2430000000000774e-05, 1.2403000000001108e-05, 1.2444000000000344e-05, 1.2417000000000677e-05, 1.2417000000000677e-05, 1.2430000000000774e-05]</msg>
<status status="PASS" starttime="20201029 18:14:55.724" endtime="20201029 18:14:55.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.719" endtime="20201029 18:14:55.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.369" endtime="20201029 18:14:55.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.346" endtime="20201029 18:14:55.727"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:55.729" endtime="20201029 18:14:55.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.728" endtime="20201029 18:14:55.749"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.758" endtime="20201029 18:14:55.766"></status>
</kw>
<msg timestamp="20201029 18:14:55.766" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.756" endtime="20201029 18:14:55.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.769" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.768" endtime="20201029 18:14:55.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.770" endtime="20201029 18:14:55.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.753" endtime="20201029 18:14:55.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.751" endtime="20201029 18:14:55.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.780" endtime="20201029 18:14:56.067"></status>
</kw>
<msg timestamp="20201029 18:14:56.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017928528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017945972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.778" endtime="20201029 18:14:56.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017928528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017945972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.072" endtime="20201029 18:14:56.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.081" endtime="20201029 18:14:56.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.775" endtime="20201029 18:14:56.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.774" endtime="20201029 18:14:56.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:56.088" level="INFO">${PHILIP_RES} = [{'diff': 1.7444000000001875e-05}, {'diff': 1.634699999999989e-05}, {'diff': 1.6292000000001083e-05}, {'diff': 1.6277999999998044e-05}, {'diff': 1.6263999999998474e-05}, {'diff': 1.6292000000001083e-0...</msg>
<status status="PASS" starttime="20201029 18:14:56.085" endtime="20201029 18:14:56.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:56.093" level="INFO">${RESULT} = {'diff': [1.7444000000001875e-05, 1.634699999999989e-05, 1.6292000000001083e-05, 1.6277999999998044e-05, 1.6263999999998474e-05, 1.6292000000001083e-05, 1.627699999999857e-05, 1.6277999999998044e-05, ...</msg>
<status status="PASS" starttime="20201029 18:14:56.090" endtime="20201029 18:14:56.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.097" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:56.096" endtime="20201029 18:14:56.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.100" level="INFO">VALUE: [1.7444000000001875e-05, 1.634699999999989e-05, 1.6292000000001083e-05, 1.6277999999998044e-05, 1.6263999999998474e-05, 1.6292000000001083e-05, 1.627699999999857e-05, 1.6277999999998044e-05, 1.6347999999999363e-05, 1.631900000000075e-05, 1.6208999999999668e-05, 1.6250000000002374e-05, 1.627699999999857e-05, 1.6277999999998044e-05, 1.637499999999903e-05, 1.630500000000118e-05, 1.6291999999997614e-05, 1.6264000000001944e-05, 1.629100000000161e-05, 1.6277999999998044e-05, 1.6249999999998904e-05, 1.629100000000161e-05, 1.6291999999997614e-05, 1.6292000000001083e-05, 1.6278000000001513e-05, 1.6208999999999668e-05, 1.6278000000001513e-05, 1.6278000000001513e-05, 1.634699999999989e-05, 1.6292000000001083e-05, 1.6292000000001083e-05, 1.629099999999814e-05, 1.6292000000001083e-05, 1.6278000000001513e-05, 1.629099999999814e-05, 1.6292000000001083e-05, 1.6278000000001513e-05, 1.627699999999857e-05, 1.6277999999998044e-05, 1.6278000000001513e-05, 1.631900000000075e-05, 1.6292000000001083e-05, 1.6320000000000223e-05, 1.629099999999814e-05, 1.6292000000001083e-05, 1.6292000000001083e-05, 1.629099999999814e-05, 1.6278000000001513e-05, 1.6264000000001944e-05, 1.629099999999814e-05]</msg>
<status status="PASS" starttime="20201029 18:14:56.099" endtime="20201029 18:14:56.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.094" endtime="20201029 18:14:56.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.750" endtime="20201029 18:14:56.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.727" endtime="20201029 18:14:56.102"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:56.104" endtime="20201029 18:14:56.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.103" endtime="20201029 18:14:56.124"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.132" endtime="20201029 18:14:56.141"></status>
</kw>
<msg timestamp="20201029 18:14:56.142" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.131" endtime="20201029 18:14:56.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.144" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.143" endtime="20201029 18:14:56.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.145" endtime="20201029 18:14:56.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.128" endtime="20201029 18:14:56.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.126" endtime="20201029 18:14:56.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.155" endtime="20201029 18:14:56.443"></status>
</kw>
<msg timestamp="20201029 18:14:56.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017917736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017939417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.154" endtime="20201029 18:14:56.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017917736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017939417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.447" endtime="20201029 18:14:56.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.455" endtime="20201029 18:14:56.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.151" endtime="20201029 18:14:56.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.149" endtime="20201029 18:14:56.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:56.462" level="INFO">${PHILIP_RES} = [{'diff': 2.168099999999909e-05}, {'diff': 2.0499999999999685e-05}, {'diff': 2.0514000000002724e-05}, {'diff': 2.0570000000001004e-05}, {'diff': 2.052700000000282e-05}, {'diff': 2.0499999999999685e-05...</msg>
<status status="PASS" starttime="20201029 18:14:56.459" endtime="20201029 18:14:56.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:56.466" level="INFO">${RESULT} = {'diff': [2.168099999999909e-05, 2.0499999999999685e-05, 2.0514000000002724e-05, 2.0570000000001004e-05, 2.052700000000282e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 2.0514000000002724e-05, ...</msg>
<status status="PASS" starttime="20201029 18:14:56.463" endtime="20201029 18:14:56.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.471" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:56.469" endtime="20201029 18:14:56.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.474" level="INFO">VALUE: [2.168099999999909e-05, 2.0499999999999685e-05, 2.0514000000002724e-05, 2.0570000000001004e-05, 2.052700000000282e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 2.0514000000002724e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 2.0514000000002724e-05, 2.0513999999999255e-05, 2.0513999999999255e-05, 2.0513999999999255e-05, 2.0541999999998395e-05, 2.051300000000325e-05, 2.0513999999999255e-05, 2.0486000000000115e-05, 2.0499999999999685e-05, 2.0527999999998825e-05, 2.0556000000001434e-05, 2.054099999999892e-05, 2.0499999999999685e-05, 2.0500000000003155e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 2.051299999999978e-05, 2.0514000000002724e-05, 2.0527999999998825e-05, 2.0527999999998825e-05, 2.0514000000002724e-05, 2.0499999999999685e-05, 2.052699999999935e-05, 2.0499999999999685e-05, 2.0527999999998825e-05, 2.0514000000002724e-05, 2.0541999999998395e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 2.0486000000000115e-05, 2.0514000000002724e-05, 2.0499999999999685e-05, 2.051299999999978e-05, 2.051299999999978e-05, 2.0542000000001864e-05, 2.0556000000001434e-05, 2.0569999999997535e-05, 2.0499999999999685e-05]</msg>
<status status="PASS" starttime="20201029 18:14:56.472" endtime="20201029 18:14:56.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.467" endtime="20201029 18:14:56.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.125" endtime="20201029 18:14:56.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.102" endtime="20201029 18:14:56.476"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:56.479" endtime="20201029 18:14:56.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.477" endtime="20201029 18:14:56.499"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.507" endtime="20201029 18:14:56.517"></status>
</kw>
<msg timestamp="20201029 18:14:56.518" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.506" endtime="20201029 18:14:56.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.520" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.519" endtime="20201029 18:14:56.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.522" endtime="20201029 18:14:56.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.503" endtime="20201029 18:14:56.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.501" endtime="20201029 18:14:56.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.531" endtime="20201029 18:14:56.817"></status>
</kw>
<msg timestamp="20201029 18:14:56.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017915056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017941306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.530" endtime="20201029 18:14:56.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017915056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017941306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.822" endtime="20201029 18:14:56.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.830" endtime="20201029 18:14:56.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.527" endtime="20201029 18:14:56.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.525" endtime="20201029 18:14:56.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:56.837" level="INFO">${PHILIP_RES} = [{'diff': 2.6250000000001966e-05}, {'diff': 2.5082999999998662e-05}, {'diff': 2.5082999999998662e-05}, {'diff': 2.508300000000213e-05}, {'diff': 2.5070000000002035e-05}, {'diff': 2.5082999999998662e-0...</msg>
<status status="PASS" starttime="20201029 18:14:56.833" endtime="20201029 18:14:56.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:56.842" level="INFO">${RESULT} = {'diff': [2.6250000000001966e-05, 2.5082999999998662e-05, 2.5082999999998662e-05, 2.508300000000213e-05, 2.5070000000002035e-05, 2.5082999999998662e-05, 2.5110999999997802e-05, 2.5096999999998232e-05,...</msg>
<status status="PASS" starttime="20201029 18:14:56.838" endtime="20201029 18:14:56.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.846" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:56.845" endtime="20201029 18:14:56.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.849" level="INFO">VALUE: [2.6250000000001966e-05, 2.5082999999998662e-05, 2.5082999999998662e-05, 2.508300000000213e-05, 2.5070000000002035e-05, 2.5082999999998662e-05, 2.5110999999997802e-05, 2.5096999999998232e-05, 2.513900000000041e-05, 2.5027999999999856e-05, 2.5082999999998662e-05, 2.5082999999998662e-05, 2.5082999999998662e-05, 2.508300000000213e-05, 2.5070000000002035e-05, 2.5082999999998662e-05, 2.513900000000041e-05, 2.5096999999998232e-05, 2.50970000000017e-05, 2.50970000000017e-05, 2.5041999999999426e-05, 2.5054999999999522e-05, 2.5082999999998662e-05, 2.5070000000002035e-05, 2.5084000000001605e-05, 2.5055999999998996e-05, 2.5082999999998662e-05, 2.50970000000017e-05, 2.5084000000001605e-05, 2.5098000000001175e-05, 2.5082999999998662e-05, 2.5068999999999092e-05, 2.5027000000000382e-05, 2.5070000000002035e-05, 2.5070000000002035e-05, 2.5096999999998232e-05, 2.5096999999998232e-05, 2.508300000000213e-05, 2.5070000000002035e-05, 2.5084000000001605e-05, 2.5082999999998662e-05, 2.5014000000000286e-05, 2.5068999999999092e-05, 2.5098000000001175e-05, 2.5070000000002035e-05, 2.5068999999999092e-05, 2.5082999999998662e-05, 2.50970000000017e-05, 2.5070000000002035e-05, 2.511100000000127e-05]</msg>
<status status="PASS" starttime="20201029 18:14:56.848" endtime="20201029 18:14:56.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.843" endtime="20201029 18:14:56.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.499" endtime="20201029 18:14:56.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.477" endtime="20201029 18:14:56.851"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:56.853" endtime="20201029 18:14:56.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.852" endtime="20201029 18:14:56.873"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.881" endtime="20201029 18:14:56.891"></status>
</kw>
<msg timestamp="20201029 18:14:56.892" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.880" endtime="20201029 18:14:56.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.894" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.893" endtime="20201029 18:14:56.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.895" endtime="20201029 18:14:56.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.877" endtime="20201029 18:14:56.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.875" endtime="20201029 18:14:56.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.905" endtime="20201029 18:14:57.216"></status>
</kw>
<msg timestamp="20201029 18:14:57.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017951069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017982306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.904" endtime="20201029 18:14:57.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017951069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017982306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.221" endtime="20201029 18:14:57.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.229" endtime="20201029 18:14:57.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.901" endtime="20201029 18:14:57.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.899" endtime="20201029 18:14:57.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:57.236" level="INFO">${PHILIP_RES} = [{'diff': 3.123699999999993e-05}, {'diff': 3.0026999999998444e-05}, {'diff': 3.0056000000000527e-05}, {'diff': 3.0096999999999763e-05}, {'diff': 3.0028000000001387e-05}, {'diff': 2.997300000000258e-05...</msg>
<status status="PASS" starttime="20201029 18:14:57.233" endtime="20201029 18:14:57.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:57.241" level="INFO">${RESULT} = {'diff': [3.123699999999993e-05, 3.0026999999998444e-05, 3.0056000000000527e-05, 3.0096999999999763e-05, 3.0028000000001387e-05, 2.997300000000258e-05, 3.0028000000001387e-05, 3.0028000000001387e-05, ...</msg>
<status status="PASS" starttime="20201029 18:14:57.237" endtime="20201029 18:14:57.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.245" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:57.244" endtime="20201029 18:14:57.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.248" level="INFO">VALUE: [3.123699999999993e-05, 3.0026999999998444e-05, 3.0056000000000527e-05, 3.0096999999999763e-05, 3.0028000000001387e-05, 2.997300000000258e-05, 3.0028000000001387e-05, 3.0028000000001387e-05, 3.0041000000001483e-05, 3.0028000000001387e-05, 3.0042000000000957e-05, 2.9999999999998778e-05, 3.0040999999998014e-05, 3.0027999999997917e-05, 3.0027999999997917e-05, 3.0040999999998014e-05, 3.0028000000001387e-05, 3.0027999999997917e-05, 3.0014000000001817e-05, 3.0027000000001913e-05, 3.0083000000000193e-05, 3.0042000000000957e-05, 3.0014000000001817e-05, 2.9985999999999208e-05, 3.0028000000001387e-05, 3.0055999999997057e-05, 2.9985999999999208e-05, 3.0027999999997917e-05, 3.0027999999997917e-05, 3.0013999999998348e-05, 3.0026999999998444e-05, 3.0042000000000957e-05, 3.0014000000001817e-05, 3.0042000000000957e-05, 3.0041000000001483e-05, 3.0014000000001817e-05, 3.0056000000000527e-05, 3.0055000000001053e-05, 3.0042000000000957e-05, 3.0028000000001387e-05, 3.0027999999997917e-05, 3.0012999999998874e-05, 3.0041999999997487e-05, 2.9999999999998778e-05, 3.0013999999998348e-05, 3.0027999999997917e-05, 3.0042000000000957e-05, 3.0014000000001817e-05, 3.0027000000001913e-05, 3.0028000000001387e-05]</msg>
<status status="PASS" starttime="20201029 18:14:57.246" endtime="20201029 18:14:57.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.241" endtime="20201029 18:14:57.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.874" endtime="20201029 18:14:57.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.851" endtime="20201029 18:14:57.249"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:57.252" endtime="20201029 18:14:57.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.250" endtime="20201029 18:14:57.272"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.280" endtime="20201029 18:14:57.290"></status>
</kw>
<msg timestamp="20201029 18:14:57.290" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.278" endtime="20201029 18:14:57.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.293" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.292" endtime="20201029 18:14:57.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.294" endtime="20201029 18:14:57.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.276" endtime="20201029 18:14:57.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.274" endtime="20201029 18:14:57.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.305" endtime="20201029 18:14:57.592"></status>
</kw>
<msg timestamp="20201029 18:14:57.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017822111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017858569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.303" endtime="20201029 18:14:57.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017822111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017858569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.597" endtime="20201029 18:14:57.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.605" endtime="20201029 18:14:57.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.301" endtime="20201029 18:14:57.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.299" endtime="20201029 18:14:57.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:57.612" level="INFO">${PHILIP_RES} = [{'diff': 3.645799999999963e-05}, {'diff': 3.5332999999998504e-05}, {'diff': 3.531999999999841e-05}, {'diff': 3.530599999999884e-05}, {'diff': 3.5290999999999795e-05}, {'diff': 3.5346999999998074e-05}...</msg>
<status status="PASS" starttime="20201029 18:14:57.609" endtime="20201029 18:14:57.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:57.616" level="INFO">${RESULT} = {'diff': [3.645799999999963e-05, 3.5332999999998504e-05, 3.531999999999841e-05, 3.530599999999884e-05, 3.5290999999999795e-05, 3.5346999999998074e-05, 3.530599999999884e-05, 3.5290999999999795e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:14:57.613" endtime="20201029 18:14:57.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.621" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:57.620" endtime="20201029 18:14:57.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.623" level="INFO">VALUE: [3.645799999999963e-05, 3.5332999999998504e-05, 3.531999999999841e-05, 3.530599999999884e-05, 3.5290999999999795e-05, 3.5346999999998074e-05, 3.530599999999884e-05, 3.5290999999999795e-05, 3.522200000000142e-05, 3.530600000000231e-05, 3.5333000000001974e-05, 3.5304999999999365e-05, 3.530599999999884e-05, 3.5332999999998504e-05, 3.5290999999999795e-05, 3.530599999999884e-05, 3.530599999999884e-05, 3.5290999999999795e-05, 3.531999999999841e-05, 3.532000000000188e-05, 3.5319000000002404e-05, 3.532000000000188e-05, 3.530600000000231e-05, 3.5319000000002404e-05, 3.529199999999927e-05, 3.531999999999841e-05, 3.5318999999998935e-05, 3.52779999999997e-05, 3.530599999999884e-05, 3.5304999999999365e-05, 3.530599999999884e-05, 3.533400000000145e-05, 3.5305000000002834e-05, 3.5333000000001974e-05, 3.532000000000188e-05, 3.5304999999999365e-05, 3.529199999999927e-05, 3.522199999999795e-05, 3.5304999999999365e-05, 3.530599999999884e-05, 3.531999999999841e-05, 3.5318999999998935e-05, 3.5290999999999795e-05, 3.532000000000188e-05, 3.530600000000231e-05, 3.5304999999999365e-05, 3.530600000000231e-05, 3.530600000000231e-05, 3.5290999999999795e-05, 3.530599999999884e-05]</msg>
<status status="PASS" starttime="20201029 18:14:57.622" endtime="20201029 18:14:57.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.617" endtime="20201029 18:14:57.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.272" endtime="20201029 18:14:57.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.250" endtime="20201029 18:14:57.626"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:57.628" endtime="20201029 18:14:57.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.627" endtime="20201029 18:14:57.648"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.657" endtime="20201029 18:14:57.667"></status>
</kw>
<msg timestamp="20201029 18:14:57.667" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.655" endtime="20201029 18:14:57.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.670" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.668" endtime="20201029 18:14:57.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.671" endtime="20201029 18:14:57.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.652" endtime="20201029 18:14:57.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.650" endtime="20201029 18:14:57.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.681" endtime="20201029 18:14:57.966"></status>
</kw>
<msg timestamp="20201029 18:14:57.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017993306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018035403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.679" endtime="20201029 18:14:57.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017993306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018035403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.971" endtime="20201029 18:14:57.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.979" endtime="20201029 18:14:57.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.676" endtime="20201029 18:14:57.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.675" endtime="20201029 18:14:57.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:57.986" level="INFO">${PHILIP_RES} = [{'diff': 4.2096999999997886e-05}, {'diff': 4.093000000000152e-05}, {'diff': 4.0945000000000564e-05}, {'diff': 4.0931000000000994e-05}, {'diff': 4.0902999999998385e-05}, {'diff': 4.095800000000066e-05...</msg>
<status status="PASS" starttime="20201029 18:14:57.983" endtime="20201029 18:14:57.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:57.991" level="INFO">${RESULT} = {'diff': [4.2096999999997886e-05, 4.093000000000152e-05, 4.0945000000000564e-05, 4.0931000000000994e-05, 4.0902999999998385e-05, 4.095800000000066e-05, 4.0917000000001424e-05, 4.0931000000000994e-05, ...</msg>
<status status="PASS" starttime="20201029 18:14:57.987" endtime="20201029 18:14:57.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.996" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:57.995" endtime="20201029 18:14:57.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.998" level="INFO">VALUE: [4.2096999999997886e-05, 4.093000000000152e-05, 4.0945000000000564e-05, 4.0931000000000994e-05, 4.0902999999998385e-05, 4.095800000000066e-05, 4.0917000000001424e-05, 4.0931000000000994e-05, 4.094400000000109e-05, 4.101399999999894e-05, 4.0959000000000134e-05, 4.0930999999997525e-05, 4.094400000000109e-05, 4.094399999999762e-05, 4.0945000000000564e-05, 4.1012999999999467e-05, 4.091600000000195e-05, 4.0945000000000564e-05, 4.0931000000000994e-05, 4.092999999999805e-05, 4.095800000000066e-05, 4.0945000000000564e-05, 4.0875000000002715e-05, 4.094400000000109e-05, 4.091599999999848e-05, 4.102800000000198e-05, 4.0916999999997955e-05, 4.095800000000066e-05, 4.0930999999997525e-05, 4.0959000000000134e-05, 4.0945000000000564e-05, 4.093000000000152e-05, 4.094399999999762e-05, 4.0903000000001855e-05, 4.095799999999719e-05, 4.095800000000066e-05, 4.0888999999998815e-05, 4.0945000000000564e-05, 4.097199999999676e-05, 4.094400000000109e-05, 4.0945000000000564e-05, 4.0972999999999704e-05, 4.09859999999998e-05, 4.093000000000152e-05, 4.0931000000000994e-05, 4.094400000000109e-05, 4.095800000000066e-05, 4.0944999999997095e-05, 4.0945000000000564e-05, 4.094399999999762e-05]</msg>
<status status="PASS" starttime="20201029 18:14:57.997" endtime="20201029 18:14:57.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.992" endtime="20201029 18:14:57.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.649" endtime="20201029 18:14:58.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.626" endtime="20201029 18:14:58.000"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:58.002" endtime="20201029 18:14:58.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.001" endtime="20201029 18:14:58.022"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.031" endtime="20201029 18:14:58.041"></status>
</kw>
<msg timestamp="20201029 18:14:58.041" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.029" endtime="20201029 18:14:58.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.044" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.042" endtime="20201029 18:14:58.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.045" endtime="20201029 18:14:58.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.026" endtime="20201029 18:14:58.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.024" endtime="20201029 18:14:58.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.055" endtime="20201029 18:14:58.341"></status>
</kw>
<msg timestamp="20201029 18:14:58.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018029278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018077347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.053" endtime="20201029 18:14:58.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018029278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018077347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.345" endtime="20201029 18:14:58.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.354" endtime="20201029 18:14:58.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.051" endtime="20201029 18:14:58.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.049" endtime="20201029 18:14:58.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:58.362" level="INFO">${PHILIP_RES} = [{'diff': 4.806900000000128e-05}, {'diff': 4.691599999999754e-05}, {'diff': 4.691600000000101e-05}, {'diff': 4.693000000000058e-05}, {'diff': 4.691600000000101e-05}, {'diff': 4.694399999999668e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:58.358" endtime="20201029 18:14:58.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:58.366" level="INFO">${RESULT} = {'diff': [4.806900000000128e-05, 4.691599999999754e-05, 4.691600000000101e-05, 4.693000000000058e-05, 4.691600000000101e-05, 4.694399999999668e-05, 4.6917000000000486e-05, 4.6917000000000486e-05, 4.69...</msg>
<status status="PASS" starttime="20201029 18:14:58.363" endtime="20201029 18:14:58.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.371" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:58.369" endtime="20201029 18:14:58.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.373" level="INFO">VALUE: [4.806900000000128e-05, 4.691599999999754e-05, 4.691600000000101e-05, 4.693000000000058e-05, 4.691600000000101e-05, 4.694399999999668e-05, 4.6917000000000486e-05, 4.6917000000000486e-05, 4.6917000000000486e-05, 4.6917000000000486e-05, 4.6917000000000486e-05, 4.6917000000000486e-05, 4.6917000000000486e-05, 4.6931000000000056e-05, 4.6917000000000486e-05, 4.6917000000000486e-05, 4.6931000000000056e-05, 4.690299999999745e-05, 4.6917000000000486e-05, 4.693000000000058e-05, 4.6903000000000916e-05, 4.697199999999929e-05, 4.693000000000058e-05, 4.691600000000101e-05, 4.693000000000058e-05, 4.684699999999917e-05, 4.694400000000015e-05, 4.691600000000101e-05, 4.693000000000058e-05, 4.695799999999972e-05, 4.6917000000000486e-05, 4.6917000000000486e-05, 4.6931000000000056e-05, 4.6917000000000486e-05, 4.6903000000000916e-05, 4.6931000000000056e-05, 4.6917000000000486e-05, 4.690299999999745e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.6944999999999626e-05, 4.6903000000000916e-05, 4.6958999999999196e-05, 4.694400000000015e-05, 4.691599999999754e-05, 4.692999999999711e-05, 4.691600000000101e-05, 4.691600000000101e-05, 4.691600000000101e-05, 4.691600000000101e-05]</msg>
<status status="PASS" starttime="20201029 18:14:58.372" endtime="20201029 18:14:58.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.367" endtime="20201029 18:14:58.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.023" endtime="20201029 18:14:58.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.000" endtime="20201029 18:14:58.375"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:58.377" endtime="20201029 18:14:58.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.376" endtime="20201029 18:14:58.397"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.406" endtime="20201029 18:14:58.416"></status>
</kw>
<msg timestamp="20201029 18:14:58.417" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.404" endtime="20201029 18:14:58.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.420" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.418" endtime="20201029 18:14:58.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.421" endtime="20201029 18:14:58.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.401" endtime="20201029 18:14:58.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.399" endtime="20201029 18:14:58.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.431" endtime="20201029 18:14:58.717"></status>
</kw>
<msg timestamp="20201029 18:14:58.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017987972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018042389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.430" endtime="20201029 18:14:58.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017987972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018042389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.722" endtime="20201029 18:14:58.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.730" endtime="20201029 18:14:58.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.427" endtime="20201029 18:14:58.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.425" endtime="20201029 18:14:58.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:58.737" level="INFO">${PHILIP_RES} = [{'diff': 5.441699999999758e-05}, {'diff': 5.327800000000035e-05}, {'diff': 5.327800000000035e-05}, {'diff': 5.327700000000088e-05}, {'diff': 5.329100000000045e-05}, {'diff': 5.329199999999992e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:58.734" endtime="20201029 18:14:58.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:58.742" level="INFO">${RESULT} = {'diff': [5.441699999999758e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.327700000000088e-05, 5.329100000000045e-05, 5.329199999999992e-05, 5.327800000000035e-05, 5.329199999999992e-05, 5.3235...</msg>
<status status="PASS" starttime="20201029 18:14:58.738" endtime="20201029 18:14:58.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.746" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:58.745" endtime="20201029 18:14:58.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.749" level="INFO">VALUE: [5.441699999999758e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.327700000000088e-05, 5.329100000000045e-05, 5.329199999999992e-05, 5.327800000000035e-05, 5.329199999999992e-05, 5.3235999999998174e-05, 5.326400000000078e-05, 5.327800000000035e-05, 5.327700000000088e-05, 5.327800000000035e-05, 5.33479999999982e-05, 5.3249999999997744e-05, 5.327800000000035e-05, 5.329199999999992e-05, 5.326400000000078e-05, 5.326400000000078e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.329199999999992e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.326300000000131e-05, 5.330500000000002e-05, 5.330599999999949e-05, 5.333399999999863e-05, 5.327800000000035e-05, 5.3249999999997744e-05, 5.319499999999894e-05, 5.327700000000088e-05, 5.326400000000078e-05, 5.327800000000035e-05, 5.325000000000121e-05, 5.318099999999937e-05, 5.333299999999916e-05, 5.326400000000078e-05, 5.3207999999999034e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.325000000000121e-05, 5.325000000000121e-05, 5.327800000000035e-05, 5.333299999999916e-05, 5.330500000000002e-05, 5.3263999999997313e-05, 5.327800000000035e-05, 5.329199999999992e-05, 5.333299999999916e-05]</msg>
<status status="PASS" starttime="20201029 18:14:58.747" endtime="20201029 18:14:58.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.742" endtime="20201029 18:14:58.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.398" endtime="20201029 18:14:58.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.375" endtime="20201029 18:14:58.751"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:58.754" endtime="20201029 18:14:58.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.752" endtime="20201029 18:14:58.774"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.782" endtime="20201029 18:14:58.793"></status>
</kw>
<msg timestamp="20201029 18:14:58.794" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.780" endtime="20201029 18:14:58.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.797" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.795" endtime="20201029 18:14:58.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.798" endtime="20201029 18:14:58.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.778" endtime="20201029 18:14:58.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.776" endtime="20201029 18:14:58.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.807" endtime="20201029 18:14:59.094"></status>
</kw>
<msg timestamp="20201029 18:14:59.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017958681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018019806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.806" endtime="20201029 18:14:59.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017958681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018019806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.098" endtime="20201029 18:14:59.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.107" endtime="20201029 18:14:59.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.803" endtime="20201029 18:14:59.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.801" endtime="20201029 18:14:59.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:59.114" level="INFO">${PHILIP_RES} = [{'diff': 6.112499999999868e-05}, {'diff': 5.995899999999832e-05}, {'diff': 5.995899999999832e-05}, {'diff': 5.997300000000136e-05}, {'diff': 5.994499999999875e-05}, {'diff': 5.994500000000222e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:59.110" endtime="20201029 18:14:59.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:59.119" level="INFO">${RESULT} = {'diff': [6.112499999999868e-05, 5.995899999999832e-05, 5.995899999999832e-05, 5.997300000000136e-05, 5.994499999999875e-05, 5.994500000000222e-05, 5.993099999999918e-05, 5.995899999999832e-05, 5.9973...</msg>
<status status="PASS" starttime="20201029 18:14:59.115" endtime="20201029 18:14:59.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.123" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:59.122" endtime="20201029 18:14:59.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.126" level="INFO">VALUE: [6.112499999999868e-05, 5.995899999999832e-05, 5.995899999999832e-05, 5.997300000000136e-05, 5.994499999999875e-05, 5.994500000000222e-05, 5.993099999999918e-05, 5.995899999999832e-05, 5.997300000000136e-05, 5.994499999999875e-05, 5.995900000000179e-05, 5.995899999999832e-05, 5.995900000000179e-05, 5.997299999999789e-05, 5.997300000000136e-05, 6.0028000000000165e-05, 5.994499999999875e-05, 5.994500000000222e-05, 5.994499999999875e-05, 5.994500000000222e-05, 6.0028000000000165e-05, 5.991699999999961e-05, 5.995899999999832e-05, 5.995899999999832e-05, 5.995900000000179e-05, 5.994499999999875e-05, 6.0000000000001025e-05, 5.993099999999918e-05, 5.9985999999997985e-05, 5.997300000000136e-05, 6.0014000000000595e-05, 5.9972000000001885e-05, 5.994499999999875e-05, 6.0000000000001025e-05, 5.994500000000222e-05, 5.9971999999998415e-05, 5.995900000000179e-05, 5.995899999999832e-05, 5.991699999999961e-05, 5.993099999999918e-05, 5.995900000000179e-05, 5.995899999999832e-05, 5.995900000000179e-05, 5.995900000000179e-05, 6.0013999999997125e-05, 5.995900000000179e-05, 5.995899999999832e-05, 5.9972000000001885e-05, 5.995900000000179e-05, 5.995899999999832e-05]</msg>
<status status="PASS" starttime="20201029 18:14:59.124" endtime="20201029 18:14:59.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.120" endtime="20201029 18:14:59.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.774" endtime="20201029 18:14:59.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.752" endtime="20201029 18:14:59.128"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:59.130" endtime="20201029 18:14:59.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.128" endtime="20201029 18:14:59.150"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.158" endtime="20201029 18:14:59.170"></status>
</kw>
<msg timestamp="20201029 18:14:59.171" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.157" endtime="20201029 18:14:59.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.173" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.172" endtime="20201029 18:14:59.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.175" endtime="20201029 18:14:59.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.154" endtime="20201029 18:14:59.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.152" endtime="20201029 18:14:59.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.184" endtime="20201029 18:14:59.470"></status>
</kw>
<msg timestamp="20201029 18:14:59.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01863625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018704431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:59.182" endtime="20201029 18:14:59.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01863625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018704431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:59.474" endtime="20201029 18:14:59.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.483" endtime="20201029 18:14:59.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.180" endtime="20201029 18:14:59.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.178" endtime="20201029 18:14:59.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:59.491" level="INFO">${PHILIP_RES} = [{'diff': 6.818100000000049e-05}, {'diff': 6.699999999999762e-05}, {'diff': 6.701299999999771e-05}, {'diff': 6.699999999999762e-05}, {'diff': 6.701399999999719e-05}, {'diff': 6.695799999999891e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:59.487" endtime="20201029 18:14:59.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:59.495" level="INFO">${RESULT} = {'diff': [6.818100000000049e-05, 6.699999999999762e-05, 6.701299999999771e-05, 6.699999999999762e-05, 6.701399999999719e-05, 6.695799999999891e-05, 6.698599999999805e-05, 6.699999999999762e-05, 6.6985...</msg>
<status status="PASS" starttime="20201029 18:14:59.492" endtime="20201029 18:14:59.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.500" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:59.499" endtime="20201029 18:14:59.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.502" level="INFO">VALUE: [6.818100000000049e-05, 6.699999999999762e-05, 6.701299999999771e-05, 6.699999999999762e-05, 6.701399999999719e-05, 6.695799999999891e-05, 6.698599999999805e-05, 6.699999999999762e-05, 6.698599999999805e-05, 6.698599999999805e-05, 6.697199999999848e-05, 6.698599999999805e-05, 6.699999999999762e-05, 6.699999999999762e-05, 6.701400000000066e-05, 6.698599999999805e-05, 6.699999999999762e-05, 6.697199999999848e-05, 6.695899999999838e-05, 6.697199999999848e-05, 6.698599999999805e-05, 6.698599999999805e-05, 6.699999999999762e-05, 6.699999999999762e-05, 6.701400000000066e-05, 6.695799999999891e-05, 6.700000000000109e-05, 6.700000000000109e-05, 6.700000000000109e-05, 6.698600000000152e-05, 6.700000000000109e-05, 6.698600000000152e-05, 6.700000000000109e-05, 6.698600000000152e-05, 6.700000000000109e-05, 6.695799999999891e-05, 6.700000000000109e-05, 6.697199999999848e-05, 6.701400000000066e-05, 6.701300000000118e-05, 6.701400000000066e-05, 6.697200000000195e-05, 6.705599999999937e-05, 6.693099999999924e-05, 6.698600000000152e-05, 6.695799999999891e-05, 6.701400000000066e-05, 6.698600000000152e-05, 6.700000000000109e-05, 6.695900000000185e-05]</msg>
<status status="PASS" starttime="20201029 18:14:59.501" endtime="20201029 18:14:59.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.496" endtime="20201029 18:14:59.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.150" endtime="20201029 18:14:59.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.128" endtime="20201029 18:14:59.504"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:59.506" endtime="20201029 18:14:59.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.505" endtime="20201029 18:14:59.526"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.535" endtime="20201029 18:14:59.547"></status>
</kw>
<msg timestamp="20201029 18:14:59.548" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.533" endtime="20201029 18:14:59.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.550" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.549" endtime="20201029 18:14:59.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.551" endtime="20201029 18:14:59.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.530" endtime="20201029 18:14:59.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.528" endtime="20201029 18:14:59.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.562" endtime="20201029 18:14:59.848"></status>
</kw>
<msg timestamp="20201029 18:14:59.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018507486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018583014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.560" endtime="20201029 18:14:59.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018507486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018583014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.852" endtime="20201029 18:14:59.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.861" endtime="20201029 18:14:59.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.558" endtime="20201029 18:14:59.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.556" endtime="20201029 18:14:59.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:59.868" level="INFO">${PHILIP_RES} = [{'diff': 7.552799999999832e-05}, {'diff': 7.437499999999805e-05}, {'diff': 7.434800000000186e-05}, {'diff': 7.443000000000033e-05}, {'diff': 7.438800000000162e-05}, {'diff': 7.436100000000195e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:59.864" endtime="20201029 18:14:59.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:59.872" level="INFO">${RESULT} = {'diff': [7.552799999999832e-05, 7.437499999999805e-05, 7.434800000000186e-05, 7.443000000000033e-05, 7.438800000000162e-05, 7.436100000000195e-05, 7.437500000000152e-05, 7.440300000000066e-05, 7.4389...</msg>
<status status="PASS" starttime="20201029 18:14:59.869" endtime="20201029 18:14:59.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.877" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:59.875" endtime="20201029 18:14:59.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.879" level="INFO">VALUE: [7.552799999999832e-05, 7.437499999999805e-05, 7.434800000000186e-05, 7.443000000000033e-05, 7.438800000000162e-05, 7.436100000000195e-05, 7.437500000000152e-05, 7.440300000000066e-05, 7.438900000000109e-05, 7.437499999999805e-05, 7.438799999999815e-05, 7.444499999999937e-05, 7.437500000000152e-05, 7.438900000000109e-05, 7.438900000000109e-05, 7.438900000000109e-05, 7.434799999999839e-05, 7.440300000000066e-05, 7.437499999999805e-05, 7.438900000000109e-05, 7.436099999999848e-05, 7.438900000000109e-05, 7.437500000000152e-05, 7.437500000000152e-05, 7.438900000000109e-05, 7.438900000000109e-05, 7.443000000000033e-05, 7.437499999999805e-05, 7.443000000000033e-05, 7.437499999999805e-05, 7.438900000000109e-05, 7.441700000000023e-05, 7.440300000000066e-05, 7.437500000000152e-05, 7.440200000000119e-05, 7.438799999999815e-05, 7.437499999999805e-05, 7.433299999999934e-05, 7.438900000000109e-05, 7.443000000000033e-05, 7.440200000000119e-05, 7.437500000000152e-05, 7.437500000000152e-05, 7.438900000000109e-05, 7.431999999999925e-05, 7.438900000000109e-05, 7.438800000000162e-05, 7.438800000000162e-05, 7.431899999999977e-05, 7.438900000000109e-05]</msg>
<status status="PASS" starttime="20201029 18:14:59.878" endtime="20201029 18:14:59.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.873" endtime="20201029 18:14:59.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.527" endtime="20201029 18:14:59.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.504" endtime="20201029 18:14:59.882"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:59.884" endtime="20201029 18:14:59.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.883" endtime="20201029 18:14:59.904"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.913" endtime="20201029 18:14:59.926"></status>
</kw>
<msg timestamp="20201029 18:14:59.926" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.911" endtime="20201029 18:14:59.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.929" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.927" endtime="20201029 18:14:59.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.931" endtime="20201029 18:14:59.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.908" endtime="20201029 18:14:59.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.906" endtime="20201029 18:14:59.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.942" endtime="20201029 18:15:00.230"></status>
</kw>
<msg timestamp="20201029 18:15:00.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018626722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018710014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.940" endtime="20201029 18:15:00.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018626722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018710014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:00.234" endtime="20201029 18:15:00.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.242" endtime="20201029 18:15:00.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.937" endtime="20201029 18:15:00.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.935" endtime="20201029 18:15:00.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:00.249" level="INFO">${PHILIP_RES} = [{'diff': 8.329200000000217e-05}, {'diff': 8.2152000000002e-05}, {'diff': 8.212500000000234e-05}, {'diff': 8.215300000000147e-05}, {'diff': 8.2152999999998e-05}, {'diff': 8.213899999999844e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 18:15:00.246" endtime="20201029 18:15:00.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:00.255" level="INFO">${RESULT} = {'diff': [8.329200000000217e-05, 8.2152000000002e-05, 8.212500000000234e-05, 8.215300000000147e-05, 8.2152999999998e-05, 8.213899999999844e-05, 8.213899999999844e-05, 8.213899999999844e-05, 8.21389999...</msg>
<status status="PASS" starttime="20201029 18:15:00.251" endtime="20201029 18:15:00.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.259" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:00.258" endtime="20201029 18:15:00.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.262" level="INFO">VALUE: [8.329200000000217e-05, 8.2152000000002e-05, 8.212500000000234e-05, 8.215300000000147e-05, 8.2152999999998e-05, 8.213899999999844e-05, 8.213899999999844e-05, 8.213899999999844e-05, 8.213899999999844e-05, 8.211200000000224e-05, 8.218000000000114e-05, 8.216600000000157e-05, 8.219400000000071e-05, 8.215300000000147e-05, 8.212499999999887e-05, 8.208300000000016e-05, 8.213899999999844e-05, 8.213899999999844e-05, 8.213899999999844e-05, 8.208300000000016e-05, 8.216700000000104e-05, 8.215300000000147e-05, 8.21390000000019e-05, 8.216700000000104e-05, 8.213799999999896e-05, 8.2152999999998e-05, 8.213899999999844e-05, 8.212499999999887e-05, 8.2152999999998e-05, 8.215300000000147e-05, 8.21390000000019e-05, 8.215300000000147e-05, 8.21390000000019e-05, 8.209699999999973e-05, 8.21390000000019e-05, 8.213899999999844e-05, 8.213899999999844e-05, 8.213799999999896e-05, 8.213899999999844e-05, 8.215300000000147e-05, 8.21390000000019e-05, 8.21390000000019e-05, 8.21390000000019e-05, 8.215300000000147e-05, 8.208300000000016e-05, 8.213899999999844e-05, 8.2152999999998e-05, 8.213899999999844e-05, 8.2152999999998e-05, 8.2152999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:15:00.260" endtime="20201029 18:15:00.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.256" endtime="20201029 18:15:00.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.905" endtime="20201029 18:15:00.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.882" endtime="20201029 18:15:00.263"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:00.266" endtime="20201029 18:15:00.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.264" endtime="20201029 18:15:00.286"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.295" endtime="20201029 18:15:00.307"></status>
</kw>
<msg timestamp="20201029 18:15:00.308" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:00.293" endtime="20201029 18:15:00.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.310" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:00.309" endtime="20201029 18:15:00.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.311" endtime="20201029 18:15:00.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.290" endtime="20201029 18:15:00.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.288" endtime="20201029 18:15:00.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.321" endtime="20201029 18:15:00.607"></status>
</kw>
<msg timestamp="20201029 18:15:00.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01882125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018912625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:00.319" endtime="20201029 18:15:00.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01882125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018912625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:00.611" endtime="20201029 18:15:00.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.620" endtime="20201029 18:15:00.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.316" endtime="20201029 18:15:00.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.315" endtime="20201029 18:15:00.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:00.626" level="INFO">${PHILIP_RES} = [{'diff': 9.137499999999771e-05}, {'diff': 9.019400000000177e-05}, {'diff': 9.023599999999701e-05}, {'diff': 9.022200000000091e-05}, {'diff': 9.025000000000005e-05}, {'diff': 9.020899999999735e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:00.623" endtime="20201029 18:15:00.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:00.631" level="INFO">${RESULT} = {'diff': [9.137499999999771e-05, 9.019400000000177e-05, 9.023599999999701e-05, 9.022200000000091e-05, 9.025000000000005e-05, 9.020899999999735e-05, 9.026399999999962e-05, 9.023600000000048e-05, 9.0250...</msg>
<status status="PASS" starttime="20201029 18:15:00.628" endtime="20201029 18:15:00.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.635" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:00.634" endtime="20201029 18:15:00.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.638" level="INFO">VALUE: [9.137499999999771e-05, 9.019400000000177e-05, 9.023599999999701e-05, 9.022200000000091e-05, 9.025000000000005e-05, 9.020899999999735e-05, 9.026399999999962e-05, 9.023600000000048e-05, 9.025000000000005e-05, 9.023699999999996e-05, 9.026399999999962e-05, 9.023600000000048e-05, 9.023600000000048e-05, 9.023600000000048e-05, 9.025000000000005e-05, 9.023600000000048e-05, 9.022300000000039e-05, 9.023600000000048e-05, 9.025000000000005e-05, 9.020799999999787e-05, 9.027699999999972e-05, 9.023600000000048e-05, 9.016599999999916e-05, 9.022200000000091e-05, 9.023600000000048e-05, 9.022199999999744e-05, 9.023600000000048e-05, 9.022300000000039e-05, 9.025000000000005e-05, 9.025000000000005e-05, 9.020800000000134e-05, 9.026399999999962e-05, 9.027699999999972e-05, 9.022200000000091e-05, 9.023600000000048e-05, 9.022200000000091e-05, 9.01670000000021e-05, 9.029200000000223e-05, 9.023699999999996e-05, 9.022200000000091e-05, 9.023600000000048e-05, 9.029199999999876e-05, 9.025000000000005e-05, 9.025000000000005e-05, 9.022200000000091e-05, 9.023600000000048e-05, 9.025000000000005e-05, 9.023600000000048e-05, 9.023600000000048e-05, 9.023600000000048e-05]</msg>
<status status="PASS" starttime="20201029 18:15:00.637" endtime="20201029 18:15:00.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.632" endtime="20201029 18:15:00.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.286" endtime="20201029 18:15:00.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.264" endtime="20201029 18:15:00.640"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:00.642" endtime="20201029 18:15:00.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.641" endtime="20201029 18:15:00.662"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.671" endtime="20201029 18:15:00.683"></status>
</kw>
<msg timestamp="20201029 18:15:00.684" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:00.669" endtime="20201029 18:15:00.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.686" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:00.685" endtime="20201029 18:15:00.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.688" endtime="20201029 18:15:00.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.666" endtime="20201029 18:15:00.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.665" endtime="20201029 18:15:00.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.698" endtime="20201029 18:15:00.985"></status>
</kw>
<msg timestamp="20201029 18:15:00.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018471528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018571375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:00.696" endtime="20201029 18:15:00.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018471528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018571375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:00.990" endtime="20201029 18:15:00.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.000" endtime="20201029 18:15:01.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.694" endtime="20201029 18:15:01.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.692" endtime="20201029 18:15:01.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:01.006" level="INFO">${PHILIP_RES} = [{'diff': 9.984700000000013e-05}, {'diff': 9.873600000000204e-05}, {'diff': 9.869499999999934e-05}, {'diff': 9.866600000000073e-05}, {'diff': 9.862499999999802e-05}, {'diff': 9.869499999999934e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:01.003" endtime="20201029 18:15:01.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:01.011" level="INFO">${RESULT} = {'diff': [9.984700000000013e-05, 9.873600000000204e-05, 9.869499999999934e-05, 9.866600000000073e-05, 9.862499999999802e-05, 9.869499999999934e-05, 9.866600000000073e-05, 9.868099999999977e-05, 9.8708...</msg>
<status status="PASS" starttime="20201029 18:15:01.007" endtime="20201029 18:15:01.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.015" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:01.014" endtime="20201029 18:15:01.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.018" level="INFO">VALUE: [9.984700000000013e-05, 9.873600000000204e-05, 9.869499999999934e-05, 9.866600000000073e-05, 9.862499999999802e-05, 9.869499999999934e-05, 9.866600000000073e-05, 9.868099999999977e-05, 9.870899999999891e-05, 9.86800000000003e-05, 9.86670000000002e-05, 9.86670000000002e-05, 9.87080000000029e-05, 9.868099999999977e-05, 9.872300000000195e-05, 9.869399999999987e-05, 9.86670000000002e-05, 9.868099999999977e-05, 9.86800000000003e-05, 9.868099999999977e-05, 9.868099999999977e-05, 9.870799999999944e-05, 9.868099999999977e-05, 9.8721999999999e-05, 9.869399999999987e-05, 9.870900000000238e-05, 9.869399999999987e-05, 9.872200000000247e-05, 9.869499999999934e-05, 9.86800000000003e-05, 9.86800000000003e-05, 9.869499999999934e-05, 9.86800000000003e-05, 9.865200000000116e-05, 9.870899999999891e-05, 9.86800000000003e-05, 9.872200000000247e-05, 9.869500000000281e-05, 9.86800000000003e-05, 9.86670000000002e-05, 9.868099999999977e-05, 9.86800000000003e-05, 9.86670000000002e-05, 9.868099999999977e-05, 9.866600000000073e-05, 9.868099999999977e-05, 9.868099999999977e-05, 9.869399999999987e-05, 9.868099999999977e-05, 9.868099999999977e-05]</msg>
<status status="PASS" starttime="20201029 18:15:01.016" endtime="20201029 18:15:01.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.012" endtime="20201029 18:15:01.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.663" endtime="20201029 18:15:01.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.640" endtime="20201029 18:15:01.020"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:01.023" endtime="20201029 18:15:01.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.021" endtime="20201029 18:15:01.043"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.052" endtime="20201029 18:15:01.065"></status>
</kw>
<msg timestamp="20201029 18:15:01.065" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.050" endtime="20201029 18:15:01.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.068" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.067" endtime="20201029 18:15:01.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.069" endtime="20201029 18:15:01.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.047" endtime="20201029 18:15:01.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.045" endtime="20201029 18:15:01.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.080" endtime="20201029 18:15:01.366"></status>
</kw>
<msg timestamp="20201029 18:15:01.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018262431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018371069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.078" endtime="20201029 18:15:01.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018262431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018371069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.371" endtime="20201029 18:15:01.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.379" endtime="20201029 18:15:01.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.075" endtime="20201029 18:15:01.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.073" endtime="20201029 18:15:01.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:01.386" level="INFO">${PHILIP_RES} = [{'diff': 0.00010863800000000118}, {'diff': 0.00010749999999999996}, {'diff': 0.00010748600000000039}, {'diff': 0.00010747199999999735}, {'diff': 0.00010748600000000039}, {'diff': 0.000107486000000000...</msg>
<status status="PASS" starttime="20201029 18:15:01.382" endtime="20201029 18:15:01.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:01.391" level="INFO">${RESULT} = {'diff': [0.00010863800000000118, 0.00010749999999999996, 0.00010748600000000039, 0.00010747199999999735, 0.00010748600000000039, 0.00010748600000000039, 0.00010742999999999864, 0.00010748600000000039...</msg>
<status status="PASS" starttime="20201029 18:15:01.387" endtime="20201029 18:15:01.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.395" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:01.394" endtime="20201029 18:15:01.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.398" level="INFO">VALUE: [0.00010863800000000118, 0.00010749999999999996, 0.00010748600000000039, 0.00010747199999999735, 0.00010748600000000039, 0.00010748600000000039, 0.00010742999999999864, 0.00010748600000000039, 0.00010745900000000072, 0.00010747200000000082, 0.00010748600000000039, 0.00010747199999999735, 0.00010747199999999735, 0.00010744399999999821, 0.00010747199999999735, 0.00010740299999999897, 0.00010748600000000039, 0.00010745800000000125, 0.00010749999999999996, 0.00010748600000000039, 0.00010747300000000029, 0.00010748600000000039, 0.00010748600000000039, 0.00010744399999999821, 0.00010748600000000039, 0.00010748699999999986, 0.00010744400000000168, 0.00010748600000000039, 0.00010751399999999953, 0.00010747200000000082, 0.00010747300000000029, 0.0001075279999999991, 0.00010747199999999735, 0.00010747199999999735, 0.00010748600000000039, 0.00010747200000000082, 0.00010748600000000039, 0.00010747200000000082, 0.00010748600000000039, 0.00010749999999999996, 0.00010748600000000039, 0.00010748600000000039, 0.00010745900000000072, 0.00010745799999999778, 0.00010749999999999996, 0.00010747200000000082, 0.00010744400000000168, 0.00010747300000000029, 0.00010747200000000082, 0.00010745900000000072]</msg>
<status status="PASS" starttime="20201029 18:15:01.396" endtime="20201029 18:15:01.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.392" endtime="20201029 18:15:01.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.044" endtime="20201029 18:15:01.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.020" endtime="20201029 18:15:01.400"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:01.402" endtime="20201029 18:15:01.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.401" endtime="20201029 18:15:01.422"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.431" endtime="20201029 18:15:01.445"></status>
</kw>
<msg timestamp="20201029 18:15:01.446" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.429" endtime="20201029 18:15:01.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.449" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.447" endtime="20201029 18:15:01.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.450" endtime="20201029 18:15:01.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.426" endtime="20201029 18:15:01.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.424" endtime="20201029 18:15:01.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.459" endtime="20201029 18:15:01.747"></status>
</kw>
<msg timestamp="20201029 18:15:01.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018081139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018198917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.458" endtime="20201029 18:15:01.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018081139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018198917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.751" endtime="20201029 18:15:01.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.760" endtime="20201029 18:15:01.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.455" endtime="20201029 18:15:01.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.453" endtime="20201029 18:15:01.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:01.768" level="INFO">${PHILIP_RES} = [{'diff': 0.00011777799999999894}, {'diff': 0.00011662499999999867}, {'diff': 0.00011665300000000128}, {'diff': 0.00011665300000000128}, {'diff': 0.00011662499999999867}, {'diff': 0.000116625000000002...</msg>
<status status="PASS" starttime="20201029 18:15:01.765" endtime="20201029 18:15:01.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:01.772" level="INFO">${RESULT} = {'diff': [0.00011777799999999894, 0.00011662499999999867, 0.00011665300000000128, 0.00011665300000000128, 0.00011662499999999867, 0.00011662500000000214, 0.00011665300000000128, 0.00011673599999999923...</msg>
<status status="PASS" starttime="20201029 18:15:01.769" endtime="20201029 18:15:01.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.777" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:01.776" endtime="20201029 18:15:01.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.780" level="INFO">VALUE: [0.00011777799999999894, 0.00011662499999999867, 0.00011665300000000128, 0.00011665300000000128, 0.00011662499999999867, 0.00011662500000000214, 0.00011665300000000128, 0.00011673599999999923, 0.00011661199999999858, 0.00011663900000000171, 0.00011670800000000009, 0.00011665300000000128, 0.00011662499999999867, 0.0001166109999999991, 0.00011662499999999867, 0.00011666699999999738, 0.00011665300000000128, 0.00011665300000000128, 0.00011663900000000171, 0.00011662499999999867, 0.00011665300000000128, 0.00011663800000000224, 0.00011668100000000042, 0.00011663899999999824, 0.00011663900000000171, 0.00011661100000000257, 0.00011662499999999867, 0.00011663899999999824, 0.00011663900000000171, 0.00011663800000000224, 0.00011665199999999834, 0.00011659699999999953, 0.00011673599999999923, 0.00011665300000000128, 0.00011668100000000042, 0.00011663899999999824, 0.00011663900000000171, 0.00011663900000000171, 0.00011663799999999877, 0.00011666700000000085, 0.00011663900000000171, 0.00011665299999999781, 0.00011663899999999824, 0.00011663900000000171, 0.00011666700000000085, 0.00011662500000000214, 0.00011663799999999877, 0.00011663800000000224, 0.00011662499999999867, 0.00011663899999999824]</msg>
<status status="PASS" starttime="20201029 18:15:01.778" endtime="20201029 18:15:01.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.773" endtime="20201029 18:15:01.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.423" endtime="20201029 18:15:01.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.400" endtime="20201029 18:15:01.781"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:01.784" endtime="20201029 18:15:01.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.782" endtime="20201029 18:15:01.804"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.812" endtime="20201029 18:15:01.829"></status>
</kw>
<msg timestamp="20201029 18:15:01.829" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.811" endtime="20201029 18:15:01.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.832" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.830" endtime="20201029 18:15:01.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.833" endtime="20201029 18:15:01.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.808" endtime="20201029 18:15:01.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.806" endtime="20201029 18:15:01.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.843" endtime="20201029 18:15:02.129"></status>
</kw>
<msg timestamp="20201029 18:15:02.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018176875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018304181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.842" endtime="20201029 18:15:02.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018176875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018304181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.133" endtime="20201029 18:15:02.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.142" endtime="20201029 18:15:02.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.839" endtime="20201029 18:15:02.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.837" endtime="20201029 18:15:02.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:02.148" level="INFO">${PHILIP_RES} = [{'diff': 0.00012730600000000064}, {'diff': 0.00012618099999999952}, {'diff': 0.00012618099999999952}, {'diff': 0.00012612499999999777}, {'diff': 0.0001261390000000008}, {'diff': 0.0001261250000000012...</msg>
<status status="PASS" starttime="20201029 18:15:02.145" endtime="20201029 18:15:02.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:02.153" level="INFO">${RESULT} = {'diff': [0.00012730600000000064, 0.00012618099999999952, 0.00012618099999999952, 0.00012612499999999777, 0.0001261390000000008, 0.00012612500000000124, 0.00012615300000000038, 0.00012612500000000124,...</msg>
<status status="PASS" starttime="20201029 18:15:02.149" endtime="20201029 18:15:02.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.157" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:02.156" endtime="20201029 18:15:02.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.160" level="INFO">VALUE: [0.00012730600000000064, 0.00012618099999999952, 0.00012618099999999952, 0.00012612499999999777, 0.0001261390000000008, 0.00012612500000000124, 0.00012615300000000038, 0.00012612500000000124, 0.00012608399999999853, 0.00012616600000000047, 0.0001261529999999969, 0.00012615199999999743, 0.00012616699999999995, 0.0001261520000000009, 0.0001261390000000008, 0.00012618099999999952, 0.00012616699999999995, 0.00012615199999999743, 0.0001261390000000008, 0.00012612500000000124, 0.00012612500000000124, 0.00012613800000000133, 0.0001261390000000008, 0.0001261520000000009, 0.0001261529999999969, 0.0001261939999999996, 0.0001261390000000008, 0.0001261520000000009, 0.0001261390000000008, 0.0001261520000000009, 0.00012615300000000038, 0.00012613899999999734, 0.00012616699999999995, 0.0001261390000000008, 0.00012616699999999995, 0.0001261390000000008, 0.00012615300000000038, 0.00012613899999999734, 0.00012613899999999734, 0.0001261939999999996, 0.00012616699999999995, 0.00012616600000000047, 0.00012622200000000222, 0.00012615300000000038, 0.00012615300000000038, 0.00012615300000000038, 0.00012615300000000038, 0.00012609800000000157, 0.00012618000000000004, 0.00012615300000000038]</msg>
<status status="PASS" starttime="20201029 18:15:02.158" endtime="20201029 18:15:02.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.153" endtime="20201029 18:15:02.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.804" endtime="20201029 18:15:02.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.782" endtime="20201029 18:15:02.162"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:02.165" endtime="20201029 18:15:02.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.163" endtime="20201029 18:15:02.185"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.193" endtime="20201029 18:15:02.208"></status>
</kw>
<msg timestamp="20201029 18:15:02.209" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.192" endtime="20201029 18:15:02.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.211" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.210" endtime="20201029 18:15:02.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.212" endtime="20201029 18:15:02.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.189" endtime="20201029 18:15:02.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.187" endtime="20201029 18:15:02.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.222" endtime="20201029 18:15:02.507"></status>
</kw>
<msg timestamp="20201029 18:15:02.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018028597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018165764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.220" endtime="20201029 18:15:02.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018028597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018165764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.511" endtime="20201029 18:15:02.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.520" endtime="20201029 18:15:02.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.217" endtime="20201029 18:15:02.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.215" endtime="20201029 18:15:02.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:02.526" level="INFO">${PHILIP_RES} = [{'diff': 0.00013716700000000054}, {'diff': 0.00013601400000000027}, {'diff': 0.0001360000000000007}, {'diff': 0.00013598599999999766}, {'diff': 0.0001360000000000007}, {'diff': 0.0001360000000000007}...</msg>
<status status="PASS" starttime="20201029 18:15:02.523" endtime="20201029 18:15:02.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:02.531" level="INFO">${RESULT} = {'diff': [0.00013716700000000054, 0.00013601400000000027, 0.0001360000000000007, 0.00013598599999999766, 0.0001360000000000007, 0.0001360000000000007, 0.00013605500000000298, 0.0001360000000000007, 0....</msg>
<status status="PASS" starttime="20201029 18:15:02.527" endtime="20201029 18:15:02.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.536" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:02.535" endtime="20201029 18:15:02.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.538" level="INFO">VALUE: [0.00013716700000000054, 0.00013601400000000027, 0.0001360000000000007, 0.00013598599999999766, 0.0001360000000000007, 0.0001360000000000007, 0.00013605500000000298, 0.0001360000000000007, 0.0001360000000000007, 0.0001360000000000007, 0.00013601400000000027, 0.00013606899999999908, 0.00013601400000000027, 0.0001360000000000007, 0.0001359870000000006, 0.00013599999999999723, 0.00013601400000000027, 0.00013601400000000027, 0.0001360139999999968, 0.00013598600000000113, 0.0001360000000000007, 0.0001360000000000007, 0.0001360549999999995, 0.00013601400000000027, 0.00013597300000000104, 0.00013599999999999723, 0.00013598599999999766, 0.0001360000000000007, 0.00013595799999999852, 0.00013598600000000113, 0.00013598600000000113, 0.00013601400000000027, 0.00013601400000000027, 0.00013601299999999733, 0.00013606899999999908, 0.00013601400000000027, 0.0001360130000000008, 0.00013602799999999984, 0.00013601400000000027, 0.0001360000000000007, 0.0001360549999999995, 0.00013602799999999984, 0.0001360000000000007, 0.00013601400000000027, 0.00013598599999999766, 0.0001359719999999981, 0.0001360000000000007, 0.00013601400000000027, 0.0001360000000000007, 0.00013601400000000027]</msg>
<status status="PASS" starttime="20201029 18:15:02.537" endtime="20201029 18:15:02.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.532" endtime="20201029 18:15:02.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.185" endtime="20201029 18:15:02.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.163" endtime="20201029 18:15:02.540"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:02.543" endtime="20201029 18:15:02.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.541" endtime="20201029 18:15:02.563"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.571" endtime="20201029 18:15:02.587"></status>
</kw>
<msg timestamp="20201029 18:15:02.588" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.570" endtime="20201029 18:15:02.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.590" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.589" endtime="20201029 18:15:02.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.591" endtime="20201029 18:15:02.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.567" endtime="20201029 18:15:02.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.565" endtime="20201029 18:15:02.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.601" endtime="20201029 18:15:02.888"></status>
</kw>
<msg timestamp="20201029 18:15:02.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018163194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018310556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.599" endtime="20201029 18:15:02.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018163194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018310556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.892" endtime="20201029 18:15:02.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.900" endtime="20201029 18:15:02.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.596" endtime="20201029 18:15:02.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.595" endtime="20201029 18:15:02.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:02.907" level="INFO">${PHILIP_RES} = [{'diff': 0.0001473619999999981}, {'diff': 0.00014620799999999837}, {'diff': 0.0001461520000000001}, {'diff': 0.0001462229999999974}, {'diff': 0.00014622199999999794}, {'diff': 0.00014620800000000184}...</msg>
<status status="PASS" starttime="20201029 18:15:02.904" endtime="20201029 18:15:02.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:02.911" level="INFO">${RESULT} = {'diff': [0.0001473619999999981, 0.00014620799999999837, 0.0001461520000000001, 0.0001462229999999974, 0.00014622199999999794, 0.00014620800000000184, 0.0001462090000000013, 0.00014620800000000184, 0....</msg>
<status status="PASS" starttime="20201029 18:15:02.908" endtime="20201029 18:15:02.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.916" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:02.915" endtime="20201029 18:15:02.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.918" level="INFO">VALUE: [0.0001473619999999981, 0.00014620799999999837, 0.0001461520000000001, 0.0001462229999999974, 0.00014622199999999794, 0.00014620800000000184, 0.0001462090000000013, 0.00014620800000000184, 0.0001462220000000014, 0.00014615299999999956, 0.00014624999999999708, 0.00014620799999999837, 0.0001462359999999975, 0.00014622199999999794, 0.0001461939999999988, 0.00014619500000000174, 0.0001462090000000013, 0.0001462220000000014, 0.00014620800000000184, 0.00014622300000000088, 0.0001461939999999988, 0.0001461939999999988, 0.0001462229999999974, 0.00014620799999999837, 0.00014625000000000055, 0.00014618100000000217, 0.00014618100000000217, 0.00014620800000000184, 0.0001462090000000013, 0.00014619500000000174, 0.00014616699999999913, 0.00014622199999999794, 0.0001462229999999974, 0.00014620799999999837, 0.00014620799999999837, 0.00014619500000000174, 0.00014620800000000184, 0.00014617999999999923, 0.00014619500000000174, 0.00014622199999999794, 0.00014620799999999837, 0.00014622199999999794, 0.00014620799999999837, 0.0001461939999999988, 0.00014620800000000184, 0.00014619500000000174, 0.00014620800000000184, 0.00014619400000000227, 0.00014622300000000088, 0.0001461809999999987]</msg>
<status status="PASS" starttime="20201029 18:15:02.917" endtime="20201029 18:15:02.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.912" endtime="20201029 18:15:02.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.563" endtime="20201029 18:15:02.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.541" endtime="20201029 18:15:02.920"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:02.923" endtime="20201029 18:15:02.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.921" endtime="20201029 18:15:02.943"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.951" endtime="20201029 18:15:02.967"></status>
</kw>
<msg timestamp="20201029 18:15:02.968" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.950" endtime="20201029 18:15:02.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.970" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.969" endtime="20201029 18:15:02.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.971" endtime="20201029 18:15:02.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.947" endtime="20201029 18:15:02.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.945" endtime="20201029 18:15:02.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.982" endtime="20201029 18:15:03.268"></status>
</kw>
<msg timestamp="20201029 18:15:03.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018177111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018335042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.980" endtime="20201029 18:15:03.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018177111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018335042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.273" endtime="20201029 18:15:03.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.281" endtime="20201029 18:15:03.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.977" endtime="20201029 18:15:03.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.976" endtime="20201029 18:15:03.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:03.288" level="INFO">${PHILIP_RES} = [{'diff': 0.00015793100000000004}, {'diff': 0.00015679199999999935}, {'diff': 0.0001567770000000003}, {'diff': 0.00015677799999999978}, {'diff': 0.0001568199999999985}, {'diff': 0.00015679099999999987...</msg>
<status status="PASS" starttime="20201029 18:15:03.284" endtime="20201029 18:15:03.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.292" level="INFO">${RESULT} = {'diff': [0.00015793100000000004, 0.00015679199999999935, 0.0001567770000000003, 0.00015677799999999978, 0.0001568199999999985, 0.00015679099999999987, 0.00015675000000000064, 0.00015677799999999978, ...</msg>
<status status="PASS" starttime="20201029 18:15:03.289" endtime="20201029 18:15:03.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.296" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:03.295" endtime="20201029 18:15:03.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.299" level="INFO">VALUE: [0.00015793100000000004, 0.00015679199999999935, 0.0001567770000000003, 0.00015677799999999978, 0.0001568199999999985, 0.00015679099999999987, 0.00015675000000000064, 0.00015677799999999978, 0.00015679099999999987, 0.00015679199999999935, 0.00015679099999999987, 0.0001567640000000002, 0.00015679200000000282, 0.0001567770000000003, 0.00015680499999999944, 0.00015679199999999935, 0.0001567770000000003, 0.00015677799999999978, 0.00015677799999999978, 0.00015681899999999901, 0.00015679199999999935, 0.00015679199999999935, 0.0001567770000000003, 0.00015679199999999935, 0.00015679199999999935, 0.00015681899999999901, 0.00015679200000000282, 0.0001567640000000002, 0.0001567770000000003, 0.00015675000000000064, 0.00015677799999999978, 0.00015679099999999987, 0.00015677799999999978, 0.00015677799999999978, 0.00015679099999999987, 0.00015679199999999935, 0.00015680599999999892, 0.00015683300000000205, 0.00015679199999999935, 0.0001567640000000002, 0.00015679099999999987, 0.00015677799999999978, 0.00015680599999999892, 0.0001567770000000003, 0.00015680599999999892, 0.00015677799999999978, 0.00015675000000000064, 0.00015679199999999935, 0.0001567640000000002, 0.00015683299999999858]</msg>
<status status="PASS" starttime="20201029 18:15:03.297" endtime="20201029 18:15:03.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.293" endtime="20201029 18:15:03.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.943" endtime="20201029 18:15:03.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.921" endtime="20201029 18:15:03.302"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:03.304" endtime="20201029 18:15:03.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.303" endtime="20201029 18:15:03.324"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.333" endtime="20201029 18:15:03.349"></status>
</kw>
<msg timestamp="20201029 18:15:03.350" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.331" endtime="20201029 18:15:03.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.352" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.351" endtime="20201029 18:15:03.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.353" endtime="20201029 18:15:03.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.328" endtime="20201029 18:15:03.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.326" endtime="20201029 18:15:03.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.363" endtime="20201029 18:15:03.648"></status>
</kw>
<msg timestamp="20201029 18:15:03.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018204667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018373514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.361" endtime="20201029 18:15:03.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018204667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018373514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.653" endtime="20201029 18:15:03.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.661" endtime="20201029 18:15:03.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.359" endtime="20201029 18:15:03.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.357" endtime="20201029 18:15:03.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:03.668" level="INFO">${PHILIP_RES} = [{'diff': 0.00016884699999999975}, {'diff': 0.00016766699999999982}, {'diff': 0.00016766699999999982}, {'diff': 0.00016769399999999948}, {'diff': 0.00016770799999999905}, {'diff': 0.000167625000000001...</msg>
<status status="PASS" starttime="20201029 18:15:03.664" endtime="20201029 18:15:03.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.673" level="INFO">${RESULT} = {'diff': [0.00016884699999999975, 0.00016766699999999982, 0.00016766699999999982, 0.00016769399999999948, 0.00016770799999999905, 0.0001676250000000011, 0.00016769399999999948, 0.00016770799999999905,...</msg>
<status status="PASS" starttime="20201029 18:15:03.669" endtime="20201029 18:15:03.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.677" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:03.676" endtime="20201029 18:15:03.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.680" level="INFO">VALUE: [0.00016884699999999975, 0.00016766699999999982, 0.00016766699999999982, 0.00016769399999999948, 0.00016770799999999905, 0.0001676250000000011, 0.00016769399999999948, 0.00016770799999999905, 0.00016768099999999939, 0.00016768099999999939, 0.00016770799999999905, 0.0001676250000000011, 0.00016768099999999939, 0.00016769399999999948, 0.00016769499999999896, 0.00016768099999999939, 0.0001676799999999999, 0.00016769400000000295, 0.00016768100000000286, 0.00016769400000000295, 0.0001676799999999999, 0.00016769399999999948, 0.00016768099999999939, 0.0001676799999999999, 0.00016769399999999948, 0.00016769499999999896, 0.00016769399999999948, 0.00016774999999999776, 0.00016770899999999853, 0.00016769499999999896, 0.00016770799999999905, 0.00016768099999999939, 0.00016765300000000025, 0.0001676799999999999, 0.0001677220000000021, 0.00016766699999999982, 0.00016768100000000286, 0.00016769400000000295, 0.00016773700000000114, 0.0001677220000000021, 0.0001676799999999999, 0.0001676250000000011, 0.00016768099999999939, 0.00016772199999999862, 0.0001676799999999999, 0.0001677229999999981, 0.00016769499999999896, 0.00016763900000000068, 0.00016773600000000166, 0.00016769500000000243]</msg>
<status status="PASS" starttime="20201029 18:15:03.679" endtime="20201029 18:15:03.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.674" endtime="20201029 18:15:03.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.325" endtime="20201029 18:15:03.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.302" endtime="20201029 18:15:03.682"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:03.684" endtime="20201029 18:15:03.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.683" endtime="20201029 18:15:03.705"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.713" endtime="20201029 18:15:03.730"></status>
</kw>
<msg timestamp="20201029 18:15:03.731" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.711" endtime="20201029 18:15:03.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.733" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.732" endtime="20201029 18:15:03.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.734" endtime="20201029 18:15:03.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.709" endtime="20201029 18:15:03.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.707" endtime="20201029 18:15:03.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.744" endtime="20201029 18:15:04.034"></status>
</kw>
<msg timestamp="20201029 18:15:04.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018234667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018414764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.742" endtime="20201029 18:15:04.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018234667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018414764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.038" endtime="20201029 18:15:04.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.046" endtime="20201029 18:15:04.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.739" endtime="20201029 18:15:04.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.738" endtime="20201029 18:15:04.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:04.053" level="INFO">${PHILIP_RES} = [{'diff': 0.0001800970000000006}, {'diff': 0.0001789999999999986}, {'diff': 0.0001789579999999999}, {'diff': 0.0001789449999999998}, {'diff': 0.0001789579999999999}, {'diff': 0.00017894400000000033}, ...</msg>
<status status="PASS" starttime="20201029 18:15:04.050" endtime="20201029 18:15:04.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:04.057" level="INFO">${RESULT} = {'diff': [0.0001800970000000006, 0.0001789999999999986, 0.0001789579999999999, 0.0001789449999999998, 0.0001789579999999999, 0.00017894400000000033, 0.00017898599999999903, 0.00017893100000000023, 0.0...</msg>
<status status="PASS" starttime="20201029 18:15:04.054" endtime="20201029 18:15:04.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.062" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:04.061" endtime="20201029 18:15:04.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.065" level="INFO">VALUE: [0.0001800970000000006, 0.0001789999999999986, 0.0001789579999999999, 0.0001789449999999998, 0.0001789579999999999, 0.00017894400000000033, 0.00017898599999999903, 0.00017893100000000023, 0.0001789579999999999, 0.00017887499999999848, 0.00017893100000000023, 0.00017895899999999937, 0.0001789449999999998, 0.00017893000000000076, 0.0001789449999999998, 0.0001789169999999972, 0.00017897199999999946, 0.00017897200000000293, 0.0001789579999999999, 0.00017898700000000198, 0.00017900000000000207, 0.00017898599999999903, 0.0001789579999999999, 0.00017895900000000284, 0.00017894400000000033, 0.0001789579999999999, 0.00017901399999999817, 0.0001789869999999985, 0.0001789449999999998, 0.00017888900000000152, 0.00017891700000000066, 0.0001789449999999998, 0.00017894400000000033, 0.0001789579999999999, 0.00017898599999999903, 0.00017893100000000023, 0.00017894400000000033, 0.00017887499999999848, 0.00017897199999999946, 0.00017897299999999894, 0.00017894400000000033, 0.0001789579999999999, 0.00017893100000000023, 0.00017895899999999937, 0.0001789579999999999, 0.0001789579999999999, 0.00017893100000000023, 0.0001789449999999998, 0.00017890299999999762, 0.00017897200000000293]</msg>
<status status="PASS" starttime="20201029 18:15:04.063" endtime="20201029 18:15:04.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.058" endtime="20201029 18:15:04.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.705" endtime="20201029 18:15:04.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.682" endtime="20201029 18:15:04.067"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:04.070" endtime="20201029 18:15:04.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.068" endtime="20201029 18:15:04.090"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.098" endtime="20201029 18:15:04.116"></status>
</kw>
<msg timestamp="20201029 18:15:04.116" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.096" endtime="20201029 18:15:04.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.119" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.117" endtime="20201029 18:15:04.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.120" endtime="20201029 18:15:04.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.094" endtime="20201029 18:15:04.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.092" endtime="20201029 18:15:04.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.130" endtime="20201029 18:15:04.417"></status>
</kw>
<msg timestamp="20201029 18:15:04.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018160903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018352639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.129" endtime="20201029 18:15:04.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018160903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018352639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.421" endtime="20201029 18:15:04.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.429" endtime="20201029 18:15:04.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.126" endtime="20201029 18:15:04.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.124" endtime="20201029 18:15:04.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:04.436" level="INFO">${PHILIP_RES} = [{'diff': 0.00019173600000000138}, {'diff': 0.00019058299999999764}, {'diff': 0.00019054099999999893}, {'diff': 0.00019056900000000154}, {'diff': 0.0001905830000000011}, {'diff': 0.0001905689999999980...</msg>
<status status="PASS" starttime="20201029 18:15:04.433" endtime="20201029 18:15:04.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:04.440" level="INFO">${RESULT} = {'diff': [0.00019173600000000138, 0.00019058299999999764, 0.00019054099999999893, 0.00019056900000000154, 0.0001905830000000011, 0.00019056899999999807, 0.00019055600000000145, 0.00019056900000000154,...</msg>
<status status="PASS" starttime="20201029 18:15:04.437" endtime="20201029 18:15:04.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.445" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:04.444" endtime="20201029 18:15:04.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.447" level="INFO">VALUE: [0.00019173600000000138, 0.00019058299999999764, 0.00019054099999999893, 0.00019056900000000154, 0.0001905830000000011, 0.00019056899999999807, 0.00019055600000000145, 0.00019056900000000154, 0.00019056899999999807, 0.00019056899999999807, 0.00019054200000000188, 0.0001905419999999984, 0.00019058299999999764, 0.00019054200000000188, 0.0001905830000000011, 0.0001905419999999984, 0.00019055600000000145, 0.00019061199999999973, 0.0001905419999999984, 0.00019051399999999927, 0.00019055600000000145, 0.00019054200000000188, 0.00019055600000000145, 0.0001905419999999984, 0.00019054200000000188, 0.00019055600000000145, 0.0001905419999999984, 0.00019055600000000145, 0.00019057000000000102, 0.00019059700000000068, 0.0001905419999999984, 0.00019055600000000145, 0.00019051400000000274, 0.00019048600000000013, 0.00019051399999999927, 0.00019062499999999982, 0.00019058400000000059, 0.00019056999999999755, 0.00019055599999999798, 0.0001905830000000011, 0.00019055600000000145, 0.00019055599999999798, 0.00019059700000000068, 0.00019055600000000145, 0.0001905830000000011, 0.00019057000000000102, 0.00019051399999999927, 0.00019054200000000188, 0.00019056899999999807, 0.0001905419999999984]</msg>
<status status="PASS" starttime="20201029 18:15:04.446" endtime="20201029 18:15:04.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.441" endtime="20201029 18:15:04.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.090" endtime="20201029 18:15:04.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.067" endtime="20201029 18:15:04.450"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:04.452" endtime="20201029 18:15:04.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.451" endtime="20201029 18:15:04.472"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.481" endtime="20201029 18:15:04.500"></status>
</kw>
<msg timestamp="20201029 18:15:04.500" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.479" endtime="20201029 18:15:04.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.503" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.501" endtime="20201029 18:15:04.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.504" endtime="20201029 18:15:04.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.476" endtime="20201029 18:15:04.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.474" endtime="20201029 18:15:04.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.514" endtime="20201029 18:15:04.800"></status>
</kw>
<msg timestamp="20201029 18:15:04.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018024597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018228292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.512" endtime="20201029 18:15:04.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018024597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018228292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.804" endtime="20201029 18:15:04.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.813" endtime="20201029 18:15:04.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.509" endtime="20201029 18:15:04.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.507" endtime="20201029 18:15:04.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:04.819" level="INFO">${PHILIP_RES} = [{'diff': 0.00020369500000000026}, {'diff': 0.000202542}, {'diff': 0.0002025550000000001}, {'diff': 0.000202542}, {'diff': 0.00020252800000000043}, {'diff': 0.00020252800000000043}, {'diff': 0.0002025...</msg>
<status status="PASS" starttime="20201029 18:15:04.816" endtime="20201029 18:15:04.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:04.824" level="INFO">${RESULT} = {'diff': [0.00020369500000000026, 0.000202542, 0.0002025550000000001, 0.000202542, 0.00020252800000000043, 0.00020252800000000043, 0.0002025550000000001, 0.0002025550000000001, 0.000202542, 0.00020254...</msg>
<status status="PASS" starttime="20201029 18:15:04.820" endtime="20201029 18:15:04.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.829" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:04.828" endtime="20201029 18:15:04.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.831" level="INFO">VALUE: [0.00020369500000000026, 0.000202542, 0.0002025550000000001, 0.000202542, 0.00020252800000000043, 0.00020252800000000043, 0.0002025550000000001, 0.0002025550000000001, 0.000202542, 0.000202542, 0.0002025550000000001, 0.00020252800000000043, 0.00020252800000000043, 0.000202542, 0.00020254099999999706, 0.00020254100000000053, 0.000202542, 0.00020255599999999957, 0.0002025550000000001, 0.00020254100000000053, 0.00020252800000000043, 0.00020252800000000043, 0.00020252800000000043, 0.0002025550000000001, 0.00020251400000000086, 0.00020252799999999696, 0.000202542, 0.0002025000000000013, 0.000202542, 0.000202542, 0.0002025969999999988, 0.00020254100000000053, 0.000202542, 0.00020255599999999957, 0.00020252800000000043, 0.00020259700000000228, 0.00020255599999999957, 0.00020255599999999957, 0.00020254100000000053, 0.00020254100000000053, 0.000202542, 0.00020255599999999957, 0.000202542, 0.00020254100000000053, 0.0002025000000000013, 0.0002025000000000013, 0.000202542, 0.00020254099999999706, 0.000202542, 0.00020251400000000086]</msg>
<status status="PASS" starttime="20201029 18:15:04.830" endtime="20201029 18:15:04.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.825" endtime="20201029 18:15:04.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.473" endtime="20201029 18:15:04.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.450" endtime="20201029 18:15:04.833"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:04.836" endtime="20201029 18:15:04.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.834" endtime="20201029 18:15:04.856"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.864" endtime="20201029 18:15:04.884"></status>
</kw>
<msg timestamp="20201029 18:15:04.884" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.863" endtime="20201029 18:15:04.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.887" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.885" endtime="20201029 18:15:04.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.888" endtime="20201029 18:15:04.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.860" endtime="20201029 18:15:04.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.858" endtime="20201029 18:15:04.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.898" endtime="20201029 18:15:05.184"></status>
</kw>
<msg timestamp="20201029 18:15:05.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018313153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018529167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.896" endtime="20201029 18:15:05.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018313153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018529167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.188" endtime="20201029 18:15:05.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.197" endtime="20201029 18:15:05.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.893" endtime="20201029 18:15:05.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.891" endtime="20201029 18:15:05.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:05.203" level="INFO">${PHILIP_RES} = [{'diff': 0.00021601400000000048}, {'diff': 0.00021484699999999718}, {'diff': 0.00021482000000000098}, {'diff': 0.00021486100000000022}, {'diff': 0.00021486100000000022}, {'diff': 0.000214847000000000...</msg>
<status status="PASS" starttime="20201029 18:15:05.200" endtime="20201029 18:15:05.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.208" level="INFO">${RESULT} = {'diff': [0.00021601400000000048, 0.00021484699999999718, 0.00021482000000000098, 0.00021486100000000022, 0.00021486100000000022, 0.00021484700000000065, 0.0002148749999999998, 0.00021486100000000022,...</msg>
<status status="PASS" starttime="20201029 18:15:05.204" endtime="20201029 18:15:05.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.212" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:05.211" endtime="20201029 18:15:05.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.215" level="INFO">VALUE: [0.00021601400000000048, 0.00021484699999999718, 0.00021482000000000098, 0.00021486100000000022, 0.00021486100000000022, 0.00021484700000000065, 0.0002148749999999998, 0.00021486100000000022, 0.0002148749999999998, 0.00021484800000000012, 0.00021486100000000022, 0.00021480499999999847, 0.0002148749999999998, 0.00021484700000000065, 0.00021486100000000022, 0.00021486100000000022, 0.00021484800000000012, 0.00021486099999999675, 0.00021483300000000108, 0.00021486100000000022, 0.00021484700000000065, 0.0002148749999999998, 0.00021488899999999936, 0.00021486100000000022, 0.00021484800000000012, 0.0002149169999999985, 0.00021488899999999936, 0.00021484699999999718, 0.00021484700000000065, 0.00021486100000000022, 0.00021484800000000012, 0.0002149169999999985, 0.00021486100000000022, 0.00021486100000000022, 0.00021479199999999837, 0.00021482000000000098, 0.00021488899999999936, 0.0002148619999999997, 0.0002148619999999997, 0.00021488899999999936, 0.00021486100000000022, 0.00021486100000000022, 0.00021486100000000022, 0.00021483300000000108, 0.00021484800000000012, 0.00021484800000000012, 0.00021486100000000022, 0.00021483300000000108, 0.00021486100000000022, 0.0002147779999999988]</msg>
<status status="PASS" starttime="20201029 18:15:05.213" endtime="20201029 18:15:05.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.209" endtime="20201029 18:15:05.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.856" endtime="20201029 18:15:05.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.834" endtime="20201029 18:15:05.217"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:05.219" endtime="20201029 18:15:05.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.218" endtime="20201029 18:15:05.239"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.249" endtime="20201029 18:15:05.270"></status>
</kw>
<msg timestamp="20201029 18:15:05.271" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.246" endtime="20201029 18:15:05.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.274" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.272" endtime="20201029 18:15:05.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.275" endtime="20201029 18:15:05.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.243" endtime="20201029 18:15:05.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.241" endtime="20201029 18:15:05.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.285" endtime="20201029 18:15:05.571"></status>
</kw>
<msg timestamp="20201029 18:15:05.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020390125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020618819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.284" endtime="20201029 18:15:05.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020390125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020618819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.576" endtime="20201029 18:15:05.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.584" endtime="20201029 18:15:05.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.281" endtime="20201029 18:15:05.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.279" endtime="20201029 18:15:05.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:05.591" level="INFO">${PHILIP_RES} = [{'diff': 0.0002286940000000015}, {'diff': 0.00022755600000000029}, {'diff': 0.0002275139999999981}, {'diff': 0.00022745799999999983}, {'diff': 0.00022752800000000115}, {'diff': 0.00022752700000000167...</msg>
<status status="PASS" starttime="20201029 18:15:05.588" endtime="20201029 18:15:05.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.595" level="INFO">${RESULT} = {'diff': [0.0002286940000000015, 0.00022755600000000029, 0.0002275139999999981, 0.00022745799999999983, 0.00022752800000000115, 0.00022752700000000167, 0.00022748699999999844, 0.00022752799999999768, ...</msg>
<status status="PASS" starttime="20201029 18:15:05.592" endtime="20201029 18:15:05.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.600" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:05.599" endtime="20201029 18:15:05.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.602" level="INFO">VALUE: [0.0002286940000000015, 0.00022755600000000029, 0.0002275139999999981, 0.00022745799999999983, 0.00022752800000000115, 0.00022752700000000167, 0.00022748699999999844, 0.00022752799999999768, 0.000227500000000002, 0.000227500000000002, 0.00022751400000000158, 0.0002275269999999982, 0.0002275269999999982, 0.00022752800000000115, 0.00022751400000000158, 0.00022754200000000072, 0.00022754199999999725, 0.00022752800000000115, 0.00022754100000000124, 0.00022748599999999897, 0.00022752799999999768, 0.00022752799999999768, 0.00022752800000000115, 0.0002274719999999994, 0.00022752800000000115, 0.00022744400000000026, 0.0002275139999999981, 0.00022754200000000072, 0.00022748599999999897, 0.00022748599999999897, 0.00022752799999999768, 0.00022751400000000158, 0.000227500000000002, 0.00022752800000000115, 0.00022754099999999777, 0.0002276109999999991, 0.00022752800000000115, 0.00022752800000000115, 0.00022748599999999897, 0.0002275269999999982, 0.00022748600000000244, 0.00022751400000000158, 0.00022754200000000072, 0.0002275139999999981, 0.00022751400000000505, 0.00022754099999999777, 0.0002275269999999982, 0.00022751400000000505, 0.00022752799999999768, 0.00022754200000000419]</msg>
<status status="PASS" starttime="20201029 18:15:05.601" endtime="20201029 18:15:05.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.596" endtime="20201029 18:15:05.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.240" endtime="20201029 18:15:05.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.217" endtime="20201029 18:15:05.605"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:05.607" endtime="20201029 18:15:05.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.606" endtime="20201029 18:15:05.628"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.636" endtime="20201029 18:15:05.657"></status>
</kw>
<msg timestamp="20201029 18:15:05.658" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.634" endtime="20201029 18:15:05.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.660" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.659" endtime="20201029 18:15:05.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.662" endtime="20201029 18:15:05.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.632" endtime="20201029 18:15:05.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.630" endtime="20201029 18:15:05.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.671" endtime="20201029 18:15:05.962"></status>
</kw>
<msg timestamp="20201029 18:15:05.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018169542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01841125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:05.669" endtime="20201029 18:15:05.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018169542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01841125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:05.966" endtime="20201029 18:15:05.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.974" endtime="20201029 18:15:05.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.667" endtime="20201029 18:15:05.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.665" endtime="20201029 18:15:05.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:05.981" level="INFO">${PHILIP_RES} = [{'diff': 0.0002417080000000002}, {'diff': 0.00024057000000000245}, {'diff': 0.00024050000000000113}, {'diff': 0.00024052800000000027}, {'diff': 0.00024054199999999984}, {'diff': 0.0002405410000000003...</msg>
<status status="PASS" starttime="20201029 18:15:05.978" endtime="20201029 18:15:05.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.986" level="INFO">${RESULT} = {'diff': [0.0002417080000000002, 0.00024057000000000245, 0.00024050000000000113, 0.00024052800000000027, 0.00024054199999999984, 0.00024054100000000037, 0.00024058400000000202, 0.00024054199999999984,...</msg>
<status status="PASS" starttime="20201029 18:15:05.982" endtime="20201029 18:15:05.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.991" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:05.990" endtime="20201029 18:15:05.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.993" level="INFO">VALUE: [0.0002417080000000002, 0.00024057000000000245, 0.00024050000000000113, 0.00024052800000000027, 0.00024054199999999984, 0.00024054100000000037, 0.00024058400000000202, 0.00024054199999999984, 0.00024059799999999812, 0.00024055600000000288, 0.00024045799999999895, 0.00024058399999999855, 0.00024054199999999984, 0.0002405409999999969, 0.0002405559999999994, 0.00024047300000000146, 0.00024059699999999865, 0.0002405559999999994, 0.00024055499999999994, 0.00024052800000000027, 0.00024058299999999908, 0.00024055499999999994, 0.00024054199999999984, 0.00024054199999999984, 0.00024050000000000113, 0.00024059699999999865, 0.0002405270000000008, 0.00024052800000000027, 0.00024055499999999994, 0.00024054100000000037, 0.00024054199999999984, 0.00024054100000000037, 0.00024050000000000113, 0.00024054199999999984, 0.00024055499999999994, 0.00024049999999999766, 0.0002405689999999995, 0.0002406119999999977, 0.00024055600000000288, 0.00024058300000000254, 0.00024052800000000027, 0.0002405559999999994, 0.0002405409999999969, 0.00024052800000000027, 0.00024054199999999984, 0.00024054100000000037, 0.00024054100000000037, 0.00024052699999999733, 0.0002405559999999994, 0.00024050000000000113]</msg>
<status status="PASS" starttime="20201029 18:15:05.992" endtime="20201029 18:15:05.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.987" endtime="20201029 18:15:05.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.628" endtime="20201029 18:15:05.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.605" endtime="20201029 18:15:05.995"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:05.998" endtime="20201029 18:15:06.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.996" endtime="20201029 18:15:06.018"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.026" endtime="20201029 18:15:06.048"></status>
</kw>
<msg timestamp="20201029 18:15:06.048" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.025" endtime="20201029 18:15:06.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.051" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.050" endtime="20201029 18:15:06.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.052" endtime="20201029 18:15:06.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.022" endtime="20201029 18:15:06.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.020" endtime="20201029 18:15:06.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.062" endtime="20201029 18:15:06.352"></status>
</kw>
<msg timestamp="20201029 18:15:06.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018282514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018537625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.060" endtime="20201029 18:15:06.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018282514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018537625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.356" endtime="20201029 18:15:06.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.364" endtime="20201029 18:15:06.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.057" endtime="20201029 18:15:06.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.055" endtime="20201029 18:15:06.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:06.371" level="INFO">${PHILIP_RES} = [{'diff': 0.00025511099999999884}, {'diff': 0.0002539309999999989}, {'diff': 0.0002539309999999989}, {'diff': 0.0002539309999999989}, {'diff': 0.0002539310000000024}, {'diff': 0.00025390299999999977},...</msg>
<status status="PASS" starttime="20201029 18:15:06.368" endtime="20201029 18:15:06.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.375" level="INFO">${RESULT} = {'diff': [0.00025511099999999884, 0.0002539309999999989, 0.0002539309999999989, 0.0002539309999999989, 0.0002539310000000024, 0.00025390299999999977, 0.000253943999999999, 0.00025387500000000063, 0.00...</msg>
<status status="PASS" starttime="20201029 18:15:06.372" endtime="20201029 18:15:06.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.380" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:06.379" endtime="20201029 18:15:06.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.382" level="INFO">VALUE: [0.00025511099999999884, 0.0002539309999999989, 0.0002539309999999989, 0.0002539309999999989, 0.0002539310000000024, 0.00025390299999999977, 0.000253943999999999, 0.00025387500000000063, 0.00025392999999999943, 0.0002539309999999989, 0.00025390299999999977, 0.0002539310000000024, 0.0002539449999999985, 0.000253943999999999, 0.000253943999999999, 0.00025391599999999986, 0.0002538890000000002, 0.0002539310000000024, 0.0002539309999999989, 0.00025391699999999934, 0.00025392999999999943, 0.000253943999999999, 0.00025392999999999943, 0.0002539300000000029, 0.0002539449999999985, 0.00025390299999999977, 0.0002539309999999989, 0.0002539590000000015, 0.00025392999999999943, 0.0002540140000000003, 0.0002539579999999986, 0.000253943999999999, 0.0002539309999999989, 0.0002539449999999985, 0.00025394500000000195, 0.0002539440000000025, 0.0002539999999999973, 0.00025392999999999943, 0.00025392999999999943, 0.0002538479999999975, 0.0002539170000000028, 0.00025400000000000075, 0.00025391699999999934, 0.0002539859999999977, 0.00025392999999999943, 0.00025391599999999986, 0.0002539440000000025, 0.00025397199999999814, 0.00025392999999999943, 0.0002539309999999989]</msg>
<status status="PASS" starttime="20201029 18:15:06.381" endtime="20201029 18:15:06.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.376" endtime="20201029 18:15:06.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.018" endtime="20201029 18:15:06.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.995" endtime="20201029 18:15:06.392"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:06.395" endtime="20201029 18:15:06.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.393" endtime="20201029 18:15:06.415"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.424" endtime="20201029 18:15:06.445"></status>
</kw>
<msg timestamp="20201029 18:15:06.446" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.422" endtime="20201029 18:15:06.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.449" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.447" endtime="20201029 18:15:06.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.450" endtime="20201029 18:15:06.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.420" endtime="20201029 18:15:06.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.418" endtime="20201029 18:15:06.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.460" endtime="20201029 18:15:06.746"></status>
</kw>
<msg timestamp="20201029 18:15:06.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018193847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018462667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.458" endtime="20201029 18:15:06.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018193847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018462667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.750" endtime="20201029 18:15:06.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.759" endtime="20201029 18:15:06.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.456" endtime="20201029 18:15:06.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.454" endtime="20201029 18:15:06.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:06.765" level="INFO">${PHILIP_RES} = [{'diff': 0.0002688199999999995}, {'diff': 0.00026763900000000007}, {'diff': 0.0002676669999999992}, {'diff': 0.00026765299999999964}, {'diff': 0.00026763900000000007}, {'diff': 0.00026765299999999964...</msg>
<status status="PASS" starttime="20201029 18:15:06.762" endtime="20201029 18:15:06.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.770" level="INFO">${RESULT} = {'diff': [0.0002688199999999995, 0.00026763900000000007, 0.0002676669999999992, 0.00026765299999999964, 0.00026763900000000007, 0.00026765299999999964, 0.0002676809999999988, 0.00026765299999999964, 0...</msg>
<status status="PASS" starttime="20201029 18:15:06.766" endtime="20201029 18:15:06.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.774" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:06.773" endtime="20201029 18:15:06.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.777" level="INFO">VALUE: [0.0002688199999999995, 0.00026763900000000007, 0.0002676669999999992, 0.00026765299999999964, 0.00026763900000000007, 0.00026765299999999964, 0.0002676809999999988, 0.00026765299999999964, 0.00026765299999999964, 0.0002676669999999992, 0.00026765299999999964, 0.0002676670000000027, 0.0002676669999999992, 0.00026765299999999964, 0.00026766599999999974, 0.0002676799999999993, 0.00026763900000000007, 0.00026766599999999974, 0.00026763799999999713, 0.00026765200000000017, 0.0002675690000000022, 0.00026765200000000017, 0.0002676950000000018, 0.0002676799999999993, 0.0002676950000000018, 0.0002675969999999979, 0.0002676660000000032, 0.0002676250000000005, 0.00026765299999999964, 0.00026763900000000007, 0.0002676669999999992, 0.0002676250000000005, 0.00026763900000000007, 0.00026765299999999964, 0.00026765299999999964, 0.00026769499999999835, 0.0002676809999999988, 0.00026765299999999964, 0.0002676669999999992, 0.00026765299999999964, 0.00026768100000000225, 0.0002676250000000005, 0.0002676799999999993, 0.0002676669999999992, 0.00026770799999999845, 0.0002676799999999993, 0.0002676120000000004, 0.00026765299999999964, 0.0002676669999999992, 0.0002676250000000005]</msg>
<status status="PASS" starttime="20201029 18:15:06.775" endtime="20201029 18:15:06.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.771" endtime="20201029 18:15:06.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.416" endtime="20201029 18:15:06.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.393" endtime="20201029 18:15:06.780"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:06.782" endtime="20201029 18:15:06.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.781" endtime="20201029 18:15:06.802"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.811" endtime="20201029 18:15:06.834"></status>
</kw>
<msg timestamp="20201029 18:15:06.835" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.809" endtime="20201029 18:15:06.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.838" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.836" endtime="20201029 18:15:06.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.839" endtime="20201029 18:15:06.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.806" endtime="20201029 18:15:06.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.804" endtime="20201029 18:15:06.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.848" endtime="20201029 18:15:07.132"></status>
</kw>
<msg timestamp="20201029 18:15:07.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018123986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018406889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.846" endtime="20201029 18:15:07.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018123986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018406889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.136" endtime="20201029 18:15:07.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.144" endtime="20201029 18:15:07.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.844" endtime="20201029 18:15:07.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.842" endtime="20201029 18:15:07.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:07.151" level="INFO">${PHILIP_RES} = [{'diff': 0.00028290299999999755}, {'diff': 0.00028169400000000247}, {'diff': 0.00028179199999999946}, {'diff': 0.00028170799999999857}, {'diff': 0.00028172199999999814}, {'diff': 0.000281736000000001...</msg>
<status status="PASS" starttime="20201029 18:15:07.148" endtime="20201029 18:15:07.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:07.156" level="INFO">${RESULT} = {'diff': [0.00028290299999999755, 0.00028169400000000247, 0.00028179199999999946, 0.00028170799999999857, 0.00028172199999999814, 0.0002817360000000012, 0.0002817360000000012, 0.00028166699999999933, ...</msg>
<status status="PASS" starttime="20201029 18:15:07.152" endtime="20201029 18:15:07.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.161" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:07.160" endtime="20201029 18:15:07.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.163" level="INFO">VALUE: [0.00028290299999999755, 0.00028169400000000247, 0.00028179199999999946, 0.00028170799999999857, 0.00028172199999999814, 0.0002817360000000012, 0.0002817360000000012, 0.00028166699999999933, 0.0002817360000000012, 0.0002817779999999999, 0.0002817360000000012, 0.0002817360000000012, 0.0002817360000000012, 0.00028175000000000075, 0.00028175000000000075, 0.00028170799999999857, 0.00028172199999999814, 0.00028179199999999946, 0.0002817360000000012, 0.0002817220000000016, 0.0002817359999999977, 0.00028172199999999814, 0.0002817360000000012, 0.0002817220000000016, 0.0002817220000000016, 0.0002817359999999977, 0.0002817779999999999, 0.0002817360000000012, 0.0002817640000000003, 0.0002817640000000003, 0.0002817360000000012, 0.0002817359999999977, 0.0002817359999999977, 0.000281693999999999, 0.00028169400000000247, 0.0002817360000000012, 0.00028170799999999857, 0.00028167999999999943, 0.000281693999999999, 0.000281693999999999, 0.00028170800000000204, 0.00028170799999999857, 0.0002817359999999977, 0.000281693999999999, 0.0002817499999999973, 0.0002817359999999977, 0.00028173600000000465, 0.00028173600000000465, 0.00028173600000000465, 0.0002817080000000055]</msg>
<status status="PASS" starttime="20201029 18:15:07.162" endtime="20201029 18:15:07.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.157" endtime="20201029 18:15:07.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.803" endtime="20201029 18:15:07.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.780" endtime="20201029 18:15:07.165"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:07.168" endtime="20201029 18:15:07.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.166" endtime="20201029 18:15:07.188"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.196" endtime="20201029 18:15:07.220"></status>
</kw>
<msg timestamp="20201029 18:15:07.221" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.195" endtime="20201029 18:15:07.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.223" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.222" endtime="20201029 18:15:07.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.224" endtime="20201029 18:15:07.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.192" endtime="20201029 18:15:07.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.190" endtime="20201029 18:15:07.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.234" endtime="20201029 18:15:07.523"></status>
</kw>
<msg timestamp="20201029 18:15:07.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017981139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018278444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.232" endtime="20201029 18:15:07.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017981139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018278444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.527" endtime="20201029 18:15:07.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.535" endtime="20201029 18:15:07.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.229" endtime="20201029 18:15:07.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.228" endtime="20201029 18:15:07.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:07.542" level="INFO">${PHILIP_RES} = [{'diff': 0.0002973050000000012}, {'diff': 0.0002961530000000004}, {'diff': 0.00029616699999999996}, {'diff': 0.0002961660000000005}, {'diff': 0.0002961660000000005}, {'diff': 0.00029616699999999996},...</msg>
<status status="PASS" starttime="20201029 18:15:07.539" endtime="20201029 18:15:07.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:07.546" level="INFO">${RESULT} = {'diff': [0.0002973050000000012, 0.0002961530000000004, 0.00029616699999999996, 0.0002961660000000005, 0.0002961660000000005, 0.00029616699999999996, 0.00029618099999999953, 0.00029616699999999996, 0....</msg>
<status status="PASS" starttime="20201029 18:15:07.543" endtime="20201029 18:15:07.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.551" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:07.549" endtime="20201029 18:15:07.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.553" level="INFO">VALUE: [0.0002973050000000012, 0.0002961530000000004, 0.00029616699999999996, 0.0002961660000000005, 0.0002961660000000005, 0.00029616699999999996, 0.00029618099999999953, 0.00029616699999999996, 0.0002961660000000005, 0.000296165999999997, 0.00029616699999999996, 0.00029616699999999996, 0.0002961660000000005, 0.0002961520000000009, 0.0002962079999999992, 0.0002961530000000004, 0.0002961530000000004, 0.00029609699999999864, 0.0002961249999999978, 0.0002961660000000005, 0.00029616699999999996, 0.00029618000000000005, 0.0002961660000000005, 0.0002961530000000004, 0.0002961530000000004, 0.00029616699999999996, 0.0002961530000000004, 0.00029618000000000005, 0.00029618099999999953, 0.00029616699999999996, 0.0002961949999999991, 0.0002961660000000005, 0.00029608399999999854, 0.0002961530000000004, 0.0002961110000000017, 0.00029616699999999996, 0.0002961379999999979, 0.00029613899999999735, 0.00029616699999999996, 0.00029618099999999953, 0.00029616699999999996, 0.00029613800000000134, 0.0002961390000000008, 0.00029616699999999996, 0.0002961670000000069, 0.0002961520000000009, 0.0002961660000000005, 0.00029616699999999996, 0.00029618099999999953, 0.0002961949999999991]</msg>
<status status="PASS" starttime="20201029 18:15:07.552" endtime="20201029 18:15:07.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.547" endtime="20201029 18:15:07.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.188" endtime="20201029 18:15:07.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.166" endtime="20201029 18:15:07.555"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:07.557" endtime="20201029 18:15:07.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.556" endtime="20201029 18:15:07.577"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.586" endtime="20201029 18:15:07.611"></status>
</kw>
<msg timestamp="20201029 18:15:07.611" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.584" endtime="20201029 18:15:07.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.614" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.612" endtime="20201029 18:15:07.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.615" endtime="20201029 18:15:07.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.582" endtime="20201029 18:15:07.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.580" endtime="20201029 18:15:07.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.625" endtime="20201029 18:15:07.911"></status>
</kw>
<msg timestamp="20201029 18:15:07.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018223611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018535694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.623" endtime="20201029 18:15:07.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018223611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018535694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.916" endtime="20201029 18:15:07.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.924" endtime="20201029 18:15:07.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.621" endtime="20201029 18:15:07.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.619" endtime="20201029 18:15:07.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:07.931" level="INFO">${PHILIP_RES} = [{'diff': 0.0003120829999999977}, {'diff': 0.00031095800000000007}, {'diff': 0.00031097199999999964}, {'diff': 0.00031095800000000007}, {'diff': 0.00031097199999999964}, {'diff': 0.0003109729999999991...</msg>
<status status="PASS" starttime="20201029 18:15:07.927" endtime="20201029 18:15:07.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:07.935" level="INFO">${RESULT} = {'diff': [0.0003120829999999977, 0.00031095800000000007, 0.00031097199999999964, 0.00031095800000000007, 0.00031097199999999964, 0.0003109729999999991, 0.00031095800000000007, 0.0003110129999999989, 0...</msg>
<status status="PASS" starttime="20201029 18:15:07.932" endtime="20201029 18:15:07.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.939" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:07.938" endtime="20201029 18:15:07.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.942" level="INFO">VALUE: [0.0003120829999999977, 0.00031095800000000007, 0.00031097199999999964, 0.00031095800000000007, 0.00031097199999999964, 0.0003109729999999991, 0.00031095800000000007, 0.0003110129999999989, 0.00031095800000000007, 0.0003110279999999979, 0.00031090300000000126, 0.0003110419999999975, 0.00031095800000000007, 0.000310959000000003, 0.00031090300000000126, 0.000310959000000003, 0.0003109859999999992, 0.00031097199999999964, 0.0003109999999999988, 0.00031095800000000007, 0.00031094499999999997, 0.0003109159999999979, 0.00031094499999999997, 0.00031093000000000093, 0.00031095899999999954, 0.00031104200000000096, 0.0003109729999999991, 0.00031097199999999964, 0.00031091700000000083, 0.00031095800000000007, 0.0003110279999999979, 0.00031091700000000083, 0.00031092999999999746, 0.00031095800000000007, 0.0003109440000000005, 0.00031097199999999964, 0.00031095800000000007, 0.0003109310000000004, 0.00031095800000000354, 0.00031095899999999954, 0.0003109440000000005, 0.00031094499999999997, 0.00031095800000000007, 0.0003109729999999991, 0.0003109440000000005, 0.00031097199999999964, 0.0003109440000000005, 0.00031097199999999964, 0.0003108890000000017, 0.00031095800000000007]</msg>
<status status="PASS" starttime="20201029 18:15:07.940" endtime="20201029 18:15:07.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.936" endtime="20201029 18:15:07.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.578" endtime="20201029 18:15:07.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.555" endtime="20201029 18:15:07.945"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:07.947" endtime="20201029 18:15:07.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.946" endtime="20201029 18:15:07.967"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.976" endtime="20201029 18:15:08.000"></status>
</kw>
<msg timestamp="20201029 18:15:08.001" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.974" endtime="20201029 18:15:08.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.003" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.002" endtime="20201029 18:15:08.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.004" endtime="20201029 18:15:08.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.971" endtime="20201029 18:15:08.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.969" endtime="20201029 18:15:08.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.014" endtime="20201029 18:15:08.301"></status>
</kw>
<msg timestamp="20201029 18:15:08.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018009889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018337111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.012" endtime="20201029 18:15:08.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018009889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018337111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.305" endtime="20201029 18:15:08.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.314" endtime="20201029 18:15:08.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.009" endtime="20201029 18:15:08.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.008" endtime="20201029 18:15:08.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:08.321" level="INFO">${PHILIP_RES} = [{'diff': 0.00032722199999999854}, {'diff': 0.0003260970000000009}, {'diff': 0.000326110999999997}, {'diff': 0.00032611100000000046}, {'diff': 0.0003260970000000009}, {'diff': 0.00032606999999999775},...</msg>
<status status="PASS" starttime="20201029 18:15:08.317" endtime="20201029 18:15:08.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:08.326" level="INFO">${RESULT} = {'diff': [0.00032722199999999854, 0.0003260970000000009, 0.000326110999999997, 0.00032611100000000046, 0.0003260970000000009, 0.00032606999999999775, 0.0003260840000000008, 0.0003260840000000008, 0.00...</msg>
<status status="PASS" starttime="20201029 18:15:08.322" endtime="20201029 18:15:08.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.330" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:08.329" endtime="20201029 18:15:08.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.333" level="INFO">VALUE: [0.00032722199999999854, 0.0003260970000000009, 0.000326110999999997, 0.00032611100000000046, 0.0003260970000000009, 0.00032606999999999775, 0.0003260840000000008, 0.0003260840000000008, 0.00032611100000000046, 0.0003260970000000009, 0.0003260830000000013, 0.00032608299999999785, 0.00032608299999999785, 0.00032606900000000175, 0.0003260549999999987, 0.0003260969999999974, 0.0003260970000000009, 0.0003260830000000013, 0.0003260830000000013, 0.0003260970000000009, 0.0003260970000000009, 0.0003260830000000013, 0.000326110999999997, 0.0003260840000000008, 0.00032609800000000036, 0.0003260840000000008, 0.00032609800000000036, 0.0003260840000000008, 0.0003260840000000008, 0.0003260969999999974, 0.0003260830000000013, 0.0003260419999999986, 0.0003260419999999986, 0.00032611100000000046, 0.00032606900000000175, 0.00032602799999999904, 0.0003260689999999983, 0.0003260700000000047, 0.0003260689999999983, 0.0003260830000000048, 0.0003261389999999961, 0.0003260969999999974, 0.0003260969999999974, 0.0003260969999999974, 0.0003260969999999974, 0.00032608400000000426, 0.00032608400000000426, 0.00032615300000000264, 0.0003260979999999969, 0.0003260969999999974]</msg>
<status status="PASS" starttime="20201029 18:15:08.331" endtime="20201029 18:15:08.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.327" endtime="20201029 18:15:08.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.968" endtime="20201029 18:15:08.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.945" endtime="20201029 18:15:08.335"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:08.337" endtime="20201029 18:15:08.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.336" endtime="20201029 18:15:08.357"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.366" endtime="20201029 18:15:08.392"></status>
</kw>
<msg timestamp="20201029 18:15:08.393" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.364" endtime="20201029 18:15:08.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.395" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.394" endtime="20201029 18:15:08.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.397" endtime="20201029 18:15:08.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.361" endtime="20201029 18:15:08.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.359" endtime="20201029 18:15:08.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.406" endtime="20201029 18:15:08.693"></status>
</kw>
<msg timestamp="20201029 18:15:08.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018305306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018648042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.404" endtime="20201029 18:15:08.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018305306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018648042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.698" endtime="20201029 18:15:08.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.706" endtime="20201029 18:15:08.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.402" endtime="20201029 18:15:08.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.400" endtime="20201029 18:15:08.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:08.713" level="INFO">${PHILIP_RES} = [{'diff': 0.00034273599999999974}, {'diff': 0.0003415559999999998}, {'diff': 0.0003415699999999994}, {'diff': 0.0003415689999999999}, {'diff': 0.0003415699999999994}, {'diff': 0.00034158299999999947},...</msg>
<status status="PASS" starttime="20201029 18:15:08.709" endtime="20201029 18:15:08.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:08.717" level="INFO">${RESULT} = {'diff': [0.00034273599999999974, 0.0003415559999999998, 0.0003415699999999994, 0.0003415689999999999, 0.0003415699999999994, 0.00034158299999999947, 0.0003415699999999994, 0.0003415560000000033, 0.00...</msg>
<status status="PASS" starttime="20201029 18:15:08.714" endtime="20201029 18:15:08.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.721" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:08.720" endtime="20201029 18:15:08.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.724" level="INFO">VALUE: [0.00034273599999999974, 0.0003415559999999998, 0.0003415699999999994, 0.0003415689999999999, 0.0003415699999999994, 0.00034158299999999947, 0.0003415699999999994, 0.0003415560000000033, 0.0003415689999999999, 0.00034158299999999947, 0.00034152800000000066, 0.0003416529999999973, 0.00034157000000000284, 0.00034157000000000284, 0.0003415689999999999, 0.00034158299999999947, 0.0003415559999999998, 0.0003415559999999998, 0.0003415559999999998, 0.0003415689999999999, 0.00034155500000000033, 0.0003415689999999999, 0.0003415979999999985, 0.0003415699999999994, 0.0003415559999999998, 0.0003415689999999999, 0.00034158299999999947, 0.0003415699999999994, 0.00034159699999999904, 0.00034152800000000066, 0.0003415689999999999, 0.00034158300000000294, 0.0003415689999999999, 0.0003415559999999998, 0.00034154200000000023, 0.0003415699999999994, 0.0003415689999999999, 0.0003415689999999999, 0.00034158399999999894, 0.00034154200000000023, 0.0003415700000000063, 0.0003415689999999999, 0.00034158299999999947, 0.0003415689999999999, 0.0003415699999999994, 0.0003415699999999994, 0.00034159699999999904, 0.00034155500000000033, 0.0003415689999999999, 0.0003415689999999999]</msg>
<status status="PASS" starttime="20201029 18:15:08.723" endtime="20201029 18:15:08.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.718" endtime="20201029 18:15:08.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.358" endtime="20201029 18:15:08.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.335" endtime="20201029 18:15:08.726"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:08.728" endtime="20201029 18:15:08.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.727" endtime="20201029 18:15:08.750"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.761" endtime="20201029 18:15:08.788"></status>
</kw>
<msg timestamp="20201029 18:15:08.789" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.759" endtime="20201029 18:15:08.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.791" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.790" endtime="20201029 18:15:08.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.792" endtime="20201029 18:15:08.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.754" endtime="20201029 18:15:08.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.752" endtime="20201029 18:15:08.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.802" endtime="20201029 18:15:09.088"></status>
</kw>
<msg timestamp="20201029 18:15:09.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022762431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023121, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:08.801" endtime="20201029 18:15:09.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022762431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023121, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:09.092" endtime="20201029 18:15:09.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.100" endtime="20201029 18:15:09.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.798" endtime="20201029 18:15:09.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.796" endtime="20201029 18:15:09.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:09.107" level="INFO">${PHILIP_RES} = [{'diff': 0.00035856899999999955}, {'diff': 0.0003574029999999992}, {'diff': 0.0003574029999999992}, {'diff': 0.0003573480000000004}, {'diff': 0.0003574019999999997}, {'diff': 0.00035741699999999876},...</msg>
<status status="PASS" starttime="20201029 18:15:09.104" endtime="20201029 18:15:09.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:09.111" level="INFO">${RESULT} = {'diff': [0.00035856899999999955, 0.0003574029999999992, 0.0003574029999999992, 0.0003573480000000004, 0.0003574019999999997, 0.00035741699999999876, 0.0003574029999999992, 0.0003574029999999992, 0.00...</msg>
<status status="PASS" starttime="20201029 18:15:09.108" endtime="20201029 18:15:09.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.115" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:09.114" endtime="20201029 18:15:09.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.118" level="INFO">VALUE: [0.00035856899999999955, 0.0003574029999999992, 0.0003574029999999992, 0.0003573480000000004, 0.0003574019999999997, 0.00035741699999999876, 0.0003574029999999992, 0.0003574029999999992, 0.00035741600000000276, 0.0003573890000000031, 0.00035741700000000223, 0.0003573470000000009, 0.0003574159999999993, 0.0003574019999999997, 0.0003573889999999996, 0.0003574029999999992, 0.0003574029999999992, 0.0003574019999999997, 0.0003573329999999979, 0.0003573889999999996, 0.0003573889999999996, 0.0003574029999999992, 0.0003574019999999997, 0.0003573889999999996, 0.0003573889999999996, 0.00035737500000000005, 0.0003574019999999997, 0.0003573889999999996, 0.0003573889999999996, 0.0003574029999999992, 0.00035742999999999886, 0.0003574029999999992, 0.00035741699999999876, 0.00035744500000000484, 0.0003574159999999993, 0.0003573889999999996, 0.00035738900000000656, 0.00035740300000000613, 0.0003574159999999993, 0.00035742999999999886, 0.0003574589999999975, 0.0003574029999999992, 0.00035737500000000005, 0.00035737500000000005, 0.0003573889999999996, 0.0003574029999999992, 0.00035741699999999876, 0.00035742999999999886, 0.0003574019999999997, 0.0003573889999999996]</msg>
<status status="PASS" starttime="20201029 18:15:09.116" endtime="20201029 18:15:09.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.112" endtime="20201029 18:15:09.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.751" endtime="20201029 18:15:09.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.726" endtime="20201029 18:15:09.120"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:09.123" endtime="20201029 18:15:09.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.121" endtime="20201029 18:15:09.144"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.161" endtime="20201029 18:15:09.191"></status>
</kw>
<msg timestamp="20201029 18:15:09.192" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.158" endtime="20201029 18:15:09.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.197" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.194" endtime="20201029 18:15:09.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.200" endtime="20201029 18:15:09.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.153" endtime="20201029 18:15:09.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.149" endtime="20201029 18:15:09.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.219" endtime="20201029 18:15:09.508"></status>
</kw>
<msg timestamp="20201029 18:15:09.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029655306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030030069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.215" endtime="20201029 18:15:09.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029655306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030030069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.512" endtime="20201029 18:15:09.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.520" endtime="20201029 18:15:09.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.210" endtime="20201029 18:15:09.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.206" endtime="20201029 18:15:09.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:09.527" level="INFO">${PHILIP_RES} = [{'diff': 0.0003747630000000002}, {'diff': 0.0003736109999999994}, {'diff': 0.0003736109999999994}, {'diff': 0.0003736109999999994}, {'diff': 0.00037361100000000286}, {'diff': 0.0003736249999999955}, ...</msg>
<status status="PASS" starttime="20201029 18:15:09.524" endtime="20201029 18:15:09.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:09.532" level="INFO">${RESULT} = {'diff': [0.0003747630000000002, 0.0003736109999999994, 0.0003736109999999994, 0.0003736109999999994, 0.00037361100000000286, 0.0003736249999999955, 0.00037361100000000286, 0.000373639000000002, 0.000...</msg>
<status status="PASS" starttime="20201029 18:15:09.528" endtime="20201029 18:15:09.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.536" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:09.535" endtime="20201029 18:15:09.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.538" level="INFO">VALUE: [0.0003747630000000002, 0.0003736109999999994, 0.0003736109999999994, 0.0003736109999999994, 0.00037361100000000286, 0.0003736249999999955, 0.00037361100000000286, 0.000373639000000002, 0.00037359699999999635, 0.0003736380000000025, 0.00037363899999999506, 0.00037361100000000286, 0.00037362500000000243, 0.0003736109999999959, 0.0003735280000000049, 0.0003736249999999955, 0.00037362500000000243, 0.00037362500000000243, 0.0003736119999999954, 0.00037365300000000157, 0.0003736109999999959, 0.0003735970000000033, 0.0003735700000000036, 0.0003736249999999955, 0.0003735550000000046, 0.0003736109999999959, 0.00037361100000000286, 0.0003735970000000033, 0.0003736109999999959, 0.00037355600000000405, 0.00037354199999999754, 0.00037361100000000286, 0.0003735970000000033, 0.0003736249999999955, 0.0003735970000000033, 0.00037359699999999635, 0.0003735970000000033, 0.00037366700000000114, 0.0003736249999999955, 0.00037361200000000233, 0.0003735829999999968, 0.0003735970000000033, 0.0003735970000000033, 0.0003736119999999954, 0.0003735830000000037, 0.0003736109999999959, 0.00037361100000000286, 0.00037361100000000286, 0.0003736109999999959, 0.00037365300000000157]</msg>
<status status="PASS" starttime="20201029 18:15:09.537" endtime="20201029 18:15:09.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.532" endtime="20201029 18:15:09.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.145" endtime="20201029 18:15:09.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.121" endtime="20201029 18:15:09.540"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:09.543" endtime="20201029 18:15:09.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.541" endtime="20201029 18:15:09.563"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.571" endtime="20201029 18:15:09.600"></status>
</kw>
<msg timestamp="20201029 18:15:09.601" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.569" endtime="20201029 18:15:09.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.603" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.602" endtime="20201029 18:15:09.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.604" endtime="20201029 18:15:09.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.567" endtime="20201029 18:15:09.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.565" endtime="20201029 18:15:09.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.613" endtime="20201029 18:15:09.900"></status>
</kw>
<msg timestamp="20201029 18:15:09.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017783083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018174403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.612" endtime="20201029 18:15:09.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017783083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018174403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.904" endtime="20201029 18:15:09.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.912" endtime="20201029 18:15:09.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.609" endtime="20201029 18:15:09.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.607" endtime="20201029 18:15:09.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:09.918" level="INFO">${PHILIP_RES} = [{'diff': 0.0003913199999999971}, {'diff': 0.0003901250000000016}, {'diff': 0.0003901670000000003}, {'diff': 0.00039022299999999857}, {'diff': 0.00039013900000000115}, {'diff': 0.0003901519999999978},...</msg>
<status status="PASS" starttime="20201029 18:15:09.915" endtime="20201029 18:15:09.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:09.922" level="INFO">${RESULT} = {'diff': [0.0003913199999999971, 0.0003901250000000016, 0.0003901670000000003, 0.00039022299999999857, 0.00039013900000000115, 0.0003901519999999978, 0.0003900839999999989, 0.0003901530000000007, 0.00...</msg>
<status status="PASS" starttime="20201029 18:15:09.919" endtime="20201029 18:15:09.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.927" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:09.926" endtime="20201029 18:15:09.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.929" level="INFO">VALUE: [0.0003913199999999971, 0.0003901250000000016, 0.0003901670000000003, 0.00039022299999999857, 0.00039013900000000115, 0.0003901519999999978, 0.0003900839999999989, 0.0003901530000000007, 0.0003901530000000007, 0.00039013900000000115, 0.0003901530000000007, 0.0003900829999999994, 0.0003901250000000016, 0.0003901389999999977, 0.0003901669999999968, 0.0003901530000000007, 0.00039015200000000125, 0.00039013900000000115, 0.0003901250000000016, 0.00039013900000000115, 0.000390111000000002, 0.0003901249999999981, 0.00039009699999999897, 0.0003901530000000007, 0.00039013900000000115, 0.0003901530000000007, 0.0003901530000000007, 0.0003901530000000007, 0.0003901660000000008, 0.0003901660000000008, 0.0003901389999999977, 0.0003901389999999977, 0.0003901530000000042, 0.0003901939999999965, 0.0003901389999999977, 0.00039015299999999725, 0.00039015299999999725, 0.0003901530000000042, 0.00039015299999999725, 0.0003901530000000042, 0.0003901519999999978, 0.00039012500000000505, 0.00039016599999999735, 0.0003901669999999968, 0.00039020799999999606, 0.0003901249999999981, 0.00039012500000000505, 0.0003901389999999977, 0.00039016700000000376, 0.0003901389999999977]</msg>
<status status="PASS" starttime="20201029 18:15:09.928" endtime="20201029 18:15:09.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.923" endtime="20201029 18:15:09.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.563" endtime="20201029 18:15:09.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.541" endtime="20201029 18:15:09.931"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:09.933" endtime="20201029 18:15:09.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.932" endtime="20201029 18:15:09.953"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.961" endtime="20201029 18:15:09.990"></status>
</kw>
<msg timestamp="20201029 18:15:09.991" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.960" endtime="20201029 18:15:09.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.993" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.992" endtime="20201029 18:15:09.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.994" endtime="20201029 18:15:09.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.957" endtime="20201029 18:15:09.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.955" endtime="20201029 18:15:09.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.004" endtime="20201029 18:15:10.290"></status>
</kw>
<msg timestamp="20201029 18:15:10.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017688861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018097056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.003" endtime="20201029 18:15:10.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017688861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018097056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.294" endtime="20201029 18:15:10.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.302" endtime="20201029 18:15:10.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.000" endtime="20201029 18:15:10.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.999" endtime="20201029 18:15:10.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:10.308" level="INFO">${PHILIP_RES} = [{'diff': 0.0004081950000000001}, {'diff': 0.00040704100000000035}, {'diff': 0.00040702800000000025}, {'diff': 0.0004070549999999999}, {'diff': 0.0004070559999999994}, {'diff': 0.0004070140000000007},...</msg>
<status status="PASS" starttime="20201029 18:15:10.305" endtime="20201029 18:15:10.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:10.312" level="INFO">${RESULT} = {'diff': [0.0004081950000000001, 0.00040704100000000035, 0.00040702800000000025, 0.0004070549999999999, 0.0004070559999999994, 0.0004070140000000007, 0.0004070139999999972, 0.0004070419999999998, 0.00...</msg>
<status status="PASS" starttime="20201029 18:15:10.309" endtime="20201029 18:15:10.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.317" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:10.316" endtime="20201029 18:15:10.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.319" level="INFO">VALUE: [0.0004081950000000001, 0.00040704100000000035, 0.00040702800000000025, 0.0004070549999999999, 0.0004070559999999994, 0.0004070140000000007, 0.0004070139999999972, 0.0004070419999999998, 0.0004070270000000008, 0.0004070419999999998, 0.0004070140000000007, 0.0004070689999999995, 0.00040702800000000025, 0.0004070270000000008, 0.0004070140000000007, 0.00040702800000000025, 0.0004070000000000011, 0.00040702800000000025, 0.0004070549999999999, 0.0004070140000000007, 0.0004070419999999998, 0.00040711200000000114, 0.00040702800000000025, 0.00040711100000000167, 0.0004070419999999998, 0.00040702800000000025, 0.00040702800000000025, 0.0004070559999999994, 0.00040698599999999807, 0.0004070419999999998, 0.0004070269999999973, 0.00040698599999999807, 0.0004070420000000033, 0.0004070409999999969, 0.0004070280000000037, 0.00040706900000000296, 0.00040712500000000124, 0.0004070970000000021, 0.0004070550000000034, 0.00040704199999999635, 0.0004070000000000046, 0.0004069719999999985, 0.0004070269999999973, 0.0004070280000000037, 0.0004070279999999968, 0.00040699999999999764, 0.00040701400000000415, 0.0004070279999999968, 0.00040705600000000286, 0.00040698599999999807]</msg>
<status status="PASS" starttime="20201029 18:15:10.318" endtime="20201029 18:15:10.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.313" endtime="20201029 18:15:10.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.954" endtime="20201029 18:15:10.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.931" endtime="20201029 18:15:10.322"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:10.324" endtime="20201029 18:15:10.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.323" endtime="20201029 18:15:10.344"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.352" endtime="20201029 18:15:10.382"></status>
</kw>
<msg timestamp="20201029 18:15:10.383" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.351" endtime="20201029 18:15:10.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.385" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.384" endtime="20201029 18:15:10.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.386" endtime="20201029 18:15:10.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.348" endtime="20201029 18:15:10.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.346" endtime="20201029 18:15:10.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.395" endtime="20201029 18:15:10.688"></status>
</kw>
<msg timestamp="20201029 18:15:10.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017594083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018019528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.394" endtime="20201029 18:15:10.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017594083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018019528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.698" endtime="20201029 18:15:10.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.716" endtime="20201029 18:15:10.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.391" endtime="20201029 18:15:10.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.389" endtime="20201029 18:15:10.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:10.729" level="INFO">${PHILIP_RES} = [{'diff': 0.000425445}, {'diff': 0.0004242219999999984}, {'diff': 0.0004242370000000009}, {'diff': 0.0004243059999999993}, {'diff': 0.0004243059999999993}, {'diff': 0.00042429100000000025}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 18:15:10.723" endtime="20201029 18:15:10.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:10.740" level="INFO">${RESULT} = {'diff': [0.000425445, 0.0004242219999999984, 0.0004242370000000009, 0.0004243059999999993, 0.0004243059999999993, 0.00042429100000000025, 0.00042427800000000016, 0.00042427800000000016, 0.00042427700...</msg>
<status status="PASS" starttime="20201029 18:15:10.731" endtime="20201029 18:15:10.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.749" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:10.747" endtime="20201029 18:15:10.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.754" level="INFO">VALUE: [0.000425445, 0.0004242219999999984, 0.0004242370000000009, 0.0004243059999999993, 0.0004243059999999993, 0.00042429100000000025, 0.00042427800000000016, 0.00042427800000000016, 0.0004242770000000007, 0.0004242640000000006, 0.00042432000000000233, 0.0004242919999999997, 0.00042424999999999755, 0.0004242640000000006, 0.000424250000000001, 0.00042430600000000276, 0.0004243189999999994, 0.0004242919999999997, 0.00042427800000000016, 0.0004243049999999998, 0.0004242919999999997, 0.0004242919999999997, 0.0004242640000000006, 0.00042427800000000016, 0.0004242919999999997, 0.00042427800000000016, 0.00042427800000000016, 0.0004242640000000006, 0.00042427800000000016, 0.00042419400000000274, 0.0004243049999999998, 0.0004242919999999997, 0.00042427800000000016, 0.00042427800000000016, 0.0004242370000000009, 0.000424347999999998, 0.0004242220000000019, 0.0004242909999999933, 0.00042427800000000016, 0.0004242919999999997, 0.00042429100000000025, 0.000424250000000001, 0.0004242919999999997, 0.00042427699999999374, 0.00042427800000000016, 0.00042427800000000016, 0.0004242919999999997, 0.00042429100000000025, 0.00042422199999999494, 0.0004242080000000023]</msg>
<status status="PASS" starttime="20201029 18:15:10.751" endtime="20201029 18:15:10.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.742" endtime="20201029 18:15:10.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.345" endtime="20201029 18:15:10.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.322" endtime="20201029 18:15:10.758"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:10.761" endtime="20201029 18:15:10.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.760" endtime="20201029 18:15:10.781"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.789" endtime="20201029 18:15:10.820"></status>
</kw>
<msg timestamp="20201029 18:15:10.821" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.788" endtime="20201029 18:15:10.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.823" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.822" endtime="20201029 18:15:10.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.824" endtime="20201029 18:15:10.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.785" endtime="20201029 18:15:10.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.783" endtime="20201029 18:15:10.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.833" endtime="20201029 18:15:11.123"></status>
</kw>
<msg timestamp="20201029 18:15:11.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017663458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018106514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.832" endtime="20201029 18:15:11.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017663458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018106514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.127" endtime="20201029 18:15:11.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.135" endtime="20201029 18:15:11.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.829" endtime="20201029 18:15:11.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.827" endtime="20201029 18:15:11.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:11.141" level="INFO">${PHILIP_RES} = [{'diff': 0.0004430560000000007}, {'diff': 0.000441917}, {'diff': 0.00044188900000000086}, {'diff': 0.0004418749999999978}, {'diff': 0.00044190300000000043}, {'diff': 0.00044190300000000043}, {'diff':...</msg>
<status status="PASS" starttime="20201029 18:15:11.138" endtime="20201029 18:15:11.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:11.145" level="INFO">${RESULT} = {'diff': [0.0004430560000000007, 0.000441917, 0.00044188900000000086, 0.0004418749999999978, 0.00044190300000000043, 0.00044190300000000043, 0.00044188900000000086, 0.00044188900000000086, 0.000441930...</msg>
<status status="PASS" starttime="20201029 18:15:11.142" endtime="20201029 18:15:11.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.150" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:11.148" endtime="20201029 18:15:11.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.152" level="INFO">VALUE: [0.0004430560000000007, 0.000441917, 0.00044188900000000086, 0.0004418749999999978, 0.00044190300000000043, 0.00044190300000000043, 0.00044188900000000086, 0.00044188900000000086, 0.0004419300000000001, 0.00044190200000000096, 0.00044190300000000043, 0.0004418749999999978, 0.0004418879999999979, 0.0004418880000000014, 0.0004418889999999974, 0.0004418880000000014, 0.0004418750000000013, 0.0004419019999999975, 0.0004418750000000013, 0.0004418610000000017, 0.00044190300000000043, 0.00044188900000000086, 0.00044188900000000086, 0.0004419019999999975, 0.00044188900000000086, 0.00044190300000000043, 0.0004418889999999974, 0.00044190300000000043, 0.00044188900000000433, 0.0004419300000000001, 0.00044183400000000206, 0.00044194399999999967, 0.000441917, 0.00044187499999999436, 0.00044188900000000086, 0.0004418750000000013, 0.00044188900000000086, 0.00044188900000000086, 0.00044188900000000086, 0.0004419029999999935, 0.00044190200000000096, 0.00044195799999999924, 0.00044190300000000043, 0.0004418610000000017, 0.00044188900000000086, 0.0004418889999999939, 0.00044188900000000086, 0.00044190300000000043, 0.0004418750000000013, 0.00044188900000000086]</msg>
<status status="PASS" starttime="20201029 18:15:11.151" endtime="20201029 18:15:11.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.146" endtime="20201029 18:15:11.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.782" endtime="20201029 18:15:11.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.759" endtime="20201029 18:15:11.154"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:11.156" endtime="20201029 18:15:11.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.155" endtime="20201029 18:15:11.176"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.184" endtime="20201029 18:15:11.216"></status>
</kw>
<msg timestamp="20201029 18:15:11.216" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.183" endtime="20201029 18:15:11.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.219" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.218" endtime="20201029 18:15:11.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.220" endtime="20201029 18:15:11.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.180" endtime="20201029 18:15:11.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.178" endtime="20201029 18:15:11.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.230" endtime="20201029 18:15:11.527"></status>
</kw>
<msg timestamp="20201029 18:15:11.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017672861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018133847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.229" endtime="20201029 18:15:11.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017672861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018133847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.536" endtime="20201029 18:15:11.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.554" endtime="20201029 18:15:11.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.226" endtime="20201029 18:15:11.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.224" endtime="20201029 18:15:11.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:11.567" level="INFO">${PHILIP_RES} = [{'diff': 0.00046098600000000003}, {'diff': 0.0004598609999999989}, {'diff': 0.0004598890000000015}, {'diff': 0.00045983399999999924}, {'diff': 0.00045983399999999924}, {'diff': 0.00045984699999999934...</msg>
<status status="PASS" starttime="20201029 18:15:11.561" endtime="20201029 18:15:11.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:11.572" level="INFO">${RESULT} = {'diff': [0.00046098600000000003, 0.0004598609999999989, 0.0004598890000000015, 0.00045983399999999924, 0.00045983399999999924, 0.00045984699999999934, 0.0004598879999999986, 0.00045980599999999663, 0...</msg>
<status status="PASS" starttime="20201029 18:15:11.568" endtime="20201029 18:15:11.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.576" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:11.575" endtime="20201029 18:15:11.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.578" level="INFO">VALUE: [0.00046098600000000003, 0.0004598609999999989, 0.0004598890000000015, 0.00045983399999999924, 0.00045983399999999924, 0.00045984699999999934, 0.0004598879999999986, 0.00045980599999999663, 0.0004598610000000024, 0.00045984699999999934, 0.00045984699999999934, 0.00045991700000000066, 0.00045984699999999934, 0.00045983299999999977, 0.0004598199999999997, 0.0004598610000000024, 0.00045983399999999924, 0.0004598479999999988, 0.0004598609999999989, 0.0004598199999999997, 0.00045983299999999977, 0.0004598609999999989, 0.0004598190000000002, 0.00045983300000000324, 0.00045987500000000195, 0.00045983299999999977, 0.00045983299999999977, 0.00045983399999999924, 0.00045984800000000575, 0.00045988899999999805, 0.0004598199999999997, 0.0004598609999999989, 0.00045983299999999977, 0.0004598749999999985, 0.00045983299999999977, 0.00045977800000000096, 0.00045984699999999934, 0.0004598750000000054, 0.00045984699999999934, 0.00045984699999999934, 0.00045983399999999924, 0.00045979100000000106, 0.00045983399999999924, 0.00045983399999999924, 0.0004598470000000063, 0.00045983299999999977, 0.00045983299999999977, 0.0004598190000000002, 0.00045984699999999934, 0.0004597500000000018]</msg>
<status status="PASS" starttime="20201029 18:15:11.577" endtime="20201029 18:15:11.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.572" endtime="20201029 18:15:11.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.177" endtime="20201029 18:15:11.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.154" endtime="20201029 18:15:11.585"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:11.588" endtime="20201029 18:15:11.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.586" endtime="20201029 18:15:11.608"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.616" endtime="20201029 18:15:11.649"></status>
</kw>
<msg timestamp="20201029 18:15:11.649" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.614" endtime="20201029 18:15:11.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.652" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.651" endtime="20201029 18:15:11.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.653" endtime="20201029 18:15:11.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.612" endtime="20201029 18:15:11.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.610" endtime="20201029 18:15:11.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.662" endtime="20201029 18:15:11.948"></status>
</kw>
<msg timestamp="20201029 18:15:11.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017495889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017975236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.661" endtime="20201029 18:15:11.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017495889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017975236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.952" endtime="20201029 18:15:11.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.960" endtime="20201029 18:15:11.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.658" endtime="20201029 18:15:11.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.656" endtime="20201029 18:15:11.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:11.966" level="INFO">${PHILIP_RES} = [{'diff': 0.000479346999999998}, {'diff': 0.00047813899999999895}, {'diff': 0.0004781249999999994}, {'diff': 0.00047813899999999895}, {'diff': 0.00047813899999999895}, {'diff': 0.000478153000000002}, ...</msg>
<status status="PASS" starttime="20201029 18:15:11.963" endtime="20201029 18:15:11.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:11.971" level="INFO">${RESULT} = {'diff': [0.000479346999999998, 0.00047813899999999895, 0.0004781249999999994, 0.00047813899999999895, 0.00047813899999999895, 0.000478153000000002, 0.00047812500000000285, 0.00047809700000000024, 0.0...</msg>
<status status="PASS" starttime="20201029 18:15:11.967" endtime="20201029 18:15:11.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.975" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:11.974" endtime="20201029 18:15:11.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.978" level="INFO">VALUE: [0.000479346999999998, 0.00047813899999999895, 0.0004781249999999994, 0.00047813899999999895, 0.00047813899999999895, 0.000478153000000002, 0.00047812500000000285, 0.00047809700000000024, 0.0004781249999999994, 0.0004781109999999998, 0.00047813899999999895, 0.00047813899999999895, 0.00047813899999999895, 0.00047816700000000156, 0.000478153000000002, 0.00047813899999999895, 0.0004780830000000007, 0.0004781249999999994, 0.00047815199999999905, 0.0004781529999999985, 0.0004781249999999994, 0.0004781390000000024, 0.00047812500000000285, 0.00047812500000000285, 0.0004781119999999993, 0.00047808400000000015, 0.0004781249999999994, 0.0004781519999999956, 0.0004781389999999955, 0.0004780969999999968, 0.0004781389999999955, 0.0004781249999999959, 0.0004781389999999955, 0.0004781520000000025, 0.0004780970000000037, 0.0004781390000000024, 0.0004781520000000025, 0.0004781660000000021, 0.0004781110000000033, 0.00047812500000000285, 0.00047812500000000285, 0.0004781110000000033, 0.00047812500000000285, 0.0004781249999999959, 0.0004781809999999942, 0.0004781389999999955, 0.0004781389999999955, 0.0004781389999999955, 0.00047815299999999505, 0.0004781390000000024]</msg>
<status status="PASS" starttime="20201029 18:15:11.977" endtime="20201029 18:15:11.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.972" endtime="20201029 18:15:11.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.608" endtime="20201029 18:15:11.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.586" endtime="20201029 18:15:11.980"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:11.982" endtime="20201029 18:15:12.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.981" endtime="20201029 18:15:12.002"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.010" endtime="20201029 18:15:12.046"></status>
</kw>
<msg timestamp="20201029 18:15:12.047" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.009" endtime="20201029 18:15:12.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.050" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.048" endtime="20201029 18:15:12.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.051" endtime="20201029 18:15:12.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.006" endtime="20201029 18:15:12.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.004" endtime="20201029 18:15:12.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.060" endtime="20201029 18:15:12.369"></status>
</kw>
<msg timestamp="20201029 18:15:12.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017734944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018232875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.059" endtime="20201029 18:15:12.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017734944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018232875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.378" endtime="20201029 18:15:12.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.386" endtime="20201029 18:15:12.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.056" endtime="20201029 18:15:12.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.054" endtime="20201029 18:15:12.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:12.393" level="INFO">${PHILIP_RES} = [{'diff': 0.0004979310000000001}, {'diff': 0.0004967779999999998}, {'diff': 0.0004967919999999994}, {'diff': 0.0004968330000000021}, {'diff': 0.0004967640000000002}, {'diff': 0.0004967779999999998}, {...</msg>
<status status="PASS" starttime="20201029 18:15:12.390" endtime="20201029 18:15:12.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:12.397" level="INFO">${RESULT} = {'diff': [0.0004979310000000001, 0.0004967779999999998, 0.0004967919999999994, 0.0004968330000000021, 0.0004967640000000002, 0.0004967779999999998, 0.0004967779999999998, 0.0004967220000000015, 0.0004...</msg>
<status status="PASS" starttime="20201029 18:15:12.394" endtime="20201029 18:15:12.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.402" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:12.401" endtime="20201029 18:15:12.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.404" level="INFO">VALUE: [0.0004979310000000001, 0.0004967779999999998, 0.0004967919999999994, 0.0004968330000000021, 0.0004967640000000002, 0.0004967779999999998, 0.0004967779999999998, 0.0004967220000000015, 0.0004967909999999999, 0.0004967779999999998, 0.0004967779999999998, 0.0004967779999999998, 0.0004967909999999999, 0.0004968059999999989, 0.0004968610000000012, 0.0004967500000000007, 0.0004967780000000033, 0.0004967220000000015, 0.0004967919999999994, 0.0004967919999999994, 0.0004967909999999999, 0.0004967919999999994, 0.0004968059999999989, 0.0004967779999999998, 0.0004967770000000003, 0.0004967919999999994, 0.0004967779999999963, 0.0004967919999999959, 0.0004967769999999969, 0.0004967779999999963, 0.000496820000000002, 0.0004967779999999963, 0.0004967359999999976, 0.0004967920000000028, 0.0004967780000000033, 0.0004967920000000028, 0.0004967500000000041, 0.0004968050000000029, 0.0004968060000000024, 0.0004968060000000024, 0.0004967770000000038, 0.0004967640000000037, 0.0004967640000000037, 0.0004967920000000028, 0.0004967920000000028, 0.0004967769999999969, 0.0004967920000000028, 0.0004968329999999951, 0.0004967639999999968, 0.000496804999999996]</msg>
<status status="PASS" starttime="20201029 18:15:12.403" endtime="20201029 18:15:12.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.398" endtime="20201029 18:15:12.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.003" endtime="20201029 18:15:12.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.980" endtime="20201029 18:15:12.406"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:12.409" endtime="20201029 18:15:12.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.407" endtime="20201029 18:15:12.429"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.437" endtime="20201029 18:15:12.472"></status>
</kw>
<msg timestamp="20201029 18:15:12.472" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.435" endtime="20201029 18:15:12.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.475" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.473" endtime="20201029 18:15:12.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.476" endtime="20201029 18:15:12.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.433" endtime="20201029 18:15:12.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.431" endtime="20201029 18:15:12.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.486" endtime="20201029 18:15:12.772"></status>
</kw>
<msg timestamp="20201029 18:15:12.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018035236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018552194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.485" endtime="20201029 18:15:12.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018035236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018552194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.776" endtime="20201029 18:15:12.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.784" endtime="20201029 18:15:12.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.482" endtime="20201029 18:15:12.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.480" endtime="20201029 18:15:12.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:12.791" level="INFO">${PHILIP_RES} = [{'diff': 0.0005169580000000014}, {'diff': 0.0005158059999999971}, {'diff': 0.0005157499999999988}, {'diff': 0.0005158330000000003}, {'diff': 0.000515792000000001}, {'diff': 0.0005158060000000006}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:12.788" endtime="20201029 18:15:12.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:12.795" level="INFO">${RESULT} = {'diff': [0.0005169580000000014, 0.0005158059999999971, 0.0005157499999999988, 0.0005158330000000003, 0.000515792000000001, 0.0005158060000000006, 0.0005158050000000011, 0.0005157910000000016, 0.00051...</msg>
<status status="PASS" starttime="20201029 18:15:12.792" endtime="20201029 18:15:12.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.800" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:12.799" endtime="20201029 18:15:12.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.802" level="INFO">VALUE: [0.0005169580000000014, 0.0005158059999999971, 0.0005157499999999988, 0.0005158330000000003, 0.000515792000000001, 0.0005158060000000006, 0.0005158050000000011, 0.0005157910000000016, 0.0005158060000000006, 0.0005158060000000006, 0.0005158049999999977, 0.0005158049999999977, 0.0005158470000000033, 0.0005158060000000006, 0.000515792000000001, 0.0005158050000000011, 0.0005158050000000011, 0.0005157780000000015, 0.0005157360000000027, 0.0005157640000000019, 0.0005158049999999977, 0.0005158200000000002, 0.0005157919999999976, 0.0005158190000000042, 0.0005158050000000011, 0.0005158060000000006, 0.0005158609999999994, 0.0005158060000000006, 0.0005158190000000007, 0.0005158049999999942, 0.000515792000000001, 0.000515792000000001, 0.0005158060000000006, 0.0005158190000000007, 0.000515792000000001, 0.0005158339999999997, 0.0005157919999999941, 0.0005158050000000011, 0.0005157779999999945, 0.0005158200000000002, 0.000515792000000001, 0.0005158050000000011, 0.0005158190000000007, 0.0005157640000000019, 0.000515792000000001, 0.0005158190000000007, 0.0005158050000000011, 0.0005157780000000015, 0.0005158339999999997, 0.0005158060000000006]</msg>
<status status="PASS" starttime="20201029 18:15:12.801" endtime="20201029 18:15:12.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.796" endtime="20201029 18:15:12.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.429" endtime="20201029 18:15:12.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.407" endtime="20201029 18:15:12.805"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:12.808" endtime="20201029 18:15:12.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.806" endtime="20201029 18:15:12.828"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.836" endtime="20201029 18:15:12.872"></status>
</kw>
<msg timestamp="20201029 18:15:12.872" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.834" endtime="20201029 18:15:12.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.875" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.873" endtime="20201029 18:15:12.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.876" endtime="20201029 18:15:12.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.832" endtime="20201029 18:15:12.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.830" endtime="20201029 18:15:12.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.885" endtime="20201029 18:15:13.171"></status>
</kw>
<msg timestamp="20201029 18:15:13.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018126333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018662667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.884" endtime="20201029 18:15:13.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018126333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018662667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.175" endtime="20201029 18:15:13.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.184" endtime="20201029 18:15:13.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.881" endtime="20201029 18:15:13.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.879" endtime="20201029 18:15:13.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:13.190" level="INFO">${PHILIP_RES} = [{'diff': 0.0005363339999999994}, {'diff': 0.000535153}, {'diff': 0.0005351390000000004}, {'diff': 0.000535153}, {'diff': 0.000535153}, {'diff': 0.0005351250000000009}, {'diff': 0.0005351799999999997}...</msg>
<status status="PASS" starttime="20201029 18:15:13.187" endtime="20201029 18:15:13.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.195" level="INFO">${RESULT} = {'diff': [0.0005363339999999994, 0.000535153, 0.0005351390000000004, 0.000535153, 0.000535153, 0.0005351250000000009, 0.0005351799999999997, 0.0005351660000000001, 0.0005351390000000004, 0.000535153, ...</msg>
<status status="PASS" starttime="20201029 18:15:13.191" endtime="20201029 18:15:13.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.200" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:13.199" endtime="20201029 18:15:13.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.202" level="INFO">VALUE: [0.0005363339999999994, 0.000535153, 0.0005351390000000004, 0.000535153, 0.000535153, 0.0005351250000000009, 0.0005351799999999997, 0.0005351660000000001, 0.0005351390000000004, 0.000535153, 0.0005351660000000001, 0.0005351379999999975, 0.0005351520000000005, 0.0005351660000000001, 0.0005351660000000001, 0.0005351799999999997, 0.000535153, 0.0005352080000000023, 0.0005351669999999996, 0.000535153, 0.0005351249999999974, 0.000535153, 0.0005351529999999965, 0.0005351530000000035, 0.0005351810000000026, 0.0005351530000000035, 0.0005351670000000031, 0.0005351529999999965, 0.0005351809999999957, 0.0005352360000000014, 0.0005351670000000031, 0.0005351670000000031, 0.0005351670000000031, 0.000535138999999997, 0.0005351529999999965, 0.0005351809999999957, 0.0005350969999999983, 0.0005351670000000031, 0.0005351250000000043, 0.000535152000000004, 0.0005351809999999957, 0.0005351659999999966, 0.0005351659999999966, 0.0005351940000000027, 0.000535152000000004, 0.0005351800000000032, 0.0005351530000000035, 0.0005351519999999971, 0.0005351669999999961, 0.0005351379999999975]</msg>
<status status="PASS" starttime="20201029 18:15:13.201" endtime="20201029 18:15:13.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.196" endtime="20201029 18:15:13.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.828" endtime="20201029 18:15:13.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.805" endtime="20201029 18:15:13.204"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:13.207" endtime="20201029 18:15:13.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.205" endtime="20201029 18:15:13.227"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.235" endtime="20201029 18:15:13.272"></status>
</kw>
<msg timestamp="20201029 18:15:13.273" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.234" endtime="20201029 18:15:13.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.275" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.274" endtime="20201029 18:15:13.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.276" endtime="20201029 18:15:13.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.231" endtime="20201029 18:15:13.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.229" endtime="20201029 18:15:13.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.286" endtime="20201029 18:15:13.573"></status>
</kw>
<msg timestamp="20201029 18:15:13.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018179583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018735611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.284" endtime="20201029 18:15:13.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018179583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018735611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.578" endtime="20201029 18:15:13.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.586" endtime="20201029 18:15:13.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.282" endtime="20201029 18:15:13.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.280" endtime="20201029 18:15:13.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:13.593" level="INFO">${PHILIP_RES} = [{'diff': 0.0005560280000000001}, {'diff': 0.0005548329999999976}, {'diff': 0.0005548889999999994}, {'diff': 0.0005548749999999998}, {'diff': 0.0005548470000000007}, {'diff': 0.0005548889999999994}, {...</msg>
<status status="PASS" starttime="20201029 18:15:13.589" endtime="20201029 18:15:13.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.597" level="INFO">${RESULT} = {'diff': [0.0005560280000000001, 0.0005548329999999976, 0.0005548889999999994, 0.0005548749999999998, 0.0005548470000000007, 0.0005548889999999994, 0.0005549030000000024, 0.0005548749999999998, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:15:13.594" endtime="20201029 18:15:13.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.601" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:13.600" endtime="20201029 18:15:13.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.604" level="INFO">VALUE: [0.0005560280000000001, 0.0005548329999999976, 0.0005548889999999994, 0.0005548749999999998, 0.0005548470000000007, 0.0005548889999999994, 0.0005549030000000024, 0.0005548749999999998, 0.0005548749999999998, 0.0005548470000000007, 0.0005548889999999994, 0.0005548749999999998, 0.0005548749999999998, 0.0005548619999999997, 0.0005548619999999997, 0.0005548480000000001, 0.0005548749999999998, 0.0005548749999999998, 0.000554917000000002, 0.0005548749999999998, 0.0005548480000000001, 0.0005548609999999968, 0.0005548890000000029, 0.0005548479999999967, 0.000554901999999996, 0.0005548609999999968, 0.0005548610000000037, 0.0005549030000000024, 0.0005548889999999959, 0.0005549029999999955, 0.0005548609999999968, 0.0005548610000000037, 0.0005548890000000029, 0.0005548749999999963, 0.0005548749999999963, 0.0005548750000000033, 0.0005548610000000037, 0.0005548610000000037, 0.0005548469999999972, 0.0005548609999999968, 0.0005548609999999968, 0.0005548750000000033, 0.0005548610000000037, 0.0005548889999999959, 0.0005548749999999963, 0.0005549030000000024, 0.0005548610000000037, 0.0005548610000000037, 0.0005548609999999968, 0.0005548749999999963]</msg>
<status status="PASS" starttime="20201029 18:15:13.602" endtime="20201029 18:15:13.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.598" endtime="20201029 18:15:13.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.227" endtime="20201029 18:15:13.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.205" endtime="20201029 18:15:13.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.211" endtime="20201029 18:15:13.606"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:52.841" endtime="20201029 18:15:13.607" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:14:32.574" endtime="20201029 18:15:13.615"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.686" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:15:13.695" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:15:14.863" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:15:13.685" endtime="20201029 18:15:14.863"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.866" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:15:14.864" endtime="20201029 18:15:14.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.684" endtime="20201029 18:15:14.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:14.869" endtime="20201029 18:15:15.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.868" endtime="20201029 18:15:15.058"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.070" endtime="20201029 18:15:15.084"></status>
</kw>
<msg timestamp="20201029 18:15:15.085" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.069" endtime="20201029 18:15:15.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.087" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.086" endtime="20201029 18:15:15.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.090" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:15.088" endtime="20201029 18:15:15.091"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:15.066" endtime="20201029 18:15:15.091"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:15.064" endtime="20201029 18:15:15.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.063" endtime="20201029 18:15:15.092"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:15.097" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:15.096" endtime="20201029 18:15:15.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.093" endtime="20201029 18:15:15.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.062" endtime="20201029 18:15:15.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.061" endtime="20201029 18:15:15.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.099" endtime="20201029 18:15:15.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.060" endtime="20201029 18:15:15.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.101" endtime="20201029 18:15:15.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.059" endtime="20201029 18:15:15.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.682" endtime="20201029 18:15:15.104"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.110" endtime="20201029 18:15:15.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.108" endtime="20201029 18:15:15.130"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.143" endtime="20201029 18:15:15.157"></status>
</kw>
<msg timestamp="20201029 18:15:15.158" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.141" endtime="20201029 18:15:15.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.160" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.159" endtime="20201029 18:15:15.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.163" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:15.161" endtime="20201029 18:15:15.163"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:15.139" endtime="20201029 18:15:15.164"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:15.136" endtime="20201029 18:15:15.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.135" endtime="20201029 18:15:15.165"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:15.170" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:15.169" endtime="20201029 18:15:15.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.167" endtime="20201029 18:15:15.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.134" endtime="20201029 18:15:15.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.134" endtime="20201029 18:15:15.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.171" endtime="20201029 18:15:15.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.132" endtime="20201029 18:15:15.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.130" endtime="20201029 18:15:15.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.107" endtime="20201029 18:15:15.174"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.185" endtime="20201029 18:15:15.199"></status>
</kw>
<msg timestamp="20201029 18:15:15.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.183" endtime="20201029 18:15:15.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.202" endtime="20201029 18:15:15.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.208" endtime="20201029 18:15:15.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.179" endtime="20201029 18:15:15.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.177" endtime="20201029 18:15:15.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.226" endtime="20201029 18:15:15.521"></status>
</kw>
<msg timestamp="20201029 18:15:15.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067553236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067555931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.223" endtime="20201029 18:15:15.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067553236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067555931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.525" endtime="20201029 18:15:15.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.534" endtime="20201029 18:15:15.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.217" endtime="20201029 18:15:15.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.214" endtime="20201029 18:15:15.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.541" level="INFO">${RESULT} = [{'diff': 2.6949999999970053e-06}, {'diff': 1.6250000000050946e-06}, {'diff': 2.082999999999946e-06}, {'diff': 2.79200000000146e-06}, {'diff': 1.6389999999977256e-06}, {'diff': 2.096999999992577e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:15.538" endtime="20201029 18:15:15.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:15.546" level="INFO">${ACCURACY} = {'diff': [2.6949999999970053e-06, 1.6250000000050946e-06, 2.082999999999946e-06, 2.79200000000146e-06, 1.6389999999977256e-06, 2.096999999992577e-06, 2.097000000006455e-06, 1.6389999999977256e-06, 2.0...</msg>
<status status="PASS" starttime="20201029 18:15:15.542" endtime="20201029 18:15:15.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.551" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:15:15.550" endtime="20201029 18:15:15.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.554" level="INFO">VALUE: [2.6949999999970053e-06, 1.6250000000050946e-06, 2.082999999999946e-06, 2.79200000000146e-06, 1.6389999999977256e-06, 2.096999999992577e-06, 2.097000000006455e-06, 1.6389999999977256e-06, 2.068999999993437e-06, 2.76400000000232e-06, 2.4299999999977118e-06, 2.4299999999977118e-06, 2.4160000000050808e-06, 2.124999999991717e-06, 2.110999999999086e-06, 2.1119999999985595e-06, 2.431000000011063e-06, 2.415999999991203e-06, 2.110999999999086e-06, 2.4169999999906766e-06, 2.1250000000055946e-06, 2.1110000000129636e-06, 2.110999999999086e-06, 2.0409999999942974e-06, 1.6800000000039006e-06, 2.124999999991717e-06, 1.5970000000059548e-06, 2.082999999999946e-06, 1.6250000000050946e-06, 2.082999999999946e-06, 2.082999999999946e-06, 2.082999999999946e-06, 2.082999999999946e-06, 2.8200000000006e-06, 2.110999999999086e-06, 2.1119999999985595e-06, 2.096999999992577e-06, 2.4299999999977118e-06, 2.110999999999086e-06, 2.4169999999906766e-06, 2.4439999999903428e-06, 2.1389999999982257e-06, 2.4169999999906766e-06, 2.097000000006455e-06, 2.3749999999989058e-06, 2.110999999999086e-06, 2.4309999999971854e-06, 2.110999999999086e-06, 2.124999999991717e-06, 2.1119999999985595e-06]</msg>
<status status="PASS" starttime="20201029 18:15:15.552" endtime="20201029 18:15:15.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.546" endtime="20201029 18:15:15.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.558" endtime="20201029 18:15:15.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.557" endtime="20201029 18:15:15.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.555" endtime="20201029 18:15:15.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.176" endtime="20201029 18:15:15.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.175" endtime="20201029 18:15:15.579"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.588" endtime="20201029 18:15:15.602"></status>
</kw>
<msg timestamp="20201029 18:15:15.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.586" endtime="20201029 18:15:15.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.603" endtime="20201029 18:15:15.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.606" endtime="20201029 18:15:15.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.584" endtime="20201029 18:15:15.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.582" endtime="20201029 18:15:15.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.616" endtime="20201029 18:15:15.905"></status>
</kw>
<msg timestamp="20201029 18:15:15.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022280764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.614" endtime="20201029 18:15:15.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022280764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.910" endtime="20201029 18:15:15.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.923" endtime="20201029 18:15:15.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.611" endtime="20201029 18:15:15.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.609" endtime="20201029 18:15:15.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.933" level="INFO">${RESULT} = [{'diff': 3.0139999999991007e-06}, {'diff': 2.708000000000571e-06}, {'diff': 3.651999999999822e-06}, {'diff': 3.361000000000336e-06}, {'diff': 3.611000000000586e-06}, {'diff': 3.04200000000171e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:15.927" endtime="20201029 18:15:15.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:15.942" level="INFO">${ACCURACY} = {'diff': [3.0139999999991007e-06, 2.708000000000571e-06, 3.651999999999822e-06, 3.361000000000336e-06, 3.611000000000586e-06, 3.04200000000171e-06, 3.3480000000002397e-06, 3.361000000000336e-06, 2.722...</msg>
<status status="PASS" starttime="20201029 18:15:15.935" endtime="20201029 18:15:15.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.947" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:15:15.946" endtime="20201029 18:15:15.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.949" level="INFO">VALUE: [3.0139999999991007e-06, 2.708000000000571e-06, 3.651999999999822e-06, 3.361000000000336e-06, 3.611000000000586e-06, 3.04200000000171e-06, 3.3480000000002397e-06, 3.361000000000336e-06, 2.722000000000141e-06, 3.347000000000766e-06, 3.333000000001196e-06, 2.7229999999996146e-06, 3.3199999999976304e-06, 3.054999999998337e-06, 3.0279999999986706e-06, 3.0279999999986706e-06, 3.02800000000214e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.347000000000766e-06, 3.04200000000171e-06, 3.333000000001196e-06, 2.735999999999711e-06, 3.0139999999991007e-06, 3.026999999999197e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.3469999999972966e-06, 3.02800000000214e-06, 3.3339999999972003e-06, 3.665999999999392e-06, 3.319000000001626e-06, 3.02800000000214e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.0419999999982406e-06, 3.304999999998587e-06, 3.3329999999977267e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 2.722000000000141e-06, 3.097000000000516e-06, 3.3469999999972966e-06, 3.02800000000214e-06, 3.3339999999972003e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.0279999999986706e-06]</msg>
<status status="PASS" starttime="20201029 18:15:15.948" endtime="20201029 18:15:15.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.943" endtime="20201029 18:15:15.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.954" endtime="20201029 18:15:15.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.952" endtime="20201029 18:15:15.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.951" endtime="20201029 18:15:15.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.580" endtime="20201029 18:15:15.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.580" endtime="20201029 18:15:15.975"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.983" endtime="20201029 18:15:15.998"></status>
</kw>
<msg timestamp="20201029 18:15:15.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.982" endtime="20201029 18:15:15.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.000" endtime="20201029 18:15:16.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.002" endtime="20201029 18:15:16.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.979" endtime="20201029 18:15:16.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.977" endtime="20201029 18:15:16.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.016" endtime="20201029 18:15:16.316"></status>
</kw>
<msg timestamp="20201029 18:15:16.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022175681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.013" endtime="20201029 18:15:16.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022175681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.320" endtime="20201029 18:15:16.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.328" endtime="20201029 18:15:16.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.008" endtime="20201029 18:15:16.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.006" endtime="20201029 18:15:16.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.335" level="INFO">${RESULT} = [{'diff': 4.222000000001641e-06}, {'diff': 3.9309999999986855e-06}, {'diff': 4.264000000000351e-06}, {'diff': 4.264000000000351e-06}, {'diff': 4.250000000000781e-06}, {'diff': 3.9449999999982555e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:16.331" endtime="20201029 18:15:16.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:16.339" level="INFO">${ACCURACY} = {'diff': [4.222000000001641e-06, 3.9309999999986855e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.250000000000781e-06, 3.9449999999982555e-06, 4.568999999999407e-06, 4.263999999996881e-06, 3.90...</msg>
<status status="PASS" starttime="20201029 18:15:16.336" endtime="20201029 18:15:16.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.343" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:15:16.342" endtime="20201029 18:15:16.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.346" level="INFO">VALUE: [4.222000000001641e-06, 3.9309999999986855e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.250000000000781e-06, 3.9449999999982555e-06, 4.568999999999407e-06, 4.263999999996881e-06, 3.902999999999546e-06, 4.568999999999407e-06, 4.555999999999311e-06, 3.943999999998782e-06, 3.944000000002251e-06, 4.2359999999977416e-06, 3.6389999999997258e-06, 4.5699999999988805e-06, 4.250000000000781e-06, 3.665999999999392e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.582999999998977e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.569000000002876e-06, 3.958000000001821e-06, 4.2499999999973115e-06, 4.568999999999407e-06, 3.986000000000961e-06, 4.264000000000351e-06, 3.930000000002681e-06, 4.2499999999973115e-06, 3.959000000001295e-06, 3.943999999998782e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.264000000000351e-06, 3.943999999998782e-06, 4.277000000000447e-06, 3.958999999997825e-06, 4.208999999998075e-06, 4.554999999999837e-06, 4.555999999999311e-06, 3.972000000001391e-06, 3.957999999998352e-06, 4.568999999999407e-06]</msg>
<status status="PASS" starttime="20201029 18:15:16.344" endtime="20201029 18:15:16.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.340" endtime="20201029 18:15:16.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:16.350" endtime="20201029 18:15:16.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.349" endtime="20201029 18:15:16.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.347" endtime="20201029 18:15:16.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.975" endtime="20201029 18:15:16.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.975" endtime="20201029 18:15:16.371"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.380" endtime="20201029 18:15:16.394"></status>
</kw>
<msg timestamp="20201029 18:15:16.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.378" endtime="20201029 18:15:16.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.395" endtime="20201029 18:15:16.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.398" endtime="20201029 18:15:16.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.375" endtime="20201029 18:15:16.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.373" endtime="20201029 18:15:16.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.407" endtime="20201029 18:15:16.687"></status>
</kw>
<msg timestamp="20201029 18:15:16.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.406" endtime="20201029 18:15:16.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.691" endtime="20201029 18:15:16.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.700" endtime="20201029 18:15:16.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.403" endtime="20201029 18:15:16.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.401" endtime="20201029 18:15:16.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.706" level="INFO">${RESULT} = [{'diff': 5.7639999999983815e-06}, {'diff': 4.903000000000546e-06}, {'diff': 5.167000000000366e-06}, {'diff': 5.459000000002795e-06}, {'diff': 5.180999999999936e-06}, {'diff': 4.5699999999988805e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:16.703" endtime="20201029 18:15:16.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:16.711" level="INFO">${ACCURACY} = {'diff': [5.7639999999983815e-06, 4.903000000000546e-06, 5.167000000000366e-06, 5.459000000002795e-06, 5.180999999999936e-06, 4.5699999999988805e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.5...</msg>
<status status="PASS" starttime="20201029 18:15:16.708" endtime="20201029 18:15:16.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.715" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:15:16.714" endtime="20201029 18:15:16.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.718" level="INFO">VALUE: [5.7639999999983815e-06, 4.903000000000546e-06, 5.167000000000366e-06, 5.459000000002795e-06, 5.180999999999936e-06, 4.5699999999988805e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.569999999999881e-06, 4.847000000002266e-06, 4.555999999999311e-06, 5.486999999998465e-06, 5.444999999999756e-06, 5.180000000000462e-06, 5.180999999999936e-06, 5.165999999997423e-06, 5.4589999999993255e-06, 5.180999999999936e-06, 5.180999999999936e-06, 5.4589999999993255e-06, 4.8749999999979365e-06, 5.472999999998895e-06, 5.485999999998992e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.457999999999852e-06, 5.180000000000462e-06, 4.554999999999837e-06, 5.472999999998895e-06, 5.167000000000366e-06, 5.499999999998562e-06, 5.167000000000366e-06, 5.194000000000032e-06, 5.180000000000462e-06, 5.165999999997423e-06, 5.444999999999756e-06, 5.485999999998992e-06, 4.875000000001406e-06, 5.472999999998895e-06, 5.485999999998992e-06, 5.221999999999172e-06, 5.167000000000366e-06, 5.139000000001226e-06, 5.180999999999936e-06, 5.471999999999422e-06, 5.180999999999936e-06, 5.221999999999172e-06, 5.180000000000462e-06, 5.486000000002461e-06, 5.4589999999993255e-06]</msg>
<status status="PASS" starttime="20201029 18:15:16.716" endtime="20201029 18:15:16.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.712" endtime="20201029 18:15:16.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:16.723" endtime="20201029 18:15:16.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.722" endtime="20201029 18:15:16.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.720" endtime="20201029 18:15:16.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.371" endtime="20201029 18:15:16.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.371" endtime="20201029 18:15:16.744"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.752" endtime="20201029 18:15:16.766"></status>
</kw>
<msg timestamp="20201029 18:15:16.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.751" endtime="20201029 18:15:16.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.776" endtime="20201029 18:15:16.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.778" endtime="20201029 18:15:16.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.748" endtime="20201029 18:15:16.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.746" endtime="20201029 18:15:16.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.787" endtime="20201029 18:15:17.090"></status>
</kw>
<msg timestamp="20201029 18:15:17.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021536042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021542083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.786" endtime="20201029 18:15:17.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021536042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021542083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.094" endtime="20201029 18:15:17.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.102" endtime="20201029 18:15:17.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.783" endtime="20201029 18:15:17.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.782" endtime="20201029 18:15:17.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.109" level="INFO">${RESULT} = [{'diff': 6.041000000001767e-06}, {'diff': 5.805000000001087e-06}, {'diff': 6.0829999999970075e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.360999999999867e-06}, {'diff': 5.7639999999983815e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:17.106" endtime="20201029 18:15:17.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:17.114" level="INFO">${ACCURACY} = {'diff': [6.041000000001767e-06, 5.805000000001087e-06, 6.0829999999970075e-06, 6.056000000000811e-06, 6.360999999999867e-06, 5.7639999999983815e-06, 6.388999999999007e-06, 6.083000000000477e-06, 6.42...</msg>
<status status="PASS" starttime="20201029 18:15:17.110" endtime="20201029 18:15:17.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.118" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:15:17.117" endtime="20201029 18:15:17.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.121" level="INFO">VALUE: [6.041000000001767e-06, 5.805000000001087e-06, 6.0829999999970075e-06, 6.056000000000811e-06, 6.360999999999867e-06, 5.7639999999983815e-06, 6.388999999999007e-06, 6.083000000000477e-06, 6.429999999998243e-06, 6.0839999999999506e-06, 5.7779999999979514e-06, 6.054999999997868e-06, 6.069999999996911e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.403000000002046e-06, 6.388999999999007e-06, 6.709000000000576e-06, 6.097000000000047e-06, 6.388999999999007e-06, 5.7779999999979514e-06, 6.347000000000297e-06, 6.110999999999617e-06, 6.110999999999617e-06, 5.457999999999852e-06, 6.695000000001006e-06, 6.360999999999867e-06, 6.403000000002046e-06, 6.333000000000727e-06, 6.0829999999970075e-06, 6.763999999999382e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 5.457999999999852e-06, 6.083000000000477e-06, 6.4029999999985765e-06, 6.097000000000047e-06, 6.401999999999103e-06, 6.374999999999437e-06, 6.0839999999999506e-06, 6.389000000002476e-06, 6.083000000000477e-06, 6.431000000001186e-06, 6.401999999999103e-06, 6.403000000002046e-06, 6.415999999998673e-06, 6.333000000000727e-06, 6.110999999999617e-06, 6.0979999999995205e-06, 6.403000000002046e-06]</msg>
<status status="PASS" starttime="20201029 18:15:17.120" endtime="20201029 18:15:17.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.115" endtime="20201029 18:15:17.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:17.125" endtime="20201029 18:15:17.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.124" endtime="20201029 18:15:17.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.123" endtime="20201029 18:15:17.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.745" endtime="20201029 18:15:17.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.744" endtime="20201029 18:15:17.146"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.155" endtime="20201029 18:15:17.169"></status>
</kw>
<msg timestamp="20201029 18:15:17.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.154" endtime="20201029 18:15:17.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.170" endtime="20201029 18:15:17.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.173" endtime="20201029 18:15:17.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.151" endtime="20201029 18:15:17.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.149" endtime="20201029 18:15:17.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.182" endtime="20201029 18:15:17.471"></status>
</kw>
<msg timestamp="20201029 18:15:17.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.181" endtime="20201029 18:15:17.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.475" endtime="20201029 18:15:17.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.483" endtime="20201029 18:15:17.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.178" endtime="20201029 18:15:17.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.176" endtime="20201029 18:15:17.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.490" level="INFO">${RESULT} = [{'diff': 7.889000000000507e-06}, {'diff': 6.679999999998493e-06}, {'diff': 7.3469999999978275e-06}, {'diff': 7.000000000000062e-06}, {'diff': 7.318999999998688e-06}, {'diff': 7.318999999998688e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:17.487" endtime="20201029 18:15:17.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:17.494" level="INFO">${ACCURACY} = {'diff': [7.889000000000507e-06, 6.679999999998493e-06, 7.3469999999978275e-06, 7.000000000000062e-06, 7.318999999998688e-06, 7.318999999998688e-06, 7.320000000001631e-06, 7.013999999999632e-06, 7.612...</msg>
<status status="PASS" starttime="20201029 18:15:17.491" endtime="20201029 18:15:17.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.499" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:15:17.498" endtime="20201029 18:15:17.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.501" level="INFO">VALUE: [7.889000000000507e-06, 6.679999999998493e-06, 7.3469999999978275e-06, 7.000000000000062e-06, 7.318999999998688e-06, 7.318999999998688e-06, 7.320000000001631e-06, 7.013999999999632e-06, 7.6120000000005905e-06, 7.318999999998688e-06, 7.611000000001117e-06, 7.3469999999978275e-06, 7.306000000002061e-06, 7.000000000000062e-06, 7.665999999999923e-06, 7.305999999998591e-06, 7.597000000001547e-06, 7.319000000002157e-06, 7.304999999999118e-06, 7.347000000001297e-06, 7.304999999999118e-06, 6.959000000000826e-06, 7.318999999998688e-06, 6.930999999998216e-06, 7.306000000002061e-06, 6.695000000001006e-06, 7.319999999998161e-06, 7.2919999999990215e-06, 7.304999999999118e-06, 7.263999999999882e-06, 7.318999999998688e-06, 7.305999999998591e-06, 7.306000000002061e-06, 7.625000000000687e-06, 7.056000000001811e-06, 7.305999999998591e-06, 7.013999999999632e-06, 7.000000000000062e-06, 7.305999999998591e-06, 6.986000000000492e-06, 7.347000000001297e-06, 7.304999999999118e-06, 7.2919999999990215e-06, 7.320000000001631e-06, 7.639000000000257e-06, 7.318999999998688e-06, 7.318999999998688e-06, 7.348000000000771e-06, 7.014000000003101e-06, 7.304999999999118e-06]</msg>
<status status="PASS" starttime="20201029 18:15:17.500" endtime="20201029 18:15:17.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.495" endtime="20201029 18:15:17.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:17.506" endtime="20201029 18:15:17.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.504" endtime="20201029 18:15:17.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.503" endtime="20201029 18:15:17.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.147" endtime="20201029 18:15:17.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.146" endtime="20201029 18:15:17.527"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.535" endtime="20201029 18:15:17.550"></status>
</kw>
<msg timestamp="20201029 18:15:17.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.534" endtime="20201029 18:15:17.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.552" endtime="20201029 18:15:17.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.554" endtime="20201029 18:15:17.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.531" endtime="20201029 18:15:17.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.529" endtime="20201029 18:15:17.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.564" endtime="20201029 18:15:17.852"></status>
</kw>
<msg timestamp="20201029 18:15:17.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023148819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023157014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.562" endtime="20201029 18:15:17.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023148819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023157014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.856" endtime="20201029 18:15:17.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.865" endtime="20201029 18:15:17.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.559" endtime="20201029 18:15:17.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.558" endtime="20201029 18:15:17.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.871" level="INFO">${RESULT} = [{'diff': 8.194999999999036e-06}, {'diff': 7.929999999999743e-06}, {'diff': 8.221999999998703e-06}, {'diff': 8.541000000000798e-06}, {'diff': 8.207999999999133e-06}, {'diff': 7.931000000002686e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:17.868" endtime="20201029 18:15:17.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:17.876" level="INFO">${ACCURACY} = {'diff': [8.194999999999036e-06, 7.929999999999743e-06, 8.221999999998703e-06, 8.541000000000798e-06, 8.207999999999133e-06, 7.931000000002686e-06, 8.485999999998523e-06, 8.221999999998703e-06, 7.9309...</msg>
<status status="PASS" starttime="20201029 18:15:17.872" endtime="20201029 18:15:17.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.880" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:15:17.879" endtime="20201029 18:15:17.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.883" level="INFO">VALUE: [8.194999999999036e-06, 7.929999999999743e-06, 8.221999999998703e-06, 8.541000000000798e-06, 8.207999999999133e-06, 7.931000000002686e-06, 8.485999999998523e-06, 8.221999999998703e-06, 7.930999999999216e-06, 8.569999999999411e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.222000000002172e-06, 8.555999999999842e-06, 7.916999999999647e-06, 7.6109999999976474e-06, 8.528000000000702e-06, 7.930999999999216e-06, 8.542000000000272e-06, 8.499999999998092e-06, 7.930999999999216e-06, 8.236000000001742e-06, 7.6109999999976474e-06, 8.569999999999411e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.237000000001216e-06, 7.916999999999647e-06, 8.542000000000272e-06, 7.916999999999647e-06, 8.542000000000272e-06, 8.264000000000882e-06, 8.542000000000272e-06, 8.166999999999897e-06, 8.527999999997232e-06, 8.528000000000702e-06, 8.207999999999133e-06, 7.874999999997467e-06, 8.528000000000702e-06, 8.166999999999897e-06, 8.222000000002172e-06, 8.194999999999036e-06, 7.903000000000077e-06, 7.6109999999976474e-06, 8.222999999998176e-06, 7.930999999999216e-06, 8.473000000001896e-06, 8.527000000001228e-06, 8.542000000000272e-06, 8.250000000001312e-06]</msg>
<status status="PASS" starttime="20201029 18:15:17.881" endtime="20201029 18:15:17.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.876" endtime="20201029 18:15:17.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:17.889" endtime="20201029 18:15:17.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.887" endtime="20201029 18:15:17.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.886" endtime="20201029 18:15:17.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.528" endtime="20201029 18:15:17.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.527" endtime="20201029 18:15:17.909"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.918" endtime="20201029 18:15:17.932"></status>
</kw>
<msg timestamp="20201029 18:15:17.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.916" endtime="20201029 18:15:17.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.933" endtime="20201029 18:15:17.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.936" endtime="20201029 18:15:17.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.914" endtime="20201029 18:15:17.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.912" endtime="20201029 18:15:17.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.945" endtime="20201029 18:15:18.230"></status>
</kw>
<msg timestamp="20201029 18:15:18.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021589625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.943" endtime="20201029 18:15:18.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021589625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.234" endtime="20201029 18:15:18.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.242" endtime="20201029 18:15:18.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.941" endtime="20201029 18:15:18.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.939" endtime="20201029 18:15:18.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:18.249" level="INFO">${RESULT} = [{'diff': 9.096999999999578e-06}, {'diff': 8.527000000001228e-06}, {'diff': 9.445000000000286e-06}, {'diff': 9.124999999998717e-06}, {'diff': 9.431000000000717e-06}, {'diff': 8.528000000000702e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:18.245" endtime="20201029 18:15:18.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:18.254" level="INFO">${ACCURACY} = {'diff': [9.096999999999578e-06, 8.527000000001228e-06, 9.445000000000286e-06, 9.124999999998717e-06, 9.431000000000717e-06, 8.528000000000702e-06, 9.124999999998717e-06, 9.152999999997857e-06, 9.1250...</msg>
<status status="PASS" starttime="20201029 18:15:18.250" endtime="20201029 18:15:18.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.258" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:15:18.257" endtime="20201029 18:15:18.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.261" level="INFO">VALUE: [9.096999999999578e-06, 8.527000000001228e-06, 9.445000000000286e-06, 9.124999999998717e-06, 9.431000000000717e-06, 8.528000000000702e-06, 9.124999999998717e-06, 9.152999999997857e-06, 9.125000000002187e-06, 9.457999999996913e-06, 8.846999999999328e-06, 9.138999999998287e-06, 9.445000000000286e-06, 9.471999999999953e-06, 9.403000000001577e-06, 9.416000000001673e-06, 9.083000000000008e-06, 9.124999999998717e-06, 9.165999999997954e-06, 9.445000000000286e-06, 8.512999999998189e-06, 9.139000000001757e-06, 9.443999999997343e-06, 9.152999999997857e-06, 9.430000000001243e-06, 9.138999999998287e-06, 9.443999999997343e-06, 8.541000000000798e-06, 9.153000000001327e-06, 9.458999999999856e-06, 9.430000000001243e-06, 9.138999999998287e-06, 9.458000000000383e-06, 9.360999999999398e-06, 9.429999999997773e-06, 9.445000000000286e-06, 9.445000000000286e-06, 9.139000000001757e-06, 8.541000000000798e-06, 9.458000000000383e-06, 9.485999999999523e-06, 9.445000000000286e-06, 9.125000000002187e-06, 9.430000000001243e-06, 9.514000000002132e-06, 9.458999999999856e-06, 9.124999999998717e-06, 9.151999999998384e-06, 9.374999999998967e-06, 9.153000000001327e-06]</msg>
<status status="PASS" starttime="20201029 18:15:18.260" endtime="20201029 18:15:18.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.255" endtime="20201029 18:15:18.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:18.266" endtime="20201029 18:15:18.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.264" endtime="20201029 18:15:18.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.263" endtime="20201029 18:15:18.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.910" endtime="20201029 18:15:18.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.909" endtime="20201029 18:15:18.286"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.295" endtime="20201029 18:15:18.310"></status>
</kw>
<msg timestamp="20201029 18:15:18.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.294" endtime="20201029 18:15:18.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.312" endtime="20201029 18:15:18.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.314" endtime="20201029 18:15:18.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.291" endtime="20201029 18:15:18.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.289" endtime="20201029 18:15:18.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.323" endtime="20201029 18:15:18.607"></status>
</kw>
<msg timestamp="20201029 18:15:18.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021601972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021612292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.322" endtime="20201029 18:15:18.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021601972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021612292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.611" endtime="20201029 18:15:18.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.620" endtime="20201029 18:15:18.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.319" endtime="20201029 18:15:18.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.317" endtime="20201029 18:15:18.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:18.626" level="INFO">${RESULT} = [{'diff': 1.0320000000001162e-05}, {'diff': 1.0068999999997968e-05}, {'diff': 1.0361000000000398e-05}, {'diff': 1.0347000000000828e-05}, {'diff': 1.0360999999996928e-05}, {'diff': 1.0361000000000398e-...</msg>
<status status="PASS" starttime="20201029 18:15:18.623" endtime="20201029 18:15:18.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:18.630" level="INFO">${ACCURACY} = {'diff': [1.0320000000001162e-05, 1.0068999999997968e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0360999999996928e-05, 1.0361000000000398e-05, 1.0054999999998399e-05, 9.749999999999343e-06,...</msg>
<status status="PASS" starttime="20201029 18:15:18.627" endtime="20201029 18:15:18.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.635" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:15:18.634" endtime="20201029 18:15:18.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.637" level="INFO">VALUE: [1.0320000000001162e-05, 1.0068999999997968e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0360999999996928e-05, 1.0361000000000398e-05, 1.0054999999998399e-05, 9.749999999999343e-06, 1.0069000000001438e-05, 1.0347000000000828e-05, 1.0013999999999162e-05, 1.0333000000001258e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0361999999999871e-05, 1.0361999999999871e-05, 1.0056000000001342e-05, 1.0361000000000398e-05, 1.0028000000002202e-05, 1.0374999999999968e-05, 1.0070000000000912e-05, 1.0388000000000064e-05, 1.0346999999997358e-05, 1.0361999999999871e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0389000000003007e-05, 1.0056000000001342e-05, 9.763999999998912e-06, 1.0374999999999968e-05, 1.0098000000000051e-05, 1.0361000000000398e-05, 1.0666999999998927e-05, 1.0374999999999968e-05, 1.0681000000001967e-05, 1.0055999999997872e-05, 1.0055999999997872e-05, 9.750000000002812e-06, 1.0347000000000828e-05, 1.0055000000001868e-05, 1.0360999999996928e-05, 1.0097000000000578e-05, 1.0097000000000578e-05, 1.0041000000002298e-05, 9.818999999997718e-06, 1.0666999999998927e-05, 1.0055999999997872e-05, 1.0361000000000398e-05, 1.0054999999998399e-05]</msg>
<status status="PASS" starttime="20201029 18:15:18.636" endtime="20201029 18:15:18.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.631" endtime="20201029 18:15:18.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:18.646" endtime="20201029 18:15:18.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.643" endtime="20201029 18:15:18.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.640" endtime="20201029 18:15:18.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.287" endtime="20201029 18:15:18.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.287" endtime="20201029 18:15:18.669"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.678" endtime="20201029 18:15:18.695"></status>
</kw>
<msg timestamp="20201029 18:15:18.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.676" endtime="20201029 18:15:18.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.697" endtime="20201029 18:15:18.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.700" endtime="20201029 18:15:18.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.673" endtime="20201029 18:15:18.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.671" endtime="20201029 18:15:18.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.709" endtime="20201029 18:15:18.995"></status>
</kw>
<msg timestamp="20201029 18:15:18.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027481194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027492806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.707" endtime="20201029 18:15:18.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027481194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027492806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.999" endtime="20201029 18:15:19.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.008" endtime="20201029 18:15:19.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.704" endtime="20201029 18:15:19.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.703" endtime="20201029 18:15:19.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.015" level="INFO">${RESULT} = [{'diff': 1.1612000000001121e-05}, {'diff': 1.0986000000001023e-05}, {'diff': 1.1263999999996943e-05}, {'diff': 1.1027000000000259e-05}, {'diff': 1.1291999999999552e-05}, {'diff': 1.1277999999999982e-...</msg>
<status status="PASS" starttime="20201029 18:15:19.012" endtime="20201029 18:15:19.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:19.019" level="INFO">${ACCURACY} = {'diff': [1.1612000000001121e-05, 1.0986000000001023e-05, 1.1263999999996943e-05, 1.1027000000000259e-05, 1.1291999999999552e-05, 1.1277999999999982e-05, 1.1583999999998512e-05, 1.1291999999999552e-05...</msg>
<status status="PASS" starttime="20201029 18:15:19.016" endtime="20201029 18:15:19.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.024" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:15:19.023" endtime="20201029 18:15:19.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.026" level="INFO">VALUE: [1.1612000000001121e-05, 1.0986000000001023e-05, 1.1263999999996943e-05, 1.1027000000000259e-05, 1.1291999999999552e-05, 1.1277999999999982e-05, 1.1583999999998512e-05, 1.1291999999999552e-05, 1.0957999999998413e-05, 1.1014000000000163e-05, 1.1582999999999039e-05, 1.1222999999997707e-05, 1.1291999999999552e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1304999999999649e-05, 1.1304999999999649e-05, 1.1291999999999552e-05, 1.0986000000001023e-05, 1.1277999999999982e-05, 1.0652999999999357e-05, 1.1277999999999982e-05, 1.1291999999999552e-05, 1.1000000000000593e-05, 1.1291999999999552e-05, 1.1000000000000593e-05, 1.0986000000001023e-05, 1.0986000000001023e-05, 1.1250000000000843e-05, 1.0986000000001023e-05, 1.1000000000000593e-05, 1.1264000000000413e-05, 1.1598000000001552e-05, 1.1277999999999982e-05, 1.1583000000002508e-05, 1.1277999999999982e-05, 1.0959000000001357e-05, 1.1582999999999039e-05, 1.1291000000000079e-05, 1.0986000000001023e-05, 1.1277999999999982e-05, 1.0666999999998927e-05, 1.1291999999999552e-05, 1.0971999999997983e-05, 1.1277000000000509e-05, 1.1304999999999649e-05, 1.1277000000000509e-05, 1.0971999999997983e-05, 1.1264000000000413e-05, 1.1320000000002162e-05]</msg>
<status status="PASS" starttime="20201029 18:15:19.025" endtime="20201029 18:15:19.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.020" endtime="20201029 18:15:19.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.032" endtime="20201029 18:15:19.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.031" endtime="20201029 18:15:19.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.030" endtime="20201029 18:15:19.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.670" endtime="20201029 18:15:19.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.669" endtime="20201029 18:15:19.053"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.062" endtime="20201029 18:15:19.076"></status>
</kw>
<msg timestamp="20201029 18:15:19.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.060" endtime="20201029 18:15:19.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.077" endtime="20201029 18:15:19.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.080" endtime="20201029 18:15:19.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.057" endtime="20201029 18:15:19.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.055" endtime="20201029 18:15:19.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.089" endtime="20201029 18:15:19.372"></status>
</kw>
<msg timestamp="20201029 18:15:19.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021810181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021822347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.087" endtime="20201029 18:15:19.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021810181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021822347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.377" endtime="20201029 18:15:19.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.385" endtime="20201029 18:15:19.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.085" endtime="20201029 18:15:19.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.083" endtime="20201029 18:15:19.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.391" level="INFO">${RESULT} = [{'diff': 1.2165999999997484e-05}, {'diff': 1.1888999999997568e-05}, {'diff': 1.2513999999998193e-05}, {'diff': 1.2485999999999053e-05}, {'diff': 1.2528000000001233e-05}, {'diff': 1.2208999999999137e-...</msg>
<status status="PASS" starttime="20201029 18:15:19.388" endtime="20201029 18:15:19.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:19.396" level="INFO">${ACCURACY} = {'diff': [1.2165999999997484e-05, 1.1888999999997568e-05, 1.2513999999998193e-05, 1.2485999999999053e-05, 1.2528000000001233e-05, 1.2208999999999137e-05, 1.1889000000001038e-05, 1.2180999999999997e-05...</msg>
<status status="PASS" starttime="20201029 18:15:19.392" endtime="20201029 18:15:19.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.401" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:15:19.400" endtime="20201029 18:15:19.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.403" level="INFO">VALUE: [1.2165999999997484e-05, 1.1888999999997568e-05, 1.2513999999998193e-05, 1.2485999999999053e-05, 1.2528000000001233e-05, 1.2208999999999137e-05, 1.1889000000001038e-05, 1.2180999999999997e-05, 1.2221999999999233e-05, 1.1875000000001468e-05, 1.2208999999999137e-05, 1.2194000000000094e-05, 1.2194999999999567e-05, 1.2500000000002093e-05, 1.1875000000001468e-05, 1.2138000000001814e-05, 1.1598000000001552e-05, 1.2207999999999664e-05, 1.2556000000000372e-05, 1.2513999999998193e-05, 1.2194999999999567e-05, 1.2485999999999053e-05, 1.2207999999999664e-05, 1.2500000000002093e-05, 1.1874999999997998e-05, 1.1582999999999039e-05, 1.2194999999999567e-05, 1.2236000000002273e-05, 1.2500000000002093e-05, 1.2485999999999053e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2514000000001663e-05, 1.2194999999999567e-05, 1.2499999999998623e-05, 1.2180999999999997e-05, 1.1569999999998942e-05, 1.2194000000000094e-05, 1.2221999999999233e-05, 1.2499999999998623e-05, 1.2195000000003037e-05, 1.1610999999998178e-05, 1.2207999999999664e-05, 1.2527000000001759e-05, 1.2222999999998707e-05, 1.2263999999997943e-05, 1.2207999999999664e-05, 1.2500000000002093e-05]</msg>
<status status="PASS" starttime="20201029 18:15:19.402" endtime="20201029 18:15:19.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.397" endtime="20201029 18:15:19.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.408" endtime="20201029 18:15:19.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.407" endtime="20201029 18:15:19.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.406" endtime="20201029 18:15:19.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.054" endtime="20201029 18:15:19.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.053" endtime="20201029 18:15:19.430"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.441" endtime="20201029 18:15:19.458"></status>
</kw>
<msg timestamp="20201029 18:15:19.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.440" endtime="20201029 18:15:19.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.460" endtime="20201029 18:15:19.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.462" endtime="20201029 18:15:19.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.437" endtime="20201029 18:15:19.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.435" endtime="20201029 18:15:19.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.471" endtime="20201029 18:15:19.757"></status>
</kw>
<msg timestamp="20201029 18:15:19.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025482847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025496542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.470" endtime="20201029 18:15:19.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025482847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025496542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.761" endtime="20201029 18:15:19.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.770" endtime="20201029 18:15:19.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.467" endtime="20201029 18:15:19.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.465" endtime="20201029 18:15:19.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.776" level="INFO">${RESULT} = [{'diff': 1.3695000000001067e-05}, {'diff': 1.2777000000002009e-05}, {'diff': 1.3457999999997444e-05}, {'diff': 1.3110999999999678e-05}, {'diff': 1.3097000000000109e-05}, {'diff': 1.3138999999998818e-...</msg>
<status status="PASS" starttime="20201029 18:15:19.773" endtime="20201029 18:15:19.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:19.780" level="INFO">${ACCURACY} = {'diff': [1.3695000000001067e-05, 1.2777000000002009e-05, 1.3457999999997444e-05, 1.3110999999999678e-05, 1.3097000000000109e-05, 1.3138999999998818e-05, 1.305499999999793e-05, 1.3110999999999678e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:19.777" endtime="20201029 18:15:19.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.785" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:15:19.784" endtime="20201029 18:15:19.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.787" level="INFO">VALUE: [1.3695000000001067e-05, 1.2777000000002009e-05, 1.3457999999997444e-05, 1.3110999999999678e-05, 1.3097000000000109e-05, 1.3138999999998818e-05, 1.305499999999793e-05, 1.3110999999999678e-05, 1.3124999999999248e-05, 1.3110999999999678e-05, 1.3097000000000109e-05, 1.3110999999999678e-05, 1.3444000000001344e-05, 1.3152999999998388e-05, 1.3430000000001774e-05, 1.3458000000000914e-05, 1.2805000000001149e-05, 1.3417000000001678e-05, 1.3110999999999678e-05, 1.3124999999999248e-05, 1.3416999999998208e-05, 1.3110999999999678e-05, 1.3430000000001774e-05, 1.3389000000002538e-05, 1.3417000000001678e-05, 1.2820000000000192e-05, 1.3402999999998638e-05, 1.3417000000001678e-05, 1.2806000000000622e-05, 1.2820000000000192e-05, 1.2819000000000719e-05, 1.3125000000002718e-05, 1.3124999999999248e-05, 1.3125000000002718e-05, 1.305499999999793e-05, 1.3415999999998734e-05, 1.3403000000002108e-05, 1.3084000000000012e-05, 1.3110999999999678e-05, 1.3110999999999678e-05, 1.3736999999999777e-05, 1.3124999999999248e-05, 1.3125000000002718e-05, 1.3084000000000012e-05, 1.3042000000001303e-05, 1.3445000000000817e-05, 1.3097000000000109e-05, 1.3417000000001678e-05, 1.3165999999998484e-05, 1.3430999999997778e-05]</msg>
<status status="PASS" starttime="20201029 18:15:19.786" endtime="20201029 18:15:19.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.781" endtime="20201029 18:15:19.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.792" endtime="20201029 18:15:19.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.791" endtime="20201029 18:15:19.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.789" endtime="20201029 18:15:19.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.433" endtime="20201029 18:15:19.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.430" endtime="20201029 18:15:19.813"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.821" endtime="20201029 18:15:19.837"></status>
</kw>
<msg timestamp="20201029 18:15:19.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.820" endtime="20201029 18:15:19.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.839" endtime="20201029 18:15:19.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.841" endtime="20201029 18:15:19.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.817" endtime="20201029 18:15:19.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.815" endtime="20201029 18:15:19.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.850" endtime="20201029 18:15:20.136"></status>
</kw>
<msg timestamp="20201029 18:15:20.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022783861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.849" endtime="20201029 18:15:20.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022783861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.140" endtime="20201029 18:15:20.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.148" endtime="20201029 18:15:20.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.846" endtime="20201029 18:15:20.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.844" endtime="20201029 18:15:20.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.155" level="INFO">${RESULT} = [{'diff': 1.4903000000000138e-05}, {'diff': 1.4000000000000123e-05}, {'diff': 1.4305999999998653e-05}, {'diff': 1.4361000000000929e-05}, {'diff': 1.402699999999979e-05}, {'diff': 1.4652999999999888e-0...</msg>
<status status="PASS" starttime="20201029 18:15:20.152" endtime="20201029 18:15:20.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:20.159" level="INFO">${ACCURACY} = {'diff': [1.4903000000000138e-05, 1.4000000000000123e-05, 1.4305999999998653e-05, 1.4361000000000929e-05, 1.402699999999979e-05, 1.4652999999999888e-05, 1.4277999999999513e-05, 1.4360999999997459e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:20.156" endtime="20201029 18:15:20.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.163" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:15:20.162" endtime="20201029 18:15:20.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.166" level="INFO">VALUE: [1.4903000000000138e-05, 1.4000000000000123e-05, 1.4305999999998653e-05, 1.4361000000000929e-05, 1.402699999999979e-05, 1.4652999999999888e-05, 1.4277999999999513e-05, 1.4360999999997459e-05, 1.4333000000001789e-05, 1.433299999999832e-05, 1.433299999999832e-05, 1.4306000000002123e-05, 1.434699999999789e-05, 1.4652999999999888e-05, 1.434699999999789e-05, 1.4402000000000165e-05, 1.4083000000001539e-05, 1.402699999999979e-05, 1.3723000000000207e-05, 1.431899999999875e-05, 1.4348000000000832e-05, 1.4362000000000402e-05, 1.4041000000002829e-05, 1.3764000000002913e-05, 1.4347000000001359e-05, 1.433299999999832e-05, 1.4347000000001359e-05, 1.4361000000000929e-05, 1.434699999999789e-05, 1.4319999999998223e-05, 1.4347000000001359e-05, 1.4333000000001789e-05, 1.3722000000000734e-05, 1.434699999999789e-05, 1.4263999999999943e-05, 1.4348000000000832e-05, 1.3708000000001164e-05, 1.433299999999832e-05, 1.4027000000003259e-05, 1.4027999999999263e-05, 1.4652999999999888e-05, 1.4055000000002399e-05, 1.4027999999999263e-05, 1.4055000000002399e-05, 1.4361000000000929e-05, 1.4333000000001789e-05, 1.4638000000000845e-05, 1.4027999999999263e-05, 1.4347000000001359e-05, 1.3721999999997264e-05]</msg>
<status status="PASS" starttime="20201029 18:15:20.165" endtime="20201029 18:15:20.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.160" endtime="20201029 18:15:20.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.172" endtime="20201029 18:15:20.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.170" endtime="20201029 18:15:20.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.169" endtime="20201029 18:15:20.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.814" endtime="20201029 18:15:20.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.813" endtime="20201029 18:15:20.192"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.201" endtime="20201029 18:15:20.216"></status>
</kw>
<msg timestamp="20201029 18:15:20.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.200" endtime="20201029 18:15:20.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.217" endtime="20201029 18:15:20.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.220" endtime="20201029 18:15:20.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.197" endtime="20201029 18:15:20.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.195" endtime="20201029 18:15:20.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.229" endtime="20201029 18:15:20.514"></status>
</kw>
<msg timestamp="20201029 18:15:20.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021658417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.227" endtime="20201029 18:15:20.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021658417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.519" endtime="20201029 18:15:20.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.527" endtime="20201029 18:15:20.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.225" endtime="20201029 18:15:20.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.223" endtime="20201029 18:15:20.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.533" level="INFO">${RESULT} = [{'diff': 1.5499999999998154e-05}, {'diff': 1.4903000000000138e-05}, {'diff': 1.5278000000000513e-05}, {'diff': 1.5569e-05}, {'diff': 1.5555999999999903e-05}, {'diff': 1.4959000000001887e-05}, {'diff'...</msg>
<status status="PASS" starttime="20201029 18:15:20.530" endtime="20201029 18:15:20.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:20.539" level="INFO">${ACCURACY} = {'diff': [1.5499999999998154e-05, 1.4903000000000138e-05, 1.5278000000000513e-05, 1.5569e-05, 1.5555999999999903e-05, 1.4959000000001887e-05, 1.5555999999999903e-05, 1.5264000000000943e-05, 1.55699999...</msg>
<status status="PASS" starttime="20201029 18:15:20.534" endtime="20201029 18:15:20.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.543" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:15:20.542" endtime="20201029 18:15:20.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.546" level="INFO">VALUE: [1.5499999999998154e-05, 1.4903000000000138e-05, 1.5278000000000513e-05, 1.5569e-05, 1.5555999999999903e-05, 1.4959000000001887e-05, 1.5555999999999903e-05, 1.5264000000000943e-05, 1.5569999999999473e-05, 1.5193999999999624e-05, 1.5542000000000333e-05, 1.527699999999757e-05, 1.5278000000000513e-05, 1.5193999999999624e-05, 1.4957999999998944e-05, 1.5555999999999903e-05, 1.5264000000000943e-05, 1.5264000000000943e-05, 1.5555999999999903e-05, 1.4958999999998418e-05, 1.5514000000001194e-05, 1.5264000000000943e-05, 1.5278000000000513e-05, 1.5249999999997904e-05, 1.5278000000000513e-05, 1.5250000000001374e-05, 1.5250000000001374e-05, 1.4694000000002594e-05, 1.5263999999997474e-05, 1.5569999999999473e-05, 1.5236000000001804e-05, 1.4638000000000845e-05, 1.5235999999998334e-05, 1.5249999999997904e-05, 1.5569999999999473e-05, 1.4957999999998944e-05, 1.5555999999999903e-05, 1.4944999999998848e-05, 1.4957999999998944e-05, 1.5570000000002943e-05, 1.5207999999999194e-05, 1.4957999999998944e-05, 1.5236000000001804e-05, 1.5262999999998e-05, 1.5264000000000943e-05, 1.5264000000000943e-05, 1.5249999999997904e-05, 1.4929999999999805e-05, 1.5236000000001804e-05, 1.5249999999997904e-05]</msg>
<status status="PASS" starttime="20201029 18:15:20.544" endtime="20201029 18:15:20.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.539" endtime="20201029 18:15:20.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.551" endtime="20201029 18:15:20.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.549" endtime="20201029 18:15:20.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.548" endtime="20201029 18:15:20.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.193" endtime="20201029 18:15:20.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.193" endtime="20201029 18:15:20.571"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.580" endtime="20201029 18:15:20.594"></status>
</kw>
<msg timestamp="20201029 18:15:20.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.579" endtime="20201029 18:15:20.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.596" endtime="20201029 18:15:20.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.598" endtime="20201029 18:15:20.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.576" endtime="20201029 18:15:20.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.574" endtime="20201029 18:15:20.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.607" endtime="20201029 18:15:20.896"></status>
</kw>
<msg timestamp="20201029 18:15:20.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.606" endtime="20201029 18:15:20.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.900" endtime="20201029 18:15:20.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.908" endtime="20201029 18:15:20.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.603" endtime="20201029 18:15:20.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.602" endtime="20201029 18:15:20.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.915" level="INFO">${RESULT} = [{'diff': 1.6986000000000084e-05}, {'diff': 1.588900000000157e-05}, {'diff': 1.6485999999999584e-05}, {'diff': 1.612499999999878e-05}, {'diff': 1.6472999999999488e-05}, {'diff': 1.6457999999996975e-05...</msg>
<status status="PASS" starttime="20201029 18:15:20.912" endtime="20201029 18:15:20.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:20.919" level="INFO">${ACCURACY} = {'diff': [1.6986000000000084e-05, 1.588900000000157e-05, 1.6485999999999584e-05, 1.612499999999878e-05, 1.6472999999999488e-05, 1.6457999999996975e-05, 1.6472000000000014e-05, 1.591700000000071e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:15:20.916" endtime="20201029 18:15:20.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.924" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:15:20.922" endtime="20201029 18:15:20.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.926" level="INFO">VALUE: [1.6986000000000084e-05, 1.588900000000157e-05, 1.6485999999999584e-05, 1.612499999999878e-05, 1.6472999999999488e-05, 1.6457999999996975e-05, 1.6472000000000014e-05, 1.591700000000071e-05, 1.6485999999999584e-05, 1.6180000000001055e-05, 1.6166000000001485e-05, 1.616699999999749e-05, 1.6472000000000014e-05, 1.6181000000000528e-05, 1.587499999999853e-05, 1.6458000000000444e-05, 1.6166000000001485e-05, 1.586099999999896e-05, 1.6221999999999764e-05, 1.6485999999999584e-05, 1.586099999999896e-05, 1.641699999999774e-05, 1.6181000000000528e-05, 1.6194000000000625e-05, 1.6472000000000014e-05, 1.640300000000164e-05, 1.590300000000114e-05, 1.6166000000001485e-05, 1.616700000000096e-05, 1.5847999999998863e-05, 1.6513999999998724e-05, 1.6485999999999584e-05, 1.616700000000096e-05, 1.6458000000000444e-05, 1.6527999999998294e-05, 1.588900000000157e-05, 1.5542000000000333e-05, 1.6472000000000014e-05, 1.616700000000096e-05, 1.6458999999999918e-05, 1.586100000000243e-05, 1.6180000000001055e-05, 1.6472999999999488e-05, 1.6514000000002194e-05, 1.618099999999706e-05, 1.591700000000071e-05, 1.6472999999999488e-05, 1.6472000000000014e-05, 1.616699999999749e-05, 1.616700000000096e-05]</msg>
<status status="PASS" starttime="20201029 18:15:20.925" endtime="20201029 18:15:20.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.920" endtime="20201029 18:15:20.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.931" endtime="20201029 18:15:20.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.929" endtime="20201029 18:15:20.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.928" endtime="20201029 18:15:20.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.572" endtime="20201029 18:15:20.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.572" endtime="20201029 18:15:20.952"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.961" endtime="20201029 18:15:20.977"></status>
</kw>
<msg timestamp="20201029 18:15:20.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.959" endtime="20201029 18:15:20.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.978" endtime="20201029 18:15:20.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.981" endtime="20201029 18:15:20.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.956" endtime="20201029 18:15:20.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.954" endtime="20201029 18:15:20.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.990" endtime="20201029 18:15:21.275"></status>
</kw>
<msg timestamp="20201029 18:15:21.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023204986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023222611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.988" endtime="20201029 18:15:21.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023204986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023222611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.280" endtime="20201029 18:15:21.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.288" endtime="20201029 18:15:21.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.986" endtime="20201029 18:15:21.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.984" endtime="20201029 18:15:21.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:21.294" level="INFO">${RESULT} = [{'diff': 1.762500000000028e-05}, {'diff': 1.6806000000001153e-05}, {'diff': 1.737500000000003e-05}, {'diff': 1.7693999999998655e-05}, {'diff': 1.708300000000107e-05}, {'diff': 1.6472000000000014e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:21.291" endtime="20201029 18:15:21.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:21.299" level="INFO">${ACCURACY} = {'diff': [1.762500000000028e-05, 1.6806000000001153e-05, 1.737500000000003e-05, 1.7693999999998655e-05, 1.708300000000107e-05, 1.6472000000000014e-05, 1.737500000000003e-05, 1.680500000000168e-05, 1.7...</msg>
<status status="PASS" starttime="20201029 18:15:21.295" endtime="20201029 18:15:21.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.303" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:15:21.302" endtime="20201029 18:15:21.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.306" level="INFO">VALUE: [1.762500000000028e-05, 1.6806000000001153e-05, 1.737500000000003e-05, 1.7693999999998655e-05, 1.708300000000107e-05, 1.6472000000000014e-05, 1.737500000000003e-05, 1.680500000000168e-05, 1.73889999999996e-05, 1.715299999999892e-05, 1.73889999999996e-05, 1.7084000000000543e-05, 1.708300000000107e-05, 1.712499999999978e-05, 1.737500000000003e-05, 1.6792000000001583e-05, 1.70690000000015e-05, 1.736100000000046e-05, 1.7721999999997795e-05, 1.7401999999999695e-05, 1.73889999999996e-05, 1.73889999999996e-05, 1.737500000000003e-05, 1.708300000000107e-05, 1.737500000000003e-05, 1.711100000000021e-05, 1.740300000000264e-05, 1.709700000000064e-05, 1.708300000000107e-05, 1.709700000000064e-05, 1.7084000000000543e-05, 1.6791999999998114e-05, 1.6513999999998724e-05, 1.70690000000015e-05, 1.7429999999998835e-05, 1.7041999999998364e-05, 1.731899999999828e-05, 1.6777999999998544e-05, 1.70829999999976e-05, 1.70829999999976e-05, 1.70690000000015e-05, 1.737500000000003e-05, 1.709700000000064e-05, 1.709700000000064e-05, 1.711100000000021e-05, 1.7709000000001168e-05, 1.73889999999996e-05, 1.73889999999996e-05, 1.7083999999997074e-05, 1.7084000000000543e-05]</msg>
<status status="PASS" starttime="20201029 18:15:21.304" endtime="20201029 18:15:21.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.300" endtime="20201029 18:15:21.308"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:21.311" endtime="20201029 18:15:21.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.310" endtime="20201029 18:15:21.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.309" endtime="20201029 18:15:21.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.953" endtime="20201029 18:15:21.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.952" endtime="20201029 18:15:21.332"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.341" endtime="20201029 18:15:21.356"></status>
</kw>
<msg timestamp="20201029 18:15:21.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.339" endtime="20201029 18:15:21.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.357" endtime="20201029 18:15:21.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.360" endtime="20201029 18:15:21.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.337" endtime="20201029 18:15:21.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.334" endtime="20201029 18:15:21.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.369" endtime="20201029 18:15:21.655"></status>
</kw>
<msg timestamp="20201029 18:15:21.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.367" endtime="20201029 18:15:21.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.659" endtime="20201029 18:15:21.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.667" endtime="20201029 18:15:21.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.364" endtime="20201029 18:15:21.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.363" endtime="20201029 18:15:21.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:21.674" level="INFO">${RESULT} = [{'diff': 1.8264000000000474e-05}, {'diff': 1.7722000000001265e-05}, {'diff': 1.861099999999824e-05}, {'diff': 1.8027999999999794e-05}, {'diff': 1.8236000000001334e-05}, {'diff': 1.8000000000000654e-0...</msg>
<status status="PASS" starttime="20201029 18:15:21.671" endtime="20201029 18:15:21.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:21.679" level="INFO">${ACCURACY} = {'diff': [1.8264000000000474e-05, 1.7722000000001265e-05, 1.861099999999824e-05, 1.8027999999999794e-05, 1.8236000000001334e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8320000000002223e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:21.675" endtime="20201029 18:15:21.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.684" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:15:21.682" endtime="20201029 18:15:21.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.686" level="INFO">VALUE: [1.8264000000000474e-05, 1.7722000000001265e-05, 1.861099999999824e-05, 1.8027999999999794e-05, 1.8236000000001334e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8320000000002223e-05, 1.859699999999867e-05, 1.837499999999756e-05, 1.863900000000085e-05, 1.830499999999971e-05, 1.831899999999928e-05, 1.861100000000171e-05, 1.8000000000000654e-05, 1.830499999999971e-05, 1.859699999999867e-05, 1.831899999999928e-05, 1.8305999999999184e-05, 1.8305999999999184e-05, 1.8291999999999614e-05, 1.830499999999971e-05, 1.833299999999885e-05, 1.7957999999998475e-05, 1.8334000000001793e-05, 1.830499999999971e-05, 1.861099999999824e-05, 1.8319999999998754e-05, 1.8305999999999184e-05, 1.8305999999999184e-05, 1.8000000000000654e-05, 1.862500000000128e-05, 1.830499999999971e-05, 1.8306000000002653e-05, 1.8000000000000654e-05, 1.833299999999885e-05, 1.8027999999999794e-05, 1.838899999999713e-05, 1.7707999999998225e-05, 1.8291999999999614e-05, 1.852699999999735e-05, 1.8319999999998754e-05, 1.8014000000000224e-05, 1.831899999999928e-05, 1.8027999999999794e-05, 1.8027999999999794e-05, 1.830499999999971e-05, 1.831899999999928e-05, 1.8027999999999794e-05, 1.830499999999971e-05]</msg>
<status status="PASS" starttime="20201029 18:15:21.685" endtime="20201029 18:15:21.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.680" endtime="20201029 18:15:21.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:21.691" endtime="20201029 18:15:21.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.689" endtime="20201029 18:15:21.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.688" endtime="20201029 18:15:21.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.333" endtime="20201029 18:15:21.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.332" endtime="20201029 18:15:21.712"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.720" endtime="20201029 18:15:21.735"></status>
</kw>
<msg timestamp="20201029 18:15:21.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.719" endtime="20201029 18:15:21.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.736" endtime="20201029 18:15:21.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.739" endtime="20201029 18:15:21.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.716" endtime="20201029 18:15:21.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.714" endtime="20201029 18:15:21.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.748" endtime="20201029 18:15:22.035"></status>
</kw>
<msg timestamp="20201029 18:15:22.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021792361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.746" endtime="20201029 18:15:22.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021792361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.039" endtime="20201029 18:15:22.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.048" endtime="20201029 18:15:22.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.744" endtime="20201029 18:15:22.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.742" endtime="20201029 18:15:22.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.055" level="INFO">${RESULT} = [{'diff': 1.980500000000121e-05}, {'diff': 1.862500000000128e-05}, {'diff': 1.891700000000024e-05}, {'diff': 1.915300000000092e-05}, {'diff': 1.954100000000139e-05}, {'diff': 1.891700000000024e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:22.051" endtime="20201029 18:15:22.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:22.059" level="INFO">${ACCURACY} = {'diff': [1.980500000000121e-05, 1.862500000000128e-05, 1.891700000000024e-05, 1.915300000000092e-05, 1.954100000000139e-05, 1.891700000000024e-05, 1.95830000000001e-05, 1.891700000000024e-05, 1.95549...</msg>
<status status="PASS" starttime="20201029 18:15:22.056" endtime="20201029 18:15:22.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.064" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:15:22.063" endtime="20201029 18:15:22.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.066" level="INFO">VALUE: [1.980500000000121e-05, 1.862500000000128e-05, 1.891700000000024e-05, 1.915300000000092e-05, 1.954100000000139e-05, 1.891700000000024e-05, 1.95830000000001e-05, 1.891700000000024e-05, 1.955499999999749e-05, 1.9235999999998865e-05, 1.9249999999998435e-05, 1.9194000000000155e-05, 1.9207999999999725e-05, 1.9235999999998865e-05, 1.9236000000002335e-05, 1.9528000000001294e-05, 1.9471999999999545e-05, 1.8916000000000766e-05, 1.862500000000128e-05, 1.9249999999998435e-05, 1.893100000000328e-05, 1.85829999999991e-05, 1.9471999999999545e-05, 1.9514000000001724e-05, 1.887500000000153e-05, 1.9249999999998435e-05, 1.9235999999998865e-05, 1.9541999999997395e-05, 1.9250000000001904e-05, 1.9221999999999295e-05, 1.9221999999999295e-05, 1.9514000000001724e-05, 1.9235999999998865e-05, 1.91950000000031e-05, 1.9221999999999295e-05, 1.9235999999998865e-05, 1.862499999999781e-05, 1.9556000000000434e-05, 1.9514000000001724e-05, 1.9207999999999725e-05, 1.955500000000096e-05, 1.955500000000096e-05, 1.8957999999999475e-05, 1.9207999999999725e-05, 1.8680000000000085e-05, 1.9207999999999725e-05, 1.9250000000001904e-05, 1.923699999999834e-05, 1.9513999999998255e-05, 1.92089999999992e-05]</msg>
<status status="PASS" starttime="20201029 18:15:22.065" endtime="20201029 18:15:22.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.060" endtime="20201029 18:15:22.068"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.071" endtime="20201029 18:15:22.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.070" endtime="20201029 18:15:22.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.069" endtime="20201029 18:15:22.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.713" endtime="20201029 18:15:22.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.712" endtime="20201029 18:15:22.092"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.101" endtime="20201029 18:15:22.119"></status>
</kw>
<msg timestamp="20201029 18:15:22.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.099" endtime="20201029 18:15:22.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.120" endtime="20201029 18:15:22.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.123" endtime="20201029 18:15:22.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.096" endtime="20201029 18:15:22.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.094" endtime="20201029 18:15:22.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.134" endtime="20201029 18:15:22.420"></status>
</kw>
<msg timestamp="20201029 18:15:22.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025113, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025133431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:22.130" endtime="20201029 18:15:22.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025113, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025133431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:22.424" endtime="20201029 18:15:22.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.433" endtime="20201029 18:15:22.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.128" endtime="20201029 18:15:22.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.126" endtime="20201029 18:15:22.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.439" level="INFO">${RESULT} = [{'diff': 2.043100000000131e-05}, {'diff': 1.981900000000078e-05}, {'diff': 2.015300000000192e-05}, {'diff': 2.044500000000088e-05}, {'diff': 2.00969999999967e-05}, {'diff': 2.038899999999913e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:22.436" endtime="20201029 18:15:22.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:22.443" level="INFO">${ACCURACY} = {'diff': [2.043100000000131e-05, 1.981900000000078e-05, 2.015300000000192e-05, 2.044500000000088e-05, 2.00969999999967e-05, 2.038899999999913e-05, 2.0097999999999644e-05, 2.015299999999845e-05, 2.0166...</msg>
<status status="PASS" starttime="20201029 18:15:22.440" endtime="20201029 18:15:22.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.448" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:15:22.447" endtime="20201029 18:15:22.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.450" level="INFO">VALUE: [2.043100000000131e-05, 1.981900000000078e-05, 2.015300000000192e-05, 2.044500000000088e-05, 2.00969999999967e-05, 2.038899999999913e-05, 2.0097999999999644e-05, 2.015299999999845e-05, 2.016699999999802e-05, 2.016699999999802e-05, 2.044499999999741e-05, 2.044499999999741e-05, 2.013900000000235e-05, 2.013899999999888e-05, 2.012499999999931e-05, 2.015300000000192e-05, 2.012500000000278e-05, 2.0443999999997936e-05, 2.0444000000001405e-05, 2.0097999999999644e-05, 2.013899999999888e-05, 2.045900000000045e-05, 2.04029999999987e-05, 2.0165999999998546e-05, 2.044500000000088e-05, 1.9833999999999824e-05, 2.045899999999698e-05, 1.983300000000035e-05, 1.9527999999997825e-05, 2.0472000000000545e-05, 2.016699999999802e-05, 2.013899999999888e-05, 2.0137999999999406e-05, 1.954100000000139e-05, 1.9514000000001724e-05, 2.015299999999845e-05, 2.0444000000001405e-05, 2.0458000000000975e-05, 2.044499999999741e-05, 2.015300000000192e-05, 2.043100000000131e-05, 2.043100000000131e-05, 2.013899999999888e-05, 2.0528000000002294e-05, 2.045900000000045e-05, 2.015299999999845e-05, 2.015299999999845e-05, 2.0444000000001405e-05, 2.044500000000088e-05, 2.03890000000026e-05]</msg>
<status status="PASS" starttime="20201029 18:15:22.449" endtime="20201029 18:15:22.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.444" endtime="20201029 18:15:22.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.456" endtime="20201029 18:15:22.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.455" endtime="20201029 18:15:22.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.453" endtime="20201029 18:15:22.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.093" endtime="20201029 18:15:22.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.092" endtime="20201029 18:15:22.477"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.485" endtime="20201029 18:15:22.500"></status>
</kw>
<msg timestamp="20201029 18:15:22.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.484" endtime="20201029 18:15:22.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.502" endtime="20201029 18:15:22.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.504" endtime="20201029 18:15:22.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.481" endtime="20201029 18:15:22.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.479" endtime="20201029 18:15:22.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.513" endtime="20201029 18:15:22.799"></status>
</kw>
<msg timestamp="20201029 18:15:22.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.512" endtime="20201029 18:15:22.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.805" endtime="20201029 18:15:22.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.816" endtime="20201029 18:15:22.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.509" endtime="20201029 18:15:22.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.508" endtime="20201029 18:15:22.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.825" level="INFO">${RESULT} = [{'diff': 2.15969999999982e-05}, {'diff': 2.0749999999999935e-05}, {'diff': 2.134700000000142e-05}, {'diff': 2.134700000000142e-05}, {'diff': 2.1348000000000894e-05}, {'diff': 2.134700000000142e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:22.820" endtime="20201029 18:15:22.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:22.831" level="INFO">${ACCURACY} = {'diff': [2.15969999999982e-05, 2.0749999999999935e-05, 2.134700000000142e-05, 2.134700000000142e-05, 2.1348000000000894e-05, 2.134700000000142e-05, 2.136100000000099e-05, 2.165299999999995e-05, 2.134...</msg>
<status status="PASS" starttime="20201029 18:15:22.827" endtime="20201029 18:15:22.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.836" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:15:22.835" endtime="20201029 18:15:22.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.838" level="INFO">VALUE: [2.15969999999982e-05, 2.0749999999999935e-05, 2.134700000000142e-05, 2.134700000000142e-05, 2.1348000000000894e-05, 2.134700000000142e-05, 2.136100000000099e-05, 2.165299999999995e-05, 2.134700000000142e-05, 2.0763999999999505e-05, 2.1042000000002364e-05, 2.105500000000246e-05, 2.137500000000056e-05, 2.1069999999998035e-05, 2.136100000000099e-05, 2.1362000000000464e-05, 2.1027999999999325e-05, 2.1055999999998465e-05, 2.1348000000000894e-05, 2.138900000000013e-05, 2.136100000000099e-05, 2.1348000000000894e-05, 2.143100000000231e-05, 2.1013999999999755e-05, 2.076300000000003e-05, 2.137500000000056e-05, 2.137500000000056e-05, 2.1388000000000656e-05, 2.15969999999982e-05, 2.137500000000056e-05, 2.137500000000056e-05, 2.136100000000099e-05, 2.136100000000099e-05, 2.136100000000099e-05, 2.1722000000001795e-05, 2.113899999999988e-05, 2.137500000000056e-05, 2.111100000000074e-05, 2.106899999999856e-05, 2.1055999999998465e-05, 2.138900000000013e-05, 2.106899999999856e-05, 2.136099999999752e-05, 2.137500000000056e-05, 2.104099999999942e-05, 2.1277999999999575e-05, 2.105499999999899e-05, 2.138900000000013e-05, 2.1666000000000046e-05, 2.136099999999752e-05]</msg>
<status status="PASS" starttime="20201029 18:15:22.837" endtime="20201029 18:15:22.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.832" endtime="20201029 18:15:22.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.843" endtime="20201029 18:15:22.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.842" endtime="20201029 18:15:22.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.840" endtime="20201029 18:15:22.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.478" endtime="20201029 18:15:22.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.477" endtime="20201029 18:15:22.864"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.872" endtime="20201029 18:15:22.887"></status>
</kw>
<msg timestamp="20201029 18:15:22.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.871" endtime="20201029 18:15:22.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.888" endtime="20201029 18:15:22.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.891" endtime="20201029 18:15:22.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.868" endtime="20201029 18:15:22.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.866" endtime="20201029 18:15:22.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.900" endtime="20201029 18:15:23.187"></status>
</kw>
<msg timestamp="20201029 18:15:23.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021741931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.898" endtime="20201029 18:15:23.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021741931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.191" endtime="20201029 18:15:23.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.200" endtime="20201029 18:15:23.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.896" endtime="20201029 18:15:23.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.894" endtime="20201029 18:15:23.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:23.206" level="INFO">${RESULT} = [{'diff': 2.223699999999787e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.2263999999997536e-05}, {'diff': 2.1999999999997716e-05}, {'diff': 2.237500000000156e-05}, {'diff': 2.1986000000001615e-05...</msg>
<status status="PASS" starttime="20201029 18:15:23.203" endtime="20201029 18:15:23.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:23.210" level="INFO">${ACCURACY} = {'diff': [2.223699999999787e-05, 2.2278000000000575e-05, 2.2263999999997536e-05, 2.1999999999997716e-05, 2.237500000000156e-05, 2.1986000000001615e-05, 2.2292000000000145e-05, 2.2305999999999715e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:23.207" endtime="20201029 18:15:23.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.215" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:15:23.214" endtime="20201029 18:15:23.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.217" level="INFO">VALUE: [2.223699999999787e-05, 2.2278000000000575e-05, 2.2263999999997536e-05, 2.1999999999997716e-05, 2.237500000000156e-05, 2.1986000000001615e-05, 2.2292000000000145e-05, 2.2305999999999715e-05, 2.2277999999997106e-05, 2.2652000000001477e-05, 2.2000000000001185e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.25969999999992e-05, 2.2583999999999105e-05, 2.2277999999997106e-05, 2.229100000000067e-05, 2.2263999999997536e-05, 2.259700000000267e-05, 2.1986000000001615e-05, 2.230500000000024e-05, 2.1679999999999616e-05, 2.261099999999877e-05, 2.229100000000067e-05, 2.1985999999998146e-05, 2.1986000000001615e-05, 2.2555999999999965e-05, 2.2292000000000145e-05, 2.2569999999999535e-05, 2.1999999999997716e-05, 2.22770000000011e-05, 2.1957999999999006e-05, 2.259700000000267e-05, 2.1985999999998146e-05, 2.2305999999999715e-05, 2.229100000000067e-05, 2.229100000000067e-05, 2.2278000000000575e-05, 2.163900000000038e-05, 2.2555999999999965e-05, 2.2249999999997966e-05, 2.1985999999998146e-05, 2.256900000000006e-05, 2.2292000000000145e-05, 2.198699999999762e-05, 2.258299999999963e-05, 2.2292000000000145e-05, 2.1957999999999006e-05, 2.1985999999998146e-05, 2.2263999999997536e-05]</msg>
<status status="PASS" starttime="20201029 18:15:23.216" endtime="20201029 18:15:23.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.211" endtime="20201029 18:15:23.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:23.222" endtime="20201029 18:15:23.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.221" endtime="20201029 18:15:23.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.219" endtime="20201029 18:15:23.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.865" endtime="20201029 18:15:23.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.864" endtime="20201029 18:15:23.243"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.252" endtime="20201029 18:15:23.267"></status>
</kw>
<msg timestamp="20201029 18:15:23.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.250" endtime="20201029 18:15:23.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.269" endtime="20201029 18:15:23.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.271" endtime="20201029 18:15:23.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.247" endtime="20201029 18:15:23.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.245" endtime="20201029 18:15:23.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.281" endtime="20201029 18:15:23.567"></status>
</kw>
<msg timestamp="20201029 18:15:23.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:23.279" endtime="20201029 18:15:23.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:23.571" endtime="20201029 18:15:23.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.579" endtime="20201029 18:15:23.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.276" endtime="20201029 18:15:23.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.274" endtime="20201029 18:15:23.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:23.586" level="INFO">${RESULT} = [{'diff': 2.318100000000059e-05}, {'diff': 2.319500000000016e-05}, {'diff': 2.312500000000231e-05}, {'diff': 2.3499999999999216e-05}, {'diff': 2.319500000000016e-05}, {'diff': 2.288899999999816e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:23.582" endtime="20201029 18:15:23.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:23.590" level="INFO">${ACCURACY} = {'diff': [2.318100000000059e-05, 2.319500000000016e-05, 2.312500000000231e-05, 2.3499999999999216e-05, 2.319500000000016e-05, 2.288899999999816e-05, 2.315300000000145e-05, 2.32090000000032e-05, 2.3513...</msg>
<status status="PASS" starttime="20201029 18:15:23.587" endtime="20201029 18:15:23.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.594" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:15:23.593" endtime="20201029 18:15:23.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.597" level="INFO">VALUE: [2.318100000000059e-05, 2.319500000000016e-05, 2.312500000000231e-05, 2.3499999999999216e-05, 2.319500000000016e-05, 2.288899999999816e-05, 2.315300000000145e-05, 2.32090000000032e-05, 2.3513999999998786e-05, 2.2598000000002144e-05, 2.3513999999998786e-05, 2.318100000000059e-05, 2.288900000000163e-05, 2.3235999999999396e-05, 2.3499999999999216e-05, 2.3485999999999646e-05, 2.315300000000145e-05, 2.3208000000000256e-05, 2.3513999999998786e-05, 2.293100000000034e-05, 2.3513999999998786e-05, 2.3194000000000686e-05, 2.3208000000000256e-05, 2.3499999999999216e-05, 2.3513999999998786e-05, 2.287500000000206e-05, 2.3513999999998786e-05, 2.318100000000059e-05, 2.319499999999669e-05, 2.313899999999841e-05, 2.3221999999999826e-05, 2.3513999999998786e-05, 2.3179999999997647e-05, 2.3221999999999826e-05, 2.3208000000000256e-05, 2.3513999999998786e-05, 2.3208000000000256e-05, 2.319500000000016e-05, 2.3194000000000686e-05, 2.290299999999773e-05, 2.320899999999973e-05, 2.3249999999998966e-05, 2.3513999999998786e-05, 2.319500000000016e-05, 2.3221999999999826e-05, 2.319500000000016e-05, 2.3512999999999312e-05, 2.322300000000277e-05, 2.3472000000000076e-05, 2.288900000000163e-05]</msg>
<status status="PASS" starttime="20201029 18:15:23.596" endtime="20201029 18:15:23.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.591" endtime="20201029 18:15:23.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:23.603" endtime="20201029 18:15:23.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.602" endtime="20201029 18:15:23.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.601" endtime="20201029 18:15:23.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.244" endtime="20201029 18:15:23.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.243" endtime="20201029 18:15:23.624"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.632" endtime="20201029 18:15:23.649"></status>
</kw>
<msg timestamp="20201029 18:15:23.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.631" endtime="20201029 18:15:23.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.651" endtime="20201029 18:15:23.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.653" endtime="20201029 18:15:23.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.628" endtime="20201029 18:15:23.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.626" endtime="20201029 18:15:23.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.662" endtime="20201029 18:15:23.947"></status>
</kw>
<msg timestamp="20201029 18:15:23.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022041222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.661" endtime="20201029 18:15:23.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022041222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.952" endtime="20201029 18:15:23.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.960" endtime="20201029 18:15:23.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.658" endtime="20201029 18:15:23.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.656" endtime="20201029 18:15:23.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:23.966" level="INFO">${RESULT} = [{'diff': 2.5014000000000286e-05}, {'diff': 2.380500000000174e-05}, {'diff': 2.413899999999941e-05}, {'diff': 2.3513999999998786e-05}, {'diff': 2.411100000000027e-05}, {'diff': 2.4735999999997427e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:23.963" endtime="20201029 18:15:23.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:23.971" level="INFO">${ACCURACY} = {'diff': [2.5014000000000286e-05, 2.380500000000174e-05, 2.413899999999941e-05, 2.3513999999998786e-05, 2.411100000000027e-05, 2.4735999999997427e-05, 2.412499999999984e-05, 2.4471999999997607e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:23.967" endtime="20201029 18:15:23.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.976" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:15:23.975" endtime="20201029 18:15:23.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.978" level="INFO">VALUE: [2.5014000000000286e-05, 2.380500000000174e-05, 2.413899999999941e-05, 2.3513999999998786e-05, 2.411100000000027e-05, 2.4735999999997427e-05, 2.412499999999984e-05, 2.4471999999997607e-05, 2.44169999999988e-05, 2.4429999999998897e-05, 2.4430000000002366e-05, 2.411100000000027e-05, 2.4722000000001326e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.440299999999923e-05, 2.40970000000007e-05, 2.440299999999923e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.4111999999999745e-05, 2.413899999999941e-05, 2.443100000000184e-05, 2.411100000000027e-05, 2.4416000000002797e-05, 2.443100000000184e-05, 2.412499999999984e-05, 2.40970000000007e-05, 2.40970000000007e-05, 2.4401999999999757e-05, 2.412499999999984e-05, 2.443099999999837e-05, 2.4083999999997135e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.440299999999923e-05, 2.4429999999998897e-05, 2.441700000000227e-05, 2.3513999999998786e-05, 2.444499999999794e-05, 2.4054999999998522e-05, 2.3500000000002685e-05, 2.3500000000002685e-05, 2.443099999999837e-05, 2.3513999999998786e-05, 2.380500000000174e-05]</msg>
<status status="PASS" starttime="20201029 18:15:23.977" endtime="20201029 18:15:23.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.972" endtime="20201029 18:15:23.980"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:23.983" endtime="20201029 18:15:24.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.982" endtime="20201029 18:15:24.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.981" endtime="20201029 18:15:24.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.625" endtime="20201029 18:15:24.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.624" endtime="20201029 18:15:24.004"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.013" endtime="20201029 18:15:24.027"></status>
</kw>
<msg timestamp="20201029 18:15:24.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.011" endtime="20201029 18:15:24.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.029" endtime="20201029 18:15:24.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.031" endtime="20201029 18:15:24.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.009" endtime="20201029 18:15:24.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.006" endtime="20201029 18:15:24.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.040" endtime="20201029 18:15:24.326"></status>
</kw>
<msg timestamp="20201029 18:15:24.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021756014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.039" endtime="20201029 18:15:24.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021756014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.331" endtime="20201029 18:15:24.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.339" endtime="20201029 18:15:24.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.036" endtime="20201029 18:15:24.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.035" endtime="20201029 18:15:24.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:24.345" level="INFO">${RESULT} = [{'diff': 2.5610999999998302e-05}, {'diff': 2.4707999999998287e-05}, {'diff': 2.563900000000091e-05}, {'diff': 2.5333999999998386e-05}, {'diff': 2.5041999999999426e-05}, {'diff': 2.562500000000134e-05...</msg>
<status status="PASS" starttime="20201029 18:15:24.342" endtime="20201029 18:15:24.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:24.350" level="INFO">${ACCURACY} = {'diff': [2.5610999999998302e-05, 2.4707999999998287e-05, 2.563900000000091e-05, 2.5333999999998386e-05, 2.5041999999999426e-05, 2.562500000000134e-05, 2.533300000000238e-05, 2.538900000000066e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:24.346" endtime="20201029 18:15:24.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.354" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:15:24.353" endtime="20201029 18:15:24.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.357" level="INFO">VALUE: [2.5610999999998302e-05, 2.4707999999998287e-05, 2.563900000000091e-05, 2.5333999999998386e-05, 2.5041999999999426e-05, 2.562500000000134e-05, 2.533300000000238e-05, 2.538900000000066e-05, 2.5304999999999772e-05, 2.5346999999998482e-05, 2.5042000000002895e-05, 2.4986000000001146e-05, 2.536100000000152e-05, 2.5027999999999856e-05, 2.5318999999999342e-05, 2.5332999999998912e-05, 2.5055999999998996e-05, 2.5612000000001245e-05, 2.5027999999999856e-05, 2.5346999999998482e-05, 2.5027000000000382e-05, 2.4735999999997427e-05, 2.5346999999998482e-05, 2.5652000000001007e-05, 2.495899999999801e-05, 2.534700000000195e-05, 2.536100000000152e-05, 2.5041999999999426e-05, 2.534700000000195e-05, 2.5333999999998386e-05, 2.4736000000000896e-05, 2.5040999999999952e-05, 2.5305999999999246e-05, 2.5319999999998816e-05, 2.5027999999999856e-05, 2.5360999999998052e-05, 2.4972000000001576e-05, 2.5651999999997538e-05, 2.5332999999998912e-05, 2.563899999999744e-05, 2.5040999999999952e-05, 2.5054999999999522e-05, 2.540300000000023e-05, 2.5346999999998482e-05, 2.5041999999999426e-05, 2.5333999999998386e-05, 2.5319999999998816e-05, 2.533300000000238e-05, 2.4735999999997427e-05, 2.4750000000000466e-05]</msg>
<status status="PASS" starttime="20201029 18:15:24.355" endtime="20201029 18:15:24.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.351" endtime="20201029 18:15:24.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:24.362" endtime="20201029 18:15:24.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.360" endtime="20201029 18:15:24.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.359" endtime="20201029 18:15:24.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.005" endtime="20201029 18:15:24.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.004" endtime="20201029 18:15:24.387"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.400" endtime="20201029 18:15:24.419"></status>
</kw>
<msg timestamp="20201029 18:15:24.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.398" endtime="20201029 18:15:24.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.422" endtime="20201029 18:15:24.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.425" endtime="20201029 18:15:24.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.395" endtime="20201029 18:15:24.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.393" endtime="20201029 18:15:24.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.435" endtime="20201029 18:15:24.724"></status>
</kw>
<msg timestamp="20201029 18:15:24.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034053417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034079625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.433" endtime="20201029 18:15:24.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034053417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034079625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.728" endtime="20201029 18:15:24.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.737" endtime="20201029 18:15:24.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.431" endtime="20201029 18:15:24.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.429" endtime="20201029 18:15:24.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:24.743" level="INFO">${RESULT} = [{'diff': 2.6207999999999787e-05}, {'diff': 2.5943999999999967e-05}, {'diff': 2.6555999999997026e-05}, {'diff': 2.6221999999999357e-05}, {'diff': 2.6596999999996263e-05}, {'diff': 2.6263999999998067e-...</msg>
<status status="PASS" starttime="20201029 18:15:24.740" endtime="20201029 18:15:24.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:24.747" level="INFO">${ACCURACY} = {'diff': [2.6207999999999787e-05, 2.5943999999999967e-05, 2.6555999999997026e-05, 2.6221999999999357e-05, 2.6596999999996263e-05, 2.6263999999998067e-05, 2.6250000000005436e-05, 2.594499999999944e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:24.744" endtime="20201029 18:15:24.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.752" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:15:24.751" endtime="20201029 18:15:24.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.754" level="INFO">VALUE: [2.6207999999999787e-05, 2.5943999999999967e-05, 2.6555999999997026e-05, 2.6221999999999357e-05, 2.6596999999996263e-05, 2.6263999999998067e-05, 2.6250000000005436e-05, 2.594499999999944e-05, 2.6276999999998163e-05, 2.6263999999998067e-05, 2.6263999999998067e-05, 2.6180000000000647e-05, 2.655500000000449e-05, 2.5971999999999107e-05, 2.6319999999996346e-05, 2.6249999999998497e-05, 2.6568999999997123e-05, 2.5930000000000397e-05, 2.6263999999998067e-05, 2.6249999999998497e-05, 2.6568999999997123e-05, 2.6556000000003965e-05, 2.6250000000005436e-05, 2.6250000000005436e-05, 2.6541999999997457e-05, 2.6235999999998927e-05, 2.6555999999997026e-05, 2.6554999999997553e-05, 2.6249999999998497e-05, 2.593099999999987e-05, 2.620899999999926e-05, 2.6555999999997026e-05, 2.5943999999999967e-05, 2.6290999999997733e-05, 2.6263999999998067e-05, 2.6249999999998497e-05, 2.656900000000406e-05, 2.6568999999997123e-05, 2.5930000000000397e-05, 2.6249999999998497e-05, 2.59170000000003e-05, 2.6263999999998067e-05, 2.6249999999998497e-05, 2.622299999999883e-05, 2.6570000000003535e-05, 2.593099999999987e-05, 2.565300000000048e-05, 2.6554999999997553e-05, 2.62369999999984e-05, 2.6570000000003535e-05]</msg>
<status status="PASS" starttime="20201029 18:15:24.753" endtime="20201029 18:15:24.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.748" endtime="20201029 18:15:24.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:24.760" endtime="20201029 18:15:24.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.759" endtime="20201029 18:15:24.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.757" endtime="20201029 18:15:24.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.390" endtime="20201029 18:15:24.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.388" endtime="20201029 18:15:24.781"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.790" endtime="20201029 18:15:24.805"></status>
</kw>
<msg timestamp="20201029 18:15:24.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.788" endtime="20201029 18:15:24.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.807" endtime="20201029 18:15:24.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.809" endtime="20201029 18:15:24.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.785" endtime="20201029 18:15:24.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.783" endtime="20201029 18:15:24.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.818" endtime="20201029 18:15:25.103"></status>
</kw>
<msg timestamp="20201029 18:15:25.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.817" endtime="20201029 18:15:25.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.107" endtime="20201029 18:15:25.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.115" endtime="20201029 18:15:25.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.814" endtime="20201029 18:15:25.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.812" endtime="20201029 18:15:25.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.122" level="INFO">${RESULT} = [{'diff': 2.8000000000000247e-05}, {'diff': 2.690300000000173e-05}, {'diff': 2.6777000000002132e-05}, {'diff': 2.7526999999999413e-05}, {'diff': 2.715299999999851e-05}, {'diff': 2.6874999999999122e-05...</msg>
<status status="PASS" starttime="20201029 18:15:25.119" endtime="20201029 18:15:25.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:25.127" level="INFO">${ACCURACY} = {'diff': [2.8000000000000247e-05, 2.690300000000173e-05, 2.6777000000002132e-05, 2.7526999999999413e-05, 2.715299999999851e-05, 2.6874999999999122e-05, 2.718100000000112e-05, 2.6569000000000592e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:25.123" endtime="20201029 18:15:25.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.131" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:15:25.130" endtime="20201029 18:15:25.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.134" level="INFO">VALUE: [2.8000000000000247e-05, 2.690300000000173e-05, 2.6777000000002132e-05, 2.7526999999999413e-05, 2.715299999999851e-05, 2.6874999999999122e-05, 2.718100000000112e-05, 2.6569000000000592e-05, 2.7222000000000357e-05, 2.7486000000000177e-05, 2.7472000000000607e-05, 2.688900000000216e-05, 2.7499999999999747e-05, 2.718099999999765e-05, 2.718100000000112e-05, 2.7472000000000607e-05, 2.7165999999998608e-05, 2.719500000000069e-05, 2.7485999999996708e-05, 2.7194000000001217e-05, 2.7180000000001647e-05, 2.7472000000000607e-05, 2.7486000000000177e-05, 2.7486000000000177e-05, 2.716700000000155e-05, 2.7166000000002077e-05, 2.748699999999965e-05, 2.716699999999808e-05, 2.7499999999999747e-05, 2.6847999999999456e-05, 2.744500000000094e-05, 2.7555999999998027e-05, 2.718100000000112e-05, 2.716700000000155e-05, 2.716699999999808e-05, 2.716700000000155e-05, 2.7486000000000177e-05, 2.7180000000001647e-05, 2.722299999999983e-05, 2.7499999999999747e-05, 2.7165999999998608e-05, 2.716700000000155e-05, 2.747300000000008e-05, 2.7250000000002966e-05, 2.718100000000112e-05, 2.7471999999997138e-05, 2.7165999999998608e-05, 2.715299999999851e-05, 2.7472000000000607e-05, 2.718100000000112e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.132" endtime="20201029 18:15:25.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.128" endtime="20201029 18:15:25.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.139" endtime="20201029 18:15:25.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.137" endtime="20201029 18:15:25.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.136" endtime="20201029 18:15:25.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.782" endtime="20201029 18:15:25.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.781" endtime="20201029 18:15:25.159"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.168" endtime="20201029 18:15:25.183"></status>
</kw>
<msg timestamp="20201029 18:15:25.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.167" endtime="20201029 18:15:25.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.185" endtime="20201029 18:15:25.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.187" endtime="20201029 18:15:25.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.164" endtime="20201029 18:15:25.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.162" endtime="20201029 18:15:25.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.196" endtime="20201029 18:15:25.483"></status>
</kw>
<msg timestamp="20201029 18:15:25.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022098444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.195" endtime="20201029 18:15:25.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022098444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.487" endtime="20201029 18:15:25.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.495" endtime="20201029 18:15:25.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.192" endtime="20201029 18:15:25.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.190" endtime="20201029 18:15:25.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.502" level="INFO">${RESULT} = [{'diff': 2.868100000000262e-05}, {'diff': 2.7694000000001717e-05}, {'diff': 2.8402000000000288e-05}, {'diff': 2.8389000000000192e-05}, {'diff': 2.8402999999999762e-05}, {'diff': 2.8389000000000192e-0...</msg>
<status status="PASS" starttime="20201029 18:15:25.499" endtime="20201029 18:15:25.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:25.506" level="INFO">${ACCURACY} = {'diff': [2.868100000000262e-05, 2.7694000000001717e-05, 2.8402000000000288e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.8389000000000192e-05, 2.8082999999998193e-05, 2.7790999999999233e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:25.503" endtime="20201029 18:15:25.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.511" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:15:25.510" endtime="20201029 18:15:25.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.513" level="INFO">VALUE: [2.868100000000262e-05, 2.7694000000001717e-05, 2.8402000000000288e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.8389000000000192e-05, 2.8082999999998193e-05, 2.7790999999999233e-05, 2.8082999999998193e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.8069000000002092e-05, 2.8389000000000192e-05, 2.8111000000000802e-05, 2.8389000000000192e-05, 2.8348000000000956e-05, 2.8097000000001232e-05, 2.84309999999989e-05, 2.8402999999999762e-05, 2.8097000000001232e-05, 2.8083000000001662e-05, 2.8084000000001136e-05, 2.8389000000000192e-05, 2.8389000000000192e-05, 2.8375000000000622e-05, 2.8069000000002092e-05, 2.841699999999933e-05, 2.8402000000000288e-05, 2.841699999999933e-05, 2.8374999999997152e-05, 2.8485999999997708e-05, 2.7819999999997846e-05, 2.8362000000000526e-05, 2.840300000000323e-05, 2.8319999999998346e-05, 2.8402999999999762e-05, 2.8097000000001232e-05, 2.8388999999996722e-05, 2.748699999999965e-05, 2.8083999999997666e-05, 2.8320000000001816e-05, 2.8125000000000372e-05, 2.8083000000001662e-05, 2.8389000000000192e-05, 2.8097000000001232e-05, 2.8402999999999762e-05, 2.8375000000000622e-05, 2.840199999999682e-05, 2.743100000000137e-05, 2.8360999999997583e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.512" endtime="20201029 18:15:25.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.507" endtime="20201029 18:15:25.515"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.518" endtime="20201029 18:15:25.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.517" endtime="20201029 18:15:25.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.516" endtime="20201029 18:15:25.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.160" endtime="20201029 18:15:25.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.160" endtime="20201029 18:15:25.539"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.548" endtime="20201029 18:15:25.566"></status>
</kw>
<msg timestamp="20201029 18:15:25.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.546" endtime="20201029 18:15:25.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.567" endtime="20201029 18:15:25.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.570" endtime="20201029 18:15:25.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.543" endtime="20201029 18:15:25.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.541" endtime="20201029 18:15:25.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.579" endtime="20201029 18:15:25.865"></status>
</kw>
<msg timestamp="20201029 18:15:25.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024862931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024892806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.577" endtime="20201029 18:15:25.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024862931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024892806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.870" endtime="20201029 18:15:25.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.878" endtime="20201029 18:15:25.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.575" endtime="20201029 18:15:25.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.573" endtime="20201029 18:15:25.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.884" level="INFO">${RESULT} = [{'diff': 2.9874999999998653e-05}, {'diff': 2.9014000000000817e-05}, {'diff': 2.9000000000001247e-05}, {'diff': 2.9319999999999347e-05}, {'diff': 2.9346999999999013e-05}, {'diff': 2.9013999999997347e-...</msg>
<status status="PASS" starttime="20201029 18:15:25.881" endtime="20201029 18:15:25.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:25.889" level="INFO">${ACCURACY} = {'diff': [2.9874999999998653e-05, 2.9014000000000817e-05, 2.9000000000001247e-05, 2.9319999999999347e-05, 2.9346999999999013e-05, 2.9013999999997347e-05, 2.9610999999998833e-05, 2.9319999999999347e-05...</msg>
<status status="PASS" starttime="20201029 18:15:25.885" endtime="20201029 18:15:25.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.893" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:15:25.892" endtime="20201029 18:15:25.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.895" level="INFO">VALUE: [2.9874999999998653e-05, 2.9014000000000817e-05, 2.9000000000001247e-05, 2.9319999999999347e-05, 2.9346999999999013e-05, 2.9013999999997347e-05, 2.9610999999998833e-05, 2.9319999999999347e-05, 2.9389000000001192e-05, 2.9013999999997347e-05, 2.9318999999999873e-05, 2.9000000000001247e-05, 2.9318999999999873e-05, 2.9610999999998833e-05, 2.9292000000000207e-05, 2.9318999999999873e-05, 2.9305000000000303e-05, 2.9304999999996834e-05, 2.9639000000001442e-05, 2.9305000000000303e-05, 2.9041999999999957e-05, 2.9055000000000053e-05, 2.9319999999999347e-05, 2.9319999999999347e-05, 2.9305999999999777e-05, 2.8985999999998208e-05, 2.9320000000002816e-05, 2.9624999999998403e-05, 2.9305999999999777e-05, 2.9624999999998403e-05, 2.9278000000000637e-05, 2.9625000000001872e-05, 2.9278000000000637e-05, 2.8929999999999928e-05, 2.9318999999999873e-05, 2.9569000000000123e-05, 2.9318999999999873e-05, 2.9291000000000733e-05, 2.9305999999999777e-05, 2.8999999999997778e-05, 2.9625000000001872e-05, 2.9318999999999873e-05, 2.9611000000002302e-05, 2.9305999999999777e-05, 2.9000000000001247e-05, 2.9596999999999263e-05, 2.8986000000001677e-05, 2.898700000000115e-05, 2.8999999999997778e-05, 2.9318999999999873e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.894" endtime="20201029 18:15:25.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.889" endtime="20201029 18:15:25.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.901" endtime="20201029 18:15:25.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.900" endtime="20201029 18:15:25.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.899" endtime="20201029 18:15:25.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.540" endtime="20201029 18:15:25.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.539" endtime="20201029 18:15:25.922"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.931" endtime="20201029 18:15:25.946"></status>
</kw>
<msg timestamp="20201029 18:15:25.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.929" endtime="20201029 18:15:25.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.947" endtime="20201029 18:15:25.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.950" endtime="20201029 18:15:25.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.926" endtime="20201029 18:15:25.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.924" endtime="20201029 18:15:25.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.959" endtime="20201029 18:15:26.244"></status>
</kw>
<msg timestamp="20201029 18:15:26.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.957" endtime="20201029 18:15:26.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.248" endtime="20201029 18:15:26.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.256" endtime="20201029 18:15:26.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.955" endtime="20201029 18:15:26.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.953" endtime="20201029 18:15:26.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:26.263" level="INFO">${RESULT} = [{'diff': 3.019500000000022e-05}, {'diff': 2.9903000000001262e-05}, {'diff': 2.9860999999999083e-05}, {'diff': 2.9596999999999263e-05}, {'diff': 2.9958000000000068e-05}, {'diff': 2.9611999999998306e-0...</msg>
<status status="PASS" starttime="20201029 18:15:26.259" endtime="20201029 18:15:26.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:26.268" level="INFO">${ACCURACY} = {'diff': [3.019500000000022e-05, 2.9903000000001262e-05, 2.9860999999999083e-05, 2.9596999999999263e-05, 2.9958000000000068e-05, 2.9611999999998306e-05, 3.054200000000146e-05, 3.0236000000002927e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:26.264" endtime="20201029 18:15:26.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.272" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:15:26.271" endtime="20201029 18:15:26.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.275" level="INFO">VALUE: [3.019500000000022e-05, 2.9903000000001262e-05, 2.9860999999999083e-05, 2.9596999999999263e-05, 2.9958000000000068e-05, 2.9611999999998306e-05, 3.054200000000146e-05, 3.0236000000002927e-05, 3.0221999999999888e-05, 3.0514000000002317e-05, 3.0513999999998848e-05, 3.0221999999999888e-05, 3.0180999999997182e-05, 3.058300000000069e-05, 3.056900000000112e-05, 3.020899999999979e-05, 3.0235999999999458e-05, 3.0194000000000748e-05, 3.0236000000002927e-05, 3.0235999999999458e-05, 3.0250000000002497e-05, 2.9888999999998223e-05, 3.054100000000198e-05, 3.0236000000002927e-05, 3.0514000000002317e-05, 3.0235999999999458e-05, 3.0235999999999458e-05, 3.0262999999999124e-05, 3.022299999999936e-05, 3.0208000000000318e-05, 3.0249999999999028e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.055600000000103e-05, 2.9846999999999513e-05, 3.0514000000002317e-05, 3.020899999999979e-05, 2.9860999999999083e-05, 3.020899999999979e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.0249999999999028e-05, 3.020899999999979e-05, 2.9610999999998833e-05, 3.052800000000189e-05, 3.0235999999999458e-05, 3.0221999999999888e-05, 3.023699999999893e-05, 3.054200000000146e-05, 3.0235999999999458e-05]</msg>
<status status="PASS" starttime="20201029 18:15:26.273" endtime="20201029 18:15:26.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.269" endtime="20201029 18:15:26.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:26.280" endtime="20201029 18:15:26.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.278" endtime="20201029 18:15:26.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.277" endtime="20201029 18:15:26.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.923" endtime="20201029 18:15:26.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.922" endtime="20201029 18:15:26.302"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.313" endtime="20201029 18:15:26.330"></status>
</kw>
<msg timestamp="20201029 18:15:26.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.310" endtime="20201029 18:15:26.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.332" endtime="20201029 18:15:26.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.334" endtime="20201029 18:15:26.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.307" endtime="20201029 18:15:26.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.305" endtime="20201029 18:15:26.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.343" endtime="20201029 18:15:26.631"></status>
</kw>
<msg timestamp="20201029 18:15:26.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026044097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026077972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.342" endtime="20201029 18:15:26.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026044097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026077972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.635" endtime="20201029 18:15:26.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.644" endtime="20201029 18:15:26.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.339" endtime="20201029 18:15:26.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.337" endtime="20201029 18:15:26.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:26.650" level="INFO">${RESULT} = [{'diff': 3.387500000000265e-05}, {'diff': 3.24579999999991e-05}, {'diff': 3.280599999999981e-05}, {'diff': 3.268099999999968e-05}, {'diff': 3.295800000000307e-05}, {'diff': 3.3082999999999724e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:26.647" endtime="20201029 18:15:26.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:26.655" level="INFO">${ACCURACY} = {'diff': [3.387500000000265e-05, 3.24579999999991e-05, 3.280599999999981e-05, 3.268099999999968e-05, 3.295800000000307e-05, 3.3082999999999724e-05, 3.297200000000264e-05, 3.320799999999985e-05, 3.3110...</msg>
<status status="PASS" starttime="20201029 18:15:26.651" endtime="20201029 18:15:26.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.659" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:15:26.658" endtime="20201029 18:15:26.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.662" level="INFO">VALUE: [3.387500000000265e-05, 3.24579999999991e-05, 3.280599999999981e-05, 3.268099999999968e-05, 3.295800000000307e-05, 3.3082999999999724e-05, 3.297200000000264e-05, 3.320799999999985e-05, 3.3110999999998864e-05, 3.2860999999998614e-05, 3.300000000000178e-05, 3.288900000000122e-05, 3.266700000000011e-05, 3.29449999999995e-05, 3.269499999999925e-05, 3.297300000000211e-05, 3.268099999999968e-05, 3.274999999999806e-05, 3.297299999999864e-05, 3.319400000000028e-05, 3.2777000000001194e-05, 3.315299999999757e-05, 3.284799999999852e-05, 3.3110999999998864e-05, 3.29579999999996e-05, 3.3110999999998864e-05, 3.274999999999806e-05, 3.290200000000132e-05, 3.3082999999999724e-05, 3.277800000000067e-05, 3.2860999999998614e-05, 3.3124999999998433e-05, 3.294400000000003e-05, 3.268000000000021e-05, 3.2804999999996864e-05, 3.298599999999874e-05, 3.3055000000000584e-05, 3.27640000000011e-05, 3.309799999999877e-05, 3.315299999999757e-05, 3.299999999999831e-05, 3.316700000000061e-05, 3.319400000000028e-05, 3.279200000000024e-05, 3.2874999999998183e-05, 3.293099999999993e-05, 3.2805000000000334e-05, 3.304200000000049e-05, 3.279200000000024e-05, 3.291700000000036e-05]</msg>
<status status="PASS" starttime="20201029 18:15:26.661" endtime="20201029 18:15:26.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.656" endtime="20201029 18:15:26.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:26.667" endtime="20201029 18:15:26.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.666" endtime="20201029 18:15:26.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.664" endtime="20201029 18:15:26.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.303" endtime="20201029 18:15:26.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.302" endtime="20201029 18:15:26.688"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.697" endtime="20201029 18:15:26.713"></status>
</kw>
<msg timestamp="20201029 18:15:26.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.695" endtime="20201029 18:15:26.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.715" endtime="20201029 18:15:26.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.717" endtime="20201029 18:15:26.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.693" endtime="20201029 18:15:26.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.690" endtime="20201029 18:15:26.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.727" endtime="20201029 18:15:27.030"></status>
</kw>
<msg timestamp="20201029 18:15:27.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023104931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023139861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.725" endtime="20201029 18:15:27.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023104931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023139861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.035" endtime="20201029 18:15:27.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.043" endtime="20201029 18:15:27.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.722" endtime="20201029 18:15:27.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.721" endtime="20201029 18:15:27.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.050" level="INFO">${RESULT} = [{'diff': 3.493000000000246e-05}, {'diff': 3.401399999999888e-05}, {'diff': 3.395799999999713e-05}, {'diff': 3.4069000000001154e-05}, {'diff': 3.4054999999998115e-05}, {'diff': 3.420800000000085e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:27.046" endtime="20201029 18:15:27.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:27.054" level="INFO">${ACCURACY} = {'diff': [3.493000000000246e-05, 3.401399999999888e-05, 3.395799999999713e-05, 3.4069000000001154e-05, 3.4054999999998115e-05, 3.420800000000085e-05, 3.395900000000007e-05, 3.404200000000149e-05, 3.41...</msg>
<status status="PASS" starttime="20201029 18:15:27.051" endtime="20201029 18:15:27.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.059" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:15:27.058" endtime="20201029 18:15:27.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.061" level="INFO">VALUE: [3.493000000000246e-05, 3.401399999999888e-05, 3.395799999999713e-05, 3.4069000000001154e-05, 3.4054999999998115e-05, 3.420800000000085e-05, 3.395900000000007e-05, 3.404200000000149e-05, 3.418099999999771e-05, 3.394399999999756e-05, 3.405600000000106e-05, 3.4068999999997684e-05, 3.393099999999746e-05, 3.397200000000017e-05, 3.4138999999999003e-05, 3.422200000000042e-05, 3.379199999999777e-05, 3.401399999999888e-05, 3.420900000000032e-05, 3.382000000000038e-05, 3.400000000000278e-05, 3.372199999999992e-05, 3.418000000000171e-05, 3.405600000000106e-05, 3.370899999999982e-05, 3.40840000000002e-05, 3.384799999999952e-05, 3.402800000000192e-05, 3.402800000000192e-05, 3.3777000000002194e-05, 3.4138999999999003e-05, 3.4083000000000724e-05, 3.390199999999885e-05, 3.393000000000146e-05, 3.391599999999842e-05, 3.391600000000189e-05, 3.3833000000000474e-05, 3.416699999999814e-05, 3.393100000000093e-05, 3.369400000000078e-05, 3.392999999999799e-05, 3.3819000000000904e-05, 3.391699999999789e-05, 3.397200000000017e-05, 3.3874999999999184e-05, 3.379200000000124e-05, 3.390299999999832e-05, 3.388900000000222e-05, 3.398599999999974e-05, 3.4110999999999864e-05]</msg>
<status status="PASS" starttime="20201029 18:15:27.060" endtime="20201029 18:15:27.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.055" endtime="20201029 18:15:27.068"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.072" endtime="20201029 18:15:27.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.070" endtime="20201029 18:15:27.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.069" endtime="20201029 18:15:27.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.689" endtime="20201029 18:15:27.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.688" endtime="20201029 18:15:27.093"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.102" endtime="20201029 18:15:27.118"></status>
</kw>
<msg timestamp="20201029 18:15:27.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.100" endtime="20201029 18:15:27.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.120" endtime="20201029 18:15:27.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.123" endtime="20201029 18:15:27.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.098" endtime="20201029 18:15:27.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.095" endtime="20201029 18:15:27.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.133" endtime="20201029 18:15:27.419"></status>
</kw>
<msg timestamp="20201029 18:15:27.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.131" endtime="20201029 18:15:27.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.423" endtime="20201029 18:15:27.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.432" endtime="20201029 18:15:27.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.128" endtime="20201029 18:15:27.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.126" endtime="20201029 18:15:27.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.438" level="INFO">${RESULT} = [{'diff': 3.530599999999884e-05}, {'diff': 3.483399999999748e-05}, {'diff': 3.484800000000052e-05}, {'diff': 3.5125000000000434e-05}, {'diff': 3.520899999999785e-05}, {'diff': 3.473599999999702e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:27.435" endtime="20201029 18:15:27.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:27.444" level="INFO">${ACCURACY} = {'diff': [3.530599999999884e-05, 3.483399999999748e-05, 3.484800000000052e-05, 3.5125000000000434e-05, 3.520899999999785e-05, 3.473599999999702e-05, 3.480600000000181e-05, 3.497300000000064e-05, 3.501...</msg>
<status status="PASS" starttime="20201029 18:15:27.439" endtime="20201029 18:15:27.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.448" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:15:27.447" endtime="20201029 18:15:27.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.451" level="INFO">VALUE: [3.530599999999884e-05, 3.483399999999748e-05, 3.484800000000052e-05, 3.5125000000000434e-05, 3.520899999999785e-05, 3.473599999999702e-05, 3.480600000000181e-05, 3.497300000000064e-05, 3.501399999999988e-05, 3.4875000000000184e-05, 3.491699999999889e-05, 3.468000000000221e-05, 3.473600000000049e-05, 3.4847000000001044e-05, 3.46519999999996e-05, 3.472199999999745e-05, 3.4875000000000184e-05, 3.4861000000000614e-05, 3.4902999999999323e-05, 3.497200000000117e-05, 3.4888999999999754e-05, 3.494400000000203e-05, 3.4902999999999323e-05, 3.470800000000135e-05, 3.495799999999813e-05, 3.5068999999998685e-05, 3.5097000000001294e-05, 3.4819000000001904e-05, 3.500000000000031e-05, 3.519399999999881e-05, 3.4832999999998004e-05, 3.522200000000142e-05, 3.5125000000000434e-05, 3.491699999999889e-05, 3.506999999999816e-05, 3.490300000000279e-05, 3.480600000000181e-05, 3.49450000000015e-05, 3.501399999999988e-05, 3.5152999999999573e-05, 3.523700000000046e-05, 3.5125000000000434e-05, 3.5139000000000004e-05, 3.497300000000064e-05, 3.466699999999864e-05, 3.488900000000322e-05, 3.495900000000107e-05, 3.519500000000175e-05, 3.526400000000013e-05, 3.497299999999717e-05]</msg>
<status status="PASS" starttime="20201029 18:15:27.449" endtime="20201029 18:15:27.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.444" endtime="20201029 18:15:27.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.456" endtime="20201029 18:15:27.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.454" endtime="20201029 18:15:27.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.453" endtime="20201029 18:15:27.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.094" endtime="20201029 18:15:27.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.093" endtime="20201029 18:15:27.477"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.486" endtime="20201029 18:15:27.502"></status>
</kw>
<msg timestamp="20201029 18:15:27.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.484" endtime="20201029 18:15:27.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.504" endtime="20201029 18:15:27.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.507" endtime="20201029 18:15:27.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.482" endtime="20201029 18:15:27.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.480" endtime="20201029 18:15:27.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.516" endtime="20201029 18:15:27.803"></status>
</kw>
<msg timestamp="20201029 18:15:27.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.514" endtime="20201029 18:15:27.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.807" endtime="20201029 18:15:27.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.815" endtime="20201029 18:15:27.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.512" endtime="20201029 18:15:27.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.510" endtime="20201029 18:15:27.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.822" level="INFO">${RESULT} = [{'diff': 3.6276999999997755e-05}, {'diff': 3.595799999999913e-05}, {'diff': 3.5874999999997714e-05}, {'diff': 3.6139000000001004e-05}, {'diff': 3.575000000000106e-05}, {'diff': 3.600000000000131e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:27.819" endtime="20201029 18:15:27.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:27.826" level="INFO">${ACCURACY} = {'diff': [3.6276999999997755e-05, 3.595799999999913e-05, 3.5874999999997714e-05, 3.6139000000001004e-05, 3.575000000000106e-05, 3.600000000000131e-05, 3.593099999999946e-05, 3.581999999999891e-05, 3.5...</msg>
<status status="PASS" starttime="20201029 18:15:27.823" endtime="20201029 18:15:27.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.831" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:15:27.830" endtime="20201029 18:15:27.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.834" level="INFO">VALUE: [3.6276999999997755e-05, 3.595799999999913e-05, 3.5874999999997714e-05, 3.6139000000001004e-05, 3.575000000000106e-05, 3.600000000000131e-05, 3.593099999999946e-05, 3.581999999999891e-05, 3.5791000000000295e-05, 3.573700000000096e-05, 3.6097000000002294e-05, 3.580600000000281e-05, 3.59450000000025e-05, 3.622199999999895e-05, 3.604200000000002e-05, 3.580599999999934e-05, 3.595799999999913e-05, 3.619499999999928e-05, 3.576400000000063e-05, 3.625000000000156e-05, 3.583400000000195e-05, 3.6153000000000574e-05, 3.604200000000002e-05, 3.5916999999999893e-05, 3.577799999999673e-05, 3.6152999999997104e-05, 3.60979999999983e-05, 3.569499999999878e-05, 3.598699999999774e-05, 3.6041000000000545e-05, 3.59589999999986e-05, 3.597200000000217e-05, 3.619399999999981e-05, 3.616600000000067e-05, 3.5763000000001155e-05, 3.565199999999713e-05, 3.6055000000000115e-05, 3.623599999999852e-05, 3.6138999999997534e-05, 3.5818999999999435e-05, 3.595799999999913e-05, 3.6139000000001004e-05, 3.5903000000000324e-05, 3.5903000000000324e-05, 3.6041000000000545e-05, 3.598600000000174e-05, 3.5639000000000504e-05, 3.576400000000063e-05, 3.602800000000045e-05, 3.5874999999997714e-05]</msg>
<status status="PASS" starttime="20201029 18:15:27.832" endtime="20201029 18:15:27.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.827" endtime="20201029 18:15:27.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.839" endtime="20201029 18:15:27.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.837" endtime="20201029 18:15:27.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.836" endtime="20201029 18:15:27.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.478" endtime="20201029 18:15:27.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.477" endtime="20201029 18:15:27.860"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.869" endtime="20201029 18:15:27.887"></status>
</kw>
<msg timestamp="20201029 18:15:27.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.867" endtime="20201029 18:15:27.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.889" endtime="20201029 18:15:27.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.892" endtime="20201029 18:15:27.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.864" endtime="20201029 18:15:27.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.862" endtime="20201029 18:15:27.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.901" endtime="20201029 18:15:28.188"></status>
</kw>
<msg timestamp="20201029 18:15:28.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023187528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023224514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.899" endtime="20201029 18:15:28.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023187528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023224514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.192" endtime="20201029 18:15:28.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.201" endtime="20201029 18:15:28.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.897" endtime="20201029 18:15:28.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.895" endtime="20201029 18:15:28.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.208" level="INFO">${RESULT} = [{'diff': 3.698600000000274e-05}, {'diff': 3.6874999999998714e-05}, {'diff': 3.6917000000000894e-05}, {'diff': 3.7096999999999825e-05}, {'diff': 3.7110999999999394e-05}, {'diff': 3.720800000000038e-05...</msg>
<status status="PASS" starttime="20201029 18:15:28.204" endtime="20201029 18:15:28.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:28.212" level="INFO">${ACCURACY} = {'diff': [3.698600000000274e-05, 3.6874999999998714e-05, 3.6917000000000894e-05, 3.7096999999999825e-05, 3.7110999999999394e-05, 3.720800000000038e-05, 3.6624999999998464e-05, 3.715199999999863e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:15:28.209" endtime="20201029 18:15:28.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.217" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:15:28.216" endtime="20201029 18:15:28.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.219" level="INFO">VALUE: [3.698600000000274e-05, 3.6874999999998714e-05, 3.6917000000000894e-05, 3.7096999999999825e-05, 3.7110999999999394e-05, 3.720800000000038e-05, 3.6624999999998464e-05, 3.715199999999863e-05, 3.6875000000002184e-05, 3.6888999999998284e-05, 3.698599999999927e-05, 3.720899999999985e-05, 3.7069000000000685e-05, 3.7125000000002434e-05, 3.722199999999995e-05, 3.698599999999927e-05, 3.6804999999997395e-05, 3.723599999999952e-05, 3.666600000000117e-05, 3.6818999999996965e-05, 3.6791000000001295e-05, 3.693000000000099e-05, 3.7083000000000255e-05, 3.7041000000001545e-05, 3.6860999999999144e-05, 3.6888999999998284e-05, 3.672199999999945e-05, 3.6874999999998714e-05, 3.6917000000000894e-05, 3.7195000000000283e-05, 3.674999999999859e-05, 3.720800000000038e-05, 3.704200000000102e-05, 3.722199999999995e-05, 3.708399999999973e-05, 3.7139000000002004e-05, 3.676399999999816e-05, 3.705600000000059e-05, 3.697300000000264e-05, 3.679200000000077e-05, 3.7167000000001144e-05, 3.677799999999773e-05, 3.701400000000188e-05, 3.720899999999985e-05, 3.69589999999996e-05, 3.72780000000017e-05, 3.720899999999985e-05, 3.7110999999999394e-05, 3.6805000000000865e-05, 3.6790999999997825e-05]</msg>
<status status="PASS" starttime="20201029 18:15:28.218" endtime="20201029 18:15:28.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.213" endtime="20201029 18:15:28.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.225" endtime="20201029 18:15:28.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.224" endtime="20201029 18:15:28.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.223" endtime="20201029 18:15:28.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.861" endtime="20201029 18:15:28.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.860" endtime="20201029 18:15:28.246"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.255" endtime="20201029 18:15:28.272"></status>
</kw>
<msg timestamp="20201029 18:15:28.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.254" endtime="20201029 18:15:28.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.273" endtime="20201029 18:15:28.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.276" endtime="20201029 18:15:28.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.251" endtime="20201029 18:15:28.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.249" endtime="20201029 18:15:28.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.285" endtime="20201029 18:15:28.571"></status>
</kw>
<msg timestamp="20201029 18:15:28.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.284" endtime="20201029 18:15:28.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.576" endtime="20201029 18:15:28.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.584" endtime="20201029 18:15:28.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.281" endtime="20201029 18:15:28.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.279" endtime="20201029 18:15:28.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.591" level="INFO">${RESULT} = [{'diff': 3.8195000000001283e-05}, {'diff': 3.8083000000001255e-05}, {'diff': 3.774999999999959e-05}, {'diff': 3.8097000000000825e-05}, {'diff': 3.770799999999741e-05}, {'diff': 3.776400000000263e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:28.588" endtime="20201029 18:15:28.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:28.596" level="INFO">${ACCURACY} = {'diff': [3.8195000000001283e-05, 3.8083000000001255e-05, 3.774999999999959e-05, 3.8097000000000825e-05, 3.770799999999741e-05, 3.776400000000263e-05, 3.798600000000027e-05, 3.791599999999895e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 18:15:28.592" endtime="20201029 18:15:28.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.601" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:15:28.600" endtime="20201029 18:15:28.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.603" level="INFO">VALUE: [3.8195000000001283e-05, 3.8083000000001255e-05, 3.774999999999959e-05, 3.8097000000000825e-05, 3.770799999999741e-05, 3.776400000000263e-05, 3.798600000000027e-05, 3.791599999999895e-05, 3.818000000000224e-05, 3.8068999999998215e-05, 3.804200000000202e-05, 3.7790999999998826e-05, 3.7861000000000145e-05, 3.7874999999999714e-05, 3.8083000000001255e-05, 3.8124999999999964e-05, 3.805600000000159e-05, 3.804200000000202e-05, 3.8166999999998674e-05, 3.798600000000027e-05, 3.8209000000000853e-05, 3.801399999999941e-05, 3.7667000000001644e-05, 3.773699999999949e-05, 3.8180999999998244e-05, 3.802800000000245e-05, 3.827799999999923e-05, 3.801400000000288e-05, 3.8138999999999534e-05, 3.7680999999997744e-05, 3.7861000000000145e-05, 3.817999999999877e-05, 3.7790999999998826e-05, 3.802799999999898e-05, 3.7945000000001033e-05, 3.770800000000088e-05, 3.7790999999998826e-05, 3.8041000000002545e-05, 3.76659999999987e-05, 3.819400000000181e-05, 3.768000000000174e-05, 3.791599999999895e-05, 3.7804999999998395e-05, 3.818000000000224e-05, 3.773600000000002e-05, 3.7888999999999284e-05, 3.791600000000242e-05, 3.819399999999834e-05, 3.800000000000331e-05, 3.7847000000000575e-05]</msg>
<status status="PASS" starttime="20201029 18:15:28.602" endtime="20201029 18:15:28.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.597" endtime="20201029 18:15:28.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.609" endtime="20201029 18:15:28.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.607" endtime="20201029 18:15:28.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.606" endtime="20201029 18:15:28.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.247" endtime="20201029 18:15:28.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.246" endtime="20201029 18:15:28.631"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.643" endtime="20201029 18:15:28.659"></status>
</kw>
<msg timestamp="20201029 18:15:28.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.641" endtime="20201029 18:15:28.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.661" endtime="20201029 18:15:28.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.663" endtime="20201029 18:15:28.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.638" endtime="20201029 18:15:28.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.635" endtime="20201029 18:15:28.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.673" endtime="20201029 18:15:28.960"></status>
</kw>
<msg timestamp="20201029 18:15:28.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026551014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026590903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.671" endtime="20201029 18:15:28.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026551014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026590903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.964" endtime="20201029 18:15:28.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.973" endtime="20201029 18:15:28.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.669" endtime="20201029 18:15:28.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.667" endtime="20201029 18:15:28.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.980" level="INFO">${RESULT} = [{'diff': 3.9888999999997815e-05}, {'diff': 3.9110999999997925e-05}, {'diff': 3.873599999999755e-05}, {'diff': 3.917999999999977e-05}, {'diff': 3.873599999999755e-05}, {'diff': 3.915199999999716e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:28.976" endtime="20201029 18:15:28.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:28.984" level="INFO">${ACCURACY} = {'diff': [3.9888999999997815e-05, 3.9110999999997925e-05, 3.873599999999755e-05, 3.917999999999977e-05, 3.873599999999755e-05, 3.915199999999716e-05, 3.9069000000002685e-05, 3.922200000000195e-05, 3.9...</msg>
<status status="PASS" starttime="20201029 18:15:28.981" endtime="20201029 18:15:28.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.989" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:15:28.988" endtime="20201029 18:15:28.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.991" level="INFO">VALUE: [3.9888999999997815e-05, 3.9110999999997925e-05, 3.873599999999755e-05, 3.917999999999977e-05, 3.873599999999755e-05, 3.915199999999716e-05, 3.9069000000002685e-05, 3.922200000000195e-05, 3.9139000000000534e-05, 3.919400000000281e-05, 3.920799999999891e-05, 3.923600000000152e-05, 3.8847000000001575e-05, 3.90980000000013e-05, 3.9153000000000104e-05, 3.894399999999909e-05, 3.8804999999999396e-05, 3.872199999999798e-05, 3.8944999999998564e-05, 3.899999999999737e-05, 3.925000000000109e-05, 3.9082999999998785e-05, 3.869399999999884e-05, 3.8902999999999854e-05, 3.9153000000000104e-05, 3.9083000000002255e-05, 3.908400000000173e-05, 3.905599999999912e-05, 3.925000000000109e-05, 3.8861000000001145e-05, 3.923600000000152e-05, 3.8889000000000284e-05, 3.8916999999999424e-05, 3.908399999999826e-05, 3.8832999999998535e-05, 3.9305000000003365e-05, 3.892999999999952e-05, 3.8846999999998105e-05, 3.9166999999999674e-05, 3.8666999999999174e-05, 3.8874999999997245e-05, 3.895800000000213e-05, 3.9012999999997466e-05, 3.920799999999891e-05, 3.9139000000000534e-05, 3.8652999999999604e-05, 3.876400000000016e-05, 3.8804999999999396e-05, 3.9096999999998355e-05, 3.86659999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:15:28.990" endtime="20201029 18:15:28.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.985" endtime="20201029 18:15:28.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.996" endtime="20201029 18:15:29.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.995" endtime="20201029 18:15:29.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.994" endtime="20201029 18:15:29.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.632" endtime="20201029 18:15:29.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.631" endtime="20201029 18:15:29.017"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.026" endtime="20201029 18:15:29.046"></status>
</kw>
<msg timestamp="20201029 18:15:29.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.025" endtime="20201029 18:15:29.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.048" endtime="20201029 18:15:29.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.051" endtime="20201029 18:15:29.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.022" endtime="20201029 18:15:29.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.020" endtime="20201029 18:15:29.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.060" endtime="20201029 18:15:29.346"></status>
</kw>
<msg timestamp="20201029 18:15:29.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025390958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025431389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.059" endtime="20201029 18:15:29.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025390958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025431389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.350" endtime="20201029 18:15:29.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.359" endtime="20201029 18:15:29.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.056" endtime="20201029 18:15:29.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.054" endtime="20201029 18:15:29.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:29.366" level="INFO">${RESULT} = [{'diff': 4.0430999999997025e-05}, {'diff': 4.0222999999998954e-05}, {'diff': 3.9889000000001285e-05}, {'diff': 3.99859999999988e-05}, {'diff': 3.961200000000137e-05}, {'diff': 3.984799999999858e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:29.362" endtime="20201029 18:15:29.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:29.370" level="INFO">${ACCURACY} = {'diff': [4.0430999999997025e-05, 4.0222999999998954e-05, 3.9889000000001285e-05, 3.99859999999988e-05, 3.961200000000137e-05, 3.984799999999858e-05, 3.96660000000007e-05, 3.9846999999999105e-05, 4.00...</msg>
<status status="PASS" starttime="20201029 18:15:29.367" endtime="20201029 18:15:29.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.375" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:15:29.373" endtime="20201029 18:15:29.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.377" level="INFO">VALUE: [4.0430999999997025e-05, 4.0222999999998954e-05, 3.9889000000001285e-05, 3.99859999999988e-05, 3.961200000000137e-05, 3.984799999999858e-05, 3.96660000000007e-05, 3.9846999999999105e-05, 4.0096999999999355e-05, 3.9624999999997995e-05, 3.9874999999998245e-05, 3.972199999999898e-05, 3.965200000000113e-05, 4.0318999999996996e-05, 3.96660000000007e-05, 3.9874999999998245e-05, 3.995799999999966e-05, 3.99859999999988e-05, 3.9818999999999966e-05, 4.0069000000000216e-05, 3.9625000000001465e-05, 3.9917000000000424e-05, 3.9680999999999744e-05, 3.972199999999898e-05, 3.9653000000000604e-05, 4.0111000000002395e-05, 3.9832999999999535e-05, 4.005600000000012e-05, 4.020799999999991e-05, 3.975000000000159e-05, 3.9874999999998245e-05, 4.004199999999708e-05, 3.997199999999923e-05, 3.9694999999999314e-05, 4.0055000000000646e-05, 3.999999999999837e-05, 3.9930999999999994e-05, 4.004200000000055e-05, 3.9917000000000424e-05, 3.9917000000000424e-05, 3.97920000000003e-05, 4.0124999999998495e-05, 3.983400000000248e-05, 3.975000000000159e-05, 3.9762999999998216e-05, 4.0166999999997205e-05, 3.9818999999999966e-05, 3.972199999999898e-05, 3.9874999999998245e-05, 4.022199999999948e-05]</msg>
<status status="PASS" starttime="20201029 18:15:29.376" endtime="20201029 18:15:29.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.371" endtime="20201029 18:15:29.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.383" endtime="20201029 18:15:29.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.382" endtime="20201029 18:15:29.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.380" endtime="20201029 18:15:29.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.018" endtime="20201029 18:15:29.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.018" endtime="20201029 18:15:29.404"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.413" endtime="20201029 18:15:29.428"></status>
</kw>
<msg timestamp="20201029 18:15:29.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.411" endtime="20201029 18:15:29.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.430" endtime="20201029 18:15:29.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.432" endtime="20201029 18:15:29.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.409" endtime="20201029 18:15:29.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.406" endtime="20201029 18:15:29.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.442" endtime="20201029 18:15:29.728"></status>
</kw>
<msg timestamp="20201029 18:15:29.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022203792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.440" endtime="20201029 18:15:29.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022203792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.732" endtime="20201029 18:15:29.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.741" endtime="20201029 18:15:29.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.438" endtime="20201029 18:15:29.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.436" endtime="20201029 18:15:29.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:29.748" level="INFO">${RESULT} = [{'diff': 4.1638999999999565e-05}, {'diff': 4.13059999999979e-05}, {'diff': 4.090199999999891e-05}, {'diff': 4.1138999999999065e-05}, {'diff': 4.123600000000005e-05}, {'diff': 4.1012999999999467e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:29.744" endtime="20201029 18:15:29.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:29.753" level="INFO">${ACCURACY} = {'diff': [4.1638999999999565e-05, 4.13059999999979e-05, 4.090199999999891e-05, 4.1138999999999065e-05, 4.123600000000005e-05, 4.1012999999999467e-05, 4.1083000000000786e-05, 4.095800000000066e-05, 4.1...</msg>
<status status="PASS" starttime="20201029 18:15:29.749" endtime="20201029 18:15:29.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.758" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:15:29.756" endtime="20201029 18:15:29.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.760" level="INFO">VALUE: [4.1638999999999565e-05, 4.13059999999979e-05, 4.090199999999891e-05, 4.1138999999999065e-05, 4.123600000000005e-05, 4.1012999999999467e-05, 4.1083000000000786e-05, 4.095800000000066e-05, 4.118000000000177e-05, 4.123600000000005e-05, 4.0833000000000536e-05, 4.1152999999998635e-05, 4.095800000000066e-05, 4.091599999999848e-05, 4.0903000000001855e-05, 4.080600000000087e-05, 4.094399999999762e-05, 4.1110999999999925e-05, 4.099999999999937e-05, 4.095800000000066e-05, 4.0833000000000536e-05, 4.0819000000000966e-05, 4.120799999999744e-05, 4.1166999999998205e-05, 4.074999999999912e-05, 4.1167000000001674e-05, 4.1195000000000814e-05, 4.0681000000000744e-05, 4.097200000000023e-05, 4.1097000000000355e-05, 4.123600000000005e-05, 4.0860999999999675e-05, 4.123600000000005e-05, 4.105600000000112e-05, 4.122199999999701e-05, 4.1153000000002105e-05, 4.0708999999999884e-05, 4.1195000000000814e-05, 4.07920000000013e-05, 4.107000000000069e-05, 4.0695000000000314e-05, 4.0694999999996845e-05, 4.120799999999744e-05, 4.065199999999866e-05, 4.0791000000001826e-05, 4.116599999999873e-05, 4.0833000000000536e-05, 4.09859999999998e-05, 4.0889000000002285e-05, 4.074999999999912e-05]</msg>
<status status="PASS" starttime="20201029 18:15:29.759" endtime="20201029 18:15:29.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.754" endtime="20201029 18:15:29.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.765" endtime="20201029 18:15:29.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.764" endtime="20201029 18:15:29.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.762" endtime="20201029 18:15:29.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.405" endtime="20201029 18:15:29.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.404" endtime="20201029 18:15:29.786"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.795" endtime="20201029 18:15:29.811"></status>
</kw>
<msg timestamp="20201029 18:15:29.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.794" endtime="20201029 18:15:29.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.813" endtime="20201029 18:15:29.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.816" endtime="20201029 18:15:29.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.791" endtime="20201029 18:15:29.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.789" endtime="20201029 18:15:29.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.825" endtime="20201029 18:15:30.112"></status>
</kw>
<msg timestamp="20201029 18:15:30.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223435, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:29.823" endtime="20201029 18:15:30.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223435, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:30.117" endtime="20201029 18:15:30.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.125" endtime="20201029 18:15:30.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.821" endtime="20201029 18:15:30.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.819" endtime="20201029 18:15:30.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.132" level="INFO">${RESULT} = [{'diff': 4.2166999999999205e-05}, {'diff': 4.22920000000028e-05}, {'diff': 4.2111000000000925e-05}, {'diff': 4.177799999999926e-05}, {'diff': 4.2125000000000495e-05}, {'diff': 4.2222999999997485e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:30.129" endtime="20201029 18:15:30.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:30.136" level="INFO">${ACCURACY} = {'diff': [4.2166999999999205e-05, 4.22920000000028e-05, 4.2111000000000925e-05, 4.177799999999926e-05, 4.2125000000000495e-05, 4.2222999999997485e-05, 4.17920000000023e-05, 4.1805000000002396e-05, 4.2...</msg>
<status status="PASS" starttime="20201029 18:15:30.133" endtime="20201029 18:15:30.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.141" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:15:30.140" endtime="20201029 18:15:30.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.144" level="INFO">VALUE: [4.2166999999999205e-05, 4.22920000000028e-05, 4.2111000000000925e-05, 4.177799999999926e-05, 4.2125000000000495e-05, 4.2222999999997485e-05, 4.17920000000023e-05, 4.1805000000002396e-05, 4.2027000000000037e-05, 4.1875000000000245e-05, 4.192999999999905e-05, 4.2124999999997026e-05, 4.197199999999776e-05, 4.2097000000001356e-05, 4.2097000000001356e-05, 4.222199999999801e-05, 4.190199999999991e-05, 4.220800000000191e-05, 4.219399999999887e-05, 4.1804999999998926e-05, 4.1847000000001106e-05, 4.1804999999998926e-05, 4.193000000000252e-05, 4.1666999999998705e-05, 4.2152999999999635e-05, 4.1861000000000675e-05, 4.175000000000012e-05, 4.1681000000001744e-05, 4.2223000000000954e-05, 4.2082999999998316e-05, 4.197199999999776e-05, 4.1846999999997636e-05, 4.1681000000001744e-05, 4.173600000000055e-05, 4.1666999999998705e-05, 4.176399999999969e-05, 4.183399999999754e-05, 4.172199999999751e-05, 4.1875000000000245e-05, 4.204199999999908e-05, 4.209800000000083e-05, 4.1875000000000245e-05, 4.193000000000252e-05, 4.208400000000126e-05, 4.1987000000000274e-05, 4.2166999999999205e-05, 4.166599999999923e-05, 4.2124999999997026e-05, 4.200000000000037e-05, 4.2139000000000065e-05]</msg>
<status status="PASS" starttime="20201029 18:15:30.142" endtime="20201029 18:15:30.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.137" endtime="20201029 18:15:30.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.149" endtime="20201029 18:15:30.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.147" endtime="20201029 18:15:30.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.146" endtime="20201029 18:15:30.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.787" endtime="20201029 18:15:30.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.786" endtime="20201029 18:15:30.170"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.180" endtime="20201029 18:15:30.196"></status>
</kw>
<msg timestamp="20201029 18:15:30.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.178" endtime="20201029 18:15:30.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.198" endtime="20201029 18:15:30.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.201" endtime="20201029 18:15:30.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.175" endtime="20201029 18:15:30.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.172" endtime="20201029 18:15:30.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.210" endtime="20201029 18:15:30.496"></status>
</kw>
<msg timestamp="20201029 18:15:30.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024240486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02428425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:30.208" endtime="20201029 18:15:30.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024240486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02428425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:30.500" endtime="20201029 18:15:30.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.509" endtime="20201029 18:15:30.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.206" endtime="20201029 18:15:30.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.204" endtime="20201029 18:15:30.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.515" level="INFO">${RESULT} = [{'diff': 4.376400000000169e-05}, {'diff': 4.326400000000119e-05}, {'diff': 4.2737000000001024e-05}, {'diff': 4.2916999999999955e-05}, {'diff': 4.323600000000205e-05}, {'diff': 4.3083000000002786e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:30.512" endtime="20201029 18:15:30.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:30.520" level="INFO">${ACCURACY} = {'diff': [4.376400000000169e-05, 4.326400000000119e-05, 4.2737000000001024e-05, 4.2916999999999955e-05, 4.323600000000205e-05, 4.3083000000002786e-05, 4.2916999999999955e-05, 4.301399999999747e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:15:30.516" endtime="20201029 18:15:30.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.524" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:15:30.523" endtime="20201029 18:15:30.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.527" level="INFO">VALUE: [4.376400000000169e-05, 4.326400000000119e-05, 4.2737000000001024e-05, 4.2916999999999955e-05, 4.323600000000205e-05, 4.3083000000002786e-05, 4.2916999999999955e-05, 4.301399999999747e-05, 4.308399999999879e-05, 4.311199999999793e-05, 4.29860000000018e-05, 4.3055000000000176e-05, 4.3082999999999316e-05, 4.2833000000002536e-05, 4.2889000000000815e-05, 4.305499999999671e-05, 4.270799999999894e-05, 4.2903000000000385e-05, 4.2874999999997776e-05, 4.3096999999998886e-05, 4.2832999999999066e-05, 4.319399999999987e-05, 4.273600000000155e-05, 4.302800000000051e-05, 4.26799999999998e-05, 4.280600000000287e-05, 4.270799999999894e-05, 4.269399999999937e-05, 4.2874999999997776e-05, 4.301400000000094e-05, 4.2846999999998636e-05, 4.301400000000094e-05, 4.320799999999944e-05, 4.305599999999965e-05, 4.2973000000001704e-05, 4.2709000000001884e-05, 4.327800000000076e-05, 4.276399999999722e-05, 4.2930999999999525e-05, 4.302800000000051e-05, 4.2903000000000385e-05, 4.3096999999998886e-05, 4.2916999999999955e-05, 4.3055000000000176e-05, 4.272200000000198e-05, 4.293000000000005e-05, 4.2846999999998636e-05, 4.290199999999744e-05, 4.2804999999999926e-05, 4.274999999999765e-05]</msg>
<status status="PASS" starttime="20201029 18:15:30.526" endtime="20201029 18:15:30.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.521" endtime="20201029 18:15:30.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.533" endtime="20201029 18:15:30.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.531" endtime="20201029 18:15:30.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.530" endtime="20201029 18:15:30.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.171" endtime="20201029 18:15:30.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.170" endtime="20201029 18:15:30.554"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.563" endtime="20201029 18:15:30.579"></status>
</kw>
<msg timestamp="20201029 18:15:30.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.561" endtime="20201029 18:15:30.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.581" endtime="20201029 18:15:30.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.583" endtime="20201029 18:15:30.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.559" endtime="20201029 18:15:30.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.556" endtime="20201029 18:15:30.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.593" endtime="20201029 18:15:30.879"></status>
</kw>
<msg timestamp="20201029 18:15:30.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.591" endtime="20201029 18:15:30.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.884" endtime="20201029 18:15:30.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.892" endtime="20201029 18:15:30.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.589" endtime="20201029 18:15:30.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.587" endtime="20201029 18:15:30.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.899" level="INFO">${RESULT} = [{'diff': 4.4625000000002996e-05}, {'diff': 4.404100000000161e-05}, {'diff': 4.419400000000087e-05}, {'diff': 4.379199999999736e-05}, {'diff': 4.423599999999958e-05}, {'diff': 4.402800000000151e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:30.895" endtime="20201029 18:15:30.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:30.904" level="INFO">${ACCURACY} = {'diff': [4.4625000000002996e-05, 4.404100000000161e-05, 4.419400000000087e-05, 4.379199999999736e-05, 4.423599999999958e-05, 4.402800000000151e-05, 4.3652999999997666e-05, 4.395800000000019e-05, 4.42...</msg>
<status status="PASS" starttime="20201029 18:15:30.900" endtime="20201029 18:15:30.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.909" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:15:30.908" endtime="20201029 18:15:30.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.911" level="INFO">VALUE: [4.4625000000002996e-05, 4.404100000000161e-05, 4.419400000000087e-05, 4.379199999999736e-05, 4.423599999999958e-05, 4.402800000000151e-05, 4.3652999999997666e-05, 4.395800000000019e-05, 4.422200000000001e-05, 4.376399999999822e-05, 4.3931000000000525e-05, 4.3652999999997666e-05, 4.3708999999999415e-05, 4.3889000000001815e-05, 4.408399999999979e-05, 4.3694999999999845e-05, 4.4194999999996876e-05, 4.379200000000083e-05, 4.376400000000169e-05, 4.4110999999999456e-05, 4.381999999999997e-05, 4.3888999999998346e-05, 4.4195000000000345e-05, 4.376300000000222e-05, 4.3694999999999845e-05, 4.3819000000000496e-05, 4.397199999999976e-05, 4.4012999999999e-05, 4.366600000000123e-05, 4.404099999999814e-05, 4.4096999999999886e-05, 4.401399999999847e-05, 4.379100000000136e-05, 4.3639000000001565e-05, 4.420799999999697e-05, 4.383399999999954e-05, 4.404200000000108e-05, 4.400000000000237e-05, 4.3931000000000525e-05, 4.3681000000000275e-05, 4.370799999999994e-05, 4.4083000000000316e-05, 4.4180999999997306e-05, 4.419400000000087e-05, 4.3903000000001385e-05, 4.3846999999999636e-05, 4.407000000000022e-05, 4.400000000000237e-05, 4.3958999999999665e-05, 4.4110999999999456e-05]</msg>
<status status="PASS" starttime="20201029 18:15:30.910" endtime="20201029 18:15:30.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.905" endtime="20201029 18:15:30.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.916" endtime="20201029 18:15:30.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.915" endtime="20201029 18:15:30.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.914" endtime="20201029 18:15:30.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.555" endtime="20201029 18:15:30.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.554" endtime="20201029 18:15:30.937"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.946" endtime="20201029 18:15:30.963"></status>
</kw>
<msg timestamp="20201029 18:15:30.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.945" endtime="20201029 18:15:30.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.964" endtime="20201029 18:15:30.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.967" endtime="20201029 18:15:30.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.942" endtime="20201029 18:15:30.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.940" endtime="20201029 18:15:30.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.976" endtime="20201029 18:15:31.264"></status>
</kw>
<msg timestamp="20201029 18:15:31.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.975" endtime="20201029 18:15:31.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.268" endtime="20201029 18:15:31.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.277" endtime="20201029 18:15:31.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.972" endtime="20201029 18:15:31.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.970" endtime="20201029 18:15:31.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.283" level="INFO">${RESULT} = [{'diff': 4.579199999999936e-05}, {'diff': 4.502800000000251e-05}, {'diff': 4.474999999999965e-05}, {'diff': 4.480499999999846e-05}, {'diff': 4.5138999999999596e-05}, {'diff': 4.49999999999999e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:31.280" endtime="20201029 18:15:31.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:31.288" level="INFO">${ACCURACY} = {'diff': [4.579199999999936e-05, 4.502800000000251e-05, 4.474999999999965e-05, 4.480499999999846e-05, 4.5138999999999596e-05, 4.49999999999999e-05, 4.467999999999833e-05, 4.497199999999729e-05, 4.4999...</msg>
<status status="PASS" starttime="20201029 18:15:31.284" endtime="20201029 18:15:31.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.292" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:15:31.291" endtime="20201029 18:15:31.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.295" level="INFO">VALUE: [4.579199999999936e-05, 4.502800000000251e-05, 4.474999999999965e-05, 4.480499999999846e-05, 4.5138999999999596e-05, 4.49999999999999e-05, 4.467999999999833e-05, 4.497199999999729e-05, 4.49999999999999e-05, 4.5097000000000886e-05, 4.506899999999828e-05, 4.5083000000001316e-05, 4.474999999999965e-05, 4.467999999999833e-05, 4.4695000000000845e-05, 4.5097000000000886e-05, 4.505499999999871e-05, 4.4639000000002566e-05, 4.476399999999922e-05, 4.526399999999972e-05, 4.482000000000097e-05, 4.470800000000094e-05, 4.4930999999998056e-05, 4.502800000000251e-05, 4.5166999999998736e-05, 4.4916999999998486e-05, 4.5111000000000456e-05, 4.498600000000033e-05, 4.473600000000008e-05, 4.5181000000001775e-05, 4.4666999999998236e-05, 4.525000000000015e-05, 4.479200000000183e-05, 4.492999999999858e-05, 4.4959000000000665e-05, 4.4931000000001525e-05, 4.474999999999965e-05, 4.501399999999947e-05, 4.4874999999999776e-05, 4.5013e-05, 4.4861000000000206e-05, 4.475000000000312e-05, 4.469400000000137e-05, 4.497200000000076e-05, 4.505499999999871e-05, 4.472200000000051e-05, 4.495799999999772e-05, 4.4902999999998916e-05, 4.5069000000001747e-05, 4.4833000000001066e-05]</msg>
<status status="PASS" starttime="20201029 18:15:31.293" endtime="20201029 18:15:31.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.289" endtime="20201029 18:15:31.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.300" endtime="20201029 18:15:31.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.299" endtime="20201029 18:15:31.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.297" endtime="20201029 18:15:31.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.938" endtime="20201029 18:15:31.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.938" endtime="20201029 18:15:31.321"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.330" endtime="20201029 18:15:31.348"></status>
</kw>
<msg timestamp="20201029 18:15:31.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.328" endtime="20201029 18:15:31.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.349" endtime="20201029 18:15:31.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.352" endtime="20201029 18:15:31.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.326" endtime="20201029 18:15:31.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.323" endtime="20201029 18:15:31.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.361" endtime="20201029 18:15:31.648"></status>
</kw>
<msg timestamp="20201029 18:15:31.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023459097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023505639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.360" endtime="20201029 18:15:31.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023459097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023505639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.653" endtime="20201029 18:15:31.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.661" endtime="20201029 18:15:31.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.357" endtime="20201029 18:15:31.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.355" endtime="20201029 18:15:31.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.668" level="INFO">${RESULT} = [{'diff': 4.654199999999664e-05}, {'diff': 4.6375000000001276e-05}, {'diff': 4.5889000000000346e-05}, {'diff': 4.604199999999961e-05}, {'diff': 4.6111000000001456e-05}, {'diff': 4.5889000000000346e-05...</msg>
<status status="PASS" starttime="20201029 18:15:31.665" endtime="20201029 18:15:31.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:31.672" level="INFO">${ACCURACY} = {'diff': [4.654199999999664e-05, 4.6375000000001276e-05, 4.5889000000000346e-05, 4.604199999999961e-05, 4.6111000000001456e-05, 4.5889000000000346e-05, 4.5959000000001665e-05, 4.5861000000001206e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:31.669" endtime="20201029 18:15:31.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.677" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:15:31.676" endtime="20201029 18:15:31.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.680" level="INFO">VALUE: [4.654199999999664e-05, 4.6375000000001276e-05, 4.5889000000000346e-05, 4.604199999999961e-05, 4.6111000000001456e-05, 4.5889000000000346e-05, 4.5959000000001665e-05, 4.5861000000001206e-05, 4.5861000000001206e-05, 4.6083000000002317e-05, 4.620799999999897e-05, 4.5875000000000776e-05, 4.6139000000000596e-05, 4.60000000000009e-05, 4.56939999999989e-05, 4.622199999999854e-05, 4.6139000000000596e-05, 4.604199999999961e-05, 4.597199999999829e-05, 4.570799999999847e-05, 4.612499999999756e-05, 4.5875000000000776e-05, 4.5666999999999236e-05, 4.580599999999893e-05, 4.608400000000179e-05, 4.6195000000002345e-05, 4.6195000000002345e-05, 4.6111000000001456e-05, 4.608400000000179e-05, 4.597200000000176e-05, 4.576400000000022e-05, 4.5875000000000776e-05, 4.605599999999918e-05, 4.5680999999998806e-05, 4.6180999999999306e-05, 4.5889000000000346e-05, 4.56939999999989e-05, 4.611200000000093e-05, 4.605599999999918e-05, 4.5875000000000776e-05, 4.563800000000062e-05, 4.616600000000026e-05, 4.591600000000001e-05, 4.608299999999885e-05, 4.61939999999994e-05, 4.619400000000287e-05, 4.604100000000014e-05, 4.626400000000072e-05, 4.594399999999915e-05, 4.6153000000000166e-05]</msg>
<status status="PASS" starttime="20201029 18:15:31.678" endtime="20201029 18:15:31.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.673" endtime="20201029 18:15:31.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.686" endtime="20201029 18:15:31.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.684" endtime="20201029 18:15:31.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.683" endtime="20201029 18:15:31.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.322" endtime="20201029 18:15:31.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.321" endtime="20201029 18:15:31.706"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.715" endtime="20201029 18:15:31.732"></status>
</kw>
<msg timestamp="20201029 18:15:31.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.714" endtime="20201029 18:15:31.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.733" endtime="20201029 18:15:31.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.736" endtime="20201029 18:15:31.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.711" endtime="20201029 18:15:31.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.709" endtime="20201029 18:15:31.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.745" endtime="20201029 18:15:32.032"></status>
</kw>
<msg timestamp="20201029 18:15:32.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.744" endtime="20201029 18:15:32.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.036" endtime="20201029 18:15:32.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.044" endtime="20201029 18:15:32.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.741" endtime="20201029 18:15:32.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.739" endtime="20201029 18:15:32.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.051" level="INFO">${RESULT} = [{'diff': 4.780600000000093e-05}, {'diff': 4.7167000000000736e-05}, {'diff': 4.679100000000089e-05}, {'diff': 4.708399999999932e-05}, {'diff': 4.6875000000001776e-05}, {'diff': 4.674999999999818e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:32.048" endtime="20201029 18:15:32.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:32.056" level="INFO">${ACCURACY} = {'diff': [4.780600000000093e-05, 4.7167000000000736e-05, 4.679100000000089e-05, 4.708399999999932e-05, 4.6875000000001776e-05, 4.674999999999818e-05, 4.670799999999947e-05, 4.720799999999997e-05, 4.71...</msg>
<status status="PASS" starttime="20201029 18:15:32.052" endtime="20201029 18:15:32.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.061" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:15:32.060" endtime="20201029 18:15:32.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.064" level="INFO">VALUE: [4.780600000000093e-05, 4.7167000000000736e-05, 4.679100000000089e-05, 4.708399999999932e-05, 4.6875000000001776e-05, 4.674999999999818e-05, 4.670799999999947e-05, 4.720799999999997e-05, 4.718000000000083e-05, 4.692999999999711e-05, 4.66939999999999e-05, 4.677800000000079e-05, 4.706900000000028e-05, 4.699999999999843e-05, 4.712499999999856e-05, 4.727800000000129e-05, 4.676400000000122e-05, 4.686099999999874e-05, 4.672199999999904e-05, 4.709699999999942e-05, 4.698600000000233e-05, 4.681900000000003e-05, 4.7181000000000306e-05, 4.676399999999775e-05, 4.704100000000114e-05, 4.691699999999702e-05, 4.697199999999929e-05, 4.68199999999995e-05, 4.705600000000018e-05, 4.686099999999874e-05, 4.726399999999825e-05, 4.6917000000000486e-05, 4.7167000000000736e-05, 4.672200000000251e-05, 4.676399999999775e-05, 4.684799999999864e-05, 4.722199999999954e-05, 4.7111000000002456e-05, 4.70269999999981e-05, 4.694400000000015e-05, 4.688899999999788e-05, 4.670799999999947e-05, 4.691600000000101e-05, 4.693000000000058e-05, 4.704100000000114e-05, 4.680499999999699e-05, 4.712499999999856e-05, 4.720799999999997e-05, 4.670799999999947e-05, 4.711099999999899e-05]</msg>
<status status="PASS" starttime="20201029 18:15:32.062" endtime="20201029 18:15:32.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.057" endtime="20201029 18:15:32.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.073" endtime="20201029 18:15:32.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.072" endtime="20201029 18:15:32.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.071" endtime="20201029 18:15:32.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.707" endtime="20201029 18:15:32.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.707" endtime="20201029 18:15:32.094"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.103" endtime="20201029 18:15:32.120"></status>
</kw>
<msg timestamp="20201029 18:15:32.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.102" endtime="20201029 18:15:32.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.121" endtime="20201029 18:15:32.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.124" endtime="20201029 18:15:32.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.099" endtime="20201029 18:15:32.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.097" endtime="20201029 18:15:32.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.133" endtime="20201029 18:15:32.420"></status>
</kw>
<msg timestamp="20201029 18:15:32.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.132" endtime="20201029 18:15:32.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.424" endtime="20201029 18:15:32.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.433" endtime="20201029 18:15:32.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.129" endtime="20201029 18:15:32.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.127" endtime="20201029 18:15:32.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.440" level="INFO">${RESULT} = [{'diff': 4.797200000000029e-05}, {'diff': 4.837499999999981e-05}, {'diff': 4.795800000000072e-05}, {'diff': 4.776399999999875e-05}, {'diff': 4.8209000000000446e-05}, {'diff': 4.799999999999943e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:32.436" endtime="20201029 18:15:32.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:32.444" level="INFO">${ACCURACY} = {'diff': [4.797200000000029e-05, 4.837499999999981e-05, 4.795800000000072e-05, 4.776399999999875e-05, 4.8209000000000446e-05, 4.799999999999943e-05, 4.811099999999999e-05, 4.774999999999918e-05, 4.819...</msg>
<status status="PASS" starttime="20201029 18:15:32.441" endtime="20201029 18:15:32.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.449" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:15:32.447" endtime="20201029 18:15:32.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.451" level="INFO">VALUE: [4.797200000000029e-05, 4.837499999999981e-05, 4.795800000000072e-05, 4.776399999999875e-05, 4.8209000000000446e-05, 4.799999999999943e-05, 4.811099999999999e-05, 4.774999999999918e-05, 4.81940000000014e-05, 4.809799999999989e-05, 4.7722999999999516e-05, 4.817999999999836e-05, 4.808300000000085e-05, 4.7945000000000626e-05, 4.804199999999814e-05, 4.822200000000054e-05, 4.78330000000006e-05, 4.81940000000014e-05, 4.806899999999781e-05, 4.816600000000226e-05, 4.791599999999854e-05, 4.7861000000003207e-05, 4.772200000000004e-05, 4.781900000000103e-05, 4.802799999999857e-05, 4.812499999999956e-05, 4.8209000000000446e-05, 4.7917000000001486e-05, 4.7653000000001666e-05, 4.780600000000093e-05, 4.76940000000009e-05, 4.786099999999974e-05, 4.779200000000136e-05, 4.813899999999913e-05, 4.78330000000006e-05, 4.802700000000257e-05, 4.780600000000093e-05, 4.779200000000136e-05, 4.777800000000179e-05, 4.774999999999918e-05, 4.78330000000006e-05, 4.827799999999882e-05, 4.779199999999789e-05, 4.7917000000001486e-05, 4.790199999999897e-05, 4.820800000000097e-05, 4.824999999999968e-05, 4.770800000000047e-05, 4.780499999999799e-05, 4.81940000000014e-05]</msg>
<status status="PASS" starttime="20201029 18:15:32.450" endtime="20201029 18:15:32.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.445" endtime="20201029 18:15:32.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.456" endtime="20201029 18:15:32.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.455" endtime="20201029 18:15:32.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.453" endtime="20201029 18:15:32.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.095" endtime="20201029 18:15:32.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.094" endtime="20201029 18:15:32.477"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.486" endtime="20201029 18:15:32.506"></status>
</kw>
<msg timestamp="20201029 18:15:32.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.485" endtime="20201029 18:15:32.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.508" endtime="20201029 18:15:32.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.510" endtime="20201029 18:15:32.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.482" endtime="20201029 18:15:32.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.480" endtime="20201029 18:15:32.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.519" endtime="20201029 18:15:32.806"></status>
</kw>
<msg timestamp="20201029 18:15:32.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025504708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025553972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.518" endtime="20201029 18:15:32.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025504708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025553972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.810" endtime="20201029 18:15:32.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.818" endtime="20201029 18:15:32.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.515" endtime="20201029 18:15:32.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.513" endtime="20201029 18:15:32.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.825" level="INFO">${RESULT} = [{'diff': 4.926400000000025e-05}, {'diff': 4.909700000000142e-05}, {'diff': 4.873600000000061e-05}, {'diff': 4.9195000000001876e-05}, {'diff': 4.897199999999782e-05}, {'diff': 4.8945000000001626e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:32.822" endtime="20201029 18:15:32.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:32.829" level="INFO">${ACCURACY} = {'diff': [4.926400000000025e-05, 4.909700000000142e-05, 4.873600000000061e-05, 4.9195000000001876e-05, 4.897199999999782e-05, 4.8945000000001626e-05, 4.9181000000002306e-05, 4.9014e-05, 4.922299999999...</msg>
<status status="PASS" starttime="20201029 18:15:32.826" endtime="20201029 18:15:32.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.834" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:15:32.833" endtime="20201029 18:15:32.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.836" level="INFO">VALUE: [4.926400000000025e-05, 4.909700000000142e-05, 4.873600000000061e-05, 4.9195000000001876e-05, 4.897199999999782e-05, 4.8945000000001626e-05, 4.9181000000002306e-05, 4.9014e-05, 4.9222999999997546e-05, 4.908399999999785e-05, 4.8917000000002486e-05, 4.9209000000001446e-05, 4.887500000000031e-05, 4.9014e-05, 4.894399999999868e-05, 4.90270000000001e-05, 4.8639000000003096e-05, 4.870800000000147e-05, 4.872200000000104e-05, 4.913900000000013e-05, 4.899999999999696e-05, 4.905500000000271e-05, 4.893000000000258e-05, 4.884700000000117e-05, 4.86529999999992e-05, 4.894399999999868e-05, 4.894399999999868e-05, 4.898600000000086e-05, 4.925000000000068e-05, 4.873600000000061e-05, 4.913900000000013e-05, 4.912500000000056e-05, 4.909699999999795e-05, 4.9014e-05, 4.9014e-05, 4.918099999999884e-05, 4.9014e-05, 4.869499999999791e-05, 4.91529999999997e-05, 4.900000000000043e-05, 4.872200000000104e-05, 4.905599999999871e-05, 4.888899999999988e-05, 4.879199999999889e-05, 4.898599999999739e-05, 4.8723000000000516e-05, 4.875000000000018e-05, 4.88330000000016e-05, 4.873600000000061e-05, 4.915200000000022e-05]</msg>
<status status="PASS" starttime="20201029 18:15:32.835" endtime="20201029 18:15:32.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.830" endtime="20201029 18:15:32.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.842" endtime="20201029 18:15:32.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.841" endtime="20201029 18:15:32.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.840" endtime="20201029 18:15:32.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.478" endtime="20201029 18:15:32.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.478" endtime="20201029 18:15:32.863"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.872" endtime="20201029 18:15:32.889"></status>
</kw>
<msg timestamp="20201029 18:15:32.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.871" endtime="20201029 18:15:32.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.890" endtime="20201029 18:15:32.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.893" endtime="20201029 18:15:32.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.868" endtime="20201029 18:15:32.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.866" endtime="20201029 18:15:32.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.903" endtime="20201029 18:15:33.188"></status>
</kw>
<msg timestamp="20201029 18:15:33.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.901" endtime="20201029 18:15:33.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.192" endtime="20201029 18:15:33.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.200" endtime="20201029 18:15:33.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.898" endtime="20201029 18:15:33.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.896" endtime="20201029 18:15:33.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:33.207" level="INFO">${RESULT} = [{'diff': 5.037499999999834e-05}, {'diff': 4.983299999999913e-05}, {'diff': 4.966699999999977e-05}, {'diff': 4.9707999999999e-05}, {'diff': 5.012500000000156e-05}, {'diff': 5.005500000000024e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:33.204" endtime="20201029 18:15:33.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:33.213" level="INFO">${ACCURACY} = {'diff': [5.037499999999834e-05, 4.983299999999913e-05, 4.966699999999977e-05, 4.9707999999999e-05, 5.012500000000156e-05, 5.005500000000024e-05, 4.993099999999959e-05, 4.970800000000247e-05, 4.990299...</msg>
<status status="PASS" starttime="20201029 18:15:33.208" endtime="20201029 18:15:33.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.218" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:15:33.216" endtime="20201029 18:15:33.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.221" level="INFO">VALUE: [5.037499999999834e-05, 4.983299999999913e-05, 4.966699999999977e-05, 4.9707999999999e-05, 5.012500000000156e-05, 5.005500000000024e-05, 4.993099999999959e-05, 4.970800000000247e-05, 4.990299999999698e-05, 4.974999999999771e-05, 5.011099999999852e-05, 5.008299999999938e-05, 4.973599999999814e-05, 4.993099999999959e-05, 5.011100000000199e-05, 4.984700000000217e-05, 4.983299999999913e-05, 4.96530000000002e-05, 5.004200000000014e-05, 4.979199999999989e-05, 4.9986999999997866e-05, 4.9723000000001516e-05, 5.018099999999984e-05, 4.980599999999946e-05, 4.9737000000001086e-05, 5.009800000000189e-05, 5.006899999999981e-05, 4.993000000000011e-05, 5.022199999999907e-05, 4.9707999999999e-05, 5.012500000000156e-05, 5.000000000000143e-05, 4.965200000000072e-05, 4.970800000000247e-05, 4.98469999999987e-05, 5.011099999999852e-05, 4.972199999999857e-05, 5.022199999999907e-05, 5.000000000000143e-05, 5.008399999999885e-05, 4.991700000000002e-05, 4.962500000000106e-05, 4.988900000000088e-05, 4.984700000000217e-05, 4.991700000000002e-05, 5.002800000000057e-05, 5.009699999999895e-05, 5.006999999999928e-05, 5.006999999999928e-05, 4.979199999999989e-05]</msg>
<status status="PASS" starttime="20201029 18:15:33.219" endtime="20201029 18:15:33.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.214" endtime="20201029 18:15:33.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:33.226" endtime="20201029 18:15:33.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.224" endtime="20201029 18:15:33.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.223" endtime="20201029 18:15:33.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.864" endtime="20201029 18:15:33.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.864" endtime="20201029 18:15:33.247"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.256" endtime="20201029 18:15:33.274"></status>
</kw>
<msg timestamp="20201029 18:15:33.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.254" endtime="20201029 18:15:33.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.275" endtime="20201029 18:15:33.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.278" endtime="20201029 18:15:33.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.251" endtime="20201029 18:15:33.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.249" endtime="20201029 18:15:33.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.287" endtime="20201029 18:15:33.574"></status>
</kw>
<msg timestamp="20201029 18:15:33.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022357833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.286" endtime="20201029 18:15:33.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022357833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.578" endtime="20201029 18:15:33.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.587" endtime="20201029 18:15:33.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.283" endtime="20201029 18:15:33.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.281" endtime="20201029 18:15:33.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:33.593" level="INFO">${RESULT} = [{'diff': 5.095800000000025e-05}, {'diff': 5.112500000000256e-05}, {'diff': 5.10279999999981e-05}, {'diff': 5.088900000000188e-05}, {'diff': 5.082000000000003e-05}, {'diff': 5.113899999999866e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:33.590" endtime="20201029 18:15:33.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:33.598" level="INFO">${ACCURACY} = {'diff': [5.095800000000025e-05, 5.112500000000256e-05, 5.10279999999981e-05, 5.088900000000188e-05, 5.082000000000003e-05, 5.113899999999866e-05, 5.079200000000089e-05, 5.101399999999853e-05, 5.08060...</msg>
<status status="PASS" starttime="20201029 18:15:33.594" endtime="20201029 18:15:33.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.602" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:15:33.601" endtime="20201029 18:15:33.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.605" level="INFO">VALUE: [5.095800000000025e-05, 5.112500000000256e-05, 5.10279999999981e-05, 5.088900000000188e-05, 5.082000000000003e-05, 5.113899999999866e-05, 5.079200000000089e-05, 5.101399999999853e-05, 5.080600000000046e-05, 5.098599999999939e-05, 5.072199999999957e-05, 5.086100000000274e-05, 5.137499999999934e-05, 5.113900000000213e-05, 5.083299999999666e-05, 5.0887999999998934e-05, 5.120899999999998e-05, 5.079099999999795e-05, 5.111099999999952e-05, 5.087499999999884e-05, 5.10409999999982e-05, 5.118000000000136e-05, 5.081900000000056e-05, 5.116600000000179e-05, 5.072199999999957e-05, 5.101399999999853e-05, 5.073599999999914e-05, 5.094400000000068e-05, 5.075000000000218e-05, 5.072200000000304e-05, 5.080600000000046e-05, 5.087500000000231e-05, 5.123599999999964e-05, 5.087500000000231e-05, 5.08339999999996e-05, 5.108399999999985e-05, 5.066700000000077e-05, 5.119500000000041e-05, 5.094500000000016e-05, 5.083300000000013e-05, 5.112499999999909e-05, 5.068100000000034e-05, 5.104199999999767e-05, 5.11530000000017e-05, 5.098600000000286e-05, 5.116700000000127e-05, 5.0723000000002516e-05, 5.101299999999906e-05, 5.081900000000056e-05, 5.102699999999863e-05]</msg>
<status status="PASS" starttime="20201029 18:15:33.603" endtime="20201029 18:15:33.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.599" endtime="20201029 18:15:33.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:33.610" endtime="20201029 18:15:33.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.609" endtime="20201029 18:15:33.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.607" endtime="20201029 18:15:33.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.248" endtime="20201029 18:15:33.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.247" endtime="20201029 18:15:33.631"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.640" endtime="20201029 18:15:33.658"></status>
</kw>
<msg timestamp="20201029 18:15:33.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.638" endtime="20201029 18:15:33.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.659" endtime="20201029 18:15:33.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.662" endtime="20201029 18:15:33.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.636" endtime="20201029 18:15:33.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.633" endtime="20201029 18:15:33.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.671" endtime="20201029 18:15:33.957"></status>
</kw>
<msg timestamp="20201029 18:15:33.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023178986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023231347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.670" endtime="20201029 18:15:33.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023178986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023231347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.961" endtime="20201029 18:15:33.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.970" endtime="20201029 18:15:33.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.667" endtime="20201029 18:15:33.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.665" endtime="20201029 18:15:33.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:33.976" level="INFO">${RESULT} = [{'diff': 5.236100000000077e-05}, {'diff': 5.238899999999991e-05}, {'diff': 5.190299999999898e-05}, {'diff': 5.211100000000052e-05}, {'diff': 5.180600000000146e-05}, {'diff': 5.211100000000052e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:33.973" endtime="20201029 18:15:33.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:33.981" level="INFO">${ACCURACY} = {'diff': [5.236100000000077e-05, 5.238899999999991e-05, 5.190299999999898e-05, 5.211100000000052e-05, 5.180600000000146e-05, 5.211100000000052e-05, 5.20279999999991e-05, 5.232000000000153e-05, 5.18749...</msg>
<status status="PASS" starttime="20201029 18:15:33.978" endtime="20201029 18:15:33.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.985" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:15:33.984" endtime="20201029 18:15:33.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.988" level="INFO">VALUE: [5.236100000000077e-05, 5.238899999999991e-05, 5.190299999999898e-05, 5.211100000000052e-05, 5.180600000000146e-05, 5.211100000000052e-05, 5.20279999999991e-05, 5.232000000000153e-05, 5.187499999999984e-05, 5.162499999999959e-05, 5.18470000000007e-05, 5.188899999999941e-05, 5.16669999999983e-05, 5.205499999999877e-05, 5.194400000000168e-05, 5.197200000000082e-05, 5.208299999999791e-05, 5.205500000000224e-05, 5.183300000000113e-05, 5.181899999999809e-05, 5.181900000000156e-05, 5.170900000000048e-05, 5.195900000000073e-05, 5.19730000000003e-05, 5.218100000000184e-05, 5.18470000000007e-05, 5.205499999999877e-05, 5.173600000000014e-05, 5.204199999999867e-05, 5.190299999999898e-05, 5.18470000000007e-05, 5.194500000000116e-05, 5.1971999999997354e-05, 5.198600000000039e-05, 5.194500000000116e-05, 5.220899999999751e-05, 5.190300000000245e-05, 5.182000000000103e-05, 5.184800000000017e-05, 5.182000000000103e-05, 5.1708000000001e-05, 5.180599999999799e-05, 5.182000000000103e-05, 5.1901999999999504e-05, 5.222200000000107e-05, 5.2165999999999324e-05, 5.187499999999984e-05, 5.202699999999963e-05, 5.1957999999997784e-05, 5.172200000000057e-05]</msg>
<status status="PASS" starttime="20201029 18:15:33.987" endtime="20201029 18:15:33.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.982" endtime="20201029 18:15:33.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:33.994" endtime="20201029 18:15:34.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.993" endtime="20201029 18:15:34.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.991" endtime="20201029 18:15:34.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.632" endtime="20201029 18:15:34.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.631" endtime="20201029 18:15:34.015"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.024" endtime="20201029 18:15:34.040"></status>
</kw>
<msg timestamp="20201029 18:15:34.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.022" endtime="20201029 18:15:34.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.042" endtime="20201029 18:15:34.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.044" endtime="20201029 18:15:34.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.020" endtime="20201029 18:15:34.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.018" endtime="20201029 18:15:34.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.054" endtime="20201029 18:15:34.340"></status>
</kw>
<msg timestamp="20201029 18:15:34.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.052" endtime="20201029 18:15:34.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.344" endtime="20201029 18:15:34.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.353" endtime="20201029 18:15:34.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.049" endtime="20201029 18:15:34.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.048" endtime="20201029 18:15:34.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:34.359" level="INFO">${RESULT} = [{'diff': 5.3930000000000644e-05}, {'diff': 5.2999999999997494e-05}, {'diff': 5.311099999999805e-05}, {'diff': 5.309699999999848e-05}, {'diff': 5.330500000000002e-05}, {'diff': 5.31669999999998e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:34.356" endtime="20201029 18:15:34.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:34.365" level="INFO">${ACCURACY} = {'diff': [5.3930000000000644e-05, 5.2999999999997494e-05, 5.311099999999805e-05, 5.309699999999848e-05, 5.330500000000002e-05, 5.31669999999998e-05, 5.30280000000001e-05, 5.305600000000271e-05, 5.2722...</msg>
<status status="PASS" starttime="20201029 18:15:34.360" endtime="20201029 18:15:34.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.369" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:15:34.368" endtime="20201029 18:15:34.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.372" level="INFO">VALUE: [5.3930000000000644e-05, 5.2999999999997494e-05, 5.311099999999805e-05, 5.309699999999848e-05, 5.330500000000002e-05, 5.31669999999998e-05, 5.30280000000001e-05, 5.305600000000271e-05, 5.272200000000157e-05, 5.291699999999955e-05, 5.287499999999737e-05, 5.308300000000238e-05, 5.308400000000185e-05, 5.301400000000053e-05, 5.279199999999942e-05, 5.322200000000207e-05, 5.268099999999887e-05, 5.29730000000013e-05, 5.284800000000117e-05, 5.30280000000001e-05, 5.2721999999998104e-05, 5.3207999999999034e-05, 5.298700000000087e-05, 5.311100000000152e-05, 5.2679999999999394e-05, 5.275000000000071e-05, 5.3179999999999894e-05, 5.272200000000157e-05, 5.2707999999998534e-05, 5.2902000000000504e-05, 5.3166000000000324e-05, 5.283299999999866e-05, 5.3166000000000324e-05, 5.291700000000302e-05, 5.30280000000001e-05, 5.2985999999997924e-05, 5.315300000000023e-05, 5.2985999999997924e-05, 5.270900000000148e-05, 5.288899999999694e-05, 5.2957999999998784e-05, 5.281999999999856e-05, 5.313899999999719e-05, 5.315299999999676e-05, 5.284699999999823e-05, 5.325000000000121e-05, 5.287500000000084e-05, 5.287500000000084e-05, 5.286100000000127e-05, 5.261200000000049e-05]</msg>
<status status="PASS" starttime="20201029 18:15:34.370" endtime="20201029 18:15:34.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.366" endtime="20201029 18:15:34.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:34.377" endtime="20201029 18:15:34.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.375" endtime="20201029 18:15:34.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.374" endtime="20201029 18:15:34.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.016" endtime="20201029 18:15:34.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.015" endtime="20201029 18:15:34.398"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.407" endtime="20201029 18:15:34.423"></status>
</kw>
<msg timestamp="20201029 18:15:34.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.405" endtime="20201029 18:15:34.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.425" endtime="20201029 18:15:34.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.427" endtime="20201029 18:15:34.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.403" endtime="20201029 18:15:34.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.400" endtime="20201029 18:15:34.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.437" endtime="20201029 18:15:34.725"></status>
</kw>
<msg timestamp="20201029 18:15:34.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.435" endtime="20201029 18:15:34.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.729" endtime="20201029 18:15:34.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.738" endtime="20201029 18:15:34.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.433" endtime="20201029 18:15:34.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.431" endtime="20201029 18:15:34.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:34.744" level="INFO">${RESULT} = [{'diff': 5.4263999999998314e-05}, {'diff': 5.416699999999733e-05}, {'diff': 5.3999999999998494e-05}, {'diff': 5.4208000000000034e-05}, {'diff': 5.376400000000128e-05}, {'diff': 5.405600000000024e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:34.741" endtime="20201029 18:15:34.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:34.749" level="INFO">${ACCURACY} = {'diff': [5.4263999999998314e-05, 5.416699999999733e-05, 5.3999999999998494e-05, 5.4208000000000034e-05, 5.376400000000128e-05, 5.405600000000024e-05, 5.380599999999999e-05, 5.4013999999998064e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:15:34.745" endtime="20201029 18:15:34.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.753" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:15:34.752" endtime="20201029 18:15:34.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.757" level="INFO">VALUE: [5.4263999999998314e-05, 5.416699999999733e-05, 5.3999999999998494e-05, 5.4208000000000034e-05, 5.376400000000128e-05, 5.405600000000024e-05, 5.380599999999999e-05, 5.4013999999998064e-05, 5.401400000000153e-05, 5.393100000000012e-05, 5.406900000000034e-05, 5.422299999999908e-05, 5.380500000000052e-05, 5.405500000000077e-05, 5.3930000000000644e-05, 5.4180000000000894e-05, 5.405600000000024e-05, 5.387499999999837e-05, 5.406900000000034e-05, 5.405500000000077e-05, 5.375000000000171e-05, 5.3749999999998244e-05, 5.406900000000034e-05, 5.388900000000141e-05, 5.4208000000000034e-05, 5.4194000000000464e-05, 5.3957999999999784e-05, 5.409700000000295e-05, 5.418100000000037e-05, 5.4235999999999174e-05, 5.408299999999991e-05, 5.4027999999997633e-05, 5.402700000000163e-05, 5.375000000000171e-05, 5.3999999999998494e-05, 5.411099999999905e-05, 5.3999999999998494e-05, 5.387499999999837e-05, 5.398600000000239e-05, 5.366699999999683e-05, 5.400000000000196e-05, 5.36670000000003e-05, 5.40280000000011e-05, 5.3735999999998674e-05, 5.387499999999837e-05, 5.4221999999999604e-05, 5.386100000000227e-05, 5.3749999999998244e-05, 5.402700000000163e-05, 5.3944000000000214e-05]</msg>
<status status="PASS" starttime="20201029 18:15:34.755" endtime="20201029 18:15:34.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.750" endtime="20201029 18:15:34.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:34.764" endtime="20201029 18:15:34.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.762" endtime="20201029 18:15:34.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.761" endtime="20201029 18:15:34.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.399" endtime="20201029 18:15:34.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.398" endtime="20201029 18:15:34.787"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.796" endtime="20201029 18:15:34.814"></status>
</kw>
<msg timestamp="20201029 18:15:34.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.794" endtime="20201029 18:15:34.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.816" endtime="20201029 18:15:34.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.818" endtime="20201029 18:15:34.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.792" endtime="20201029 18:15:34.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.790" endtime="20201029 18:15:34.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.828" endtime="20201029 18:15:35.114"></status>
</kw>
<msg timestamp="20201029 18:15:35.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026037681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026093278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.826" endtime="20201029 18:15:35.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026037681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026093278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.118" endtime="20201029 18:15:35.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.126" endtime="20201029 18:15:35.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.824" endtime="20201029 18:15:35.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.822" endtime="20201029 18:15:35.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.133" level="INFO">${RESULT} = [{'diff': 5.559700000000098e-05}, {'diff': 5.519500000000094e-05}, {'diff': 5.465300000000173e-05}, {'diff': 5.5151999999999285e-05}, {'diff': 5.479100000000195e-05}, {'diff': 5.5013999999999064e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:35.130" endtime="20201029 18:15:35.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:35.138" level="INFO">${ACCURACY} = {'diff': [5.559700000000098e-05, 5.519500000000094e-05, 5.465300000000173e-05, 5.5151999999999285e-05, 5.479100000000195e-05, 5.5013999999999064e-05, 5.4679999999997925e-05, 5.4958000000000784e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:15:35.134" endtime="20201029 18:15:35.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.142" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:15:35.141" endtime="20201029 18:15:35.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.145" level="INFO">VALUE: [5.559700000000098e-05, 5.519500000000094e-05, 5.465300000000173e-05, 5.5151999999999285e-05, 5.479100000000195e-05, 5.5013999999999064e-05, 5.4679999999997925e-05, 5.4958000000000784e-05, 5.4651999999998785e-05, 5.4972000000000354e-05, 5.4735999999999674e-05, 5.500000000000296e-05, 5.5277999999998884e-05, 5.51670000000018e-05, 5.468100000000087e-05, 5.5179999999998425e-05, 5.5208000000001034e-05, 5.511100000000005e-05, 5.484700000000023e-05, 5.5263999999999314e-05, 5.501299999999959e-05, 5.513899999999919e-05, 5.469500000000044e-05, 5.4749999999999244e-05, 5.462499999999912e-05, 5.506899999999787e-05, 5.4999999999999494e-05, 5.508400000000038e-05, 5.505599999999777e-05, 5.508400000000038e-05, 5.511100000000005e-05, 5.4999999999999494e-05, 5.4985999999999924e-05, 5.504099999999873e-05, 5.5193999999997995e-05, 5.4693999999997495e-05, 5.487499999999937e-05, 5.4791999999997953e-05, 5.4777999999998384e-05, 5.515299999999876e-05, 5.494499999999722e-05, 5.4777999999998384e-05, 5.463900000000216e-05, 5.5013999999999064e-05, 5.468100000000087e-05, 5.4999999999999494e-05, 5.468100000000087e-05, 5.48609999999998e-05, 5.4791999999997953e-05, 5.491699999999808e-05]</msg>
<status status="PASS" starttime="20201029 18:15:35.143" endtime="20201029 18:15:35.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.139" endtime="20201029 18:15:35.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.151" endtime="20201029 18:15:35.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.149" endtime="20201029 18:15:35.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.148" endtime="20201029 18:15:35.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.788" endtime="20201029 18:15:35.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.787" endtime="20201029 18:15:35.172"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.181" endtime="20201029 18:15:35.198"></status>
</kw>
<msg timestamp="20201029 18:15:35.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.179" endtime="20201029 18:15:35.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.199" endtime="20201029 18:15:35.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.202" endtime="20201029 18:15:35.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.176" endtime="20201029 18:15:35.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.174" endtime="20201029 18:15:35.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.211" endtime="20201029 18:15:35.516"></status>
</kw>
<msg timestamp="20201029 18:15:35.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022169389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.210" endtime="20201029 18:15:35.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022169389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.520" endtime="20201029 18:15:35.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.528" endtime="20201029 18:15:35.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.207" endtime="20201029 18:15:35.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.205" endtime="20201029 18:15:35.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.535" level="INFO">${RESULT} = [{'diff': 5.658299999999894e-05}, {'diff': 5.587500000000037e-05}, {'diff': 5.6207999999998565e-05}, {'diff': 5.6014000000000064e-05}, {'diff': 5.579200000000242e-05}, {'diff': 5.5777999999999384e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:35.532" endtime="20201029 18:15:35.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:35.540" level="INFO">${ACCURACY} = {'diff': [5.658299999999894e-05, 5.587500000000037e-05, 5.6207999999998565e-05, 5.6014000000000064e-05, 5.579200000000242e-05, 5.5777999999999384e-05, 5.607000000000181e-05, 5.566699999999883e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 18:15:35.536" endtime="20201029 18:15:35.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.544" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:15:35.543" endtime="20201029 18:15:35.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.547" level="INFO">VALUE: [5.658299999999894e-05, 5.587500000000037e-05, 5.6207999999998565e-05, 5.6014000000000064e-05, 5.579200000000242e-05, 5.5777999999999384e-05, 5.607000000000181e-05, 5.566699999999883e-05, 5.613900000000019e-05, 5.5749999999996774e-05, 5.586200000000027e-05, 5.5805999999998523e-05, 5.587500000000037e-05, 5.56809999999984e-05, 5.579099999999948e-05, 5.58749999999969e-05, 5.6000000000000494e-05, 5.577699999999991e-05, 5.5736000000000674e-05, 5.587500000000037e-05, 5.579099999999948e-05, 5.615299999999976e-05, 5.581900000000209e-05, 5.6027999999999634e-05, 5.5750000000000244e-05, 5.609700000000148e-05, 5.6041999999999204e-05, 5.5735999999997204e-05, 5.594500000000169e-05, 5.613900000000019e-05, 5.581999999999809e-05, 5.619499999999847e-05, 5.594499999999822e-05, 5.611200000000052e-05, 5.613900000000019e-05, 5.6027999999999634e-05, 5.5736000000000674e-05, 5.5791999999998954e-05, 5.5930000000002644e-05, 5.572299999999711e-05, 5.60280000000031e-05, 5.591700000000255e-05, 5.59870000000004e-05, 5.5750000000000244e-05, 5.587500000000037e-05, 5.612500000000062e-05, 5.6207999999998565e-05, 5.5694000000001964e-05, 5.5708000000001534e-05, 5.6152000000000285e-05]</msg>
<status status="PASS" starttime="20201029 18:15:35.545" endtime="20201029 18:15:35.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.541" endtime="20201029 18:15:35.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.552" endtime="20201029 18:15:35.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.550" endtime="20201029 18:15:35.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.549" endtime="20201029 18:15:35.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.173" endtime="20201029 18:15:35.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.172" endtime="20201029 18:15:35.572"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.581" endtime="20201029 18:15:35.598"></status>
</kw>
<msg timestamp="20201029 18:15:35.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.579" endtime="20201029 18:15:35.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.599" endtime="20201029 18:15:35.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.602" endtime="20201029 18:15:35.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.577" endtime="20201029 18:15:35.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.575" endtime="20201029 18:15:35.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.611" endtime="20201029 18:15:35.897"></status>
</kw>
<msg timestamp="20201029 18:15:35.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02168525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021742875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:35.609" endtime="20201029 18:15:35.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02168525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021742875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:35.902" endtime="20201029 18:15:35.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.910" endtime="20201029 18:15:35.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.607" endtime="20201029 18:15:35.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.605" endtime="20201029 18:15:35.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.916" level="INFO">${RESULT} = [{'diff': 5.762499999999865e-05}, {'diff': 5.7430000000000675e-05}, {'diff': 5.712499999999815e-05}, {'diff': 5.7042000000000204e-05}, {'diff': 5.709699999999901e-05}, {'diff': 5.68480000000017e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:35.913" endtime="20201029 18:15:35.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:35.921" level="INFO">${ACCURACY} = {'diff': [5.762499999999865e-05, 5.7430000000000675e-05, 5.712499999999815e-05, 5.7042000000000204e-05, 5.709699999999901e-05, 5.68480000000017e-05, 5.6750000000001244e-05, 5.7222000000002604e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 18:15:35.917" endtime="20201029 18:15:35.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.925" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:15:35.924" endtime="20201029 18:15:35.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.928" level="INFO">VALUE: [5.762499999999865e-05, 5.7430000000000675e-05, 5.712499999999815e-05, 5.7042000000000204e-05, 5.709699999999901e-05, 5.68480000000017e-05, 5.6750000000001244e-05, 5.7222000000002604e-05, 5.6943999999999745e-05, 5.684700000000223e-05, 5.686099999999833e-05, 5.7028000000000634e-05, 5.709699999999901e-05, 5.68610000000018e-05, 5.6972000000002354e-05, 5.711100000000205e-05, 5.684700000000223e-05, 5.7042000000000204e-05, 5.691700000000008e-05, 5.683299999999919e-05, 5.715300000000076e-05, 5.686099999999833e-05, 5.6750000000001244e-05, 5.6972000000002354e-05, 5.713900000000119e-05, 5.705600000000324e-05, 5.663899999999722e-05, 5.723699999999818e-05, 5.691700000000008e-05, 5.684799999999823e-05, 5.681899999999962e-05, 5.712500000000162e-05, 5.715300000000076e-05, 5.723699999999818e-05, 5.6749999999997774e-05, 5.684699999999876e-05, 5.702700000000116e-05, 5.70550000000003e-05, 5.679100000000048e-05, 5.708299999999944e-05, 5.683300000000266e-05, 5.6791999999999954e-05, 5.690299999999704e-05, 5.683299999999919e-05, 5.7235999999998705e-05, 5.6778000000000384e-05, 5.6805999999999524e-05, 5.6778000000000384e-05, 5.6958000000002784e-05, 5.694500000000269e-05]</msg>
<status status="PASS" starttime="20201029 18:15:35.926" endtime="20201029 18:15:35.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.921" endtime="20201029 18:15:35.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.933" endtime="20201029 18:15:35.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.931" endtime="20201029 18:15:35.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.930" endtime="20201029 18:15:35.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.573" endtime="20201029 18:15:35.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.573" endtime="20201029 18:15:35.953"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.962" endtime="20201029 18:15:35.982"></status>
</kw>
<msg timestamp="20201029 18:15:35.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.960" endtime="20201029 18:15:35.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.983" endtime="20201029 18:15:35.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.986" endtime="20201029 18:15:35.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.958" endtime="20201029 18:15:35.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.956" endtime="20201029 18:15:35.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.995" endtime="20201029 18:15:36.280"></status>
</kw>
<msg timestamp="20201029 18:15:36.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024948542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025007153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.993" endtime="20201029 18:15:36.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024948542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025007153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.284" endtime="20201029 18:15:36.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.293" endtime="20201029 18:15:36.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.991" endtime="20201029 18:15:36.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.989" endtime="20201029 18:15:36.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.299" level="INFO">${RESULT} = [{'diff': 5.861100000000008e-05}, {'diff': 5.7999999999999025e-05}, {'diff': 5.8151999999998816e-05}, {'diff': 5.781899999999715e-05}, {'diff': 5.7971999999999885e-05}, {'diff': 5.8222000000000135e-05...</msg>
<status status="PASS" starttime="20201029 18:15:36.296" endtime="20201029 18:15:36.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:36.304" level="INFO">${ACCURACY} = {'diff': [5.861100000000008e-05, 5.7999999999999025e-05, 5.8151999999998816e-05, 5.781899999999715e-05, 5.7971999999999885e-05, 5.8222000000000135e-05, 5.8013999999998594e-05, 5.7958000000000315e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:36.300" endtime="20201029 18:15:36.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.308" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:15:36.307" endtime="20201029 18:15:36.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.311" level="INFO">VALUE: [5.861100000000008e-05, 5.7999999999999025e-05, 5.8151999999998816e-05, 5.781899999999715e-05, 5.7971999999999885e-05, 5.8222000000000135e-05, 5.8013999999998594e-05, 5.7958000000000315e-05, 5.7707999999996595e-05, 5.806900000000087e-05, 5.8235999999999705e-05, 5.791699999999761e-05, 5.8097999999999483e-05, 5.7820000000000094e-05, 5.8222000000000135e-05, 5.812499999999915e-05, 5.7749999999998775e-05, 5.7999999999999025e-05, 5.819500000000047e-05, 5.7820000000000094e-05, 5.7806000000000524e-05, 5.808300000000044e-05, 5.765300000000126e-05, 5.794500000000022e-05, 5.815299999999829e-05, 5.819500000000047e-05, 5.7763999999998344e-05, 5.7708000000000065e-05, 5.8165999999998386e-05, 5.777700000000191e-05, 5.7763999999998344e-05, 5.8194000000000995e-05, 5.8180000000001425e-05, 5.80689999999974e-05, 5.7999999999999025e-05, 5.7721999999999635e-05, 5.7944000000000745e-05, 5.790300000000151e-05, 5.780500000000105e-05, 5.8194000000000995e-05, 5.7805999999997054e-05, 5.7999999999999025e-05, 5.766700000000083e-05, 5.8277999999998414e-05, 5.8056000000000774e-05, 5.811099999999958e-05, 5.779099999999801e-05, 5.8069999999996874e-05, 5.7749999999998775e-05, 5.788899999999847e-05]</msg>
<status status="PASS" starttime="20201029 18:15:36.309" endtime="20201029 18:15:36.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.304" endtime="20201029 18:15:36.313"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.316" endtime="20201029 18:15:36.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.315" endtime="20201029 18:15:36.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.314" endtime="20201029 18:15:36.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.954" endtime="20201029 18:15:36.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.954" endtime="20201029 18:15:36.337"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.346" endtime="20201029 18:15:36.363"></status>
</kw>
<msg timestamp="20201029 18:15:36.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.344" endtime="20201029 18:15:36.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.364" endtime="20201029 18:15:36.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.367" endtime="20201029 18:15:36.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.342" endtime="20201029 18:15:36.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.339" endtime="20201029 18:15:36.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.376" endtime="20201029 18:15:36.661"></status>
</kw>
<msg timestamp="20201029 18:15:36.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021839278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.374" endtime="20201029 18:15:36.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021839278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.665" endtime="20201029 18:15:36.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.673" endtime="20201029 18:15:36.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.372" endtime="20201029 18:15:36.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.370" endtime="20201029 18:15:36.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.680" level="INFO">${RESULT} = [{'diff': 5.9291999999998984e-05}, {'diff': 5.9236000000000705e-05}, {'diff': 5.8972000000000885e-05}, {'diff': 5.8986000000000455e-05}, {'diff': 5.905499999999883e-05}, {'diff': 5.9180000000002425e-0...</msg>
<status status="PASS" starttime="20201029 18:15:36.676" endtime="20201029 18:15:36.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:36.685" level="INFO">${ACCURACY} = {'diff': [5.9291999999998984e-05, 5.9236000000000705e-05, 5.8972000000000885e-05, 5.8986000000000455e-05, 5.905499999999883e-05, 5.9180000000002425e-05, 5.8651999999999316e-05, 5.88749999999999e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:15:36.681" endtime="20201029 18:15:36.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.689" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:15:36.688" endtime="20201029 18:15:36.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.692" level="INFO">VALUE: [5.9291999999998984e-05, 5.9236000000000705e-05, 5.8972000000000885e-05, 5.8986000000000455e-05, 5.905499999999883e-05, 5.9180000000002425e-05, 5.8651999999999316e-05, 5.88749999999999e-05, 5.915299999999929e-05, 5.8736000000000205e-05, 5.905499999999883e-05, 5.905499999999883e-05, 5.9070000000001344e-05, 5.8958000000001315e-05, 5.8986000000000455e-05, 5.8971999999997415e-05, 5.915300000000276e-05, 5.9000000000000025e-05, 5.894499999999775e-05, 5.9000000000000025e-05, 5.869500000000097e-05, 5.8679999999998456e-05, 5.865300000000226e-05, 5.9070000000001344e-05, 5.890299999999904e-05, 5.9028000000002634e-05, 5.902699999999969e-05, 5.862499999999965e-05, 5.927699999999994e-05, 5.909700000000101e-05, 5.8929999999998706e-05, 5.8722000000000635e-05, 5.9194000000001995e-05, 5.906900000000187e-05, 5.8777999999998914e-05, 5.883299999999772e-05, 5.9263999999999845e-05, 5.862499999999965e-05, 5.893100000000165e-05, 5.8986000000000455e-05, 5.886100000000033e-05, 5.9165999999999386e-05, 5.8972000000000885e-05, 5.8749999999999775e-05, 5.913899999999972e-05, 5.912500000000015e-05, 5.920900000000104e-05, 5.8820000000001094e-05, 5.8985999999996985e-05, 5.8792000000001954e-05]</msg>
<status status="PASS" starttime="20201029 18:15:36.690" endtime="20201029 18:15:36.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.686" endtime="20201029 18:15:36.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.697" endtime="20201029 18:15:36.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.695" endtime="20201029 18:15:36.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.694" endtime="20201029 18:15:36.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.338" endtime="20201029 18:15:36.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.337" endtime="20201029 18:15:36.717"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.726" endtime="20201029 18:15:36.743"></status>
</kw>
<msg timestamp="20201029 18:15:36.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.724" endtime="20201029 18:15:36.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.745" endtime="20201029 18:15:36.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.747" endtime="20201029 18:15:36.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.722" endtime="20201029 18:15:36.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.720" endtime="20201029 18:15:36.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.756" endtime="20201029 18:15:37.042"></status>
</kw>
<msg timestamp="20201029 18:15:37.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021778514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.755" endtime="20201029 18:15:37.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021778514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.047" endtime="20201029 18:15:37.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.055" endtime="20201029 18:15:37.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.752" endtime="20201029 18:15:37.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.750" endtime="20201029 18:15:37.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.062" level="INFO">${RESULT} = [{'diff': 6.068099999999993e-05}, {'diff': 6.0319999999999124e-05}, {'diff': 5.968099999999893e-05}, {'diff': 5.963899999999675e-05}, {'diff': 6.015299999999682e-05}, {'diff': 6.020899999999857e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:37.058" endtime="20201029 18:15:37.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:37.066" level="INFO">${ACCURACY} = {'diff': [6.068099999999993e-05, 6.0319999999999124e-05, 5.968099999999893e-05, 5.963899999999675e-05, 6.015299999999682e-05, 6.020899999999857e-05, 5.9999999999997555e-05, 5.984699999999829e-05, 5.97...</msg>
<status status="PASS" starttime="20201029 18:15:37.063" endtime="20201029 18:15:37.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.070" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:15:37.069" endtime="20201029 18:15:37.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.073" level="INFO">VALUE: [6.068099999999993e-05, 6.0319999999999124e-05, 5.968099999999893e-05, 5.963899999999675e-05, 6.015299999999682e-05, 6.020899999999857e-05, 5.9999999999997555e-05, 5.984699999999829e-05, 5.9749999999997305e-05, 5.9721999999998165e-05, 6.009700000000201e-05, 5.981900000000262e-05, 5.984700000000176e-05, 5.9665999999999886e-05, 6.012500000000115e-05, 5.9722000000001635e-05, 5.990300000000004e-05, 5.994500000000222e-05, 5.994500000000222e-05, 6.0291999999999984e-05, 5.969500000000197e-05, 5.969500000000197e-05, 6.013900000000072e-05, 6.0041999999999734e-05, 5.972300000000111e-05, 5.9820000000002094e-05, 5.9750000000000775e-05, 5.991699999999961e-05, 5.990300000000004e-05, 5.981899999999915e-05, 5.9806000000002524e-05, 6.012500000000115e-05, 6.0179999999999956e-05, 5.986100000000133e-05, 6.0138000000001246e-05, 5.9916000000000136e-05, 6.0207999999999096e-05, 5.9679999999999456e-05, 5.9777999999999915e-05, 5.983299999999872e-05, 6.0250000000001275e-05, 6.0207999999999096e-05, 5.990300000000004e-05, 5.9693999999999026e-05, 5.9777999999999915e-05, 6.00689999999994e-05, 5.9791999999999484e-05, 5.9722000000001635e-05, 6.012500000000115e-05, 5.990300000000004e-05]</msg>
<status status="PASS" starttime="20201029 18:15:37.071" endtime="20201029 18:15:37.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.067" endtime="20201029 18:15:37.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.082" endtime="20201029 18:15:37.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.080" endtime="20201029 18:15:37.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.079" endtime="20201029 18:15:37.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.718" endtime="20201029 18:15:37.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.718" endtime="20201029 18:15:37.102"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.111" endtime="20201029 18:15:37.129"></status>
</kw>
<msg timestamp="20201029 18:15:37.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.109" endtime="20201029 18:15:37.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.131" endtime="20201029 18:15:37.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.133" endtime="20201029 18:15:37.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.107" endtime="20201029 18:15:37.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.105" endtime="20201029 18:15:37.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.142" endtime="20201029 18:15:37.427"></status>
</kw>
<msg timestamp="20201029 18:15:37.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022604861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:37.141" endtime="20201029 18:15:37.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022604861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:37.432" endtime="20201029 18:15:37.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.440" endtime="20201029 18:15:37.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.138" endtime="20201029 18:15:37.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.136" endtime="20201029 18:15:37.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.446" level="INFO">${RESULT} = [{'diff': 6.136099999999936e-05}, {'diff': 6.132000000000012e-05}, {'diff': 6.0791999999997015e-05}, {'diff': 6.0929999999997236e-05}, {'diff': 6.094499999999975e-05}, {'diff': 6.118100000000043e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:37.443" endtime="20201029 18:15:37.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:37.451" level="INFO">${ACCURACY} = {'diff': [6.136099999999936e-05, 6.132000000000012e-05, 6.0791999999997015e-05, 6.0929999999997236e-05, 6.094499999999975e-05, 6.118100000000043e-05, 6.10560000000003e-05, 6.091700000000061e-05, 6.083...</msg>
<status status="PASS" starttime="20201029 18:15:37.447" endtime="20201029 18:15:37.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.455" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:15:37.454" endtime="20201029 18:15:37.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.458" level="INFO">VALUE: [6.136099999999936e-05, 6.132000000000012e-05, 6.0791999999997015e-05, 6.0929999999997236e-05, 6.094499999999975e-05, 6.118100000000043e-05, 6.10560000000003e-05, 6.091700000000061e-05, 6.083299999999972e-05, 6.0834000000002664e-05, 6.077699999999797e-05, 6.077700000000144e-05, 6.0888000000001996e-05, 6.122199999999967e-05, 6.116599999999792e-05, 6.0930000000000706e-05, 6.108299999999997e-05, 6.081900000000015e-05, 6.083299999999972e-05, 6.065300000000079e-05, 6.12080000000001e-05, 6.111099999999911e-05, 6.0721999999999166e-05, 6.1000000000002025e-05, 6.127799999999795e-05, 6.0749999999998305e-05, 6.115300000000129e-05, 6.095899999999932e-05, 6.0999999999998555e-05, 6.06949999999995e-05, 6.097299999999889e-05, 6.1014000000001595e-05, 6.083299999999972e-05, 6.0721999999999166e-05, 6.1014000000001595e-05, 6.087499999999843e-05, 6.0680000000000456e-05, 6.126300000000237e-05, 6.063899999999775e-05, 6.0694000000000026e-05, 6.12080000000001e-05, 6.119400000000053e-05, 6.108399999999944e-05, 6.112499999999868e-05, 6.12080000000001e-05, 6.109699999999954e-05, 6.072300000000211e-05, 6.10560000000003e-05, 6.084699999999929e-05, 6.086100000000233e-05]</msg>
<status status="PASS" starttime="20201029 18:15:37.456" endtime="20201029 18:15:37.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.451" endtime="20201029 18:15:37.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.463" endtime="20201029 18:15:37.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.462" endtime="20201029 18:15:37.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.461" endtime="20201029 18:15:37.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.103" endtime="20201029 18:15:37.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.103" endtime="20201029 18:15:37.484"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.493" endtime="20201029 18:15:37.509"></status>
</kw>
<msg timestamp="20201029 18:15:37.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.491" endtime="20201029 18:15:37.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.511" endtime="20201029 18:15:37.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.513" endtime="20201029 18:15:37.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.488" endtime="20201029 18:15:37.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.486" endtime="20201029 18:15:37.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.522" endtime="20201029 18:15:37.807"></status>
</kw>
<msg timestamp="20201029 18:15:37.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021671583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.521" endtime="20201029 18:15:37.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021671583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.811" endtime="20201029 18:15:37.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.820" endtime="20201029 18:15:37.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.518" endtime="20201029 18:15:37.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.516" endtime="20201029 18:15:37.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.826" level="INFO">${RESULT} = [{'diff': 6.230599999999809e-05}, {'diff': 6.18340000000002e-05}, {'diff': 6.204199999999827e-05}, {'diff': 6.215300000000229e-05}, {'diff': 6.197299999999989e-05}, {'diff': 6.230599999999809e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:37.823" endtime="20201029 18:15:37.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:37.831" level="INFO">${ACCURACY} = {'diff': [6.230599999999809e-05, 6.18340000000002e-05, 6.204199999999827e-05, 6.215300000000229e-05, 6.197299999999989e-05, 6.230599999999809e-05, 6.187499999999943e-05, 6.181900000000115e-05, 6.17220...</msg>
<status status="PASS" starttime="20201029 18:15:37.827" endtime="20201029 18:15:37.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.836" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:15:37.835" endtime="20201029 18:15:37.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.838" level="INFO">VALUE: [6.230599999999809e-05, 6.18340000000002e-05, 6.204199999999827e-05, 6.215300000000229e-05, 6.197299999999989e-05, 6.230599999999809e-05, 6.187499999999943e-05, 6.181900000000115e-05, 6.172200000000017e-05, 6.230600000000155e-05, 6.17629999999994e-05, 6.179100000000201e-05, 6.20829999999975e-05, 6.212499999999968e-05, 6.209700000000054e-05, 6.22080000000011e-05, 6.206899999999793e-05, 6.208300000000097e-05, 6.223600000000024e-05, 6.209699999999707e-05, 6.187499999999943e-05, 6.173599999999974e-05, 6.222300000000014e-05, 6.211100000000011e-05, 6.187499999999943e-05, 6.209800000000001e-05, 6.177700000000244e-05, 6.170900000000007e-05, 6.198700000000293e-05, 6.202800000000216e-05, 6.194499999999728e-05, 6.19300000000017e-05, 6.218099999999796e-05, 6.173599999999974e-05, 6.179199999999802e-05, 6.184700000000029e-05, 6.223600000000024e-05, 6.216599999999892e-05, 6.180500000000158e-05, 6.172200000000017e-05, 6.172200000000017e-05, 6.222200000000067e-05, 6.179199999999802e-05, 6.216700000000186e-05, 6.190299999999857e-05, 6.211100000000011e-05, 6.209700000000054e-05, 6.17080000000006e-05, 6.207000000000087e-05, 6.222200000000067e-05]</msg>
<status status="PASS" starttime="20201029 18:15:37.837" endtime="20201029 18:15:37.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.832" endtime="20201029 18:15:37.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.843" endtime="20201029 18:15:37.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.842" endtime="20201029 18:15:37.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.840" endtime="20201029 18:15:37.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.485" endtime="20201029 18:15:37.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.484" endtime="20201029 18:15:37.864"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.872" endtime="20201029 18:15:37.890"></status>
</kw>
<msg timestamp="20201029 18:15:37.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.871" endtime="20201029 18:15:37.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.891" endtime="20201029 18:15:37.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.894" endtime="20201029 18:15:37.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.868" endtime="20201029 18:15:37.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.866" endtime="20201029 18:15:37.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.903" endtime="20201029 18:15:38.189"></status>
</kw>
<msg timestamp="20201029 18:15:38.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.901" endtime="20201029 18:15:38.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.194" endtime="20201029 18:15:38.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.202" endtime="20201029 18:15:38.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.899" endtime="20201029 18:15:38.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.897" endtime="20201029 18:15:38.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.208" level="INFO">${RESULT} = [{'diff': 6.347300000000139e-05}, {'diff': 6.293099999999871e-05}, {'diff': 6.269400000000203e-05}, {'diff': 6.269399999999856e-05}, {'diff': 6.270799999999813e-05}, {'diff': 6.32500000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:38.205" endtime="20201029 18:15:38.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:38.212" level="INFO">${ACCURACY} = {'diff': [6.347300000000139e-05, 6.293099999999871e-05, 6.269400000000203e-05, 6.269399999999856e-05, 6.270799999999813e-05, 6.32500000000008e-05, 6.30829999999985e-05, 6.32080000000021e-05, 6.3236000...</msg>
<status status="PASS" starttime="20201029 18:15:38.209" endtime="20201029 18:15:38.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.217" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:15:38.216" endtime="20201029 18:15:38.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.219" level="INFO">VALUE: [6.347300000000139e-05, 6.293099999999871e-05, 6.269400000000203e-05, 6.269399999999856e-05, 6.270799999999813e-05, 6.32500000000008e-05, 6.30829999999985e-05, 6.32080000000021e-05, 6.323600000000124e-05, 6.327799999999995e-05, 6.287500000000043e-05, 6.305599999999884e-05, 6.298600000000099e-05, 6.308300000000197e-05, 6.332000000000212e-05, 6.32219999999982e-05, 6.279199999999902e-05, 6.318099999999896e-05, 6.304200000000273e-05, 6.30699999999984e-05, 6.290299999999957e-05, 6.293100000000218e-05, 6.316699999999939e-05, 6.304199999999927e-05, 6.280499999999911e-05, 6.29020000000001e-05, 6.291699999999914e-05, 6.286100000000086e-05, 6.311100000000111e-05, 6.2889e-05, 6.311100000000111e-05, 6.27219999999977e-05, 6.315299999999982e-05, 6.297200000000142e-05, 6.268000000000246e-05, 6.281900000000215e-05, 6.269499999999803e-05, 6.304199999999927e-05, 6.281899999999868e-05, 6.277800000000291e-05, 6.27080000000016e-05, 6.272200000000117e-05, 6.313900000000025e-05, 6.284700000000129e-05, 6.268099999999846e-05, 6.32080000000021e-05, 6.316699999999939e-05, 6.312500000000068e-05, 6.263899999999975e-05, 6.288800000000053e-05]</msg>
<status status="PASS" starttime="20201029 18:15:38.218" endtime="20201029 18:15:38.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.213" endtime="20201029 18:15:38.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.224" endtime="20201029 18:15:38.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.223" endtime="20201029 18:15:38.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.222" endtime="20201029 18:15:38.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.865" endtime="20201029 18:15:38.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.864" endtime="20201029 18:15:38.245"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.254" endtime="20201029 18:15:38.271"></status>
</kw>
<msg timestamp="20201029 18:15:38.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.252" endtime="20201029 18:15:38.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.273" endtime="20201029 18:15:38.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.275" endtime="20201029 18:15:38.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.250" endtime="20201029 18:15:38.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.248" endtime="20201029 18:15:38.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.285" endtime="20201029 18:15:38.570"></status>
</kw>
<msg timestamp="20201029 18:15:38.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022763333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022827958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.283" endtime="20201029 18:15:38.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022763333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022827958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.575" endtime="20201029 18:15:38.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.583" endtime="20201029 18:15:38.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.280" endtime="20201029 18:15:38.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.278" endtime="20201029 18:15:38.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.589" level="INFO">${RESULT} = [{'diff': 6.462499999999871e-05}, {'diff': 6.395799999999938e-05}, {'diff': 6.400000000000156e-05}, {'diff': 6.377800000000045e-05}, {'diff': 6.369399999999956e-05}, {'diff': 6.398600000000199e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:38.586" endtime="20201029 18:15:38.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:38.594" level="INFO">${ACCURACY} = {'diff': [6.462499999999871e-05, 6.395799999999938e-05, 6.400000000000156e-05, 6.377800000000045e-05, 6.369399999999956e-05, 6.398600000000199e-05, 6.37080000000026e-05, 6.382000000000262e-05, 6.38609...</msg>
<status status="PASS" starttime="20201029 18:15:38.590" endtime="20201029 18:15:38.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.598" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:15:38.597" endtime="20201029 18:15:38.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.601" level="INFO">VALUE: [6.462499999999871e-05, 6.395799999999938e-05, 6.400000000000156e-05, 6.377800000000045e-05, 6.369399999999956e-05, 6.398600000000199e-05, 6.37080000000026e-05, 6.382000000000262e-05, 6.386099999999839e-05, 6.369499999999903e-05, 6.373600000000174e-05, 6.376400000000088e-05, 6.37500000000013e-05, 6.400000000000156e-05, 6.397300000000189e-05, 6.387500000000143e-05, 6.372200000000217e-05, 6.39020000000011e-05, 6.363800000000128e-05, 6.37080000000026e-05, 6.3889000000001e-05, 6.367999999999999e-05, 6.40280000000007e-05, 6.384699999999882e-05, 6.365300000000032e-05, 6.376400000000088e-05, 6.381899999999968e-05, 6.411100000000211e-05, 6.369399999999956e-05, 6.387499999999796e-05, 6.40699999999994e-05, 6.413900000000125e-05, 6.381999999999916e-05, 6.369499999999903e-05, 6.415300000000082e-05, 6.362499999999771e-05, 6.386100000000186e-05, 6.383399999999873e-05, 6.427800000000095e-05, 6.376400000000088e-05, 6.39439999999998e-05, 6.367999999999999e-05, 6.373599999999827e-05, 6.383299999999925e-05, 6.387500000000143e-05, 6.366600000000042e-05, 6.398600000000199e-05, 6.398600000000199e-05, 6.398600000000199e-05, 6.3889000000001e-05]</msg>
<status status="PASS" starttime="20201029 18:15:38.599" endtime="20201029 18:15:38.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.594" endtime="20201029 18:15:38.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.606" endtime="20201029 18:15:38.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.605" endtime="20201029 18:15:38.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.604" endtime="20201029 18:15:38.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.246" endtime="20201029 18:15:38.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.245" endtime="20201029 18:15:38.627"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.636" endtime="20201029 18:15:38.656"></status>
</kw>
<msg timestamp="20201029 18:15:38.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.634" endtime="20201029 18:15:38.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.658" endtime="20201029 18:15:38.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.661" endtime="20201029 18:15:38.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.632" endtime="20201029 18:15:38.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.630" endtime="20201029 18:15:38.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.676" endtime="20201029 18:15:38.961"></status>
</kw>
<msg timestamp="20201029 18:15:38.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.674" endtime="20201029 18:15:38.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.965" endtime="20201029 18:15:38.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.973" endtime="20201029 18:15:38.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.671" endtime="20201029 18:15:38.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.667" endtime="20201029 18:15:38.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.979" level="INFO">${RESULT} = [{'diff': 6.586100000000039e-05}, {'diff': 6.518099999999749e-05}, {'diff': 6.490199999999863e-05}, {'diff': 6.494399999999734e-05}, {'diff': 6.50280000000017e-05}, {'diff': 6.47639999999984e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:38.976" endtime="20201029 18:15:38.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:38.984" level="INFO">${ACCURACY} = {'diff': [6.586100000000039e-05, 6.518099999999749e-05, 6.490199999999863e-05, 6.494399999999734e-05, 6.50280000000017e-05, 6.47639999999984e-05, 6.482000000000016e-05, 6.473599999999927e-05, 6.469400...</msg>
<status status="PASS" starttime="20201029 18:15:38.980" endtime="20201029 18:15:38.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.989" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:15:38.988" endtime="20201029 18:15:38.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.991" level="INFO">VALUE: [6.586100000000039e-05, 6.518099999999749e-05, 6.490199999999863e-05, 6.494399999999734e-05, 6.50280000000017e-05, 6.47639999999984e-05, 6.482000000000016e-05, 6.473599999999927e-05, 6.469400000000056e-05, 6.523600000000324e-05, 6.491600000000167e-05, 6.501400000000213e-05, 6.512499999999921e-05, 6.50830000000005e-05, 6.50830000000005e-05, 6.483300000000025e-05, 6.483399999999973e-05, 6.488899999999853e-05, 6.476400000000188e-05, 6.49029999999981e-05, 6.482000000000016e-05, 6.513899999999878e-05, 6.486099999999939e-05, 6.50700000000004e-05, 6.468100000000046e-05, 6.509700000000007e-05, 6.466700000000089e-05, 6.502699999999875e-05, 6.49159999999982e-05, 6.52220000000002e-05, 6.481900000000068e-05, 6.493000000000124e-05, 6.519400000000106e-05, 6.504099999999832e-05, 6.470800000000013e-05, 6.495800000000038e-05, 6.497199999999995e-05, 6.469400000000056e-05, 6.519400000000106e-05, 6.494500000000028e-05, 6.479199999999755e-05, 6.487499999999896e-05, 6.474999999999884e-05, 6.484699999999982e-05, 6.484800000000276e-05, 6.515299999999835e-05, 6.480600000000059e-05, 6.479100000000154e-05, 6.493000000000124e-05, 6.519499999999706e-05]</msg>
<status status="PASS" starttime="20201029 18:15:38.990" endtime="20201029 18:15:38.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.985" endtime="20201029 18:15:38.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.996" endtime="20201029 18:15:39.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.995" endtime="20201029 18:15:39.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.994" endtime="20201029 18:15:39.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.628" endtime="20201029 18:15:39.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.627" endtime="20201029 18:15:39.017"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.026" endtime="20201029 18:15:39.042"></status>
</kw>
<msg timestamp="20201029 18:15:39.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.024" endtime="20201029 18:15:39.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.044" endtime="20201029 18:15:39.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.046" endtime="20201029 18:15:39.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.021" endtime="20201029 18:15:39.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.019" endtime="20201029 18:15:39.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.055" endtime="20201029 18:15:39.342"></status>
</kw>
<msg timestamp="20201029 18:15:39.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022156583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.054" endtime="20201029 18:15:39.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022156583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.346" endtime="20201029 18:15:39.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.355" endtime="20201029 18:15:39.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.051" endtime="20201029 18:15:39.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.050" endtime="20201029 18:15:39.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.361" level="INFO">${RESULT} = [{'diff': 6.662500000000071e-05}, {'diff': 6.630499999999914e-05}, {'diff': 6.616700000000239e-05}, {'diff': 6.605600000000184e-05}, {'diff': 6.57220000000007e-05}, {'diff': 6.583299999999778e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:39.358" endtime="20201029 18:15:39.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:39.365" level="INFO">${ACCURACY} = {'diff': [6.662500000000071e-05, 6.630499999999914e-05, 6.616700000000239e-05, 6.605600000000184e-05, 6.57220000000007e-05, 6.583299999999778e-05, 6.615299999999935e-05, 6.608400000000098e-05, 6.60700...</msg>
<status status="PASS" starttime="20201029 18:15:39.362" endtime="20201029 18:15:39.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.370" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:15:39.369" endtime="20201029 18:15:39.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.372" level="INFO">VALUE: [6.662500000000071e-05, 6.630499999999914e-05, 6.616700000000239e-05, 6.605600000000184e-05, 6.57220000000007e-05, 6.583299999999778e-05, 6.615299999999935e-05, 6.608400000000098e-05, 6.60700000000014e-05, 6.577799999999898e-05, 6.579099999999907e-05, 6.568100000000146e-05, 6.615299999999935e-05, 6.576400000000288e-05, 6.59159999999992e-05, 6.57220000000007e-05, 6.586100000000039e-05, 6.599999999999662e-05, 6.57639999999994e-05, 6.605499999999889e-05, 6.62639999999999e-05, 6.581900000000168e-05, 6.57639999999994e-05, 6.602799999999923e-05, 6.568000000000199e-05, 6.584700000000082e-05, 6.60419999999988e-05, 6.587499999999996e-05, 6.582000000000116e-05, 6.605599999999837e-05, 6.612500000000021e-05, 6.62090000000011e-05, 6.611100000000064e-05, 6.619499999999806e-05, 6.58480000000003e-05, 6.606899999999846e-05, 6.580600000000159e-05, 6.62359999999973e-05, 6.573600000000027e-05, 6.620800000000163e-05, 6.57769999999995e-05, 6.580499999999864e-05, 6.600000000000009e-05, 6.600000000000009e-05, 6.593100000000171e-05, 6.598600000000052e-05, 6.567999999999852e-05, 6.612500000000021e-05, 6.587499999999996e-05, 6.593100000000171e-05]</msg>
<status status="PASS" starttime="20201029 18:15:39.371" endtime="20201029 18:15:39.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.366" endtime="20201029 18:15:39.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:39.377" endtime="20201029 18:15:39.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.376" endtime="20201029 18:15:39.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.374" endtime="20201029 18:15:39.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.018" endtime="20201029 18:15:39.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.017" endtime="20201029 18:15:39.398"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.407" endtime="20201029 18:15:39.427"></status>
</kw>
<msg timestamp="20201029 18:15:39.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.405" endtime="20201029 18:15:39.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.429" endtime="20201029 18:15:39.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.432" endtime="20201029 18:15:39.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.403" endtime="20201029 18:15:39.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.400" endtime="20201029 18:15:39.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.441" endtime="20201029 18:15:39.725"></status>
</kw>
<msg timestamp="20201029 18:15:39.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025448722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025515917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.439" endtime="20201029 18:15:39.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025448722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025515917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.730" endtime="20201029 18:15:39.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.738" endtime="20201029 18:15:39.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.436" endtime="20201029 18:15:39.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.435" endtime="20201029 18:15:39.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.744" level="INFO">${RESULT} = [{'diff': 6.719499999999906e-05}, {'diff': 6.702800000000023e-05}, {'diff': 6.700000000000109e-05}, {'diff': 6.680599999999912e-05}, {'diff': 6.663900000000028e-05}, {'diff': 6.701400000000066e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:39.741" endtime="20201029 18:15:39.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:39.749" level="INFO">${ACCURACY} = {'diff': [6.719499999999906e-05, 6.702800000000023e-05, 6.700000000000109e-05, 6.680599999999912e-05, 6.663900000000028e-05, 6.701400000000066e-05, 6.665299999999985e-05, 6.72090000000021e-05, 6.70270...</msg>
<status status="PASS" starttime="20201029 18:15:39.745" endtime="20201029 18:15:39.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.753" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:15:39.752" endtime="20201029 18:15:39.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.755" level="INFO">VALUE: [6.719499999999906e-05, 6.702800000000023e-05, 6.700000000000109e-05, 6.680599999999912e-05, 6.663900000000028e-05, 6.701400000000066e-05, 6.665299999999985e-05, 6.72090000000021e-05, 6.702700000000075e-05, 6.681899999999921e-05, 6.712500000000121e-05, 6.686100000000139e-05, 6.72220000000022e-05, 6.673600000000127e-05, 6.687499999999749e-05, 6.706899999999946e-05, 6.695799999999891e-05, 6.69160000000002e-05, 6.679199999999955e-05, 6.695800000000238e-05, 6.681899999999921e-05, 6.715300000000035e-05, 6.691699999999967e-05, 6.675000000000084e-05, 6.720799999999916e-05, 6.669500000000203e-05, 6.70419999999998e-05, 6.669500000000203e-05, 6.673600000000127e-05, 6.679199999999955e-05, 6.69030000000001e-05, 6.680600000000259e-05, 6.701400000000066e-05, 6.662500000000071e-05, 6.713800000000131e-05, 6.702700000000075e-05, 6.713800000000131e-05, 6.723600000000177e-05, 6.713900000000078e-05, 6.686100000000139e-05, 6.701400000000066e-05, 6.681899999999921e-05, 6.680599999999912e-05, 6.709700000000207e-05, 6.67220000000017e-05, 6.675000000000084e-05, 6.715300000000035e-05, 6.702800000000023e-05, 6.666699999999942e-05, 6.688900000000053e-05]</msg>
<status status="PASS" starttime="20201029 18:15:39.754" endtime="20201029 18:15:39.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.749" endtime="20201029 18:15:39.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:39.761" endtime="20201029 18:15:39.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.760" endtime="20201029 18:15:39.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.759" endtime="20201029 18:15:39.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.399" endtime="20201029 18:15:39.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.398" endtime="20201029 18:15:39.782"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.791" endtime="20201029 18:15:39.807"></status>
</kw>
<msg timestamp="20201029 18:15:39.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.789" endtime="20201029 18:15:39.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.809" endtime="20201029 18:15:39.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.811" endtime="20201029 18:15:39.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.786" endtime="20201029 18:15:39.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.784" endtime="20201029 18:15:39.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.820" endtime="20201029 18:15:40.105"></status>
</kw>
<msg timestamp="20201029 18:15:40.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.819" endtime="20201029 18:15:40.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.110" endtime="20201029 18:15:40.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.118" endtime="20201029 18:15:40.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.816" endtime="20201029 18:15:40.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.815" endtime="20201029 18:15:40.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.124" level="INFO">${RESULT} = [{'diff': 6.799999999999862e-05}, {'diff': 6.806900000000046e-05}, {'diff': 6.801400000000166e-05}, {'diff': 6.801400000000166e-05}, {'diff': 6.816699999999745e-05}, {'diff': 6.798599999999905e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:40.121" endtime="20201029 18:15:40.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:40.129" level="INFO">${ACCURACY} = {'diff': [6.799999999999862e-05, 6.806900000000046e-05, 6.801400000000166e-05, 6.801400000000166e-05, 6.816699999999745e-05, 6.798599999999905e-05, 6.797199999999948e-05, 6.77640000000014e-05, 6.81670...</msg>
<status status="PASS" starttime="20201029 18:15:40.125" endtime="20201029 18:15:40.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.134" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:15:40.133" endtime="20201029 18:15:40.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.136" level="INFO">VALUE: [6.799999999999862e-05, 6.806900000000046e-05, 6.801400000000166e-05, 6.801400000000166e-05, 6.816699999999745e-05, 6.798599999999905e-05, 6.797199999999948e-05, 6.77640000000014e-05, 6.816700000000092e-05, 6.77229999999987e-05, 6.793100000000024e-05, 6.802699999999828e-05, 6.804100000000132e-05, 6.820899999999963e-05, 6.80969999999996e-05, 6.813799999999884e-05, 6.77640000000014e-05, 6.781900000000021e-05, 6.768000000000052e-05, 6.769400000000009e-05, 6.800000000000209e-05, 6.79030000000011e-05, 6.802800000000123e-05, 6.806900000000046e-05, 6.781999999999969e-05, 6.80969999999996e-05, 6.812499999999874e-05, 6.77640000000014e-05, 6.77640000000014e-05, 6.781999999999969e-05, 6.77640000000014e-05, 6.788900000000153e-05, 6.769499999999956e-05, 6.799999999999862e-05, 6.812500000000221e-05, 6.822199999999973e-05, 6.806900000000046e-05, 6.772199999999923e-05, 6.819400000000059e-05, 6.80839999999995e-05, 6.812499999999874e-05, 6.820799999999669e-05, 6.813899999999831e-05, 6.799999999999862e-05, 6.798600000000252e-05, 6.80420000000008e-05, 6.799999999999862e-05, 6.831900000000071e-05, 6.793100000000024e-05, 6.794499999999981e-05]</msg>
<status status="PASS" starttime="20201029 18:15:40.135" endtime="20201029 18:15:40.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.130" endtime="20201029 18:15:40.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.141" endtime="20201029 18:15:40.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.140" endtime="20201029 18:15:40.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.139" endtime="20201029 18:15:40.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.783" endtime="20201029 18:15:40.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.782" endtime="20201029 18:15:40.162"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.171" endtime="20201029 18:15:40.188"></status>
</kw>
<msg timestamp="20201029 18:15:40.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.169" endtime="20201029 18:15:40.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.190" endtime="20201029 18:15:40.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.192" endtime="20201029 18:15:40.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.166" endtime="20201029 18:15:40.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.164" endtime="20201029 18:15:40.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.201" endtime="20201029 18:15:40.487"></status>
</kw>
<msg timestamp="20201029 18:15:40.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021656278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021725472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.200" endtime="20201029 18:15:40.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021656278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021725472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.492" endtime="20201029 18:15:40.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.500" endtime="20201029 18:15:40.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.197" endtime="20201029 18:15:40.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.195" endtime="20201029 18:15:40.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.506" level="INFO">${RESULT} = [{'diff': 6.919399999999812e-05}, {'diff': 6.926399999999944e-05}, {'diff': 6.870800000000066e-05}, {'diff': 6.90840000000005e-05}, {'diff': 6.92360000000003e-05}, {'diff': 6.91109999999967e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:15:40.503" endtime="20201029 18:15:40.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:40.511" level="INFO">${ACCURACY} = {'diff': [6.919399999999812e-05, 6.926399999999944e-05, 6.870800000000066e-05, 6.90840000000005e-05, 6.92360000000003e-05, 6.91109999999967e-05, 6.884799999999983e-05, 6.877799999999851e-05, 6.8986000...</msg>
<status status="PASS" starttime="20201029 18:15:40.507" endtime="20201029 18:15:40.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.515" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:15:40.514" endtime="20201029 18:15:40.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.518" level="INFO">VALUE: [6.919399999999812e-05, 6.926399999999944e-05, 6.870800000000066e-05, 6.90840000000005e-05, 6.92360000000003e-05, 6.91109999999967e-05, 6.884799999999983e-05, 6.877799999999851e-05, 6.898600000000005e-05, 6.859799999999958e-05, 6.898700000000299e-05, 6.876399999999894e-05, 6.880499999999817e-05, 6.884700000000035e-05, 6.905499999999842e-05, 6.869400000000109e-05, 6.883400000000026e-05, 6.905500000000189e-05, 6.898600000000005e-05, 6.897199999999701e-05, 6.877799999999851e-05, 6.89169999999982e-05, 6.888900000000253e-05, 6.872300000000317e-05, 6.875000000000284e-05, 6.911100000000017e-05, 6.919500000000106e-05, 6.891700000000167e-05, 6.90559999999979e-05, 6.888900000000253e-05, 6.920900000000063e-05, 6.894500000000081e-05, 6.884700000000035e-05, 6.894499999999734e-05, 6.919400000000159e-05, 6.895800000000091e-05, 6.877800000000198e-05, 6.876399999999894e-05, 6.929200000000205e-05, 6.886099999999992e-05, 6.895799999999744e-05, 6.886099999999992e-05, 6.906899999999799e-05, 6.895800000000091e-05, 6.879199999999808e-05, 6.862499999999924e-05, 6.87359999999998e-05, 6.868099999999752e-05, 6.897200000000048e-05, 6.915299999999888e-05]</msg>
<status status="PASS" starttime="20201029 18:15:40.516" endtime="20201029 18:15:40.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.512" endtime="20201029 18:15:40.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.523" endtime="20201029 18:15:40.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.521" endtime="20201029 18:15:40.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.520" endtime="20201029 18:15:40.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.163" endtime="20201029 18:15:40.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.162" endtime="20201029 18:15:40.543"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.552" endtime="20201029 18:15:40.571"></status>
</kw>
<msg timestamp="20201029 18:15:40.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.550" endtime="20201029 18:15:40.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.572" endtime="20201029 18:15:40.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.575" endtime="20201029 18:15:40.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.548" endtime="20201029 18:15:40.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.546" endtime="20201029 18:15:40.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.584" endtime="20201029 18:15:40.870"></status>
</kw>
<msg timestamp="20201029 18:15:40.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.582" endtime="20201029 18:15:40.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.874" endtime="20201029 18:15:40.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.882" endtime="20201029 18:15:40.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.580" endtime="20201029 18:15:40.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.578" endtime="20201029 18:15:40.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.889" level="INFO">${RESULT} = [{'diff': 7.090199999999769e-05}, {'diff': 7.038900000000056e-05}, {'diff': 7.00970000000016e-05}, {'diff': 7.005499999999942e-05}, {'diff': 7.000000000000062e-05}, {'diff': 7.020799999999869e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:40.885" endtime="20201029 18:15:40.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:40.893" level="INFO">${ACCURACY} = {'diff': [7.090199999999769e-05, 7.038900000000056e-05, 7.00970000000016e-05, 7.005499999999942e-05, 7.000000000000062e-05, 7.020799999999869e-05, 6.984699999999788e-05, 7.008300000000203e-05, 7.01809...</msg>
<status status="PASS" starttime="20201029 18:15:40.889" endtime="20201029 18:15:40.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.897" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:15:40.896" endtime="20201029 18:15:40.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.900" level="INFO">VALUE: [7.090199999999769e-05, 7.038900000000056e-05, 7.00970000000016e-05, 7.005499999999942e-05, 7.000000000000062e-05, 7.020799999999869e-05, 6.984699999999788e-05, 7.008300000000203e-05, 7.018099999999902e-05, 6.998600000000105e-05, 6.994499999999834e-05, 6.970900000000113e-05, 6.983300000000178e-05, 7.013900000000031e-05, 6.984799999999736e-05, 7.001300000000071e-05, 6.975000000000037e-05, 7.026400000000044e-05, 6.97909999999996e-05, 7.015299999999988e-05, 6.976399999999994e-05, 6.962500000000024e-05, 7.012500000000074e-05, 7.012499999999727e-05, 6.988900000000006e-05, 7.015299999999988e-05, 7.00840000000015e-05, 6.983299999999831e-05, 6.995900000000138e-05, 6.972200000000123e-05, 7.00970000000016e-05, 7.000000000000062e-05, 6.993099999999877e-05, 6.979199999999908e-05, 6.97360000000008e-05, 6.990299999999963e-05, 6.998599999999758e-05, 6.977799999999951e-05, 6.990299999999963e-05, 6.969500000000156e-05, 6.970799999999819e-05, 6.965199999999991e-05, 6.977799999999951e-05, 7.031899999999924e-05, 7.020899999999816e-05, 6.983300000000178e-05, 7.013900000000031e-05, 7.002799999999976e-05, 7.008299999999856e-05, 7.023599999999783e-05]</msg>
<status status="PASS" starttime="20201029 18:15:40.898" endtime="20201029 18:15:40.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.893" endtime="20201029 18:15:40.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.907" endtime="20201029 18:15:40.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.905" endtime="20201029 18:15:40.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.904" endtime="20201029 18:15:40.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.544" endtime="20201029 18:15:40.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.544" endtime="20201029 18:15:40.928"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.936" endtime="20201029 18:15:40.954"></status>
</kw>
<msg timestamp="20201029 18:15:40.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.935" endtime="20201029 18:15:40.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.956" endtime="20201029 18:15:40.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.958" endtime="20201029 18:15:40.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.932" endtime="20201029 18:15:40.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.930" endtime="20201029 18:15:40.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.967" endtime="20201029 18:15:41.253"></status>
</kw>
<msg timestamp="20201029 18:15:41.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022063903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.966" endtime="20201029 18:15:41.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022063903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.257" endtime="20201029 18:15:41.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.266" endtime="20201029 18:15:41.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.963" endtime="20201029 18:15:41.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.961" endtime="20201029 18:15:41.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.272" level="INFO">${RESULT} = [{'diff': 7.179199999999761e-05}, {'diff': 7.127800000000101e-05}, {'diff': 7.12910000000011e-05}, {'diff': 7.097200000000248e-05}, {'diff': 7.109699999999913e-05}, {'diff': 7.113799999999837e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:41.269" endtime="20201029 18:15:41.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:41.277" level="INFO">${ACCURACY} = {'diff': [7.179199999999761e-05, 7.127800000000101e-05, 7.12910000000011e-05, 7.097200000000248e-05, 7.109699999999913e-05, 7.113799999999837e-05, 7.119400000000012e-05, 7.075000000000137e-05, 7.09170...</msg>
<status status="PASS" starttime="20201029 18:15:41.273" endtime="20201029 18:15:41.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.282" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:15:41.281" endtime="20201029 18:15:41.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.284" level="INFO">VALUE: [7.179199999999761e-05, 7.127800000000101e-05, 7.12910000000011e-05, 7.097200000000248e-05, 7.109699999999913e-05, 7.113799999999837e-05, 7.119400000000012e-05, 7.075000000000137e-05, 7.09170000000002e-05, 7.087500000000149e-05, 7.097200000000248e-05, 7.122200000000273e-05, 7.069399999999962e-05, 7.130600000000015e-05, 7.094399999999987e-05, 7.095799999999944e-05, 7.133299999999981e-05, 7.083300000000278e-05, 7.065299999999691e-05, 7.123700000000177e-05, 7.111199999999818e-05, 7.087500000000149e-05, 7.118100000000002e-05, 7.12910000000011e-05, 7.073700000000127e-05, 7.072199999999876e-05, 7.11109999999987e-05, 7.118000000000055e-05, 7.101399999999772e-05, 7.062500000000124e-05, 7.093099999999977e-05, 7.07360000000018e-05, 7.076399999999747e-05, 7.11109999999987e-05, 7.106999999999947e-05, 7.125000000000187e-05, 7.07360000000018e-05, 7.080599999999965e-05, 7.099999999999815e-05, 7.108399999999904e-05, 7.108399999999904e-05, 7.113899999999784e-05, 7.095899999999891e-05, 7.09170000000002e-05, 7.111200000000165e-05, 7.087499999999802e-05, 7.098699999999805e-05, 7.070799999999919e-05, 7.090200000000116e-05, 7.088900000000106e-05]</msg>
<status status="PASS" starttime="20201029 18:15:41.283" endtime="20201029 18:15:41.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.278" endtime="20201029 18:15:41.286"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:41.289" endtime="20201029 18:15:41.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.288" endtime="20201029 18:15:41.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.287" endtime="20201029 18:15:41.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.929" endtime="20201029 18:15:41.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.928" endtime="20201029 18:15:41.310"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.321" endtime="20201029 18:15:41.338"></status>
</kw>
<msg timestamp="20201029 18:15:41.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.319" endtime="20201029 18:15:41.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.340" endtime="20201029 18:15:41.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.342" endtime="20201029 18:15:41.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.316" endtime="20201029 18:15:41.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.314" endtime="20201029 18:15:41.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.352" endtime="20201029 18:15:41.638"></status>
</kw>
<msg timestamp="20201029 18:15:41.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023729056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023801097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.350" endtime="20201029 18:15:41.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023729056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023801097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.643" endtime="20201029 18:15:41.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.651" endtime="20201029 18:15:41.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.347" endtime="20201029 18:15:41.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.346" endtime="20201029 18:15:41.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.657" level="INFO">${RESULT} = [{'diff': 7.204100000000185e-05}, {'diff': 7.234700000000038e-05}, {'diff': 7.177799999999804e-05}, {'diff': 7.188900000000206e-05}, {'diff': 7.194500000000034e-05}, {'diff': 7.172299999999923e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:41.654" endtime="20201029 18:15:41.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:41.662" level="INFO">${ACCURACY} = {'diff': [7.204100000000185e-05, 7.234700000000038e-05, 7.177799999999804e-05, 7.188900000000206e-05, 7.194500000000034e-05, 7.172299999999923e-05, 7.2069999999997e-05, 7.180600000000065e-05, 7.186200...</msg>
<status status="PASS" starttime="20201029 18:15:41.658" endtime="20201029 18:15:41.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.666" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:15:41.665" endtime="20201029 18:15:41.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.669" level="INFO">VALUE: [7.204100000000185e-05, 7.234700000000038e-05, 7.177799999999804e-05, 7.188900000000206e-05, 7.194500000000034e-05, 7.172299999999923e-05, 7.2069999999997e-05, 7.180600000000065e-05, 7.18620000000024e-05, 7.17499999999989e-05, 7.2069000000001e-05, 7.181900000000074e-05, 7.212499999999927e-05, 7.201399999999872e-05, 7.202700000000228e-05, 7.176400000000194e-05, 7.183300000000031e-05, 7.206899999999752e-05, 7.230500000000167e-05, 7.201400000000219e-05, 7.201400000000219e-05, 7.220800000000069e-05, 7.172199999999976e-05, 7.208300000000056e-05, 7.216699999999798e-05, 7.169500000000009e-05, 7.207000000000047e-05, 7.176399999999847e-05, 7.198599999999958e-05, 7.204199999999786e-05, 7.223599999999983e-05, 7.186099999999945e-05, 7.191600000000173e-05, 7.169499999999662e-05, 7.1762999999999e-05, 7.217999999999808e-05, 7.177699999999856e-05, 7.181900000000074e-05, 7.172199999999976e-05, 7.175000000000237e-05, 7.217999999999808e-05, 7.209700000000013e-05, 7.217999999999808e-05, 7.173599999999933e-05, 7.204200000000133e-05, 7.202799999999829e-05, 7.172199999999976e-05, 7.227799999999854e-05, 7.202799999999829e-05, 7.212499999999927e-05]</msg>
<status status="PASS" starttime="20201029 18:15:41.667" endtime="20201029 18:15:41.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.663" endtime="20201029 18:15:41.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:41.674" endtime="20201029 18:15:41.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.672" endtime="20201029 18:15:41.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.671" endtime="20201029 18:15:41.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.311" endtime="20201029 18:15:41.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.311" endtime="20201029 18:15:41.694"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.703" endtime="20201029 18:15:41.722"></status>
</kw>
<msg timestamp="20201029 18:15:41.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.701" endtime="20201029 18:15:41.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.723" endtime="20201029 18:15:41.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.726" endtime="20201029 18:15:41.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.699" endtime="20201029 18:15:41.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.697" endtime="20201029 18:15:41.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.735" endtime="20201029 18:15:42.019"></status>
</kw>
<msg timestamp="20201029 18:15:42.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022660778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022734625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.733" endtime="20201029 18:15:42.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022660778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022734625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.024" endtime="20201029 18:15:42.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.032" endtime="20201029 18:15:42.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.731" endtime="20201029 18:15:42.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.729" endtime="20201029 18:15:42.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.038" level="INFO">${RESULT} = [{'diff': 7.384700000000188e-05}, {'diff': 7.288899999999959e-05}, {'diff': 7.320899999999769e-05}, {'diff': 7.277799999999904e-05}, {'diff': 7.280600000000165e-05}, {'diff': 7.304099999999938e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:42.035" endtime="20201029 18:15:42.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:42.043" level="INFO">${ACCURACY} = {'diff': [7.384700000000188e-05, 7.288899999999959e-05, 7.320899999999769e-05, 7.277799999999904e-05, 7.280600000000165e-05, 7.304099999999938e-05, 7.268099999999805e-05, 7.304099999999938e-05, 7.2847...</msg>
<status status="PASS" starttime="20201029 18:15:42.039" endtime="20201029 18:15:42.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.047" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:15:42.046" endtime="20201029 18:15:42.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.050" level="INFO">VALUE: [7.384700000000188e-05, 7.288899999999959e-05, 7.320899999999769e-05, 7.277799999999904e-05, 7.280600000000165e-05, 7.304099999999938e-05, 7.268099999999805e-05, 7.304099999999938e-05, 7.284700000000088e-05, 7.273600000000033e-05, 7.311099999999723e-05, 7.272200000000076e-05, 7.300000000000015e-05, 7.320799999999822e-05, 7.269400000000162e-05, 7.297200000000101e-05, 7.298600000000058e-05, 7.30829999999981e-05, 7.266699999999848e-05, 7.283300000000131e-05, 7.320799999999822e-05, 7.309699999999766e-05, 7.300000000000015e-05, 7.273600000000033e-05, 7.290300000000263e-05, 7.273599999999686e-05, 7.262499999999977e-05, 7.290299999999916e-05, 7.277699999999956e-05, 7.268000000000205e-05, 7.283300000000131e-05, 7.319399999999865e-05, 7.304099999999938e-05, 7.302800000000276e-05, 7.290299999999916e-05, 7.319399999999865e-05, 7.276399999999947e-05, 7.270900000000066e-05, 7.3069999999998e-05, 7.272199999999729e-05, 7.316700000000245e-05, 7.300000000000015e-05, 7.265299999999891e-05, 7.294500000000134e-05, 7.295900000000091e-05, 7.284700000000088e-05, 7.300000000000015e-05, 7.295800000000144e-05, 7.294500000000134e-05, 7.312500000000027e-05]</msg>
<status status="PASS" starttime="20201029 18:15:42.048" endtime="20201029 18:15:42.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.043" endtime="20201029 18:15:42.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.055" endtime="20201029 18:15:42.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.054" endtime="20201029 18:15:42.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.053" endtime="20201029 18:15:42.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.695" endtime="20201029 18:15:42.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.695" endtime="20201029 18:15:42.076"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.085" endtime="20201029 18:15:42.102"></status>
</kw>
<msg timestamp="20201029 18:15:42.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.083" endtime="20201029 18:15:42.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.104" endtime="20201029 18:15:42.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.106" endtime="20201029 18:15:42.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.081" endtime="20201029 18:15:42.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.078" endtime="20201029 18:15:42.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.115" endtime="20201029 18:15:42.401"></status>
</kw>
<msg timestamp="20201029 18:15:42.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.114" endtime="20201029 18:15:42.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.405" endtime="20201029 18:15:42.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.413" endtime="20201029 18:15:42.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.111" endtime="20201029 18:15:42.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.110" endtime="20201029 18:15:42.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.420" level="INFO">${RESULT} = [{'diff': 7.484699999999941e-05}, {'diff': 7.429199999999664e-05}, {'diff': 7.409699999999866e-05}, {'diff': 7.411099999999823e-05}, {'diff': 7.411099999999823e-05}, {'diff': 7.41249999999978e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:42.417" endtime="20201029 18:15:42.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:42.425" level="INFO">${ACCURACY} = {'diff': [7.484699999999941e-05, 7.429199999999664e-05, 7.409699999999866e-05, 7.411099999999823e-05, 7.411099999999823e-05, 7.41249999999978e-05, 7.383399999999832e-05, 7.415300000000041e-05, 7.40280...</msg>
<status status="PASS" starttime="20201029 18:15:42.421" endtime="20201029 18:15:42.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.429" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:15:42.428" endtime="20201029 18:15:42.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.432" level="INFO">VALUE: [7.484699999999941e-05, 7.429199999999664e-05, 7.409699999999866e-05, 7.411099999999823e-05, 7.411099999999823e-05, 7.41249999999978e-05, 7.383399999999832e-05, 7.415300000000041e-05, 7.402800000000029e-05, 7.416699999999998e-05, 7.380599999999918e-05, 7.372300000000123e-05, 7.372199999999829e-05, 7.39439999999994e-05, 7.413800000000137e-05, 7.377800000000004e-05, 7.373600000000133e-05, 7.391600000000026e-05, 7.391699999999973e-05, 7.373600000000133e-05, 7.402800000000029e-05, 7.402800000000029e-05, 7.427800000000054e-05, 7.37500000000009e-05, 7.373600000000133e-05, 7.401400000000072e-05, 7.412500000000127e-05, 7.369500000000209e-05, 7.405599999999943e-05, 7.415300000000041e-05, 7.380599999999918e-05, 7.38049999999997e-05, 7.366699999999948e-05, 7.415200000000094e-05, 7.423600000000183e-05, 7.404100000000038e-05, 7.387500000000102e-05, 7.397200000000201e-05, 7.391600000000026e-05, 7.39439999999994e-05, 7.383300000000231e-05, 7.388900000000059e-05, 7.366699999999948e-05, 7.402800000000029e-05, 7.400000000000115e-05, 7.384700000000188e-05, 7.393100000000277e-05, 7.423600000000183e-05, 7.420799999999922e-05, 7.386100000000145e-05]</msg>
<status status="PASS" starttime="20201029 18:15:42.430" endtime="20201029 18:15:42.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.426" endtime="20201029 18:15:42.438"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.441" endtime="20201029 18:15:42.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.440" endtime="20201029 18:15:42.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.439" endtime="20201029 18:15:42.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.077" endtime="20201029 18:15:42.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.076" endtime="20201029 18:15:42.462"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.471" endtime="20201029 18:15:42.489"></status>
</kw>
<msg timestamp="20201029 18:15:42.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.469" endtime="20201029 18:15:42.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.491" endtime="20201029 18:15:42.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.493" endtime="20201029 18:15:42.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.466" endtime="20201029 18:15:42.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.464" endtime="20201029 18:15:42.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.502" endtime="20201029 18:15:42.789"></status>
</kw>
<msg timestamp="20201029 18:15:42.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022214389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.501" endtime="20201029 18:15:42.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022214389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.793" endtime="20201029 18:15:42.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.801" endtime="20201029 18:15:42.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.498" endtime="20201029 18:15:42.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.496" endtime="20201029 18:15:42.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.808" level="INFO">${RESULT} = [{'diff': 7.49310000000003e-05}, {'diff': 7.54310000000008e-05}, {'diff': 7.490300000000116e-05}, {'diff': 7.490300000000116e-05}, {'diff': 7.497299999999901e-05}, {'diff': 7.483399999999932e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:42.804" endtime="20201029 18:15:42.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:42.812" level="INFO">${ACCURACY} = {'diff': [7.49310000000003e-05, 7.54310000000008e-05, 7.490300000000116e-05, 7.490300000000116e-05, 7.497299999999901e-05, 7.483399999999932e-05, 7.47500000000019e-05, 7.511099999999923e-05, 7.4790999...</msg>
<status status="PASS" starttime="20201029 18:15:42.809" endtime="20201029 18:15:42.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.816" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:15:42.815" endtime="20201029 18:15:42.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.819" level="INFO">VALUE: [7.49310000000003e-05, 7.54310000000008e-05, 7.490300000000116e-05, 7.490300000000116e-05, 7.497299999999901e-05, 7.483399999999932e-05, 7.47500000000019e-05, 7.511099999999923e-05, 7.479099999999766e-05, 7.50830000000001e-05, 7.513900000000184e-05, 7.515299999999794e-05, 7.490300000000116e-05, 7.498699999999858e-05, 7.51110000000027e-05, 7.486099999999898e-05, 7.498599999999911e-05, 7.50830000000001e-05, 7.498599999999911e-05, 7.51249999999988e-05, 7.463900000000134e-05, 7.516699999999751e-05, 7.472199999999929e-05, 7.483399999999932e-05, 7.487499999999855e-05, 7.474999999999843e-05, 7.515200000000194e-05, 7.497200000000301e-05, 7.472199999999929e-05, 7.490200000000169e-05, 7.479099999999766e-05, 7.529199999999764e-05, 7.511099999999923e-05, 7.522199999999979e-05, 7.4763999999998e-05, 7.49440000000004e-05, 7.495799999999997e-05, 7.501399999999825e-05, 7.518100000000055e-05, 7.476400000000147e-05, 7.487500000000202e-05, 7.484799999999889e-05, 7.494499999999987e-05, 7.509799999999914e-05, 7.499999999999868e-05, 7.488899999999812e-05, 7.497300000000248e-05, 7.523599999999936e-05, 7.516599999999804e-05, 7.488800000000212e-05]</msg>
<status status="PASS" starttime="20201029 18:15:42.817" endtime="20201029 18:15:42.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.813" endtime="20201029 18:15:42.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.824" endtime="20201029 18:15:42.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.822" endtime="20201029 18:15:42.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.821" endtime="20201029 18:15:42.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.463" endtime="20201029 18:15:42.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.462" endtime="20201029 18:15:42.845"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.853" endtime="20201029 18:15:42.874"></status>
</kw>
<msg timestamp="20201029 18:15:42.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.852" endtime="20201029 18:15:42.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.876" endtime="20201029 18:15:42.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.879" endtime="20201029 18:15:42.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.849" endtime="20201029 18:15:42.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.847" endtime="20201029 18:15:42.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.888" endtime="20201029 18:15:43.174"></status>
</kw>
<msg timestamp="20201029 18:15:43.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024971861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025048097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.886" endtime="20201029 18:15:43.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024971861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025048097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.178" endtime="20201029 18:15:43.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.186" endtime="20201029 18:15:43.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.884" endtime="20201029 18:15:43.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.882" endtime="20201029 18:15:43.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.193" level="INFO">${RESULT} = [{'diff': 7.623599999999689e-05}, {'diff': 7.591699999999826e-05}, {'diff': 7.588899999999912e-05}, {'diff': 7.588899999999912e-05}, {'diff': 7.587499999999955e-05}, {'diff': 7.620900000000069e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:43.190" endtime="20201029 18:15:43.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:43.197" level="INFO">${ACCURACY} = {'diff': [7.623599999999689e-05, 7.591699999999826e-05, 7.588899999999912e-05, 7.588899999999912e-05, 7.587499999999955e-05, 7.620900000000069e-05, 7.606899999999805e-05, 7.577799999999857e-05, 7.5888...</msg>
<status status="PASS" starttime="20201029 18:15:43.194" endtime="20201029 18:15:43.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.202" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:15:43.201" endtime="20201029 18:15:43.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.204" level="INFO">VALUE: [7.623599999999689e-05, 7.591699999999826e-05, 7.588899999999912e-05, 7.588899999999912e-05, 7.587499999999955e-05, 7.620900000000069e-05, 7.606899999999805e-05, 7.577799999999857e-05, 7.588899999999912e-05, 7.602699999999935e-05, 7.572200000000029e-05, 7.616599999999904e-05, 7.569399999999768e-05, 7.618000000000208e-05, 7.613899999999937e-05, 7.606900000000152e-05, 7.579199999999814e-05, 7.61249999999998e-05, 7.595800000000097e-05, 7.605600000000143e-05, 7.613899999999937e-05, 7.583299999999737e-05, 7.591700000000173e-05, 7.572200000000029e-05, 7.599999999999968e-05, 7.588899999999912e-05, 7.580599999999771e-05, 7.608400000000057e-05, 7.579199999999814e-05, 7.566700000000148e-05, 7.622300000000026e-05, 7.569399999999768e-05, 7.597200000000054e-05, 7.567999999999811e-05, 7.616700000000198e-05, 7.620800000000122e-05, 7.619399999999818e-05, 7.566600000000201e-05, 7.620800000000122e-05, 7.584700000000041e-05, 7.61249999999998e-05, 7.56249999999993e-05, 7.570800000000072e-05, 7.601399999999925e-05, 7.591700000000173e-05, 7.618099999999808e-05, 7.612500000000327e-05, 7.6070000000001e-05, 7.61249999999998e-05, 7.58050000000017e-05]</msg>
<status status="PASS" starttime="20201029 18:15:43.203" endtime="20201029 18:15:43.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.198" endtime="20201029 18:15:43.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:43.210" endtime="20201029 18:15:43.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.208" endtime="20201029 18:15:43.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.207" endtime="20201029 18:15:43.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.845" endtime="20201029 18:15:43.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.845" endtime="20201029 18:15:43.231"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.239" endtime="20201029 18:15:43.257"></status>
</kw>
<msg timestamp="20201029 18:15:43.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.238" endtime="20201029 18:15:43.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.259" endtime="20201029 18:15:43.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.261" endtime="20201029 18:15:43.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.235" endtime="20201029 18:15:43.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.233" endtime="20201029 18:15:43.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.270" endtime="20201029 18:15:43.560"></status>
</kw>
<msg timestamp="20201029 18:15:43.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.269" endtime="20201029 18:15:43.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.564" endtime="20201029 18:15:43.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.572" endtime="20201029 18:15:43.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.266" endtime="20201029 18:15:43.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.264" endtime="20201029 18:15:43.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.578" level="INFO">${RESULT} = [{'diff': 7.729199999999964e-05}, {'diff': 7.688900000000012e-05}, {'diff': 7.723599999999789e-05}, {'diff': 7.711100000000123e-05}, {'diff': 7.713900000000037e-05}, {'diff': 7.693099999999883e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:43.575" endtime="20201029 18:15:43.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:43.583" level="INFO">${ACCURACY} = {'diff': [7.729199999999964e-05, 7.688900000000012e-05, 7.723599999999789e-05, 7.711100000000123e-05, 7.713900000000037e-05, 7.693099999999883e-05, 7.723599999999789e-05, 7.69579999999985e-05, 7.68330...</msg>
<status status="PASS" starttime="20201029 18:15:43.579" endtime="20201029 18:15:43.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.588" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:15:43.587" endtime="20201029 18:15:43.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.590" level="INFO">VALUE: [7.729199999999964e-05, 7.688900000000012e-05, 7.723599999999789e-05, 7.711100000000123e-05, 7.713900000000037e-05, 7.693099999999883e-05, 7.723599999999789e-05, 7.69579999999985e-05, 7.683300000000184e-05, 7.720800000000222e-05, 7.720800000000222e-05, 7.705599999999896e-05, 7.705599999999896e-05, 7.713900000000037e-05, 7.711099999999776e-05, 7.676300000000053e-05, 7.697200000000154e-05, 7.695800000000197e-05, 7.706900000000252e-05, 7.71380000000009e-05, 7.6764e-05, 7.673600000000086e-05, 7.687499999999708e-05, 7.694399999999893e-05, 7.723599999999789e-05, 7.716699999999951e-05, 7.697200000000154e-05, 7.684700000000141e-05, 7.672200000000129e-05, 7.724999999999746e-05, 7.705599999999896e-05, 7.70969999999982e-05, 7.688900000000012e-05, 7.697200000000154e-05, 7.675000000000043e-05, 7.694500000000187e-05, 7.691599999999979e-05, 7.718099999999908e-05, 7.683299999999837e-05, 7.673599999999739e-05, 7.719399999999918e-05, 7.71250000000008e-05, 7.681900000000227e-05, 7.719399999999918e-05, 7.66250000000003e-05, 7.6764e-05, 7.6764e-05, 7.715299999999994e-05, 7.72640000000005e-05, 7.6764e-05]</msg>
<status status="PASS" starttime="20201029 18:15:43.589" endtime="20201029 18:15:43.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.584" endtime="20201029 18:15:43.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:43.595" endtime="20201029 18:15:43.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.593" endtime="20201029 18:15:43.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.592" endtime="20201029 18:15:43.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.231" endtime="20201029 18:15:43.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.231" endtime="20201029 18:15:43.616"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.624" endtime="20201029 18:15:43.641"></status>
</kw>
<msg timestamp="20201029 18:15:43.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.623" endtime="20201029 18:15:43.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.643" endtime="20201029 18:15:43.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.645" endtime="20201029 18:15:43.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.620" endtime="20201029 18:15:43.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.618" endtime="20201029 18:15:43.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.654" endtime="20201029 18:15:43.940"></status>
</kw>
<msg timestamp="20201029 18:15:43.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.653" endtime="20201029 18:15:43.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.944" endtime="20201029 18:15:43.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.959" endtime="20201029 18:15:43.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.650" endtime="20201029 18:15:43.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.648" endtime="20201029 18:15:43.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.972" level="INFO">${RESULT} = [{'diff': 7.880600000000071e-05}, {'diff': 7.793000000000036e-05}, {'diff': 7.787499999999808e-05}, {'diff': 7.79579999999995e-05}, {'diff': 7.788900000000112e-05}, {'diff': 7.811099999999876e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:43.965" endtime="20201029 18:15:43.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:43.981" level="INFO">${ACCURACY} = {'diff': [7.880600000000071e-05, 7.793000000000036e-05, 7.787499999999808e-05, 7.79579999999995e-05, 7.788900000000112e-05, 7.811099999999876e-05, 7.765300000000044e-05, 7.820800000000322e-05, 7.80000...</msg>
<status status="PASS" starttime="20201029 18:15:43.974" endtime="20201029 18:15:43.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.990" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:15:43.988" endtime="20201029 18:15:43.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.995" level="INFO">VALUE: [7.880600000000071e-05, 7.793000000000036e-05, 7.787499999999808e-05, 7.79579999999995e-05, 7.788900000000112e-05, 7.811099999999876e-05, 7.765300000000044e-05, 7.820800000000322e-05, 7.800000000000168e-05, 7.802800000000082e-05, 7.804200000000039e-05, 7.79579999999995e-05, 7.77909999999972e-05, 7.824999999999846e-05, 7.820900000000269e-05, 7.826399999999803e-05, 7.802800000000082e-05, 7.797199999999907e-05, 7.815300000000094e-05, 7.791700000000026e-05, 7.8070000000003e-05, 7.793000000000036e-05, 7.812499999999833e-05, 7.794399999999993e-05, 7.808299999999962e-05, 7.780500000000024e-05, 7.773599999999839e-05, 7.801400000000125e-05, 7.784699999999894e-05, 7.811099999999876e-05, 7.773600000000186e-05, 7.770800000000272e-05, 7.818100000000008e-05, 7.769499999999915e-05, 7.780599999999971e-05, 7.769499999999915e-05, 7.766700000000001e-05, 7.81250000000018e-05, 7.79310000000033e-05, 7.766700000000001e-05, 7.806999999999953e-05, 7.765200000000097e-05, 7.804100000000092e-05, 7.824999999999846e-05, 7.791600000000079e-05, 7.805500000000049e-05, 7.830500000000074e-05, 7.819400000000018e-05, 7.766700000000001e-05, 7.798600000000211e-05]</msg>
<status status="PASS" starttime="20201029 18:15:43.992" endtime="20201029 18:15:43.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.983" endtime="20201029 18:15:43.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.005" endtime="20201029 18:15:44.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.002" endtime="20201029 18:15:44.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.000" endtime="20201029 18:15:44.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.616" endtime="20201029 18:15:44.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.616" endtime="20201029 18:15:44.030"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.048" endtime="20201029 18:15:44.067"></status>
</kw>
<msg timestamp="20201029 18:15:44.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.044" endtime="20201029 18:15:44.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.069" endtime="20201029 18:15:44.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.072" endtime="20201029 18:15:44.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.039" endtime="20201029 18:15:44.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.034" endtime="20201029 18:15:44.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.080" endtime="20201029 18:15:44.366"></status>
</kw>
<msg timestamp="20201029 18:15:44.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035982111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036061514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.079" endtime="20201029 18:15:44.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035982111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036061514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.371" endtime="20201029 18:15:44.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.379" endtime="20201029 18:15:44.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.076" endtime="20201029 18:15:44.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.075" endtime="20201029 18:15:44.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.386" level="INFO">${RESULT} = [{'diff': 7.940300000000566e-05}, {'diff': 7.92640000000025e-05}, {'diff': 7.91389999999989e-05}, {'diff': 7.870899999999625e-05}, {'diff': 7.905500000000149e-05}, {'diff': 7.873600000000286e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:44.383" endtime="20201029 18:15:44.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:44.390" level="INFO">${ACCURACY} = {'diff': [7.940300000000566e-05, 7.92640000000025e-05, 7.91389999999989e-05, 7.870899999999625e-05, 7.905500000000149e-05, 7.873600000000286e-05, 7.912499999999933e-05, 7.916599999999857e-05, 7.899999...</msg>
<status status="PASS" starttime="20201029 18:15:44.387" endtime="20201029 18:15:44.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.395" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:15:44.394" endtime="20201029 18:15:44.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.397" level="INFO">VALUE: [7.940300000000566e-05, 7.92640000000025e-05, 7.91389999999989e-05, 7.870899999999625e-05, 7.905500000000149e-05, 7.873600000000286e-05, 7.912499999999933e-05, 7.916599999999857e-05, 7.899999999999574e-05, 7.87770000000021e-05, 7.887499999999908e-05, 7.90970000000002e-05, 7.915299999999847e-05, 7.869399999999721e-05, 7.909799999999967e-05, 7.887499999999908e-05, 7.920900000000369e-05, 7.893099999999736e-05, 7.882000000000028e-05, 7.886099999999951e-05, 7.88890000000056e-05, 7.920899999999675e-05, 7.887499999999908e-05, 7.920800000000422e-05, 7.887499999999908e-05, 7.899999999999574e-05, 7.913799999999943e-05, 7.897200000000354e-05, 7.920800000000422e-05, 7.91389999999989e-05, 7.880500000000124e-05, 7.917999999999814e-05, 7.880500000000124e-05, 7.919400000000465e-05, 7.886099999999951e-05, 7.916699999999804e-05, 7.883300000000037e-05, 7.901400000000225e-05, 7.890299999999822e-05, 7.893099999999736e-05, 7.907000000000053e-05, 7.882000000000028e-05, 7.872300000000276e-05, 7.906899999999412e-05, 7.888899999999865e-05, 7.867999999999764e-05, 7.893000000000483e-05, 7.922199999999685e-05, 7.898599999999617e-05, 7.891599999999832e-05]</msg>
<status status="PASS" starttime="20201029 18:15:44.396" endtime="20201029 18:15:44.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.391" endtime="20201029 18:15:44.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.403" endtime="20201029 18:15:44.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.401" endtime="20201029 18:15:44.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.400" endtime="20201029 18:15:44.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.031" endtime="20201029 18:15:44.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.030" endtime="20201029 18:15:44.424"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.432" endtime="20201029 18:15:44.450"></status>
</kw>
<msg timestamp="20201029 18:15:44.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.431" endtime="20201029 18:15:44.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.452" endtime="20201029 18:15:44.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.454" endtime="20201029 18:15:44.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.428" endtime="20201029 18:15:44.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.426" endtime="20201029 18:15:44.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.463" endtime="20201029 18:15:44.748"></status>
</kw>
<msg timestamp="20201029 18:15:44.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022005167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.461" endtime="20201029 18:15:44.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022005167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.752" endtime="20201029 18:15:44.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.760" endtime="20201029 18:15:44.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.459" endtime="20201029 18:15:44.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.457" endtime="20201029 18:15:44.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.766" level="INFO">${RESULT} = [{'diff': 8.006900000000206e-05}, {'diff': 7.944499999999743e-05}, {'diff': 7.983400000000085e-05}, {'diff': 8.02230000000008e-05}, {'diff': 7.993099999999836e-05}, {'diff': 7.987500000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:44.763" endtime="20201029 18:15:44.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:44.771" level="INFO">${ACCURACY} = {'diff': [8.006900000000206e-05, 7.944499999999743e-05, 7.983400000000085e-05, 8.02230000000008e-05, 7.993099999999836e-05, 7.987500000000008e-05, 7.991700000000226e-05, 7.992999999999889e-05, 7.99019...</msg>
<status status="PASS" starttime="20201029 18:15:44.767" endtime="20201029 18:15:44.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.776" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:15:44.775" endtime="20201029 18:15:44.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.778" level="INFO">VALUE: [8.006900000000206e-05, 7.944499999999743e-05, 7.983400000000085e-05, 8.02230000000008e-05, 7.993099999999836e-05, 7.987500000000008e-05, 7.991700000000226e-05, 7.992999999999889e-05, 7.990199999999975e-05, 8.000000000000021e-05, 7.994400000000193e-05, 8.006899999999859e-05, 7.994399999999846e-05, 7.966599999999907e-05, 7.969400000000168e-05, 7.99169999999988e-05, 7.982000000000128e-05, 8.00840000000011e-05, 8.005600000000196e-05, 7.969500000000115e-05, 7.972200000000082e-05, 8.015300000000294e-05, 8.005499999999902e-05, 7.99450000000014e-05, 7.981999999999781e-05, 7.970900000000072e-05, 7.973699999999986e-05, 8.00970000000012e-05, 7.991599999999932e-05, 7.994400000000193e-05, 7.998600000000064e-05, 8.01389999999999e-05, 7.965299999999897e-05, 8.01389999999999e-05, 7.979200000000214e-05, 8.023600000000089e-05, 8.004199999999892e-05, 8.012500000000033e-05, 7.976399999999953e-05, 7.986100000000051e-05, 8.005600000000196e-05, 7.988899999999965e-05, 8.020900000000122e-05, 8.002799999999935e-05, 8.018100000000208e-05, 7.988800000000018e-05, 8.017999999999914e-05, 8.012500000000033e-05, 7.98329999999979e-05, 7.972200000000082e-05]</msg>
<status status="PASS" starttime="20201029 18:15:44.777" endtime="20201029 18:15:44.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.772" endtime="20201029 18:15:44.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.783" endtime="20201029 18:15:44.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.782" endtime="20201029 18:15:44.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.780" endtime="20201029 18:15:44.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.424" endtime="20201029 18:15:44.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.424" endtime="20201029 18:15:44.804"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.812" endtime="20201029 18:15:44.829"></status>
</kw>
<msg timestamp="20201029 18:15:44.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.811" endtime="20201029 18:15:44.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.831" endtime="20201029 18:15:44.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.833" endtime="20201029 18:15:44.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.808" endtime="20201029 18:15:44.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.806" endtime="20201029 18:15:44.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.842" endtime="20201029 18:15:45.128"></status>
</kw>
<msg timestamp="20201029 18:15:45.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021493972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021575806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.841" endtime="20201029 18:15:45.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021493972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021575806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.132" endtime="20201029 18:15:45.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.140" endtime="20201029 18:15:45.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.838" endtime="20201029 18:15:45.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.836" endtime="20201029 18:15:45.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:45.147" level="INFO">${RESULT} = [{'diff': 8.183399999999938e-05}, {'diff': 8.123599999999842e-05}, {'diff': 8.094399999999946e-05}, {'diff': 8.090300000000022e-05}, {'diff': 8.072199999999835e-05}, {'diff': 8.107000000000253e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:45.144" endtime="20201029 18:15:45.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:45.151" level="INFO">${ACCURACY} = {'diff': [8.183399999999938e-05, 8.123599999999842e-05, 8.094399999999946e-05, 8.090300000000022e-05, 8.072199999999835e-05, 8.107000000000253e-05, 8.104199999999992e-05, 8.109699999999873e-05, 8.0791...</msg>
<status status="PASS" starttime="20201029 18:15:45.148" endtime="20201029 18:15:45.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.155" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:15:45.154" endtime="20201029 18:15:45.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.158" level="INFO">VALUE: [8.183399999999938e-05, 8.123599999999842e-05, 8.094399999999946e-05, 8.090300000000022e-05, 8.072199999999835e-05, 8.107000000000253e-05, 8.104199999999992e-05, 8.109699999999873e-05, 8.079199999999967e-05, 8.090300000000022e-05, 8.075000000000096e-05, 8.080599999999924e-05, 8.07780000000001e-05, 8.084700000000195e-05, 8.08329999999989e-05, 8.111100000000177e-05, 8.086200000000099e-05, 8.086100000000151e-05, 8.102700000000088e-05, 8.09580000000025e-05, 8.102800000000035e-05, 8.09580000000025e-05, 8.108299999999916e-05, 8.070799999999878e-05, 8.070799999999878e-05, 8.09719999999986e-05, 8.079199999999967e-05, 8.066699999999954e-05, 8.099999999999774e-05, 8.112500000000133e-05, 8.101399999999731e-05, 8.098600000000164e-05, 8.09589999999985e-05, 8.066699999999954e-05, 8.067999999999964e-05, 8.111199999999777e-05, 8.091600000000032e-05, 8.092999999999989e-05, 8.11390000000009e-05, 8.119399999999971e-05, 8.109699999999873e-05, 8.075000000000096e-05, 8.080499999999977e-05, 8.075000000000096e-05, 8.125000000000146e-05, 8.072200000000182e-05, 8.076400000000053e-05, 8.116700000000004e-05, 8.068099999999911e-05, 8.072200000000182e-05]</msg>
<status status="PASS" starttime="20201029 18:15:45.156" endtime="20201029 18:15:45.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.152" endtime="20201029 18:15:45.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:45.163" endtime="20201029 18:15:45.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.161" endtime="20201029 18:15:45.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.160" endtime="20201029 18:15:45.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.805" endtime="20201029 18:15:45.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.804" endtime="20201029 18:15:45.183"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.192" endtime="20201029 18:15:45.210"></status>
</kw>
<msg timestamp="20201029 18:15:45.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.190" endtime="20201029 18:15:45.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.212" endtime="20201029 18:15:45.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.214" endtime="20201029 18:15:45.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.188" endtime="20201029 18:15:45.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.186" endtime="20201029 18:15:45.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.223" endtime="20201029 18:15:45.508"></status>
</kw>
<msg timestamp="20201029 18:15:45.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.222" endtime="20201029 18:15:45.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.512" endtime="20201029 18:15:45.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.520" endtime="20201029 18:15:45.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.219" endtime="20201029 18:15:45.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.217" endtime="20201029 18:15:45.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:45.526" level="INFO">${RESULT} = [{'diff': 8.236100000000302e-05}, {'diff': 8.194499999999993e-05}, {'diff': 8.204200000000092e-05}, {'diff': 8.19170000000008e-05}, {'diff': 8.209699999999973e-05}, {'diff': 8.198599999999917e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:45.523" endtime="20201029 18:15:45.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:45.530" level="INFO">${ACCURACY} = {'diff': [8.236100000000302e-05, 8.194499999999993e-05, 8.204200000000092e-05, 8.19170000000008e-05, 8.209699999999973e-05, 8.198599999999917e-05, 8.169400000000021e-05, 8.193000000000089e-05, 8.18750...</msg>
<status status="PASS" starttime="20201029 18:15:45.527" endtime="20201029 18:15:45.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.535" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:15:45.534" endtime="20201029 18:15:45.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.537" level="INFO">VALUE: [8.236100000000302e-05, 8.194499999999993e-05, 8.204200000000092e-05, 8.19170000000008e-05, 8.209699999999973e-05, 8.198599999999917e-05, 8.169400000000021e-05, 8.193000000000089e-05, 8.187500000000208e-05, 8.184699999999948e-05, 8.170799999999978e-05, 8.179200000000067e-05, 8.215300000000147e-05, 8.195800000000003e-05, 8.181900000000034e-05, 8.190299999999776e-05, 8.173599999999892e-05, 8.208399999999963e-05, 8.174999999999849e-05, 8.19589999999995e-05, 8.219500000000018e-05, 8.182000000000328e-05, 8.19589999999995e-05, 8.212500000000234e-05, 8.194399999999699e-05, 8.169400000000021e-05, 8.172199999999935e-05, 8.176399999999806e-05, 8.21659999999981e-05, 8.19719999999996e-05, 8.216700000000104e-05, 8.201399999999831e-05, 8.212499999999887e-05, 8.193100000000036e-05, 8.21109999999993e-05, 8.204200000000092e-05, 8.218100000000061e-05, 8.223599999999942e-05, 8.20979999999992e-05, 8.218100000000061e-05, 8.184799999999895e-05, 8.184699999999948e-05, 8.204200000000092e-05, 8.21109999999993e-05, 8.181900000000034e-05, 8.180500000000077e-05, 8.215199999999853e-05, 8.212499999999887e-05, 8.209699999999973e-05, 8.198600000000264e-05]</msg>
<status status="PASS" starttime="20201029 18:15:45.536" endtime="20201029 18:15:45.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.531" endtime="20201029 18:15:45.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:45.543" endtime="20201029 18:15:45.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.541" endtime="20201029 18:15:45.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.540" endtime="20201029 18:15:45.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.184" endtime="20201029 18:15:45.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.184" endtime="20201029 18:15:45.564"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.572" endtime="20201029 18:15:45.590"></status>
</kw>
<msg timestamp="20201029 18:15:45.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.571" endtime="20201029 18:15:45.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.592" endtime="20201029 18:15:45.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.594" endtime="20201029 18:15:45.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.568" endtime="20201029 18:15:45.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.566" endtime="20201029 18:15:45.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.603" endtime="20201029 18:15:45.888"></status>
</kw>
<msg timestamp="20201029 18:15:45.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021631125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:45.602" endtime="20201029 18:15:45.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021631125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:45.892" endtime="20201029 18:15:45.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.900" endtime="20201029 18:15:45.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.599" endtime="20201029 18:15:45.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.598" endtime="20201029 18:15:45.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:45.907" level="INFO">${RESULT} = [{'diff': 8.337500000000012e-05}, {'diff': 8.304200000000192e-05}, {'diff': 8.304199999999845e-05}, {'diff': 8.317999999999867e-05}, {'diff': 8.322200000000085e-05}, {'diff': 8.3152999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:45.904" endtime="20201029 18:15:45.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:45.912" level="INFO">${ACCURACY} = {'diff': [8.337500000000012e-05, 8.304200000000192e-05, 8.304199999999845e-05, 8.317999999999867e-05, 8.322200000000085e-05, 8.3152999999999e-05, 8.304200000000192e-05, 8.280599999999777e-05, 8.288899...</msg>
<status status="PASS" starttime="20201029 18:15:45.908" endtime="20201029 18:15:45.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.916" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:15:45.915" endtime="20201029 18:15:45.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.919" level="INFO">VALUE: [8.337500000000012e-05, 8.304200000000192e-05, 8.304199999999845e-05, 8.317999999999867e-05, 8.322200000000085e-05, 8.3152999999999e-05, 8.304200000000192e-05, 8.280599999999777e-05, 8.288899999999919e-05, 8.284700000000048e-05, 8.291699999999833e-05, 8.308400000000063e-05, 8.304099999999898e-05, 8.274999999999949e-05, 8.293000000000189e-05, 8.273599999999992e-05, 8.288900000000265e-05, 8.313899999999944e-05, 8.305499999999855e-05, 8.306900000000159e-05, 8.279099999999873e-05, 8.312499999999987e-05, 8.28330000000009e-05, 8.281899999999787e-05, 8.295800000000103e-05, 8.288899999999919e-05, 8.283400000000038e-05, 8.294500000000093e-05, 8.270900000000025e-05, 8.286100000000005e-05, 8.29590000000005e-05, 8.315300000000247e-05, 8.316699999999858e-05, 8.281999999999734e-05, 8.280500000000177e-05, 8.299999999999974e-05, 8.308300000000116e-05, 8.286100000000005e-05, 8.322200000000085e-05, 8.29720000000006e-05, 8.298600000000017e-05, 8.266699999999808e-05, 8.302799999999888e-05, 8.326399999999956e-05, 8.301399999999931e-05, 8.313899999999944e-05, 8.268100000000111e-05, 8.266700000000154e-05, 8.322300000000032e-05, 8.29170000000018e-05]</msg>
<status status="PASS" starttime="20201029 18:15:45.918" endtime="20201029 18:15:45.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.913" endtime="20201029 18:15:45.920"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:45.924" endtime="20201029 18:15:45.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.923" endtime="20201029 18:15:45.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.921" endtime="20201029 18:15:45.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.564" endtime="20201029 18:15:45.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.564" endtime="20201029 18:15:45.945"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.953" endtime="20201029 18:15:45.970"></status>
</kw>
<msg timestamp="20201029 18:15:45.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.952" endtime="20201029 18:15:45.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.972" endtime="20201029 18:15:45.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.974" endtime="20201029 18:15:45.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.949" endtime="20201029 18:15:45.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.947" endtime="20201029 18:15:45.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.983" endtime="20201029 18:15:46.269"></status>
</kw>
<msg timestamp="20201029 18:15:46.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021461069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.982" endtime="20201029 18:15:46.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021461069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.274" endtime="20201029 18:15:46.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.282" endtime="20201029 18:15:46.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.979" endtime="20201029 18:15:46.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.977" endtime="20201029 18:15:46.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.288" level="INFO">${RESULT} = [{'diff': 8.432000000000231e-05}, {'diff': 8.380600000000224e-05}, {'diff': 8.388900000000019e-05}, {'diff': 8.413900000000044e-05}, {'diff': 8.38049999999993e-05}, {'diff': 8.412500000000087e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:46.285" endtime="20201029 18:15:46.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.292" level="INFO">${ACCURACY} = {'diff': [8.432000000000231e-05, 8.380600000000224e-05, 8.388900000000019e-05, 8.413900000000044e-05, 8.38049999999993e-05, 8.412500000000087e-05, 8.38049999999993e-05, 8.409699999999826e-05, 8.383299...</msg>
<status status="PASS" starttime="20201029 18:15:46.289" endtime="20201029 18:15:46.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.296" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.295" endtime="20201029 18:15:46.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.299" level="INFO">VALUE: [8.432000000000231e-05, 8.380600000000224e-05, 8.388900000000019e-05, 8.413900000000044e-05, 8.38049999999993e-05, 8.412500000000087e-05, 8.38049999999993e-05, 8.409699999999826e-05, 8.383299999999844e-05, 8.422200000000185e-05, 8.413900000000044e-05, 8.4153e-05, 8.400000000000074e-05, 8.41249999999974e-05, 8.395799999999856e-05, 8.366699999999908e-05, 8.408399999999816e-05, 8.395899999999804e-05, 8.422300000000132e-05, 8.392999999999942e-05, 8.398700000000064e-05, 8.387500000000062e-05, 8.384700000000148e-05, 8.391599999999985e-05, 8.413900000000044e-05, 8.383299999999844e-05, 8.387499999999715e-05, 8.373599999999745e-05, 8.390299999999976e-05, 8.395800000000203e-05, 8.4153e-05, 8.419499999999872e-05, 8.391699999999933e-05, 8.422199999999838e-05, 8.405599999999902e-05, 8.374999999999702e-05, 8.366700000000254e-05, 8.402799999999988e-05, 8.39590000000015e-05, 8.420900000000175e-05, 8.430599999999927e-05, 8.375000000000049e-05, 8.383299999999844e-05, 8.3846999999998e-05, 8.415200000000053e-05, 8.381900000000234e-05, 8.39170000000028e-05, 8.395800000000203e-05, 8.390299999999976e-05, 8.391699999999933e-05]</msg>
<status status="PASS" starttime="20201029 18:15:46.298" endtime="20201029 18:15:46.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.293" endtime="20201029 18:15:46.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.304" endtime="20201029 18:15:46.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.302" endtime="20201029 18:15:46.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.301" endtime="20201029 18:15:46.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.945" endtime="20201029 18:15:46.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.945" endtime="20201029 18:15:46.324"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.333" endtime="20201029 18:15:46.354"></status>
</kw>
<msg timestamp="20201029 18:15:46.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.331" endtime="20201029 18:15:46.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.355" endtime="20201029 18:15:46.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.358" endtime="20201029 18:15:46.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.329" endtime="20201029 18:15:46.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.327" endtime="20201029 18:15:46.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.367" endtime="20201029 18:15:46.653"></status>
</kw>
<msg timestamp="20201029 18:15:46.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024886764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024972389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.365" endtime="20201029 18:15:46.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024886764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024972389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.657" endtime="20201029 18:15:46.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.665" endtime="20201029 18:15:46.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.363" endtime="20201029 18:15:46.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.361" endtime="20201029 18:15:46.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.671" level="INFO">${RESULT} = [{'diff': 8.562500000000237e-05}, {'diff': 8.484800000000195e-05}, {'diff': 8.476299999999812e-05}, {'diff': 8.499999999999827e-05}, {'diff': 8.525000000000199e-05}, {'diff': 8.475000000000149e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:46.668" endtime="20201029 18:15:46.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.675" level="INFO">${ACCURACY} = {'diff': [8.562500000000237e-05, 8.484800000000195e-05, 8.476299999999812e-05, 8.499999999999827e-05, 8.525000000000199e-05, 8.475000000000149e-05, 8.486099999999858e-05, 8.481899999999987e-05, 8.4693...</msg>
<status status="PASS" starttime="20201029 18:15:46.672" endtime="20201029 18:15:46.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.680" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.679" endtime="20201029 18:15:46.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.682" level="INFO">VALUE: [8.562500000000237e-05, 8.484800000000195e-05, 8.476299999999812e-05, 8.499999999999827e-05, 8.525000000000199e-05, 8.475000000000149e-05, 8.486099999999858e-05, 8.481899999999987e-05, 8.469399999999974e-05, 8.477800000000063e-05, 8.483299999999944e-05, 8.483299999999944e-05, 8.500000000000174e-05, 8.519400000000024e-05, 8.495899999999904e-05, 8.4846999999999e-05, 8.473599999999845e-05, 8.519499999999972e-05, 8.502800000000088e-05, 8.473599999999845e-05, 8.491700000000033e-05, 8.505600000000002e-05, 8.476400000000106e-05, 8.508299999999969e-05, 8.516700000000058e-05, 8.51660000000011e-05, 8.468000000000017e-05, 8.483299999999944e-05, 8.48050000000003e-05, 8.483299999999944e-05, 8.499999999999827e-05, 8.472199999999888e-05, 8.472299999999836e-05, 8.488900000000119e-05, 8.519500000000318e-05, 8.527800000000113e-05, 8.472199999999888e-05, 8.502800000000088e-05, 8.472300000000182e-05, 8.502800000000088e-05, 8.469500000000268e-05, 8.508299999999969e-05, 8.470799999999931e-05, 8.479100000000073e-05, 8.502700000000141e-05, 8.516700000000058e-05, 8.516599999999763e-05, 8.490300000000076e-05, 8.475000000000149e-05, 8.512500000000187e-05]</msg>
<status status="PASS" starttime="20201029 18:15:46.681" endtime="20201029 18:15:46.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.676" endtime="20201029 18:15:46.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.688" endtime="20201029 18:15:46.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.686" endtime="20201029 18:15:46.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.685" endtime="20201029 18:15:46.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.325" endtime="20201029 18:15:46.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.325" endtime="20201029 18:15:46.709"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.717" endtime="20201029 18:15:46.735"></status>
</kw>
<msg timestamp="20201029 18:15:46.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.716" endtime="20201029 18:15:46.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.736" endtime="20201029 18:15:46.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.739" endtime="20201029 18:15:46.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.713" endtime="20201029 18:15:46.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.711" endtime="20201029 18:15:46.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.748" endtime="20201029 18:15:47.034"></status>
</kw>
<msg timestamp="20201029 18:15:47.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0215335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021620153, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:46.746" endtime="20201029 18:15:47.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0215335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021620153, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:47.038" endtime="20201029 18:15:47.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.046" endtime="20201029 18:15:47.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.744" endtime="20201029 18:15:47.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.742" endtime="20201029 18:15:47.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.052" level="INFO">${RESULT} = [{'diff': 8.665299999999904e-05}, {'diff': 8.606900000000112e-05}, {'diff': 8.61799999999982e-05}, {'diff': 8.600000000000274e-05}, {'diff': 8.615199999999906e-05}, {'diff': 8.609700000000026e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:47.049" endtime="20201029 18:15:47.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.058" level="INFO">${ACCURACY} = {'diff': [8.665299999999904e-05, 8.606900000000112e-05, 8.61799999999982e-05, 8.600000000000274e-05, 8.615199999999906e-05, 8.609700000000026e-05, 8.61799999999982e-05, 8.588900000000219e-05, 8.606899...</msg>
<status status="PASS" starttime="20201029 18:15:47.053" endtime="20201029 18:15:47.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.062" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.061" endtime="20201029 18:15:47.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.064" level="INFO">VALUE: [8.665299999999904e-05, 8.606900000000112e-05, 8.61799999999982e-05, 8.600000000000274e-05, 8.615199999999906e-05, 8.609700000000026e-05, 8.61799999999982e-05, 8.588900000000219e-05, 8.606899999999765e-05, 8.59310000000009e-05, 8.602800000000188e-05, 8.624999999999952e-05, 8.609700000000026e-05, 8.588899999999872e-05, 8.601400000000231e-05, 8.574999999999902e-05, 8.59729999999996e-05, 8.584799999999948e-05, 8.619400000000124e-05, 8.56669999999976e-05, 8.568000000000117e-05, 8.59859999999997e-05, 8.61660000000021e-05, 8.587499999999915e-05, 8.56660000000016e-05, 8.573600000000292e-05, 8.588899999999872e-05, 8.601400000000231e-05, 8.607000000000059e-05, 8.598600000000317e-05, 8.576399999999859e-05, 8.604200000000145e-05, 8.591699999999786e-05, 8.620900000000029e-05, 8.605599999999755e-05, 8.620800000000081e-05, 8.615199999999906e-05, 8.608400000000016e-05, 8.599999999999927e-05, 8.61799999999982e-05, 8.587499999999915e-05, 8.588899999999872e-05, 8.616599999999863e-05, 8.587499999999915e-05, 8.620800000000081e-05, 8.588899999999872e-05, 8.576400000000206e-05, 8.595800000000056e-05, 8.575000000000249e-05, 8.591699999999786e-05]</msg>
<status status="PASS" starttime="20201029 18:15:47.063" endtime="20201029 18:15:47.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.058" endtime="20201029 18:15:47.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.069" endtime="20201029 18:15:47.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.068" endtime="20201029 18:15:47.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.067" endtime="20201029 18:15:47.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.710" endtime="20201029 18:15:47.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.709" endtime="20201029 18:15:47.090"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.098" endtime="20201029 18:15:47.117"></status>
</kw>
<msg timestamp="20201029 18:15:47.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.097" endtime="20201029 18:15:47.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.118" endtime="20201029 18:15:47.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.121" endtime="20201029 18:15:47.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.094" endtime="20201029 18:15:47.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.092" endtime="20201029 18:15:47.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.130" endtime="20201029 18:15:47.417"></status>
</kw>
<msg timestamp="20201029 18:15:47.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021492014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021579083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.128" endtime="20201029 18:15:47.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021492014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021579083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.421" endtime="20201029 18:15:47.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.430" endtime="20201029 18:15:47.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.126" endtime="20201029 18:15:47.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.124" endtime="20201029 18:15:47.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.436" level="INFO">${RESULT} = [{'diff': 8.706899999999865e-05}, {'diff': 8.695800000000156e-05}, {'diff': 8.700000000000027e-05}, {'diff': 8.718099999999868e-05}, {'diff': 8.702799999999941e-05}, {'diff': 8.663900000000294e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:47.433" endtime="20201029 18:15:47.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.440" level="INFO">${ACCURACY} = {'diff': [8.706899999999865e-05, 8.695800000000156e-05, 8.700000000000027e-05, 8.718099999999868e-05, 8.702799999999941e-05, 8.663900000000294e-05, 8.727799999999966e-05, 8.727800000000313e-05, 8.7041...</msg>
<status status="PASS" starttime="20201029 18:15:47.437" endtime="20201029 18:15:47.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.445" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.444" endtime="20201029 18:15:47.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.447" level="INFO">VALUE: [8.706899999999865e-05, 8.695800000000156e-05, 8.700000000000027e-05, 8.718099999999868e-05, 8.702799999999941e-05, 8.663900000000294e-05, 8.727799999999966e-05, 8.727800000000313e-05, 8.704199999999898e-05, 8.682000000000134e-05, 8.722200000000138e-05, 8.665299999999904e-05, 8.66249999999999e-05, 8.719400000000224e-05, 8.669400000000174e-05, 8.695800000000156e-05, 8.68189999999984e-05, 8.708299999999822e-05, 8.691699999999886e-05, 8.679199999999873e-05, 8.725000000000052e-05, 8.700000000000027e-05, 8.672200000000088e-05, 8.701399999999984e-05, 8.701399999999984e-05, 8.720900000000129e-05, 8.680600000000177e-05, 8.676399999999959e-05, 8.686100000000058e-05, 8.682000000000134e-05, 8.679100000000273e-05, 8.688800000000024e-05, 8.683299999999797e-05, 8.700000000000027e-05, 8.706900000000212e-05, 8.677799999999916e-05, 8.724999999999705e-05, 8.688900000000319e-05, 8.677800000000263e-05, 8.669400000000174e-05, 8.675000000000002e-05, 8.720799999999834e-05, 8.700000000000027e-05, 8.706999999999812e-05, 8.675000000000002e-05, 8.702800000000288e-05, 8.686100000000058e-05, 8.680499999999883e-05, 8.679099999999926e-05, 8.68189999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:15:47.446" endtime="20201029 18:15:47.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.441" endtime="20201029 18:15:47.453"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.456" endtime="20201029 18:15:47.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.455" endtime="20201029 18:15:47.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.454" endtime="20201029 18:15:47.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.091" endtime="20201029 18:15:47.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.090" endtime="20201029 18:15:47.477"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.486" endtime="20201029 18:15:47.505"></status>
</kw>
<msg timestamp="20201029 18:15:47.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.484" endtime="20201029 18:15:47.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.507" endtime="20201029 18:15:47.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.509" endtime="20201029 18:15:47.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.482" endtime="20201029 18:15:47.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.480" endtime="20201029 18:15:47.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.518" endtime="20201029 18:15:47.804"></status>
</kw>
<msg timestamp="20201029 18:15:47.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022875861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.517" endtime="20201029 18:15:47.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022875861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.808" endtime="20201029 18:15:47.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.816" endtime="20201029 18:15:47.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.514" endtime="20201029 18:15:47.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.512" endtime="20201029 18:15:47.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.822" level="INFO">${RESULT} = [{'diff': 8.837499999999818e-05}, {'diff': 8.81800000000002e-05}, {'diff': 8.779100000000026e-05}, {'diff': 8.809700000000226e-05}, {'diff': 8.790300000000029e-05}, {'diff': 8.808300000000269e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:47.819" endtime="20201029 18:15:47.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.827" level="INFO">${ACCURACY} = {'diff': [8.837499999999818e-05, 8.81800000000002e-05, 8.779100000000026e-05, 8.809700000000226e-05, 8.790300000000029e-05, 8.808300000000269e-05, 8.787500000000115e-05, 8.806900000000312e-05, 8.77080...</msg>
<status status="PASS" starttime="20201029 18:15:47.823" endtime="20201029 18:15:47.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.831" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.830" endtime="20201029 18:15:47.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.833" level="INFO">VALUE: [8.837499999999818e-05, 8.81800000000002e-05, 8.779100000000026e-05, 8.809700000000226e-05, 8.790300000000029e-05, 8.808300000000269e-05, 8.787500000000115e-05, 8.806900000000312e-05, 8.770800000000231e-05, 8.781999999999887e-05, 8.804199999999998e-05, 8.79860000000017e-05, 8.818099999999968e-05, 8.76669999999996e-05, 8.806999999999912e-05, 8.76669999999996e-05, 8.815200000000106e-05, 8.783299999999897e-05, 8.822199999999891e-05, 8.81800000000002e-05, 8.791600000000038e-05, 8.794399999999952e-05, 8.784699999999854e-05, 8.81670000000001e-05, 8.794399999999952e-05, 8.79860000000017e-05, 8.791699999999986e-05, 8.770900000000179e-05, 8.808400000000216e-05, 8.779199999999973e-05, 8.78059999999993e-05, 8.768100000000265e-05, 8.815300000000054e-05, 8.769500000000222e-05, 8.781900000000287e-05, 8.806899999999965e-05, 8.816599999999716e-05, 8.805500000000008e-05, 8.784699999999854e-05, 8.804199999999998e-05, 8.783299999999897e-05, 8.769399999999927e-05, 8.797199999999866e-05, 8.768099999999918e-05, 8.819499999999925e-05, 8.788900000000072e-05, 8.790300000000029e-05, 8.788900000000072e-05, 8.769499999999875e-05, 8.801400000000084e-05]</msg>
<status status="PASS" starttime="20201029 18:15:47.832" endtime="20201029 18:15:47.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.827" endtime="20201029 18:15:47.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.839" endtime="20201029 18:15:47.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.838" endtime="20201029 18:15:47.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.836" endtime="20201029 18:15:47.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.478" endtime="20201029 18:15:47.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.477" endtime="20201029 18:15:47.860"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.869" endtime="20201029 18:15:47.886"></status>
</kw>
<msg timestamp="20201029 18:15:47.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.867" endtime="20201029 18:15:47.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.888" endtime="20201029 18:15:47.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.890" endtime="20201029 18:15:47.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.864" endtime="20201029 18:15:47.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.862" endtime="20201029 18:15:47.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.899" endtime="20201029 18:15:48.184"></status>
</kw>
<msg timestamp="20201029 18:15:48.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021811403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.898" endtime="20201029 18:15:48.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021811403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.189" endtime="20201029 18:15:48.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.197" endtime="20201029 18:15:48.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.895" endtime="20201029 18:15:48.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.893" endtime="20201029 18:15:48.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.203" level="INFO">${RESULT} = [{'diff': 8.956900000000115e-05}, {'diff': 8.905600000000055e-05}, {'diff': 8.897199999999966e-05}, {'diff': 8.88060000000003e-05}, {'diff': 8.911099999999936e-05}, {'diff': 8.901399999999837e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:48.200" endtime="20201029 18:15:48.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.208" level="INFO">${ACCURACY} = {'diff': [8.956900000000115e-05, 8.905600000000055e-05, 8.897199999999966e-05, 8.88060000000003e-05, 8.911099999999936e-05, 8.901399999999837e-05, 8.883399999999944e-05, 8.91389999999985e-05, 8.887499...</msg>
<status status="PASS" starttime="20201029 18:15:48.204" endtime="20201029 18:15:48.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.213" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.212" endtime="20201029 18:15:48.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.215" level="INFO">VALUE: [8.956900000000115e-05, 8.905600000000055e-05, 8.897199999999966e-05, 8.88060000000003e-05, 8.911099999999936e-05, 8.901399999999837e-05, 8.883399999999944e-05, 8.91389999999985e-05, 8.887499999999868e-05, 8.898700000000218e-05, 8.874999999999855e-05, 8.893000000000095e-05, 8.888900000000172e-05, 8.922199999999991e-05, 8.902800000000141e-05, 8.876400000000159e-05, 8.912499999999893e-05, 8.869400000000027e-05, 8.926400000000209e-05, 8.89860000000027e-05, 8.870899999999932e-05, 8.920899999999982e-05, 8.904200000000098e-05, 8.895899999999957e-05, 8.877800000000116e-05, 8.870900000000279e-05, 8.869400000000027e-05, 8.895899999999957e-05, 8.86519999999981e-05, 8.923599999999948e-05, 8.919400000000077e-05, 8.877699999999822e-05, 8.891599999999791e-05, 8.876400000000159e-05, 8.872199999999941e-05, 8.891700000000086e-05, 8.877800000000116e-05, 8.909799999999926e-05, 8.893100000000043e-05, 8.922199999999991e-05, 8.881999999999987e-05, 8.909699999999979e-05, 8.877700000000169e-05, 8.912499999999893e-05, 8.897199999999966e-05, 8.898700000000218e-05, 8.884699999999954e-05, 8.891600000000138e-05, 8.873599999999898e-05, 8.875000000000202e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.214" endtime="20201029 18:15:48.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.209" endtime="20201029 18:15:48.216"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.220" endtime="20201029 18:15:48.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.219" endtime="20201029 18:15:48.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.217" endtime="20201029 18:15:48.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.861" endtime="20201029 18:15:48.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.860" endtime="20201029 18:15:48.241"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.249" endtime="20201029 18:15:48.269"></status>
</kw>
<msg timestamp="20201029 18:15:48.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.248" endtime="20201029 18:15:48.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.271" endtime="20201029 18:15:48.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.273" endtime="20201029 18:15:48.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.245" endtime="20201029 18:15:48.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.243" endtime="20201029 18:15:48.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.282" endtime="20201029 18:15:48.568"></status>
</kw>
<msg timestamp="20201029 18:15:48.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021534375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021624569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.280" endtime="20201029 18:15:48.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021534375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021624569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.572" endtime="20201029 18:15:48.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.580" endtime="20201029 18:15:48.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.278" endtime="20201029 18:15:48.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.276" endtime="20201029 18:15:48.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.587" level="INFO">${RESULT} = [{'diff': 9.01939999999983e-05}, {'diff': 9.023600000000048e-05}, {'diff': 9.001400000000284e-05}, {'diff': 9.004099999999904e-05}, {'diff': 9.01670000000021e-05}, {'diff': 9.022200000000091e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:48.584" endtime="20201029 18:15:48.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.591" level="INFO">${ACCURACY} = {'diff': [9.01939999999983e-05, 9.023600000000048e-05, 9.001400000000284e-05, 9.004099999999904e-05, 9.01670000000021e-05, 9.022200000000091e-05, 9.022300000000039e-05, 8.969400000000127e-05, 9.011100...</msg>
<status status="PASS" starttime="20201029 18:15:48.588" endtime="20201029 18:15:48.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.595" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.594" endtime="20201029 18:15:48.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.598" level="INFO">VALUE: [9.01939999999983e-05, 9.023600000000048e-05, 9.001400000000284e-05, 9.004099999999904e-05, 9.01670000000021e-05, 9.022200000000091e-05, 9.022300000000039e-05, 8.969400000000127e-05, 9.011100000000036e-05, 9.004199999999851e-05, 9.002699999999947e-05, 9.008300000000122e-05, 9.023600000000048e-05, 8.965300000000204e-05, 8.993099999999796e-05, 9.022300000000039e-05, 9.023699999999996e-05, 9.020899999999735e-05, 8.987499999999968e-05, 9.022200000000091e-05, 9.001400000000284e-05, 9.005500000000208e-05, 8.965299999999857e-05, 8.969400000000127e-05, 9.015299999999907e-05, 9.009699999999732e-05, 9.01389999999995e-05, 8.974999999999955e-05, 8.965300000000204e-05, 8.973599999999998e-05, 8.997199999999719e-05, 9.019500000000125e-05, 8.977699999999922e-05, 9.002800000000241e-05, 9.008300000000122e-05, 9.025000000000005e-05, 9.019400000000177e-05, 8.969400000000127e-05, 8.998600000000023e-05, 9.006900000000165e-05, 8.96939999999978e-05, 8.991599999999891e-05, 8.970800000000084e-05, 8.984700000000054e-05, 9.002800000000241e-05, 8.966699999999814e-05, 9.009700000000079e-05, 8.993100000000143e-05, 9.019499999999778e-05, 8.969500000000075e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.596" endtime="20201029 18:15:48.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.592" endtime="20201029 18:15:48.599"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.603" endtime="20201029 18:15:48.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.601" endtime="20201029 18:15:48.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.600" endtime="20201029 18:15:48.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.242" endtime="20201029 18:15:48.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.241" endtime="20201029 18:15:48.623"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.632" endtime="20201029 18:15:48.651"></status>
</kw>
<msg timestamp="20201029 18:15:48.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.630" endtime="20201029 18:15:48.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.653" endtime="20201029 18:15:48.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.655" endtime="20201029 18:15:48.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.628" endtime="20201029 18:15:48.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.626" endtime="20201029 18:15:48.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.664" endtime="20201029 18:15:48.949"></status>
</kw>
<msg timestamp="20201029 18:15:48.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022806806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022898181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.663" endtime="20201029 18:15:48.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022806806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022898181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.953" endtime="20201029 18:15:48.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.961" endtime="20201029 18:15:48.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.660" endtime="20201029 18:15:48.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.659" endtime="20201029 18:15:48.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.968" level="INFO">${RESULT} = [{'diff': 9.137500000000118e-05}, {'diff': 9.097199999999819e-05}, {'diff': 9.077799999999969e-05}, {'diff': 9.087500000000068e-05}, {'diff': 9.079199999999926e-05}, {'diff': 9.086100000000111e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:48.965" endtime="20201029 18:15:48.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.972" level="INFO">${ACCURACY} = {'diff': [9.137500000000118e-05, 9.097199999999819e-05, 9.077799999999969e-05, 9.087500000000068e-05, 9.079199999999926e-05, 9.086100000000111e-05, 9.119500000000225e-05, 9.108400000000169e-05, 9.0848...</msg>
<status status="PASS" starttime="20201029 18:15:48.969" endtime="20201029 18:15:48.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.976" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.975" endtime="20201029 18:15:48.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.979" level="INFO">VALUE: [9.137500000000118e-05, 9.097199999999819e-05, 9.077799999999969e-05, 9.087500000000068e-05, 9.079199999999926e-05, 9.086100000000111e-05, 9.119500000000225e-05, 9.108400000000169e-05, 9.084800000000101e-05, 9.068100000000218e-05, 9.09870000000007e-05, 9.091699999999939e-05, 9.116600000000016e-05, 9.105599999999908e-05, 9.073599999999751e-05, 9.073599999999751e-05, 9.115300000000007e-05, 9.097200000000166e-05, 9.070800000000184e-05, 9.086100000000111e-05, 9.073600000000098e-05, 9.0639e-05, 9.10000000000008e-05, 9.112500000000093e-05, 9.120899999999835e-05, 9.122199999999844e-05, 9.102799999999994e-05, 9.120900000000182e-05, 9.077799999999969e-05, 9.093100000000243e-05, 9.13199999999989e-05, 9.070900000000132e-05, 9.090200000000034e-05, 9.125000000000105e-05, 9.079199999999926e-05, 9.127800000000019e-05, 9.120799999999887e-05, 9.115300000000007e-05, 9.076400000000012e-05, 9.107000000000212e-05, 9.086100000000111e-05, 9.082000000000187e-05, 9.105599999999908e-05, 9.091699999999939e-05, 9.109699999999832e-05, 9.070899999999785e-05, 9.126399999999715e-05, 9.0945000000002e-05, 9.084700000000154e-05, 9.069400000000227e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.977" endtime="20201029 18:15:48.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.973" endtime="20201029 18:15:48.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.985" endtime="20201029 18:15:49.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.983" endtime="20201029 18:15:49.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.982" endtime="20201029 18:15:49.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.624" endtime="20201029 18:15:49.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.624" endtime="20201029 18:15:49.005"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.014" endtime="20201029 18:15:49.032"></status>
</kw>
<msg timestamp="20201029 18:15:49.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.012" endtime="20201029 18:15:49.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.033" endtime="20201029 18:15:49.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.036" endtime="20201029 18:15:49.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.010" endtime="20201029 18:15:49.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.008" endtime="20201029 18:15:49.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.045" endtime="20201029 18:15:49.331"></status>
</kw>
<msg timestamp="20201029 18:15:49.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021530264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.043" endtime="20201029 18:15:49.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021530264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.335" endtime="20201029 18:15:49.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.343" endtime="20201029 18:15:49.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.041" endtime="20201029 18:15:49.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.039" endtime="20201029 18:15:49.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.350" level="INFO">${RESULT} = [{'diff': 9.227800000000119e-05}, {'diff': 9.187499999999821e-05}, {'diff': 9.179100000000079e-05}, {'diff': 9.201400000000137e-05}, {'diff': 9.197200000000266e-05}, {'diff': 9.229200000000076e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:49.346" endtime="20201029 18:15:49.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.355" level="INFO">${ACCURACY} = {'diff': [9.227800000000119e-05, 9.187499999999821e-05, 9.179100000000079e-05, 9.201400000000137e-05, 9.197200000000266e-05, 9.229200000000076e-05, 9.180599999999983e-05, 9.183400000000244e-05, 9.1889...</msg>
<status status="PASS" starttime="20201029 18:15:49.351" endtime="20201029 18:15:49.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.359" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.358" endtime="20201029 18:15:49.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.362" level="INFO">VALUE: [9.227800000000119e-05, 9.187499999999821e-05, 9.179100000000079e-05, 9.201400000000137e-05, 9.197200000000266e-05, 9.229200000000076e-05, 9.180599999999983e-05, 9.183400000000244e-05, 9.188900000000125e-05, 9.211099999999889e-05, 9.187500000000168e-05, 9.206999999999965e-05, 9.180500000000036e-05, 9.174999999999808e-05, 9.172299999999842e-05, 9.202800000000094e-05, 9.21529999999976e-05, 9.226299999999868e-05, 9.170799999999937e-05, 9.198600000000223e-05, 9.18329999999995e-05, 9.204099999999757e-05, 9.211099999999889e-05, 9.181899999999993e-05, 9.177800000000069e-05, 9.16939999999998e-05, 9.198600000000223e-05, 9.18329999999995e-05, 9.166700000000014e-05, 9.213899999999803e-05, 9.183400000000244e-05, 9.222300000000239e-05, 9.179199999999679e-05, 9.173599999999851e-05, 9.218100000000021e-05, 9.202800000000094e-05, 9.211100000000236e-05, 9.186100000000211e-05, 9.190299999999735e-05, 9.21390000000015e-05, 9.173599999999851e-05, 9.188900000000125e-05, 9.190299999999735e-05, 9.21940000000003e-05, 9.172199999999894e-05, 9.230500000000086e-05, 9.188900000000125e-05, 9.223600000000248e-05, 9.183399999999897e-05, 9.205600000000008e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.360" endtime="20201029 18:15:49.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.356" endtime="20201029 18:15:49.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.367" endtime="20201029 18:15:49.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.365" endtime="20201029 18:15:49.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.364" endtime="20201029 18:15:49.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.006" endtime="20201029 18:15:49.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.006" endtime="20201029 18:15:49.387"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.396" endtime="20201029 18:15:49.415"></status>
</kw>
<msg timestamp="20201029 18:15:49.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.394" endtime="20201029 18:15:49.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.416" endtime="20201029 18:15:49.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.419" endtime="20201029 18:15:49.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.392" endtime="20201029 18:15:49.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.390" endtime="20201029 18:15:49.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.428" endtime="20201029 18:15:49.719"></status>
</kw>
<msg timestamp="20201029 18:15:49.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022037014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.426" endtime="20201029 18:15:49.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022037014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.729" endtime="20201029 18:15:49.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.747" endtime="20201029 18:15:49.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.424" endtime="20201029 18:15:49.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.422" endtime="20201029 18:15:49.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.761" level="INFO">${RESULT} = [{'diff': 9.305600000000108e-05}, {'diff': 9.283399999999997e-05}, {'diff': 9.276399999999865e-05}, {'diff': 9.280499999999789e-05}, {'diff': 9.281900000000093e-05}, {'diff': 9.294400000000105e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:49.754" endtime="20201029 18:15:49.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.770" level="INFO">${ACCURACY} = {'diff': [9.305600000000108e-05, 9.283399999999997e-05, 9.276399999999865e-05, 9.280499999999789e-05, 9.281900000000093e-05, 9.294400000000105e-05, 9.284700000000007e-05, 9.277799999999822e-05, 9.3179...</msg>
<status status="PASS" starttime="20201029 18:15:49.763" endtime="20201029 18:15:49.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.779" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.777" endtime="20201029 18:15:49.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.784" level="INFO">VALUE: [9.305600000000108e-05, 9.283399999999997e-05, 9.276399999999865e-05, 9.280499999999789e-05, 9.281900000000093e-05, 9.294400000000105e-05, 9.284700000000007e-05, 9.277799999999822e-05, 9.317999999999826e-05, 9.281900000000093e-05, 9.279200000000126e-05, 9.306900000000118e-05, 9.26529999999981e-05, 9.273600000000298e-05, 9.297299999999967e-05, 9.318000000000173e-05, 9.313899999999903e-05, 9.316700000000164e-05, 9.311099999999989e-05, 9.318100000000121e-05, 9.28879999999993e-05, 9.31940000000013e-05, 9.312499999999946e-05, 9.29720000000002e-05, 9.32079999999974e-05, 9.298599999999976e-05, 9.311099999999989e-05, 9.298599999999976e-05, 9.316700000000164e-05, 9.313899999999903e-05, 9.279199999999779e-05, 9.276399999999865e-05, 9.268100000000071e-05, 9.319399999999783e-05, 9.287500000000268e-05, 9.292999999999801e-05, 9.304200000000151e-05, 9.31659999999987e-05, 9.297199999999672e-05, 9.309700000000032e-05, 9.30000000000028e-05, 9.26529999999981e-05, 9.322200000000044e-05, 9.313899999999903e-05, 9.266700000000114e-05, 9.312499999999946e-05, 9.312499999999946e-05, 9.261099999999939e-05, 9.305600000000108e-05, 9.316699999999817e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.781" endtime="20201029 18:15:49.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.772" endtime="20201029 18:15:49.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.795" endtime="20201029 18:15:49.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.792" endtime="20201029 18:15:49.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.789" endtime="20201029 18:15:49.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.388" endtime="20201029 18:15:49.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.388" endtime="20201029 18:15:49.816"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.825" endtime="20201029 18:15:49.847"></status>
</kw>
<msg timestamp="20201029 18:15:49.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.823" endtime="20201029 18:15:49.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.849" endtime="20201029 18:15:49.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.851" endtime="20201029 18:15:49.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.821" endtime="20201029 18:15:49.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.819" endtime="20201029 18:15:49.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.860" endtime="20201029 18:15:50.145"></status>
</kw>
<msg timestamp="20201029 18:15:50.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025138389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025233125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.859" endtime="20201029 18:15:50.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025138389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025233125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.149" endtime="20201029 18:15:50.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.158" endtime="20201029 18:15:50.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.856" endtime="20201029 18:15:50.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.854" endtime="20201029 18:15:50.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.164" level="INFO">${RESULT} = [{'diff': 9.473599999999804e-05}, {'diff': 9.404199999999904e-05}, {'diff': 9.375000000000008e-05}, {'diff': 9.41529999999996e-05}, {'diff': 9.425000000000058e-05}, {'diff': 9.366699999999867e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:50.161" endtime="20201029 18:15:50.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.168" level="INFO">${ACCURACY} = {'diff': [9.473599999999804e-05, 9.404199999999904e-05, 9.375000000000008e-05, 9.41529999999996e-05, 9.425000000000058e-05, 9.366699999999867e-05, 9.391700000000239e-05, 9.388899999999978e-05, 9.38610...</msg>
<status status="PASS" starttime="20201029 18:15:50.165" endtime="20201029 18:15:50.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.173" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.172" endtime="20201029 18:15:50.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.175" level="INFO">VALUE: [9.473599999999804e-05, 9.404199999999904e-05, 9.375000000000008e-05, 9.41529999999996e-05, 9.425000000000058e-05, 9.366699999999867e-05, 9.391700000000239e-05, 9.388899999999978e-05, 9.386100000000064e-05, 9.408399999999775e-05, 9.406899999999871e-05, 9.381900000000193e-05, 9.4027e-05, 9.413900000000003e-05, 9.39859999999973e-05, 9.390300000000282e-05, 9.412500000000046e-05, 9.381899999999846e-05, 9.425000000000058e-05, 9.397199999999772e-05, 9.38200000000014e-05, 9.390299999999935e-05, 9.404199999999904e-05, 9.368099999999824e-05, 9.430499999999939e-05, 9.402799999999947e-05, 9.411200000000036e-05, 9.384799999999707e-05, 9.423600000000101e-05, 9.41940000000023e-05, 9.394399999999858e-05, 9.392999999999901e-05, 9.37079999999979e-05, 9.377799999999922e-05, 9.372200000000094e-05, 9.387500000000021e-05, 9.413900000000003e-05, 9.365300000000257e-05, 9.391699999999892e-05, 9.387500000000021e-05, 9.391699999999892e-05, 9.380600000000183e-05, 9.388899999999978e-05, 9.41529999999996e-05, 9.430599999999886e-05, 9.372199999999747e-05, 9.427700000000025e-05, 9.387500000000021e-05, 9.38469999999976e-05, 9.419399999999883e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.174" endtime="20201029 18:15:50.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.169" endtime="20201029 18:15:50.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.181" endtime="20201029 18:15:50.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.180" endtime="20201029 18:15:50.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.178" endtime="20201029 18:15:50.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.817" endtime="20201029 18:15:50.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.816" endtime="20201029 18:15:50.202"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.210" endtime="20201029 18:15:50.229"></status>
</kw>
<msg timestamp="20201029 18:15:50.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.209" endtime="20201029 18:15:50.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.230" endtime="20201029 18:15:50.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.233" endtime="20201029 18:15:50.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.206" endtime="20201029 18:15:50.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.204" endtime="20201029 18:15:50.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.242" endtime="20201029 18:15:50.529"></status>
</kw>
<msg timestamp="20201029 18:15:50.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.240" endtime="20201029 18:15:50.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.533" endtime="20201029 18:15:50.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.541" endtime="20201029 18:15:50.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.238" endtime="20201029 18:15:50.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.236" endtime="20201029 18:15:50.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.548" level="INFO">${RESULT} = [{'diff': 9.591700000000092e-05}, {'diff': 9.537500000000171e-05}, {'diff': 9.49720000000022e-05}, {'diff': 9.486100000000164e-05}, {'diff': 9.479100000000032e-05}, {'diff': 9.515199999999766e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:50.545" endtime="20201029 18:15:50.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.553" level="INFO">${ACCURACY} = {'diff': [9.591700000000092e-05, 9.537500000000171e-05, 9.49720000000022e-05, 9.486100000000164e-05, 9.479100000000032e-05, 9.515199999999766e-05, 9.504100000000057e-05, 9.523599999999854e-05, 9.50280...</msg>
<status status="PASS" starttime="20201029 18:15:50.549" endtime="20201029 18:15:50.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.558" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.557" endtime="20201029 18:15:50.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.560" level="INFO">VALUE: [9.591700000000092e-05, 9.537500000000171e-05, 9.49720000000022e-05, 9.486100000000164e-05, 9.479100000000032e-05, 9.515199999999766e-05, 9.504100000000057e-05, 9.523599999999854e-05, 9.502800000000047e-05, 9.46530000000001e-05, 9.49859999999983e-05, 9.469399999999933e-05, 9.46530000000001e-05, 9.52079999999994e-05, 9.508399999999875e-05, 9.505599999999961e-05, 9.523600000000201e-05, 9.497300000000167e-05, 9.529200000000029e-05, 9.505600000000308e-05, 9.51660000000007e-05, 9.483299999999903e-05, 9.502699999999753e-05, 9.513899999999756e-05, 9.480499999999989e-05, 9.523599999999854e-05, 9.516700000000017e-05, 9.502800000000047e-05, 9.523599999999854e-05, 9.505599999999961e-05, 9.494499999999906e-05, 9.504200000000004e-05, 9.511100000000189e-05, 9.527800000000072e-05, 9.466699999999967e-05, 9.476400000000065e-05, 9.470900000000185e-05, 9.466599999999672e-05, 9.51660000000007e-05, 9.497199999999872e-05, 9.484700000000207e-05, 9.51660000000007e-05, 9.472199999999847e-05, 9.506899999999971e-05, 9.491699999999992e-05, 9.476400000000065e-05, 9.483299999999903e-05, 9.506999999999918e-05, 9.470899999999838e-05, 9.518099999999974e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.559" endtime="20201029 18:15:50.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.554" endtime="20201029 18:15:50.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.565" endtime="20201029 18:15:50.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.564" endtime="20201029 18:15:50.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.562" endtime="20201029 18:15:50.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.203" endtime="20201029 18:15:50.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.202" endtime="20201029 18:15:50.586"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.594" endtime="20201029 18:15:50.613"></status>
</kw>
<msg timestamp="20201029 18:15:50.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.593" endtime="20201029 18:15:50.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.615" endtime="20201029 18:15:50.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.617" endtime="20201029 18:15:50.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.590" endtime="20201029 18:15:50.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.588" endtime="20201029 18:15:50.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.626" endtime="20201029 18:15:50.912"></status>
</kw>
<msg timestamp="20201029 18:15:50.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.625" endtime="20201029 18:15:50.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.916" endtime="20201029 18:15:50.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.924" endtime="20201029 18:15:50.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.622" endtime="20201029 18:15:50.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.620" endtime="20201029 18:15:50.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.931" level="INFO">${RESULT} = [{'diff': 9.665299999999863e-05}, {'diff': 9.624999999999911e-05}, {'diff': 9.619400000000083e-05}, {'diff': 9.601399999999843e-05}, {'diff': 9.616700000000117e-05}, {'diff': 9.575000000000208e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:50.928" endtime="20201029 18:15:50.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.935" level="INFO">${ACCURACY} = {'diff': [9.665299999999863e-05, 9.624999999999911e-05, 9.619400000000083e-05, 9.601399999999843e-05, 9.616700000000117e-05, 9.575000000000208e-05, 9.607000000000018e-05, 9.57079999999999e-05, 9.58199...</msg>
<status status="PASS" starttime="20201029 18:15:50.932" endtime="20201029 18:15:50.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.940" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.939" endtime="20201029 18:15:50.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.942" level="INFO">VALUE: [9.665299999999863e-05, 9.624999999999911e-05, 9.619400000000083e-05, 9.601399999999843e-05, 9.616700000000117e-05, 9.575000000000208e-05, 9.607000000000018e-05, 9.57079999999999e-05, 9.581999999999993e-05, 9.616700000000117e-05, 9.609799999999932e-05, 9.611200000000236e-05, 9.586099999999917e-05, 9.579100000000132e-05, 9.6027000000002e-05, 9.574999999999861e-05, 9.565200000000162e-05, 9.613900000000203e-05, 9.60140000000019e-05, 9.579200000000079e-05, 9.584700000000307e-05, 9.622299999999945e-05, 9.62080000000004e-05, 9.577800000000122e-05, 9.605600000000061e-05, 9.59729999999992e-05, 9.619499999999684e-05, 9.581999999999993e-05, 9.588900000000178e-05, 9.573700000000199e-05, 9.608300000000028e-05, 9.61530000000016e-05, 9.577800000000122e-05, 9.608399999999975e-05, 9.573600000000251e-05, 9.615299999999813e-05, 9.599999999999886e-05, 9.566700000000067e-05, 9.611099999999942e-05, 9.579200000000079e-05, 9.576400000000165e-05, 9.619500000000031e-05, 9.56530000000011e-05, 9.622299999999945e-05, 9.565299999999763e-05, 9.632000000000043e-05, 9.573600000000251e-05, 9.566599999999773e-05, 9.580600000000036e-05, 9.587499999999874e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.941" endtime="20201029 18:15:50.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.936" endtime="20201029 18:15:50.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.947" endtime="20201029 18:15:50.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.946" endtime="20201029 18:15:50.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.944" endtime="20201029 18:15:50.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.587" endtime="20201029 18:15:50.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.586" endtime="20201029 18:15:50.968"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.977" endtime="20201029 18:15:50.996"></status>
</kw>
<msg timestamp="20201029 18:15:50.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.975" endtime="20201029 18:15:50.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.998" endtime="20201029 18:15:50.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.000" endtime="20201029 18:15:51.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.972" endtime="20201029 18:15:51.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.970" endtime="20201029 18:15:51.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.009" endtime="20201029 18:15:51.295"></status>
</kw>
<msg timestamp="20201029 18:15:51.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.008" endtime="20201029 18:15:51.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.299" endtime="20201029 18:15:51.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.307" endtime="20201029 18:15:51.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.005" endtime="20201029 18:15:51.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.003" endtime="20201029 18:15:51.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.314" level="INFO">${RESULT} = [{'diff': 9.783299999999856e-05}, {'diff': 9.697200000000072e-05}, {'diff': 9.719499999999784e-05}, {'diff': 9.715299999999913e-05}, {'diff': 9.713899999999956e-05}, {'diff': 9.665299999999863e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:51.311" endtime="20201029 18:15:51.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.318" level="INFO">${ACCURACY} = {'diff': [9.783299999999856e-05, 9.697200000000072e-05, 9.719499999999784e-05, 9.715299999999913e-05, 9.713899999999956e-05, 9.665299999999863e-05, 9.723700000000002e-05, 9.711100000000042e-05, 9.7138...</msg>
<status status="PASS" starttime="20201029 18:15:51.315" endtime="20201029 18:15:51.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.323" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.322" endtime="20201029 18:15:51.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.325" level="INFO">VALUE: [9.783299999999856e-05, 9.697200000000072e-05, 9.719499999999784e-05, 9.715299999999913e-05, 9.713899999999956e-05, 9.665299999999863e-05, 9.723700000000002e-05, 9.711100000000042e-05, 9.713899999999956e-05, 9.66530000000021e-05, 9.712499999999999e-05, 9.695800000000115e-05, 9.707000000000118e-05, 9.68470000000006e-05, 9.694399999999812e-05, 9.669400000000133e-05, 9.68470000000006e-05, 9.693099999999802e-05, 9.680600000000136e-05, 9.670899999999691e-05, 9.725000000000011e-05, 9.720900000000088e-05, 9.713899999999956e-05, 9.68470000000006e-05, 9.693100000000149e-05, 9.683299999999756e-05, 9.693099999999802e-05, 9.67080000000009e-05, 9.701399999999943e-05, 9.676399999999918e-05, 9.68470000000006e-05, 9.690300000000235e-05, 9.699999999999986e-05, 9.720799999999793e-05, 9.67080000000009e-05, 9.670900000000038e-05, 9.68340000000005e-05, 9.666700000000167e-05, 9.711100000000042e-05, 9.708300000000128e-05, 9.729099999999935e-05, 9.69860000000003e-05, 9.68470000000006e-05, 9.694400000000158e-05, 9.684699999999713e-05, 9.683300000000103e-05, 9.715299999999913e-05, 9.672200000000047e-05, 9.709700000000085e-05, 9.709800000000032e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.324" endtime="20201029 18:15:51.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.319" endtime="20201029 18:15:51.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.331" endtime="20201029 18:15:51.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.329" endtime="20201029 18:15:51.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.328" endtime="20201029 18:15:51.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.969" endtime="20201029 18:15:51.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.968" endtime="20201029 18:15:51.352"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.360" endtime="20201029 18:15:51.379"></status>
</kw>
<msg timestamp="20201029 18:15:51.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.359" endtime="20201029 18:15:51.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.381" endtime="20201029 18:15:51.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.383" endtime="20201029 18:15:51.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.356" endtime="20201029 18:15:51.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.354" endtime="20201029 18:15:51.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.392" endtime="20201029 18:15:51.678"></status>
</kw>
<msg timestamp="20201029 18:15:51.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:51.391" endtime="20201029 18:15:51.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:51.682" endtime="20201029 18:15:51.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.690" endtime="20201029 18:15:51.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.388" endtime="20201029 18:15:51.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.386" endtime="20201029 18:15:51.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.697" level="INFO">${RESULT} = [{'diff': 9.8721999999999e-05}, {'diff': 9.831999999999896e-05}, {'diff': 9.794499999999859e-05}, {'diff': 9.787499999999727e-05}, {'diff': 9.773700000000052e-05}, {'diff': 9.76530000000031e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:15:51.694" endtime="20201029 18:15:51.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.702" level="INFO">${ACCURACY} = {'diff': [9.8721999999999e-05, 9.831999999999896e-05, 9.794499999999859e-05, 9.787499999999727e-05, 9.773700000000052e-05, 9.76530000000031e-05, 9.8028e-05, 9.808300000000228e-05, 9.783300000000203e-0...</msg>
<status status="PASS" starttime="20201029 18:15:51.698" endtime="20201029 18:15:51.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.706" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.705" endtime="20201029 18:15:51.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.709" level="INFO">VALUE: [9.8721999999999e-05, 9.831999999999896e-05, 9.794499999999859e-05, 9.787499999999727e-05, 9.773700000000052e-05, 9.76530000000031e-05, 9.8028e-05, 9.808300000000228e-05, 9.783300000000203e-05, 9.823600000000154e-05, 9.794399999999912e-05, 9.766599999999973e-05, 9.776400000000018e-05, 9.82219999999985e-05, 9.768099999999877e-05, 9.793099999999902e-05, 9.770900000000138e-05, 9.805600000000261e-05, 9.776400000000018e-05, 9.788900000000031e-05, 9.78340000000015e-05, 9.825000000000111e-05, 9.795900000000163e-05, 9.815300000000013e-05, 9.791599999999998e-05, 9.813900000000056e-05, 9.816600000000023e-05, 9.820799999999894e-05, 9.82219999999985e-05, 9.822200000000197e-05, 9.815300000000013e-05, 9.801400000000043e-05, 9.807000000000218e-05, 9.801400000000043e-05, 9.793099999999902e-05, 9.783399999999803e-05, 9.770900000000138e-05, 9.770899999999791e-05, 9.822299999999798e-05, 9.806899999999924e-05, 9.787499999999727e-05, 9.816599999999676e-05, 9.811099999999795e-05, 9.822200000000197e-05, 9.78470000000016e-05, 9.805499999999967e-05, 9.781899999999899e-05, 9.804199999999957e-05, 9.787500000000074e-05, 9.772299999999748e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.708" endtime="20201029 18:15:51.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.703" endtime="20201029 18:15:51.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.714" endtime="20201029 18:15:51.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.712" endtime="20201029 18:15:51.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.711" endtime="20201029 18:15:51.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.353" endtime="20201029 18:15:51.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.352" endtime="20201029 18:15:51.735"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.744" endtime="20201029 18:15:51.763"></status>
</kw>
<msg timestamp="20201029 18:15:51.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.743" endtime="20201029 18:15:51.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.765" endtime="20201029 18:15:51.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.767" endtime="20201029 18:15:51.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.740" endtime="20201029 18:15:51.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.738" endtime="20201029 18:15:51.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.776" endtime="20201029 18:15:52.063"></status>
</kw>
<msg timestamp="20201029 18:15:52.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022907486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.775" endtime="20201029 18:15:52.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022907486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.067" endtime="20201029 18:15:52.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.076" endtime="20201029 18:15:52.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.772" endtime="20201029 18:15:52.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.770" endtime="20201029 18:15:52.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.082" level="INFO">${RESULT} = [{'diff': 9.897200000000272e-05}, {'diff': 9.841699999999995e-05}, {'diff': 9.884699999999913e-05}, {'diff': 9.893100000000002e-05}, {'diff': 9.887499999999827e-05}, {'diff': 9.872299999999848e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:52.079" endtime="20201029 18:15:52.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.086" level="INFO">${ACCURACY} = {'diff': [9.897200000000272e-05, 9.841699999999995e-05, 9.884699999999913e-05, 9.893100000000002e-05, 9.887499999999827e-05, 9.872299999999848e-05, 9.88609999999987e-05, 9.911099999999895e-05, 9.91800...</msg>
<status status="PASS" starttime="20201029 18:15:52.083" endtime="20201029 18:15:52.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.091" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.090" endtime="20201029 18:15:52.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.093" level="INFO">VALUE: [9.897200000000272e-05, 9.841699999999995e-05, 9.884699999999913e-05, 9.893100000000002e-05, 9.887499999999827e-05, 9.872299999999848e-05, 9.88609999999987e-05, 9.911099999999895e-05, 9.91800000000008e-05, 9.86800000000003e-05, 9.880500000000042e-05, 9.876400000000118e-05, 9.865300000000063e-05, 9.911099999999895e-05, 9.898599999999882e-05, 9.912500000000199e-05, 9.91670000000007e-05, 9.916699999999723e-05, 9.89999999999984e-05, 9.88479999999986e-05, 9.919499999999984e-05, 9.911200000000189e-05, 9.906900000000024e-05, 9.902699999999806e-05, 9.919400000000037e-05, 9.880500000000042e-05, 9.911100000000242e-05, 9.913899999999809e-05, 9.89999999999984e-05, 9.909799999999885e-05, 9.92219999999995e-05, 9.919400000000037e-05, 9.876400000000118e-05, 9.920799999999994e-05, 9.883399999999903e-05, 9.915300000000113e-05, 9.919499999999984e-05, 9.911199999999842e-05, 9.866600000000073e-05, 9.913800000000209e-05, 9.906900000000024e-05, 9.884699999999913e-05, 9.880500000000042e-05, 9.909699999999938e-05, 9.920799999999994e-05, 9.913900000000156e-05, 9.918100000000027e-05, 9.89999999999984e-05, 9.919499999999984e-05, 9.883299999999956e-05]</msg>
<status status="PASS" starttime="20201029 18:15:52.092" endtime="20201029 18:15:52.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.087" endtime="20201029 18:15:52.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.098" endtime="20201029 18:15:52.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.097" endtime="20201029 18:15:52.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.096" endtime="20201029 18:15:52.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.736" endtime="20201029 18:15:52.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.735" endtime="20201029 18:15:52.119"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.128" endtime="20201029 18:15:52.148"></status>
</kw>
<msg timestamp="20201029 18:15:52.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.126" endtime="20201029 18:15:52.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.149" endtime="20201029 18:15:52.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.152" endtime="20201029 18:15:52.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.123" endtime="20201029 18:15:52.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.121" endtime="20201029 18:15:52.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.161" endtime="20201029 18:15:52.446"></status>
</kw>
<msg timestamp="20201029 18:15:52.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022882417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.159" endtime="20201029 18:15:52.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022882417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.450" endtime="20201029 18:15:52.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.458" endtime="20201029 18:15:52.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.156" endtime="20201029 18:15:52.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.155" endtime="20201029 18:15:52.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.465" level="INFO">${RESULT} = [{'diff': 9.997299999999973e-05}, {'diff': 0.00010027699999999931}, {'diff': 0.00010017999999999833}, {'diff': 0.00010006900000000124}, {'diff': 9.994400000000112e-05}, {'diff': 9.970800000000044e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:52.461" endtime="20201029 18:15:52.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.469" level="INFO">${ACCURACY} = {'diff': [9.997299999999973e-05, 0.00010027699999999931, 0.00010017999999999833, 0.00010006900000000124, 9.994400000000112e-05, 9.970800000000044e-05, 0.00010026399999999921, 0.00010009700000000038, 0...</msg>
<status status="PASS" starttime="20201029 18:15:52.466" endtime="20201029 18:15:52.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.473" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.472" endtime="20201029 18:15:52.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.476" level="INFO">VALUE: [9.997299999999973e-05, 0.00010027699999999931, 0.00010017999999999833, 0.00010006900000000124, 9.994400000000112e-05, 9.970800000000044e-05, 0.00010026399999999921, 0.00010009700000000038, 0.000100028000000002, 0.00010001399999999896, 0.00010006999999999724, 0.00010007000000000071, 9.994499999999712e-05, 0.00010015299999999866, 0.00010008299999999734, 9.982000000000046e-05, 0.00010009700000000038, 0.00010008300000000081, 9.963899999999859e-05, 9.976399999999871e-05, 0.00010029200000000182, 9.966600000000173e-05, 9.983400000000003e-05, 9.98609999999997e-05, 9.965299999999816e-05, 9.988899999999884e-05, 0.00010006999999999724, 0.00010016699999999823, 0.00010012499999999952, 9.973699999999905e-05, 9.976399999999871e-05, 0.0001000419999999981, 9.977699999999881e-05, 0.00010009699999999691, 0.00010002699999999906, 9.979100000000185e-05, 0.00010008299999999734, 0.00010027800000000225, 0.00010012499999999952, 0.00010002799999999853, 9.99860000000033e-05, 0.0001000419999999981, 9.993100000000102e-05, 9.991699999999798e-05, 9.979200000000132e-05, 9.988899999999884e-05, 9.98479999999996e-05, 0.00010007000000000071, 9.994400000000112e-05, 0.00010011099999999995]</msg>
<status status="PASS" starttime="20201029 18:15:52.474" endtime="20201029 18:15:52.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.470" endtime="20201029 18:15:52.482"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.486" endtime="20201029 18:15:52.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.484" endtime="20201029 18:15:52.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.483" endtime="20201029 18:15:52.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.120" endtime="20201029 18:15:52.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.119" endtime="20201029 18:15:52.507"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.515" endtime="20201029 18:15:52.535"></status>
</kw>
<msg timestamp="20201029 18:15:52.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.514" endtime="20201029 18:15:52.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.537" endtime="20201029 18:15:52.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.539" endtime="20201029 18:15:52.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.511" endtime="20201029 18:15:52.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.509" endtime="20201029 18:15:52.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.548" endtime="20201029 18:15:52.834"></status>
</kw>
<msg timestamp="20201029 18:15:52.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022049375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022151042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.546" endtime="20201029 18:15:52.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022049375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022151042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.838" endtime="20201029 18:15:52.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.846" endtime="20201029 18:15:52.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.544" endtime="20201029 18:15:52.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.542" endtime="20201029 18:15:52.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.853" level="INFO">${RESULT} = [{'diff': 0.00010166699999999973}, {'diff': 0.00010120800000000194}, {'diff': 0.0001010419999999991}, {'diff': 0.00010075000000000014}, {'diff': 0.00010105599999999867}, {'diff': 0.0001012640000000002...</msg>
<status status="PASS" starttime="20201029 18:15:52.849" endtime="20201029 18:15:52.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.858" level="INFO">${ACCURACY} = {'diff': [0.00010166699999999973, 0.00010120800000000194, 0.0001010419999999991, 0.00010075000000000014, 0.00010105599999999867, 0.00010126400000000021, 0.00010095800000000169, 0.00010070800000000144,...</msg>
<status status="PASS" starttime="20201029 18:15:52.854" endtime="20201029 18:15:52.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.862" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.861" endtime="20201029 18:15:52.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.864" level="INFO">VALUE: [0.00010166699999999973, 0.00010120800000000194, 0.0001010419999999991, 0.00010075000000000014, 0.00010105599999999867, 0.00010126400000000021, 0.00010095800000000169, 0.00010070800000000144, 0.00010126400000000021, 0.00010066699999999873, 0.00010120899999999794, 0.0001010000000000004, 0.00010076399999999971, 0.0001010419999999991, 0.00010116699999999923, 0.00010119400000000237, 0.00010113900000000009, 0.00010076399999999971, 0.0001008610000000007, 0.0001008060000000019, 0.00010113900000000009, 0.00010079200000000232, 0.00010109799999999738, 0.00010090299999999941, 0.000101028000000003, 0.00010077800000000275, 0.0001011809999999988, 0.0001009870000000003, 0.00010061100000000045, 0.00010123700000000055, 0.00010119500000000184, 0.00010117999999999933, 0.00010101300000000049, 0.00010122199999999804, 0.00010111100000000095, 0.00010069400000000187, 0.0001008749999999968, 0.00010101399999999996, 0.00010084700000000113, 0.0001010000000000004, 0.00010119500000000184, 0.00010079199999999885, 0.00010105600000000214, 0.00010082000000000146, 0.00010076399999999971, 0.0001009870000000003, 0.00010070799999999797, 0.0001011939999999989, 0.00010077799999999928, 0.00010077699999999981]</msg>
<status status="PASS" starttime="20201029 18:15:52.863" endtime="20201029 18:15:52.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.858" endtime="20201029 18:15:52.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.869" endtime="20201029 18:15:52.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.868" endtime="20201029 18:15:52.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.867" endtime="20201029 18:15:52.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.508" endtime="20201029 18:15:52.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.507" endtime="20201029 18:15:52.890"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.899" endtime="20201029 18:15:52.918"></status>
</kw>
<msg timestamp="20201029 18:15:52.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.897" endtime="20201029 18:15:52.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.919" endtime="20201029 18:15:52.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.922" endtime="20201029 18:15:52.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.895" endtime="20201029 18:15:52.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.892" endtime="20201029 18:15:52.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.931" endtime="20201029 18:15:53.217"></status>
</kw>
<msg timestamp="20201029 18:15:53.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021884056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.929" endtime="20201029 18:15:53.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021884056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.221" endtime="20201029 18:15:53.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.229" endtime="20201029 18:15:53.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.927" endtime="20201029 18:15:53.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.925" endtime="20201029 18:15:53.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.235" level="INFO">${RESULT} = [{'diff': 0.00010233399999999906}, {'diff': 0.00010216700000000023}, {'diff': 0.00010222199999999904}, {'diff': 0.0001021809999999998}, {'diff': 0.00010215300000000066}, {'diff': 0.0001017079999999989...</msg>
<status status="PASS" starttime="20201029 18:15:53.232" endtime="20201029 18:15:53.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:53.240" level="INFO">${ACCURACY} = {'diff': [0.00010233399999999906, 0.00010216700000000023, 0.00010222199999999904, 0.0001021809999999998, 0.00010215300000000066, 0.00010170799999999897, 0.0001022359999999986, 0.00010166699999999973, ...</msg>
<status status="PASS" starttime="20201029 18:15:53.236" endtime="20201029 18:15:53.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.244" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:15:53.243" endtime="20201029 18:15:53.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.246" level="INFO">VALUE: [0.00010233399999999906, 0.00010216700000000023, 0.00010222199999999904, 0.0001021809999999998, 0.00010215300000000066, 0.00010170799999999897, 0.0001022359999999986, 0.00010166699999999973, 0.00010222199999999904, 0.00010195900000000216, 0.00010216700000000023, 0.00010173700000000105, 0.00010163900000000059, 0.00010202800000000053, 0.00010194399999999965, 0.00010170799999999897, 0.00010218000000000033, 0.0001020550000000002, 0.00010195799999999922, 0.00010208299999999934, 0.0001016809999999993, 0.0001020420000000001, 0.00010183299999999909, 0.00010168100000000277, 0.00010226400000000122, 0.00010168100000000277, 0.00010220900000000241, 0.00010216699999999676, 0.0001018749999999978, 0.00010176299999999777, 0.00010202699999999759, 0.00010188900000000084, 0.00010182000000000246, 0.00010198600000000183, 0.00010188900000000084, 0.0001020420000000001, 0.00010175000000000115, 0.00010213900000000109, 0.0001018610000000017, 0.00010208400000000228, 0.00010172199999999854, 0.00010169499999999887, 0.0001021809999999998, 0.0001016809999999993, 0.00010186099999999823, 0.00010186099999999823, 0.00010172199999999854, 0.0001018610000000017, 0.00010191699999999998, 0.00010166600000000026]</msg>
<status status="PASS" starttime="20201029 18:15:53.245" endtime="20201029 18:15:53.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.240" endtime="20201029 18:15:53.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.251" endtime="20201029 18:15:53.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.250" endtime="20201029 18:15:53.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.249" endtime="20201029 18:15:53.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.891" endtime="20201029 18:15:53.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.890" endtime="20201029 18:15:53.272"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.281" endtime="20201029 18:15:53.304"></status>
</kw>
<msg timestamp="20201029 18:15:53.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.279" endtime="20201029 18:15:53.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.306" endtime="20201029 18:15:53.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.308" endtime="20201029 18:15:53.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.277" endtime="20201029 18:15:53.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.275" endtime="20201029 18:15:53.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.317" endtime="20201029 18:15:53.603"></status>
</kw>
<msg timestamp="20201029 18:15:53.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025174333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025277653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.316" endtime="20201029 18:15:53.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025174333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025277653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.607" endtime="20201029 18:15:53.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.615" endtime="20201029 18:15:53.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.313" endtime="20201029 18:15:53.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.311" endtime="20201029 18:15:53.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.622" level="INFO">${RESULT} = [{'diff': 0.0001033200000000005}, {'diff': 0.00010284799999999913}, {'diff': 0.00010270799999999997}, {'diff': 0.00010316600000000176}, {'diff': 0.00010286099999999923}, {'diff': 0.0001028609999999992...</msg>
<status status="PASS" starttime="20201029 18:15:53.618" endtime="20201029 18:15:53.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:53.626" level="INFO">${ACCURACY} = {'diff': [0.0001033200000000005, 0.00010284799999999913, 0.00010270799999999997, 0.00010316600000000176, 0.00010286099999999923, 0.00010286099999999923, 0.00010294400000000065, 0.00010299999999999893,...</msg>
<status status="PASS" starttime="20201029 18:15:53.623" endtime="20201029 18:15:53.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.630" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:15:53.629" endtime="20201029 18:15:53.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.633" level="INFO">VALUE: [0.0001033200000000005, 0.00010284799999999913, 0.00010270799999999997, 0.00010316600000000176, 0.00010286099999999923, 0.00010286099999999923, 0.00010294400000000065, 0.00010299999999999893, 0.00010297199999999979, 0.00010305600000000067, 0.0001028749999999988, 0.00010290300000000141, 0.00010282, 0.0001031810000000008, 0.0001031810000000008, 0.00010282, 0.00010322200000000004, 0.00010297299999999926, 0.00010290199999999847, 0.00010283300000000009, 0.00010297200000000326, 0.00010281900000000052, 0.00010284699999999966, 0.00010301400000000197, 0.00010316700000000123, 0.00010290199999999847, 0.00010319399999999743, 0.00010299999999999893, 0.00010315300000000166, 0.00010274999999999868, 0.00010277800000000128, 0.00010309799999999938, 0.00010320899999999994, 0.00010291700000000098, 0.0001026940000000004, 0.00010281900000000052, 0.00010286099999999923, 0.00010316700000000123, 0.00010315299999999819, 0.00010280600000000042, 0.00010293099999999708, 0.00010263899999999812, 0.00010316700000000123, 0.0001027359999999991, 0.0001031810000000008, 0.00010293100000000055, 0.00010295899999999969, 0.00010333299999999712, 0.00010312500000000252, 0.00010277699999999834]</msg>
<status status="PASS" starttime="20201029 18:15:53.631" endtime="20201029 18:15:53.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.626" endtime="20201029 18:15:53.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.638" endtime="20201029 18:15:53.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.637" endtime="20201029 18:15:53.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.636" endtime="20201029 18:15:53.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.273" endtime="20201029 18:15:53.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.272" endtime="20201029 18:15:53.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.174" endtime="20201029 18:15:53.659"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:15.104" endtime="20201029 18:15:53.660" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.666" endtime="20201029 18:15:53.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.665" endtime="20201029 18:15:53.686"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.700" endtime="20201029 18:15:53.713"></status>
</kw>
<msg timestamp="20201029 18:15:53.713" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.698" endtime="20201029 18:15:53.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.716" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.714" endtime="20201029 18:15:53.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.719" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:53.717" endtime="20201029 18:15:53.719"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:53.695" endtime="20201029 18:15:53.720"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:53.693" endtime="20201029 18:15:53.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.692" endtime="20201029 18:15:53.721"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:53.724" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:53.724" endtime="20201029 18:15:53.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.721" endtime="20201029 18:15:53.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.691" endtime="20201029 18:15:53.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.690" endtime="20201029 18:15:53.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.726" endtime="20201029 18:15:53.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.689" endtime="20201029 18:15:53.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.687" endtime="20201029 18:15:53.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.664" endtime="20201029 18:15:53.729"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.739" endtime="20201029 18:15:53.753"></status>
</kw>
<msg timestamp="20201029 18:15:53.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.738" endtime="20201029 18:15:53.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.755" endtime="20201029 18:15:53.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.758" endtime="20201029 18:15:53.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.734" endtime="20201029 18:15:53.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.732" endtime="20201029 18:15:53.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.767" endtime="20201029 18:15:54.048"></status>
</kw>
<msg timestamp="20201029 18:15:54.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065464944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065469944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.765" endtime="20201029 18:15:54.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065464944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065469944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.053" endtime="20201029 18:15:54.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.061" endtime="20201029 18:15:54.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.763" endtime="20201029 18:15:54.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.761" endtime="20201029 18:15:54.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.067" level="INFO">${RESULT} = [{'diff': 5.0000000000050004e-06}, {'diff': 3.79200000000246e-06}, {'diff': 3.041999999994771e-06}, {'diff': 3.5689999999949373e-06}, {'diff': 3.041999999994771e-06}, {'diff': 3.569000000008815e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:54.064" endtime="20201029 18:15:54.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.072" level="INFO">${ACCURACY} = {'diff': [5.0000000000050004e-06, 3.79200000000246e-06, 3.041999999994771e-06, 3.5689999999949373e-06, 3.041999999994771e-06, 3.569000000008815e-06, 3.569999999994411e-06, 3.569000000008815e-06, 3.040...</msg>
<status status="PASS" starttime="20201029 18:15:54.068" endtime="20201029 18:15:54.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.077" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.076" endtime="20201029 18:15:54.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.079" level="INFO">VALUE: [5.0000000000050004e-06, 3.79200000000246e-06, 3.041999999994771e-06, 3.5689999999949373e-06, 3.041999999994771e-06, 3.569000000008815e-06, 3.569999999994411e-06, 3.569000000008815e-06, 3.0409999999952975e-06, 3.55600000000178e-06, 3.55600000000178e-06, 3.042000000008649e-06, 3.569999999994411e-06, 3.5829999999875684e-06, 3.02800000000214e-06, 3.5700000000082888e-06, 3.569000000008815e-06, 3.55600000000178e-06, 3.0139999999956313e-06, 3.542000000009149e-06, 3.5700000000082888e-06, 3.041999999994771e-06, 3.569999999994411e-06, 3.041999999994771e-06, 3.569999999994411e-06, 3.569999999994411e-06, 3.583000000001446e-06, 3.02800000000214e-06, 3.5689999999949373e-06, 3.0139999999956313e-06, 3.569999999994411e-06, 3.5689999999949373e-06, 3.0269999999887887e-06, 3.5700000000082888e-06, 3.583000000001446e-06, 3.02800000000214e-06, 3.5689999999949373e-06, 3.5139999999961313e-06, 3.5689999999949373e-06, 3.5549999999884285e-06, 3.0279999999882623e-06, 3.5689999999949373e-06, 3.5840000000009198e-06, 3.569000000008815e-06, 3.02800000000214e-06, 3.5689999999949373e-06, 3.0270000000026664e-06, 3.55600000000178e-06, 3.569000000008815e-06, 3.55600000000178e-06]</msg>
<status status="PASS" starttime="20201029 18:15:54.078" endtime="20201029 18:15:54.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.072" endtime="20201029 18:15:54.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.084" endtime="20201029 18:15:54.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.082" endtime="20201029 18:15:54.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.081" endtime="20201029 18:15:54.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.730" endtime="20201029 18:15:54.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.730" endtime="20201029 18:15:54.105"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.113" endtime="20201029 18:15:54.128"></status>
</kw>
<msg timestamp="20201029 18:15:54.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.112" endtime="20201029 18:15:54.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.130" endtime="20201029 18:15:54.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.132" endtime="20201029 18:15:54.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.109" endtime="20201029 18:15:54.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.107" endtime="20201029 18:15:54.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.141" endtime="20201029 18:15:54.430"></status>
</kw>
<msg timestamp="20201029 18:15:54.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.140" endtime="20201029 18:15:54.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.434" endtime="20201029 18:15:54.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.443" endtime="20201029 18:15:54.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.137" endtime="20201029 18:15:54.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.135" endtime="20201029 18:15:54.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.449" level="INFO">${RESULT} = [{'diff': 4.9999999999980616e-06}, {'diff': 4.707999999999102e-06}, {'diff': 4.403000000000046e-06}, {'diff': 4.403000000000046e-06}, {'diff': 4.389000000000476e-06}, {'diff': 4.7089999999985754e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:54.446" endtime="20201029 18:15:54.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.454" level="INFO">${ACCURACY} = {'diff': [4.9999999999980616e-06, 4.707999999999102e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.7089999999985754e-06, 4.0559999999988106e-06, 4.389000000000476e-06, 4.4...</msg>
<status status="PASS" starttime="20201029 18:15:54.450" endtime="20201029 18:15:54.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.459" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.458" endtime="20201029 18:15:54.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.461" level="INFO">VALUE: [4.9999999999980616e-06, 4.707999999999102e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.7089999999985754e-06, 4.0559999999988106e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.111000000001086e-06, 4.6949999999990055e-06, 4.08399999999795e-06, 4.693999999999532e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.707999999999102e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.680999999999436e-06, 4.723000000001615e-06, 4.708000000002571e-06, 4.36199999999734e-06, 4.402000000000572e-06, 4.721999999998672e-06, 4.360999999997867e-06, 4.36199999999734e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.082999999998477e-06, 4.389000000000476e-06, 4.08400000000142e-06, 4.666999999999866e-06, 4.707999999999102e-06, 4.473000000001365e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.111000000001086e-06, 4.6949999999990055e-06]</msg>
<status status="PASS" starttime="20201029 18:15:54.460" endtime="20201029 18:15:54.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.455" endtime="20201029 18:15:54.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.466" endtime="20201029 18:15:54.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.464" endtime="20201029 18:15:54.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.463" endtime="20201029 18:15:54.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.106" endtime="20201029 18:15:54.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.105" endtime="20201029 18:15:54.487"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.496" endtime="20201029 18:15:54.509"></status>
</kw>
<msg timestamp="20201029 18:15:54.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.494" endtime="20201029 18:15:54.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.511" endtime="20201029 18:15:54.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.513" endtime="20201029 18:15:54.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.492" endtime="20201029 18:15:54.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.489" endtime="20201029 18:15:54.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.523" endtime="20201029 18:15:54.813"></status>
</kw>
<msg timestamp="20201029 18:15:54.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022324875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02233075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:54.521" endtime="20201029 18:15:54.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022324875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02233075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:54.817" endtime="20201029 18:15:54.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.826" endtime="20201029 18:15:54.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.518" endtime="20201029 18:15:54.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.517" endtime="20201029 18:15:54.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.832" level="INFO">${RESULT} = [{'diff': 5.874999999998937e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.319999999999631e-06}, {'diff': 5.625000000002156e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.0139999999976315e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:54.829" endtime="20201029 18:15:54.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.837" level="INFO">${ACCURACY} = {'diff': [5.874999999998937e-06, 5.624999999998687e-06, 5.319999999999631e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.0139999999976315e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.319...</msg>
<status status="PASS" starttime="20201029 18:15:54.833" endtime="20201029 18:15:54.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.841" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.840" endtime="20201029 18:15:54.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.844" level="INFO">VALUE: [5.874999999998937e-06, 5.624999999998687e-06, 5.319999999999631e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.0139999999976315e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.624999999998687e-06, 5.319999999999631e-06, 5.903000000001546e-06, 5.306000000000061e-06, 5.6389999999982565e-06, 5.306000000000061e-06, 5.305000000000587e-06, 5.375000000001906e-06, 5.5979999999990204e-06, 5.319000000000157e-06, 5.041000000000767e-06, 5.36199999999834e-06, 5.625000000002156e-06, 5.000000000001531e-06, 5.945000000000256e-06, 4.9999999999980616e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.291999999997021e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.306000000000061e-06, 5.6389999999982565e-06, 5.319000000000157e-06, 5.639000000001726e-06, 5.319999999999631e-06, 5.611000000002586e-06, 5.319000000000157e-06, 5.556000000000311e-06, 4.943999999999782e-06, 5.306000000000061e-06, 5.319000000000157e-06, 5.34800000000224e-06, 5.000000000001531e-06, 5.653000000001296e-06, 5.277000000001447e-06, 5.319000000000157e-06, 5.6389999999982565e-06]</msg>
<status status="PASS" starttime="20201029 18:15:54.842" endtime="20201029 18:15:54.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.838" endtime="20201029 18:15:54.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.848" endtime="20201029 18:15:54.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.846" endtime="20201029 18:15:54.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.845" endtime="20201029 18:15:54.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.488" endtime="20201029 18:15:54.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.487" endtime="20201029 18:15:54.869"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.879" endtime="20201029 18:15:54.893"></status>
</kw>
<msg timestamp="20201029 18:15:54.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.876" endtime="20201029 18:15:54.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.895" endtime="20201029 18:15:54.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.897" endtime="20201029 18:15:54.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.874" endtime="20201029 18:15:54.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.872" endtime="20201029 18:15:54.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.906" endtime="20201029 18:15:55.195"></status>
</kw>
<msg timestamp="20201029 18:15:55.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023278889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023286944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.905" endtime="20201029 18:15:55.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023278889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023286944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.199" endtime="20201029 18:15:55.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.207" endtime="20201029 18:15:55.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.902" endtime="20201029 18:15:55.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.901" endtime="20201029 18:15:55.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.214" level="INFO">${RESULT} = [{'diff': 8.054999999999868e-06}, {'diff': 6.541999999998271e-06}, {'diff': 6.554999999998368e-06}, {'diff': 6.222000000000172e-06}, {'diff': 6.223000000003115e-06}, {'diff': 6.235999999999742e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:55.211" endtime="20201029 18:15:55.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.218" level="INFO">${ACCURACY} = {'diff': [8.054999999999868e-06, 6.541999999998271e-06, 6.554999999998368e-06, 6.222000000000172e-06, 6.223000000003115e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.5279...</msg>
<status status="PASS" starttime="20201029 18:15:55.215" endtime="20201029 18:15:55.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.223" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.222" endtime="20201029 18:15:55.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.225" level="INFO">VALUE: [8.054999999999868e-06, 6.541999999998271e-06, 6.554999999998368e-06, 6.222000000000172e-06, 6.223000000003115e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.5279999999987015e-06, 6.8469999999973274e-06, 6.235999999999742e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.528000000002171e-06, 6.541999999998271e-06, 6.306000000001061e-06, 6.249999999999312e-06, 6.542000000001741e-06, 6.235999999999742e-06, 6.833000000001227e-06, 6.222000000000172e-06, 6.526999999999228e-06, 6.5279999999987015e-06, 6.540999999998798e-06, 6.222000000000172e-06, 6.305999999997591e-06, 6.540999999998798e-06, 6.542000000001741e-06, 6.235999999999742e-06, 6.540999999998798e-06, 6.556000000001311e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.526999999999228e-06, 6.249999999999312e-06, 6.611000000000117e-06, 6.221999999996702e-06, 6.569000000001407e-06, 6.222000000000172e-06, 6.554999999998368e-06, 6.541999999998271e-06, 6.235999999999742e-06, 6.526999999999228e-06, 6.181000000000936e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.540999999998798e-06]</msg>
<status status="PASS" starttime="20201029 18:15:55.224" endtime="20201029 18:15:55.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.219" endtime="20201029 18:15:55.227"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.231" endtime="20201029 18:15:55.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.229" endtime="20201029 18:15:55.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.228" endtime="20201029 18:15:55.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.870" endtime="20201029 18:15:55.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.869" endtime="20201029 18:15:55.252"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.260" endtime="20201029 18:15:55.274"></status>
</kw>
<msg timestamp="20201029 18:15:55.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.259" endtime="20201029 18:15:55.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.276" endtime="20201029 18:15:55.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.279" endtime="20201029 18:15:55.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.256" endtime="20201029 18:15:55.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.254" endtime="20201029 18:15:55.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.288" endtime="20201029 18:15:55.570"></status>
</kw>
<msg timestamp="20201029 18:15:55.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.286" endtime="20201029 18:15:55.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.574" endtime="20201029 18:15:55.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.582" endtime="20201029 18:15:55.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.283" endtime="20201029 18:15:55.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.282" endtime="20201029 18:15:55.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.589" level="INFO">${RESULT} = [{'diff': 8.972000000002922e-06}, {'diff': 7.764000000000382e-06}, {'diff': 7.459000000001326e-06}, {'diff': 7.458000000001852e-06}, {'diff': 7.0829999999980076e-06}, {'diff': 7.138999999999757e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:55.585" endtime="20201029 18:15:55.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.594" level="INFO">${ACCURACY} = {'diff': [8.972000000002922e-06, 7.764000000000382e-06, 7.459000000001326e-06, 7.458000000001852e-06, 7.0829999999980076e-06, 7.138999999999757e-06, 7.444000000002282e-06, 7.1529999999993266e-06, 7.45...</msg>
<status status="PASS" starttime="20201029 18:15:55.590" endtime="20201029 18:15:55.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.598" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.597" endtime="20201029 18:15:55.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.601" level="INFO">VALUE: [8.972000000002922e-06, 7.764000000000382e-06, 7.459000000001326e-06, 7.458000000001852e-06, 7.0829999999980076e-06, 7.138999999999757e-06, 7.444000000002282e-06, 7.1529999999993266e-06, 7.458000000001852e-06, 7.1529999999993266e-06, 7.4719999999979525e-06, 7.458000000001852e-06, 7.764000000000382e-06, 7.0829999999980076e-06, 7.165999999999423e-06, 7.457999999998383e-06, 7.513000000000658e-06, 7.444000000002282e-06, 7.457999999998383e-06, 7.402999999999577e-06, 7.444999999998286e-06, 7.444999999998286e-06, 7.735999999997772e-06, 7.500000000000562e-06, 7.472000000001422e-06, 7.472000000001422e-06, 7.764000000000382e-06, 7.443999999998813e-06, 7.485999999997522e-06, 7.764000000000382e-06, 7.458999999997856e-06, 7.125000000000187e-06, 7.457999999998383e-06, 7.457999999998383e-06, 7.764000000000382e-06, 7.097000000001047e-06, 7.472000000001422e-06, 7.138999999999757e-06, 7.1529999999993266e-06, 7.457999999998383e-06, 7.527999999999702e-06, 7.138999999999757e-06, 7.443999999998813e-06, 7.151999999999853e-06, 7.445000000001756e-06, 7.1669999999988965e-06, 7.459000000001326e-06, 7.181000000001936e-06, 7.458000000001852e-06, 7.151999999999853e-06]</msg>
<status status="PASS" starttime="20201029 18:15:55.599" endtime="20201029 18:15:55.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.595" endtime="20201029 18:15:55.602"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.606" endtime="20201029 18:15:55.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.604" endtime="20201029 18:15:55.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.603" endtime="20201029 18:15:55.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.253" endtime="20201029 18:15:55.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.252" endtime="20201029 18:15:55.626"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.635" endtime="20201029 18:15:55.649"></status>
</kw>
<msg timestamp="20201029 18:15:55.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.634" endtime="20201029 18:15:55.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.651" endtime="20201029 18:15:55.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.653" endtime="20201029 18:15:55.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.631" endtime="20201029 18:15:55.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.629" endtime="20201029 18:15:55.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.662" endtime="20201029 18:15:55.949"></status>
</kw>
<msg timestamp="20201029 18:15:55.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.661" endtime="20201029 18:15:55.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.953" endtime="20201029 18:15:55.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.961" endtime="20201029 18:15:55.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.658" endtime="20201029 18:15:55.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.657" endtime="20201029 18:15:55.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.968" level="INFO">${RESULT} = [{'diff': 9.917000000001647e-06}, {'diff': 8.360999999998397e-06}, {'diff': 8.387999999998064e-06}, {'diff': 8.069999999998911e-06}, {'diff': 8.375000000001437e-06}, {'diff': 8.681000000003436e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:55.965" endtime="20201029 18:15:55.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.972" level="INFO">${ACCURACY} = {'diff': [9.917000000001647e-06, 8.360999999998397e-06, 8.387999999998064e-06, 8.069999999998911e-06, 8.375000000001437e-06, 8.681000000003436e-06, 8.445000000002756e-06, 8.069999999998911e-06, 8.6670...</msg>
<status status="PASS" starttime="20201029 18:15:55.969" endtime="20201029 18:15:55.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.977" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.976" endtime="20201029 18:15:55.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.979" level="INFO">VALUE: [9.917000000001647e-06, 8.360999999998397e-06, 8.387999999998064e-06, 8.069999999998911e-06, 8.375000000001437e-06, 8.681000000003436e-06, 8.445000000002756e-06, 8.069999999998911e-06, 8.667000000000397e-06, 8.375000000001437e-06, 8.374999999997967e-06, 8.707999999999633e-06, 8.375000000001437e-06, 8.374999999997967e-06, 8.305000000000118e-06, 8.361000000001867e-06, 8.361000000001867e-06, 8.028000000000202e-06, 8.374999999997967e-06, 8.068999999999438e-06, 8.666999999996927e-06, 8.055999999999341e-06, 8.695000000003006e-06, 8.360999999998397e-06, 8.374999999997967e-06, 8.305000000000118e-06, 8.375000000001437e-06, 8.387999999998064e-06, 8.346999999998828e-06, 8.375000000001437e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.292000000000022e-06, 8.361000000001867e-06, 8.721999999999203e-06, 8.375000000001437e-06, 8.680000000000493e-06, 8.069000000002907e-06, 8.068999999999438e-06, 8.346999999998828e-06, 8.360999999998397e-06, 8.374999999997967e-06, 8.069000000002907e-06, 8.374999999997967e-06, 8.375000000001437e-06, 8.389000000001007e-06, 8.375000000001437e-06, 8.694000000000063e-06, 8.389000000001007e-06]</msg>
<status status="PASS" starttime="20201029 18:15:55.978" endtime="20201029 18:15:55.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.973" endtime="20201029 18:15:55.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.984" endtime="20201029 18:15:56.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.983" endtime="20201029 18:15:56.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.981" endtime="20201029 18:15:56.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.627" endtime="20201029 18:15:56.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.627" endtime="20201029 18:15:56.005"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.014" endtime="20201029 18:15:56.029"></status>
</kw>
<msg timestamp="20201029 18:15:56.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.012" endtime="20201029 18:15:56.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.030" endtime="20201029 18:15:56.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.033" endtime="20201029 18:15:56.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.010" endtime="20201029 18:15:56.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.007" endtime="20201029 18:15:56.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.042" endtime="20201029 18:15:56.329"></status>
</kw>
<msg timestamp="20201029 18:15:56.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022817278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.040" endtime="20201029 18:15:56.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022817278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.333" endtime="20201029 18:15:56.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.342" endtime="20201029 18:15:56.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.038" endtime="20201029 18:15:56.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.036" endtime="20201029 18:15:56.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.349" level="INFO">${RESULT} = [{'diff': 1.0209000000000606e-05}, {'diff': 9.528000000001702e-06}, {'diff': 9.902999999998607e-06}, {'diff': 8.971999999999453e-06}, {'diff': 9.278000000001452e-06}, {'diff': 9.277999999997982e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:56.345" endtime="20201029 18:15:56.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.353" level="INFO">${ACCURACY} = {'diff': [1.0209000000000606e-05, 9.528000000001702e-06, 9.902999999998607e-06, 8.971999999999453e-06, 9.278000000001452e-06, 9.277999999997982e-06, 9.292000000001022e-06, 9.292000000001022e-06, 8.986...</msg>
<status status="PASS" starttime="20201029 18:15:56.350" endtime="20201029 18:15:56.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.357" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.356" endtime="20201029 18:15:56.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.360" level="INFO">VALUE: [1.0209000000000606e-05, 9.528000000001702e-06, 9.902999999998607e-06, 8.971999999999453e-06, 9.278000000001452e-06, 9.277999999997982e-06, 9.292000000001022e-06, 9.292000000001022e-06, 8.986000000002492e-06, 9.569000000000938e-06, 9.292000000001022e-06, 9.597000000000078e-06, 9.320000000000161e-06, 9.290999999998079e-06, 9.597000000000078e-06, 9.319000000000688e-06, 9.235999999999273e-06, 9.292000000001022e-06, 9.292000000001022e-06, 8.985999999999023e-06, 9.305000000001118e-06, 9.278000000001452e-06, 9.555999999997372e-06, 9.290999999998079e-06, 9.597999999999551e-06, 9.277999999997982e-06, 9.901999999999134e-06, 9.597000000000078e-06, 9.596999999996608e-06, 8.985999999999023e-06, 9.903000000002077e-06, 9.264000000001882e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.583000000000508e-06, 9.333000000000258e-06, 9.292000000001022e-06, 9.291999999997552e-06, 9.902999999998607e-06, 9.582999999997038e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.278000000001452e-06, 9.624999999999218e-06, 9.888999999999037e-06, 9.597000000000078e-06, 8.971999999999453e-06, 9.320000000000161e-06, 9.306000000000592e-06]</msg>
<status status="PASS" starttime="20201029 18:15:56.358" endtime="20201029 18:15:56.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.354" endtime="20201029 18:15:56.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.365" endtime="20201029 18:15:56.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.364" endtime="20201029 18:15:56.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.363" endtime="20201029 18:15:56.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.006" endtime="20201029 18:15:56.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.005" endtime="20201029 18:15:56.386"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.394" endtime="20201029 18:15:56.409"></status>
</kw>
<msg timestamp="20201029 18:15:56.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.393" endtime="20201029 18:15:56.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.410" endtime="20201029 18:15:56.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.412" endtime="20201029 18:15:56.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.390" endtime="20201029 18:15:56.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.388" endtime="20201029 18:15:56.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.421" endtime="20201029 18:15:56.708"></status>
</kw>
<msg timestamp="20201029 18:15:56.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021730972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021742694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.420" endtime="20201029 18:15:56.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021730972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021742694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.712" endtime="20201029 18:15:56.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.720" endtime="20201029 18:15:56.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.417" endtime="20201029 18:15:56.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.416" endtime="20201029 18:15:56.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.727" level="INFO">${RESULT} = [{'diff': 1.1721999999998733e-05}, {'diff': 1.0805999999998622e-05}, {'diff': 1.0513999999999663e-05}, {'diff': 1.0819000000002188e-05}, {'diff': 1.0570000000001412e-05}, {'diff': 1.0223000000000176e-...</msg>
<status status="PASS" starttime="20201029 18:15:56.724" endtime="20201029 18:15:56.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.734" level="INFO">${ACCURACY} = {'diff': [1.1721999999998733e-05, 1.0805999999998622e-05, 1.0513999999999663e-05, 1.0819000000002188e-05, 1.0570000000001412e-05, 1.0223000000000176e-05, 1.0804999999999149e-05, 1.0208000000001133e-05...</msg>
<status status="PASS" starttime="20201029 18:15:56.728" endtime="20201029 18:15:56.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.739" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.738" endtime="20201029 18:15:56.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.741" level="INFO">VALUE: [1.1721999999998733e-05, 1.0805999999998622e-05, 1.0513999999999663e-05, 1.0819000000002188e-05, 1.0570000000001412e-05, 1.0223000000000176e-05, 1.0804999999999149e-05, 1.0208000000001133e-05, 1.0513999999999663e-05, 1.0513999999999663e-05, 1.0513999999999663e-05, 1.0513999999999663e-05, 9.958000000000883e-06, 1.0513999999999663e-05, 1.0208000000001133e-05, 1.0513000000000189e-05, 1.0500000000000093e-05, 1.0500000000000093e-05, 1.0513000000000189e-05, 1.0486999999999996e-05, 9.901999999999134e-06, 1.0513999999999663e-05, 1.0207999999997663e-05, 1.0833000000001758e-05, 1.0207999999997663e-05, 1.0500000000000093e-05, 1.0804999999999149e-05, 1.0195000000001037e-05, 1.0262999999999939e-05, 1.0541999999998802e-05, 1.0221999999997233e-05, 1.0500000000000093e-05, 1.0208000000001133e-05, 1.0193999999998093e-05, 1.0486000000000523e-05, 1.0791999999999052e-05, 1.0500000000000093e-05, 1.0500000000000093e-05, 1.0207999999997663e-05, 1.0208000000001133e-05, 1.0818999999998719e-05, 1.0513999999999663e-05, 9.902999999998607e-06, 1.0139000000002757e-05, 1.0790999999999579e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0834000000001232e-05, 1.0195000000001037e-05, 1.0527000000003228e-05]</msg>
<status status="PASS" starttime="20201029 18:15:56.740" endtime="20201029 18:15:56.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.735" endtime="20201029 18:15:56.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.746" endtime="20201029 18:15:56.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.745" endtime="20201029 18:15:56.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.743" endtime="20201029 18:15:56.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.387" endtime="20201029 18:15:56.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.386" endtime="20201029 18:15:56.767"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.775" endtime="20201029 18:15:56.789"></status>
</kw>
<msg timestamp="20201029 18:15:56.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.774" endtime="20201029 18:15:56.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.791" endtime="20201029 18:15:56.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.793" endtime="20201029 18:15:56.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.771" endtime="20201029 18:15:56.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.769" endtime="20201029 18:15:56.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.802" endtime="20201029 18:15:57.118"></status>
</kw>
<msg timestamp="20201029 18:15:57.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.801" endtime="20201029 18:15:57.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.122" endtime="20201029 18:15:57.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.130" endtime="20201029 18:15:57.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.798" endtime="20201029 18:15:57.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.796" endtime="20201029 18:15:57.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.137" level="INFO">${RESULT} = [{'diff': 1.2945000000000317e-05}, {'diff': 1.1125000000000718e-05}, {'diff': 1.1416000000000204e-05}, {'diff': 1.1444999999998817e-05}, {'diff': 1.1735999999998303e-05}, {'diff': 1.1723000000001677e-...</msg>
<status status="PASS" starttime="20201029 18:15:57.133" endtime="20201029 18:15:57.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:57.141" level="INFO">${ACCURACY} = {'diff': [1.2945000000000317e-05, 1.1125000000000718e-05, 1.1416000000000204e-05, 1.1444999999998817e-05, 1.1735999999998303e-05, 1.1723000000001677e-05, 1.1431000000002717e-05, 1.1429999999999774e-05...</msg>
<status status="PASS" starttime="20201029 18:15:57.138" endtime="20201029 18:15:57.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.145" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:15:57.144" endtime="20201029 18:15:57.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.148" level="INFO">VALUE: [1.2945000000000317e-05, 1.1125000000000718e-05, 1.1416000000000204e-05, 1.1444999999998817e-05, 1.1735999999998303e-05, 1.1723000000001677e-05, 1.1431000000002717e-05, 1.1429999999999774e-05, 1.1125000000000718e-05, 1.1735999999998303e-05, 1.1430999999999247e-05, 1.1736000000001773e-05, 1.1125000000000718e-05, 1.1429999999999774e-05, 1.1125000000000718e-05, 1.1430999999999247e-05, 1.1096999999998108e-05, 1.1708000000002633e-05, 1.1111000000001148e-05, 1.1430999999999247e-05, 1.1111000000001148e-05, 1.1792000000000052e-05, 1.1429999999999774e-05, 1.1374999999997498e-05, 1.1458000000002383e-05, 1.1486000000001523e-05, 1.1443999999999344e-05, 1.1708000000002633e-05, 1.1111000000001148e-05, 1.1736000000001773e-05, 1.1750000000001343e-05, 1.1139000000000288e-05, 1.1416999999999677e-05, 1.1723000000001677e-05, 1.1735999999998303e-05, 1.1444000000002813e-05, 1.1443999999999344e-05, 1.1417000000003147e-05, 1.1721999999998733e-05, 1.1750000000001343e-05, 1.1124999999997248e-05, 1.1429999999999774e-05, 1.1416999999999677e-05, 1.1721999999998733e-05, 1.1125000000000718e-05, 1.1416000000000204e-05, 1.1735999999998303e-05, 1.1430999999999247e-05, 1.1430999999999247e-05, 1.1750000000001343e-05]</msg>
<status status="PASS" starttime="20201029 18:15:57.146" endtime="20201029 18:15:57.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.142" endtime="20201029 18:15:57.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.153" endtime="20201029 18:15:57.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.151" endtime="20201029 18:15:57.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.150" endtime="20201029 18:15:57.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.768" endtime="20201029 18:15:57.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.767" endtime="20201029 18:15:57.173"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.182" endtime="20201029 18:15:57.198"></status>
</kw>
<msg timestamp="20201029 18:15:57.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.181" endtime="20201029 18:15:57.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.200" endtime="20201029 18:15:57.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.202" endtime="20201029 18:15:57.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.178" endtime="20201029 18:15:57.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.176" endtime="20201029 18:15:57.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.211" endtime="20201029 18:15:57.497"></status>
</kw>
<msg timestamp="20201029 18:15:57.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022786667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022799597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.209" endtime="20201029 18:15:57.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022786667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022799597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.501" endtime="20201029 18:15:57.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.509" endtime="20201029 18:15:57.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.207" endtime="20201029 18:15:57.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.205" endtime="20201029 18:15:57.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.516" level="INFO">${RESULT} = [{'diff': 1.2930000000001274e-05}, {'diff': 1.2013999999997693e-05}, {'diff': 1.2306000000000122e-05}, {'diff': 1.2360999999998928e-05}, {'diff': 1.2639000000001788e-05}, {'diff': 1.2319000000000219e-...</msg>
<status status="PASS" starttime="20201029 18:15:57.513" endtime="20201029 18:15:57.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:57.520" level="INFO">${ACCURACY} = {'diff': [1.2930000000001274e-05, 1.2013999999997693e-05, 1.2306000000000122e-05, 1.2360999999998928e-05, 1.2639000000001788e-05, 1.2319000000000219e-05, 1.2360999999998928e-05, 1.2639000000001788e-05...</msg>
<status status="PASS" starttime="20201029 18:15:57.517" endtime="20201029 18:15:57.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.525" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:15:57.524" endtime="20201029 18:15:57.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.527" level="INFO">VALUE: [1.2930000000001274e-05, 1.2013999999997693e-05, 1.2306000000000122e-05, 1.2360999999998928e-05, 1.2639000000001788e-05, 1.2319000000000219e-05, 1.2360999999998928e-05, 1.2639000000001788e-05, 1.2417000000000677e-05, 1.2042000000000302e-05, 1.2346999999999358e-05, 1.2042000000000302e-05, 1.2347999999998832e-05, 1.2638999999998318e-05, 1.2346999999999358e-05, 1.2041999999996833e-05, 1.2638999999998318e-05, 1.2332999999999789e-05, 1.2346999999999358e-05, 1.2346999999999358e-05, 1.2278000000000983e-05, 1.2042000000000302e-05, 1.2653000000001358e-05, 1.2388999999998068e-05, 1.2346999999999358e-05, 1.2055000000000399e-05, 1.2625000000002218e-05, 1.2320000000003162e-05, 1.2666999999997458e-05, 1.2374999999998498e-05, 1.2374999999998498e-05, 1.2639000000001788e-05, 1.2651999999998415e-05, 1.2332999999999789e-05, 1.2346999999999358e-05, 1.2667000000000928e-05, 1.2332999999999789e-05, 1.2360999999998928e-05, 1.2347999999998832e-05, 1.2667000000000928e-05, 1.2639000000001788e-05, 1.2028000000000733e-05, 1.2667000000000928e-05, 1.2346999999999358e-05, 1.2667000000000928e-05, 1.2334000000002732e-05, 1.2652999999997888e-05, 1.2652000000001884e-05, 1.2027999999997263e-05, 1.2347000000002828e-05]</msg>
<status status="PASS" starttime="20201029 18:15:57.526" endtime="20201029 18:15:57.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.521" endtime="20201029 18:15:57.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.537" endtime="20201029 18:15:57.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.535" endtime="20201029 18:15:57.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.534" endtime="20201029 18:15:57.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.174" endtime="20201029 18:15:57.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.174" endtime="20201029 18:15:57.558"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.566" endtime="20201029 18:15:57.581"></status>
</kw>
<msg timestamp="20201029 18:15:57.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.565" endtime="20201029 18:15:57.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.582" endtime="20201029 18:15:57.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.585" endtime="20201029 18:15:57.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.562" endtime="20201029 18:15:57.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.560" endtime="20201029 18:15:57.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.594" endtime="20201029 18:15:57.881"></status>
</kw>
<msg timestamp="20201029 18:15:57.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.593" endtime="20201029 18:15:57.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.887" endtime="20201029 18:15:57.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.898" endtime="20201029 18:15:57.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.590" endtime="20201029 18:15:57.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.588" endtime="20201029 18:15:57.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.906" level="INFO">${RESULT} = [{'diff': 1.4250000000000373e-05}, {'diff': 1.3874999999999998e-05}, {'diff': 1.3583000000001039e-05}, {'diff': 1.3235999999999803e-05}, {'diff': 1.355499999999843e-05}, {'diff': 1.3527000000002759e-0...</msg>
<status status="PASS" starttime="20201029 18:15:57.902" endtime="20201029 18:15:57.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:57.913" level="INFO">${ACCURACY} = {'diff': [1.4250000000000373e-05, 1.3874999999999998e-05, 1.3583000000001039e-05, 1.3235999999999803e-05, 1.355499999999843e-05, 1.3527000000002759e-05, 1.3555999999997903e-05, 1.354099999999886e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:57.908" endtime="20201029 18:15:57.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.919" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:15:57.918" endtime="20201029 18:15:57.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.922" level="INFO">VALUE: [1.4250000000000373e-05, 1.3874999999999998e-05, 1.3583000000001039e-05, 1.3235999999999803e-05, 1.355499999999843e-05, 1.3527000000002759e-05, 1.3555999999997903e-05, 1.354099999999886e-05, 1.3569000000001469e-05, 1.3542000000001803e-05, 1.3583000000001039e-05, 1.3249999999999373e-05, 1.3568999999998e-05, 1.3278000000001983e-05, 1.3263999999998943e-05, 1.3277999999998513e-05, 1.3249999999999373e-05, 1.3569000000001469e-05, 1.326299999999947e-05, 1.3570000000000942e-05, 1.3263999999998943e-05, 1.3611000000000179e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3513999999999193e-05, 1.3570000000000942e-05, 1.3305000000001649e-05, 1.3584000000000512e-05, 1.3542000000001803e-05, 1.3499999999999623e-05, 1.3249999999999373e-05, 1.3568999999998e-05, 1.3263999999998943e-05, 1.3486000000000054e-05, 1.355499999999843e-05, 1.3222000000000234e-05, 1.3264000000002413e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3569000000001469e-05, 1.3264000000002413e-05, 1.3570000000000942e-05, 1.3263999999998943e-05, 1.3569999999997473e-05, 1.3598000000000082e-05, 1.3569000000001469e-05, 1.3597000000000609e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3541000000002329e-05]</msg>
<status status="PASS" starttime="20201029 18:15:57.920" endtime="20201029 18:15:57.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.915" endtime="20201029 18:15:57.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.927" endtime="20201029 18:15:57.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.925" endtime="20201029 18:15:57.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.924" endtime="20201029 18:15:57.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.559" endtime="20201029 18:15:57.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.558" endtime="20201029 18:15:57.947"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.956" endtime="20201029 18:15:57.970"></status>
</kw>
<msg timestamp="20201029 18:15:57.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.954" endtime="20201029 18:15:57.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.972" endtime="20201029 18:15:57.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.974" endtime="20201029 18:15:57.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.952" endtime="20201029 18:15:57.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.950" endtime="20201029 18:15:57.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.983" endtime="20201029 18:15:58.270"></status>
</kw>
<msg timestamp="20201029 18:15:58.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.982" endtime="20201029 18:15:58.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.274" endtime="20201029 18:15:58.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.282" endtime="20201029 18:15:58.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.979" endtime="20201029 18:15:58.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.977" endtime="20201029 18:15:58.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:58.289" level="INFO">${RESULT} = [{'diff': 1.6000000000002124e-05}, {'diff': 1.4778000000000013e-05}, {'diff': 1.4500000000000624e-05}, {'diff': 1.4485999999997584e-05}, {'diff': 1.4194999999998098e-05}, {'diff': 1.4180999999998528e-...</msg>
<status status="PASS" starttime="20201029 18:15:58.285" endtime="20201029 18:15:58.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:58.293" level="INFO">${ACCURACY} = {'diff': [1.6000000000002124e-05, 1.4778000000000013e-05, 1.4500000000000624e-05, 1.4485999999997584e-05, 1.4194999999998098e-05, 1.4180999999998528e-05, 1.4472000000001484e-05, 1.4193999999998624e-05...</msg>
<status status="PASS" starttime="20201029 18:15:58.290" endtime="20201029 18:15:58.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.297" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:15:58.296" endtime="20201029 18:15:58.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.300" level="INFO">VALUE: [1.6000000000002124e-05, 1.4778000000000013e-05, 1.4500000000000624e-05, 1.4485999999997584e-05, 1.4194999999998098e-05, 1.4180999999998528e-05, 1.4472000000001484e-05, 1.4193999999998624e-05, 1.4430999999998778e-05, 1.4416999999999208e-05, 1.4167000000002428e-05, 1.4180000000002524e-05, 1.4473000000000957e-05, 1.4445000000001817e-05, 1.4514000000000193e-05, 1.486099999999796e-05, 1.4152999999999388e-05, 1.4833000000002289e-05, 1.4180999999998528e-05, 1.4235999999997334e-05, 1.4459000000001387e-05, 1.4500000000000624e-05, 1.4500000000000624e-05, 1.4471999999998014e-05, 1.4471999999998014e-05, 1.4429999999999304e-05, 1.4180000000002524e-05, 1.4486000000001054e-05, 1.4167000000002428e-05, 1.4166999999998958e-05, 1.4791999999999583e-05, 1.4570000000001943e-05, 1.4486000000001054e-05, 1.4166999999998958e-05, 1.4485999999997584e-05, 1.4430000000002774e-05, 1.4764000000000443e-05, 1.4180999999998528e-05, 1.4485999999997584e-05, 1.4556000000002373e-05, 1.4791999999999583e-05, 1.4471999999998014e-05, 1.4485999999997584e-05, 1.4471999999998014e-05, 1.4487000000000527e-05, 1.4486000000001054e-05, 1.4195000000001567e-05, 1.4500000000000624e-05, 1.4486000000001054e-05, 1.477700000000054e-05]</msg>
<status status="PASS" starttime="20201029 18:15:58.298" endtime="20201029 18:15:58.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.294" endtime="20201029 18:15:58.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:58.305" endtime="20201029 18:15:58.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.303" endtime="20201029 18:15:58.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.302" endtime="20201029 18:15:58.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.948" endtime="20201029 18:15:58.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.948" endtime="20201029 18:15:58.325"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.334" endtime="20201029 18:15:58.350"></status>
</kw>
<msg timestamp="20201029 18:15:58.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.332" endtime="20201029 18:15:58.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.351" endtime="20201029 18:15:58.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.354" endtime="20201029 18:15:58.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.330" endtime="20201029 18:15:58.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.328" endtime="20201029 18:15:58.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.362" endtime="20201029 18:15:58.667"></status>
</kw>
<msg timestamp="20201029 18:15:58.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022757389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022774306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.361" endtime="20201029 18:15:58.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022757389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022774306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.674" endtime="20201029 18:15:58.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.688" endtime="20201029 18:15:58.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.358" endtime="20201029 18:15:58.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.357" endtime="20201029 18:15:58.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:58.703" level="INFO">${RESULT} = [{'diff': 1.691700000000171e-05}, {'diff': 1.538900000000107e-05}, {'diff': 1.5709000000002638e-05}, {'diff': 1.540300000000064e-05}, {'diff': 1.5694999999999598e-05}, {'diff': 1.5112000000001152e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:58.697" endtime="20201029 18:15:58.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:58.713" level="INFO">${ACCURACY} = {'diff': [1.691700000000171e-05, 1.538900000000107e-05, 1.5709000000002638e-05, 1.540300000000064e-05, 1.5694999999999598e-05, 1.5112000000001152e-05, 1.5707999999999694e-05, 1.5124999999997779e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:15:58.705" endtime="20201029 18:15:58.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.721" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:15:58.720" endtime="20201029 18:15:58.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.724" level="INFO">VALUE: [1.691700000000171e-05, 1.538900000000107e-05, 1.5709000000002638e-05, 1.540300000000064e-05, 1.5694999999999598e-05, 1.5112000000001152e-05, 1.5707999999999694e-05, 1.5124999999997779e-05, 1.5139000000000818e-05, 1.509699999999864e-05, 1.5709000000002638e-05, 1.538900000000107e-05, 1.53889999999976e-05, 1.541700000000021e-05, 1.540300000000064e-05, 1.538900000000107e-05, 1.509699999999864e-05, 1.540300000000064e-05, 1.541700000000021e-05, 1.5415999999997265e-05, 1.5666000000000985e-05, 1.538900000000107e-05, 1.5708999999999168e-05, 1.508299999999907e-05, 1.5694000000000125e-05, 1.5722999999998738e-05, 1.5083999999998543e-05, 1.5028000000000263e-05, 1.540300000000064e-05, 1.541700000000021e-05, 1.540299999999717e-05, 1.5443999999999874e-05, 1.5416000000000735e-05, 1.5694000000000125e-05, 1.5362000000001402e-05, 1.540300000000064e-05, 1.538900000000107e-05, 1.5694999999999598e-05, 1.5111000000001679e-05, 1.5416000000000735e-05, 1.5402000000001165e-05, 1.541700000000021e-05, 1.5695000000003068e-05, 1.540299999999717e-05, 1.5721999999999264e-05, 1.537499999999803e-05, 1.5401999999997695e-05, 1.53750000000015e-05, 1.540300000000064e-05, 1.5721999999999264e-05]</msg>
<status status="PASS" starttime="20201029 18:15:58.722" endtime="20201029 18:15:58.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.715" endtime="20201029 18:15:58.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:58.731" endtime="20201029 18:15:58.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.729" endtime="20201029 18:15:58.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.728" endtime="20201029 18:15:58.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.326" endtime="20201029 18:15:58.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.325" endtime="20201029 18:15:58.753"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.763" endtime="20201029 18:15:58.778"></status>
</kw>
<msg timestamp="20201029 18:15:58.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.761" endtime="20201029 18:15:58.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.780" endtime="20201029 18:15:58.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.782" endtime="20201029 18:15:58.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.758" endtime="20201029 18:15:58.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.755" endtime="20201029 18:15:58.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.792" endtime="20201029 18:15:59.078"></status>
</kw>
<msg timestamp="20201029 18:15:59.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024312764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024330597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.790" endtime="20201029 18:15:59.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024312764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024330597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.082" endtime="20201029 18:15:59.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.090" endtime="20201029 18:15:59.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.787" endtime="20201029 18:15:59.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.785" endtime="20201029 18:15:59.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:59.097" level="INFO">${RESULT} = [{'diff': 1.783299999999835e-05}, {'diff': 1.661099999999971e-05}, {'diff': 1.662499999999928e-05}, {'diff': 1.631900000000075e-05}, {'diff': 1.662499999999928e-05}, {'diff': 1.662499999999928e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:59.094" endtime="20201029 18:15:59.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:59.102" level="INFO">${ACCURACY} = {'diff': [1.783299999999835e-05, 1.661099999999971e-05, 1.662499999999928e-05, 1.631900000000075e-05, 1.662499999999928e-05, 1.662499999999928e-05, 1.662499999999928e-05, 1.627700000000204e-05, 1.6653...</msg>
<status status="PASS" starttime="20201029 18:15:59.098" endtime="20201029 18:15:59.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.107" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:15:59.106" endtime="20201029 18:15:59.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.109" level="INFO">VALUE: [1.783299999999835e-05, 1.661099999999971e-05, 1.662499999999928e-05, 1.631900000000075e-05, 1.662499999999928e-05, 1.662499999999928e-05, 1.662499999999928e-05, 1.627700000000204e-05, 1.665300000000189e-05, 1.662499999999928e-05, 1.631899999999728e-05, 1.662499999999928e-05, 1.631900000000075e-05, 1.662500000000275e-05, 1.631900000000075e-05, 1.6320000000000223e-05, 1.661099999999971e-05, 1.662500000000275e-05, 1.631900000000075e-05, 1.6013999999998224e-05, 1.630499999999771e-05, 1.65829999999971e-05, 1.663899999999885e-05, 1.661099999999971e-05, 1.661099999999971e-05, 1.5985999999999084e-05, 1.688900000000257e-05, 1.5999999999998654e-05, 1.661099999999971e-05, 1.630499999999771e-05, 1.6320000000000223e-05, 1.631900000000075e-05, 1.6014000000001694e-05, 1.6569000000001e-05, 1.6333999999999793e-05, 1.630499999999771e-05, 1.6693999999997655e-05, 1.659700000000014e-05, 1.662500000000275e-05, 1.5999999999998654e-05, 1.6333999999999793e-05, 1.662500000000275e-05, 1.662499999999928e-05, 1.640299999999817e-05, 1.631900000000075e-05, 1.5999999999998654e-05, 1.663899999999885e-05, 1.6915999999998765e-05, 1.631900000000075e-05, 1.637499999999903e-05]</msg>
<status status="PASS" starttime="20201029 18:15:59.108" endtime="20201029 18:15:59.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.103" endtime="20201029 18:15:59.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.115" endtime="20201029 18:15:59.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.113" endtime="20201029 18:15:59.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.112" endtime="20201029 18:15:59.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.754" endtime="20201029 18:15:59.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.753" endtime="20201029 18:15:59.135"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.144" endtime="20201029 18:15:59.159"></status>
</kw>
<msg timestamp="20201029 18:15:59.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.143" endtime="20201029 18:15:59.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.161" endtime="20201029 18:15:59.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.164" endtime="20201029 18:15:59.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.140" endtime="20201029 18:15:59.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.138" endtime="20201029 18:15:59.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.173" endtime="20201029 18:15:59.459"></status>
</kw>
<msg timestamp="20201029 18:15:59.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022851681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022869806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.171" endtime="20201029 18:15:59.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022851681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022869806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.463" endtime="20201029 18:15:59.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.472" endtime="20201029 18:15:59.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.169" endtime="20201029 18:15:59.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.167" endtime="20201029 18:15:59.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:59.478" level="INFO">${RESULT} = [{'diff': 1.812500000000078e-05}, {'diff': 1.7819999999998254e-05}, {'diff': 1.7541999999998864e-05}, {'diff': 1.7541999999998864e-05}, {'diff': 1.7249999999999904e-05}, {'diff': 1.7263999999999474e-0...</msg>
<status status="PASS" starttime="20201029 18:15:59.475" endtime="20201029 18:15:59.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:59.482" level="INFO">${ACCURACY} = {'diff': [1.812500000000078e-05, 1.7819999999998254e-05, 1.7541999999998864e-05, 1.7541999999998864e-05, 1.7249999999999904e-05, 1.7263999999999474e-05, 1.7223000000000238e-05, 1.7249999999999904e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:59.479" endtime="20201029 18:15:59.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.487" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:15:59.486" endtime="20201029 18:15:59.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.489" level="INFO">VALUE: [1.812500000000078e-05, 1.7819999999998254e-05, 1.7541999999998864e-05, 1.7541999999998864e-05, 1.7249999999999904e-05, 1.7263999999999474e-05, 1.7223000000000238e-05, 1.7249999999999904e-05, 1.7542000000002334e-05, 1.7513999999999724e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7236000000000334e-05, 1.7527999999999294e-05, 1.755499999999896e-05, 1.7236999999999808e-05, 1.7542000000002334e-05, 1.7513999999999724e-05, 1.7235999999996865e-05, 1.7542000000002334e-05, 1.783299999999835e-05, 1.7541999999998864e-05, 1.7209000000000668e-05, 1.7527999999999294e-05, 1.7528000000002764e-05, 1.7236000000000334e-05, 1.7569999999998004e-05, 1.7541999999998864e-05, 1.7541999999998864e-05, 1.784700000000139e-05, 1.7527999999999294e-05, 1.7249999999999904e-05, 1.7888000000000626e-05, 1.7236000000000334e-05, 1.7249999999999904e-05, 1.752699999999982e-05, 1.7542000000002334e-05, 1.7207999999997725e-05, 1.7541999999998864e-05, 1.7236000000000334e-05, 1.6929999999998335e-05, 1.7527999999999294e-05, 1.75829999999981e-05, 1.759700000000114e-05, 1.7235999999996865e-05, 1.784700000000139e-05, 1.754099999999939e-05, 1.7236000000000334e-05, 1.7222000000000764e-05, 1.7527999999999294e-05]</msg>
<status status="PASS" starttime="20201029 18:15:59.488" endtime="20201029 18:15:59.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.483" endtime="20201029 18:15:59.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.494" endtime="20201029 18:15:59.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.493" endtime="20201029 18:15:59.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.491" endtime="20201029 18:15:59.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.136" endtime="20201029 18:15:59.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.136" endtime="20201029 18:15:59.515"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.523" endtime="20201029 18:15:59.539"></status>
</kw>
<msg timestamp="20201029 18:15:59.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.522" endtime="20201029 18:15:59.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.540" endtime="20201029 18:15:59.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.543" endtime="20201029 18:15:59.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.519" endtime="20201029 18:15:59.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.517" endtime="20201029 18:15:59.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.552" endtime="20201029 18:15:59.837"></status>
</kw>
<msg timestamp="20201029 18:15:59.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022790986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.550" endtime="20201029 18:15:59.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022790986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.841" endtime="20201029 18:15:59.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.850" endtime="20201029 18:15:59.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.548" endtime="20201029 18:15:59.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.546" endtime="20201029 18:15:59.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:59.856" level="INFO">${RESULT} = [{'diff': 1.9055999999999934e-05}, {'diff': 1.8763999999997505e-05}, {'diff': 1.838899999999713e-05}, {'diff': 1.870900000000217e-05}, {'diff': 1.813899999999688e-05}, {'diff': 1.813900000000035e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:59.853" endtime="20201029 18:15:59.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:59.860" level="INFO">${ACCURACY} = {'diff': [1.9055999999999934e-05, 1.8763999999997505e-05, 1.838899999999713e-05, 1.870900000000217e-05, 1.813899999999688e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.8513999999997255e-05, 1.8...</msg>
<status status="PASS" starttime="20201029 18:15:59.857" endtime="20201029 18:15:59.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.865" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:15:59.864" endtime="20201029 18:15:59.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.868" level="INFO">VALUE: [1.9055999999999934e-05, 1.8763999999997505e-05, 1.838899999999713e-05, 1.870900000000217e-05, 1.813899999999688e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.8513999999997255e-05, 1.8764000000000974e-05, 1.8151999999996976e-05, 1.8194000000002625e-05, 1.8749999999997935e-05, 1.805499999999946e-05, 1.8457999999998975e-05, 1.847299999999802e-05, 1.8457999999998975e-05, 1.8152000000000446e-05, 1.8457999999998975e-05, 1.8457999999998975e-05, 1.816699999999949e-05, 1.8750000000001404e-05, 1.8487000000001058e-05, 1.8764000000000974e-05, 1.8179999999999585e-05, 1.813900000000035e-05, 1.8763999999997505e-05, 1.843099999999931e-05, 1.8458000000002445e-05, 1.844499999999888e-05, 1.8457999999998975e-05, 1.813899999999688e-05, 1.82089999999982e-05, 1.8443999999999405e-05, 1.8458000000002445e-05, 1.845899999999845e-05, 1.852700000000082e-05, 1.815299999999992e-05, 1.844499999999888e-05, 1.8457999999998975e-05, 1.819499999999863e-05, 1.8443999999999405e-05, 1.844500000000235e-05, 1.815299999999992e-05, 1.844499999999888e-05, 1.813900000000035e-05, 1.812500000000078e-05, 1.8152000000000446e-05, 1.8472000000002015e-05, 1.8764000000000974e-05, 1.8487000000001058e-05]</msg>
<status status="PASS" starttime="20201029 18:15:59.866" endtime="20201029 18:15:59.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.861" endtime="20201029 18:15:59.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.873" endtime="20201029 18:15:59.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.871" endtime="20201029 18:15:59.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.870" endtime="20201029 18:15:59.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.516" endtime="20201029 18:15:59.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.515" endtime="20201029 18:15:59.896"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.914" endtime="20201029 18:15:59.931"></status>
</kw>
<msg timestamp="20201029 18:15:59.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.911" endtime="20201029 18:15:59.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.934" endtime="20201029 18:15:59.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.939" endtime="20201029 18:15:59.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.905" endtime="20201029 18:15:59.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.901" endtime="20201029 18:15:59.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.958" endtime="20201029 18:16:00.248"></status>
</kw>
<msg timestamp="20201029 18:16:00.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034759736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034780319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.955" endtime="20201029 18:16:00.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034759736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034780319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.252" endtime="20201029 18:16:00.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.262" endtime="20201029 18:16:00.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.949" endtime="20201029 18:16:00.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.946" endtime="20201029 18:16:00.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:00.272" level="INFO">${RESULT} = [{'diff': 2.058299999999763e-05}, {'diff': 1.998699999999909e-05}, {'diff': 1.93890000000016e-05}, {'diff': 1.968100000000056e-05}, {'diff': 1.9402000000001696e-05}, {'diff': 1.937500000000203e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:00.267" endtime="20201029 18:16:00.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:00.282" level="INFO">${ACCURACY} = {'diff': [2.058299999999763e-05, 1.998699999999909e-05, 1.93890000000016e-05, 1.968100000000056e-05, 1.9402000000001696e-05, 1.937500000000203e-05, 1.9679999999994147e-05, 1.9027999999997325e-05, 1.90...</msg>
<status status="PASS" starttime="20201029 18:16:00.273" endtime="20201029 18:16:00.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.287" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:16:00.286" endtime="20201029 18:16:00.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.290" level="INFO">VALUE: [2.058299999999763e-05, 1.998699999999909e-05, 1.93890000000016e-05, 1.968100000000056e-05, 1.9402000000001696e-05, 1.937500000000203e-05, 1.9679999999994147e-05, 1.9027999999997325e-05, 1.9056000000003404e-05, 1.9680000000001086e-05, 1.9388000000002126e-05, 1.968100000000056e-05, 1.930499999999724e-05, 1.905500000000393e-05, 1.966700000000099e-05, 1.908299999999613e-05, 1.937500000000203e-05, 1.97089999999997e-05, 1.9306000000003654e-05, 1.937500000000203e-05, 1.93890000000016e-05, 1.937500000000203e-05, 1.937499999999509e-05, 1.934699999999595e-05, 1.941700000000074e-05, 1.937500000000203e-05, 1.9680000000001086e-05, 1.909700000000264e-05, 1.936100000000246e-05, 1.93890000000016e-05, 1.9666000000001516e-05, 1.9666000000001516e-05, 1.937499999999509e-05, 1.93890000000016e-05, 1.969500000000013e-05, 1.937499999999509e-05, 1.9362000000001933e-05, 1.9333999999995855e-05, 1.937499999999509e-05, 1.9083999999995604e-05, 1.936100000000246e-05, 1.9694000000000655e-05, 1.913900000000135e-05, 1.937500000000203e-05, 1.930499999999724e-05, 1.966700000000099e-05, 1.9056000000003404e-05, 1.965300000000142e-05, 1.9430000000000835e-05, 1.961100000000271e-05]</msg>
<status status="PASS" starttime="20201029 18:16:00.289" endtime="20201029 18:16:00.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.283" endtime="20201029 18:16:00.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:00.295" endtime="20201029 18:16:00.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.293" endtime="20201029 18:16:00.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.292" endtime="20201029 18:16:00.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.898" endtime="20201029 18:16:00.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.897" endtime="20201029 18:16:00.315"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.324" endtime="20201029 18:16:00.340"></status>
</kw>
<msg timestamp="20201029 18:16:00.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.323" endtime="20201029 18:16:00.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.341" endtime="20201029 18:16:00.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.344" endtime="20201029 18:16:00.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.320" endtime="20201029 18:16:00.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.318" endtime="20201029 18:16:00.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.353" endtime="20201029 18:16:00.682"></status>
</kw>
<msg timestamp="20201029 18:16:00.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02205225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:00.351" endtime="20201029 18:16:00.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02205225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:00.686" endtime="20201029 18:16:00.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.694" endtime="20201029 18:16:00.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.349" endtime="20201029 18:16:00.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.347" endtime="20201029 18:16:00.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:00.701" level="INFO">${RESULT} = [{'diff': 2.1485999999997646e-05}, {'diff': 2.062499999999981e-05}, {'diff': 2.0901999999999726e-05}, {'diff': 1.9987000000002558e-05}, {'diff': 2.09029999999992e-05}, {'diff': 2.02769999999991e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:00.698" endtime="20201029 18:16:00.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:00.705" level="INFO">${ACCURACY} = {'diff': [2.1485999999997646e-05, 2.062499999999981e-05, 2.0901999999999726e-05, 1.9987000000002558e-05, 2.09029999999992e-05, 2.02769999999991e-05, 2.029099999999867e-05, 2.029099999999867e-05, 2.027...</msg>
<status status="PASS" starttime="20201029 18:16:00.702" endtime="20201029 18:16:00.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.709" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:16:00.708" endtime="20201029 18:16:00.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.712" level="INFO">VALUE: [2.1485999999997646e-05, 2.062499999999981e-05, 2.0901999999999726e-05, 1.9987000000002558e-05, 2.09029999999992e-05, 2.02769999999991e-05, 2.029099999999867e-05, 2.029099999999867e-05, 2.0277999999998575e-05, 2.030500000000171e-05, 2.0263999999999005e-05, 2.0292000000001614e-05, 2.061100000000024e-05, 1.9999999999999185e-05, 2.059700000000067e-05, 2.0277999999998575e-05, 2.0292000000001614e-05, 2.031900000000128e-05, 2.0306000000001184e-05, 2.033299999999738e-05, 2.0306000000001184e-05, 2.0292000000001614e-05, 2.0263999999999005e-05, 2.029099999999867e-05, 2.0598000000000144e-05, 2.0291999999998145e-05, 2.088899999999963e-05, 2.09029999999992e-05, 2.029100000000214e-05, 1.993100000000081e-05, 2.0679999999998616e-05, 2.058299999999763e-05, 2.030500000000171e-05, 2.0249999999999435e-05, 2.056900000000153e-05, 2.059700000000067e-05, 2.059700000000067e-05, 2.0569999999997535e-05, 2.030500000000171e-05, 2.029099999999867e-05, 2.054100000000239e-05, 2.059700000000067e-05, 2.059700000000067e-05, 2.0292000000001614e-05, 2.055500000000196e-05, 2.02769999999991e-05, 2.0264000000002474e-05, 2.05830000000011e-05, 2.0598000000000144e-05, 2.0277999999998575e-05]</msg>
<status status="PASS" starttime="20201029 18:16:00.710" endtime="20201029 18:16:00.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.706" endtime="20201029 18:16:00.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:00.717" endtime="20201029 18:16:00.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.715" endtime="20201029 18:16:00.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.714" endtime="20201029 18:16:00.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.316" endtime="20201029 18:16:00.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.316" endtime="20201029 18:16:00.738"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.747" endtime="20201029 18:16:00.763"></status>
</kw>
<msg timestamp="20201029 18:16:00.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.745" endtime="20201029 18:16:00.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.765" endtime="20201029 18:16:00.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.767" endtime="20201029 18:16:00.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.743" endtime="20201029 18:16:00.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.741" endtime="20201029 18:16:00.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.778" endtime="20201029 18:16:01.065"></status>
</kw>
<msg timestamp="20201029 18:16:01.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.776" endtime="20201029 18:16:01.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.069" endtime="20201029 18:16:01.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.078" endtime="20201029 18:16:01.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.772" endtime="20201029 18:16:01.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.770" endtime="20201029 18:16:01.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.084" level="INFO">${RESULT} = [{'diff': 2.269499999999966e-05}, {'diff': 2.087500000000006e-05}, {'diff': 2.1527999999999825e-05}, {'diff': 2.1207999999998256e-05}, {'diff': 2.1514000000000255e-05}, {'diff': 2.1194000000002156e-05...</msg>
<status status="PASS" starttime="20201029 18:16:01.081" endtime="20201029 18:16:01.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.089" level="INFO">${ACCURACY} = {'diff': [2.269499999999966e-05, 2.087500000000006e-05, 2.1527999999999825e-05, 2.1207999999998256e-05, 2.1514000000000255e-05, 2.1194000000002156e-05, 2.181899999999931e-05, 2.1486000000001115e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:16:01.085" endtime="20201029 18:16:01.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.094" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.093" endtime="20201029 18:16:01.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.096" level="INFO">VALUE: [2.269499999999966e-05, 2.087500000000006e-05, 2.1527999999999825e-05, 2.1207999999998256e-05, 2.1514000000000255e-05, 2.1194000000002156e-05, 2.181899999999931e-05, 2.1486000000001115e-05, 2.1792000000003114e-05, 2.147300000000102e-05, 2.1500000000000685e-05, 2.1208000000001725e-05, 2.1208000000001725e-05, 2.148699999999712e-05, 2.09029999999992e-05, 2.119499999999816e-05, 2.1833999999998355e-05, 2.1514000000000255e-05, 2.1208000000001725e-05, 2.151300000000078e-05, 2.12090000000012e-05, 2.1514000000000255e-05, 2.1207999999998256e-05, 2.118099999999859e-05, 2.1514000000000255e-05, 2.119500000000163e-05, 2.1514000000000255e-05, 2.1500000000000685e-05, 2.1514000000000255e-05, 2.1208000000001725e-05, 2.1499999999997216e-05, 2.1500000000000685e-05, 2.1235999999997396e-05, 2.119500000000163e-05, 2.1500000000000685e-05, 2.1819999999998785e-05, 2.152700000000035e-05, 2.1527999999999825e-05, 2.148700000000059e-05, 2.1514000000000255e-05, 2.1805999999999215e-05, 2.1221999999997826e-05, 2.12090000000012e-05, 2.1500000000000685e-05, 2.1207999999998256e-05, 2.180499999999974e-05, 2.122300000000077e-05, 2.1514000000000255e-05, 2.1790999999996702e-05, 2.129099999999967e-05]</msg>
<status status="PASS" starttime="20201029 18:16:01.095" endtime="20201029 18:16:01.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.090" endtime="20201029 18:16:01.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.101" endtime="20201029 18:16:01.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.100" endtime="20201029 18:16:01.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.099" endtime="20201029 18:16:01.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.739" endtime="20201029 18:16:01.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.738" endtime="20201029 18:16:01.122"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.131" endtime="20201029 18:16:01.145"></status>
</kw>
<msg timestamp="20201029 18:16:01.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.129" endtime="20201029 18:16:01.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.147" endtime="20201029 18:16:01.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.150" endtime="20201029 18:16:01.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.126" endtime="20201029 18:16:01.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.124" endtime="20201029 18:16:01.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.159" endtime="20201029 18:16:01.460"></status>
</kw>
<msg timestamp="20201029 18:16:01.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.157" endtime="20201029 18:16:01.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.470" endtime="20201029 18:16:01.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.490" endtime="20201029 18:16:01.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.154" endtime="20201029 18:16:01.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.153" endtime="20201029 18:16:01.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.504" level="INFO">${RESULT} = [{'diff': 2.363899999999891e-05}, {'diff': 2.2792000000000645e-05}, {'diff': 2.2111999999997745e-05}, {'diff': 2.2416000000000796e-05}, {'diff': 2.2721999999999326e-05}, {'diff': 2.2500000000001685e-0...</msg>
<status status="PASS" starttime="20201029 18:16:01.497" endtime="20201029 18:16:01.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.511" level="INFO">${ACCURACY} = {'diff': [2.363899999999891e-05, 2.2792000000000645e-05, 2.2111999999997745e-05, 2.2416000000000796e-05, 2.2721999999999326e-05, 2.2500000000001685e-05, 2.241700000000027e-05, 2.2485999999998646e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:01.507" endtime="20201029 18:16:01.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.516" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.515" endtime="20201029 18:16:01.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.519" level="INFO">VALUE: [2.363899999999891e-05, 2.2792000000000645e-05, 2.2111999999997745e-05, 2.2416000000000796e-05, 2.2721999999999326e-05, 2.2500000000001685e-05, 2.241700000000027e-05, 2.2485999999998646e-05, 2.241700000000027e-05, 2.243099999999984e-05, 2.2707999999999756e-05, 2.213900000000088e-05, 2.241700000000027e-05, 2.244499999999941e-05, 2.211100000000174e-05, 2.243099999999984e-05, 2.212500000000131e-05, 2.2721999999999326e-05, 2.212500000000131e-05, 2.240299999999723e-05, 2.243099999999984e-05, 2.2416000000000796e-05, 2.2736000000002365e-05, 2.211099999999827e-05, 2.2735999999998896e-05, 2.212500000000131e-05, 2.212500000000131e-05, 2.243099999999984e-05, 2.241700000000027e-05, 2.212500000000131e-05, 2.2443999999999936e-05, 2.2778000000001075e-05, 2.2138000000001407e-05, 2.243099999999984e-05, 2.237499999999809e-05, 2.241700000000027e-05, 2.243099999999984e-05, 2.2735999999998896e-05, 2.2443999999999936e-05, 2.2707999999999756e-05, 2.2764000000001505e-05, 2.20969999999987e-05, 2.2430000000000366e-05, 2.212500000000131e-05, 2.2749999999998466e-05, 2.241700000000027e-05, 2.243099999999984e-05, 2.241700000000027e-05, 2.2416000000000796e-05, 2.241700000000027e-05]</msg>
<status status="PASS" starttime="20201029 18:16:01.517" endtime="20201029 18:16:01.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.512" endtime="20201029 18:16:01.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.524" endtime="20201029 18:16:01.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.522" endtime="20201029 18:16:01.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.521" endtime="20201029 18:16:01.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.123" endtime="20201029 18:16:01.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.122" endtime="20201029 18:16:01.544"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.554" endtime="20201029 18:16:01.569"></status>
</kw>
<msg timestamp="20201029 18:16:01.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.552" endtime="20201029 18:16:01.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.571" endtime="20201029 18:16:01.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.574" endtime="20201029 18:16:01.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.549" endtime="20201029 18:16:01.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.547" endtime="20201029 18:16:01.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.583" endtime="20201029 18:16:01.871"></status>
</kw>
<msg timestamp="20201029 18:16:01.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023324611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023349181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.581" endtime="20201029 18:16:01.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023324611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023349181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.875" endtime="20201029 18:16:01.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.884" endtime="20201029 18:16:01.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.579" endtime="20201029 18:16:01.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.577" endtime="20201029 18:16:01.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.890" level="INFO">${RESULT} = [{'diff': 2.4570000000001535e-05}, {'diff': 2.3972000000000576e-05}, {'diff': 2.3666000000002047e-05}, {'diff': 2.3292000000001145e-05}, {'diff': 2.369500000000066e-05}, {'diff': 2.3320000000000285e-0...</msg>
<status status="PASS" starttime="20201029 18:16:01.887" endtime="20201029 18:16:01.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.895" level="INFO">${ACCURACY} = {'diff': [2.4570000000001535e-05, 2.3972000000000576e-05, 2.3666000000002047e-05, 2.3292000000001145e-05, 2.369500000000066e-05, 2.3320000000000285e-05, 2.334699999999995e-05, 2.369500000000066e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:16:01.891" endtime="20201029 18:16:01.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.899" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.898" endtime="20201029 18:16:01.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.902" level="INFO">VALUE: [2.4570000000001535e-05, 2.3972000000000576e-05, 2.3666000000002047e-05, 2.3292000000001145e-05, 2.369500000000066e-05, 2.3320000000000285e-05, 2.334699999999995e-05, 2.369500000000066e-05, 2.336099999999952e-05, 2.368100000000109e-05, 2.334699999999995e-05, 2.333300000000038e-05, 2.362500000000281e-05, 2.333300000000038e-05, 2.363900000000238e-05, 2.3028000000001325e-05, 2.368099999999762e-05, 2.336099999999952e-05, 2.365299999999848e-05, 2.334699999999995e-05, 2.3652000000002477e-05, 2.3041999999997426e-05, 2.363899999999891e-05, 2.3306000000000715e-05, 2.3637999999999437e-05, 2.3042000000000895e-05, 2.3320000000000285e-05, 2.363899999999891e-05, 2.334699999999995e-05, 2.363899999999891e-05, 2.3056000000000465e-05, 2.3042000000000895e-05, 2.365300000000195e-05, 2.3028000000001325e-05, 2.363899999999891e-05, 2.3320000000000285e-05, 2.363899999999891e-05, 2.334699999999995e-05, 2.363900000000238e-05, 2.365299999999848e-05, 2.333300000000038e-05, 2.365300000000195e-05, 2.333300000000038e-05, 2.363900000000238e-05, 2.3348000000002894e-05, 2.3638000000002907e-05, 2.3666000000002047e-05, 2.3026999999998382e-05, 2.334699999999995e-05, 2.3333999999999855e-05]</msg>
<status status="PASS" starttime="20201029 18:16:01.900" endtime="20201029 18:16:01.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.895" endtime="20201029 18:16:01.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.907" endtime="20201029 18:16:01.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.906" endtime="20201029 18:16:01.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.905" endtime="20201029 18:16:01.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.545" endtime="20201029 18:16:01.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.545" endtime="20201029 18:16:01.928"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.937" endtime="20201029 18:16:01.952"></status>
</kw>
<msg timestamp="20201029 18:16:01.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.935" endtime="20201029 18:16:01.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.954" endtime="20201029 18:16:01.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.956" endtime="20201029 18:16:01.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.933" endtime="20201029 18:16:01.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.930" endtime="20201029 18:16:01.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.965" endtime="20201029 18:16:02.260"></status>
</kw>
<msg timestamp="20201029 18:16:02.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021964056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.964" endtime="20201029 18:16:02.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021964056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.270" endtime="20201029 18:16:02.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.288" endtime="20201029 18:16:02.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.961" endtime="20201029 18:16:02.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.959" endtime="20201029 18:16:02.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:02.302" level="INFO">${RESULT} = [{'diff': 2.547299999999808e-05}, {'diff': 2.3944000000001436e-05}, {'diff': 2.456900000000206e-05}, {'diff': 2.4569999999998066e-05}, {'diff': 2.4263999999999536e-05}, {'diff': 2.4276999999999632e-05...</msg>
<status status="PASS" starttime="20201029 18:16:02.295" endtime="20201029 18:16:02.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:02.313" level="INFO">${ACCURACY} = {'diff': [2.547299999999808e-05, 2.3944000000001436e-05, 2.456900000000206e-05, 2.4569999999998066e-05, 2.4263999999999536e-05, 2.4276999999999632e-05, 2.4513999999999786e-05, 2.394500000000091e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:16:02.304" endtime="20201029 18:16:02.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.321" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:16:02.320" endtime="20201029 18:16:02.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.323" level="INFO">VALUE: [2.547299999999808e-05, 2.3944000000001436e-05, 2.456900000000206e-05, 2.4569999999998066e-05, 2.4263999999999536e-05, 2.4276999999999632e-05, 2.4513999999999786e-05, 2.394500000000091e-05, 2.487500000000059e-05, 2.3929999999998397e-05, 2.4554999999999022e-05, 2.4249999999999966e-05, 2.4569999999998066e-05, 2.4165999999999077e-05, 2.4249999999999966e-05, 2.4263999999999536e-05, 2.486100000000102e-05, 2.4306000000001715e-05, 2.487500000000059e-05, 2.4554999999999022e-05, 2.4236000000000396e-05, 2.4263000000000062e-05, 2.4249999999999966e-05, 2.4249999999999966e-05, 2.461100000000077e-05, 2.4249999999999966e-05, 2.4555999999998496e-05, 2.4527999999999356e-05, 2.4570000000001535e-05, 2.4556000000001965e-05, 2.4208000000001256e-05, 2.4305999999998246e-05, 2.4263999999999536e-05, 2.4221999999997357e-05, 2.4249999999999966e-05, 2.4277999999999106e-05, 2.3958000000001006e-05, 2.4277999999999106e-05, 2.4249999999999966e-05, 2.4249999999999966e-05, 2.419499999999769e-05, 2.45970000000012e-05, 2.423699999999987e-05, 2.4596999999997732e-05, 2.4568999999998592e-05, 2.4554999999999022e-05, 2.4222000000000826e-05, 2.4304999999998772e-05, 2.4263999999999536e-05, 2.462500000000034e-05]</msg>
<status status="PASS" starttime="20201029 18:16:02.322" endtime="20201029 18:16:02.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.315" endtime="20201029 18:16:02.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:02.328" endtime="20201029 18:16:02.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.327" endtime="20201029 18:16:02.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.326" endtime="20201029 18:16:02.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.929" endtime="20201029 18:16:02.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.928" endtime="20201029 18:16:02.349"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.360" endtime="20201029 18:16:02.375"></status>
</kw>
<msg timestamp="20201029 18:16:02.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.358" endtime="20201029 18:16:02.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.376" endtime="20201029 18:16:02.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.379" endtime="20201029 18:16:02.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.355" endtime="20201029 18:16:02.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.353" endtime="20201029 18:16:02.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.388" endtime="20201029 18:16:02.677"></status>
</kw>
<msg timestamp="20201029 18:16:02.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023993389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024020389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.386" endtime="20201029 18:16:02.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023993389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024020389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.682" endtime="20201029 18:16:02.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.697" endtime="20201029 18:16:02.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.384" endtime="20201029 18:16:02.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.382" endtime="20201029 18:16:02.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:02.707" level="INFO">${RESULT} = [{'diff': 2.6999999999999247e-05}, {'diff': 2.5778000000000606e-05}, {'diff': 2.5764000000001036e-05}, {'diff': 2.519499999999869e-05}, {'diff': 2.518099999999912e-05}, {'diff': 2.5832999999999412e-05...</msg>
<status status="PASS" starttime="20201029 18:16:02.701" endtime="20201029 18:16:02.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:02.713" level="INFO">${ACCURACY} = {'diff': [2.6999999999999247e-05, 2.5778000000000606e-05, 2.5764000000001036e-05, 2.519499999999869e-05, 2.518099999999912e-05, 2.5832999999999412e-05, 2.5166000000000077e-05, 2.5486000000001646e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:02.708" endtime="20201029 18:16:02.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.719" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:16:02.718" endtime="20201029 18:16:02.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.721" level="INFO">VALUE: [2.6999999999999247e-05, 2.5778000000000606e-05, 2.5764000000001036e-05, 2.519499999999869e-05, 2.518099999999912e-05, 2.5832999999999412e-05, 2.5166000000000077e-05, 2.5486000000001646e-05, 2.5179999999999647e-05, 2.5472000000002076e-05, 2.5500000000001216e-05, 2.5791000000000702e-05, 2.518100000000259e-05, 2.5166000000000077e-05, 2.54169999999998e-05, 2.5486000000001646e-05, 2.5541999999999926e-05, 2.5791000000000702e-05, 2.5485999999998177e-05, 2.5471999999998607e-05, 2.5500000000001216e-05, 2.5486000000001646e-05, 2.5500000000001216e-05, 2.518099999999912e-05, 2.5471999999998607e-05, 2.5486000000001646e-05, 2.5485999999998177e-05, 2.5500000000001216e-05, 2.5514000000000786e-05, 2.5179999999999647e-05, 2.5485999999998177e-05, 2.5500000000001216e-05, 2.5193999999999217e-05, 2.5471999999998607e-05, 2.5485999999998177e-05, 2.518100000000259e-05, 2.5486000000001646e-05, 2.5208000000002256e-05, 2.5777999999997137e-05, 2.5485999999998177e-05, 2.5485999999998177e-05, 2.486100000000102e-05, 2.516699999999955e-05, 2.5792000000000176e-05, 2.518100000000259e-05, 2.515299999999998e-05, 2.5805999999999746e-05, 2.548700000000112e-05, 2.5500000000001216e-05, 2.5485999999998177e-05]</msg>
<status status="PASS" starttime="20201029 18:16:02.720" endtime="20201029 18:16:02.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.715" endtime="20201029 18:16:02.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:02.734" endtime="20201029 18:16:02.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.732" endtime="20201029 18:16:02.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.731" endtime="20201029 18:16:02.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.350" endtime="20201029 18:16:02.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.350" endtime="20201029 18:16:02.755"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.764" endtime="20201029 18:16:02.780"></status>
</kw>
<msg timestamp="20201029 18:16:02.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.762" endtime="20201029 18:16:02.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.781" endtime="20201029 18:16:02.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.784" endtime="20201029 18:16:02.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.759" endtime="20201029 18:16:02.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.757" endtime="20201029 18:16:02.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.793" endtime="20201029 18:16:03.079"></status>
</kw>
<msg timestamp="20201029 18:16:03.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.791" endtime="20201029 18:16:03.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.083" endtime="20201029 18:16:03.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.091" endtime="20201029 18:16:03.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.789" endtime="20201029 18:16:03.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.787" endtime="20201029 18:16:03.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:03.098" level="INFO">${RESULT} = [{'diff': 2.7901999999999788e-05}, {'diff': 2.6708000000000287e-05}, {'diff': 2.6708000000000287e-05}, {'diff': 2.6471999999999607e-05}, {'diff': 2.64170000000008e-05}, {'diff': 2.670899999999976e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:03.095" endtime="20201029 18:16:03.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:03.102" level="INFO">${ACCURACY} = {'diff': [2.7901999999999788e-05, 2.6708000000000287e-05, 2.6708000000000287e-05, 2.6471999999999607e-05, 2.64170000000008e-05, 2.670899999999976e-05, 2.638900000000166e-05, 2.6638999999998442e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:16:03.099" endtime="20201029 18:16:03.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.106" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:16:03.105" endtime="20201029 18:16:03.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.110" level="INFO">VALUE: [2.7901999999999788e-05, 2.6708000000000287e-05, 2.6708000000000287e-05, 2.6471999999999607e-05, 2.64170000000008e-05, 2.670899999999976e-05, 2.638900000000166e-05, 2.6638999999998442e-05, 2.6098000000002175e-05, 2.6708000000000287e-05, 2.640299999999776e-05, 2.6708000000000287e-05, 2.6082999999999662e-05, 2.637500000000209e-05, 2.6680000000001147e-05, 2.6721999999999857e-05, 2.6401999999998288e-05, 2.6082999999999662e-05, 2.6694000000000717e-05, 2.640300000000123e-05, 2.6721999999999857e-05, 2.669500000000019e-05, 2.640300000000123e-05, 2.6096999999999232e-05, 2.638900000000166e-05, 2.638899999999819e-05, 2.6096999999999232e-05, 2.6069000000000092e-05, 2.6721999999999857e-05, 2.6708000000000287e-05, 2.640300000000123e-05, 2.6096999999999232e-05, 2.6694000000000717e-05, 2.611100000000227e-05, 2.6069000000000092e-05, 2.6680000000001147e-05, 2.6082999999999662e-05, 2.669500000000019e-05, 2.6374999999998622e-05, 2.6415999999997858e-05, 2.640299999999776e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.6374999999998622e-05, 2.640300000000123e-05, 2.6402000000001757e-05, 2.611100000000227e-05, 2.640300000000123e-05, 2.6402000000001757e-05, 2.64170000000008e-05]</msg>
<status status="PASS" starttime="20201029 18:16:03.108" endtime="20201029 18:16:03.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.103" endtime="20201029 18:16:03.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:03.115" endtime="20201029 18:16:03.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.113" endtime="20201029 18:16:03.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.112" endtime="20201029 18:16:03.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.756" endtime="20201029 18:16:03.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.755" endtime="20201029 18:16:03.135"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.144" endtime="20201029 18:16:03.160"></status>
</kw>
<msg timestamp="20201029 18:16:03.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.143" endtime="20201029 18:16:03.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.161" endtime="20201029 18:16:03.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.164" endtime="20201029 18:16:03.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.140" endtime="20201029 18:16:03.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.138" endtime="20201029 18:16:03.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.173" endtime="20201029 18:16:03.459"></status>
</kw>
<msg timestamp="20201029 18:16:03.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022111236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022140083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.171" endtime="20201029 18:16:03.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022111236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022140083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.463" endtime="20201029 18:16:03.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.472" endtime="20201029 18:16:03.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.169" endtime="20201029 18:16:03.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.167" endtime="20201029 18:16:03.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:03.478" level="INFO">${RESULT} = [{'diff': 2.8847000000001982e-05}, {'diff': 2.6958000000000537e-05}, {'diff': 2.7638999999999442e-05}, {'diff': 2.7305999999997776e-05}, {'diff': 2.7318999999997873e-05}, {'diff': 2.7305999999997776e-...</msg>
<status status="PASS" starttime="20201029 18:16:03.475" endtime="20201029 18:16:03.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:03.483" level="INFO">${ACCURACY} = {'diff': [2.8847000000001982e-05, 2.6958000000000537e-05, 2.7638999999999442e-05, 2.7305999999997776e-05, 2.7318999999997873e-05, 2.7305999999997776e-05, 2.7026999999998913e-05, 2.7319000000001342e-05...</msg>
<status status="PASS" starttime="20201029 18:16:03.479" endtime="20201029 18:16:03.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.488" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:16:03.487" endtime="20201029 18:16:03.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.490" level="INFO">VALUE: [2.8847000000001982e-05, 2.6958000000000537e-05, 2.7638999999999442e-05, 2.7305999999997776e-05, 2.7318999999997873e-05, 2.7305999999997776e-05, 2.7026999999998913e-05, 2.7319000000001342e-05, 2.7305999999997776e-05, 2.7000000000002716e-05, 2.7346999999997013e-05, 2.7013999999998817e-05, 2.7334000000000386e-05, 2.7611000000000302e-05, 2.7277999999998637e-05, 2.7318999999997873e-05, 2.7320000000000816e-05, 2.7305999999997776e-05, 2.7637999999999968e-05, 2.7611000000000302e-05, 2.7264000000002536e-05, 2.7304999999998303e-05, 2.7347000000000482e-05, 2.7611000000000302e-05, 2.7306000000001246e-05, 2.7652999999999012e-05, 2.7624999999999872e-05, 2.762500000000334e-05, 2.7305000000001772e-05, 2.7624999999999872e-05, 2.6999999999999247e-05, 2.7638999999999442e-05, 2.7278000000002106e-05, 2.7028000000001856e-05, 2.7624999999999872e-05, 2.6999999999999247e-05, 2.763900000000291e-05, 2.7014000000002286e-05, 2.7943999999998498e-05, 2.7305000000001772e-05, 2.7624999999999872e-05, 2.7347000000000482e-05, 2.7624999999999872e-05, 2.7624999999999872e-05, 2.7611000000000302e-05, 2.7291999999998207e-05, 2.7318999999997873e-05, 2.7624999999999872e-05, 2.7637999999999968e-05, 2.6985999999999677e-05]</msg>
<status status="PASS" starttime="20201029 18:16:03.489" endtime="20201029 18:16:03.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.484" endtime="20201029 18:16:03.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:03.495" endtime="20201029 18:16:03.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.494" endtime="20201029 18:16:03.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.493" endtime="20201029 18:16:03.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.136" endtime="20201029 18:16:03.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.136" endtime="20201029 18:16:03.516"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.525" endtime="20201029 18:16:03.540"></status>
</kw>
<msg timestamp="20201029 18:16:03.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.523" endtime="20201029 18:16:03.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.542" endtime="20201029 18:16:03.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.544" endtime="20201029 18:16:03.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.521" endtime="20201029 18:16:03.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.518" endtime="20201029 18:16:03.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.553" endtime="20201029 18:16:03.841"></status>
</kw>
<msg timestamp="20201029 18:16:03.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.552" endtime="20201029 18:16:03.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.845" endtime="20201029 18:16:03.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.854" endtime="20201029 18:16:03.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.549" endtime="20201029 18:16:03.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.547" endtime="20201029 18:16:03.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:03.860" level="INFO">${RESULT} = [{'diff': 2.9736000000002427e-05}, {'diff': 2.7888999999999692e-05}, {'diff': 2.8527999999999887e-05}, {'diff': 2.8847999999997986e-05}, {'diff': 2.8222000000001357e-05}, {'diff': 2.8236000000000927e-...</msg>
<status status="PASS" starttime="20201029 18:16:03.857" endtime="20201029 18:16:03.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:03.865" level="INFO">${ACCURACY} = {'diff': [2.9736000000002427e-05, 2.7888999999999692e-05, 2.8527999999999887e-05, 2.8847999999997986e-05, 2.8222000000001357e-05, 2.8236000000000927e-05, 2.8540999999999983e-05, 2.8236000000000927e-05...</msg>
<status status="PASS" starttime="20201029 18:16:03.861" endtime="20201029 18:16:03.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.869" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:16:03.868" endtime="20201029 18:16:03.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.872" level="INFO">VALUE: [2.9736000000002427e-05, 2.7888999999999692e-05, 2.8527999999999887e-05, 2.8847999999997986e-05, 2.8222000000001357e-05, 2.8236000000000927e-05, 2.8540999999999983e-05, 2.8236000000000927e-05, 2.8208000000001787e-05, 2.8527999999999887e-05, 2.8542000000002926e-05, 2.8847000000001982e-05, 2.8527000000000413e-05, 2.8541999999999457e-05, 2.8541999999999457e-05, 2.8540999999999983e-05, 2.8250000000000497e-05, 2.8832999999998943e-05, 2.793100000000187e-05, 2.8847000000001982e-05, 2.7861000000000552e-05, 2.8556000000002496e-05, 2.8236000000000927e-05, 2.8555999999999027e-05, 2.8527999999999887e-05, 2.8540999999999983e-05, 2.8541999999999457e-05, 2.8541999999999457e-05, 2.8500000000000747e-05, 2.8527999999999887e-05, 2.816699999999908e-05, 2.8152999999999512e-05, 2.8834000000001886e-05, 2.8236000000000927e-05, 2.8527999999999887e-05, 2.8235999999997458e-05, 2.8848000000001456e-05, 2.8555999999999027e-05, 2.8528000000003356e-05, 2.8236000000000927e-05, 2.8221999999997888e-05, 2.8527999999999887e-05, 2.8540999999999983e-05, 2.8235999999997458e-05, 2.8846999999998513e-05, 2.8236000000000927e-05, 2.8541999999999457e-05, 2.8193999999998748e-05, 2.8471999999998138e-05, 2.7847000000000982e-05]</msg>
<status status="PASS" starttime="20201029 18:16:03.871" endtime="20201029 18:16:03.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.866" endtime="20201029 18:16:03.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:03.877" endtime="20201029 18:16:03.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.876" endtime="20201029 18:16:03.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.874" endtime="20201029 18:16:03.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.517" endtime="20201029 18:16:03.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.516" endtime="20201029 18:16:03.898"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.907" endtime="20201029 18:16:03.925"></status>
</kw>
<msg timestamp="20201029 18:16:03.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.905" endtime="20201029 18:16:03.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.926" endtime="20201029 18:16:03.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.929" endtime="20201029 18:16:03.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.903" endtime="20201029 18:16:03.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.901" endtime="20201029 18:16:03.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.939" endtime="20201029 18:16:04.224"></status>
</kw>
<msg timestamp="20201029 18:16:04.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025308986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025339694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.937" endtime="20201029 18:16:04.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025308986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025339694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.228" endtime="20201029 18:16:04.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.237" endtime="20201029 18:16:04.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.934" endtime="20201029 18:16:04.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.933" endtime="20201029 18:16:04.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:04.243" level="INFO">${RESULT} = [{'diff': 3.070800000000082e-05}, {'diff': 2.973699999999843e-05}, {'diff': 2.9458000000003037e-05}, {'diff': 2.9457999999999568e-05}, {'diff': 2.9526999999997944e-05}, {'diff': 2.9778000000001137e-05...</msg>
<status status="PASS" starttime="20201029 18:16:04.240" endtime="20201029 18:16:04.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:04.248" level="INFO">${ACCURACY} = {'diff': [3.070800000000082e-05, 2.973699999999843e-05, 2.9458000000003037e-05, 2.9457999999999568e-05, 2.9526999999997944e-05, 2.9778000000001137e-05, 2.916599999999714e-05, 2.9721999999999388e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:16:04.244" endtime="20201029 18:16:04.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.252" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:16:04.251" endtime="20201029 18:16:04.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.255" level="INFO">VALUE: [3.070800000000082e-05, 2.973699999999843e-05, 2.9458000000003037e-05, 2.9457999999999568e-05, 2.9526999999997944e-05, 2.9778000000001137e-05, 2.916599999999714e-05, 2.9721999999999388e-05, 2.9457999999999568e-05, 2.9167000000000082e-05, 2.9138999999997472e-05, 2.944499999999947e-05, 2.9417000000000332e-05, 2.9763000000002093e-05, 2.9472000000002607e-05, 2.9499999999998278e-05, 2.9221999999998888e-05, 2.9763999999998098e-05, 2.9500000000001747e-05, 2.9167000000000082e-05, 2.9471999999999138e-05, 2.9167000000000082e-05, 2.9764000000001567e-05, 2.9736000000002427e-05, 2.9763000000002093e-05, 2.9153000000000512e-05, 2.9153000000000512e-05, 2.9430000000000428e-05, 2.9403000000000762e-05, 2.9167000000000082e-05, 2.9457999999999568e-05, 2.9457999999999568e-05, 2.9763999999998098e-05, 2.9458000000003037e-05, 2.9471999999999138e-05, 2.9153000000000512e-05, 2.9749999999998528e-05, 2.9167000000000082e-05, 2.944499999999947e-05, 2.9458000000003037e-05, 2.9167000000000082e-05, 2.9167000000000082e-05, 2.9457999999999568e-05, 2.9471999999999138e-05, 2.9443999999999998e-05, 2.9153000000000512e-05, 2.9139000000000942e-05, 2.9443999999999998e-05, 2.9750000000001997e-05, 2.942999999999696e-05]</msg>
<status status="PASS" starttime="20201029 18:16:04.254" endtime="20201029 18:16:04.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.249" endtime="20201029 18:16:04.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:04.262" endtime="20201029 18:16:04.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.259" endtime="20201029 18:16:04.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.258" endtime="20201029 18:16:04.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.899" endtime="20201029 18:16:04.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.898" endtime="20201029 18:16:04.284"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.295" endtime="20201029 18:16:04.311"></status>
</kw>
<msg timestamp="20201029 18:16:04.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.293" endtime="20201029 18:16:04.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.312" endtime="20201029 18:16:04.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.314" endtime="20201029 18:16:04.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.290" endtime="20201029 18:16:04.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.288" endtime="20201029 18:16:04.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.324" endtime="20201029 18:16:04.623"></status>
</kw>
<msg timestamp="20201029 18:16:04.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025510444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025542042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.323" endtime="20201029 18:16:04.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025510444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025542042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.627" endtime="20201029 18:16:04.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.635" endtime="20201029 18:16:04.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.320" endtime="20201029 18:16:04.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.319" endtime="20201029 18:16:04.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:04.642" level="INFO">${RESULT} = [{'diff': 3.1598000000000737e-05}, {'diff': 3.066700000000158e-05}, {'diff': 3.067999999999821e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.0347000000000013e-05}, {'diff': 3.068000000000168e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:04.638" endtime="20201029 18:16:04.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:04.646" level="INFO">${ACCURACY} = {'diff': [3.1598000000000737e-05, 3.066700000000158e-05, 3.067999999999821e-05, 3.0430000000001428e-05, 3.0347000000000013e-05, 3.068000000000168e-05, 3.041599999999839e-05, 3.0056000000000527e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:16:04.643" endtime="20201029 18:16:04.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.651" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:16:04.650" endtime="20201029 18:16:04.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.654" level="INFO">VALUE: [3.1598000000000737e-05, 3.066700000000158e-05, 3.067999999999821e-05, 3.0430000000001428e-05, 3.0347000000000013e-05, 3.068000000000168e-05, 3.041599999999839e-05, 3.0056000000000527e-05, 3.0374999999999153e-05, 3.068100000000115e-05, 3.0416999999997862e-05, 3.0305000000001303e-05, 3.0347000000000013e-05, 3.0375000000002622e-05, 3.0388999999998723e-05, 3.0388999999998723e-05, 3.0360999999999583e-05, 3.0374999999999153e-05, 3.068099999999768e-05, 3.0055999999997057e-05, 3.066699999999811e-05, 3.0111000000002802e-05, 3.0360999999999583e-05, 3.068000000000168e-05, 3.0403000000001762e-05, 3.0110999999999333e-05, 3.068000000000168e-05, 3.0362000000002526e-05, 3.0083999999999667e-05, 3.070799999999735e-05, 3.0083000000000193e-05, 3.0375000000002622e-05, 3.066699999999811e-05, 3.068099999999768e-05, 3.0070000000000097e-05, 3.070800000000082e-05, 3.0056000000000527e-05, 3.068100000000115e-05, 3.068100000000115e-05, 3.0056000000000527e-05, 3.066699999999811e-05, 3.0082999999996723e-05, 3.0360999999999583e-05, 3.070900000000029e-05, 3.0431000000000902e-05, 3.068099999999768e-05, 3.0070000000000097e-05, 3.067999999999821e-05, 3.0374999999999153e-05, 3.0055000000001053e-05]</msg>
<status status="PASS" starttime="20201029 18:16:04.652" endtime="20201029 18:16:04.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.648" endtime="20201029 18:16:04.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:04.659" endtime="20201029 18:16:04.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.657" endtime="20201029 18:16:04.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.656" endtime="20201029 18:16:04.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.285" endtime="20201029 18:16:04.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.284" endtime="20201029 18:16:04.679"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.689" endtime="20201029 18:16:04.704"></status>
</kw>
<msg timestamp="20201029 18:16:04.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.687" endtime="20201029 18:16:04.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.705" endtime="20201029 18:16:04.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.708" endtime="20201029 18:16:04.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.684" endtime="20201029 18:16:04.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.682" endtime="20201029 18:16:04.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.717" endtime="20201029 18:16:05.005"></status>
</kw>
<msg timestamp="20201029 18:16:05.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022928764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022961236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.715" endtime="20201029 18:16:05.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022928764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022961236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.010" endtime="20201029 18:16:05.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.018" endtime="20201029 18:16:05.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.713" endtime="20201029 18:16:05.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.711" endtime="20201029 18:16:05.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:05.025" level="INFO">${RESULT} = [{'diff': 3.247199999999867e-05}, {'diff': 3.098600000000021e-05}, {'diff': 3.122300000000036e-05}, {'diff': 3.161100000000083e-05}, {'diff': 3.16250000000004e-05}, {'diff': 3.129100000000273e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:05.022" endtime="20201029 18:16:05.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:05.030" level="INFO">${ACCURACY} = {'diff': [3.247199999999867e-05, 3.098600000000021e-05, 3.122300000000036e-05, 3.161100000000083e-05, 3.16250000000004e-05, 3.129100000000273e-05, 3.130599999999831e-05, 3.129100000000273e-05, 3.15970...</msg>
<status status="PASS" starttime="20201029 18:16:05.026" endtime="20201029 18:16:05.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.034" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:16:05.033" endtime="20201029 18:16:05.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.037" level="INFO">VALUE: [3.247199999999867e-05, 3.098600000000021e-05, 3.122300000000036e-05, 3.161100000000083e-05, 3.16250000000004e-05, 3.129100000000273e-05, 3.130599999999831e-05, 3.129100000000273e-05, 3.159700000000126e-05, 3.129199999999874e-05, 3.158300000000169e-05, 3.1596999999997794e-05, 3.158300000000169e-05, 3.131999999999788e-05, 3.15839999999977e-05, 3.1304999999998834e-05, 3.129100000000273e-05, 3.130599999999831e-05, 3.1598000000000737e-05, 3.101399999999935e-05, 3.129199999999874e-05, 3.127799999999917e-05, 3.129200000000221e-05, 3.1290999999999264e-05, 3.130599999999831e-05, 3.163899999999997e-05, 3.161100000000083e-05, 3.130599999999831e-05, 3.130599999999831e-05, 3.129200000000221e-05, 3.165200000000007e-05, 3.104200000000196e-05, 3.159700000000126e-05, 3.1290999999999264e-05, 3.1290999999999264e-05, 3.1568999999998654e-05, 3.097200000000064e-05, 3.159700000000126e-05, 3.125000000000003e-05, 3.1582999999998224e-05, 3.131900000000187e-05, 3.1290999999999264e-05, 3.127800000000264e-05, 3.16250000000004e-05, 3.159700000000126e-05, 3.154199999999899e-05, 3.127799999999917e-05, 3.129200000000221e-05, 3.1598000000000737e-05, 3.129200000000221e-05]</msg>
<status status="PASS" starttime="20201029 18:16:05.035" endtime="20201029 18:16:05.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.030" endtime="20201029 18:16:05.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.042" endtime="20201029 18:16:05.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.040" endtime="20201029 18:16:05.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.039" endtime="20201029 18:16:05.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.680" endtime="20201029 18:16:05.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.680" endtime="20201029 18:16:05.063"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.072" endtime="20201029 18:16:05.090"></status>
</kw>
<msg timestamp="20201029 18:16:05.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.070" endtime="20201029 18:16:05.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.091" endtime="20201029 18:16:05.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.094" endtime="20201029 18:16:05.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.067" endtime="20201029 18:16:05.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.065" endtime="20201029 18:16:05.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.103" endtime="20201029 18:16:05.412"></status>
</kw>
<msg timestamp="20201029 18:16:05.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023368333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023410528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.102" endtime="20201029 18:16:05.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023368333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023410528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.416" endtime="20201029 18:16:05.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.425" endtime="20201029 18:16:05.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.099" endtime="20201029 18:16:05.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.097" endtime="20201029 18:16:05.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:05.432" level="INFO">${RESULT} = [{'diff': 4.2194999999998345e-05}, {'diff': 4.177799999999926e-05}, {'diff': 4.2361000000001175e-05}, {'diff': 4.2319000000002466e-05}, {'diff': 4.222200000000148e-05}, {'diff': 4.223600000000105e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:05.429" endtime="20201029 18:16:05.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:05.436" level="INFO">${ACCURACY} = {'diff': [4.2194999999998345e-05, 4.177799999999926e-05, 4.2361000000001175e-05, 4.2319000000002466e-05, 4.222200000000148e-05, 4.223600000000105e-05, 4.244399999999912e-05, 4.2582999999998816e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:16:05.433" endtime="20201029 18:16:05.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.441" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:16:05.440" endtime="20201029 18:16:05.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.443" level="INFO">VALUE: [4.2194999999998345e-05, 4.177799999999926e-05, 4.2361000000001175e-05, 4.2319000000002466e-05, 4.222200000000148e-05, 4.223600000000105e-05, 4.244399999999912e-05, 4.2582999999998816e-05, 4.2554999999999676e-05, 4.248599999999783e-05, 4.2582999999998816e-05, 4.2402999999999885e-05, 4.2346999999998136e-05, 4.232000000000194e-05, 4.24999999999974e-05, 4.2360999999997706e-05, 4.247200000000173e-05, 4.250000000000087e-05, 4.250000000000087e-05, 4.2445000000002064e-05, 4.252800000000001e-05, 4.2347000000001606e-05, 4.23059999999989e-05, 4.223600000000105e-05, 4.2222999999997485e-05, 4.2208999999997915e-05, 4.233399999999804e-05, 4.2639000000000565e-05, 4.234799999999761e-05, 4.2389000000000315e-05, 4.2374999999997276e-05, 4.258399999999829e-05, 4.2374999999997276e-05, 4.254200000000305e-05, 4.1902999999999385e-05, 4.190199999999991e-05, 4.226400000000019e-05, 4.169399999999837e-05, 4.227699999999682e-05, 4.250000000000087e-05, 4.219400000000234e-05, 4.240200000000041e-05, 4.2639000000000565e-05, 4.2416999999999455e-05, 4.2625000000000995e-05, 4.225000000000062e-05, 4.247200000000173e-05, 4.222199999999801e-05, 4.170799999999794e-05, 4.2360999999997706e-05]</msg>
<status status="PASS" starttime="20201029 18:16:05.442" endtime="20201029 18:16:05.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.437" endtime="20201029 18:16:05.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.450" endtime="20201029 18:16:05.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.448" endtime="20201029 18:16:05.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.447" endtime="20201029 18:16:05.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.064" endtime="20201029 18:16:05.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.063" endtime="20201029 18:16:05.470"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.480" endtime="20201029 18:16:05.496"></status>
</kw>
<msg timestamp="20201029 18:16:05.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.478" endtime="20201029 18:16:05.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.498" endtime="20201029 18:16:05.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.501" endtime="20201029 18:16:05.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.475" endtime="20201029 18:16:05.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.473" endtime="20201029 18:16:05.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.510" endtime="20201029 18:16:05.796"></status>
</kw>
<msg timestamp="20201029 18:16:05.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023071833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.508" endtime="20201029 18:16:05.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023071833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.800" endtime="20201029 18:16:05.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.809" endtime="20201029 18:16:05.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.506" endtime="20201029 18:16:05.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.504" endtime="20201029 18:16:05.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:05.815" level="INFO">${RESULT} = [{'diff': 4.327700000000129e-05}, {'diff': 4.3639000000001565e-05}, {'diff': 4.26799999999998e-05}, {'diff': 4.352800000000101e-05}, {'diff': 4.3360999999998706e-05}, {'diff': 4.3569000000000246e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:05.812" endtime="20201029 18:16:05.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:05.821" level="INFO">${ACCURACY} = {'diff': [4.327700000000129e-05, 4.3639000000001565e-05, 4.26799999999998e-05, 4.352800000000101e-05, 4.3360999999998706e-05, 4.3569000000000246e-05, 4.274999999999765e-05, 4.2903000000000385e-05, 4.3...</msg>
<status status="PASS" starttime="20201029 18:16:05.816" endtime="20201029 18:16:05.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.825" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:16:05.824" endtime="20201029 18:16:05.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.828" level="INFO">VALUE: [4.327700000000129e-05, 4.3639000000001565e-05, 4.26799999999998e-05, 4.352800000000101e-05, 4.3360999999998706e-05, 4.3569000000000246e-05, 4.274999999999765e-05, 4.2903000000000385e-05, 4.3596999999999386e-05, 4.326400000000119e-05, 4.331999999999947e-05, 4.2625000000000995e-05, 4.2666999999999705e-05, 4.327800000000076e-05, 4.354200000000058e-05, 4.324999999999815e-05, 4.3389000000001315e-05, 4.345800000000316e-05, 4.3459000000002634e-05, 4.3208999999998915e-05, 4.2666999999999705e-05, 4.3597000000002856e-05, 4.273599999999808e-05, 4.2708999999998415e-05, 4.333399999999904e-05, 4.3305000000000426e-05, 4.354099999999764e-05, 4.359799999999886e-05, 4.3666999999997236e-05, 4.320800000000291e-05, 4.319399999999987e-05, 4.316600000000073e-05, 4.352700000000154e-05, 4.3458999999999165e-05, 4.347199999999926e-05, 4.3346999999999136e-05, 4.3360999999998706e-05, 4.3318999999999996e-05, 4.31800000000003e-05, 4.352799999999754e-05, 4.352800000000101e-05, 4.354200000000058e-05, 4.323600000000205e-05, 4.3569000000000246e-05, 4.3374999999998276e-05, 4.3332999999999566e-05, 4.327800000000076e-05, 4.2916999999999955e-05, 4.3653000000001135e-05, 4.269400000000284e-05]</msg>
<status status="PASS" starttime="20201029 18:16:05.826" endtime="20201029 18:16:05.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.822" endtime="20201029 18:16:05.829"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.833" endtime="20201029 18:16:05.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.832" endtime="20201029 18:16:05.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.830" endtime="20201029 18:16:05.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.471" endtime="20201029 18:16:05.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.471" endtime="20201029 18:16:05.854"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.863" endtime="20201029 18:16:05.880"></status>
</kw>
<msg timestamp="20201029 18:16:05.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.861" endtime="20201029 18:16:05.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.881" endtime="20201029 18:16:05.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.884" endtime="20201029 18:16:05.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.859" endtime="20201029 18:16:05.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.856" endtime="20201029 18:16:05.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.894" endtime="20201029 18:16:06.181"></status>
</kw>
<msg timestamp="20201029 18:16:06.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022571069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.892" endtime="20201029 18:16:06.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022571069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.185" endtime="20201029 18:16:06.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.194" endtime="20201029 18:16:06.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.889" endtime="20201029 18:16:06.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.887" endtime="20201029 18:16:06.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.201" level="INFO">${RESULT} = [{'diff': 4.3889000000001815e-05}, {'diff': 4.4583000000000816e-05}, {'diff': 4.4403000000001885e-05}, {'diff': 4.4138999999998596e-05}, {'diff': 4.4431000000001025e-05}, {'diff': 4.3694999999999845e-...</msg>
<status status="PASS" starttime="20201029 18:16:06.197" endtime="20201029 18:16:06.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:06.205" level="INFO">${ACCURACY} = {'diff': [4.3889000000001815e-05, 4.4583000000000816e-05, 4.4403000000001885e-05, 4.4138999999998596e-05, 4.4431000000001025e-05, 4.3694999999999845e-05, 4.426400000000219e-05, 4.429200000000133e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:06.202" endtime="20201029 18:16:06.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.210" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:16:06.209" endtime="20201029 18:16:06.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.212" level="INFO">VALUE: [4.3889000000001815e-05, 4.4583000000000816e-05, 4.4403000000001885e-05, 4.4138999999998596e-05, 4.4431000000001025e-05, 4.3694999999999845e-05, 4.426400000000219e-05, 4.429200000000133e-05, 4.4305000000001427e-05, 4.455599999999768e-05, 4.420800000000044e-05, 4.370799999999994e-05, 4.4430999999997556e-05, 4.4333000000000566e-05, 4.4638999999999096e-05, 4.372199999999951e-05, 4.4430999999997556e-05, 4.4195000000000345e-05, 4.448599999999983e-05, 4.422200000000001e-05, 4.4445000000000595e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.429200000000133e-05, 4.4222999999999485e-05, 4.451400000000244e-05, 4.3666999999997236e-05, 4.423599999999958e-05, 4.375000000000212e-05, 4.424999999999915e-05, 4.4375000000002746e-05, 4.454200000000158e-05, 4.391600000000148e-05, 4.429099999999839e-05, 4.4319000000000996e-05, 4.4319000000000996e-05, 4.422200000000001e-05, 4.372199999999951e-05, 4.429100000000186e-05, 4.369400000000037e-05, 4.427799999999829e-05, 4.366600000000123e-05, 4.372199999999951e-05, 4.3638999999998096e-05, 4.44999999999994e-05, 4.375000000000212e-05, 4.448599999999983e-05, 4.4597000000000386e-05, 4.4402999999998416e-05, 4.4195000000000345e-05]</msg>
<status status="PASS" starttime="20201029 18:16:06.211" endtime="20201029 18:16:06.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.206" endtime="20201029 18:16:06.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:06.217" endtime="20201029 18:16:06.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.216" endtime="20201029 18:16:06.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.215" endtime="20201029 18:16:06.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.855" endtime="20201029 18:16:06.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.854" endtime="20201029 18:16:06.238"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.247" endtime="20201029 18:16:06.265"></status>
</kw>
<msg timestamp="20201029 18:16:06.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.246" endtime="20201029 18:16:06.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.267" endtime="20201029 18:16:06.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.269" endtime="20201029 18:16:06.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.243" endtime="20201029 18:16:06.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.241" endtime="20201029 18:16:06.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.279" endtime="20201029 18:16:06.564"></status>
</kw>
<msg timestamp="20201029 18:16:06.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023412042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023457167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.277" endtime="20201029 18:16:06.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023412042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023457167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.568" endtime="20201029 18:16:06.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.577" endtime="20201029 18:16:06.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.274" endtime="20201029 18:16:06.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.273" endtime="20201029 18:16:06.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.583" level="INFO">${RESULT} = [{'diff': 4.5125000000000026e-05}, {'diff': 4.5180999999998306e-05}, {'diff': 4.527699999999982e-05}, {'diff': 4.559799999999739e-05}, {'diff': 4.526299999999678e-05}, {'diff': 4.551399999999997e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:06.580" endtime="20201029 18:16:06.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:06.588" level="INFO">${ACCURACY} = {'diff': [4.5125000000000026e-05, 4.5180999999998306e-05, 4.527699999999982e-05, 4.559799999999739e-05, 4.526299999999678e-05, 4.551399999999997e-05, 4.5333000000001566e-05, 4.542999999999908e-05, 4.5...</msg>
<status status="PASS" starttime="20201029 18:16:06.584" endtime="20201029 18:16:06.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.593" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:16:06.591" endtime="20201029 18:16:06.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.595" level="INFO">VALUE: [4.5125000000000026e-05, 4.5180999999998306e-05, 4.527699999999982e-05, 4.559799999999739e-05, 4.526299999999678e-05, 4.551399999999997e-05, 4.5333000000001566e-05, 4.542999999999908e-05, 4.542999999999908e-05, 4.543000000000255e-05, 4.55000000000004e-05, 4.5319000000001997e-05, 4.476399999999922e-05, 4.520800000000144e-05, 4.4638999999999096e-05, 4.531899999999853e-05, 4.46800000000018e-05, 4.51800000000023e-05, 4.5333000000001566e-05, 4.551399999999997e-05, 4.536099999999724e-05, 4.555600000000215e-05, 4.527799999999929e-05, 4.5402999999999416e-05, 4.5402999999999416e-05, 4.525000000000015e-05, 4.5195000000001345e-05, 4.5125000000000026e-05, 4.526399999999972e-05, 4.5138999999999596e-05, 4.472200000000051e-05, 4.554199999999911e-05, 4.5195000000001345e-05, 4.5319999999998e-05, 4.558400000000129e-05, 4.5431000000002025e-05, 4.5487000000000305e-05, 4.529099999999939e-05, 4.5388999999999846e-05, 4.5347000000001136e-05, 4.548599999999736e-05, 4.5611000000000956e-05, 4.522200000000101e-05, 4.467999999999833e-05, 4.5389000000003316e-05, 4.470800000000094e-05, 4.472199999999704e-05, 4.548600000000083e-05, 4.519400000000187e-05, 4.473600000000008e-05]</msg>
<status status="PASS" starttime="20201029 18:16:06.594" endtime="20201029 18:16:06.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.589" endtime="20201029 18:16:06.597"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:06.601" endtime="20201029 18:16:06.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.600" endtime="20201029 18:16:06.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.598" endtime="20201029 18:16:06.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.239" endtime="20201029 18:16:06.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.239" endtime="20201029 18:16:06.622"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.631" endtime="20201029 18:16:06.648"></status>
</kw>
<msg timestamp="20201029 18:16:06.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.629" endtime="20201029 18:16:06.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.649" endtime="20201029 18:16:06.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.652" endtime="20201029 18:16:06.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.627" endtime="20201029 18:16:06.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.625" endtime="20201029 18:16:06.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.661" endtime="20201029 18:16:06.948"></status>
</kw>
<msg timestamp="20201029 18:16:06.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.660" endtime="20201029 18:16:06.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.952" endtime="20201029 18:16:06.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.960" endtime="20201029 18:16:06.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.657" endtime="20201029 18:16:06.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.655" endtime="20201029 18:16:06.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.967" level="INFO">${RESULT} = [{'diff': 4.5833000000002067e-05}, {'diff': 4.647199999999879e-05}, {'diff': 4.6319999999999e-05}, {'diff': 4.627800000000029e-05}, {'diff': 4.65269999999976e-05}, {'diff': 4.6430999999999556e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:06.964" endtime="20201029 18:16:06.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:06.972" level="INFO">${ACCURACY} = {'diff': [4.5833000000002067e-05, 4.647199999999879e-05, 4.6319999999999e-05, 4.627800000000029e-05, 4.65269999999976e-05, 4.6430999999999556e-05, 4.5652999999999666e-05, 4.663799999999815e-05, 4.6319...</msg>
<status status="PASS" starttime="20201029 18:16:06.968" endtime="20201029 18:16:06.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.977" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:16:06.976" endtime="20201029 18:16:06.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.980" level="INFO">VALUE: [4.5833000000002067e-05, 4.647199999999879e-05, 4.6319999999999e-05, 4.627800000000029e-05, 4.65269999999976e-05, 4.6430999999999556e-05, 4.5652999999999666e-05, 4.663799999999815e-05, 4.6319999999999e-05, 4.630499999999996e-05, 4.6180999999999306e-05, 4.647200000000226e-05, 4.617999999999983e-05, 4.629100000000039e-05, 4.630499999999996e-05, 4.647199999999879e-05, 4.655500000000021e-05, 4.616600000000026e-05, 4.5639000000000096e-05, 4.630499999999996e-05, 4.645799999999922e-05, 4.573599999999761e-05, 4.620799999999897e-05, 4.5737000000000555e-05, 4.645799999999922e-05, 4.627800000000029e-05, 4.5652999999999666e-05, 4.63060000000029e-05, 4.647199999999879e-05, 4.5652999999999666e-05, 4.624999999999768e-05, 4.66529999999972e-05, 4.659699999999892e-05, 4.6444999999999126e-05, 4.5916999999999486e-05, 4.6208999999998446e-05, 4.636099999999824e-05, 4.661099999999849e-05, 4.65000000000014e-05, 4.661200000000143e-05, 4.6375000000001276e-05, 4.654200000000011e-05, 4.65130000000015e-05, 4.6459000000002165e-05, 4.6180999999999306e-05, 4.648599999999836e-05, 4.648599999999836e-05, 4.652700000000107e-05, 4.644399999999965e-05, 4.563800000000062e-05]</msg>
<status status="PASS" starttime="20201029 18:16:06.978" endtime="20201029 18:16:06.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.973" endtime="20201029 18:16:06.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:06.985" endtime="20201029 18:16:07.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.983" endtime="20201029 18:16:07.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.982" endtime="20201029 18:16:07.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.623" endtime="20201029 18:16:07.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.622" endtime="20201029 18:16:07.006"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.015" endtime="20201029 18:16:07.031"></status>
</kw>
<msg timestamp="20201029 18:16:07.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.013" endtime="20201029 18:16:07.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.032" endtime="20201029 18:16:07.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.035" endtime="20201029 18:16:07.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.010" endtime="20201029 18:16:07.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.008" endtime="20201029 18:16:07.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.044" endtime="20201029 18:16:07.332"></status>
</kw>
<msg timestamp="20201029 18:16:07.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.043" endtime="20201029 18:16:07.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.336" endtime="20201029 18:16:07.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.344" endtime="20201029 18:16:07.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.040" endtime="20201029 18:16:07.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.038" endtime="20201029 18:16:07.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:07.351" level="INFO">${RESULT} = [{'diff': 4.765200000000219e-05}, {'diff': 4.755500000000121e-05}, {'diff': 4.73330000000001e-05}, {'diff': 4.747199999999979e-05}, {'diff': 4.755500000000121e-05}, {'diff': 4.729100000000139e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:07.348" endtime="20201029 18:16:07.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:07.355" level="INFO">${ACCURACY} = {'diff': [4.765200000000219e-05, 4.755500000000121e-05, 4.73330000000001e-05, 4.747199999999979e-05, 4.755500000000121e-05, 4.729100000000139e-05, 4.673599999999861e-05, 4.7403000000001416e-05, 4.7528...</msg>
<status status="PASS" starttime="20201029 18:16:07.352" endtime="20201029 18:16:07.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.360" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:16:07.359" endtime="20201029 18:16:07.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.363" level="INFO">VALUE: [4.765200000000219e-05, 4.755500000000121e-05, 4.73330000000001e-05, 4.747199999999979e-05, 4.755500000000121e-05, 4.729100000000139e-05, 4.673599999999861e-05, 4.7403000000001416e-05, 4.752800000000154e-05, 4.75139999999985e-05, 4.749999999999893e-05, 4.756900000000078e-05, 4.675000000000165e-05, 4.743000000000108e-05, 4.755600000000068e-05, 4.75000000000024e-05, 4.754200000000111e-05, 4.752800000000154e-05, 4.6653000000000666e-05, 4.736099999999924e-05, 4.6667000000000236e-05, 4.6667000000000236e-05, 4.6708999999998946e-05, 4.724999999999868e-05, 4.748599999999936e-05, 4.7639000000002096e-05, 4.6653000000000666e-05, 4.729200000000086e-05, 4.7389000000001846e-05, 4.7180999999996837e-05, 4.755600000000068e-05, 4.734800000000261e-05, 4.6708999999998946e-05, 4.761099999999949e-05, 4.673599999999861e-05, 4.731900000000053e-05, 4.672199999999904e-05, 4.71940000000004e-05, 4.740200000000194e-05, 4.759699999999992e-05, 4.727700000000182e-05, 4.7625000000002526e-05, 4.66529999999972e-05, 4.747199999999979e-05, 4.670799999999947e-05, 4.752800000000154e-05, 4.738899999999838e-05, 4.73330000000001e-05, 4.729200000000086e-05, 4.747199999999979e-05]</msg>
<status status="PASS" starttime="20201029 18:16:07.361" endtime="20201029 18:16:07.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.356" endtime="20201029 18:16:07.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:07.368" endtime="20201029 18:16:07.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.366" endtime="20201029 18:16:07.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.365" endtime="20201029 18:16:07.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.007" endtime="20201029 18:16:07.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.006" endtime="20201029 18:16:07.389"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.398" endtime="20201029 18:16:07.418"></status>
</kw>
<msg timestamp="20201029 18:16:07.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.396" endtime="20201029 18:16:07.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.419" endtime="20201029 18:16:07.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.422" endtime="20201029 18:16:07.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.393" endtime="20201029 18:16:07.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.391" endtime="20201029 18:16:07.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.431" endtime="20201029 18:16:07.718"></status>
</kw>
<msg timestamp="20201029 18:16:07.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025860681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025908472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.430" endtime="20201029 18:16:07.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025860681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025908472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.722" endtime="20201029 18:16:07.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.731" endtime="20201029 18:16:07.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.427" endtime="20201029 18:16:07.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.425" endtime="20201029 18:16:07.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:07.738" level="INFO">${RESULT} = [{'diff': 4.779099999999842e-05}, {'diff': 4.86529999999992e-05}, {'diff': 4.826399999999925e-05}, {'diff': 4.840299999999895e-05}, {'diff': 4.85139999999995e-05}, {'diff': 4.862500000000006e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:07.735" endtime="20201029 18:16:07.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:07.743" level="INFO">${ACCURACY} = {'diff': [4.779099999999842e-05, 4.86529999999992e-05, 4.826399999999925e-05, 4.840299999999895e-05, 4.85139999999995e-05, 4.862500000000006e-05, 4.8459000000000696e-05, 4.866599999999929e-05, 4.83610...</msg>
<status status="PASS" starttime="20201029 18:16:07.739" endtime="20201029 18:16:07.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.747" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:16:07.746" endtime="20201029 18:16:07.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.750" level="INFO">VALUE: [4.779099999999842e-05, 4.86529999999992e-05, 4.826399999999925e-05, 4.840299999999895e-05, 4.85139999999995e-05, 4.862500000000006e-05, 4.8459000000000696e-05, 4.866599999999929e-05, 4.836100000000024e-05, 4.857000000000125e-05, 4.820800000000097e-05, 4.820800000000097e-05, 4.8389000000002846e-05, 4.7736999999999086e-05, 4.7708999999999946e-05, 4.859700000000092e-05, 4.8459000000000696e-05, 4.8320000000001e-05, 4.843099999999809e-05, 4.7653000000001666e-05, 4.855499999999874e-05, 4.824999999999968e-05, 4.811199999999946e-05, 4.81940000000014e-05, 4.770800000000047e-05, 4.859700000000092e-05, 4.830499999999849e-05, 4.825000000000315e-05, 4.85269999999996e-05, 4.838899999999938e-05, 4.822199999999707e-05, 4.774999999999918e-05, 4.7625000000002526e-05, 4.847200000000079e-05, 4.773599999999961e-05, 4.852799999999907e-05, 4.8320000000001e-05, 4.822200000000054e-05, 4.76529999999982e-05, 4.854099999999917e-05, 4.770800000000047e-05, 4.831900000000153e-05, 4.770800000000047e-05, 4.859700000000092e-05, 4.8445000000001126e-05, 4.83469999999972e-05, 4.8223000000000016e-05, 4.858400000000082e-05, 4.858399999999735e-05, 4.834800000000014e-05]</msg>
<status status="PASS" starttime="20201029 18:16:07.749" endtime="20201029 18:16:07.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.744" endtime="20201029 18:16:07.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:07.761" endtime="20201029 18:16:07.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.759" endtime="20201029 18:16:07.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.758" endtime="20201029 18:16:07.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.390" endtime="20201029 18:16:07.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.389" endtime="20201029 18:16:07.782"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.791" endtime="20201029 18:16:07.807"></status>
</kw>
<msg timestamp="20201029 18:16:07.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.789" endtime="20201029 18:16:07.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.809" endtime="20201029 18:16:07.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.811" endtime="20201029 18:16:07.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.786" endtime="20201029 18:16:07.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.784" endtime="20201029 18:16:07.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.821" endtime="20201029 18:16:08.107"></status>
</kw>
<msg timestamp="20201029 18:16:08.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022422917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.819" endtime="20201029 18:16:08.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022422917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.111" endtime="20201029 18:16:08.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.119" endtime="20201029 18:16:08.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.816" endtime="20201029 18:16:08.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.815" endtime="20201029 18:16:08.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.126" level="INFO">${RESULT} = [{'diff': 4.963900000000063e-05}, {'diff': 4.9320000000002e-05}, {'diff': 4.9223000000001016e-05}, {'diff': 4.937500000000081e-05}, {'diff': 4.930599999999896e-05}, {'diff': 4.936200000000071e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:08.123" endtime="20201029 18:16:08.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:08.131" level="INFO">${ACCURACY} = {'diff': [4.963900000000063e-05, 4.9320000000002e-05, 4.9223000000001016e-05, 4.937500000000081e-05, 4.930599999999896e-05, 4.936200000000071e-05, 4.869499999999791e-05, 4.959700000000192e-05, 4.86389...</msg>
<status status="PASS" starttime="20201029 18:16:08.127" endtime="20201029 18:16:08.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.136" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:16:08.135" endtime="20201029 18:16:08.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.139" level="INFO">VALUE: [4.963900000000063e-05, 4.9320000000002e-05, 4.9223000000001016e-05, 4.937500000000081e-05, 4.930599999999896e-05, 4.936200000000071e-05, 4.869499999999791e-05, 4.959700000000192e-05, 4.863899999999963e-05, 4.942999999999961e-05, 4.873600000000061e-05, 4.937500000000081e-05, 4.874999999999671e-05, 4.961099999999802e-05, 4.961099999999802e-05, 4.875000000000018e-05, 4.944399999999918e-05, 4.8707999999998e-05, 4.922199999999807e-05, 4.93469999999982e-05, 4.944399999999918e-05, 4.959699999999845e-05, 4.961099999999802e-05, 4.961100000000149e-05, 4.948600000000136e-05, 4.95140000000005e-05, 4.933299999999863e-05, 4.9445000000002126e-05, 4.923600000000111e-05, 4.934700000000167e-05, 4.923600000000111e-05, 4.872199999999757e-05, 4.929199999999939e-05, 4.922200000000154e-05, 4.930599999999896e-05, 4.926400000000025e-05, 4.940299999999995e-05, 4.8667000000002236e-05, 4.9445000000002126e-05, 4.945800000000222e-05, 4.9431000000002556e-05, 4.875000000000018e-05, 4.919399999999893e-05, 4.944399999999918e-05, 4.919399999999893e-05, 4.940200000000047e-05, 4.923600000000111e-05, 4.870800000000147e-05, 4.892999999999911e-05, 4.929199999999939e-05]</msg>
<status status="PASS" starttime="20201029 18:16:08.137" endtime="20201029 18:16:08.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.132" endtime="20201029 18:16:08.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.144" endtime="20201029 18:16:08.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.142" endtime="20201029 18:16:08.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.141" endtime="20201029 18:16:08.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.783" endtime="20201029 18:16:08.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.782" endtime="20201029 18:16:08.164"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.174" endtime="20201029 18:16:08.191"></status>
</kw>
<msg timestamp="20201029 18:16:08.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.172" endtime="20201029 18:16:08.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.193" endtime="20201029 18:16:08.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.195" endtime="20201029 18:16:08.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.169" endtime="20201029 18:16:08.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.167" endtime="20201029 18:16:08.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.205" endtime="20201029 18:16:08.492"></status>
</kw>
<msg timestamp="20201029 18:16:08.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022556903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.203" endtime="20201029 18:16:08.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022556903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.496" endtime="20201029 18:16:08.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.505" endtime="20201029 18:16:08.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.200" endtime="20201029 18:16:08.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.199" endtime="20201029 18:16:08.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.512" level="INFO">${RESULT} = [{'diff': 4.993000000000011e-05}, {'diff': 4.966600000000029e-05}, {'diff': 5.058299999999988e-05}, {'diff': 4.972199999999857e-05}, {'diff': 5.05140000000015e-05}, {'diff': 5.061099999999902e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:08.509" endtime="20201029 18:16:08.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:08.516" level="INFO">${ACCURACY} = {'diff': [4.993000000000011e-05, 4.966600000000029e-05, 5.058299999999988e-05, 4.972199999999857e-05, 5.05140000000015e-05, 5.061099999999902e-05, 4.96940000000029e-05, 5.036099999999877e-05, 5.018000...</msg>
<status status="PASS" starttime="20201029 18:16:08.513" endtime="20201029 18:16:08.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.521" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:16:08.520" endtime="20201029 18:16:08.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.523" level="INFO">VALUE: [4.993000000000011e-05, 4.966600000000029e-05, 5.058299999999988e-05, 4.972199999999857e-05, 5.05140000000015e-05, 5.061099999999902e-05, 4.96940000000029e-05, 5.036099999999877e-05, 5.018000000000036e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.056900000000031e-05, 4.966699999999977e-05, 5.049999999999846e-05, 5.055600000000021e-05, 4.966699999999977e-05, 5.037500000000181e-05, 5.029200000000039e-05, 4.9723000000001516e-05, 5.049999999999846e-05, 5.019499999999941e-05, 5.038900000000138e-05, 5.018099999999984e-05, 4.966699999999977e-05, 4.975000000000118e-05, 5.048599999999889e-05, 5.045799999999975e-05, 5.0638000000002154e-05, 4.966600000000029e-05, 5.033299999999963e-05, 5.022199999999907e-05, 5.022199999999907e-05, 5.059699999999945e-05, 4.966600000000029e-05, 4.991600000000054e-05, 5.055600000000021e-05, 5.031900000000006e-05, 5.052800000000107e-05, 5.043000000000061e-05, 5.044400000000018e-05, 4.972200000000204e-05, 5.020800000000297e-05, 5.054200000000064e-05, 5.050000000000193e-05, 5.045799999999975e-05, 4.977700000000085e-05, 5.041600000000104e-05, 5.026399999999778e-05, 5.037499999999834e-05, 5.041700000000052e-05]</msg>
<status status="PASS" starttime="20201029 18:16:08.522" endtime="20201029 18:16:08.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.517" endtime="20201029 18:16:08.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.529" endtime="20201029 18:16:08.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.527" endtime="20201029 18:16:08.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.526" endtime="20201029 18:16:08.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.165" endtime="20201029 18:16:08.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.165" endtime="20201029 18:16:08.551"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.564" endtime="20201029 18:16:08.582"></status>
</kw>
<msg timestamp="20201029 18:16:08.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.561" endtime="20201029 18:16:08.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.583" endtime="20201029 18:16:08.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.586" endtime="20201029 18:16:08.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.558" endtime="20201029 18:16:08.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.555" endtime="20201029 18:16:08.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.598" endtime="20201029 18:16:08.887"></status>
</kw>
<msg timestamp="20201029 18:16:08.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029014944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029066625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.597" endtime="20201029 18:16:08.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029014944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029066625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.896" endtime="20201029 18:16:08.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.914" endtime="20201029 18:16:08.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.594" endtime="20201029 18:16:08.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.592" endtime="20201029 18:16:08.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.929" level="INFO">${RESULT} = [{'diff': 5.168099999999787e-05}, {'diff': 5.127799999999835e-05}, {'diff': 5.148599999999989e-05}, {'diff': 5.157000000000078e-05}, {'diff': 5.156900000000131e-05}, {'diff': 5.068100000000034e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:08.922" endtime="20201029 18:16:08.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:08.938" level="INFO">${ACCURACY} = {'diff': [5.168099999999787e-05, 5.127799999999835e-05, 5.148599999999989e-05, 5.157000000000078e-05, 5.156900000000131e-05, 5.068100000000034e-05, 5.123599999999964e-05, 5.12080000000005e-05, 5.06949...</msg>
<status status="PASS" starttime="20201029 18:16:08.931" endtime="20201029 18:16:08.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.947" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:16:08.945" endtime="20201029 18:16:08.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.952" level="INFO">VALUE: [5.168099999999787e-05, 5.127799999999835e-05, 5.148599999999989e-05, 5.157000000000078e-05, 5.156900000000131e-05, 5.068100000000034e-05, 5.123599999999964e-05, 5.12080000000005e-05, 5.069499999999991e-05, 5.0708e-05, 5.118100000000084e-05, 5.149999999999946e-05, 5.162499999999959e-05, 5.1651999999999254e-05, 5.15140000000025e-05, 5.138899999999891e-05, 5.074999999999871e-05, 5.124999999999921e-05, 5.154100000000217e-05, 5.1236999999999117e-05, 5.156900000000131e-05, 5.130499999999802e-05, 5.072199999999957e-05, 5.122200000000007e-05, 5.131900000000106e-05, 5.1165999999998324e-05, 5.163900000000263e-05, 5.124999999999921e-05, 5.163900000000263e-05, 5.151399999999903e-05, 5.116600000000179e-05, 5.145800000000075e-05, 5.152800000000207e-05, 5.163900000000263e-05, 5.151399999999903e-05, 5.154200000000164e-05, 5.155600000000121e-05, 5.155600000000121e-05, 5.131999999999706e-05, 5.138899999999891e-05, 5.118099999999737e-05, 5.1221999999996604e-05, 5.1209000000003446e-05, 5.072200000000304e-05, 5.13470000000002e-05, 5.155600000000121e-05, 5.1209000000003446e-05, 5.076400000000175e-05, 5.062499999999859e-05, 5.129200000000139e-05]</msg>
<status status="PASS" starttime="20201029 18:16:08.949" endtime="20201029 18:16:08.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.940" endtime="20201029 18:16:08.956"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.964" endtime="20201029 18:16:08.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.961" endtime="20201029 18:16:08.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.959" endtime="20201029 18:16:08.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.553" endtime="20201029 18:16:08.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.552" endtime="20201029 18:16:08.986"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.995" endtime="20201029 18:16:09.012"></status>
</kw>
<msg timestamp="20201029 18:16:09.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.993" endtime="20201029 18:16:09.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.013" endtime="20201029 18:16:09.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.016" endtime="20201029 18:16:09.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.991" endtime="20201029 18:16:09.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.989" endtime="20201029 18:16:09.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.024" endtime="20201029 18:16:09.310"></status>
</kw>
<msg timestamp="20201029 18:16:09.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022784028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.023" endtime="20201029 18:16:09.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022784028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.314" endtime="20201029 18:16:09.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.323" endtime="20201029 18:16:09.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.020" endtime="20201029 18:16:09.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.019" endtime="20201029 18:16:09.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:09.330" level="INFO">${RESULT} = [{'diff': 5.2179999999998894e-05}, {'diff': 5.222200000000107e-05}, {'diff': 5.2221999999997604e-05}, {'diff': 5.1708000000001e-05}, {'diff': 5.25409999999997e-05}, {'diff': 5.2457999999998284e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:09.327" endtime="20201029 18:16:09.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:09.335" level="INFO">${ACCURACY} = {'diff': [5.2179999999998894e-05, 5.222200000000107e-05, 5.2221999999997604e-05, 5.1708000000001e-05, 5.25409999999997e-05, 5.2457999999998284e-05, 5.1708000000001e-05, 5.168000000000186e-05, 5.234699...</msg>
<status status="PASS" starttime="20201029 18:16:09.331" endtime="20201029 18:16:09.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.339" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:16:09.338" endtime="20201029 18:16:09.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.342" level="INFO">VALUE: [5.2179999999998894e-05, 5.222200000000107e-05, 5.2221999999997604e-05, 5.1708000000001e-05, 5.25409999999997e-05, 5.2457999999998284e-05, 5.1708000000001e-05, 5.168000000000186e-05, 5.234699999999773e-05, 5.168000000000186e-05, 5.223600000000064e-05, 5.261100000000102e-05, 5.169400000000143e-05, 5.23470000000012e-05, 5.222200000000107e-05, 5.259700000000145e-05, 5.256999999999831e-05, 5.243099999999862e-05, 5.255600000000221e-05, 5.165299999999873e-05, 5.220900000000098e-05, 5.243099999999862e-05, 5.168100000000134e-05, 5.25409999999997e-05, 5.237500000000034e-05, 5.222299999999708e-05, 5.229200000000239e-05, 5.237500000000034e-05, 5.1637999999999684e-05, 5.240299999999948e-05, 5.248600000000089e-05, 5.1665999999998824e-05, 5.223600000000064e-05, 5.2471999999997854e-05, 5.259700000000145e-05, 5.247200000000132e-05, 5.240299999999948e-05, 5.229099999999945e-05, 5.243099999999862e-05, 5.233300000000163e-05, 5.231900000000206e-05, 5.227799999999935e-05, 5.250000000000046e-05, 5.168100000000134e-05, 5.225000000000021e-05, 5.230600000000196e-05, 5.254199999999917e-05, 5.190299999999898e-05, 5.225000000000021e-05, 5.23340000000011e-05]</msg>
<status status="PASS" starttime="20201029 18:16:09.340" endtime="20201029 18:16:09.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.336" endtime="20201029 18:16:09.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:09.347" endtime="20201029 18:16:09.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.345" endtime="20201029 18:16:09.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.344" endtime="20201029 18:16:09.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.987" endtime="20201029 18:16:09.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.987" endtime="20201029 18:16:09.367"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.376" endtime="20201029 18:16:09.393"></status>
</kw>
<msg timestamp="20201029 18:16:09.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.374" endtime="20201029 18:16:09.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.394" endtime="20201029 18:16:09.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.397" endtime="20201029 18:16:09.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.372" endtime="20201029 18:16:09.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.370" endtime="20201029 18:16:09.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.406" endtime="20201029 18:16:09.693"></status>
</kw>
<msg timestamp="20201029 18:16:09.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022032333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.404" endtime="20201029 18:16:09.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022032333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.697" endtime="20201029 18:16:09.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.705" endtime="20201029 18:16:09.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.402" endtime="20201029 18:16:09.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.400" endtime="20201029 18:16:09.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:09.712" level="INFO">${RESULT} = [{'diff': 5.370899999999901e-05}, {'diff': 5.3471999999998854e-05}, {'diff': 5.3457999999999284e-05}, {'diff': 5.323700000000112e-05}, {'diff': 5.2721999999998104e-05}, {'diff': 5.337499999999787e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:09.709" endtime="20201029 18:16:09.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:09.716" level="INFO">${ACCURACY} = {'diff': [5.370899999999901e-05, 5.3471999999998854e-05, 5.3457999999999284e-05, 5.323700000000112e-05, 5.2721999999998104e-05, 5.337499999999787e-05, 5.3249999999997744e-05, 5.3499999999997994e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:16:09.713" endtime="20201029 18:16:09.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.722" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:16:09.721" endtime="20201029 18:16:09.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.724" level="INFO">VALUE: [5.370899999999901e-05, 5.3471999999998854e-05, 5.3457999999999284e-05, 5.323700000000112e-05, 5.2721999999998104e-05, 5.337499999999787e-05, 5.3249999999997744e-05, 5.3499999999997994e-05, 5.343099999999962e-05, 5.338900000000091e-05, 5.3388000000001434e-05, 5.277700000000038e-05, 5.3179999999999894e-05, 5.362500000000159e-05, 5.348700000000137e-05, 5.318100000000284e-05, 5.3415999999997105e-05, 5.3416000000000574e-05, 5.2637999999997215e-05, 5.3179999999999894e-05, 5.3402000000001004e-05, 5.33609999999983e-05, 5.263900000000016e-05, 5.3443999999999714e-05, 5.361099999999855e-05, 5.330500000000002e-05, 5.329199999999992e-05, 5.327800000000035e-05, 5.269499999999844e-05, 5.26669999999993e-05, 5.358299999999941e-05, 5.356999999999931e-05, 5.333399999999863e-05, 5.343099999999962e-05, 5.291699999999955e-05, 5.275000000000071e-05, 5.280499999999952e-05, 5.272300000000105e-05, 5.3666000000000824e-05, 5.323699999999765e-05, 5.356999999999931e-05, 5.327800000000035e-05, 5.326400000000078e-05, 5.31669999999998e-05, 5.327700000000088e-05, 5.35280000000006e-05, 5.326299999999784e-05, 5.352699999999766e-05, 5.325000000000121e-05, 5.340300000000048e-05]</msg>
<status status="PASS" starttime="20201029 18:16:09.723" endtime="20201029 18:16:09.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.718" endtime="20201029 18:16:09.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:09.729" endtime="20201029 18:16:09.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.728" endtime="20201029 18:16:09.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.726" endtime="20201029 18:16:09.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.368" endtime="20201029 18:16:09.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.368" endtime="20201029 18:16:09.750"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.759" endtime="20201029 18:16:09.777"></status>
</kw>
<msg timestamp="20201029 18:16:09.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.758" endtime="20201029 18:16:09.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.779" endtime="20201029 18:16:09.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.781" endtime="20201029 18:16:09.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.755" endtime="20201029 18:16:09.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.752" endtime="20201029 18:16:09.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.790" endtime="20201029 18:16:10.076"></status>
</kw>
<msg timestamp="20201029 18:16:10.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024020861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024075333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.789" endtime="20201029 18:16:10.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024020861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024075333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.080" endtime="20201029 18:16:10.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.089" endtime="20201029 18:16:10.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.786" endtime="20201029 18:16:10.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.785" endtime="20201029 18:16:10.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:10.095" level="INFO">${RESULT} = [{'diff': 5.4471999999999854e-05}, {'diff': 5.369499999999944e-05}, {'diff': 5.433399999999963e-05}, {'diff': 5.444500000000019e-05}, {'diff': 5.370899999999901e-05}, {'diff': 5.365299999999726e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:10.092" endtime="20201029 18:16:10.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.099" level="INFO">${ACCURACY} = {'diff': [5.4471999999999854e-05, 5.369499999999944e-05, 5.433399999999963e-05, 5.444500000000019e-05, 5.370899999999901e-05, 5.365299999999726e-05, 5.36670000000003e-05, 5.459699999999998e-05, 5.3667...</msg>
<status status="PASS" starttime="20201029 18:16:10.096" endtime="20201029 18:16:10.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.104" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:16:10.103" endtime="20201029 18:16:10.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.106" level="INFO">VALUE: [5.4471999999999854e-05, 5.369499999999944e-05, 5.433399999999963e-05, 5.444500000000019e-05, 5.370899999999901e-05, 5.365299999999726e-05, 5.36670000000003e-05, 5.459699999999998e-05, 5.36670000000003e-05, 5.4443999999997245e-05, 5.4499999999998994e-05, 5.3638000000001684e-05, 5.4513999999998564e-05, 5.3693999999999964e-05, 5.4471999999999854e-05, 5.4221999999999604e-05, 5.461099999999955e-05, 5.456900000000084e-05, 5.462499999999912e-05, 5.391700000000055e-05, 5.434699999999973e-05, 5.375000000000171e-05, 5.372200000000257e-05, 5.456900000000084e-05, 5.375000000000171e-05, 5.41670000000008e-05, 5.376400000000128e-05, 5.433399999999963e-05, 5.423600000000264e-05, 5.365300000000073e-05, 5.43609999999993e-05, 5.440300000000148e-05, 5.3638000000001684e-05, 5.438899999999844e-05, 5.370899999999901e-05, 5.36670000000003e-05, 5.440300000000148e-05, 5.461099999999955e-05, 5.368099999999987e-05, 5.455500000000127e-05, 5.4235999999999174e-05, 5.3651999999997785e-05, 5.4416000000001574e-05, 5.45410000000017e-05, 5.440299999999801e-05, 5.436100000000277e-05, 5.4485999999999424e-05, 5.456900000000084e-05, 5.437499999999887e-05, 5.4458000000000284e-05]</msg>
<status status="PASS" starttime="20201029 18:16:10.105" endtime="20201029 18:16:10.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.100" endtime="20201029 18:16:10.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:10.112" endtime="20201029 18:16:10.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.111" endtime="20201029 18:16:10.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.109" endtime="20201029 18:16:10.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.751" endtime="20201029 18:16:10.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.750" endtime="20201029 18:16:10.133"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.141" endtime="20201029 18:16:10.159"></status>
</kw>
<msg timestamp="20201029 18:16:10.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.140" endtime="20201029 18:16:10.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.160" endtime="20201029 18:16:10.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.162" endtime="20201029 18:16:10.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.137" endtime="20201029 18:16:10.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.135" endtime="20201029 18:16:10.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.171" endtime="20201029 18:16:10.456"></status>
</kw>
<msg timestamp="20201029 18:16:10.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022049208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.170" endtime="20201029 18:16:10.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022049208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.460" endtime="20201029 18:16:10.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.468" endtime="20201029 18:16:10.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.167" endtime="20201029 18:16:10.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.166" endtime="20201029 18:16:10.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:10.475" level="INFO">${RESULT} = [{'diff': 5.53610000000003e-05}, {'diff': 5.531899999999812e-05}, {'diff': 5.53610000000003e-05}, {'diff': 5.4651999999998785e-05}, {'diff': 5.540299999999901e-05}, {'diff': 5.526400000000278e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:10.472" endtime="20201029 18:16:10.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.480" level="INFO">${ACCURACY} = {'diff': [5.53610000000003e-05, 5.531899999999812e-05, 5.53610000000003e-05, 5.4651999999998785e-05, 5.540299999999901e-05, 5.526400000000278e-05, 5.465299999999826e-05, 5.558300000000141e-05, 5.54580...</msg>
<status status="PASS" starttime="20201029 18:16:10.476" endtime="20201029 18:16:10.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.484" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:16:10.483" endtime="20201029 18:16:10.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.487" level="INFO">VALUE: [5.53610000000003e-05, 5.531899999999812e-05, 5.53610000000003e-05, 5.4651999999998785e-05, 5.540299999999901e-05, 5.526400000000278e-05, 5.465299999999826e-05, 5.558300000000141e-05, 5.5458000000001284e-05, 5.533299999999769e-05, 5.526400000000278e-05, 5.5236000000000174e-05, 5.5291999999998453e-05, 5.561099999999708e-05, 5.5527999999999134e-05, 5.5305999999998023e-05, 5.527800000000235e-05, 5.541700000000205e-05, 5.476400000000228e-05, 5.541699999999858e-05, 5.5236000000000174e-05, 5.4708000000000534e-05, 5.4957999999997315e-05, 5.545899999999729e-05, 5.5263999999999314e-05, 5.530600000000149e-05, 5.562500000000012e-05, 5.477699999999891e-05, 5.5415999999999105e-05, 5.530500000000202e-05, 5.5222000000000604e-05, 5.4735999999999674e-05, 5.537499999999987e-05, 5.558299999999794e-05, 5.5472000000000854e-05, 5.538899999999944e-05, 5.5263999999999314e-05, 5.5236000000000174e-05, 5.534700000000073e-05, 5.476400000000228e-05, 5.55280000000026e-05, 5.46809999999974e-05, 5.5305999999998023e-05, 5.5513999999999564e-05, 5.465300000000173e-05, 5.5472000000000854e-05, 5.5499999999999994e-05, 5.5249999999999744e-05, 5.544500000000119e-05, 5.4694000000000964e-05]</msg>
<status status="PASS" starttime="20201029 18:16:10.485" endtime="20201029 18:16:10.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.481" endtime="20201029 18:16:10.488"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:10.492" endtime="20201029 18:16:10.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.490" endtime="20201029 18:16:10.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.489" endtime="20201029 18:16:10.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.134" endtime="20201029 18:16:10.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.133" endtime="20201029 18:16:10.512"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.522" endtime="20201029 18:16:10.539"></status>
</kw>
<msg timestamp="20201029 18:16:10.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.520" endtime="20201029 18:16:10.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.540" endtime="20201029 18:16:10.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.542" endtime="20201029 18:16:10.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.517" endtime="20201029 18:16:10.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.515" endtime="20201029 18:16:10.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.551" endtime="20201029 18:16:10.838"></status>
</kw>
<msg timestamp="20201029 18:16:10.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023123139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023179819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.550" endtime="20201029 18:16:10.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023123139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023179819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.843" endtime="20201029 18:16:10.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.851" endtime="20201029 18:16:10.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.547" endtime="20201029 18:16:10.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.546" endtime="20201029 18:16:10.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:10.857" level="INFO">${RESULT} = [{'diff': 5.6679999999999925e-05}, {'diff': 5.6486000000001424e-05}, {'diff': 5.65549999999998e-05}, {'diff': 5.6264000000000314e-05}, {'diff': 5.6236000000001174e-05}, {'diff': 5.5750000000000244e-05...</msg>
<status status="PASS" starttime="20201029 18:16:10.854" endtime="20201029 18:16:10.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.862" level="INFO">${ACCURACY} = {'diff': [5.6679999999999925e-05, 5.6486000000001424e-05, 5.65549999999998e-05, 5.6264000000000314e-05, 5.6236000000001174e-05, 5.5750000000000244e-05, 5.659699999999851e-05, 5.633299999999869e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:16:10.858" endtime="20201029 18:16:10.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.866" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 18:16:10.865" endtime="20201029 18:16:10.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.868" level="INFO">VALUE: [5.6679999999999925e-05, 5.6486000000001424e-05, 5.65549999999998e-05, 5.6264000000000314e-05, 5.6236000000001174e-05, 5.5750000000000244e-05, 5.659699999999851e-05, 5.633299999999869e-05, 5.631899999999912e-05, 5.629099999999998e-05, 5.636099999999783e-05, 5.634699999999826e-05, 5.656899999999937e-05, 5.63480000000012e-05, 5.6236000000001174e-05, 5.658300000000241e-05, 5.6555999999999274e-05, 5.661100000000155e-05, 5.637500000000087e-05, 5.6541999999999704e-05, 5.6652000000000785e-05, 5.637500000000087e-05, 5.644500000000219e-05, 5.6528000000000134e-05, 5.6471999999998385e-05, 5.643099999999915e-05, 5.563899999999969e-05, 5.65549999999998e-05, 5.634699999999826e-05, 5.5693999999998495e-05, 5.563899999999969e-05, 5.6486000000001424e-05, 5.627700000000041e-05, 5.5707999999998065e-05, 5.630499999999955e-05, 5.5707999999998065e-05, 5.61670000000028e-05, 5.661100000000155e-05, 5.61670000000028e-05, 5.6277999999999884e-05, 5.654100000000023e-05, 5.662500000000112e-05, 5.615299999999976e-05, 5.632000000000206e-05, 5.619500000000194e-05, 5.582000000000156e-05, 5.6235999999997704e-05, 5.6264000000000314e-05, 5.6485999999997955e-05, 5.572300000000058e-05]</msg>
<status status="PASS" starttime="20201029 18:16:10.867" endtime="20201029 18:16:10.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.862" endtime="20201029 18:16:10.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:10.873" endtime="20201029 18:16:10.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.872" endtime="20201029 18:16:10.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.871" endtime="20201029 18:16:10.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.513" endtime="20201029 18:16:10.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.513" endtime="20201029 18:16:10.894"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.903" endtime="20201029 18:16:10.923"></status>
</kw>
<msg timestamp="20201029 18:16:10.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.901" endtime="20201029 18:16:10.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.924" endtime="20201029 18:16:10.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.927" endtime="20201029 18:16:10.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.899" endtime="20201029 18:16:10.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.896" endtime="20201029 18:16:10.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.936" endtime="20201029 18:16:11.220"></status>
</kw>
<msg timestamp="20201029 18:16:11.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024847125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024904542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.934" endtime="20201029 18:16:11.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024847125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024904542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.224" endtime="20201029 18:16:11.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.233" endtime="20201029 18:16:11.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.932" endtime="20201029 18:16:11.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.930" endtime="20201029 18:16:11.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:11.239" level="INFO">${RESULT} = [{'diff': 5.741700000000058e-05}, {'diff': 5.740300000000101e-05}, {'diff': 5.747299999999886e-05}, {'diff': 5.7264000000001314e-05}, {'diff': 5.7527999999997664e-05}, {'diff': 5.690299999999704e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:11.236" endtime="20201029 18:16:11.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:11.243" level="INFO">${ACCURACY} = {'diff': [5.741700000000058e-05, 5.740300000000101e-05, 5.747299999999886e-05, 5.7264000000001314e-05, 5.7527999999997664e-05, 5.690299999999704e-05, 5.670899999999854e-05, 5.731900000000012e-05, 5.73...</msg>
<status status="PASS" starttime="20201029 18:16:11.240" endtime="20201029 18:16:11.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.248" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 18:16:11.247" endtime="20201029 18:16:11.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.250" level="INFO">VALUE: [5.741700000000058e-05, 5.740300000000101e-05, 5.747299999999886e-05, 5.7264000000001314e-05, 5.7527999999997664e-05, 5.690299999999704e-05, 5.670899999999854e-05, 5.731900000000012e-05, 5.73610000000023e-05, 5.729100000000098e-05, 5.734699999999926e-05, 5.751299999999862e-05, 5.6679999999999925e-05, 5.6930000000000175e-05, 5.7471999999999385e-05, 5.737500000000187e-05, 5.6722000000002104e-05, 5.7457999999999815e-05, 5.7499999999998525e-05, 5.7542000000000704e-05, 5.7292000000000454e-05, 5.761099999999908e-05, 5.743100000000015e-05, 5.7333999999999163e-05, 5.669499999999897e-05, 5.741700000000058e-05, 5.759699999999951e-05, 5.7569999999999844e-05, 5.7278000000000884e-05, 5.718100000000337e-05, 5.741699999999711e-05, 5.665300000000026e-05, 5.745899999999929e-05, 5.729100000000098e-05, 5.759699999999951e-05, 5.7444000000000245e-05, 5.761199999999855e-05, 5.731900000000012e-05, 5.6722000000002104e-05, 5.736099999999883e-05, 5.730500000000055e-05, 5.7193999999999995e-05, 5.6666000000000355e-05, 5.734699999999926e-05, 5.7458000000003284e-05, 5.756900000000037e-05, 5.7430000000000675e-05, 5.7250000000001744e-05, 5.669499999999897e-05, 5.733299999999969e-05]</msg>
<status status="PASS" starttime="20201029 18:16:11.249" endtime="20201029 18:16:11.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.244" endtime="20201029 18:16:11.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:11.256" endtime="20201029 18:16:11.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.254" endtime="20201029 18:16:11.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.253" endtime="20201029 18:16:11.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.895" endtime="20201029 18:16:11.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.894" endtime="20201029 18:16:11.276"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.285" endtime="20201029 18:16:11.301"></status>
</kw>
<msg timestamp="20201029 18:16:11.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.283" endtime="20201029 18:16:11.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.303" endtime="20201029 18:16:11.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.305" endtime="20201029 18:16:11.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.281" endtime="20201029 18:16:11.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.279" endtime="20201029 18:16:11.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.314" endtime="20201029 18:16:11.600"></status>
</kw>
<msg timestamp="20201029 18:16:11.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02192575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021984014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:11.313" endtime="20201029 18:16:11.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02192575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021984014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:11.604" endtime="20201029 18:16:11.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.613" endtime="20201029 18:16:11.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.310" endtime="20201029 18:16:11.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.308" endtime="20201029 18:16:11.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:11.619" level="INFO">${RESULT} = [{'diff': 5.8263999999998844e-05}, {'diff': 5.841700000000158e-05}, {'diff': 5.8584000000000414e-05}, {'diff': 5.843100000000115e-05}, {'diff': 5.863899999999922e-05}, {'diff': 5.8291999999997984e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:11.616" endtime="20201029 18:16:11.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:11.624" level="INFO">${ACCURACY} = {'diff': [5.8263999999998844e-05, 5.841700000000158e-05, 5.8584000000000414e-05, 5.843100000000115e-05, 5.863899999999922e-05, 5.8291999999997984e-05, 5.7679999999997456e-05, 5.83480000000032e-05, 5.8...</msg>
<status status="PASS" starttime="20201029 18:16:11.620" endtime="20201029 18:16:11.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.629" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 18:16:11.628" endtime="20201029 18:16:11.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.631" level="INFO">VALUE: [5.8263999999998844e-05, 5.841700000000158e-05, 5.8584000000000414e-05, 5.843100000000115e-05, 5.863899999999922e-05, 5.8291999999997984e-05, 5.7679999999997456e-05, 5.83480000000032e-05, 5.844500000000072e-05, 5.8416000000002105e-05, 5.8235999999999705e-05, 5.854099999999876e-05, 5.8208000000000565e-05, 5.8499999999999525e-05, 5.8180000000001425e-05, 5.8499999999999525e-05, 5.8472000000000385e-05, 5.8541999999998234e-05, 5.8179999999997956e-05, 5.7665999999997886e-05, 5.8542000000001704e-05, 5.8222000000000135e-05, 5.8472000000000385e-05, 5.83749999999994e-05, 5.8458000000000815e-05, 5.831900000000112e-05, 5.8277999999998414e-05, 5.8472000000000385e-05, 5.766700000000083e-05, 5.863899999999922e-05, 5.861100000000008e-05, 5.8277999999998414e-05, 5.844500000000072e-05, 5.8235999999999705e-05, 5.861100000000008e-05, 5.8637999999999746e-05, 5.840299999999854e-05, 5.8320000000000594e-05, 5.768099999999693e-05, 5.8430000000001675e-05, 5.8443999999997776e-05, 5.7652000000001785e-05, 5.8179999999997956e-05, 5.8430000000001675e-05, 5.8499999999999525e-05, 5.8430000000001675e-05, 5.8277999999998414e-05, 5.833300000000069e-05, 5.8513999999999095e-05, 5.8444000000001245e-05]</msg>
<status status="PASS" starttime="20201029 18:16:11.630" endtime="20201029 18:16:11.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.625" endtime="20201029 18:16:11.632"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:11.636" endtime="20201029 18:16:11.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.634" endtime="20201029 18:16:11.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.633" endtime="20201029 18:16:11.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.277" endtime="20201029 18:16:11.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.277" endtime="20201029 18:16:11.656"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.665" endtime="20201029 18:16:11.682"></status>
</kw>
<msg timestamp="20201029 18:16:11.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.664" endtime="20201029 18:16:11.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.684" endtime="20201029 18:16:11.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.686" endtime="20201029 18:16:11.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.661" endtime="20201029 18:16:11.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.659" endtime="20201029 18:16:11.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.695" endtime="20201029 18:16:11.982"></status>
</kw>
<msg timestamp="20201029 18:16:11.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.694" endtime="20201029 18:16:11.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.986" endtime="20201029 18:16:11.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.995" endtime="20201029 18:16:11.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.691" endtime="20201029 18:16:11.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.690" endtime="20201029 18:16:11.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.001" level="INFO">${RESULT} = [{'diff': 5.934700000000126e-05}, {'diff': 5.8929999999998706e-05}, {'diff': 5.927699999999994e-05}, {'diff': 5.8736000000000205e-05}, {'diff': 5.866699999999836e-05}, {'diff': 5.940299999999954e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:11.998" endtime="20201029 18:16:12.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:12.005" level="INFO">${ACCURACY} = {'diff': [5.934700000000126e-05, 5.8929999999998706e-05, 5.927699999999994e-05, 5.8736000000000205e-05, 5.866699999999836e-05, 5.940299999999954e-05, 5.929099999999951e-05, 5.9472000000001385e-05, 5.8...</msg>
<status status="PASS" starttime="20201029 18:16:12.002" endtime="20201029 18:16:12.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.010" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 18:16:12.009" endtime="20201029 18:16:12.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.012" level="INFO">VALUE: [5.934700000000126e-05, 5.8929999999998706e-05, 5.927699999999994e-05, 5.8736000000000205e-05, 5.866699999999836e-05, 5.940299999999954e-05, 5.929099999999951e-05, 5.9472000000001385e-05, 5.8749999999999775e-05, 5.95689999999989e-05, 5.8694000000001495e-05, 5.9555999999998804e-05, 5.863899999999922e-05, 5.936099999999736e-05, 5.940299999999954e-05, 5.8722000000000635e-05, 5.9527999999999665e-05, 5.8707999999997595e-05, 5.947300000000086e-05, 5.9443999999998776e-05, 5.944499999999825e-05, 5.944499999999825e-05, 5.9222000000001135e-05, 5.923700000000018e-05, 5.944500000000172e-05, 5.943099999999868e-05, 5.926300000000037e-05, 5.9514000000000095e-05, 5.95689999999989e-05, 5.9500000000000525e-05, 5.930500000000255e-05, 5.9179999999998956e-05, 5.961100000000108e-05, 5.9485999999997485e-05, 5.9277999999999414e-05, 5.9222000000001135e-05, 5.870900000000054e-05, 5.9555999999998804e-05, 5.86810000000014e-05, 5.962500000000065e-05, 5.940299999999954e-05, 5.9569999999998374e-05, 5.9235999999997235e-05, 5.870900000000054e-05, 5.9514000000000095e-05, 5.9514000000000095e-05, 5.865300000000226e-05, 5.9348000000000734e-05, 5.947300000000086e-05, 5.86949999999975e-05]</msg>
<status status="PASS" starttime="20201029 18:16:12.011" endtime="20201029 18:16:12.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.006" endtime="20201029 18:16:12.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.017" endtime="20201029 18:16:12.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.016" endtime="20201029 18:16:12.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.015" endtime="20201029 18:16:12.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.657" endtime="20201029 18:16:12.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.657" endtime="20201029 18:16:12.038"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.046" endtime="20201029 18:16:12.064"></status>
</kw>
<msg timestamp="20201029 18:16:12.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.045" endtime="20201029 18:16:12.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.066" endtime="20201029 18:16:12.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.068" endtime="20201029 18:16:12.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.042" endtime="20201029 18:16:12.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.040" endtime="20201029 18:16:12.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.077" endtime="20201029 18:16:12.362"></status>
</kw>
<msg timestamp="20201029 18:16:12.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022597833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.076" endtime="20201029 18:16:12.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022597833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.366" endtime="20201029 18:16:12.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.374" endtime="20201029 18:16:12.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.073" endtime="20201029 18:16:12.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.071" endtime="20201029 18:16:12.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.381" level="INFO">${RESULT} = [{'diff': 6.013900000000072e-05}, {'diff': 6.0278000000000415e-05}, {'diff': 6.0443999999999776e-05}, {'diff': 6.0249999999997805e-05}, {'diff': 5.961099999999761e-05}, {'diff': 6.040299999999707e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:12.378" endtime="20201029 18:16:12.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:12.385" level="INFO">${ACCURACY} = {'diff': [6.013900000000072e-05, 6.0278000000000415e-05, 6.0443999999999776e-05, 6.0249999999997805e-05, 5.961099999999761e-05, 6.040299999999707e-05, 5.9694000000002495e-05, 6.0541999999996765e-05, 6...</msg>
<status status="PASS" starttime="20201029 18:16:12.382" endtime="20201029 18:16:12.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.389" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 18:16:12.388" endtime="20201029 18:16:12.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.392" level="INFO">VALUE: [6.013900000000072e-05, 6.0278000000000415e-05, 6.0443999999999776e-05, 6.0249999999997805e-05, 5.961099999999761e-05, 6.040299999999707e-05, 5.9694000000002495e-05, 6.0541999999996765e-05, 6.0221999999998665e-05, 6.0207999999999096e-05, 6.0499999999998055e-05, 6.0264000000000845e-05, 6.0542000000000235e-05, 6.0584000000002414e-05, 6.0264000000000845e-05, 6.020900000000204e-05, 6.061099999999861e-05, 6.0597999999998514e-05, 6.0665999999997416e-05, 6.0500000000001525e-05, 6.055500000000033e-05, 5.988900000000047e-05, 6.038900000000097e-05, 6.0236000000001705e-05, 6.052700000000119e-05, 6.059699999999904e-05, 6.036099999999836e-05, 5.9916000000000136e-05, 6.052699999999772e-05, 6.061099999999861e-05, 6.0264000000000845e-05, 5.9791999999999484e-05, 6.0528000000000665e-05, 6.05689999999999e-05, 6.0500000000001525e-05, 6.044499999999925e-05, 6.040300000000054e-05, 6.0319999999999124e-05, 5.969500000000197e-05, 6.038900000000097e-05, 5.9750000000000775e-05, 6.0472000000002385e-05, 6.0320000000002594e-05, 6.0305999999999554e-05, 6.0583999999998944e-05, 5.9972000000001885e-05, 6.020899999999857e-05, 6.045899999999882e-05, 6.016699999999986e-05, 6.055500000000033e-05]</msg>
<status status="PASS" starttime="20201029 18:16:12.390" endtime="20201029 18:16:12.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.386" endtime="20201029 18:16:12.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.398" endtime="20201029 18:16:12.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.396" endtime="20201029 18:16:12.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.395" endtime="20201029 18:16:12.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.039" endtime="20201029 18:16:12.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.038" endtime="20201029 18:16:12.418"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.427" endtime="20201029 18:16:12.444"></status>
</kw>
<msg timestamp="20201029 18:16:12.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.425" endtime="20201029 18:16:12.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.446" endtime="20201029 18:16:12.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.448" endtime="20201029 18:16:12.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.423" endtime="20201029 18:16:12.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.421" endtime="20201029 18:16:12.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.457" endtime="20201029 18:16:12.743"></status>
</kw>
<msg timestamp="20201029 18:16:12.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021691528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021752542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.456" endtime="20201029 18:16:12.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021691528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021752542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.747" endtime="20201029 18:16:12.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.755" endtime="20201029 18:16:12.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.453" endtime="20201029 18:16:12.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.451" endtime="20201029 18:16:12.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.761" level="INFO">${RESULT} = [{'diff': 6.1013999999998125e-05}, {'diff': 6.115300000000129e-05}, {'diff': 6.148599999999949e-05}, {'diff': 6.163799999999928e-05}, {'diff': 6.066700000000036e-05}, {'diff': 6.141599999999817e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:12.758" endtime="20201029 18:16:12.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:12.767" level="INFO">${ACCURACY} = {'diff': [6.1013999999998125e-05, 6.115300000000129e-05, 6.148599999999949e-05, 6.163799999999928e-05, 6.066700000000036e-05, 6.141599999999817e-05, 6.148599999999949e-05, 6.14019999999986e-05, 6.1305...</msg>
<status status="PASS" starttime="20201029 18:16:12.762" endtime="20201029 18:16:12.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.771" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 18:16:12.770" endtime="20201029 18:16:12.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.773" level="INFO">VALUE: [6.1013999999998125e-05, 6.115300000000129e-05, 6.148599999999949e-05, 6.163799999999928e-05, 6.066700000000036e-05, 6.141599999999817e-05, 6.148599999999949e-05, 6.14019999999986e-05, 6.130500000000108e-05, 6.147199999999992e-05, 6.0749999999998305e-05, 6.15690000000009e-05, 6.162500000000265e-05, 6.12499999999988e-05, 6.127800000000141e-05, 6.0736000000002205e-05, 6.131900000000065e-05, 6.132000000000012e-05, 6.122199999999967e-05, 6.068099999999993e-05, 6.13889999999985e-05, 6.157000000000037e-05, 6.116700000000086e-05, 6.154200000000123e-05, 6.134699999999979e-05, 6.130600000000055e-05, 6.15140000000021e-05, 6.127799999999795e-05, 6.147300000000286e-05, 6.134799999999926e-05, 6.145800000000035e-05, 6.15279999999982e-05, 6.162499999999918e-05, 6.127699999999847e-05, 6.165199999999885e-05, 6.0694000000000026e-05, 6.16950000000005e-05, 6.062499999999818e-05, 6.161099999999961e-05, 6.127800000000141e-05, 6.134699999999979e-05, 6.066700000000036e-05, 6.068099999999993e-05, 6.158300000000047e-05, 6.134699999999979e-05, 6.066700000000036e-05, 6.116700000000086e-05, 6.143100000000068e-05, 6.065300000000079e-05, 6.130600000000055e-05]</msg>
<status status="PASS" starttime="20201029 18:16:12.772" endtime="20201029 18:16:12.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.767" endtime="20201029 18:16:12.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.783" endtime="20201029 18:16:12.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.782" endtime="20201029 18:16:12.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.780" endtime="20201029 18:16:12.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.419" endtime="20201029 18:16:12.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.419" endtime="20201029 18:16:12.804"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.813" endtime="20201029 18:16:12.831"></status>
</kw>
<msg timestamp="20201029 18:16:12.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.812" endtime="20201029 18:16:12.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.832" endtime="20201029 18:16:12.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.835" endtime="20201029 18:16:12.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.809" endtime="20201029 18:16:12.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.807" endtime="20201029 18:16:12.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.843" endtime="20201029 18:16:13.129"></status>
</kw>
<msg timestamp="20201029 18:16:13.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022971819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023034403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.842" endtime="20201029 18:16:13.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022971819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023034403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.133" endtime="20201029 18:16:13.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.141" endtime="20201029 18:16:13.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.839" endtime="20201029 18:16:13.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.838" endtime="20201029 18:16:13.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:13.148" level="INFO">${RESULT} = [{'diff': 6.258399999999747e-05}, {'diff': 6.234700000000079e-05}, {'diff': 6.262500000000018e-05}, {'diff': 6.263899999999975e-05}, {'diff': 6.257000000000137e-05}, {'diff': 6.243100000000168e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:13.145" endtime="20201029 18:16:13.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:13.152" level="INFO">${ACCURACY} = {'diff': [6.258399999999747e-05, 6.234700000000079e-05, 6.262500000000018e-05, 6.263899999999975e-05, 6.257000000000137e-05, 6.243100000000168e-05, 6.22499999999998e-05, 6.229200000000198e-05, 6.25700...</msg>
<status status="PASS" starttime="20201029 18:16:13.149" endtime="20201029 18:16:13.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.156" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 18:16:13.155" endtime="20201029 18:16:13.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.159" level="INFO">VALUE: [6.258399999999747e-05, 6.234700000000079e-05, 6.262500000000018e-05, 6.263899999999975e-05, 6.257000000000137e-05, 6.243100000000168e-05, 6.22499999999998e-05, 6.229200000000198e-05, 6.257000000000137e-05, 6.250000000000006e-05, 6.240299999999907e-05, 6.238800000000003e-05, 6.248600000000049e-05, 6.172200000000017e-05, 6.24300000000022e-05, 6.172200000000017e-05, 6.251399999999963e-05, 6.223600000000024e-05, 6.245799999999788e-05, 6.236100000000036e-05, 6.218000000000196e-05, 6.25560000000018e-05, 6.263899999999975e-05, 6.223600000000024e-05, 6.173599999999974e-05, 6.170799999999713e-05, 6.173599999999974e-05, 6.243100000000168e-05, 6.255500000000233e-05, 6.229199999999852e-05, 6.223600000000024e-05, 6.231999999999766e-05, 6.16950000000005e-05, 6.232000000000112e-05, 6.229099999999904e-05, 6.22499999999998e-05, 6.244500000000125e-05, 6.165199999999885e-05, 6.216600000000239e-05, 6.234700000000079e-05, 6.24439999999983e-05, 6.252700000000319e-05, 6.251399999999963e-05, 6.248600000000049e-05, 6.172200000000017e-05, 6.245799999999788e-05, 6.172200000000017e-05, 6.261100000000061e-05, 6.230499999999861e-05, 6.251399999999963e-05]</msg>
<status status="PASS" starttime="20201029 18:16:13.157" endtime="20201029 18:16:13.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.153" endtime="20201029 18:16:13.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:13.164" endtime="20201029 18:16:13.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.162" endtime="20201029 18:16:13.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.161" endtime="20201029 18:16:13.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.805" endtime="20201029 18:16:13.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.804" endtime="20201029 18:16:13.185"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.193" endtime="20201029 18:16:13.212"></status>
</kw>
<msg timestamp="20201029 18:16:13.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.192" endtime="20201029 18:16:13.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.213" endtime="20201029 18:16:13.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.216" endtime="20201029 18:16:13.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.189" endtime="20201029 18:16:13.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.187" endtime="20201029 18:16:13.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.225" endtime="20201029 18:16:13.509"></status>
</kw>
<msg timestamp="20201029 18:16:13.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022757944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.223" endtime="20201029 18:16:13.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022757944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.513" endtime="20201029 18:16:13.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.523" endtime="20201029 18:16:13.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.221" endtime="20201029 18:16:13.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.219" endtime="20201029 18:16:13.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:13.529" level="INFO">${RESULT} = [{'diff': 6.305499999999936e-05}, {'diff': 6.330499999999961e-05}, {'diff': 6.331899999999918e-05}, {'diff': 6.333300000000222e-05}, {'diff': 6.329100000000004e-05}, {'diff': 6.34159999999967e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:13.526" endtime="20201029 18:16:13.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:13.533" level="INFO">${ACCURACY} = {'diff': [6.305499999999936e-05, 6.330499999999961e-05, 6.331899999999918e-05, 6.333300000000222e-05, 6.329100000000004e-05, 6.34159999999967e-05, 6.326400000000038e-05, 6.363900000000075e-05, 6.31670...</msg>
<status status="PASS" starttime="20201029 18:16:13.530" endtime="20201029 18:16:13.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.538" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 18:16:13.537" endtime="20201029 18:16:13.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.540" level="INFO">VALUE: [6.305499999999936e-05, 6.330499999999961e-05, 6.331899999999918e-05, 6.333300000000222e-05, 6.329100000000004e-05, 6.34159999999967e-05, 6.326400000000038e-05, 6.363900000000075e-05, 6.316700000000286e-05, 6.32080000000021e-05, 6.363900000000075e-05, 6.32500000000008e-05, 6.269400000000203e-05, 6.268099999999846e-05, 6.320799999999863e-05, 6.270799999999813e-05, 6.351400000000063e-05, 6.354200000000323e-05, 6.257000000000137e-05, 6.263899999999975e-05, 6.331999999999866e-05, 6.263899999999975e-05, 6.362500000000118e-05, 6.32500000000008e-05, 6.269400000000203e-05, 6.329100000000004e-05, 6.272200000000117e-05, 6.266599999999942e-05, 6.272200000000117e-05, 6.363900000000075e-05, 6.326400000000038e-05, 6.266599999999942e-05, 6.331899999999918e-05, 6.32219999999982e-05, 6.363900000000075e-05, 6.359699999999857e-05, 6.369400000000303e-05, 6.331999999999866e-05, 6.361099999999814e-05, 6.323599999999777e-05, 6.273599999999727e-05, 6.265300000000279e-05, 6.33890000000005e-05, 6.270799999999813e-05, 6.329199999999952e-05, 6.358399999999848e-05, 6.363900000000075e-05, 6.323700000000071e-05, 6.316699999999939e-05, 6.350000000000106e-05]</msg>
<status status="PASS" starttime="20201029 18:16:13.539" endtime="20201029 18:16:13.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.534" endtime="20201029 18:16:13.542"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:13.546" endtime="20201029 18:16:13.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.545" endtime="20201029 18:16:13.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.543" endtime="20201029 18:16:13.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.185" endtime="20201029 18:16:13.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.185" endtime="20201029 18:16:13.567"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.575" endtime="20201029 18:16:13.593"></status>
</kw>
<msg timestamp="20201029 18:16:13.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.574" endtime="20201029 18:16:13.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.594" endtime="20201029 18:16:13.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.597" endtime="20201029 18:16:13.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.571" endtime="20201029 18:16:13.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.569" endtime="20201029 18:16:13.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.605" endtime="20201029 18:16:13.891"></status>
</kw>
<msg timestamp="20201029 18:16:13.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022111639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.604" endtime="20201029 18:16:13.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022111639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.895" endtime="20201029 18:16:13.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.904" endtime="20201029 18:16:13.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.601" endtime="20201029 18:16:13.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.600" endtime="20201029 18:16:13.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:13.910" level="INFO">${RESULT} = [{'diff': 6.463900000000175e-05}, {'diff': 6.461099999999914e-05}, {'diff': 6.450000000000206e-05}, {'diff': 6.423599999999877e-05}, {'diff': 6.427800000000095e-05}, {'diff': 6.366699999999989e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:13.907" endtime="20201029 18:16:13.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:13.915" level="INFO">${ACCURACY} = {'diff': [6.463900000000175e-05, 6.461099999999914e-05, 6.450000000000206e-05, 6.423599999999877e-05, 6.427800000000095e-05, 6.366699999999989e-05, 6.442999999999727e-05, 6.366699999999989e-05, 6.4444...</msg>
<status status="PASS" starttime="20201029 18:16:13.911" endtime="20201029 18:16:13.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.921" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 18:16:13.920" endtime="20201029 18:16:13.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.923" level="INFO">VALUE: [6.463900000000175e-05, 6.461099999999914e-05, 6.450000000000206e-05, 6.423599999999877e-05, 6.427800000000095e-05, 6.366699999999989e-05, 6.442999999999727e-05, 6.366699999999989e-05, 6.444499999999978e-05, 6.37089999999986e-05, 6.436200000000183e-05, 6.461099999999914e-05, 6.441700000000064e-05, 6.373599999999827e-05, 6.455500000000086e-05, 6.376400000000088e-05, 6.451400000000163e-05, 6.37080000000026e-05, 6.417999999999702e-05, 6.455500000000086e-05, 6.423599999999877e-05, 6.367999999999999e-05, 6.45280000000012e-05, 6.463899999999828e-05, 6.420799999999963e-05, 6.393099999999971e-05, 6.436100000000236e-05, 6.373600000000174e-05, 6.465300000000132e-05, 6.437499999999846e-05, 6.37219999999987e-05, 6.459699999999957e-05, 6.376400000000088e-05, 6.45699999999999e-05, 6.416699999999692e-05, 6.44440000000003e-05, 6.430600000000009e-05, 6.429200000000052e-05, 6.419400000000006e-05, 6.418000000000049e-05, 6.362500000000118e-05, 6.433299999999975e-05, 6.461099999999914e-05, 6.454099999999782e-05, 6.45280000000012e-05, 6.45699999999999e-05, 6.372200000000217e-05, 6.451399999999816e-05, 6.373599999999827e-05, 6.461099999999914e-05]</msg>
<status status="PASS" starttime="20201029 18:16:13.922" endtime="20201029 18:16:13.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.916" endtime="20201029 18:16:13.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:13.928" endtime="20201029 18:16:13.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.926" endtime="20201029 18:16:13.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.925" endtime="20201029 18:16:13.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.568" endtime="20201029 18:16:13.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.567" endtime="20201029 18:16:13.949"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.957" endtime="20201029 18:16:13.974"></status>
</kw>
<msg timestamp="20201029 18:16:13.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.956" endtime="20201029 18:16:13.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.975" endtime="20201029 18:16:13.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.978" endtime="20201029 18:16:13.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.953" endtime="20201029 18:16:13.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.951" endtime="20201029 18:16:13.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.987" endtime="20201029 18:16:14.273"></status>
</kw>
<msg timestamp="20201029 18:16:14.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.985" endtime="20201029 18:16:14.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.277" endtime="20201029 18:16:14.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.285" endtime="20201029 18:16:14.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.983" endtime="20201029 18:16:14.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.981" endtime="20201029 18:16:14.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:14.292" level="INFO">${RESULT} = [{'diff': 6.568100000000146e-05}, {'diff': 6.547199999999698e-05}, {'diff': 6.527800000000195e-05}, {'diff': 6.472299999999917e-05}, {'diff': 6.466699999999742e-05}, {'diff': 6.569499999999756e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:14.289" endtime="20201029 18:16:14.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:14.296" level="INFO">${ACCURACY} = {'diff': [6.568100000000146e-05, 6.547199999999698e-05, 6.527800000000195e-05, 6.472299999999917e-05, 6.466699999999742e-05, 6.569499999999756e-05, 6.545900000000035e-05, 6.513800000000278e-05, 6.5611...</msg>
<status status="PASS" starttime="20201029 18:16:14.293" endtime="20201029 18:16:14.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.300" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 18:16:14.299" endtime="20201029 18:16:14.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.303" level="INFO">VALUE: [6.568100000000146e-05, 6.547199999999698e-05, 6.527800000000195e-05, 6.472299999999917e-05, 6.466699999999742e-05, 6.569499999999756e-05, 6.545900000000035e-05, 6.513800000000278e-05, 6.561100000000014e-05, 6.555500000000186e-05, 6.52220000000002e-05, 6.530499999999814e-05, 6.551399999999916e-05, 6.466600000000142e-05, 6.556900000000143e-05, 6.536099999999989e-05, 6.523599999999977e-05, 6.469400000000056e-05, 6.529200000000152e-05, 6.47219999999997e-05, 6.547299999999992e-05, 6.474999999999884e-05, 6.561100000000014e-05, 6.465300000000132e-05, 6.548600000000002e-05, 6.533400000000023e-05, 6.527799999999848e-05, 6.524999999999934e-05, 6.54029999999986e-05, 6.523599999999977e-05, 6.466599999999795e-05, 6.468100000000046e-05, 6.54029999999986e-05, 6.548600000000002e-05, 6.551299999999968e-05, 6.524999999999934e-05, 6.561100000000014e-05, 6.52639999999989e-05, 6.549999999999959e-05, 6.5583000000001e-05, 6.534700000000032e-05, 6.54029999999986e-05, 6.520800000000063e-05, 6.469400000000056e-05, 6.469500000000003e-05, 6.559700000000057e-05, 6.529199999999805e-05, 6.551399999999916e-05, 6.518099999999749e-05, 6.540300000000207e-05]</msg>
<status status="PASS" starttime="20201029 18:16:14.301" endtime="20201029 18:16:14.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.297" endtime="20201029 18:16:14.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:14.308" endtime="20201029 18:16:14.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.306" endtime="20201029 18:16:14.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.305" endtime="20201029 18:16:14.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.950" endtime="20201029 18:16:14.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.949" endtime="20201029 18:16:14.328"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.337" endtime="20201029 18:16:14.357"></status>
</kw>
<msg timestamp="20201029 18:16:14.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.336" endtime="20201029 18:16:14.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.358" endtime="20201029 18:16:14.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.361" endtime="20201029 18:16:14.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.333" endtime="20201029 18:16:14.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.331" endtime="20201029 18:16:14.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.370" endtime="20201029 18:16:14.656"></status>
</kw>
<msg timestamp="20201029 18:16:14.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025037056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025103181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.368" endtime="20201029 18:16:14.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025037056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025103181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.660" endtime="20201029 18:16:14.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.669" endtime="20201029 18:16:14.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.366" endtime="20201029 18:16:14.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.364" endtime="20201029 18:16:14.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:14.675" level="INFO">${RESULT} = [{'diff': 6.612500000000021e-05}, {'diff': 6.641699999999917e-05}, {'diff': 6.625000000000034e-05}, {'diff': 6.566700000000189e-05}, {'diff': 6.665299999999985e-05}, {'diff': 6.629199999999905e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:14.672" endtime="20201029 18:16:14.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:14.679" level="INFO">${ACCURACY} = {'diff': [6.612500000000021e-05, 6.641699999999917e-05, 6.625000000000034e-05, 6.566700000000189e-05, 6.665299999999985e-05, 6.629199999999905e-05, 6.62220000000012e-05, 6.569499999999756e-05, 6.57090...</msg>
<status status="PASS" starttime="20201029 18:16:14.676" endtime="20201029 18:16:14.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.684" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 18:16:14.683" endtime="20201029 18:16:14.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.686" level="INFO">VALUE: [6.612500000000021e-05, 6.641699999999917e-05, 6.625000000000034e-05, 6.566700000000189e-05, 6.665299999999985e-05, 6.629199999999905e-05, 6.62220000000012e-05, 6.569499999999756e-05, 6.57090000000006e-05, 6.645900000000135e-05, 6.643099999999874e-05, 6.568100000000146e-05, 6.62090000000011e-05, 6.568099999999799e-05, 6.629099999999957e-05, 6.652699999999678e-05, 6.574999999999984e-05, 6.633300000000175e-05, 6.665299999999985e-05, 6.656900000000243e-05, 6.637500000000046e-05, 6.631900000000218e-05, 6.630500000000261e-05, 6.643099999999874e-05, 6.629199999999905e-05, 6.566699999999842e-05, 6.568099999999799e-05, 6.562499999999971e-05, 6.637500000000046e-05, 6.617999999999902e-05, 6.634700000000132e-05, 6.588899999999953e-05, 6.579199999999855e-05, 6.574999999999984e-05, 6.57090000000006e-05, 6.57090000000006e-05, 6.6277e-05, 6.65969999999981e-05, 6.636100000000089e-05, 6.638900000000003e-05, 6.640200000000013e-05, 6.642999999999927e-05, 6.573600000000027e-05, 6.652699999999678e-05, 6.566599999999895e-05, 6.64159999999997e-05, 6.569400000000156e-05, 6.651400000000016e-05, 6.634699999999785e-05, 6.62220000000012e-05]</msg>
<status status="PASS" starttime="20201029 18:16:14.685" endtime="20201029 18:16:14.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.680" endtime="20201029 18:16:14.688"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:14.692" endtime="20201029 18:16:14.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.690" endtime="20201029 18:16:14.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.689" endtime="20201029 18:16:14.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.329" endtime="20201029 18:16:14.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.329" endtime="20201029 18:16:14.714"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.727" endtime="20201029 18:16:14.745"></status>
</kw>
<msg timestamp="20201029 18:16:14.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.726" endtime="20201029 18:16:14.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.746" endtime="20201029 18:16:14.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.749" endtime="20201029 18:16:14.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.722" endtime="20201029 18:16:14.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.719" endtime="20201029 18:16:14.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.758" endtime="20201029 18:16:15.044"></status>
</kw>
<msg timestamp="20201029 18:16:15.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028346528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028414264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.756" endtime="20201029 18:16:15.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028346528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028414264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.048" endtime="20201029 18:16:15.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.056" endtime="20201029 18:16:15.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.754" endtime="20201029 18:16:15.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.752" endtime="20201029 18:16:15.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.062" level="INFO">${RESULT} = [{'diff': 6.773600000000227e-05}, {'diff': 6.719499999999906e-05}, {'diff': 6.67220000000017e-05}, {'diff': 6.745899999999888e-05}, {'diff': 6.729200000000005e-05}, {'diff': 6.72359999999983e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:15.059" endtime="20201029 18:16:15.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.067" level="INFO">${ACCURACY} = {'diff': [6.773600000000227e-05, 6.719499999999906e-05, 6.67220000000017e-05, 6.745899999999888e-05, 6.729200000000005e-05, 6.72359999999983e-05, 6.75420000000003e-05, 6.747300000000192e-05, 6.7527000...</msg>
<status status="PASS" starttime="20201029 18:16:15.063" endtime="20201029 18:16:15.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.072" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.071" endtime="20201029 18:16:15.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.074" level="INFO">VALUE: [6.773600000000227e-05, 6.719499999999906e-05, 6.67220000000017e-05, 6.745899999999888e-05, 6.729200000000005e-05, 6.72359999999983e-05, 6.75420000000003e-05, 6.747300000000192e-05, 6.752700000000125e-05, 6.723700000000124e-05, 6.719499999999906e-05, 6.749999999999812e-05, 6.725000000000134e-05, 6.670799999999866e-05, 6.737499999999799e-05, 6.736100000000189e-05, 6.719399999999959e-05, 6.751400000000116e-05, 6.752800000000073e-05, 6.738899999999756e-05, 6.727800000000048e-05, 6.725000000000134e-05, 6.719399999999959e-05, 6.67359999999978e-05, 6.722199999999873e-05, 6.69030000000001e-05, 6.743099999999974e-05, 6.69030000000001e-05, 6.722199999999873e-05, 6.744499999999931e-05, 6.670899999999813e-05, 6.752800000000073e-05, 6.755599999999987e-05, 6.765200000000138e-05, 6.72640000000009e-05, 6.738799999999809e-05, 6.663799999999734e-05, 6.762499999999824e-05, 6.72640000000009e-05, 6.736099999999842e-05, 6.720799999999916e-05, 6.765300000000085e-05, 6.763900000000128e-05, 6.738900000000103e-05, 6.670799999999866e-05, 6.667999999999952e-05, 6.719399999999959e-05, 6.67359999999978e-05, 6.759700000000257e-05, 6.761100000000214e-05]</msg>
<status status="PASS" starttime="20201029 18:16:15.073" endtime="20201029 18:16:15.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.068" endtime="20201029 18:16:15.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.079" endtime="20201029 18:16:15.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.078" endtime="20201029 18:16:15.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.077" endtime="20201029 18:16:15.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.715" endtime="20201029 18:16:15.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.714" endtime="20201029 18:16:15.100"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.108" endtime="20201029 18:16:15.126"></status>
</kw>
<msg timestamp="20201029 18:16:15.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.107" endtime="20201029 18:16:15.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.128" endtime="20201029 18:16:15.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.130" endtime="20201029 18:16:15.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.104" endtime="20201029 18:16:15.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.102" endtime="20201029 18:16:15.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.139" endtime="20201029 18:16:15.425"></status>
</kw>
<msg timestamp="20201029 18:16:15.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022116417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.138" endtime="20201029 18:16:15.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022116417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.430" endtime="20201029 18:16:15.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.438" endtime="20201029 18:16:15.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.135" endtime="20201029 18:16:15.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.133" endtime="20201029 18:16:15.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.444" level="INFO">${RESULT} = [{'diff': 6.870900000000013e-05}, {'diff': 6.866600000000195e-05}, {'diff': 6.856899999999749e-05}, {'diff': 6.819400000000059e-05}, {'diff': 6.773600000000227e-05}, {'diff': 6.849999999999912e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:15.441" endtime="20201029 18:16:15.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.448" level="INFO">${ACCURACY} = {'diff': [6.870900000000013e-05, 6.866600000000195e-05, 6.856899999999749e-05, 6.819400000000059e-05, 6.773600000000227e-05, 6.849999999999912e-05, 6.863899999999881e-05, 6.775000000000184e-05, 6.8263...</msg>
<status status="PASS" starttime="20201029 18:16:15.445" endtime="20201029 18:16:15.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.453" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.452" endtime="20201029 18:16:15.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.455" level="INFO">VALUE: [6.870900000000013e-05, 6.866600000000195e-05, 6.856899999999749e-05, 6.819400000000059e-05, 6.773600000000227e-05, 6.849999999999912e-05, 6.863899999999881e-05, 6.775000000000184e-05, 6.826399999999844e-05, 6.849999999999912e-05, 6.765300000000085e-05, 6.851399999999869e-05, 6.831900000000071e-05, 6.827799999999801e-05, 6.849999999999912e-05, 6.845800000000041e-05, 6.769399999999662e-05, 6.82909999999981e-05, 6.769499999999956e-05, 6.816699999999745e-05, 6.837499999999899e-05, 6.837500000000246e-05, 6.854199999999783e-05, 6.827800000000148e-05, 6.830600000000062e-05, 6.819500000000006e-05, 6.852700000000225e-05, 6.863899999999881e-05, 6.762500000000171e-05, 6.775000000000184e-05, 6.833300000000028e-05, 6.854199999999783e-05, 6.844400000000084e-05, 6.766599999999748e-05, 6.847199999999998e-05, 6.834699999999985e-05, 6.836099999999942e-05, 6.834699999999985e-05, 6.824999999999887e-05, 6.843100000000074e-05, 6.766700000000042e-05, 6.8584e-05, 6.838899999999856e-05, 6.830600000000062e-05, 6.843100000000074e-05, 6.766700000000042e-05, 6.854100000000182e-05, 6.769499999999956e-05, 6.855600000000087e-05, 6.830599999999715e-05]</msg>
<status status="PASS" starttime="20201029 18:16:15.454" endtime="20201029 18:16:15.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.449" endtime="20201029 18:16:15.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.460" endtime="20201029 18:16:15.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.459" endtime="20201029 18:16:15.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.457" endtime="20201029 18:16:15.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.101" endtime="20201029 18:16:15.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.100" endtime="20201029 18:16:15.481"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.489" endtime="20201029 18:16:15.508"></status>
</kw>
<msg timestamp="20201029 18:16:15.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.488" endtime="20201029 18:16:15.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.509" endtime="20201029 18:16:15.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.512" endtime="20201029 18:16:15.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.485" endtime="20201029 18:16:15.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.483" endtime="20201029 18:16:15.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.522" endtime="20201029 18:16:15.808"></status>
</kw>
<msg timestamp="20201029 18:16:15.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023149153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023218014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.520" endtime="20201029 18:16:15.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023149153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023218014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.812" endtime="20201029 18:16:15.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.820" endtime="20201029 18:16:15.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.516" endtime="20201029 18:16:15.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.515" endtime="20201029 18:16:15.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.826" level="INFO">${RESULT} = [{'diff': 6.886099999999992e-05}, {'diff': 6.933400000000076e-05}, {'diff': 6.961100000000067e-05}, {'diff': 6.868100000000099e-05}, {'diff': 6.924999999999987e-05}, {'diff': 6.969500000000156e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:15.823" endtime="20201029 18:16:15.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.831" level="INFO">${ACCURACY} = {'diff': [6.886099999999992e-05, 6.933400000000076e-05, 6.961100000000067e-05, 6.868100000000099e-05, 6.924999999999987e-05, 6.969500000000156e-05, 6.874999999999937e-05, 6.876299999999946e-05, 6.9430...</msg>
<status status="PASS" starttime="20201029 18:16:15.827" endtime="20201029 18:16:15.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.835" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.834" endtime="20201029 18:16:15.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.837" level="INFO">VALUE: [6.886099999999992e-05, 6.933400000000076e-05, 6.961100000000067e-05, 6.868100000000099e-05, 6.924999999999987e-05, 6.969500000000156e-05, 6.874999999999937e-05, 6.876299999999946e-05, 6.943000000000227e-05, 6.869399999999762e-05, 6.930499999999867e-05, 6.958300000000153e-05, 6.930499999999867e-05, 6.951399999999969e-05, 6.880599999999765e-05, 6.932000000000119e-05, 6.868000000000152e-05, 6.929199999999858e-05, 6.938899999999956e-05, 6.95420000000023e-05, 6.956900000000196e-05, 6.957000000000144e-05, 6.94030000000026e-05, 6.94030000000026e-05, 6.932000000000119e-05, 6.920899999999716e-05, 6.920900000000063e-05, 6.92230000000002e-05, 6.945799999999794e-05, 6.952700000000325e-05, 6.965299999999938e-05, 6.940299999999913e-05, 6.922199999999726e-05, 6.876399999999894e-05, 6.934700000000085e-05, 6.938899999999956e-05, 6.866599999999848e-05, 6.958299999999806e-05, 6.950000000000012e-05, 6.941599999999923e-05, 6.947200000000098e-05, 6.948599999999708e-05, 6.919400000000159e-05, 6.92360000000003e-05, 6.934699999999738e-05, 6.932000000000119e-05, 6.937499999999999e-05, 6.958299999999806e-05, 6.945900000000088e-05, 6.920900000000063e-05]</msg>
<status status="PASS" starttime="20201029 18:16:15.836" endtime="20201029 18:16:15.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.831" endtime="20201029 18:16:15.840"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.844" endtime="20201029 18:16:15.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.842" endtime="20201029 18:16:15.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.841" endtime="20201029 18:16:15.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.482" endtime="20201029 18:16:15.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.481" endtime="20201029 18:16:15.864"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.873" endtime="20201029 18:16:15.891"></status>
</kw>
<msg timestamp="20201029 18:16:15.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.872" endtime="20201029 18:16:15.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.892" endtime="20201029 18:16:15.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.895" endtime="20201029 18:16:15.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.869" endtime="20201029 18:16:15.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.867" endtime="20201029 18:16:15.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.903" endtime="20201029 18:16:16.210"></status>
</kw>
<msg timestamp="20201029 18:16:16.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.902" endtime="20201029 18:16:16.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.215" endtime="20201029 18:16:16.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.223" endtime="20201029 18:16:16.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.899" endtime="20201029 18:16:16.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.898" endtime="20201029 18:16:16.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:16.230" level="INFO">${RESULT} = [{'diff': 6.994499999999834e-05}, {'diff': 7.056999999999897e-05}, {'diff': 7.055600000000287e-05}, {'diff': 7.036099999999795e-05}, {'diff': 7.058399999999854e-05}, {'diff': 7.051399999999722e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:16.226" endtime="20201029 18:16:16.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:16.235" level="INFO">${ACCURACY} = {'diff': [6.994499999999834e-05, 7.056999999999897e-05, 7.055600000000287e-05, 7.036099999999795e-05, 7.058399999999854e-05, 7.051399999999722e-05, 7.018099999999902e-05, 7.047299999999798e-05, 7.0332...</msg>
<status status="PASS" starttime="20201029 18:16:16.231" endtime="20201029 18:16:16.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.240" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 18:16:16.239" endtime="20201029 18:16:16.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.242" level="INFO">VALUE: [6.994499999999834e-05, 7.056999999999897e-05, 7.055600000000287e-05, 7.036099999999795e-05, 7.058399999999854e-05, 7.051399999999722e-05, 7.018099999999902e-05, 7.047299999999798e-05, 7.033299999999881e-05, 7.02910000000001e-05, 7.051299999999774e-05, 6.976399999999994e-05, 7.031900000000271e-05, 7.055499999999992e-05, 6.972200000000123e-05, 7.044399999999937e-05, 7.051400000000069e-05, 7.059699999999863e-05, 7.027800000000001e-05, 7.059699999999863e-05, 7.044399999999937e-05, 7.027800000000001e-05, 7.048600000000155e-05, 7.045899999999841e-05, 7.020800000000216e-05, 7.04169999999997e-05, 7.051400000000069e-05, 6.970899999999766e-05, 7.056999999999897e-05, 7.022299999999773e-05, 7.019499999999859e-05, 6.970900000000113e-05, 7.056999999999897e-05, 6.970799999999819e-05, 7.037500000000099e-05, 7.041600000000023e-05, 7.051400000000069e-05, 7.037500000000099e-05, 7.055499999999992e-05, 7.051400000000069e-05, 6.969399999999862e-05, 7.044399999999937e-05, 7.05689999999995e-05, 7.019499999999859e-05, 6.968099999999852e-05, 7.052800000000026e-05, 7.019499999999859e-05, 7.036099999999795e-05, 6.969500000000156e-05, 7.05970000000021e-05]</msg>
<status status="PASS" starttime="20201029 18:16:16.241" endtime="20201029 18:16:16.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.236" endtime="20201029 18:16:16.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:16.248" endtime="20201029 18:16:16.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.246" endtime="20201029 18:16:16.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.245" endtime="20201029 18:16:16.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.865" endtime="20201029 18:16:16.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.865" endtime="20201029 18:16:16.268"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.277" endtime="20201029 18:16:16.296"></status>
</kw>
<msg timestamp="20201029 18:16:16.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.276" endtime="20201029 18:16:16.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.297" endtime="20201029 18:16:16.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.300" endtime="20201029 18:16:16.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.273" endtime="20201029 18:16:16.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.271" endtime="20201029 18:16:16.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.309" endtime="20201029 18:16:16.596"></status>
</kw>
<msg timestamp="20201029 18:16:16.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022553139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.308" endtime="20201029 18:16:16.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022553139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.601" endtime="20201029 18:16:16.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.609" endtime="20201029 18:16:16.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.305" endtime="20201029 18:16:16.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.303" endtime="20201029 18:16:16.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:16.616" level="INFO">${RESULT} = [{'diff': 7.102800000000076e-05}, {'diff': 7.068099999999952e-05}, {'diff': 7.0762999999998e-05}, {'diff': 7.154200000000083e-05}, {'diff': 7.12499999999984e-05}, {'diff': 7.123599999999883e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:16:16.612" endtime="20201029 18:16:16.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:16.620" level="INFO">${ACCURACY} = {'diff': [7.102800000000076e-05, 7.068099999999952e-05, 7.0762999999998e-05, 7.154200000000083e-05, 7.12499999999984e-05, 7.123599999999883e-05, 7.072199999999876e-05, 7.151399999999822e-05, 7.1514000...</msg>
<status status="PASS" starttime="20201029 18:16:16.617" endtime="20201029 18:16:16.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.625" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 18:16:16.624" endtime="20201029 18:16:16.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.627" level="INFO">VALUE: [7.102800000000076e-05, 7.068099999999952e-05, 7.0762999999998e-05, 7.154200000000083e-05, 7.12499999999984e-05, 7.123599999999883e-05, 7.072199999999876e-05, 7.151399999999822e-05, 7.151400000000169e-05, 7.162499999999877e-05, 7.151400000000169e-05, 7.075000000000137e-05, 7.073599999999833e-05, 7.130600000000015e-05, 7.137499999999852e-05, 7.076399999999747e-05, 7.12910000000011e-05, 7.069399999999962e-05, 7.150000000000212e-05, 7.15560000000004e-05, 7.120799999999969e-05, 7.061100000000167e-05, 7.152800000000126e-05, 7.163899999999834e-05, 7.119499999999959e-05, 7.118100000000002e-05, 7.083299999999931e-05, 7.127800000000101e-05, 7.151399999999822e-05, 7.065299999999691e-05, 7.07360000000018e-05, 7.152699999999831e-05, 7.122299999999873e-05, 7.12230000000022e-05, 7.133399999999929e-05, 7.137499999999852e-05, 7.15560000000004e-05, 7.138899999999809e-05, 7.079200000000008e-05, 7.141600000000123e-05, 7.119400000000012e-05, 7.120799999999969e-05, 7.133299999999981e-05, 7.154100000000135e-05, 7.150000000000212e-05, 7.129199999999711e-05, 7.122199999999926e-05, 7.147199999999951e-05, 7.14309999999968e-05, 7.07360000000018e-05]</msg>
<status status="PASS" starttime="20201029 18:16:16.626" endtime="20201029 18:16:16.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.621" endtime="20201029 18:16:16.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:16.632" endtime="20201029 18:16:16.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.631" endtime="20201029 18:16:16.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.630" endtime="20201029 18:16:16.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.269" endtime="20201029 18:16:16.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.269" endtime="20201029 18:16:16.653"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.662" endtime="20201029 18:16:16.680"></status>
</kw>
<msg timestamp="20201029 18:16:16.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.661" endtime="20201029 18:16:16.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.682" endtime="20201029 18:16:16.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.684" endtime="20201029 18:16:16.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.658" endtime="20201029 18:16:16.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.656" endtime="20201029 18:16:16.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.694" endtime="20201029 18:16:16.980"></status>
</kw>
<msg timestamp="20201029 18:16:16.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023276903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023348931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.692" endtime="20201029 18:16:16.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023276903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023348931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.984" endtime="20201029 18:16:16.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.993" endtime="20201029 18:16:16.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.689" endtime="20201029 18:16:16.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.687" endtime="20201029 18:16:16.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:17.000" level="INFO">${RESULT} = [{'diff': 7.202799999999829e-05}, {'diff': 7.247199999999704e-05}, {'diff': 7.248600000000008e-05}, {'diff': 7.172199999999976e-05}, {'diff': 7.22910000000021e-05}, {'diff': 7.238899999999909e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:16.996" endtime="20201029 18:16:17.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:17.004" level="INFO">${ACCURACY} = {'diff': [7.202799999999829e-05, 7.247199999999704e-05, 7.248600000000008e-05, 7.172199999999976e-05, 7.22910000000021e-05, 7.238899999999909e-05, 7.249999999999965e-05, 7.165199999999844e-05, 7.22780...</msg>
<status status="PASS" starttime="20201029 18:16:17.001" endtime="20201029 18:16:17.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.009" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 18:16:17.008" endtime="20201029 18:16:17.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.011" level="INFO">VALUE: [7.202799999999829e-05, 7.247199999999704e-05, 7.248600000000008e-05, 7.172199999999976e-05, 7.22910000000021e-05, 7.238899999999909e-05, 7.249999999999965e-05, 7.165199999999844e-05, 7.227800000000201e-05, 7.238899999999909e-05, 7.229200000000158e-05, 7.254199999999836e-05, 7.219400000000112e-05, 7.222200000000026e-05, 7.219399999999765e-05, 7.220900000000016e-05, 7.265299999999891e-05, 7.230600000000115e-05, 7.251399999999922e-05, 7.170899999999966e-05, 7.227799999999854e-05, 7.251399999999922e-05, 7.259700000000063e-05, 7.17499999999989e-05, 7.254099999999888e-05, 7.22499999999994e-05, 7.252699999999931e-05, 7.251299999999974e-05, 7.248600000000008e-05, 7.17360000000028e-05, 7.191599999999826e-05, 7.172199999999976e-05, 7.173599999999933e-05, 7.227799999999854e-05, 7.251400000000269e-05, 7.223700000000277e-05, 7.231899999999777e-05, 7.236099999999995e-05, 7.22499999999994e-05, 7.24170000000017e-05, 7.168100000000052e-05, 7.243100000000127e-05, 7.262499999999977e-05, 7.263899999999934e-05, 7.248699999999955e-05, 7.247200000000051e-05, 7.258300000000106e-05, 7.237499999999952e-05, 7.173599999999933e-05, 7.252699999999931e-05]</msg>
<status status="PASS" starttime="20201029 18:16:17.010" endtime="20201029 18:16:17.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.005" endtime="20201029 18:16:17.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:17.017" endtime="20201029 18:16:17.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.016" endtime="20201029 18:16:17.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.015" endtime="20201029 18:16:17.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.654" endtime="20201029 18:16:17.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.653" endtime="20201029 18:16:17.038"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.047" endtime="20201029 18:16:17.064"></status>
</kw>
<msg timestamp="20201029 18:16:17.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.045" endtime="20201029 18:16:17.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.066" endtime="20201029 18:16:17.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.068" endtime="20201029 18:16:17.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.043" endtime="20201029 18:16:17.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.041" endtime="20201029 18:16:17.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.078" endtime="20201029 18:16:17.364"></status>
</kw>
<msg timestamp="20201029 18:16:17.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02229025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:17.076" endtime="20201029 18:16:17.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02229025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:17.368" endtime="20201029 18:16:17.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.378" endtime="20201029 18:16:17.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.073" endtime="20201029 18:16:17.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.072" endtime="20201029 18:16:17.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:17.386" level="INFO">${RESULT} = [{'diff': 7.284699999999741e-05}, {'diff': 7.316599999999951e-05}, {'diff': 7.322200000000126e-05}, {'diff': 7.355499999999945e-05}, {'diff': 7.334699999999791e-05}, {'diff': 7.350000000000065e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:17.383" endtime="20201029 18:16:17.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:17.392" level="INFO">${ACCURACY} = {'diff': [7.284699999999741e-05, 7.316599999999951e-05, 7.322200000000126e-05, 7.355499999999945e-05, 7.334699999999791e-05, 7.350000000000065e-05, 7.359699999999816e-05, 7.36249999999973e-05, 7.34439...</msg>
<status status="PASS" starttime="20201029 18:16:17.387" endtime="20201029 18:16:17.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.396" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 18:16:17.395" endtime="20201029 18:16:17.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.399" level="INFO">VALUE: [7.284699999999741e-05, 7.316599999999951e-05, 7.322200000000126e-05, 7.355499999999945e-05, 7.334699999999791e-05, 7.350000000000065e-05, 7.359699999999816e-05, 7.36249999999973e-05, 7.34439999999989e-05, 7.319500000000159e-05, 7.341699999999923e-05, 7.338900000000009e-05, 7.340299999999966e-05, 7.269499999999762e-05, 7.32500000000004e-05, 7.350000000000065e-05, 7.357000000000197e-05, 7.34439999999989e-05, 7.262499999999977e-05, 7.329200000000258e-05, 7.334700000000138e-05, 7.351300000000074e-05, 7.362500000000077e-05, 7.362500000000077e-05, 7.363900000000034e-05, 7.350000000000065e-05, 7.337500000000052e-05, 7.36249999999973e-05, 7.36110000000012e-05, 7.34309999999988e-05, 7.323600000000083e-05, 7.338900000000009e-05, 7.320799999999822e-05, 7.320799999999822e-05, 7.365299999999991e-05, 7.357000000000197e-05, 7.323600000000083e-05, 7.320900000000116e-05, 7.272300000000023e-05, 7.27369999999998e-05, 7.338900000000009e-05, 7.323600000000083e-05, 7.263799999999987e-05, 7.352700000000031e-05, 7.273600000000033e-05, 7.338900000000009e-05, 7.322199999999779e-05, 7.333300000000181e-05, 7.327800000000301e-05, 7.32500000000004e-05]</msg>
<status status="PASS" starttime="20201029 18:16:17.397" endtime="20201029 18:16:17.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.393" endtime="20201029 18:16:17.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:17.404" endtime="20201029 18:16:17.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.402" endtime="20201029 18:16:17.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.401" endtime="20201029 18:16:17.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.039" endtime="20201029 18:16:17.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.039" endtime="20201029 18:16:17.425"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.434" endtime="20201029 18:16:17.452"></status>
</kw>
<msg timestamp="20201029 18:16:17.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.432" endtime="20201029 18:16:17.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.453" endtime="20201029 18:16:17.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.456" endtime="20201029 18:16:17.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.430" endtime="20201029 18:16:17.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.427" endtime="20201029 18:16:17.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.465" endtime="20201029 18:16:17.752"></status>
</kw>
<msg timestamp="20201029 18:16:17.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.464" endtime="20201029 18:16:17.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.756" endtime="20201029 18:16:17.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.765" endtime="20201029 18:16:17.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.461" endtime="20201029 18:16:17.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.459" endtime="20201029 18:16:17.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:17.772" level="INFO">${RESULT} = [{'diff': 7.448600000000208e-05}, {'diff': 7.418000000000008e-05}, {'diff': 7.437500000000152e-05}, {'diff': 7.363900000000034e-05}, {'diff': 7.436099999999848e-05}, {'diff': 7.436099999999848e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:17.768" endtime="20201029 18:16:17.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:17.776" level="INFO">${ACCURACY} = {'diff': [7.448600000000208e-05, 7.418000000000008e-05, 7.437500000000152e-05, 7.363900000000034e-05, 7.436099999999848e-05, 7.436099999999848e-05, 7.426400000000097e-05, 7.422199999999879e-05, 7.4430...</msg>
<status status="PASS" starttime="20201029 18:16:17.773" endtime="20201029 18:16:17.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.781" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 18:16:17.780" endtime="20201029 18:16:17.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.783" level="INFO">VALUE: [7.448600000000208e-05, 7.418000000000008e-05, 7.437500000000152e-05, 7.363900000000034e-05, 7.436099999999848e-05, 7.436099999999848e-05, 7.426400000000097e-05, 7.422199999999879e-05, 7.443000000000033e-05, 7.368099999999905e-05, 7.419399999999965e-05, 7.368100000000252e-05, 7.368099999999905e-05, 7.454200000000036e-05, 7.363900000000034e-05, 7.452800000000079e-05, 7.444500000000284e-05, 7.418100000000302e-05, 7.454200000000036e-05, 7.45829999999996e-05, 7.427800000000054e-05, 7.418099999999955e-05, 7.456900000000002e-05, 7.433300000000281e-05, 7.445799999999947e-05, 7.447199999999904e-05, 7.450000000000165e-05, 7.455500000000045e-05, 7.415300000000041e-05, 7.431899999999977e-05, 7.416699999999998e-05, 7.461099999999873e-05, 7.452800000000079e-05, 7.391699999999973e-05, 7.444499999999937e-05, 7.454200000000036e-05, 7.418099999999955e-05, 7.418099999999955e-05, 7.438900000000109e-05, 7.452800000000079e-05, 7.44309999999998e-05, 7.422299999999826e-05, 7.459700000000263e-05, 7.455599999999993e-05, 7.437500000000152e-05, 7.459699999999916e-05, 7.434699999999891e-05, 7.374999999999743e-05, 7.391600000000026e-05, 7.462500000000177e-05]</msg>
<status status="PASS" starttime="20201029 18:16:17.782" endtime="20201029 18:16:17.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.777" endtime="20201029 18:16:17.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:17.792" endtime="20201029 18:16:17.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.791" endtime="20201029 18:16:17.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.790" endtime="20201029 18:16:17.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.426" endtime="20201029 18:16:17.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.425" endtime="20201029 18:16:17.813"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.822" endtime="20201029 18:16:17.843"></status>
</kw>
<msg timestamp="20201029 18:16:17.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.820" endtime="20201029 18:16:17.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.844" endtime="20201029 18:16:17.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.847" endtime="20201029 18:16:17.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.818" endtime="20201029 18:16:17.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.816" endtime="20201029 18:16:17.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.856" endtime="20201029 18:16:18.142"></status>
</kw>
<msg timestamp="20201029 18:16:18.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025625431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025700778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.855" endtime="20201029 18:16:18.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025625431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025700778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.147" endtime="20201029 18:16:18.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.155" endtime="20201029 18:16:18.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.852" endtime="20201029 18:16:18.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.850" endtime="20201029 18:16:18.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.162" level="INFO">${RESULT} = [{'diff': 7.534699999999991e-05}, {'diff': 7.55839999999966e-05}, {'diff': 7.527799999999807e-05}, {'diff': 7.550000000000265e-05}, {'diff': 7.46379999999984e-05}, {'diff': 7.533399999999982e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:18.159" endtime="20201029 18:16:18.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:18.166" level="INFO">${ACCURACY} = {'diff': [7.534699999999991e-05, 7.55839999999966e-05, 7.527799999999807e-05, 7.550000000000265e-05, 7.46379999999984e-05, 7.533399999999982e-05, 7.548600000000308e-05, 7.531900000000077e-05, 7.548599...</msg>
<status status="PASS" starttime="20201029 18:16:18.163" endtime="20201029 18:16:18.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.171" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 18:16:18.170" endtime="20201029 18:16:18.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.173" level="INFO">VALUE: [7.534699999999991e-05, 7.55839999999966e-05, 7.527799999999807e-05, 7.550000000000265e-05, 7.46379999999984e-05, 7.533399999999982e-05, 7.548600000000308e-05, 7.531900000000077e-05, 7.548599999999961e-05, 7.548599999999961e-05, 7.533300000000034e-05, 7.538899999999862e-05, 7.555500000000145e-05, 7.529199999999764e-05, 7.468100000000005e-05, 7.551399999999875e-05, 7.533399999999982e-05, 7.49029999999977e-05, 7.549999999999918e-05, 7.463900000000134e-05, 7.522199999999979e-05, 7.4763999999998e-05, 7.472199999999929e-05, 7.47500000000019e-05, 7.530599999999721e-05, 7.474999999999843e-05, 7.533399999999982e-05, 7.530600000000068e-05, 7.540199999999872e-05, 7.545800000000047e-05, 7.536099999999948e-05, 7.47500000000019e-05, 7.552699999999885e-05, 7.538899999999862e-05, 7.466600000000101e-05, 7.534699999999991e-05, 7.468000000000058e-05, 7.548599999999961e-05, 7.545800000000047e-05, 7.549999999999918e-05, 7.555600000000093e-05, 7.474999999999843e-05, 7.544500000000037e-05, 7.548599999999961e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.545899999999994e-05, 7.52630000000025e-05, 7.520899999999969e-05, 7.53890000000021e-05]</msg>
<status status="PASS" starttime="20201029 18:16:18.172" endtime="20201029 18:16:18.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.167" endtime="20201029 18:16:18.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.180" endtime="20201029 18:16:18.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.178" endtime="20201029 18:16:18.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.177" endtime="20201029 18:16:18.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.814" endtime="20201029 18:16:18.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.813" endtime="20201029 18:16:18.200"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.209" endtime="20201029 18:16:18.227"></status>
</kw>
<msg timestamp="20201029 18:16:18.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.208" endtime="20201029 18:16:18.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.228" endtime="20201029 18:16:18.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.231" endtime="20201029 18:16:18.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.205" endtime="20201029 18:16:18.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.203" endtime="20201029 18:16:18.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.240" endtime="20201029 18:16:18.526"></status>
</kw>
<msg timestamp="20201029 18:16:18.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022289639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.239" endtime="20201029 18:16:18.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022289639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.531" endtime="20201029 18:16:18.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.539" endtime="20201029 18:16:18.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.236" endtime="20201029 18:16:18.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.234" endtime="20201029 18:16:18.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.546" level="INFO">${RESULT} = [{'diff': 7.624999999999993e-05}, {'diff': 7.62639999999995e-05}, {'diff': 7.652800000000279e-05}, {'diff': 7.655599999999846e-05}, {'diff': 7.622300000000026e-05}, {'diff': 7.572299999999976e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:18.543" endtime="20201029 18:16:18.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:18.551" level="INFO">${ACCURACY} = {'diff': [7.624999999999993e-05, 7.62639999999995e-05, 7.652800000000279e-05, 7.655599999999846e-05, 7.622300000000026e-05, 7.572299999999976e-05, 7.647300000000051e-05, 7.570900000000019e-05, 7.63610...</msg>
<status status="PASS" starttime="20201029 18:16:18.547" endtime="20201029 18:16:18.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.556" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 18:16:18.555" endtime="20201029 18:16:18.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.558" level="INFO">VALUE: [7.624999999999993e-05, 7.62639999999995e-05, 7.652800000000279e-05, 7.655599999999846e-05, 7.622300000000026e-05, 7.572299999999976e-05, 7.647300000000051e-05, 7.570900000000019e-05, 7.636100000000048e-05, 7.617999999999861e-05, 7.642999999999886e-05, 7.647200000000104e-05, 7.644399999999843e-05, 7.652799999999932e-05, 7.626400000000297e-05, 7.654199999999889e-05, 7.622200000000079e-05, 7.647200000000104e-05, 7.652800000000279e-05, 7.632000000000125e-05, 7.565300000000191e-05, 7.62639999999995e-05, 7.633299999999787e-05, 7.651399999999975e-05, 7.64449999999979e-05, 7.570900000000019e-05, 7.663899999999987e-05, 7.622300000000026e-05, 7.655600000000193e-05, 7.655599999999846e-05, 7.626300000000003e-05, 7.623600000000036e-05, 7.631900000000177e-05, 7.568000000000158e-05, 7.652699999999985e-05, 7.65830000000016e-05, 7.591700000000173e-05, 7.633300000000134e-05, 7.641699999999876e-05, 7.652799999999932e-05, 7.619400000000165e-05, 7.64440000000019e-05, 7.64449999999979e-05, 7.620799999999775e-05, 7.648600000000061e-05, 7.643099999999833e-05, 7.636100000000048e-05, 7.651399999999975e-05, 7.574999999999943e-05, 7.626300000000003e-05]</msg>
<status status="PASS" starttime="20201029 18:16:18.557" endtime="20201029 18:16:18.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.552" endtime="20201029 18:16:18.560"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.564" endtime="20201029 18:16:18.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.562" endtime="20201029 18:16:18.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.561" endtime="20201029 18:16:18.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.201" endtime="20201029 18:16:18.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.201" endtime="20201029 18:16:18.586"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.599" endtime="20201029 18:16:18.618"></status>
</kw>
<msg timestamp="20201029 18:16:18.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.596" endtime="20201029 18:16:18.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.619" endtime="20201029 18:16:18.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.622" endtime="20201029 18:16:18.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.593" endtime="20201029 18:16:18.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.590" endtime="20201029 18:16:18.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.631" endtime="20201029 18:16:18.918"></status>
</kw>
<msg timestamp="20201029 18:16:18.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029039222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029115986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.630" endtime="20201029 18:16:18.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029039222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029115986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.922" endtime="20201029 18:16:18.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.931" endtime="20201029 18:16:18.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.627" endtime="20201029 18:16:18.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.625" endtime="20201029 18:16:18.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.937" level="INFO">${RESULT} = [{'diff': 7.6764e-05}, {'diff': 7.738900000000062e-05}, {'diff': 7.734699999999844e-05}, {'diff': 7.751400000000075e-05}, {'diff': 7.668099999999858e-05}, {'diff': 7.748700000000108e-05}, {'diff': 7.7...</msg>
<status status="PASS" starttime="20201029 18:16:18.934" endtime="20201029 18:16:18.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:18.942" level="INFO">${ACCURACY} = {'diff': [7.6764e-05, 7.738900000000062e-05, 7.734699999999844e-05, 7.751400000000075e-05, 7.668099999999858e-05, 7.748700000000108e-05, 7.738900000000062e-05, 7.720899999999822e-05, 7.719499999999865...</msg>
<status status="PASS" starttime="20201029 18:16:18.938" endtime="20201029 18:16:18.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.946" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 18:16:18.945" endtime="20201029 18:16:18.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.949" level="INFO">VALUE: [7.6764e-05, 7.738900000000062e-05, 7.734699999999844e-05, 7.751400000000075e-05, 7.668099999999858e-05, 7.748700000000108e-05, 7.738900000000062e-05, 7.720899999999822e-05, 7.719499999999865e-05, 7.673600000000086e-05, 7.715200000000047e-05, 7.741700000000323e-05, 7.76389999999974e-05, 7.744399999999943e-05, 7.669400000000215e-05, 7.72640000000005e-05, 7.755599999999946e-05, 7.761100000000173e-05, 7.738900000000062e-05, 7.761100000000173e-05, 7.745800000000247e-05, 7.747200000000204e-05, 7.727800000000007e-05, 7.731900000000277e-05, 7.734700000000191e-05, 7.736100000000148e-05, 7.732000000000225e-05, 7.76389999999974e-05, 7.740300000000366e-05, 7.74719999999951e-05, 7.763900000000434e-05, 7.720899999999475e-05, 7.731999999999878e-05, 7.6764e-05, 7.733299999999887e-05, 7.726300000000103e-05, 7.75969999999987e-05, 7.730499999999974e-05, 7.73189999999993e-05, 7.665299999999597e-05, 7.747200000000204e-05, 7.740299999999672e-05, 7.72640000000005e-05, 7.74719999999951e-05, 7.733399999999835e-05, 7.75969999999987e-05, 7.752800000000032e-05, 7.715299999999647e-05, 7.748600000000161e-05, 7.730599999999921e-05]</msg>
<status status="PASS" starttime="20201029 18:16:18.947" endtime="20201029 18:16:18.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.942" endtime="20201029 18:16:18.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.954" endtime="20201029 18:16:18.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.952" endtime="20201029 18:16:18.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.951" endtime="20201029 18:16:18.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.587" endtime="20201029 18:16:18.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.586" endtime="20201029 18:16:18.975"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.984" endtime="20201029 18:16:19.003"></status>
</kw>
<msg timestamp="20201029 18:16:19.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.982" endtime="20201029 18:16:19.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.004" endtime="20201029 18:16:19.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.007" endtime="20201029 18:16:19.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.980" endtime="20201029 18:16:19.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.977" endtime="20201029 18:16:19.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.016" endtime="20201029 18:16:19.302"></status>
</kw>
<msg timestamp="20201029 18:16:19.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023396083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02347425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:19.014" endtime="20201029 18:16:19.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023396083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02347425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:19.306" endtime="20201029 18:16:19.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.315" endtime="20201029 18:16:19.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.012" endtime="20201029 18:16:19.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.010" endtime="20201029 18:16:19.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:19.322" level="INFO">${RESULT} = [{'diff': 7.816699999999704e-05}, {'diff': 7.856900000000056e-05}, {'diff': 7.84449999999999e-05}, {'diff': 7.791700000000026e-05}, {'diff': 7.818100000000008e-05}, {'diff': 7.819499999999965e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:19.318" endtime="20201029 18:16:19.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:19.326" level="INFO">${ACCURACY} = {'diff': [7.816699999999704e-05, 7.856900000000056e-05, 7.84449999999999e-05, 7.791700000000026e-05, 7.818100000000008e-05, 7.819499999999965e-05, 7.769499999999915e-05, 7.836099999999901e-05, 7.85140...</msg>
<status status="PASS" starttime="20201029 18:16:19.323" endtime="20201029 18:16:19.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.331" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 18:16:19.329" endtime="20201029 18:16:19.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.333" level="INFO">VALUE: [7.816699999999704e-05, 7.856900000000056e-05, 7.84449999999999e-05, 7.791700000000026e-05, 7.818100000000008e-05, 7.819499999999965e-05, 7.769499999999915e-05, 7.836099999999901e-05, 7.851400000000175e-05, 7.820799999999975e-05, 7.851400000000175e-05, 7.773600000000186e-05, 7.823600000000236e-05, 7.86519999999985e-05, 7.770799999999925e-05, 7.85969999999997e-05, 7.84030000000012e-05, 7.775000000000143e-05, 7.840299999999772e-05, 7.766700000000001e-05, 7.862499999999883e-05, 7.837500000000205e-05, 7.818100000000008e-05, 7.790299999999722e-05, 7.855600000000046e-05, 7.82640000000015e-05, 7.7764000000001e-05, 7.822200000000279e-05, 7.836199999999849e-05, 7.847299999999904e-05, 7.843100000000033e-05, 7.848599999999914e-05, 7.852800000000132e-05, 7.86250000000023e-05, 7.773600000000186e-05, 7.826399999999803e-05, 7.837499999999858e-05, 7.765300000000044e-05, 7.825000000000193e-05, 7.850000000000218e-05, 7.770799999999925e-05, 7.773599999999839e-05, 7.827800000000107e-05, 7.766700000000001e-05, 7.766700000000001e-05, 7.841700000000076e-05, 7.769499999999915e-05, 7.844500000000337e-05, 7.834699999999944e-05, 7.825000000000193e-05]</msg>
<status status="PASS" starttime="20201029 18:16:19.332" endtime="20201029 18:16:19.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.327" endtime="20201029 18:16:19.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:19.339" endtime="20201029 18:16:19.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.338" endtime="20201029 18:16:19.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.336" endtime="20201029 18:16:19.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.976" endtime="20201029 18:16:19.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.975" endtime="20201029 18:16:19.360"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.369" endtime="20201029 18:16:19.387"></status>
</kw>
<msg timestamp="20201029 18:16:19.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.367" endtime="20201029 18:16:19.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.388" endtime="20201029 18:16:19.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.391" endtime="20201029 18:16:19.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.365" endtime="20201029 18:16:19.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.362" endtime="20201029 18:16:19.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.400" endtime="20201029 18:16:19.686"></status>
</kw>
<msg timestamp="20201029 18:16:19.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.399" endtime="20201029 18:16:19.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.690" endtime="20201029 18:16:19.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.698" endtime="20201029 18:16:19.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.396" endtime="20201029 18:16:19.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.394" endtime="20201029 18:16:19.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:19.705" level="INFO">${RESULT} = [{'diff': 7.884799999999942e-05}, {'diff': 7.948600000000014e-05}, {'diff': 7.96389999999994e-05}, {'diff': 7.868100000000058e-05}, {'diff': 7.954099999999895e-05}, {'diff': 7.865200000000197e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:19.702" endtime="20201029 18:16:19.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:19.710" level="INFO">${ACCURACY} = {'diff': [7.884799999999942e-05, 7.948600000000014e-05, 7.96389999999994e-05, 7.868100000000058e-05, 7.954099999999895e-05, 7.865200000000197e-05, 7.936100000000001e-05, 7.87779999999981e-05, 7.952699...</msg>
<status status="PASS" starttime="20201029 18:16:19.706" endtime="20201029 18:16:19.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.715" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 18:16:19.714" endtime="20201029 18:16:19.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.718" level="INFO">VALUE: [7.884799999999942e-05, 7.948600000000014e-05, 7.96389999999994e-05, 7.868100000000058e-05, 7.954099999999895e-05, 7.865200000000197e-05, 7.936100000000001e-05, 7.87779999999981e-05, 7.952699999999938e-05, 7.919400000000118e-05, 7.92779999999986e-05, 7.940299999999872e-05, 7.924999999999946e-05, 7.931899999999784e-05, 7.927800000000207e-05, 7.922200000000032e-05, 7.872199999999982e-05, 7.94450000000009e-05, 7.941700000000176e-05, 7.874999999999896e-05, 7.954099999999895e-05, 7.96389999999994e-05, 7.873599999999939e-05, 7.930599999999774e-05, 7.919500000000065e-05, 7.95970000000007e-05, 7.93329999999974e-05, 7.869400000000068e-05, 7.873599999999939e-05, 7.951399999999928e-05, 7.944400000000143e-05, 7.937499999999958e-05, 7.952799999999885e-05, 7.868000000000111e-05, 7.962499999999983e-05, 7.940299999999872e-05, 7.955599999999799e-05, 7.919500000000065e-05, 7.962499999999983e-05, 7.95840000000006e-05, 7.954199999999842e-05, 7.95840000000006e-05, 7.930600000000121e-05, 7.94169999999983e-05, 7.929199999999817e-05, 7.949999999999971e-05, 7.870800000000025e-05, 7.920800000000075e-05, 7.925000000000293e-05, 7.922200000000032e-05]</msg>
<status status="PASS" starttime="20201029 18:16:19.716" endtime="20201029 18:16:19.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.711" endtime="20201029 18:16:19.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:19.723" endtime="20201029 18:16:19.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.721" endtime="20201029 18:16:19.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.720" endtime="20201029 18:16:19.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.361" endtime="20201029 18:16:19.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.360" endtime="20201029 18:16:19.744"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.753" endtime="20201029 18:16:19.770"></status>
</kw>
<msg timestamp="20201029 18:16:19.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.751" endtime="20201029 18:16:19.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.772" endtime="20201029 18:16:19.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.775" endtime="20201029 18:16:19.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.748" endtime="20201029 18:16:19.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.746" endtime="20201029 18:16:19.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.785" endtime="20201029 18:16:20.073"></status>
</kw>
<msg timestamp="20201029 18:16:20.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022388556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.783" endtime="20201029 18:16:20.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022388556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.077" endtime="20201029 18:16:20.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.085" endtime="20201029 18:16:20.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.780" endtime="20201029 18:16:20.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.778" endtime="20201029 18:16:20.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.092" level="INFO">${RESULT} = [{'diff': 8.061200000000074e-05}, {'diff': 8.056999999999856e-05}, {'diff': 8.036100000000101e-05}, {'diff': 8.047300000000104e-05}, {'diff': 8.020799999999828e-05}, {'diff': 8.026400000000003e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:20.089" endtime="20201029 18:16:20.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.096" level="INFO">${ACCURACY} = {'diff': [8.061200000000074e-05, 8.056999999999856e-05, 8.036100000000101e-05, 8.047300000000104e-05, 8.020799999999828e-05, 8.026400000000003e-05, 7.966600000000254e-05, 8.055599999999899e-05, 7.9681...</msg>
<status status="PASS" starttime="20201029 18:16:20.093" endtime="20201029 18:16:20.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.101" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.100" endtime="20201029 18:16:20.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.104" level="INFO">VALUE: [8.061200000000074e-05, 8.056999999999856e-05, 8.036100000000101e-05, 8.047300000000104e-05, 8.020799999999828e-05, 8.026400000000003e-05, 7.966600000000254e-05, 8.055599999999899e-05, 7.968100000000158e-05, 8.055499999999952e-05, 8.041700000000276e-05, 8.058300000000213e-05, 7.974999999999996e-05, 7.96109999999968e-05, 7.968100000000158e-05, 7.976399999999953e-05, 8.055599999999899e-05, 7.99169999999988e-05, 8.02779999999996e-05, 8.036100000000101e-05, 8.055599999999899e-05, 8.04169999999993e-05, 8.06109999999978e-05, 8.033400000000135e-05, 7.96389999999994e-05, 8.027700000000013e-05, 8.059699999999823e-05, 8.017999999999914e-05, 8.026400000000003e-05, 8.019400000000218e-05, 8.047200000000157e-05, 8.033300000000188e-05, 8.02779999999996e-05, 7.972199999999735e-05, 8.061100000000126e-05, 7.965299999999897e-05, 8.023600000000089e-05, 7.969499999999768e-05, 8.057000000000203e-05, 7.993099999999836e-05, 8.04169999999993e-05, 8.02909999999997e-05, 8.038900000000015e-05, 7.966599999999907e-05, 8.050000000000071e-05, 8.033300000000188e-05, 8.034699999999798e-05, 8.050000000000071e-05, 8.052700000000038e-05, 8.034699999999798e-05]</msg>
<status status="PASS" starttime="20201029 18:16:20.102" endtime="20201029 18:16:20.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.097" endtime="20201029 18:16:20.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:20.109" endtime="20201029 18:16:20.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.107" endtime="20201029 18:16:20.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.106" endtime="20201029 18:16:20.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.745" endtime="20201029 18:16:20.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.744" endtime="20201029 18:16:20.130"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.139" endtime="20201029 18:16:20.158"></status>
</kw>
<msg timestamp="20201029 18:16:20.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.137" endtime="20201029 18:16:20.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.160" endtime="20201029 18:16:20.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.163" endtime="20201029 18:16:20.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.134" endtime="20201029 18:16:20.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.132" endtime="20201029 18:16:20.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.172" endtime="20201029 18:16:20.458"></status>
</kw>
<msg timestamp="20201029 18:16:20.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023785028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023866222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.170" endtime="20201029 18:16:20.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023785028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023866222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.462" endtime="20201029 18:16:20.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.471" endtime="20201029 18:16:20.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.168" endtime="20201029 18:16:20.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.166" endtime="20201029 18:16:20.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.478" level="INFO">${RESULT} = [{'diff': 8.119399999999971e-05}, {'diff': 8.15840000000026e-05}, {'diff': 8.149999999999824e-05}, {'diff': 8.152799999999738e-05}, {'diff': 8.158299999999966e-05}, {'diff': 8.131899999999984e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:20.474" endtime="20201029 18:16:20.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.482" level="INFO">${ACCURACY} = {'diff': [8.119399999999971e-05, 8.15840000000026e-05, 8.149999999999824e-05, 8.152799999999738e-05, 8.158299999999966e-05, 8.131899999999984e-05, 8.143000000000039e-05, 8.112500000000133e-05, 8.13189...</msg>
<status status="PASS" starttime="20201029 18:16:20.479" endtime="20201029 18:16:20.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.486" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.485" endtime="20201029 18:16:20.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.489" level="INFO">VALUE: [8.119399999999971e-05, 8.15840000000026e-05, 8.149999999999824e-05, 8.152799999999738e-05, 8.158299999999966e-05, 8.131899999999984e-05, 8.143000000000039e-05, 8.112500000000133e-05, 8.131899999999984e-05, 8.072200000000182e-05, 8.075000000000096e-05, 8.133300000000288e-05, 8.129200000000017e-05, 8.149999999999824e-05, 8.159699999999923e-05, 8.130599999999974e-05, 8.119500000000265e-05, 8.147300000000204e-05, 8.169400000000021e-05, 8.068100000000258e-05, 8.158399999999913e-05, 8.140300000000072e-05, 8.122299999999832e-05, 8.119399999999971e-05, 8.116600000000057e-05, 8.158299999999966e-05, 8.134699999999898e-05, 8.066600000000007e-05, 8.122199999999885e-05, 8.130500000000027e-05, 8.14719999999991e-05, 8.134699999999898e-05, 8.147200000000257e-05, 8.065299999999997e-05, 8.148600000000214e-05, 8.123600000000189e-05, 8.152800000000085e-05, 8.154200000000042e-05, 8.1458999999999e-05, 8.162500000000183e-05, 8.137500000000158e-05, 8.062500000000083e-05, 8.144399999999996e-05, 8.133300000000288e-05, 8.131899999999984e-05, 8.122199999999885e-05, 8.144399999999996e-05, 8.151400000000128e-05, 8.151399999999781e-05, 8.144399999999996e-05]</msg>
<status status="PASS" starttime="20201029 18:16:20.488" endtime="20201029 18:16:20.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.483" endtime="20201029 18:16:20.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:20.495" endtime="20201029 18:16:20.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.494" endtime="20201029 18:16:20.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.492" endtime="20201029 18:16:20.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.131" endtime="20201029 18:16:20.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.130" endtime="20201029 18:16:20.516"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.525" endtime="20201029 18:16:20.544"></status>
</kw>
<msg timestamp="20201029 18:16:20.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.523" endtime="20201029 18:16:20.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.545" endtime="20201029 18:16:20.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.548" endtime="20201029 18:16:20.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.521" endtime="20201029 18:16:20.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.519" endtime="20201029 18:16:20.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.558" endtime="20201029 18:16:20.844"></status>
</kw>
<msg timestamp="20201029 18:16:20.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225435, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:20.556" endtime="20201029 18:16:20.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225435, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:20.849" endtime="20201029 18:16:20.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.858" endtime="20201029 18:16:20.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.553" endtime="20201029 18:16:20.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.551" endtime="20201029 18:16:20.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.866" level="INFO">${RESULT} = [{'diff': 8.22780000000016e-05}, {'diff': 8.230500000000127e-05}, {'diff': 8.219400000000071e-05}, {'diff': 8.169399999999674e-05}, {'diff': 8.218100000000061e-05}, {'diff': 8.250000000000271e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:20.862" endtime="20201029 18:16:20.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.871" level="INFO">${ACCURACY} = {'diff': [8.22780000000016e-05, 8.230500000000127e-05, 8.219400000000071e-05, 8.169399999999674e-05, 8.218100000000061e-05, 8.250000000000271e-05, 8.230599999999727e-05, 8.244500000000043e-05, 8.25839...</msg>
<status status="PASS" starttime="20201029 18:16:20.867" endtime="20201029 18:16:20.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.875" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.874" endtime="20201029 18:16:20.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.878" level="INFO">VALUE: [8.22780000000016e-05, 8.230500000000127e-05, 8.219400000000071e-05, 8.169399999999674e-05, 8.218100000000061e-05, 8.250000000000271e-05, 8.230599999999727e-05, 8.244500000000043e-05, 8.258399999999666e-05, 8.262499999999937e-05, 8.252799999999838e-05, 8.219500000000018e-05, 8.2459e-05, 8.174999999999849e-05, 8.256900000000109e-05, 8.255499999999805e-05, 8.255500000000152e-05, 8.233299999999694e-05, 8.176399999999806e-05, 8.223599999999942e-05, 8.234799999999945e-05, 8.255600000000099e-05, 8.250000000000271e-05, 8.245800000000053e-05, 8.244500000000043e-05, 8.173700000000186e-05, 8.234699999999998e-05, 8.165300000000097e-05, 8.254199999999795e-05, 8.229200000000117e-05, 8.168100000000011e-05, 8.22919999999977e-05, 8.2459e-05, 8.252699999999891e-05, 8.170799999999978e-05, 8.220800000000028e-05, 8.217999999999767e-05, 8.262499999999937e-05, 8.249999999999924e-05, 8.216600000000157e-05, 8.173599999999892e-05, 8.259700000000023e-05, 8.237499999999912e-05, 8.233399999999988e-05, 8.224999999999899e-05, 8.219499999999672e-05, 8.16109999999988e-05, 8.258400000000013e-05, 8.166700000000054e-05, 8.241699999999783e-05]</msg>
<status status="PASS" starttime="20201029 18:16:20.876" endtime="20201029 18:16:20.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.872" endtime="20201029 18:16:20.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:20.883" endtime="20201029 18:16:20.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.881" endtime="20201029 18:16:20.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.880" endtime="20201029 18:16:20.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.517" endtime="20201029 18:16:20.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.516" endtime="20201029 18:16:20.903"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.912" endtime="20201029 18:16:20.930"></status>
</kw>
<msg timestamp="20201029 18:16:20.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.911" endtime="20201029 18:16:20.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.932" endtime="20201029 18:16:20.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.934" endtime="20201029 18:16:20.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.908" endtime="20201029 18:16:20.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.906" endtime="20201029 18:16:20.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.944" endtime="20201029 18:16:21.257"></status>
</kw>
<msg timestamp="20201029 18:16:21.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02194825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:20.942" endtime="20201029 18:16:21.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02194825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:21.262" endtime="20201029 18:16:21.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.270" endtime="20201029 18:16:21.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.940" endtime="20201029 18:16:21.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.938" endtime="20201029 18:16:21.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:21.277" level="INFO">${RESULT} = [{'diff': 8.331900000000184e-05}, {'diff': 8.323600000000042e-05}, {'diff': 8.36249999999969e-05}, {'diff': 8.320800000000128e-05}, {'diff': 8.323600000000042e-05}, {'diff': 8.356899999999862e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:21.274" endtime="20201029 18:16:21.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:21.281" level="INFO">${ACCURACY} = {'diff': [8.331900000000184e-05, 8.323600000000042e-05, 8.36249999999969e-05, 8.320800000000128e-05, 8.323600000000042e-05, 8.356899999999862e-05, 8.36110000000008e-05, 8.329200000000217e-05, 8.356899...</msg>
<status status="PASS" starttime="20201029 18:16:21.278" endtime="20201029 18:16:21.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.286" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 18:16:21.285" endtime="20201029 18:16:21.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.288" level="INFO">VALUE: [8.331900000000184e-05, 8.323600000000042e-05, 8.36249999999969e-05, 8.320800000000128e-05, 8.323600000000042e-05, 8.356899999999862e-05, 8.36110000000008e-05, 8.329200000000217e-05, 8.356899999999862e-05, 8.324999999999999e-05, 8.269500000000068e-05, 8.323600000000042e-05, 8.358399999999766e-05, 8.3459000000001e-05, 8.329200000000217e-05, 8.352799999999938e-05, 8.331999999999784e-05, 8.268000000000164e-05, 8.3152999999999e-05, 8.327799999999913e-05, 8.336099999999708e-05, 8.362500000000037e-05, 8.317999999999867e-05, 8.324999999999999e-05, 8.266600000000207e-05, 8.338899999999969e-05, 8.36110000000008e-05, 8.266700000000154e-05, 8.336100000000055e-05, 8.32919999999987e-05, 8.354200000000242e-05, 8.274999999999949e-05, 8.34720000000011e-05, 8.357000000000156e-05, 8.291699999999833e-05, 8.32780000000026e-05, 8.351399999999981e-05, 8.363899999999994e-05, 8.363799999999699e-05, 8.277699999999916e-05, 8.33049999999988e-05, 8.358299999999819e-05, 8.351399999999981e-05, 8.322200000000085e-05, 8.26529999999985e-05, 8.322200000000085e-05, 8.320800000000128e-05, 8.269400000000121e-05, 8.356999999999809e-05, 8.352799999999938e-05]</msg>
<status status="PASS" starttime="20201029 18:16:21.287" endtime="20201029 18:16:21.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.282" endtime="20201029 18:16:21.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:21.294" endtime="20201029 18:16:21.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.292" endtime="20201029 18:16:21.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.291" endtime="20201029 18:16:21.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.904" endtime="20201029 18:16:21.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.904" endtime="20201029 18:16:21.314"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.324" endtime="20201029 18:16:21.345"></status>
</kw>
<msg timestamp="20201029 18:16:21.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.322" endtime="20201029 18:16:21.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.346" endtime="20201029 18:16:21.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.349" endtime="20201029 18:16:21.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.319" endtime="20201029 18:16:21.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.317" endtime="20201029 18:16:21.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.358" endtime="20201029 18:16:21.644"></status>
</kw>
<msg timestamp="20201029 18:16:21.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025710486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025794972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.357" endtime="20201029 18:16:21.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025710486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025794972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.649" endtime="20201029 18:16:21.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.657" endtime="20201029 18:16:21.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.354" endtime="20201029 18:16:21.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.352" endtime="20201029 18:16:21.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:21.664" level="INFO">${RESULT} = [{'diff': 8.44859999999982e-05}, {'diff': 8.450000000000124e-05}, {'diff': 8.444399999999949e-05}, {'diff': 8.433299999999894e-05}, {'diff': 8.441699999999983e-05}, {'diff': 8.363899999999994e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:21.660" endtime="20201029 18:16:21.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:21.668" level="INFO">${ACCURACY} = {'diff': [8.44859999999982e-05, 8.450000000000124e-05, 8.444399999999949e-05, 8.433299999999894e-05, 8.441699999999983e-05, 8.363899999999994e-05, 8.454199999999995e-05, 8.445799999999906e-05, 8.44030...</msg>
<status status="PASS" starttime="20201029 18:16:21.665" endtime="20201029 18:16:21.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.673" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 18:16:21.672" endtime="20201029 18:16:21.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.675" level="INFO">VALUE: [8.44859999999982e-05, 8.450000000000124e-05, 8.444399999999949e-05, 8.433299999999894e-05, 8.441699999999983e-05, 8.363899999999994e-05, 8.454199999999995e-05, 8.445799999999906e-05, 8.440300000000026e-05, 8.456999999999909e-05, 8.452700000000091e-05, 8.423699999999743e-05, 8.391699999999933e-05, 8.372300000000082e-05, 8.366699999999908e-05, 8.422199999999838e-05, 8.445799999999906e-05, 8.44720000000021e-05, 8.426400000000056e-05, 8.376400000000006e-05, 8.462500000000137e-05, 8.370799999999831e-05, 8.424999999999752e-05, 8.426400000000056e-05, 8.441699999999983e-05, 8.372200000000135e-05, 8.425000000000099e-05, 8.394399999999899e-05, 8.373600000000092e-05, 8.458399999999866e-05, 8.456999999999909e-05, 8.433400000000188e-05, 8.448600000000167e-05, 8.441600000000035e-05, 8.425000000000099e-05, 8.46110000000018e-05, 8.369399999999874e-05, 8.43049999999998e-05, 8.456899999999962e-05, 8.433299999999894e-05, 8.436100000000155e-05, 8.43049999999998e-05, 8.442999999999992e-05, 8.423600000000142e-05, 8.425000000000099e-05, 8.450000000000124e-05, 8.440300000000026e-05, 8.437500000000112e-05, 8.372200000000135e-05, 8.436100000000155e-05]</msg>
<status status="PASS" starttime="20201029 18:16:21.674" endtime="20201029 18:16:21.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.669" endtime="20201029 18:16:21.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:21.681" endtime="20201029 18:16:21.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.680" endtime="20201029 18:16:21.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.679" endtime="20201029 18:16:21.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.315" endtime="20201029 18:16:21.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.315" endtime="20201029 18:16:21.702"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.711" endtime="20201029 18:16:21.729"></status>
</kw>
<msg timestamp="20201029 18:16:21.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.709" endtime="20201029 18:16:21.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.731" endtime="20201029 18:16:21.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.733" endtime="20201029 18:16:21.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.707" endtime="20201029 18:16:21.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.705" endtime="20201029 18:16:21.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.743" endtime="20201029 18:16:22.028"></status>
</kw>
<msg timestamp="20201029 18:16:22.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022752653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.741" endtime="20201029 18:16:22.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022752653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.033" endtime="20201029 18:16:22.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.041" endtime="20201029 18:16:22.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.738" endtime="20201029 18:16:22.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.736" endtime="20201029 18:16:22.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:22.048" level="INFO">${RESULT} = [{'diff': 8.533299999999994e-05}, {'diff': 8.545800000000006e-05}, {'diff': 8.531900000000037e-05}, {'diff': 8.540300000000126e-05}, {'diff': 8.522199999999938e-05}, {'diff': 8.536099999999908e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:22.045" endtime="20201029 18:16:22.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:22.053" level="INFO">${ACCURACY} = {'diff': [8.533299999999994e-05, 8.545800000000006e-05, 8.531900000000037e-05, 8.540300000000126e-05, 8.522199999999938e-05, 8.536099999999908e-05, 8.538900000000169e-05, 8.537499999999865e-05, 8.4902...</msg>
<status status="PASS" starttime="20201029 18:16:22.049" endtime="20201029 18:16:22.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.058" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 18:16:22.057" endtime="20201029 18:16:22.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.060" level="INFO">VALUE: [8.533299999999994e-05, 8.545800000000006e-05, 8.531900000000037e-05, 8.540300000000126e-05, 8.522199999999938e-05, 8.536099999999908e-05, 8.538900000000169e-05, 8.537499999999865e-05, 8.490299999999729e-05, 8.559799999999923e-05, 8.466700000000008e-05, 8.474999999999802e-05, 8.550000000000224e-05, 8.53469999999995e-05, 8.533399999999941e-05, 8.544400000000049e-05, 8.541599999999788e-05, 8.552699999999844e-05, 8.473599999999845e-05, 8.565299999999804e-05, 8.520799999999981e-05, 8.519400000000024e-05, 8.475000000000149e-05, 8.558300000000019e-05, 8.550000000000224e-05, 8.54310000000004e-05, 8.540300000000126e-05, 8.561099999999933e-05, 8.53469999999995e-05, 8.53469999999995e-05, 8.541700000000083e-05, 8.524999999999852e-05, 8.526400000000156e-05, 8.520900000000275e-05, 8.541599999999788e-05, 8.465200000000103e-05, 8.540200000000178e-05, 8.469399999999974e-05, 8.544399999999702e-05, 8.527799999999766e-05, 8.552800000000138e-05, 8.54310000000004e-05, 8.520799999999981e-05, 8.549999999999877e-05, 8.547199999999963e-05, 8.53469999999995e-05, 8.472199999999888e-05, 8.534799999999898e-05, 8.563799999999899e-05, 8.54729999999991e-05]</msg>
<status status="PASS" starttime="20201029 18:16:22.059" endtime="20201029 18:16:22.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.054" endtime="20201029 18:16:22.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:22.065" endtime="20201029 18:16:22.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.064" endtime="20201029 18:16:22.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.063" endtime="20201029 18:16:22.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.703" endtime="20201029 18:16:22.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.702" endtime="20201029 18:16:22.086"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.095" endtime="20201029 18:16:22.114"></status>
</kw>
<msg timestamp="20201029 18:16:22.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.094" endtime="20201029 18:16:22.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.116" endtime="20201029 18:16:22.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.119" endtime="20201029 18:16:22.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.091" endtime="20201029 18:16:22.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.089" endtime="20201029 18:16:22.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.128" endtime="20201029 18:16:22.415"></status>
</kw>
<msg timestamp="20201029 18:16:22.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022750347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.126" endtime="20201029 18:16:22.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022750347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.420" endtime="20201029 18:16:22.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.428" endtime="20201029 18:16:22.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.124" endtime="20201029 18:16:22.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.122" endtime="20201029 18:16:22.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:22.435" level="INFO">${RESULT} = [{'diff': 8.619500000000072e-05}, {'diff': 8.636100000000008e-05}, {'diff': 8.634699999999704e-05}, {'diff': 8.63470000000005e-05}, {'diff': 8.56669999999976e-05}, {'diff': 8.566700000000108e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:22.432" endtime="20201029 18:16:22.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:22.439" level="INFO">${ACCURACY} = {'diff': [8.619500000000072e-05, 8.636100000000008e-05, 8.634699999999704e-05, 8.63470000000005e-05, 8.56669999999976e-05, 8.566700000000108e-05, 8.645899999999707e-05, 8.633400000000041e-05, 8.572199...</msg>
<status status="PASS" starttime="20201029 18:16:22.436" endtime="20201029 18:16:22.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.444" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 18:16:22.443" endtime="20201029 18:16:22.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.446" level="INFO">VALUE: [8.619500000000072e-05, 8.636100000000008e-05, 8.634699999999704e-05, 8.63470000000005e-05, 8.56669999999976e-05, 8.566700000000108e-05, 8.645899999999707e-05, 8.633400000000041e-05, 8.572199999999988e-05, 8.66249999999999e-05, 8.640299999999879e-05, 8.633299999999747e-05, 8.649999999999977e-05, 8.642999999999845e-05, 8.62920000000017e-05, 8.641699999999836e-05, 8.645799999999759e-05, 8.647200000000063e-05, 8.570800000000031e-05, 8.619400000000124e-05, 8.629199999999823e-05, 8.626399999999909e-05, 8.569499999999675e-05, 8.630499999999833e-05, 8.56530000000015e-05, 8.619400000000124e-05, 8.656900000000162e-05, 8.644400000000149e-05, 8.640199999999931e-05, 8.651400000000281e-05, 8.624999999999952e-05, 8.642999999999845e-05, 8.63470000000005e-05, 8.569399999999727e-05, 8.626399999999909e-05, 8.645800000000106e-05, 8.631900000000137e-05, 8.576400000000206e-05, 8.624999999999952e-05, 8.656999999999762e-05, 8.638799999999974e-05, 8.624999999999952e-05, 8.622299999999986e-05, 8.642999999999845e-05, 8.654099999999901e-05, 8.56530000000015e-05, 8.627699999999919e-05, 8.573599999999945e-05, 8.626399999999909e-05, 8.619400000000124e-05]</msg>
<status status="PASS" starttime="20201029 18:16:22.445" endtime="20201029 18:16:22.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.440" endtime="20201029 18:16:22.448"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:22.452" endtime="20201029 18:16:22.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.450" endtime="20201029 18:16:22.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.449" endtime="20201029 18:16:22.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.087" endtime="20201029 18:16:22.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.087" endtime="20201029 18:16:22.472"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.481" endtime="20201029 18:16:22.500"></status>
</kw>
<msg timestamp="20201029 18:16:22.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.480" endtime="20201029 18:16:22.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.502" endtime="20201029 18:16:22.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.505" endtime="20201029 18:16:22.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.477" endtime="20201029 18:16:22.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.475" endtime="20201029 18:16:22.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.514" endtime="20201029 18:16:22.800"></status>
</kw>
<msg timestamp="20201029 18:16:22.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023329292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023416694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.512" endtime="20201029 18:16:22.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023329292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023416694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.804" endtime="20201029 18:16:22.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.813" endtime="20201029 18:16:22.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.510" endtime="20201029 18:16:22.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.508" endtime="20201029 18:16:22.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:22.820" level="INFO">${RESULT} = [{'diff': 8.740199999999684e-05}, {'diff': 8.751300000000087e-05}, {'diff': 8.761100000000133e-05}, {'diff': 8.675000000000002e-05}, {'diff': 8.76250000000009e-05}, {'diff': 8.754100000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:22.816" endtime="20201029 18:16:22.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:22.824" level="INFO">${ACCURACY} = {'diff': [8.740199999999684e-05, 8.751300000000087e-05, 8.761100000000133e-05, 8.675000000000002e-05, 8.76250000000009e-05, 8.754100000000001e-05, 8.727799999999966e-05, 8.751400000000034e-05, 8.71800...</msg>
<status status="PASS" starttime="20201029 18:16:22.821" endtime="20201029 18:16:22.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.829" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 18:16:22.828" endtime="20201029 18:16:22.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.831" level="INFO">VALUE: [8.740199999999684e-05, 8.751300000000087e-05, 8.761100000000133e-05, 8.675000000000002e-05, 8.76250000000009e-05, 8.754100000000001e-05, 8.727799999999966e-05, 8.751400000000034e-05, 8.718000000000267e-05, 8.750000000000077e-05, 8.743099999999893e-05, 8.744399999999902e-05, 8.729199999999923e-05, 8.731999999999837e-05, 8.673600000000045e-05, 8.744500000000197e-05, 8.744500000000197e-05, 8.744500000000197e-05, 8.670899999999732e-05, 8.730499999999933e-05, 8.741599999999988e-05, 8.723600000000095e-05, 8.751400000000034e-05, 8.725000000000052e-05, 8.723600000000095e-05, 8.730499999999933e-05, 8.719399999999877e-05, 8.737500000000065e-05, 8.752799999999991e-05, 8.754199999999948e-05, 8.727799999999966e-05, 8.752799999999991e-05, 8.738900000000022e-05, 8.669499999999775e-05, 8.748700000000068e-05, 8.736099999999761e-05, 8.750000000000077e-05, 8.727799999999966e-05, 8.723600000000095e-05, 8.669399999999827e-05, 8.691599999999938e-05, 8.754100000000001e-05, 8.758300000000219e-05, 8.733300000000194e-05, 8.737500000000065e-05, 8.747199999999816e-05, 8.736100000000108e-05, 8.666700000000208e-05, 8.761100000000133e-05, 8.716700000000258e-05]</msg>
<status status="PASS" starttime="20201029 18:16:22.830" endtime="20201029 18:16:22.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.825" endtime="20201029 18:16:22.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:22.842" endtime="20201029 18:16:22.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.841" endtime="20201029 18:16:22.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.840" endtime="20201029 18:16:22.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.473" endtime="20201029 18:16:22.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.473" endtime="20201029 18:16:22.863"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.872" endtime="20201029 18:16:22.890"></status>
</kw>
<msg timestamp="20201029 18:16:22.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.871" endtime="20201029 18:16:22.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.892" endtime="20201029 18:16:22.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.895" endtime="20201029 18:16:22.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.868" endtime="20201029 18:16:22.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.866" endtime="20201029 18:16:22.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.904" endtime="20201029 18:16:23.190"></status>
</kw>
<msg timestamp="20201029 18:16:23.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02266775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:22.903" endtime="20201029 18:16:23.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02266775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:23.194" endtime="20201029 18:16:23.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.203" endtime="20201029 18:16:23.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.900" endtime="20201029 18:16:23.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.898" endtime="20201029 18:16:23.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:23.210" level="INFO">${RESULT} = [{'diff': 8.801400000000084e-05}, {'diff': 8.854200000000048e-05}, {'diff': 8.859700000000276e-05}, {'diff': 8.859699999999929e-05}, {'diff': 8.840300000000079e-05}, {'diff': 8.855600000000005e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:23.206" endtime="20201029 18:16:23.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:23.215" level="INFO">${ACCURACY} = {'diff': [8.801400000000084e-05, 8.854200000000048e-05, 8.859700000000276e-05, 8.859699999999929e-05, 8.840300000000079e-05, 8.855600000000005e-05, 8.772200000000188e-05, 8.763900000000047e-05, 8.7762...</msg>
<status status="PASS" starttime="20201029 18:16:23.211" endtime="20201029 18:16:23.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.219" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 18:16:23.218" endtime="20201029 18:16:23.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.222" level="INFO">VALUE: [8.801400000000084e-05, 8.854200000000048e-05, 8.859700000000276e-05, 8.859699999999929e-05, 8.840300000000079e-05, 8.855600000000005e-05, 8.772200000000188e-05, 8.763900000000047e-05, 8.776299999999765e-05, 8.859799999999876e-05, 8.845799999999959e-05, 8.825000000000152e-05, 8.863900000000147e-05, 8.822199999999891e-05, 8.84999999999983e-05, 8.848599999999873e-05, 8.86519999999981e-05, 8.847200000000263e-05, 8.818100000000315e-05, 8.822199999999891e-05, 8.836099999999861e-05, 8.831999999999937e-05, 8.829200000000023e-05, 8.856999999999962e-05, 8.837500000000165e-05, 8.856999999999962e-05, 8.774999999999755e-05, 8.822199999999891e-05, 8.768099999999918e-05, 8.854100000000101e-05, 8.825000000000152e-05, 8.819399999999977e-05, 8.840199999999784e-05, 8.862499999999843e-05, 8.855500000000058e-05, 8.852800000000091e-05, 8.833299999999947e-05, 8.847199999999916e-05, 8.851399999999787e-05, 8.855600000000005e-05, 8.818099999999968e-05, 8.827800000000066e-05, 8.852800000000091e-05, 8.858400000000266e-05, 8.83059999999998e-05, 8.854200000000048e-05, 8.769399999999927e-05, 8.823599999999848e-05, 8.83189999999999e-05, 8.823600000000195e-05]</msg>
<status status="PASS" starttime="20201029 18:16:23.221" endtime="20201029 18:16:23.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.216" endtime="20201029 18:16:23.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:23.227" endtime="20201029 18:16:23.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.226" endtime="20201029 18:16:23.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.224" endtime="20201029 18:16:23.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.864" endtime="20201029 18:16:23.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.864" endtime="20201029 18:16:23.248"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.257" endtime="20201029 18:16:23.275"></status>
</kw>
<msg timestamp="20201029 18:16:23.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.255" endtime="20201029 18:16:23.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.277" endtime="20201029 18:16:23.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.280" endtime="20201029 18:16:23.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.253" endtime="20201029 18:16:23.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.251" endtime="20201029 18:16:23.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.289" endtime="20201029 18:16:23.578"></status>
</kw>
<msg timestamp="20201029 18:16:23.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022781444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022871083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.287" endtime="20201029 18:16:23.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022781444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022871083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.583" endtime="20201029 18:16:23.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.591" endtime="20201029 18:16:23.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.285" endtime="20201029 18:16:23.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.283" endtime="20201029 18:16:23.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:23.598" level="INFO">${RESULT} = [{'diff': 8.9638999999999e-05}, {'diff': 8.936199999999908e-05}, {'diff': 8.947200000000016e-05}, {'diff': 8.930499999999786e-05}, {'diff': 8.916600000000163e-05}, {'diff': 8.925000000000252e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:23.595" endtime="20201029 18:16:23.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:23.602" level="INFO">${ACCURACY} = {'diff': [8.9638999999999e-05, 8.936199999999908e-05, 8.947200000000016e-05, 8.930499999999786e-05, 8.916600000000163e-05, 8.925000000000252e-05, 8.951400000000234e-05, 8.951400000000234e-05, 8.955500...</msg>
<status status="PASS" starttime="20201029 18:16:23.599" endtime="20201029 18:16:23.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.607" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 18:16:23.606" endtime="20201029 18:16:23.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.610" level="INFO">VALUE: [8.9638999999999e-05, 8.936199999999908e-05, 8.947200000000016e-05, 8.930499999999786e-05, 8.916600000000163e-05, 8.925000000000252e-05, 8.951400000000234e-05, 8.951400000000234e-05, 8.955500000000158e-05, 8.954199999999801e-05, 8.940300000000179e-05, 8.929200000000123e-05, 8.947200000000016e-05, 8.920899999999982e-05, 8.93060000000008e-05, 8.8638999999998e-05, 8.963900000000247e-05, 8.93190000000009e-05, 8.945900000000007e-05, 8.955499999999811e-05, 8.945900000000007e-05, 8.966599999999866e-05, 8.955500000000158e-05, 8.869400000000027e-05, 8.955500000000158e-05, 8.959699999999682e-05, 8.954099999999854e-05, 8.920800000000034e-05, 8.919400000000077e-05, 8.926400000000209e-05, 8.94999999999993e-05, 8.869400000000027e-05, 8.919500000000025e-05, 8.923599999999948e-05, 8.926400000000209e-05, 8.947199999999669e-05, 8.963900000000247e-05, 8.933399999999994e-05, 8.937499999999918e-05, 8.870799999999984e-05, 8.936099999999961e-05, 8.93190000000009e-05, 8.91800000000012e-05, 8.959700000000029e-05, 8.923599999999948e-05, 8.951400000000234e-05, 8.927799999999819e-05, 8.959700000000029e-05, 8.873600000000245e-05, 8.956899999999768e-05]</msg>
<status status="PASS" starttime="20201029 18:16:23.608" endtime="20201029 18:16:23.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.603" endtime="20201029 18:16:23.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:23.615" endtime="20201029 18:16:23.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.613" endtime="20201029 18:16:23.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.612" endtime="20201029 18:16:23.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.249" endtime="20201029 18:16:23.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.248" endtime="20201029 18:16:23.636"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.645" endtime="20201029 18:16:23.664"></status>
</kw>
<msg timestamp="20201029 18:16:23.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.643" endtime="20201029 18:16:23.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.665" endtime="20201029 18:16:23.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.668" endtime="20201029 18:16:23.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.640" endtime="20201029 18:16:23.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.638" endtime="20201029 18:16:23.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.677" endtime="20201029 18:16:23.964"></status>
</kw>
<msg timestamp="20201029 18:16:23.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023318306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023408306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.676" endtime="20201029 18:16:23.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023318306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023408306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.968" endtime="20201029 18:16:23.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.977" endtime="20201029 18:16:23.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.673" endtime="20201029 18:16:23.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.671" endtime="20201029 18:16:23.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:23.984" level="INFO">${RESULT} = [{'diff': 8.99999999999998e-05}, {'diff': 8.969500000000075e-05}, {'diff': 8.962499999999943e-05}, {'diff': 9.025000000000005e-05}, {'diff': 9.059699999999782e-05}, {'diff': 9.041600000000288e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:23.981" endtime="20201029 18:16:23.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:23.988" level="INFO">${ACCURACY} = {'diff': [8.99999999999998e-05, 8.969500000000075e-05, 8.962499999999943e-05, 9.025000000000005e-05, 9.059699999999782e-05, 9.041600000000288e-05, 9.047200000000116e-05, 9.01939999999983e-05, 9.030499...</msg>
<status status="PASS" starttime="20201029 18:16:23.985" endtime="20201029 18:16:23.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.993" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 18:16:23.992" endtime="20201029 18:16:23.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.995" level="INFO">VALUE: [8.99999999999998e-05, 8.969500000000075e-05, 8.962499999999943e-05, 9.025000000000005e-05, 9.059699999999782e-05, 9.041600000000288e-05, 9.047200000000116e-05, 9.01939999999983e-05, 9.030499999999886e-05, 8.972200000000041e-05, 8.972200000000041e-05, 8.970800000000084e-05, 8.973599999999998e-05, 9.025000000000005e-05, 9.027799999999919e-05, 9.027799999999919e-05, 9.062499999999696e-05, 9.0639e-05, 9.056999999999815e-05, 9.03199999999979e-05, 9.049999999999683e-05, 9.058400000000119e-05, 8.973599999999998e-05, 9.025000000000005e-05, 9.056900000000215e-05, 9.019400000000177e-05, 9.054099999999954e-05, 9.026399999999962e-05, 9.01800000000022e-05, 9.048600000000073e-05, 9.038899999999975e-05, 9.030599999999833e-05, 9.037500000000018e-05, 9.058300000000172e-05, 9.018099999999821e-05, 8.976299999999965e-05, 9.048600000000073e-05, 8.973599999999998e-05, 8.962499999999943e-05, 9.025000000000005e-05, 9.019499999999778e-05, 8.966600000000213e-05, 9.041599999999941e-05, 9.055499999999911e-05, 8.970800000000084e-05, 9.055499999999911e-05, 9.058299999999825e-05, 9.054200000000248e-05, 9.045800000000159e-05, 9.032000000000137e-05]</msg>
<status status="PASS" starttime="20201029 18:16:23.994" endtime="20201029 18:16:23.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.989" endtime="20201029 18:16:23.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:24.002" endtime="20201029 18:16:24.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.000" endtime="20201029 18:16:24.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.999" endtime="20201029 18:16:24.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.636" endtime="20201029 18:16:24.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.636" endtime="20201029 18:16:24.022"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.032" endtime="20201029 18:16:24.050"></status>
</kw>
<msg timestamp="20201029 18:16:24.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.030" endtime="20201029 18:16:24.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.051" endtime="20201029 18:16:24.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.054" endtime="20201029 18:16:24.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.027" endtime="20201029 18:16:24.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.025" endtime="20201029 18:16:24.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.063" endtime="20201029 18:16:24.349"></status>
</kw>
<msg timestamp="20201029 18:16:24.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022691778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.062" endtime="20201029 18:16:24.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022691778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.354" endtime="20201029 18:16:24.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.362" endtime="20201029 18:16:24.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.059" endtime="20201029 18:16:24.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.057" endtime="20201029 18:16:24.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:24.369" level="INFO">${RESULT} = [{'diff': 9.097199999999819e-05}, {'diff': 9.130599999999933e-05}, {'diff': 9.144499999999903e-05}, {'diff': 9.137500000000118e-05}, {'diff': 9.131899999999943e-05}, {'diff': 9.126400000000062e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:24.366" endtime="20201029 18:16:24.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:24.374" level="INFO">${ACCURACY} = {'diff': [9.097199999999819e-05, 9.130599999999933e-05, 9.144499999999903e-05, 9.137500000000118e-05, 9.131899999999943e-05, 9.126400000000062e-05, 9.120799999999887e-05, 9.066599999999966e-05, 9.1541...</msg>
<status status="PASS" starttime="20201029 18:16:24.370" endtime="20201029 18:16:24.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.379" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 18:16:24.378" endtime="20201029 18:16:24.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.381" level="INFO">VALUE: [9.097199999999819e-05, 9.130599999999933e-05, 9.144499999999903e-05, 9.137500000000118e-05, 9.131899999999943e-05, 9.126400000000062e-05, 9.120799999999887e-05, 9.066599999999966e-05, 9.154100000000054e-05, 9.161099999999839e-05, 9.116600000000016e-05, 9.06939999999988e-05, 9.142999999999998e-05, 9.077799999999969e-05, 9.123599999999801e-05, 9.137500000000118e-05, 9.148600000000173e-05, 9.075000000000055e-05, 9.119500000000225e-05, 9.159800000000176e-05, 9.124999999999758e-05, 9.113899999999703e-05, 9.144399999999955e-05, 9.119499999999878e-05, 9.075000000000055e-05, 9.122200000000191e-05, 9.094399999999905e-05, 9.06520000000001e-05, 9.120799999999887e-05, 9.066699999999914e-05, 9.143099999999946e-05, 9.070799999999837e-05, 9.06670000000026e-05, 9.119400000000277e-05, 9.076400000000012e-05, 9.123600000000148e-05, 9.073599999999751e-05, 9.14719999999987e-05, 9.123600000000148e-05, 9.14870000000012e-05, 9.15000000000013e-05, 9.151400000000087e-05, 9.133400000000194e-05, 9.15130000000014e-05, 9.142999999999998e-05, 9.154200000000001e-05, 9.148600000000173e-05, 9.11800000000032e-05, 9.148599999999826e-05, 9.0639e-05]</msg>
<status status="PASS" starttime="20201029 18:16:24.380" endtime="20201029 18:16:24.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.375" endtime="20201029 18:16:24.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:24.386" endtime="20201029 18:16:24.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.385" endtime="20201029 18:16:24.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.384" endtime="20201029 18:16:24.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.023" endtime="20201029 18:16:24.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.023" endtime="20201029 18:16:24.407"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.416" endtime="20201029 18:16:24.435"></status>
</kw>
<msg timestamp="20201029 18:16:24.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.415" endtime="20201029 18:16:24.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.437" endtime="20201029 18:16:24.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.439" endtime="20201029 18:16:24.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.412" endtime="20201029 18:16:24.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.410" endtime="20201029 18:16:24.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.449" endtime="20201029 18:16:24.736"></status>
</kw>
<msg timestamp="20201029 18:16:24.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.447" endtime="20201029 18:16:24.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.740" endtime="20201029 18:16:24.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.749" endtime="20201029 18:16:24.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.445" endtime="20201029 18:16:24.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.443" endtime="20201029 18:16:24.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:24.755" level="INFO">${RESULT} = [{'diff': 9.220799999999987e-05}, {'diff': 9.21940000000003e-05}, {'diff': 9.262499999999896e-05}, {'diff': 9.172199999999894e-05}, {'diff': 9.179100000000079e-05}, {'diff': 9.240299999999785e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:24.752" endtime="20201029 18:16:24.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:24.760" level="INFO">${ACCURACY} = {'diff': [9.220799999999987e-05, 9.21940000000003e-05, 9.262499999999896e-05, 9.172199999999894e-05, 9.179100000000079e-05, 9.240299999999785e-05, 9.230600000000033e-05, 9.240300000000132e-05, 9.21950...</msg>
<status status="PASS" starttime="20201029 18:16:24.757" endtime="20201029 18:16:24.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.765" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 18:16:24.764" endtime="20201029 18:16:24.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.767" level="INFO">VALUE: [9.220799999999987e-05, 9.21940000000003e-05, 9.262499999999896e-05, 9.172199999999894e-05, 9.179100000000079e-05, 9.240299999999785e-05, 9.230600000000033e-05, 9.240300000000132e-05, 9.219500000000325e-05, 9.242999999999751e-05, 9.254200000000101e-05, 9.238900000000175e-05, 9.16659999999972e-05, 9.23879999999988e-05, 9.243000000000098e-05, 9.21940000000003e-05, 9.252799999999797e-05, 9.220799999999987e-05, 9.234699999999957e-05, 9.241699999999742e-05, 9.234699999999957e-05, 9.254200000000101e-05, 9.236099999999914e-05, 9.24719999999997e-05, 9.238900000000175e-05, 9.222199999999944e-05, 9.255600000000058e-05, 9.172300000000189e-05, 9.223700000000196e-05, 9.172299999999842e-05, 9.245800000000012e-05, 9.254100000000154e-05, 9.255499999999764e-05, 9.163899999999753e-05, 9.2333e-05, 9.261099999999939e-05, 9.2333e-05, 9.244400000000055e-05, 9.168099999999971e-05, 9.257000000000015e-05, 9.223599999999901e-05, 9.173599999999851e-05, 9.230600000000033e-05, 9.225000000000205e-05, 9.236099999999914e-05, 9.233399999999947e-05, 9.240200000000184e-05, 9.238899999999828e-05, 9.251299999999893e-05, 9.248600000000273e-05]</msg>
<status status="PASS" starttime="20201029 18:16:24.766" endtime="20201029 18:16:24.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.761" endtime="20201029 18:16:24.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:24.772" endtime="20201029 18:16:24.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.771" endtime="20201029 18:16:24.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.770" endtime="20201029 18:16:24.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.408" endtime="20201029 18:16:24.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.408" endtime="20201029 18:16:24.793"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.802" endtime="20201029 18:16:24.824"></status>
</kw>
<msg timestamp="20201029 18:16:24.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.800" endtime="20201029 18:16:24.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.826" endtime="20201029 18:16:24.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.829" endtime="20201029 18:16:24.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.798" endtime="20201029 18:16:24.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.796" endtime="20201029 18:16:24.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.838" endtime="20201029 18:16:25.123"></status>
</kw>
<msg timestamp="20201029 18:16:25.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025871181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025964625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.836" endtime="20201029 18:16:25.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025871181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025964625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.128" endtime="20201029 18:16:25.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.136" endtime="20201029 18:16:25.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.834" endtime="20201029 18:16:25.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.832" endtime="20201029 18:16:25.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:25.143" level="INFO">${RESULT} = [{'diff': 9.344400000000155e-05}, {'diff': 9.324999999999958e-05}, {'diff': 9.340299999999885e-05}, {'diff': 9.352800000000244e-05}, {'diff': 9.34590000000006e-05}, {'diff': 9.336100000000014e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:25.139" endtime="20201029 18:16:25.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:25.147" level="INFO">${ACCURACY} = {'diff': [9.344400000000155e-05, 9.324999999999958e-05, 9.340299999999885e-05, 9.352800000000244e-05, 9.34590000000006e-05, 9.336100000000014e-05, 9.354200000000201e-05, 9.345899999999713e-05, 9.27499...</msg>
<status status="PASS" starttime="20201029 18:16:25.144" endtime="20201029 18:16:25.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.152" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 18:16:25.151" endtime="20201029 18:16:25.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.154" level="INFO">VALUE: [9.344400000000155e-05, 9.324999999999958e-05, 9.340299999999885e-05, 9.352800000000244e-05, 9.34590000000006e-05, 9.336100000000014e-05, 9.354200000000201e-05, 9.345899999999713e-05, 9.274999999999908e-05, 9.361100000000039e-05, 9.349999999999983e-05, 9.323600000000001e-05, 9.327699999999925e-05, 9.268099999999724e-05, 9.343000000000198e-05, 9.352800000000244e-05, 9.340299999999885e-05, 9.358300000000125e-05, 9.323600000000001e-05, 9.276399999999865e-05, 9.274999999999908e-05, 9.348600000000026e-05, 9.341599999999894e-05, 9.344500000000103e-05, 9.36659999999992e-05, 9.347199999999722e-05, 9.343100000000146e-05, 9.26659999999982e-05, 9.337500000000318e-05, 9.362499999999996e-05, 9.344399999999808e-05, 9.343000000000198e-05, 9.352799999999897e-05, 9.320800000000087e-05, 9.266699999999767e-05, 9.268100000000071e-05, 9.318099999999774e-05, 9.343100000000146e-05, 9.330600000000133e-05, 9.318100000000121e-05, 9.320900000000035e-05, 9.266700000000114e-05, 9.359700000000082e-05, 9.2639000000002e-05, 9.26659999999982e-05, 9.356900000000168e-05, 9.336100000000014e-05, 9.32079999999974e-05, 9.348600000000026e-05, 9.34590000000006e-05]</msg>
<status status="PASS" starttime="20201029 18:16:25.153" endtime="20201029 18:16:25.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.148" endtime="20201029 18:16:25.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:25.160" endtime="20201029 18:16:25.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.159" endtime="20201029 18:16:25.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.157" endtime="20201029 18:16:25.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.794" endtime="20201029 18:16:25.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.793" endtime="20201029 18:16:25.181"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.190" endtime="20201029 18:16:25.209"></status>
</kw>
<msg timestamp="20201029 18:16:25.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.188" endtime="20201029 18:16:25.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.210" endtime="20201029 18:16:25.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.213" endtime="20201029 18:16:25.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.186" endtime="20201029 18:16:25.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.183" endtime="20201029 18:16:25.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.222" endtime="20201029 18:16:25.509"></status>
</kw>
<msg timestamp="20201029 18:16:25.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022421833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.221" endtime="20201029 18:16:25.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022421833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.513" endtime="20201029 18:16:25.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.522" endtime="20201029 18:16:25.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.218" endtime="20201029 18:16:25.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.216" endtime="20201029 18:16:25.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:25.529" level="INFO">${RESULT} = [{'diff': 9.455499999999964e-05}, {'diff': 9.454100000000007e-05}, {'diff': 9.444400000000255e-05}, {'diff': 9.423600000000101e-05}, {'diff': 9.461100000000139e-05}, {'diff': 9.438900000000028e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:25.525" endtime="20201029 18:16:25.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:25.534" level="INFO">${ACCURACY} = {'diff': [9.455499999999964e-05, 9.454100000000007e-05, 9.444400000000255e-05, 9.423600000000101e-05, 9.461100000000139e-05, 9.438900000000028e-05, 9.440299999999985e-05, 9.366699999999867e-05, 9.4236...</msg>
<status status="PASS" starttime="20201029 18:16:25.530" endtime="20201029 18:16:25.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.539" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 18:16:25.537" endtime="20201029 18:16:25.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.541" level="INFO">VALUE: [9.455499999999964e-05, 9.454100000000007e-05, 9.444400000000255e-05, 9.423600000000101e-05, 9.461100000000139e-05, 9.438900000000028e-05, 9.440299999999985e-05, 9.366699999999867e-05, 9.423600000000101e-05, 9.44590000000016e-05, 9.44590000000016e-05, 9.370900000000085e-05, 9.45140000000004e-05, 9.45140000000004e-05, 9.440299999999985e-05, 9.422299999999745e-05, 9.429099999999982e-05, 9.372200000000094e-05, 9.45270000000005e-05, 9.458299999999878e-05, 9.426400000000015e-05, 9.423600000000101e-05, 9.44859999999978e-05, 9.441699999999942e-05, 9.370800000000137e-05, 9.440299999999985e-05, 9.373600000000051e-05, 9.454199999999954e-05, 9.438900000000028e-05, 9.425000000000058e-05, 9.420900000000135e-05, 9.454199999999954e-05, 9.367999999999876e-05, 9.45140000000004e-05, 9.43469999999981e-05, 9.430499999999939e-05, 9.41659999999997e-05, 9.44019999999969e-05, 9.427799999999972e-05, 9.420800000000187e-05, 9.433299999999853e-05, 9.425000000000058e-05, 9.436099999999767e-05, 9.427799999999972e-05, 9.458399999999825e-05, 9.373600000000051e-05, 9.423600000000101e-05, 9.426400000000015e-05, 9.440299999999985e-05, 9.434800000000104e-05]</msg>
<status status="PASS" starttime="20201029 18:16:25.540" endtime="20201029 18:16:25.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.535" endtime="20201029 18:16:25.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:25.546" endtime="20201029 18:16:25.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.545" endtime="20201029 18:16:25.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.543" endtime="20201029 18:16:25.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.182" endtime="20201029 18:16:25.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.181" endtime="20201029 18:16:25.567"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.576" endtime="20201029 18:16:25.595"></status>
</kw>
<msg timestamp="20201029 18:16:25.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.574" endtime="20201029 18:16:25.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.596" endtime="20201029 18:16:25.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.599" endtime="20201029 18:16:25.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.572" endtime="20201029 18:16:25.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.570" endtime="20201029 18:16:25.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.608" endtime="20201029 18:16:25.895"></status>
</kw>
<msg timestamp="20201029 18:16:25.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022689958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.607" endtime="20201029 18:16:25.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022689958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.900" endtime="20201029 18:16:25.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.908" endtime="20201029 18:16:25.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.604" endtime="20201029 18:16:25.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.602" endtime="20201029 18:16:25.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:25.915" level="INFO">${RESULT} = [{'diff': 9.508299999999928e-05}, {'diff': 9.46530000000001e-05}, {'diff': 9.541700000000042e-05}, {'diff': 9.545899999999913e-05}, {'diff': 9.533299999999953e-05}, {'diff': 9.530600000000333e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:25.912" endtime="20201029 18:16:25.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:25.919" level="INFO">${ACCURACY} = {'diff': [9.508299999999928e-05, 9.46530000000001e-05, 9.541700000000042e-05, 9.545899999999913e-05, 9.533299999999953e-05, 9.530600000000333e-05, 9.522199999999897e-05, 9.54859999999988e-05, 9.530599...</msg>
<status status="PASS" starttime="20201029 18:16:25.916" endtime="20201029 18:16:25.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.924" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 18:16:25.923" endtime="20201029 18:16:25.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.926" level="INFO">VALUE: [9.508299999999928e-05, 9.46530000000001e-05, 9.541700000000042e-05, 9.545899999999913e-05, 9.533299999999953e-05, 9.530600000000333e-05, 9.522199999999897e-05, 9.54859999999988e-05, 9.530599999999986e-05, 9.554200000000054e-05, 9.550000000000183e-05, 9.531999999999943e-05, 9.531999999999943e-05, 9.522199999999897e-05, 9.55270000000015e-05, 9.526400000000115e-05, 9.465200000000062e-05, 9.467999999999976e-05, 9.467999999999976e-05, 9.558299999999978e-05, 9.555500000000064e-05, 9.561099999999892e-05, 9.486099999999817e-05, 9.562499999999849e-05, 9.544499999999956e-05, 9.472199999999847e-05, 9.541700000000042e-05, 9.558400000000272e-05, 9.527800000000072e-05, 9.529199999999682e-05, 9.54859999999988e-05, 9.472199999999847e-05, 9.527700000000125e-05, 9.473600000000151e-05, 9.465200000000062e-05, 9.467999999999976e-05, 9.512500000000146e-05, 9.529100000000082e-05, 9.472199999999847e-05, 9.545799999999965e-05, 9.541700000000042e-05, 9.55279999999975e-05, 9.545899999999913e-05, 9.472199999999847e-05, 9.519499999999931e-05, 9.537500000000171e-05, 9.469499999999881e-05, 9.541600000000094e-05, 9.56530000000011e-05, 9.518099999999974e-05]</msg>
<status status="PASS" starttime="20201029 18:16:25.925" endtime="20201029 18:16:25.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.920" endtime="20201029 18:16:25.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:25.932" endtime="20201029 18:16:25.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.930" endtime="20201029 18:16:25.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.929" endtime="20201029 18:16:25.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.568" endtime="20201029 18:16:25.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.567" endtime="20201029 18:16:25.952"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.962" endtime="20201029 18:16:25.981"></status>
</kw>
<msg timestamp="20201029 18:16:25.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.960" endtime="20201029 18:16:25.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.983" endtime="20201029 18:16:25.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.986" endtime="20201029 18:16:25.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.957" endtime="20201029 18:16:25.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.955" endtime="20201029 18:16:25.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.996" endtime="20201029 18:16:26.282"></status>
</kw>
<msg timestamp="20201029 18:16:26.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023715583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023811375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.994" endtime="20201029 18:16:26.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023715583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023811375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.287" endtime="20201029 18:16:26.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.295" endtime="20201029 18:16:26.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.991" endtime="20201029 18:16:26.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.989" endtime="20201029 18:16:26.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:26.302" level="INFO">${RESULT} = [{'diff': 9.579200000000079e-05}, {'diff': 9.576299999999871e-05}, {'diff': 9.574999999999861e-05}, {'diff': 9.6334e-05}, {'diff': 9.568100000000024e-05}, {'diff': 9.563899999999806e-05}, {'diff': 9.6...</msg>
<status status="PASS" starttime="20201029 18:16:26.299" endtime="20201029 18:16:26.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:26.306" level="INFO">${ACCURACY} = {'diff': [9.579200000000079e-05, 9.576299999999871e-05, 9.574999999999861e-05, 9.6334e-05, 9.568100000000024e-05, 9.563899999999806e-05, 9.637500000000271e-05, 9.64729999999997e-05, 9.647200000000022e...</msg>
<status status="PASS" starttime="20201029 18:16:26.303" endtime="20201029 18:16:26.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.311" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 18:16:26.310" endtime="20201029 18:16:26.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.314" level="INFO">VALUE: [9.579200000000079e-05, 9.576299999999871e-05, 9.574999999999861e-05, 9.6334e-05, 9.568100000000024e-05, 9.563899999999806e-05, 9.637500000000271e-05, 9.64729999999997e-05, 9.647200000000022e-05, 9.65409999999986e-05, 9.654100000000207e-05, 9.641599999999848e-05, 9.572199999999947e-05, 9.64859999999998e-05, 9.622199999999997e-05, 9.654200000000154e-05, 9.637500000000271e-05, 9.566700000000067e-05, 9.563900000000153e-05, 9.576400000000165e-05, 9.647200000000022e-05, 9.622199999999997e-05, 9.630499999999792e-05, 9.655600000000111e-05, 9.565299999999763e-05, 9.645800000000065e-05, 9.663799999999959e-05, 9.651399999999893e-05, 9.619399999999736e-05, 9.630500000000139e-05, 9.624999999999911e-05, 9.63470000000001e-05, 9.61669999999977e-05, 9.663899999999906e-05, 9.623600000000301e-05, 9.574999999999861e-05, 9.657000000000068e-05, 9.623599999999954e-05, 9.636099999999967e-05, 9.66530000000021e-05, 9.652800000000197e-05, 9.634800000000304e-05, 9.62920000000013e-05, 9.654200000000154e-05, 9.651299999999946e-05, 9.591600000000144e-05, 9.568000000000076e-05, 9.566599999999773e-05, 9.645800000000065e-05, 9.63470000000001e-05]</msg>
<status status="PASS" starttime="20201029 18:16:26.312" endtime="20201029 18:16:26.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.307" endtime="20201029 18:16:26.316"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:26.320" endtime="20201029 18:16:26.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.318" endtime="20201029 18:16:26.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.317" endtime="20201029 18:16:26.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.953" endtime="20201029 18:16:26.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.953" endtime="20201029 18:16:26.340"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.350" endtime="20201029 18:16:26.369"></status>
</kw>
<msg timestamp="20201029 18:16:26.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.348" endtime="20201029 18:16:26.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.371" endtime="20201029 18:16:26.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.373" endtime="20201029 18:16:26.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.345" endtime="20201029 18:16:26.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.343" endtime="20201029 18:16:26.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.383" endtime="20201029 18:16:26.668"></status>
</kw>
<msg timestamp="20201029 18:16:26.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022582917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.381" endtime="20201029 18:16:26.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022582917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.672" endtime="20201029 18:16:26.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.681" endtime="20201029 18:16:26.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.378" endtime="20201029 18:16:26.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.376" endtime="20201029 18:16:26.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:26.688" level="INFO">${RESULT} = [{'diff': 9.72920000000023e-05}, {'diff': 9.750000000000036e-05}, {'diff': 9.754199999999907e-05}, {'diff': 9.727799999999925e-05}, {'diff': 9.727699999999978e-05}, {'diff': 9.741700000000242e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:26.684" endtime="20201029 18:16:26.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:26.693" level="INFO">${ACCURACY} = {'diff': [9.72920000000023e-05, 9.750000000000036e-05, 9.754199999999907e-05, 9.727799999999925e-05, 9.727699999999978e-05, 9.741700000000242e-05, 9.744400000000208e-05, 9.761100000000092e-05, 9.75969...</msg>
<status status="PASS" starttime="20201029 18:16:26.689" endtime="20201029 18:16:26.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.697" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 18:16:26.696" endtime="20201029 18:16:26.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.700" level="INFO">VALUE: [9.72920000000023e-05, 9.750000000000036e-05, 9.754199999999907e-05, 9.727799999999925e-05, 9.727699999999978e-05, 9.741700000000242e-05, 9.744400000000208e-05, 9.761100000000092e-05, 9.759699999999788e-05, 9.730500000000239e-05, 9.745899999999766e-05, 9.740299999999938e-05, 9.731899999999849e-05, 9.736100000000067e-05, 9.74860000000008e-05, 9.665299999999863e-05, 9.730600000000186e-05, 9.676399999999918e-05, 9.738899999999981e-05, 9.727800000000272e-05, 9.657000000000068e-05, 9.741599999999948e-05, 9.719500000000131e-05, 9.747200000000122e-05, 9.763900000000006e-05, 9.758299999999831e-05, 9.756899999999874e-05, 9.740300000000285e-05, 9.727799999999925e-05, 9.755599999999864e-05, 9.738899999999981e-05, 9.67080000000009e-05, 9.669500000000081e-05, 9.742999999999905e-05, 9.674999999999961e-05, 9.750000000000036e-05, 9.679099999999885e-05, 9.720900000000088e-05, 9.733300000000153e-05, 9.719400000000183e-05, 9.727699999999978e-05, 9.722200000000097e-05, 9.751399999999993e-05, 9.741599999999948e-05, 9.72920000000023e-05, 9.751399999999993e-05, 9.727799999999925e-05, 9.668100000000124e-05, 9.727799999999925e-05, 9.666700000000167e-05]</msg>
<status status="PASS" starttime="20201029 18:16:26.699" endtime="20201029 18:16:26.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.694" endtime="20201029 18:16:26.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:26.705" endtime="20201029 18:16:26.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.704" endtime="20201029 18:16:26.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.702" endtime="20201029 18:16:26.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.341" endtime="20201029 18:16:26.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.341" endtime="20201029 18:16:26.726"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.735" endtime="20201029 18:16:26.753"></status>
</kw>
<msg timestamp="20201029 18:16:26.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.733" endtime="20201029 18:16:26.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.755" endtime="20201029 18:16:26.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.757" endtime="20201029 18:16:26.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.731" endtime="20201029 18:16:26.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.729" endtime="20201029 18:16:26.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.767" endtime="20201029 18:16:27.054"></status>
</kw>
<msg timestamp="20201029 18:16:27.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.765" endtime="20201029 18:16:27.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.058" endtime="20201029 18:16:27.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.067" endtime="20201029 18:16:27.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.762" endtime="20201029 18:16:27.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.761" endtime="20201029 18:16:27.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.073" level="INFO">${RESULT} = [{'diff': 9.816700000000317e-05}, {'diff': 9.869399999999987e-05}, {'diff': 9.77080000000019e-05}, {'diff': 9.856899999999974e-05}, {'diff': 9.855500000000017e-05}, {'diff': 9.833299999999906e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:27.070" endtime="20201029 18:16:27.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:27.078" level="INFO">${ACCURACY} = {'diff': [9.816700000000317e-05, 9.869399999999987e-05, 9.77080000000019e-05, 9.856899999999974e-05, 9.855500000000017e-05, 9.833299999999906e-05, 9.859699999999888e-05, 9.861099999999845e-05, 9.77080...</msg>
<status status="PASS" starttime="20201029 18:16:27.074" endtime="20201029 18:16:27.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.082" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 18:16:27.081" endtime="20201029 18:16:27.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.085" level="INFO">VALUE: [9.816700000000317e-05, 9.869399999999987e-05, 9.77080000000019e-05, 9.856899999999974e-05, 9.855500000000017e-05, 9.833299999999906e-05, 9.859699999999888e-05, 9.861099999999845e-05, 9.77080000000019e-05, 9.838900000000081e-05, 9.773700000000052e-05, 9.841699999999995e-05, 9.826400000000068e-05, 9.776400000000018e-05, 9.81669999999997e-05, 9.836100000000167e-05, 9.81669999999997e-05, 9.770900000000138e-05, 9.843000000000005e-05, 9.820799999999894e-05, 9.83470000000021e-05, 9.836100000000167e-05, 9.861100000000192e-05, 9.841699999999995e-05, 9.844399999999962e-05, 9.83609999999982e-05, 9.844399999999962e-05, 9.847199999999875e-05, 9.848599999999832e-05, 9.845899999999866e-05, 9.848700000000127e-05, 9.840300000000038e-05, 9.837499999999777e-05, 9.84999999999979e-05, 9.820899999999841e-05, 9.81669999999997e-05, 9.825000000000111e-05, 9.82080000000024e-05, 9.837500000000124e-05, 9.825000000000111e-05, 9.843000000000005e-05, 9.841699999999995e-05, 9.775000000000061e-05, 9.823600000000154e-05, 9.85280000000005e-05, 9.843099999999952e-05, 9.818100000000274e-05, 9.822200000000197e-05, 9.765299999999963e-05, 9.85280000000005e-05]</msg>
<status status="PASS" starttime="20201029 18:16:27.084" endtime="20201029 18:16:27.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.079" endtime="20201029 18:16:27.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:27.090" endtime="20201029 18:16:27.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.089" endtime="20201029 18:16:27.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.087" endtime="20201029 18:16:27.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.727" endtime="20201029 18:16:27.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.726" endtime="20201029 18:16:27.111"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.120" endtime="20201029 18:16:27.141"></status>
</kw>
<msg timestamp="20201029 18:16:27.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.118" endtime="20201029 18:16:27.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.143" endtime="20201029 18:16:27.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.145" endtime="20201029 18:16:27.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.116" endtime="20201029 18:16:27.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.113" endtime="20201029 18:16:27.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.155" endtime="20201029 18:16:27.441"></status>
</kw>
<msg timestamp="20201029 18:16:27.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023814931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023914472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.153" endtime="20201029 18:16:27.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023814931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023914472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.446" endtime="20201029 18:16:27.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.454" endtime="20201029 18:16:27.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.150" endtime="20201029 18:16:27.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.149" endtime="20201029 18:16:27.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.461" level="INFO">${RESULT} = [{'diff': 9.954099999999813e-05}, {'diff': 9.931999999999996e-05}, {'diff': 9.963900000000206e-05}, {'diff': 9.931900000000049e-05}, {'diff': 9.945899999999966e-05}, {'diff': 9.91939999999969e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:27.458" endtime="20201029 18:16:27.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:27.465" level="INFO">${ACCURACY} = {'diff': [9.954099999999813e-05, 9.931999999999996e-05, 9.963900000000206e-05, 9.931900000000049e-05, 9.945899999999966e-05, 9.91939999999969e-05, 9.941700000000095e-05, 9.959699999999988e-05, 9.95279...</msg>
<status status="PASS" starttime="20201029 18:16:27.462" endtime="20201029 18:16:27.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.470" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 18:16:27.469" endtime="20201029 18:16:27.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.472" level="INFO">VALUE: [9.954099999999813e-05, 9.931999999999996e-05, 9.963900000000206e-05, 9.931900000000049e-05, 9.945899999999966e-05, 9.91939999999969e-05, 9.941700000000095e-05, 9.959699999999988e-05, 9.952799999999803e-05, 9.945899999999966e-05, 9.958399999999978e-05, 9.94730000000027e-05, 9.923699999999855e-05, 9.95280000000015e-05, 9.931900000000049e-05, 9.955500000000117e-05, 9.95410000000016e-05, 9.933300000000006e-05, 9.865300000000063e-05, 9.859699999999888e-05, 9.86670000000002e-05, 9.92219999999995e-05, 9.91939999999969e-05, 9.890299999999741e-05, 9.8721999999999e-05, 9.966699999999773e-05, 9.961199999999892e-05, 9.950000000000236e-05, 9.957000000000021e-05, 9.955500000000117e-05, 9.931900000000049e-05, 9.924999999999864e-05, 9.958300000000031e-05, 9.934699999999963e-05, 9.951400000000193e-05, 9.95280000000015e-05, 9.890299999999741e-05, 9.952799999999803e-05, 9.873599999999857e-05, 9.937499999999877e-05, 9.870799999999944e-05, 9.951399999999846e-05, 9.934699999999963e-05, 9.863900000000106e-05, 9.876400000000118e-05, 9.920900000000288e-05, 9.937499999999877e-05, 9.86670000000002e-05, 9.92219999999995e-05, 9.908299999999981e-05]</msg>
<status status="PASS" starttime="20201029 18:16:27.471" endtime="20201029 18:16:27.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.466" endtime="20201029 18:16:27.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:27.479" endtime="20201029 18:16:27.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.477" endtime="20201029 18:16:27.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.476" endtime="20201029 18:16:27.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.112" endtime="20201029 18:16:27.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.111" endtime="20201029 18:16:27.499"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.508" endtime="20201029 18:16:27.527"></status>
</kw>
<msg timestamp="20201029 18:16:27.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.507" endtime="20201029 18:16:27.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.529" endtime="20201029 18:16:27.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.532" endtime="20201029 18:16:27.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.504" endtime="20201029 18:16:27.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.502" endtime="20201029 18:16:27.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.541" endtime="20201029 18:16:27.826"></status>
</kw>
<msg timestamp="20201029 18:16:27.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.539" endtime="20201029 18:16:27.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.831" endtime="20201029 18:16:27.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.839" endtime="20201029 18:16:27.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.537" endtime="20201029 18:16:27.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.535" endtime="20201029 18:16:27.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.846" level="INFO">${RESULT} = [{'diff': 9.984700000000013e-05}, {'diff': 0.00010045800000000119}, {'diff': 0.00010041699999999848}, {'diff': 0.00010029200000000182}, {'diff': 0.00010023600000000008}, {'diff': 0.000100415999999999}...</msg>
<status status="PASS" starttime="20201029 18:16:27.842" endtime="20201029 18:16:27.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:27.851" level="INFO">${ACCURACY} = {'diff': [9.984700000000013e-05, 0.00010045800000000119, 0.00010041699999999848, 0.00010029200000000182, 0.00010023600000000008, 0.000100415999999999, 0.00010059699999999741, 0.00010026399999999921, 9...</msg>
<status status="PASS" starttime="20201029 18:16:27.847" endtime="20201029 18:16:27.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.856" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 18:16:27.854" endtime="20201029 18:16:27.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.858" level="INFO">VALUE: [9.984700000000013e-05, 0.00010045800000000119, 0.00010041699999999848, 0.00010029200000000182, 0.00010023600000000008, 0.000100415999999999, 0.00010059699999999741, 0.00010026399999999921, 9.969499999999687e-05, 0.00010047300000000023, 0.00010059700000000088, 0.00010058400000000078, 0.00010030500000000192, 0.0001001939999999979, 0.00010044400000000162, 0.00010055500000000217, 0.00010052799999999903, 0.0001001800000000018, 0.00010031900000000149, 0.0001002220000000005, 0.00010058399999999731, 0.0001003610000000002, 0.00010040300000000238, 0.00010020900000000041, 9.96670000000012e-05, 9.969500000000034e-05, 0.00010040199999999944, 0.00010048600000000033, 0.00010042999999999858, 0.0001005419999999986, 0.00010024999999999964, 0.00010054099999999913, 0.00010029100000000235, 0.00010056899999999827, 0.00010019400000000137, 0.00010047200000000076, 0.00010034700000000063, 0.00010061100000000045, 0.00010034700000000063, 0.00010027799999999878, 0.00010034700000000063, 0.00010015299999999866, 9.970899999999991e-05, 0.00010051299999999999, 9.969400000000087e-05, 9.99159999999985e-05, 0.0001004999999999999, 0.00010040299999999891, 9.970800000000044e-05, 0.00010048600000000033]</msg>
<status status="PASS" starttime="20201029 18:16:27.857" endtime="20201029 18:16:27.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.852" endtime="20201029 18:16:27.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:27.868" endtime="20201029 18:16:27.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.866" endtime="20201029 18:16:27.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.864" endtime="20201029 18:16:27.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.500" endtime="20201029 18:16:27.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.500" endtime="20201029 18:16:27.888"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.898" endtime="20201029 18:16:27.916"></status>
</kw>
<msg timestamp="20201029 18:16:27.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.896" endtime="20201029 18:16:27.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.918" endtime="20201029 18:16:27.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.921" endtime="20201029 18:16:27.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.893" endtime="20201029 18:16:27.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.891" endtime="20201029 18:16:27.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.930" endtime="20201029 18:16:28.217"></status>
</kw>
<msg timestamp="20201029 18:16:28.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.928" endtime="20201029 18:16:28.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.221" endtime="20201029 18:16:28.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.229" endtime="20201029 18:16:28.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.926" endtime="20201029 18:16:28.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.924" endtime="20201029 18:16:28.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:28.236" level="INFO">${RESULT} = [{'diff': 0.00010129199999999935}, {'diff': 0.00010123600000000108}, {'diff': 0.00010070900000000091}, {'diff': 0.00010147300000000123}, {'diff': 0.00010145800000000219}, {'diff': 0.000101541999999999...</msg>
<status status="PASS" starttime="20201029 18:16:28.233" endtime="20201029 18:16:28.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:28.240" level="INFO">${ACCURACY} = {'diff': [0.00010129199999999935, 0.00010123600000000108, 0.00010070900000000091, 0.00010147300000000123, 0.00010145800000000219, 0.0001015419999999996, 0.00010125000000000065, 0.00010161100000000145,...</msg>
<status status="PASS" starttime="20201029 18:16:28.237" endtime="20201029 18:16:28.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.245" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 18:16:28.244" endtime="20201029 18:16:28.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.247" level="INFO">VALUE: [0.00010129199999999935, 0.00010123600000000108, 0.00010070900000000091, 0.00010147300000000123, 0.00010145800000000219, 0.0001015419999999996, 0.00010125000000000065, 0.00010161100000000145, 0.00010144499999999862, 0.00010156899999999927, 0.00010066699999999873, 0.00010143099999999905, 0.00010069500000000134, 0.00010141699999999948, 0.00010145799999999872, 0.00010122299999999751, 0.0001015419999999996, 0.00010090300000000288, 0.00010066699999999873, 0.00010126300000000074, 0.00010133299999999859, 0.00010133299999999859, 0.00010151400000000046, 0.00010148599999999786, 0.00010130499999999945, 0.00010126400000000021, 0.00010134699999999816, 0.00010158300000000231, 0.00010140299999999991, 0.000100722000000001, 0.00010143099999999905, 0.00010068100000000177, 0.00010147199999999829, 0.00010147300000000123, 0.00010116699999999923, 0.00010158400000000178, 0.00010158400000000178, 0.00010117999999999933, 0.00010163900000000059, 0.00010117999999999933, 0.00010140299999999991, 0.00010069500000000134, 0.0001015549999999997, 0.0001006809999999983, 0.00010143099999999905, 0.00010159699999999841, 0.00010156999999999874, 0.00010133399999999806, 0.00010118100000000227, 0.000100722000000001]</msg>
<status status="PASS" starttime="20201029 18:16:28.246" endtime="20201029 18:16:28.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.241" endtime="20201029 18:16:28.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:28.253" endtime="20201029 18:16:28.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.251" endtime="20201029 18:16:28.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.250" endtime="20201029 18:16:28.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.889" endtime="20201029 18:16:28.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.889" endtime="20201029 18:16:28.273"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.282" endtime="20201029 18:16:28.304"></status>
</kw>
<msg timestamp="20201029 18:16:28.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.281" endtime="20201029 18:16:28.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.306" endtime="20201029 18:16:28.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.309" endtime="20201029 18:16:28.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.278" endtime="20201029 18:16:28.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.276" endtime="20201029 18:16:28.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.318" endtime="20201029 18:16:28.604"></status>
</kw>
<msg timestamp="20201029 18:16:28.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025732264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025834958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.316" endtime="20201029 18:16:28.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025732264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025834958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.609" endtime="20201029 18:16:28.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.617" endtime="20201029 18:16:28.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.314" endtime="20201029 18:16:28.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.312" endtime="20201029 18:16:28.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:28.624" level="INFO">${RESULT} = [{'diff': 0.0001026940000000004}, {'diff': 0.00010166600000000026}, {'diff': 0.00010167999999999983}, {'diff': 0.00010243000000000058}, {'diff': 0.00010257000000000321}, {'diff': 0.000102513999999998}...</msg>
<status status="PASS" starttime="20201029 18:16:28.621" endtime="20201029 18:16:28.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:28.628" level="INFO">${ACCURACY} = {'diff': [0.0001026940000000004, 0.00010166600000000026, 0.00010167999999999983, 0.00010243000000000058, 0.00010257000000000321, 0.000102513999999998, 0.00010169499999999887, 0.00010230599999999992, 0...</msg>
<status status="PASS" starttime="20201029 18:16:28.625" endtime="20201029 18:16:28.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.633" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 18:16:28.632" endtime="20201029 18:16:28.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.635" level="INFO">VALUE: [0.0001026940000000004, 0.00010166600000000026, 0.00010167999999999983, 0.00010243000000000058, 0.00010257000000000321, 0.000102513999999998, 0.00010169499999999887, 0.00010230599999999992, 0.00010172199999999854, 0.00010252800000000103, 0.00010251400000000147, 0.00010229100000000088, 0.00010240199999999797, 0.00010230500000000045, 0.00010172199999999854, 0.00010222199999999904, 0.00010237500000000177, 0.00010256900000000027, 0.00010224999999999818, 0.00010170799999999897, 0.00010262499999999855, 0.00010249999999999843, 0.00010224999999999818, 0.00010240300000000091, 0.00010252799999999757, 0.00010226399999999775, 0.0001025550000000007, 0.0001021809999999998, 0.00010251300000000199, 0.00010240299999999744, 0.00010259699999999941, 0.0001025000000000019, 0.00010245799999999972, 0.00010190200000000094, 0.0001016939999999994, 0.00010225000000000165, 0.00010251400000000147, 0.00010168100000000277, 0.00010169500000000234, 0.00010222199999999904, 0.00010263899999999812, 0.00010222199999999904, 0.00010237500000000177, 0.00010258399999999931, 0.00010230599999999992, 0.00010245799999999972, 0.00010233299999999959, 0.00010175000000000115, 0.00010261100000000245, 0.00010247200000000276]</msg>
<status status="PASS" starttime="20201029 18:16:28.634" endtime="20201029 18:16:28.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.629" endtime="20201029 18:16:28.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:28.641" endtime="20201029 18:16:28.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.640" endtime="20201029 18:16:28.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.638" endtime="20201029 18:16:28.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.274" endtime="20201029 18:16:28.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.274" endtime="20201029 18:16:28.662"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.671" endtime="20201029 18:16:28.690"></status>
</kw>
<msg timestamp="20201029 18:16:28.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.669" endtime="20201029 18:16:28.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.692" endtime="20201029 18:16:28.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.695" endtime="20201029 18:16:28.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.666" endtime="20201029 18:16:28.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.664" endtime="20201029 18:16:28.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.704" endtime="20201029 18:16:28.991"></status>
</kw>
<msg timestamp="20201029 18:16:28.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.702" endtime="20201029 18:16:28.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.995" endtime="20201029 18:16:29.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.003" endtime="20201029 18:16:29.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.700" endtime="20201029 18:16:29.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.698" endtime="20201029 18:16:29.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.010" level="INFO">${RESULT} = [{'diff': 0.00010326399999999875}, {'diff': 0.00010333300000000059}, {'diff': 0.00010362500000000302}, {'diff': 0.00010347200000000029}, {'diff': 0.00010336099999999973}, {'diff': 0.000102694999999999...</msg>
<status status="PASS" starttime="20201029 18:16:29.007" endtime="20201029 18:16:29.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:29.015" level="INFO">${ACCURACY} = {'diff': [0.00010326399999999875, 0.00010333300000000059, 0.00010362500000000302, 0.00010347200000000029, 0.00010336099999999973, 0.00010269499999999987, 0.00010359799999999988, 0.000103513999999999, ...</msg>
<status status="PASS" starttime="20201029 18:16:29.011" endtime="20201029 18:16:29.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.020" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 18:16:29.019" endtime="20201029 18:16:29.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.022" level="INFO">VALUE: [0.00010326399999999875, 0.00010333300000000059, 0.00010362500000000302, 0.00010347200000000029, 0.00010336099999999973, 0.00010269499999999987, 0.00010359799999999988, 0.000103513999999999, 0.00010358400000000031, 0.00010348599999999986, 0.00010329199999999789, 0.00010329099999999841, 0.00010327800000000179, 0.00010333299999999712, 0.00010352800000000204, 0.00010323600000000308, 0.0001026940000000004, 0.00010325000000000265, 0.00010341699999999801, 0.00010330600000000092, 0.0001033749999999993, 0.00010320800000000047, 0.00010362499999999955, 0.00010316700000000123, 0.0001033619999999992, 0.00010359700000000041, 0.00010356900000000127, 0.00010354100000000213, 0.00010272199999999954, 0.00010291599999999804, 0.00010320899999999994, 0.00010293100000000055, 0.00010263899999999812, 0.0001026940000000004, 0.00010361099999999998, 0.00010327799999999832, 0.00010322200000000004, 0.0001033749999999993, 0.0001027359999999991, 0.00010341700000000148, 0.00010269499999999987, 0.00010266600000000126, 0.0001026940000000004, 0.00010358299999999737, 0.00010356900000000127, 0.00010341599999999854, 0.00010270799999999997, 0.00010361099999999998, 0.00010316700000000123, 0.00010358300000000084]</msg>
<status status="PASS" starttime="20201029 18:16:29.021" endtime="20201029 18:16:29.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.016" endtime="20201029 18:16:29.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.027" endtime="20201029 18:16:29.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.026" endtime="20201029 18:16:29.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.025" endtime="20201029 18:16:29.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.663" endtime="20201029 18:16:29.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.662" endtime="20201029 18:16:29.048"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.057" endtime="20201029 18:16:29.077"></status>
</kw>
<msg timestamp="20201029 18:16:29.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.056" endtime="20201029 18:16:29.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.079" endtime="20201029 18:16:29.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.081" endtime="20201029 18:16:29.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.053" endtime="20201029 18:16:29.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.051" endtime="20201029 18:16:29.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.091" endtime="20201029 18:16:29.376"></status>
</kw>
<msg timestamp="20201029 18:16:29.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02267225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:29.089" endtime="20201029 18:16:29.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02267225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:29.381" endtime="20201029 18:16:29.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.389" endtime="20201029 18:16:29.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.086" endtime="20201029 18:16:29.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.085" endtime="20201029 18:16:29.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.395" level="INFO">${RESULT} = [{'diff': 0.00010429200000000236}, {'diff': 0.00010430600000000192}, {'diff': 0.0001043750000000003}, {'diff': 0.0001042360000000006}, {'diff': 0.00010445900000000119}, {'diff': 0.00010461100000000098...</msg>
<status status="PASS" starttime="20201029 18:16:29.392" endtime="20201029 18:16:29.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:29.400" level="INFO">${ACCURACY} = {'diff': [0.00010429200000000236, 0.00010430600000000192, 0.0001043750000000003, 0.0001042360000000006, 0.00010445900000000119, 0.00010461100000000098, 0.00010368099999999783, 0.00010391700000000198, ...</msg>
<status status="PASS" starttime="20201029 18:16:29.396" endtime="20201029 18:16:29.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.405" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 18:16:29.404" endtime="20201029 18:16:29.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.408" level="INFO">VALUE: [0.00010429200000000236, 0.00010430600000000192, 0.0001043750000000003, 0.0001042360000000006, 0.00010445900000000119, 0.00010461100000000098, 0.00010368099999999783, 0.00010391700000000198, 0.00010455499999999923, 0.00010369399999999793, 0.00010374999999999968, 0.00010438899999999987, 0.0001036940000000014, 0.00010422200000000104, 0.00010369399999999793, 0.00010422200000000104, 0.00010420800000000147, 0.00010393099999999808, 0.00010434700000000116, 0.00010391699999999851, 0.00010456999999999828, 0.00010393100000000155, 0.00010444499999999815, 0.00010450000000000043, 0.000104207999999998, 0.00010444400000000215, 0.00010391599999999904, 0.0001045550000000027, 0.00010420800000000147, 0.0001041940000000019, 0.00010425000000000018, 0.00010372200000000054, 0.00010390299999999894, 0.00010434699999999769, 0.00010469399999999893, 0.00010434700000000116, 0.00010438899999999987, 0.00010440299999999944, 0.00010430599999999846, 0.00010368000000000183, 0.00010448600000000086, 0.00010422199999999757, 0.00010434699999999769, 0.00010462500000000055, 0.00010363899999999912, 0.00010437499999999683, 0.00010363899999999912, 0.00010440299999999944, 0.0001042360000000006, 0.00010457000000000174]</msg>
<status status="PASS" starttime="20201029 18:16:29.406" endtime="20201029 18:16:29.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.401" endtime="20201029 18:16:29.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.413" endtime="20201029 18:16:29.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.411" endtime="20201029 18:16:29.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.410" endtime="20201029 18:16:29.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.049" endtime="20201029 18:16:29.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.049" endtime="20201029 18:16:29.433"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.442" endtime="20201029 18:16:29.463"></status>
</kw>
<msg timestamp="20201029 18:16:29.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.441" endtime="20201029 18:16:29.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.464" endtime="20201029 18:16:29.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.467" endtime="20201029 18:16:29.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.438" endtime="20201029 18:16:29.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.436" endtime="20201029 18:16:29.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.476" endtime="20201029 18:16:29.777"></status>
</kw>
<msg timestamp="20201029 18:16:29.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022865764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02297075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:29.474" endtime="20201029 18:16:29.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022865764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02297075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:29.785" endtime="20201029 18:16:29.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.793" endtime="20201029 18:16:29.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.472" endtime="20201029 18:16:29.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.470" endtime="20201029 18:16:29.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.799" level="INFO">${RESULT} = [{'diff': 0.00010498600000000136}, {'diff': 0.00010470800000000197}, {'diff': 0.00010559700000000241}, {'diff': 0.00010533299999999912}, {'diff': 0.00010541700000000001}, {'diff': 0.000105583999999998...</msg>
<status status="PASS" starttime="20201029 18:16:29.796" endtime="20201029 18:16:29.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:29.803" level="INFO">${ACCURACY} = {'diff': [0.00010498600000000136, 0.00010470800000000197, 0.00010559700000000241, 0.00010533299999999912, 0.00010541700000000001, 0.00010558399999999885, 0.00010475000000000068, 0.0001047079999999985,...</msg>
<status status="PASS" starttime="20201029 18:16:29.800" endtime="20201029 18:16:29.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.808" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 18:16:29.807" endtime="20201029 18:16:29.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.810" level="INFO">VALUE: [0.00010498600000000136, 0.00010470800000000197, 0.00010559700000000241, 0.00010533299999999912, 0.00010541700000000001, 0.00010558399999999885, 0.00010475000000000068, 0.0001047079999999985, 0.00010540300000000044, 0.00010470900000000144, 0.0001052360000000016, 0.00010520800000000247, 0.00010566600000000079, 0.00010522200000000204, 0.00010548600000000186, 0.00010555499999999676, 0.00010544399999999968, 0.00010544399999999968, 0.00010490299999999994, 0.00010530600000000293, 0.00010547199999999882, 0.00010470900000000144, 0.00010529199999999989, 0.00010534800000000163, 0.00010541700000000001, 0.00010465200000000022, 0.00010491600000000004, 0.00010534700000000216, 0.00010558299999999937, 0.0001052360000000016, 0.00010522200000000204, 0.00010531900000000302, 0.00010531899999999955, 0.0001055689999999998, 0.00010543099999999958, 0.00010548600000000186, 0.00010526400000000075, 0.00010561099999999851, 0.0001055559999999997, 0.00010561099999999851, 0.00010537499999999783, 0.00010562500000000155, 0.00010530499999999998, 0.00010526300000000127, 0.00010533300000000259, 0.00010530599999999946, 0.00010554099999999719, 0.00010563899999999765, 0.00010522199999999857, 0.00010470800000000197]</msg>
<status status="PASS" starttime="20201029 18:16:29.809" endtime="20201029 18:16:29.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.804" endtime="20201029 18:16:29.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.816" endtime="20201029 18:16:29.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.815" endtime="20201029 18:16:29.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.813" endtime="20201029 18:16:29.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.434" endtime="20201029 18:16:29.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.434" endtime="20201029 18:16:29.837"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.845" endtime="20201029 18:16:29.865"></status>
</kw>
<msg timestamp="20201029 18:16:29.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.844" endtime="20201029 18:16:29.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.866" endtime="20201029 18:16:29.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.869" endtime="20201029 18:16:29.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.841" endtime="20201029 18:16:29.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.839" endtime="20201029 18:16:29.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.878" endtime="20201029 18:16:30.165"></status>
</kw>
<msg timestamp="20201029 18:16:30.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.876" endtime="20201029 18:16:30.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.169" endtime="20201029 18:16:30.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.178" endtime="20201029 18:16:30.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.874" endtime="20201029 18:16:30.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.872" endtime="20201029 18:16:30.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:30.184" level="INFO">${RESULT} = [{'diff': 0.0001063889999999984}, {'diff': 0.00010662499999999908}, {'diff': 0.00010663899999999865}, {'diff': 0.00010565299999999722}, {'diff': 0.00010654099999999819}, {'diff': 0.0001063190000000005...</msg>
<status status="PASS" starttime="20201029 18:16:30.181" endtime="20201029 18:16:30.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:30.189" level="INFO">${ACCURACY} = {'diff': [0.0001063889999999984, 0.00010662499999999908, 0.00010663899999999865, 0.00010565299999999722, 0.00010654099999999819, 0.00010631900000000055, 0.0001063889999999984, 0.00010575000000000168, ...</msg>
<status status="PASS" starttime="20201029 18:16:30.185" endtime="20201029 18:16:30.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.194" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 18:16:30.193" endtime="20201029 18:16:30.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.197" level="INFO">VALUE: [0.0001063889999999984, 0.00010662499999999908, 0.00010663899999999865, 0.00010565299999999722, 0.00010654099999999819, 0.00010631900000000055, 0.0001063889999999984, 0.00010575000000000168, 0.00010645800000000025, 0.00010654200000000114, 0.0001057079999999995, 0.00010663899999999865, 0.0001062499999999987, 0.00010569500000000287, 0.00010648600000000286, 0.00010622299999999904, 0.00010626400000000175, 0.00010636199999999874, 0.00010634799999999917, 0.0001062629999999988, 0.0001064019999999985, 0.00010651399999999853, 0.00010642999999999764, 0.00010662499999999908, 0.00010629200000000089, 0.00010651399999999853, 0.00010642999999999764, 0.00010626400000000175, 0.0001061949999999999, 0.00010561099999999851, 0.00010658399999999985, 0.00010647300000000276, 0.00010634799999999917, 0.00010594400000000018, 0.00010566700000000026, 0.00010630500000000098, 0.00010618000000000086, 0.00010655500000000123, 0.000106208, 0.00010633300000000012, 0.00010652800000000157, 0.00010644399999999721, 0.00010645800000000025, 0.00010573599999999864, 0.00010632000000000003, 0.00010651399999999853, 0.00010622199999999957, 0.00010581900000000005, 0.00010630600000000046, 0.0001062629999999988]</msg>
<status status="PASS" starttime="20201029 18:16:30.195" endtime="20201029 18:16:30.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.190" endtime="20201029 18:16:30.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:30.202" endtime="20201029 18:16:30.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.200" endtime="20201029 18:16:30.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.199" endtime="20201029 18:16:30.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.838" endtime="20201029 18:16:30.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.837" endtime="20201029 18:16:30.222"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.232" endtime="20201029 18:16:30.251"></status>
</kw>
<msg timestamp="20201029 18:16:30.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.230" endtime="20201029 18:16:30.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.253" endtime="20201029 18:16:30.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.255" endtime="20201029 18:16:30.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.227" endtime="20201029 18:16:30.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.225" endtime="20201029 18:16:30.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.265" endtime="20201029 18:16:30.571"></status>
</kw>
<msg timestamp="20201029 18:16:30.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.263" endtime="20201029 18:16:30.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.581" endtime="20201029 18:16:30.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.600" endtime="20201029 18:16:30.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.260" endtime="20201029 18:16:30.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.259" endtime="20201029 18:16:30.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:30.606" level="INFO">${RESULT} = [{'diff': 0.00010772300000000054}, {'diff': 0.00010749999999999996}, {'diff': 0.00010718000000000186}, {'diff': 0.00010747199999999735}, {'diff': 0.00010749999999999996}, {'diff': 0.000107611000000000...</msg>
<status status="PASS" starttime="20201029 18:16:30.603" endtime="20201029 18:16:30.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:30.611" level="INFO">${ACCURACY} = {'diff': [0.00010772300000000054, 0.00010749999999999996, 0.00010718000000000186, 0.00010747199999999735, 0.00010749999999999996, 0.00010761100000000051, 0.00010669400000000093, 0.00010729199999999842...</msg>
<status status="PASS" starttime="20201029 18:16:30.607" endtime="20201029 18:16:30.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.615" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 18:16:30.614" endtime="20201029 18:16:30.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.618" level="INFO">VALUE: [0.00010772300000000054, 0.00010749999999999996, 0.00010718000000000186, 0.00010747199999999735, 0.00010749999999999996, 0.00010761100000000051, 0.00010669400000000093, 0.00010729199999999842, 0.00010762500000000008, 0.00010741700000000201, 0.00010730600000000146, 0.00010733399999999713, 0.00010748600000000039, 0.00010668099999999736, 0.00010727800000000232, 0.00010763800000000018, 0.00010672299999999954, 0.0001072499999999997, 0.00010747199999999735, 0.0001074019999999995, 0.00010751399999999953, 0.00010736099999999679, 0.00010762500000000008, 0.0001067080000000005, 0.00010749999999999996, 0.00010730599999999799, 0.00010718100000000133, 0.00010734700000000069, 0.00010758399999999738, 0.00010726400000000275, 0.00010672299999999954, 0.00010761100000000051, 0.00010749999999999996, 0.00010716599999999882, 0.00010673599999999964, 0.0001075279999999991, 0.0001073889999999994, 0.00010744399999999821, 0.00010749999999999996, 0.00010672200000000007, 0.0001072499999999997, 0.00010741700000000201, 0.00010743099999999811, 0.00010733399999999713, 0.0001071950000000009, 0.00010730599999999799, 0.00010745800000000125, 0.00010759800000000042, 0.00010662499999999908, 0.00010763899999999965]</msg>
<status status="PASS" starttime="20201029 18:16:30.616" endtime="20201029 18:16:30.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.612" endtime="20201029 18:16:30.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:30.623" endtime="20201029 18:16:30.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.621" endtime="20201029 18:16:30.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.620" endtime="20201029 18:16:30.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.223" endtime="20201029 18:16:30.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.223" endtime="20201029 18:16:30.644"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.653" endtime="20201029 18:16:30.674"></status>
</kw>
<msg timestamp="20201029 18:16:30.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.651" endtime="20201029 18:16:30.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.675" endtime="20201029 18:16:30.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.678" endtime="20201029 18:16:30.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.648" endtime="20201029 18:16:30.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.646" endtime="20201029 18:16:30.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.687" endtime="20201029 18:16:30.973"></status>
</kw>
<msg timestamp="20201029 18:16:30.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023337875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023445889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.686" endtime="20201029 18:16:30.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023337875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023445889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.977" endtime="20201029 18:16:30.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.985" endtime="20201029 18:16:30.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.683" endtime="20201029 18:16:30.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.681" endtime="20201029 18:16:30.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:30.992" level="INFO">${RESULT} = [{'diff': 0.00010801400000000003}, {'diff': 0.00010856899999999933}, {'diff': 0.0001082219999999981}, {'diff': 0.00010858300000000237}, {'diff': 0.00010845799999999878}, {'diff': 0.0001084439999999992...</msg>
<status status="PASS" starttime="20201029 18:16:30.989" endtime="20201029 18:16:30.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:30.996" level="INFO">${ACCURACY} = {'diff': [0.00010801400000000003, 0.00010856899999999933, 0.0001082219999999981, 0.00010858300000000237, 0.00010845799999999878, 0.00010844399999999921, 0.00010841700000000301, 0.00010847200000000182,...</msg>
<status status="PASS" starttime="20201029 18:16:30.993" endtime="20201029 18:16:30.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.001" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 18:16:31.000" endtime="20201029 18:16:31.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.003" level="INFO">VALUE: [0.00010801400000000003, 0.00010856899999999933, 0.0001082219999999981, 0.00010858300000000237, 0.00010845799999999878, 0.00010844399999999921, 0.00010841700000000301, 0.00010847200000000182, 0.00010832000000000203, 0.00010843100000000258, 0.00010818100000000233, 0.00010791699999999904, 0.00010858399999999838, 0.00010777799999999935, 0.00010861100000000151, 0.00010772200000000107, 0.00010852700000000062, 0.00010820799999999853, 0.00010855499999999976, 0.00010831899999999908, 0.00010849999999999749, 0.00010836099999999779, 0.00010862499999999761, 0.00010848599999999792, 0.00010829200000000289, 0.00010851400000000053, 0.00010830600000000246, 0.00010850000000000096, 0.00010823700000000061, 0.00010845799999999878, 0.00010855599999999924, 0.00010822300000000104, 0.00010859699999999847, 0.00010848600000000139, 0.00010819399999999896, 0.00010848599999999792, 0.00010866699999999979, 0.00010766700000000226, 0.00010836100000000126, 0.00010837500000000083, 0.00010851400000000053, 0.0001085699999999988, 0.00010779099999999944, 0.00010827799999999985, 0.00010855599999999924, 0.00010841699999999954, 0.00010827700000000037, 0.000108208000000002, 0.00010851300000000105, 0.00010862500000000108]</msg>
<status status="PASS" starttime="20201029 18:16:31.002" endtime="20201029 18:16:31.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.997" endtime="20201029 18:16:31.006"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:31.009" endtime="20201029 18:16:31.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.008" endtime="20201029 18:16:31.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.007" endtime="20201029 18:16:31.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.645" endtime="20201029 18:16:31.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.644" endtime="20201029 18:16:31.030"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.039" endtime="20201029 18:16:31.059"></status>
</kw>
<msg timestamp="20201029 18:16:31.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.038" endtime="20201029 18:16:31.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.061" endtime="20201029 18:16:31.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.064" endtime="20201029 18:16:31.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.035" endtime="20201029 18:16:31.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.033" endtime="20201029 18:16:31.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.074" endtime="20201029 18:16:31.360"></status>
</kw>
<msg timestamp="20201029 18:16:31.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022796389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022905611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.073" endtime="20201029 18:16:31.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022796389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022905611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.364" endtime="20201029 18:16:31.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.372" endtime="20201029 18:16:31.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.070" endtime="20201029 18:16:31.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.068" endtime="20201029 18:16:31.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:31.379" level="INFO">${RESULT} = [{'diff': 0.0001092219999999991}, {'diff': 0.00010862499999999761}, {'diff': 0.00010919499999999943}, {'diff': 0.00010868099999999936}, {'diff': 0.000109208999999999}, {'diff': 0.00010931999999999956}...</msg>
<status status="PASS" starttime="20201029 18:16:31.376" endtime="20201029 18:16:31.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:31.384" level="INFO">${ACCURACY} = {'diff': [0.0001092219999999991, 0.00010862499999999761, 0.00010919499999999943, 0.00010868099999999936, 0.000109208999999999, 0.00010931999999999956, 0.00010865300000000022, 0.00010890300000000047, 0...</msg>
<status status="PASS" starttime="20201029 18:16:31.380" endtime="20201029 18:16:31.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.389" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 18:16:31.388" endtime="20201029 18:16:31.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.391" level="INFO">VALUE: [0.0001092219999999991, 0.00010862499999999761, 0.00010919499999999943, 0.00010868099999999936, 0.000109208999999999, 0.00010931999999999956, 0.00010865300000000022, 0.00010890300000000047, 0.00010891600000000057, 0.00010927800000000085, 0.0001095829999999999, 0.00010929100000000094, 0.00010951400000000153, 0.00010863900000000065, 0.0001092219999999991, 0.0001095280000000011, 0.00010929199999999695, 0.00010945799999999978, 0.0001095829999999999, 0.00010936100000000226, 0.00010934800000000217, 0.00010952799999999763, 0.00010919499999999943, 0.00010945899999999925, 0.00010936200000000174, 0.0001092219999999991, 0.0001089159999999971, 0.00010931900000000008, 0.00010959699999999947, 0.00010926400000000128, 0.00010948600000000239, 0.00010912499999999811, 0.00010948599999999892, 0.00010944499999999968, 0.0001092219999999991, 0.0001095699999999998, 0.00010891700000000004, 0.00010933399999999913, 0.00010926399999999781, 0.00010866699999999979, 0.00010918000000000039, 0.00010865200000000075, 0.00010926400000000128, 0.00010923599999999867, 0.00010962499999999861, 0.00010962499999999861, 0.00010937500000000183, 0.00010961100000000251, 0.0001095699999999998, 0.00010938899999999793]</msg>
<status status="PASS" starttime="20201029 18:16:31.390" endtime="20201029 18:16:31.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.385" endtime="20201029 18:16:31.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:31.396" endtime="20201029 18:16:31.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.395" endtime="20201029 18:16:31.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.394" endtime="20201029 18:16:31.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.031" endtime="20201029 18:16:31.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.031" endtime="20201029 18:16:31.417"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.426" endtime="20201029 18:16:31.446"></status>
</kw>
<msg timestamp="20201029 18:16:31.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.424" endtime="20201029 18:16:31.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.448" endtime="20201029 18:16:31.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.451" endtime="20201029 18:16:31.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.422" endtime="20201029 18:16:31.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.420" endtime="20201029 18:16:31.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.460" endtime="20201029 18:16:31.748"></status>
</kw>
<msg timestamp="20201029 18:16:31.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.458" endtime="20201029 18:16:31.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.752" endtime="20201029 18:16:31.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.760" endtime="20201029 18:16:31.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.456" endtime="20201029 18:16:31.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.454" endtime="20201029 18:16:31.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:31.767" level="INFO">${RESULT} = [{'diff': 0.00010987499999999886}, {'diff': 0.00011040300000000197}, {'diff': 0.00011036099999999979}, {'diff': 0.00011026399999999881}, {'diff': 0.00011029199999999795}, {'diff': 0.000109736000000002...</msg>
<status status="PASS" starttime="20201029 18:16:31.764" endtime="20201029 18:16:31.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:31.771" level="INFO">${ACCURACY} = {'diff': [0.00010987499999999886, 0.00011040300000000197, 0.00011036099999999979, 0.00011026399999999881, 0.00011029199999999795, 0.00010973600000000264, 0.00011031999999999709, 0.00011051399999999906...</msg>
<status status="PASS" starttime="20201029 18:16:31.768" endtime="20201029 18:16:31.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.776" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 18:16:31.775" endtime="20201029 18:16:31.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.778" level="INFO">VALUE: [0.00010987499999999886, 0.00011040300000000197, 0.00011036099999999979, 0.00011026399999999881, 0.00011029199999999795, 0.00010973600000000264, 0.00011031999999999709, 0.00011051399999999906, 0.00011030599999999752, 0.00011029200000000142, 0.0001102220000000001, 0.00011047299999999982, 0.00011016699999999782, 0.00010974999999999874, 0.00011056899999999786, 0.0001102769999999989, 0.00011054100000000219, 0.00011026400000000228, 0.00010973599999999917, 0.0001097219999999996, 0.00010966700000000079, 0.00011020800000000053, 0.00011037499999999936, 0.00011036099999999979, 0.00011033400000000013, 0.000110209, 0.00011036199999999927, 0.00010968100000000036, 0.00011040300000000197, 0.00010965199999999828, 0.0001102220000000001, 0.00011031899999999761, 0.00011027700000000237, 0.00011047200000000035, 0.00011041700000000154, 0.00011038899999999893, 0.0001105280000000021, 0.00010962500000000208, 0.00011034700000000022, 0.00011041700000000154, 0.00011038899999999893, 0.00011061100000000004, 0.00011062499999999961, 0.00011062499999999961, 0.0001104159999999986, 0.00011040199999999903, 0.00011018000000000139, 0.00011019399999999749, 0.00011038899999999893, 0.0001097219999999996]</msg>
<status status="PASS" starttime="20201029 18:16:31.777" endtime="20201029 18:16:31.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.772" endtime="20201029 18:16:31.780"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:31.784" endtime="20201029 18:16:31.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.782" endtime="20201029 18:16:31.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.781" endtime="20201029 18:16:31.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.418" endtime="20201029 18:16:31.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.418" endtime="20201029 18:16:31.804"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.813" endtime="20201029 18:16:31.836"></status>
</kw>
<msg timestamp="20201029 18:16:31.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.812" endtime="20201029 18:16:31.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.838" endtime="20201029 18:16:31.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.840" endtime="20201029 18:16:31.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.809" endtime="20201029 18:16:31.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.807" endtime="20201029 18:16:31.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.850" endtime="20201029 18:16:32.137"></status>
</kw>
<msg timestamp="20201029 18:16:32.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025989139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026100736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.848" endtime="20201029 18:16:32.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025989139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026100736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.141" endtime="20201029 18:16:32.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.150" endtime="20201029 18:16:32.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.845" endtime="20201029 18:16:32.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.844" endtime="20201029 18:16:32.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.156" level="INFO">${RESULT} = [{'diff': 0.000111596999999998}, {'diff': 0.00011126399999999981}, {'diff': 0.00011119500000000143}, {'diff': 0.00011137500000000036}, {'diff': 0.00011161100000000104}, {'diff': 0.00011143099999999864...</msg>
<status status="PASS" starttime="20201029 18:16:32.153" endtime="20201029 18:16:32.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:32.160" level="INFO">${ACCURACY} = {'diff': [0.000111596999999998, 0.00011126399999999981, 0.00011119500000000143, 0.00011137500000000036, 0.00011161100000000104, 0.00011143099999999864, 0.00011129199999999895, 0.00011073600000000017, ...</msg>
<status status="PASS" starttime="20201029 18:16:32.157" endtime="20201029 18:16:32.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.165" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 18:16:32.164" endtime="20201029 18:16:32.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.168" level="INFO">VALUE: [0.000111596999999998, 0.00011126399999999981, 0.00011119500000000143, 0.00011137500000000036, 0.00011161100000000104, 0.00011143099999999864, 0.00011129199999999895, 0.00011073600000000017, 0.00011152799999999963, 0.00011123700000000014, 0.00011133299999999818, 0.00011070800000000103, 0.00011115199999999978, 0.00011069400000000146, 0.00011117999999999892, 0.0001115419999999992, 0.00011131899999999861, 0.00011127799999999938, 0.0001112220000000011, 0.00011161100000000104, 0.00011130599999999852, 0.00011147199999999788, 0.00011130600000000199, 0.00011073600000000017, 0.00011073600000000017, 0.00011134700000000122, 0.00011134700000000122, 0.0001107359999999967, 0.00011066699999999832, 0.0001107220000000006, 0.00011129200000000242, 0.00011119400000000196, 0.00011119499999999796, 0.00011156999999999834, 0.00011127800000000285, 0.00011130600000000199, 0.0001115419999999992, 0.00011141699999999907, 0.00011133299999999818, 0.00011065300000000222, 0.00011148600000000092, 0.00011072199999999713, 0.00011148600000000092, 0.00011070799999999756, 0.00011137500000000036, 0.00011073600000000017, 0.00011144399999999527, 0.00011126399999999981, 0.00011131900000000555, 0.00011120799999999459]</msg>
<status status="PASS" starttime="20201029 18:16:32.166" endtime="20201029 18:16:32.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.161" endtime="20201029 18:16:32.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:32.174" endtime="20201029 18:16:32.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.172" endtime="20201029 18:16:32.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.171" endtime="20201029 18:16:32.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.805" endtime="20201029 18:16:32.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.805" endtime="20201029 18:16:32.194"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.203" endtime="20201029 18:16:32.223"></status>
</kw>
<msg timestamp="20201029 18:16:32.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.202" endtime="20201029 18:16:32.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.225" endtime="20201029 18:16:32.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.228" endtime="20201029 18:16:32.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.199" endtime="20201029 18:16:32.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.197" endtime="20201029 18:16:32.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.237" endtime="20201029 18:16:32.523"></status>
</kw>
<msg timestamp="20201029 18:16:32.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022807319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.235" endtime="20201029 18:16:32.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022807319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.527" endtime="20201029 18:16:32.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.536" endtime="20201029 18:16:32.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.233" endtime="20201029 18:16:32.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.231" endtime="20201029 18:16:32.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.542" level="INFO">${RESULT} = [{'diff': 0.00011244399999999974}, {'diff': 0.00011179199999999945}, {'diff': 0.00011256900000000333}, {'diff': 0.00011234699999999875}, {'diff': 0.00011256899999999986}, {'diff': 0.000112596999999999...</msg>
<status status="PASS" starttime="20201029 18:16:32.539" endtime="20201029 18:16:32.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:32.547" level="INFO">${ACCURACY} = {'diff': [0.00011244399999999974, 0.00011179199999999945, 0.00011256900000000333, 0.00011234699999999875, 0.00011256899999999986, 0.000112596999999999, 0.00011269399999999999, 0.00011168099999999889, ...</msg>
<status status="PASS" starttime="20201029 18:16:32.543" endtime="20201029 18:16:32.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.552" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 18:16:32.551" endtime="20201029 18:16:32.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.555" level="INFO">VALUE: [0.00011244399999999974, 0.00011179199999999945, 0.00011256900000000333, 0.00011234699999999875, 0.00011256899999999986, 0.000112596999999999, 0.00011269399999999999, 0.00011168099999999889, 0.00011169500000000193, 0.00011168100000000236, 0.0001125420000000002, 0.00011237500000000136, 0.0001124299999999967, 0.00011166700000000279, 0.00011244399999999974, 0.00011244399999999974, 0.00011234699999999875, 0.00011220799999999906, 0.00011229100000000047, 0.00011248599999999845, 0.00011250000000000149, 0.00011225000000000124, 0.0001123749999999979, 0.00011247200000000235, 0.00011219500000000243, 0.00011238900000000093, 0.00011258400000000238, 0.00011166699999999932, 0.00011265300000000075, 0.00011231900000000308, 0.00011254100000000072, 0.00011220799999999906, 0.0001122359999999982, 0.00011222199999999863, 0.00011172199999999813, 0.00011238899999999746, 0.0001124030000000005, 0.00011227800000000038, 0.00011256999999999934, 0.00011231999999999909, 0.00011256999999999934, 0.00011161100000000104, 0.00011249999999999802, 0.00011222300000000157, 0.00011219399999999949, 0.00011243000000000017, 0.00011219400000000296, 0.00011262500000000161, 0.00011191699999999957, 0.00011167999999999942]</msg>
<status status="PASS" starttime="20201029 18:16:32.553" endtime="20201029 18:16:32.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.548" endtime="20201029 18:16:32.556"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:32.560" endtime="20201029 18:16:32.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.558" endtime="20201029 18:16:32.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.557" endtime="20201029 18:16:32.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.195" endtime="20201029 18:16:32.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.195" endtime="20201029 18:16:32.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.729" endtime="20201029 18:16:32.581"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:53.661" endtime="20201029 18:16:32.581" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:15:13.639" endtime="20201029 18:16:32.585"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.641" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:16:32.649" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:16:33.818" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:16:32.639" endtime="20201029 18:16:33.819"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.822" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:16:33.820" endtime="20201029 18:16:33.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.638" endtime="20201029 18:16:33.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:33.825" endtime="20201029 18:16:34.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.823" endtime="20201029 18:16:34.013"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.025" endtime="20201029 18:16:34.040"></status>
</kw>
<msg timestamp="20201029 18:16:34.041" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.024" endtime="20201029 18:16:34.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.043" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.042" endtime="20201029 18:16:34.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.046" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:34.044" endtime="20201029 18:16:34.047"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:34.021" endtime="20201029 18:16:34.047"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:34.019" endtime="20201029 18:16:34.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.018" endtime="20201029 18:16:34.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:34.052" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:34.051" endtime="20201029 18:16:34.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.049" endtime="20201029 18:16:34.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.017" endtime="20201029 18:16:34.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.016" endtime="20201029 18:16:34.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.054" endtime="20201029 18:16:34.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.015" endtime="20201029 18:16:34.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.057" endtime="20201029 18:16:34.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.013" endtime="20201029 18:16:34.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.637" endtime="20201029 18:16:34.059"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:34.066" endtime="20201029 18:16:34.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.064" endtime="20201029 18:16:34.086"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.099" endtime="20201029 18:16:34.113"></status>
</kw>
<msg timestamp="20201029 18:16:34.113" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.098" endtime="20201029 18:16:34.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.116" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.115" endtime="20201029 18:16:34.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.121" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:34.118" endtime="20201029 18:16:34.121"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:34.095" endtime="20201029 18:16:34.122"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:34.092" endtime="20201029 18:16:34.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.091" endtime="20201029 18:16:34.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:34.127" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:34.126" endtime="20201029 18:16:34.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.124" endtime="20201029 18:16:34.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.090" endtime="20201029 18:16:34.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.090" endtime="20201029 18:16:34.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.128" endtime="20201029 18:16:34.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.088" endtime="20201029 18:16:34.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.086" endtime="20201029 18:16:34.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.063" endtime="20201029 18:16:34.131"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.148" endtime="20201029 18:16:40.272"></status>
</kw>
<msg timestamp="20201029 18:16:40.273" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.145" endtime="20201029 18:16:40.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.279" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.276" endtime="20201029 18:16:40.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.282" endtime="20201029 18:16:40.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.139" endtime="20201029 18:16:40.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.135" endtime="20201029 18:16:40.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:40.294" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 0, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:16:40.290" endtime="20201029 18:16:40.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.304" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:40.302" endtime="20201029 18:16:40.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.309" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:16:40.307" endtime="20201029 18:16:40.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.296" endtime="20201029 18:16:40.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.319" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:40.317" endtime="20201029 18:16:40.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.322" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:16:40.321" endtime="20201029 18:16:40.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.312" endtime="20201029 18:16:40.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.327" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:16:40.326" endtime="20201029 18:16:40.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.330" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:16:40.329" endtime="20201029 18:16:40.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.324" endtime="20201029 18:16:40.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.337" endtime="20201029 18:16:40.641"></status>
</kw>
<msg timestamp="20201029 18:16:40.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074488431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.174509583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.336" endtime="20201029 18:16:40.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074488431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.174509583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.645" endtime="20201029 18:16:40.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.653" endtime="20201029 18:16:40.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.333" endtime="20201029 18:16:40.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.331" endtime="20201029 18:16:40.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:16:40.660" level="INFO">${FILTERED} = [{'diff': 0.100021152}, {'diff': 0.10000433300000003}, {'diff': 0.10000690299999998}, {'diff': 0.10000788899999996}, {'diff': 0.10000673599999993}, {'diff': 0.10000687499999994}, {'diff': 0.1000067500...</msg>
<status status="PASS" starttime="20201029 18:16:40.657" endtime="20201029 18:16:40.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:40.664" level="INFO">${RESULT} = {'diff': [0.100021152, 0.10000433300000003, 0.10000690299999998, 0.10000788899999996, 0.10000673599999993, 0.10000687499999994, 0.10000675000000003, 0.10000693000000005, 5.419999999922709e-07, 4.71999...</msg>
<status status="PASS" starttime="20201029 18:16:40.661" endtime="20201029 18:16:40.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.669" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:16:40.668" endtime="20201029 18:16:40.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.671" level="INFO">VALUE: [0.100021152, 0.10000433300000003, 0.10000690299999998, 0.10000788899999996, 0.10000673599999993, 0.10000687499999994, 0.10000675000000003, 0.10000693000000005, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 4.729999991681666e-07, 5.409999994654413e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.73000000056345e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 18:16:40.670" endtime="20201029 18:16:40.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.665" endtime="20201029 18:16:40.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.132" endtime="20201029 18:16:40.673"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:34.060" endtime="20201029 18:16:40.674" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:40.680" endtime="20201029 18:16:40.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.679" endtime="20201029 18:16:40.700"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.715" endtime="20201029 18:16:40.729"></status>
</kw>
<msg timestamp="20201029 18:16:40.729" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.713" endtime="20201029 18:16:40.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.732" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.730" endtime="20201029 18:16:40.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.735" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:40.733" endtime="20201029 18:16:40.735"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:40.710" endtime="20201029 18:16:40.736"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:40.708" endtime="20201029 18:16:40.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.706" endtime="20201029 18:16:40.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:40.741" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:40.740" endtime="20201029 18:16:40.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.738" endtime="20201029 18:16:40.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.705" endtime="20201029 18:16:40.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.704" endtime="20201029 18:16:40.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.743" endtime="20201029 18:16:40.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.703" endtime="20201029 18:16:40.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.701" endtime="20201029 18:16:40.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.678" endtime="20201029 18:16:40.745"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.754" endtime="20201029 18:16:46.877"></status>
</kw>
<msg timestamp="20201029 18:16:46.878" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.752" endtime="20201029 18:16:46.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.883" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.880" endtime="20201029 18:16:46.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.886" endtime="20201029 18:16:46.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.750" endtime="20201029 18:16:46.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.748" endtime="20201029 18:16:46.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:46.898" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 5, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:16:46.893" endtime="20201029 18:16:46.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.907" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:46.905" endtime="20201029 18:16:46.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.911" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:16:46.909" endtime="20201029 18:16:46.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.900" endtime="20201029 18:16:46.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.924" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:46.920" endtime="20201029 18:16:46.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.929" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:16:46.927" endtime="20201029 18:16:46.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.915" endtime="20201029 18:16:46.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.937" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:16:46.935" endtime="20201029 18:16:46.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.939" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:16:46.938" endtime="20201029 18:16:46.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.932" endtime="20201029 18:16:46.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.946" endtime="20201029 18:16:47.242"></status>
</kw>
<msg timestamp="20201029 18:16:47.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063812764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163866389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.945" endtime="20201029 18:16:47.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063812764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163866389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.246" endtime="20201029 18:16:47.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.254" endtime="20201029 18:16:47.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.942" endtime="20201029 18:16:47.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.940" endtime="20201029 18:16:47.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:16:47.261" level="INFO">${FILTERED} = [{'diff': 0.10005362500000001}, {'diff': 4.7300000000083386e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.410000000205528e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 5.410000000205528e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:16:47.258" endtime="20201029 18:16:47.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:47.265" level="INFO">${RESULT} = {'diff': [0.10005362500000001, 4.7300000000083386e-07, 5.419999999922709e-07, 5.410000000205528e-07, 4.7199999997360464e-07, 5.410000000205528e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 18:16:47.262" endtime="20201029 18:16:47.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.271" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:16:47.269" endtime="20201029 18:16:47.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.273" level="INFO">VALUE: [0.10005362500000001, 4.7300000000083386e-07, 5.419999999922709e-07, 5.410000000205528e-07, 4.7199999997360464e-07, 5.410000000205528e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.420000002143155e-07, 5.419999999922709e-07, 5.410000001315751e-07, 4.7199999997360464e-07, 0.10000723600000017, 0.10000679099999976, 0.10000683300000013, 0.10000679099999976, 0.10000684800000004, 0.10000677800000002, 0.10000683400000021, 0.10000686099999978, 0.10000684699999995, 0.10000677800000002, 0.10000684699999995, 0.10000687500000005, 4.729999996122558e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:16:47.272" endtime="20201029 18:16:47.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.266" endtime="20201029 18:16:47.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.746" endtime="20201029 18:16:47.275"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:40.675" endtime="20201029 18:16:47.275" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:47.282" endtime="20201029 18:16:47.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.281" endtime="20201029 18:16:47.302"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.315" endtime="20201029 18:16:47.329"></status>
</kw>
<msg timestamp="20201029 18:16:47.330" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.314" endtime="20201029 18:16:47.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.332" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.331" endtime="20201029 18:16:47.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.336" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:47.334" endtime="20201029 18:16:47.336"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:47.311" endtime="20201029 18:16:47.337"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:47.309" endtime="20201029 18:16:47.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.307" endtime="20201029 18:16:47.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:47.341" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:47.341" endtime="20201029 18:16:47.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.338" endtime="20201029 18:16:47.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.307" endtime="20201029 18:16:47.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.306" endtime="20201029 18:16:47.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.343" endtime="20201029 18:16:47.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.305" endtime="20201029 18:16:47.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.303" endtime="20201029 18:16:47.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.279" endtime="20201029 18:16:47.346"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.356" endtime="20201029 18:16:53.480"></status>
</kw>
<msg timestamp="20201029 18:16:53.481" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.353" endtime="20201029 18:16:53.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.486" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:53.483" endtime="20201029 18:16:53.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.489" endtime="20201029 18:16:53.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.350" endtime="20201029 18:16:53.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.348" endtime="20201029 18:16:53.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:53.501" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 10, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:16:53.496" endtime="20201029 18:16:53.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.510" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:53.507" endtime="20201029 18:16:53.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.514" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:16:53.512" endtime="20201029 18:16:53.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.502" endtime="20201029 18:16:53.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.525" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:53.522" endtime="20201029 18:16:53.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.529" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:16:53.527" endtime="20201029 18:16:53.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.517" endtime="20201029 18:16:53.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.540" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:16:53.538" endtime="20201029 18:16:53.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.544" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:16:53.542" endtime="20201029 18:16:53.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.532" endtime="20201029 18:16:53.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.561" endtime="20201029 18:16:53.864"></status>
</kw>
<msg timestamp="20201029 18:16:53.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064066319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164153569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:53.557" endtime="20201029 18:16:53.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064066319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164153569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:53.868" endtime="20201029 18:16:53.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.876" endtime="20201029 18:16:53.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.551" endtime="20201029 18:16:53.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.548" endtime="20201029 18:16:53.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:16:53.883" level="INFO">${FILTERED} = [{'diff': 0.10008725}, {'diff': 0.10003182}, {'diff': 0.09991738899999997}, {'diff': 0.10000709800000002}, {'diff': 0.10000687500000005}, {'diff': 0.10000673599999998}, {'diff': 0.10000680500000003}, ...</msg>
<status status="PASS" starttime="20201029 18:16:53.879" endtime="20201029 18:16:53.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:53.890" level="INFO">${RESULT} = {'diff': [0.10008725, 0.10003182, 0.09991738899999997, 0.10000709800000002, 0.10000687500000005, 0.10000673599999998, 0.10000680500000003, 0.10000683399999999, 0.100006806, 0.1000068340000001, 0.10000...</msg>
<status status="PASS" starttime="20201029 18:16:53.884" endtime="20201029 18:16:53.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.894" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:16:53.893" endtime="20201029 18:16:53.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.897" level="INFO">VALUE: [0.10008725, 0.10003182, 0.09991738899999997, 0.10000709800000002, 0.10000687500000005, 0.10000673599999998, 0.10000680500000003, 0.10000683399999999, 0.100006806, 0.1000068340000001, 0.10000680599999989, 0.10000681899999986, 0.10000690200000006, 0.10000674999999992, 0.10000681900000008, 0.10000690299999992, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.73000000056345e-07, 0.10000732000000001, 0.10000676300000011, 0.10000681999999994, 0.1000067360000001, 0.10000690200000006, 0.10000674999999992, 0.10000681899999986, 0.10000682000000038, 0.10000691699999997, 0.10000674999999992, 0.10000681899999986, 0.1000068190000003, 0.10000691699999997, 0.1000067360000001, 0.10000691699999997, 0.1000067360000001, 0.10000691599999989, 0.10000673599999965, 0.10000690300000059, 0.10000683399999932, 0.10000681999999994, 0.1000068470000004, 0.10000681899999986, 0.1000067360000001, 0.10000697300000017, 5.409999994654413e-07, 4.7199999997360464e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 18:16:53.895" endtime="20201029 18:16:53.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.891" endtime="20201029 18:16:53.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.347" endtime="20201029 18:16:53.898"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:47.277" endtime="20201029 18:16:53.899" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:53.906" endtime="20201029 18:16:53.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.904" endtime="20201029 18:16:53.926"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.939" endtime="20201029 18:16:53.953"></status>
</kw>
<msg timestamp="20201029 18:16:53.953" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:53.937" endtime="20201029 18:16:53.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.956" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:53.954" endtime="20201029 18:16:53.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.959" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:53.957" endtime="20201029 18:16:53.959"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:53.935" endtime="20201029 18:16:53.960"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:53.932" endtime="20201029 18:16:53.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.931" endtime="20201029 18:16:53.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:53.966" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:53.965" endtime="20201029 18:16:53.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.962" endtime="20201029 18:16:53.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.930" endtime="20201029 18:16:53.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.930" endtime="20201029 18:16:53.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.968" endtime="20201029 18:16:53.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.928" endtime="20201029 18:16:53.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.926" endtime="20201029 18:16:53.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.903" endtime="20201029 18:16:53.970"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.979" endtime="20201029 18:17:00.102"></status>
</kw>
<msg timestamp="20201029 18:17:00.103" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:53.977" endtime="20201029 18:17:00.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.109" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.106" endtime="20201029 18:17:00.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.112" endtime="20201029 18:17:00.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.974" endtime="20201029 18:17:00.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.972" endtime="20201029 18:17:00.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:00.123" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 15, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:17:00.119" endtime="20201029 18:17:00.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.132" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:00.130" endtime="20201029 18:17:00.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.137" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:00.135" endtime="20201029 18:17:00.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.125" endtime="20201029 18:17:00.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.147" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:00.145" endtime="20201029 18:17:00.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.152" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:00.150" endtime="20201029 18:17:00.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.140" endtime="20201029 18:17:00.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.162" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:00.160" endtime="20201029 18:17:00.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.167" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:17:00.164" endtime="20201029 18:17:00.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.155" endtime="20201029 18:17:00.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.185" endtime="20201029 18:17:00.489"></status>
</kw>
<msg timestamp="20201029 18:17:00.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063571722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163713611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.180" endtime="20201029 18:17:00.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063571722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163713611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.494" endtime="20201029 18:17:00.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.502" endtime="20201029 18:17:00.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.174" endtime="20201029 18:17:00.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.170" endtime="20201029 18:17:00.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:00.509" level="INFO">${FILTERED} = [{'diff': 0.10014188900000001}, {'diff': 0.100035083}, {'diff': 0.09986204199999998}, {'diff': 0.10000594400000001}, {'diff': 0.10000690299999998}, {'diff': 0.10000683300000002}, {'diff': 0.1000067640...</msg>
<status status="PASS" starttime="20201029 18:17:00.505" endtime="20201029 18:17:00.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:00.513" level="INFO">${RESULT} = {'diff': [0.10014188900000001, 0.100035083, 0.09986204199999998, 0.10000594400000001, 0.10000690299999998, 0.10000683300000002, 0.10000676400000008, 0.10000690299999992, 0.10000677800000002, 0.1000069...</msg>
<status status="PASS" starttime="20201029 18:17:00.510" endtime="20201029 18:17:00.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.517" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:00.516" endtime="20201029 18:17:00.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.520" level="INFO">VALUE: [0.10014188900000001, 0.100035083, 0.09986204199999998, 0.10000594400000001, 0.10000690299999998, 0.10000683300000002, 0.10000676400000008, 0.10000690299999992, 0.10000677800000002, 0.10000690300000004, 0.10000677800000002, 0.10000691600000011, 0.10000676399999997, 0.10000690299999992, 0.10000677700000016, 0.10000691600000011, 0.10000676399999997, 0.10000690299999992, 0.1000068890000001, 0.10000680499999981, 0.1000068470000004, 5.409999999095305e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 4.73000000056345e-07, 5.419999995481817e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201029 18:17:00.518" endtime="20201029 18:17:00.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.514" endtime="20201029 18:17:00.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.971" endtime="20201029 18:17:00.522"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:53.901" endtime="20201029 18:17:00.522" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:00.529" endtime="20201029 18:17:00.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.527" endtime="20201029 18:17:00.549"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.563" endtime="20201029 18:17:00.577"></status>
</kw>
<msg timestamp="20201029 18:17:00.578" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.562" endtime="20201029 18:17:00.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.580" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.579" endtime="20201029 18:17:00.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.584" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:00.582" endtime="20201029 18:17:00.584"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:00.559" endtime="20201029 18:17:00.585"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:00.555" endtime="20201029 18:17:00.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.554" endtime="20201029 18:17:00.585"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:00.589" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:00.589" endtime="20201029 18:17:00.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.586" endtime="20201029 18:17:00.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.553" endtime="20201029 18:17:00.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.553" endtime="20201029 18:17:00.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.591" endtime="20201029 18:17:00.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.551" endtime="20201029 18:17:00.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.550" endtime="20201029 18:17:00.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.526" endtime="20201029 18:17:00.594"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.602" endtime="20201029 18:17:06.725"></status>
</kw>
<msg timestamp="20201029 18:17:06.726" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.601" endtime="20201029 18:17:06.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.732" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.728" endtime="20201029 18:17:06.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.734" endtime="20201029 18:17:06.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.598" endtime="20201029 18:17:06.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.596" endtime="20201029 18:17:06.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:06.755" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 20, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:17:06.742" endtime="20201029 18:17:06.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.764" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:06.762" endtime="20201029 18:17:06.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.770" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:06.768" endtime="20201029 18:17:06.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.757" endtime="20201029 18:17:06.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.782" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:06.779" endtime="20201029 18:17:06.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.787" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:06.784" endtime="20201029 18:17:06.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.774" endtime="20201029 18:17:06.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.798" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:06.796" endtime="20201029 18:17:06.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.803" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:17:06.801" endtime="20201029 18:17:06.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.790" endtime="20201029 18:17:06.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.820" endtime="20201029 18:17:07.118"></status>
</kw>
<msg timestamp="20201029 18:17:07.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063899819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164108736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:06.817" endtime="20201029 18:17:07.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063899819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164108736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:07.122" endtime="20201029 18:17:07.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.130" endtime="20201029 18:17:07.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.811" endtime="20201029 18:17:07.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.806" endtime="20201029 18:17:07.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:07.136" level="INFO">${FILTERED} = [{'diff': 0.10020891700000001}, {'diff': 0.10004126399999999}, {'diff': 0.09979056999999997}, {'diff': 0.10000597300000003}, {'diff': 0.10000675000000003}, {'diff': 0.100006806}, {'diff': 0.1000068189...</msg>
<status status="PASS" starttime="20201029 18:17:07.133" endtime="20201029 18:17:07.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:07.140" level="INFO">${RESULT} = {'diff': [0.10020891700000001, 0.10004126399999999, 0.09979056999999997, 0.10000597300000003, 0.10000675000000003, 0.100006806, 0.10000681899999997, 0.10000680500000003, 0.1000068329999999, 0.10000683...</msg>
<status status="PASS" starttime="20201029 18:17:07.137" endtime="20201029 18:17:07.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.145" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:07.144" endtime="20201029 18:17:07.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.147" level="INFO">VALUE: [0.10020891700000001, 0.10004126399999999, 0.09979056999999997, 0.10000597300000003, 0.10000675000000003, 0.100006806, 0.10000681899999997, 0.10000680500000003, 0.1000068329999999, 0.1000068329999999, 0.10000672200000005, 0.10000690299999992, 0.1000068329999999, 0.10000680600000011, 0.10000681899999986, 0.10000690200000006, 0.10000673599999987, 0.10000693100000002, 0.10000672200000005, 0.10000697199999986, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.419999999922709e-07, 4.73000000056345e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 5.410000003536197e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.73000000056345e-07, 5.419999995481817e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:17:07.146" endtime="20201029 18:17:07.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.141" endtime="20201029 18:17:07.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.594" endtime="20201029 18:17:07.149"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:00.524" endtime="20201029 18:17:07.149" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:07.156" endtime="20201029 18:17:07.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.154" endtime="20201029 18:17:07.177"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.190" endtime="20201029 18:17:07.203"></status>
</kw>
<msg timestamp="20201029 18:17:07.204" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:07.188" endtime="20201029 18:17:07.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.206" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:07.205" endtime="20201029 18:17:07.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.209" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:07.208" endtime="20201029 18:17:07.210"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:07.186" endtime="20201029 18:17:07.210"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:07.183" endtime="20201029 18:17:07.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.182" endtime="20201029 18:17:07.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:07.215" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:07.214" endtime="20201029 18:17:07.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.212" endtime="20201029 18:17:07.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.181" endtime="20201029 18:17:07.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.181" endtime="20201029 18:17:07.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.217" endtime="20201029 18:17:07.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.179" endtime="20201029 18:17:07.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.177" endtime="20201029 18:17:07.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.153" endtime="20201029 18:17:07.219"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.227" endtime="20201029 18:17:13.349"></status>
</kw>
<msg timestamp="20201029 18:17:13.350" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:07.226" endtime="20201029 18:17:13.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.356" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:13.353" endtime="20201029 18:17:13.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.358" endtime="20201029 18:17:13.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.223" endtime="20201029 18:17:13.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.221" endtime="20201029 18:17:13.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:13.369" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 25, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:17:13.365" endtime="20201029 18:17:13.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.380" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:13.376" endtime="20201029 18:17:13.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.385" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:13.383" endtime="20201029 18:17:13.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.371" endtime="20201029 18:17:13.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.394" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:13.392" endtime="20201029 18:17:13.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.399" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:13.397" endtime="20201029 18:17:13.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.388" endtime="20201029 18:17:13.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.409" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:13.406" endtime="20201029 18:17:13.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.413" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:17:13.411" endtime="20201029 18:17:13.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.402" endtime="20201029 18:17:13.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.428" endtime="20201029 18:17:13.729"></status>
</kw>
<msg timestamp="20201029 18:17:13.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061175792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161472458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:13.425" endtime="20201029 18:17:13.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061175792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161472458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:13.734" endtime="20201029 18:17:13.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.744" endtime="20201029 18:17:13.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.420" endtime="20201029 18:17:13.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.416" endtime="20201029 18:17:13.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:13.753" level="INFO">${FILTERED} = [{'diff': 0.100296666}, {'diff': 0.10004241600000002}, {'diff': 0.099704764}, {'diff': 0.10000600000000004}, {'diff': 0.10000681900000002}, {'diff': 0.10000672199999994}, {'diff': 0.10000681999999994}...</msg>
<status status="PASS" starttime="20201029 18:17:13.749" endtime="20201029 18:17:13.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:13.760" level="INFO">${RESULT} = {'diff': [0.100296666, 0.10004241600000002, 0.099704764, 0.10000600000000004, 0.10000681900000002, 0.10000672199999994, 0.10000681999999994, 0.100006861, 0.1000067360000001, 0.100006861, 0.10000681999...</msg>
<status status="PASS" starttime="20201029 18:17:13.755" endtime="20201029 18:17:13.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.765" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:13.764" endtime="20201029 18:17:13.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.768" level="INFO">VALUE: [0.100296666, 0.10004241600000002, 0.099704764, 0.10000600000000004, 0.10000681900000002, 0.10000672199999994, 0.10000681999999994, 0.100006861, 0.1000067360000001, 0.100006861, 0.10000681999999994, 0.100006861, 0.10000675000000014, 0.10000680600000011, 0.10000673599999987, 0.10000680599999989, 0.10000672200000005, 0.100006861, 0.10000683399999999, 0.10000677800000002, 0.10000688899999988, 4.7199999997360464e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 0.10000726300000018, 0.10000674999999992, 0.10000681999999994, 0.10000686100000022, 0.10000684800000004, 0.10000677800000002, 0.10000674999999992, 0.10000686100000022, 0.10000681999999994, 0.10000687500000005, 0.10000679099999976, 0.10000679200000029, 0.10000676400000064, 0.10000688899999943, 0.10000676399999975, 0.10000688900000032, 0.1000067910000002, 0.10000677800000002, 0.10000684699999951, 0.10000681899999986, 0.10000676400000064, 0.10000684800000048, 0.10000672299999991]</msg>
<status status="PASS" starttime="20201029 18:17:13.767" endtime="20201029 18:17:13.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.761" endtime="20201029 18:17:13.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.220" endtime="20201029 18:17:13.770"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:07.151" endtime="20201029 18:17:13.770" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:16:32.596" endtime="20201029 18:17:13.777"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 18:14:30.384" endtime="20201029 18:17:13.809"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
